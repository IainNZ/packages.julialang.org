>>> 'Pkg.add("PathDistribution")' log
[ Info: Cloning cache of PathDistribution from https://github.com/chkwon/PathDistribution.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing PathDistribution v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("PathDistribution")' log
Julia Version 0.7.0-DEV.3309
Commit b96097b66f (2018-01-07 00:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     231117 s         63 s      16688 s     128778 s          2 s
       #2  3499 MHz      45459 s         88 s       8008 s     373749 s          0 s
       
  Memory: 2.93927001953125 GB (1095.5625 MB free)
  Uptime: 4338.0 sec
  Load Avg:  0.98193359375  0.9853515625  0.95458984375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PathDistribution              0.0.1
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
[ Info: Testing PathDistribution @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PathDistribution/src/monte_carlo.jl:1.
│ Use `mutable struct` instead.
└ @ nothing monte_carlo.jl:1
┌ Warning: Deprecated syntax `parametric method syntax monte_carlo_path_sampling{T <: Integer}(origin::T, destination::T, adj_mtx::Array{T, 2}, link_length_dict::Dict, N1 = 5000, N2 = 10000)` around /home/vagrant/.julia/v0.7/PathDistribution/src/monte_carlo.jl:15.
│ Use `monte_carlo_path_sampling(origin::T, destination::T, adj_mtx::Array{T, 2}, link_length_dict::Dict, N1 = 5000, N2 = 10000) where T <: Integer` instead.
└ @ nothing monte_carlo.jl:15
┌ Warning: Deprecated syntax `parametric method syntax monte_carlo_path_sampling{T <: Integer}(origin::T, destination::T, adj_mtx::Array{T, 2}, N1 = 5000, N2 = 10000)` around /home/vagrant/.julia/v0.7/PathDistribution/src/monte_carlo.jl:31.
│ Use `monte_carlo_path_sampling(origin::T, destination::T, adj_mtx::Array{T, 2}, N1 = 5000, N2 = 10000) where T <: Integer` instead.
└ @ nothing monte_carlo.jl:31
┌ Warning: Deprecated syntax `parametric method syntax monte_carlo_path_number{T <: Integer}(origin::T, destination::T, adj_mtx::Array{T, 2}, N1 = 5000, N2 = 10000)` around /home/vagrant/.julia/v0.7/PathDistribution/src/monte_carlo.jl:37.
│ Use `monte_carlo_path_number(origin::T, destination::T, adj_mtx::Array{T, 2}, N1 = 5000, N2 = 10000) where T <: Integer` instead.
└ @ nothing monte_carlo.jl:37
┌ Warning: Deprecated syntax `parametric method syntax monte_carlo_path_sampling{T <: Integer}(origin::T, destination::T, start_node::Array{T, 1}, end_node::Array{T, 1}, link_length, N1 = 5000, N2 = 10000)` around /home/vagrant/.julia/v0.7/PathDistribution/src/monte_carlo.jl:47.
│ Use `monte_carlo_path_sampling(origin::T, destination::T, start_node::Array{T, 1}, end_node::Array{T, 1}, link_length, N1 = 5000, N2 = 10000) where T <: Integer` instead.
└ @ nothing monte_carlo.jl:47
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PathDistribution/src/path_enumeration.jl:3.
│ Use `mutable struct` instead.
└ @ nothing path_enumeration.jl:3
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = path_enumeration(::Int64, ::Int64, ::Array{Int64,2}) at path_enumeration.jl:12
└ @ PathDistribution path_enumeration.jl:12
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = path_enumeration at path_enumeration.jl:27 [inlined]
└ @ Core path_enumeration.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = actual_cumulative_count(::Array{PathEnum,1}, ::Symbol) at path_enumeration.jl:61
└ @ PathDistribution path_enumeration.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = length_distribution_vector(::Array{PathSample,1}, ::Array{Int64,2}, ::Int64, ::Int64) at monte_carlo.jl:158
└ @ PathDistribution monte_carlo.jl:158
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = estimate_cumulative_count(::Array{PathSample,1}, ::Symbol) at monte_carlo.jl:67
└ @ PathDistribution monte_carlo.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = estimate_cumulative_count(::Array{PathSample,1}, ::Symbol) at monte_carlo.jl:68
└ @ PathDistribution monte_carlo.jl:68
===== Case 1 of Roberts & Kroese (2007) =====
The total number of paths:
- Full enumeration      : 397
- Monte Carlo estimation: 395.45909405718504
- Monte Carlo estimation: 396.8555133866066
- Monte Carlo estimation: 389.3684844450292
- Monte Carlo estimation: 389.38013964414677
- Monte Carlo estimation: 379.8278048803373
- Monte Carlo estimation: 406.64014791046145
┌ Warning: `round(::Type{T}, x::AbstractArray) where T` is deprecated, use `round.(T, x)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `round(::Type{T}, x::AbstractArray) where T` is deprecated, use `round.(T, x)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = path_enumeration at path_enumeration.jl:27 [inlined]
└ @ Core path_enumeration.jl:27
===== Another Example =====
The total number of paths:
- Full enumeration      : 9851
- Monte Carlo estimation: 10023.612330547452
[ Info: PathDistribution tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
