>>> 'Pkg.add("GenericSVD")' log
[ Info: Cloning cache of GenericSVD from https://github.com/JuliaMath/GenericSVD.jl.git
[ Info: Installing GenericSVD v0.1.0
[ Info: Package database updated

>>> 'Pkg.test("GenericSVD")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     117156 s         86 s       9044 s      70462 s          3 s
       #2  3500 MHz      20583 s         63 s       3450 s     207492 s          0 s
       
  Memory: 2.93927001953125 GB (834.8671875 MB free)
  Uptime: 2356.0 sec
  Load Avg:  0.92529296875  0.94140625  0.8330078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - GenericSVD                    0.1.0
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.48.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for GenericSVD...
[ Info: Cloning cache of Quaternions from https://github.com/JuliaGeometry/Quaternions.jl.git
[ Info: Installing Calculus v0.2.2
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing Quaternions v0.3.0
[ Info: Testing GenericSVD
Testing misc.jl
WARNING: importing deprecated binding Base.SVD into GenericSVD.
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/GenericSVD/src/utils.jl:1
WARNING: importing deprecated binding Base.A_mul_B! into GenericSVD.
WARNING: importing deprecated binding Base.A_mul_Bc! into GenericSVD.
WARNING: importing deprecated binding Base.A_ldiv_B! into GenericSVD.
WARNING: importing deprecated binding Base.LinAlg into GenericSVD.
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/GenericSVD/src/utils.jl:26
WARNING: importing deprecated binding Base.Void into GenericSVD.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GenericSVD/src/utils.jl:26
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead.
  likely near /home/vagrant/.julia/v0.7/GenericSVD/src/utils.jl:27
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GenericSVD/src/utils.jl:27
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/GenericSVD/src/bidiagonalize.jl:8.
│ Use `struct` instead.
└ @ nothing bidiagonalize.jl:8
WARNING: importing deprecated binding Base.Factorization into GenericSVD.
ERROR: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Factorization)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1011
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/GenericSVD/src/GenericSVD.jl:2
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1011
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:295 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/GenericSVD/src/bidiagonalize.jl:1
in expression starting at /home/vagrant/.julia/v0.7/GenericSVD/src/GenericSVD.jl:7
ERROR: LoadError: LoadError: Failed to precompile GenericSVD to /home/vagrant/.julia/lib/v0.7/GenericSVD.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] include(::String) at ./sysimg.jl:65
 [9] top-level scope at ./<missing>:5
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1011
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/GenericSVD/test/misc.jl:1
in expression starting at /home/vagrant/.julia/v0.7/GenericSVD/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for GenericSVD
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/GenericSVD/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
[ Info: Removing Calculus v0.2.2
[ Info: Removing DualNumbers v0.3.0
[ Info: Removing NaNMath v0.3.0
[ Info: Removing Quaternions v0.3.0
ERROR: GenericSVD had test errors

>>> End of log
