>>> 'Pkg.add("RingArrays")' log
INFO: Cloning cache of RingArrays from https://github.com/invenia/RingArrays.jl.git
INFO: Cloning cache of VirtualArrays from https://github.com/invenia/VirtualArrays.jl.git
INFO: Installing RingArrays v0.1.0
INFO: Installing VirtualArrays v0.1.1
INFO: Removing AxisAlgorithms v0.1.6
INFO: Removing BinDeps v0.6.0
INFO: Removing CMakeWrapper v0.0.2
INFO: Removing Calculus v0.2.2
INFO: Removing ColorTypes v0.5.2
INFO: Removing Conda v0.5.3
INFO: Removing CoordinateTransformations v0.4.1
INFO: Removing DataStructures v0.6.0
INFO: Removing DocStringExtensions v0.3.3
INFO: Removing DrakeVisualizer v0.2.1
INFO: Removing DualNumbers v0.3.0
INFO: Removing FileIO v0.5.1
INFO: Removing FixedPointNumbers v0.3.8
INFO: Removing GeometryTypes v0.4.1
INFO: Removing IJulia v1.5.1
INFO: Removing Interact v0.4.5
INFO: Removing Interpolations v0.6.2
INFO: Removing IterTools v0.1.0
INFO: Removing LCMCore v0.0.4
INFO: Removing LightXML v0.5.0
INFO: Removing MbedTLS v0.4.5
INFO: Removing MeshIO v0.1.0
INFO: Removing Meshing v0.2.0
INFO: Removing NaNMath v0.2.6
INFO: Removing Parameters v0.7.2
INFO: Removing Ratios v0.1.0
INFO: Removing Reactive v0.5.2
INFO: Removing RigidBodyDynamics v0.2.0
INFO: Removing Rotations v0.5.0
INFO: Removing SHA v0.3.3
INFO: Removing ShowItLikeYouBuildIt v0.0.1
INFO: Removing StaticArrays v0.6.0
INFO: Removing URIParser v0.1.8
INFO: Removing WoodburyMatrices v0.2.2
INFO: Removing ZMQ v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RingArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RingArrays")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (990.08984375 MB free)
Uptime: 56955.0 sec
Load Avg:  0.80859375  0.75830078125  0.85009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3638011 s       2326 s     164856 s     972108 s         81 s
#2  3500 MHz     809262 s       5539 s      80808 s    4701389 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - RingArrays                    0.1.0
2 additional packages:
 - Compat                        0.26.0
 - VirtualArrays                 0.1.1
INFO: Computing test dependencies for RingArrays...
INFO: Installing BaseTestNext v0.2.2
INFO: Installing FactCheck v0.4.3
INFO: Testing RingArrays

WARNING: deprecated syntax "inner constructor VirtualArray(...) around /home/vagrant/.julia/v0.6/VirtualArrays/src/VirtualArrays.jl:16".
Use "VirtualArray{#s1,#s2}(...) where {#s1,#s2}" instead.

WARNING: deprecated syntax "inner constructor VirtualArray(...) around /home/vagrant/.julia/v0.6/VirtualArrays/src/VirtualArrays.jl:20".
Use "VirtualArray{#s3,#s4}(...) where {#s3,#s4}" instead.

WARNING: deprecated syntax "inner constructor RingArray(...) around /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:21".
Use "RingArray{T,N}(...) where {T,N}" instead.

WARNING: deprecated syntax "abstract Result" at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:46.
Use "abstract type Result end" instead.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 1
About creating RingArray
  > bad curly braces
  > without curly braces
  > passing a size
WARNING: `isdefined(a::Array, i::Int)` is deprecated, use `isassigned(a, i)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] (::##8#113{Int64,RingArrays.RingArray{Int64,1},##7#112})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
 [3] do_fact(::##8#113{Int64,RingArrays.RingArray{Int64,1},##7#112}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
 [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 [5] (::##6#111)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:15
 [6] context(::##6#111, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##1#106)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:9
 [8] facts(::##1#106, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 1
  > passing a block size
WARNING: `isdefined(a::Array, i::Int)` is deprecated, use `isassigned(a, i)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] (::##25#130{Int64,RingArrays.RingArray{Int64,1},##24#129})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
 [3] do_fact(::##25#130{Int64,RingArrays.RingArray{Int64,1},##24#129}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
 [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 [5] (::##23#128)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:30
 [6] context(::##23#128, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##1#106)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:24
 [8] facts(::##1#106, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 1
  > passing nothing
  > passing 0 for size
  > passing a negative for size
  > having a multi dimensional array
  > having a multi dimensional array and passing data size
  > creating a RingArray of dimension of the RingArray different form the block size
49 facts verified.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 121
Getting values from RingArray
  > getting the first value
    Error :: (line:272) :: getting the first value
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##222#330{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##212#320)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:139
       [5] context(::##212#320, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:122
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting the first value without loading
    Error :: (line:272) :: getting the first value without loading
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((1,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##225#333)(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##226#334, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##223#331)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:160
       [5] context(::##223#331, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:141
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting a value in the first block
    Error :: (line:272) :: getting a value in the first block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##235#343{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##227#335)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:179
       [5] context(::##227#335, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:162
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting a value in the second block after getting a value in the first block
    Error :: (line:272) :: getting a value in the second block after getting a value in the first block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##244#352{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##236#344)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:199
       [5] context(::##236#344, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:181
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting a value in the second block first
    Error :: (line:272) :: getting a value in the second block first
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##253#361{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##245#353)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:218
       [5] context(::##245#353, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:201
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting a value in the second block first while only loading the first block
    Error :: (line:272) :: getting a value in the second block first while only loading the first block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##257#365{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##254#362)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:235
       [5] context(::##254#362, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:220
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: getting a value in the second block first while only loading the first block
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((index,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##258#366{Int64})(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##259#367, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##254#362)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:248
       [5] context(::##254#362, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:220
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting a value in any block first
    Error :: (line:272) :: getting a value in any block first
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##268#376{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##260#368)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:269
       [5] context(::##260#368, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:250
       [7] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting value from 2 d array
    Error :: (line:272) :: getting value from 2 d array
      Expression: test[test.range, 1:b_s[2]] --> expected[test.range, 1:b_s[2]]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##277#385{Tuple{Int64,Int64},RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##277#385{Tuple{Int64,Int64},RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##269#377)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:291
       [6] context(::##269#377, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:271
       [8] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
  > getting value from 2 d array like a 1 d array
  > getting value from 2 d array like a 1 d array after overflow
  > getting value from N d array like a 1 d array after overflow
  > getting the last value from N d array like a 1 d array after overflow
  > getting value from N d array
    Error :: (line:272) :: getting value from N d array
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##318#426, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##310#418)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:438
       [6] context(::##310#418, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##211#319)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:405
       [8] facts(::##211#319, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
Out of 49 total facts:
  Verified: 39
  Errored:  10
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 446
Getting values over the length (overflow) of the RingArray
  > getting the first value after overflowing
    Error :: (line:272) :: getting the first value after overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##436#488{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##428#480)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:468
       [5] context(::##428#480, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:447
       [7] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting the first value after overflowing with only before overflow
    Error :: (line:272) :: getting the first value after overflowing with only before overflow
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##440#492{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##437#489)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:489
       [5] context(::##437#489, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:470
       [7] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: getting the first value after overflowing with only before overflow
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((index,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##441#493{Int64})(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##442#494, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##437#489)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:502
       [5] context(::##437#489, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:470
       [7] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting any value after overflowing
    Error :: (line:272) :: getting any value after overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##451#503{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##443#495)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:525
       [5] context(::##443#495, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:504
       [7] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting any value after any number of overflows
    Error :: (line:272) :: getting any value after any number of overflows
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##460#512{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##452#504)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:549
       [5] context(::##452#504, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:527
       [7] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > getting value from 2 d array after overflowing
    Error :: (line:272) :: getting value from 2 d array after overflowing
      Expression: test[test.range, 1:b_s[2]] --> expected[test.range, 1:b_s[2]]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##469#521{Tuple{Int64,Int64},RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##469#521{Tuple{Int64,Int64},RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##461#513)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:572
       [6] context(::##461#513, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:551
       [8] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
  > getting value from N d array after any number of overflows
    Error :: (line:272) :: getting value from N d array after any number of overflows
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##478#530, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##470#522)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:609
       [6] context(::##470#522, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##427#479)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:574
       [8] facts(::##427#479, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
Out of 23 total facts:
  Verified: 16
  Errored:  7
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 617
Getting data views
  > looking at a small portion of the first block
    Error :: (line:272) :: looking at a small portion of the first block
      Expression: typeof(test[range]) --> VirtualArrays.VirtualArray{Int, 1}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##534#604{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##532#602)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:637
       [5] context(::##532#602, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:618
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of the first block
      Expression: test[range] --> (test.blocks[block_picked])[range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##536#606{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##532#602)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:638
       [5] context(::##532#602, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:618
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of the first block
      Expression: test[range] --> test[range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##538#608{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##532#602)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:639
       [5] context(::##532#602, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:618
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of the first block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##540#610{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##532#602)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:640
       [5] context(::##532#602, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:618
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > trying to change a value in a view
    Failure :: (line:308) :: trying to change a value in a view :: wrong exception was thrown
      Expression: (test[range])[1] = 3
        Expected: ErrorException
        Occurred: UndefVarError
  > looking at a small portion of the first block without loading
    Failure :: (line:308) :: looking at a small portion of the first block without loading :: wrong exception was thrown
      Expression: test[ring_range]
        Expected: RingArrays.RingArrayBoundsError
        Occurred: UndefVarError
    Error :: (line:272) :: looking at a small portion of the first block without loading
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((ring_range,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##545#615{UnitRange{Int64}})(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##546#616, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##543#613)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:688
       [5] context(::##543#613, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:663
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > looking at a the whole portion of the first block
    Error :: (line:272) :: looking at a the whole portion of the first block
      Expression: typeof(test[range]) --> VirtualArrays.VirtualArray{Int, 1}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##549#619{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##547#617)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:709
       [5] context(::##547#617, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:690
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a the whole portion of the first block
      Expression: test[range] --> (test.blocks[block_picked])[range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##551#621{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##547#617)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:710
       [5] context(::##547#617, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:690
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a the whole portion of the first block
      Expression: test[range] --> test[range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##553#623{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##547#617)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:711
       [5] context(::##547#617, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:690
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a the whole portion of the first block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##555#625{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##547#617)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:712
       [5] context(::##547#617, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:690
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > looking at a small portion of any block
    Error :: (line:272) :: looking at a small portion of any block
      Expression: typeof(test[ring_range]) --> VirtualArrays.VirtualArray{Int, 1}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##558#628{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##556#626)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:734
       [5] context(::##556#626, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:714
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of any block
      Expression: test[ring_range] --> (test.blocks[block_picked])[range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##560#630{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##556#626)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:735
       [5] context(::##556#626, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:714
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of any block
      Expression: test[ring_range] --> test[ring_range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##562#632{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##556#626)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:736
       [5] context(::##556#626, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:714
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of any block
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##564#634{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##556#626)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:737
       [5] context(::##556#626, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:714
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > looking at a small portion of two blocks
    Error :: (line:272) :: looking at a small portion of two blocks
      Expression: typeof(test[ring_range]) --> VirtualArrays.VirtualArray{Int, 1}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##567#637{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##565#635)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:759
       [5] context(::##565#635, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:739
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of two blocks
      Expression: test[ring_range] --> [(test.blocks[block_picked])[range.start:end]..., (test.blocks[block_picked + 1])[1:range.stop - b_l]...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##569#639{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##565#635)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:760
       [5] context(::##565#635, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:739
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of two blocks
      Expression: test[ring_range] --> test[ring_range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##571#641{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##565#635)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:762
       [5] context(::##565#635, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:739
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a small portion of two blocks
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##573#643{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##565#635)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:763
       [5] context(::##565#635, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:739
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > looking at a portion of two blocks at overflow
    Error :: (line:272) :: looking at a portion of two blocks at overflow
      Expression: typeof(test[ring_range]) --> VirtualArrays.VirtualArray{Int, 1}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##576#646{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##574#644)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:787
       [5] context(::##574#644, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:765
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow
      Expression: test[ring_range] --> [(test.blocks[block_picked])[range.start:end]..., (test.blocks[block_picked + 1])[1:range.stop - b_l]...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##578#648{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##574#644)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:788
       [5] context(::##574#644, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:765
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow
      Expression: test[ring_range] --> test[ring_range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##580#650{UnitRange{Int64},RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##574#644)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:790
       [5] context(::##574#644, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:765
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##582#652{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##574#644)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:791
       [5] context(::##574#644, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:765
       [7] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > looking at a portion of two blocks at overflow of a 2d ring array
    Error :: (line:272) :: looking at a portion of two blocks at overflow of a 2d ring array
      Expression: typeof(test[ring_range...]) --> VirtualArrays.VirtualArray{Int, 2}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##585#655{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##585#655{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##583#653)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:816
       [6] context(::##583#653, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:793
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow of a 2d ring array
      Expression: test[ring_range...] --> [(test.blocks[block_picked])[range[1].start:end, range[2]]; (test.blocks[block_picked + 1])[1:range[1].stop - b_l, range[2]]]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##587#657{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##587#657{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##583#653)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:817
       [6] context(::##583#653, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:793
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow of a 2d ring array
      Expression: test[ring_range...] --> test[ring_range...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##589#659{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##589#659{Tuple{UnitRange{Int64},UnitRange{Int64}},RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##583#653)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:819
       [6] context(::##583#653, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:793
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion of two blocks at overflow of a 2d ring array
      Expression: test[test.range, 1:b_w] --> expected[test.range, 1:b_w]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,2}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] (::##591#661{Int64,RingArrays.RingArray{Int64,2}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
       [3] do_fact(::##591#661{Int64,RingArrays.RingArray{Int64,2}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##583#653)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:820
       [6] context(::##583#653, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:793
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
  > looking at a portion from one block from N d array after any number of overflows
    Error :: (line:272) :: looking at a portion from one block from N d array after any number of overflows
      Expression: typeof(test[ring_range...]) --> VirtualArrays.VirtualArray{Int, num_dimensions}
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##594#664, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##592#662)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:855
       [6] context(::##592#662, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:822
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion from one block from N d array after any number of overflows
      Expression: test[ring_range...] --> (test.blocks[block_picked])[ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##596#666, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##592#662)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:856
       [6] context(::##592#662, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:822
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion from one block from N d array after any number of overflows
      Expression: test[ring_range...] --> test[ring_range...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##598#668, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##592#662)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:857
       [6] context(::##592#662, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:822
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: looking at a portion from one block from N d array after any number of overflows
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##600#670, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##592#662)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:864
       [6] context(::##592#662, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##531#601)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:822
       [8] facts(::##531#601, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
Out of 31 total facts:
  Failed:   2
  Errored:  29
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 872
Using checkbounds
  > checking bounds before overflow without overflowing
    Error :: (line:272) :: checking bounds before overflow without overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##678#758{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##672#752)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:892
       [5] context(::##672#752, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:873
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking bounds after overflow without overflowing
    Error :: (line:272) :: checking bounds after overflow without overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##683#763{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##679#759)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:913
       [5] context(::##679#759, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:894
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking bounds after overflow with overflowing
    Error :: (line:272) :: checking bounds after overflow with overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##688#768{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##684#764)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:934
       [5] context(::##684#764, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:915
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking bounds before overflow with overflowing
    Error :: (line:272) :: checking bounds before overflow with overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##692#772{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##689#769)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:956
       [5] context(::##689#769, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:936
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: checking bounds before overflow with overflowing
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((1,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##693#773)(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##694#774, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##689#769)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:969
       [5] context(::##689#769, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:936
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking unit range bounds before overflow without overflowing
    Error :: (line:272) :: checking unit range bounds before overflow without overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##699#779{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##695#775)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:990
       [5] context(::##695#775, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:971
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking unit range bounds after overflow without overflowing
    Error :: (line:272) :: checking unit range bounds after overflow without overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##704#784{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##700#780)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1014
       [5] context(::##700#780, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:992
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking unit range bounds after overflow with overflowing
    Error :: (line:272) :: checking unit range bounds after overflow with overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##709#789{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##705#785)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1039
       [5] context(::##705#785, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1016
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking unit range bounds before overflow with overflowing
    Error :: (line:272) :: checking unit range bounds before overflow with overflowing
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##713#793{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##710#790)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1064
       [5] context(::##710#790, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1041
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: checking unit range bounds before overflow with overflowing
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((1:overflow,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##714#794{Int64})(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##715#795, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##710#790)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1077
       [5] context(::##710#790, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1041
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking unit range bounds that exceed the length of the ring
    Error :: (line:272) :: checking unit range bounds that exceed the length of the ring
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##720#800{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##716#796)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1101
       [5] context(::##716#796, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1079
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
    Error :: (line:272) :: checking unit range bounds that exceed the length of the ring
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((1:overflow + 1,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##721#801{Int64})(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##722#802, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##716#796)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1114
       [5] context(::##716#796, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1079
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking indexing of N d RingArray
    Error :: (line:272) :: checking indexing of N d RingArray
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,4}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##727#807, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##723#803)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1147
       [6] context(::##723#803, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1116
       [8] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
  > checking out of bounds indexing of N d RingArray
    Error :: (line:272) :: checking out of bounds indexing of N d RingArray
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,3}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##731#811, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##728#808)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1181
       [6] context(::##728#808, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1149
       [8] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: checking out of bounds indexing of N d RingArray
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((index...,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##732#812)(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##733#813, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##728#808)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1194
       [5] context(::##728#808, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1149
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking out of bounds indexing not on the first dimension of N d RingArray
    Error :: (line:272) :: checking out of bounds indexing not on the first dimension of N d RingArray
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,6}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,6}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##737#817, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##734#814)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1230
       [6] context(::##734#814, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1196
       [8] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: checking out of bounds indexing not on the first dimension of N d RingArray
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((index...,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##738#818)(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##739#819, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##734#814)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1243
       [5] context(::##734#814, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1196
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > checking range indexing of N d RingArray
    Error :: (line:272) :: checking range indexing of N d RingArray
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,5}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,5}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##744#824, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##740#820)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1280
       [6] context(::##740#820, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1245
       [8] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
  > checking out of bounds range indexing of N d RingArray
    Error :: (line:272) :: checking out of bounds range indexing of N d RingArray
      Expression: test[test.range, ranges...] --> expected[test.range, ranges...]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,6}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] getindex(::RingArrays.RingArray{Int64,6}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
       [3] do_fact(::##748#828, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [4] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [5] (::##745#825)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1321
       [6] context(::##745#825, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [7] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1282
       [8] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [9] include_from_node1(::String) at ./loading.jl:569
       [10] include(::String) at ./sysimg.jl:14
       [11] include_from_node1(::String) at ./loading.jl:569
       [12] include(::String) at ./sysimg.jl:14
       [13] process_options(::Base.JLOptions) at ./client.jl:305
       [14] _start() at ./client.jl:371
    Error :: (line:272) :: checking out of bounds range indexing of N d RingArray
      Expression: occured.data --> "RingArrayBoundsError: Cannot index $((ring_range...,)), outside of range $(range)".data
      type String has no field data
      Use `Vector{UInt8}(str)` instead.
      Stacktrace:
       [1] (::##749#829)(::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:260
       [2] do_fact(::##750#830, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##745#825)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1334
       [5] context(::##745#825, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##671#751)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1282
       [7] facts(::##671#751, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
Out of 36 total facts:
  Verified: 16
  Errored:  20
Using display
  > trying display on a typical RingArray
6-element Array{AbstractArray{Int64,1},1}:
 #undef
 #undef
 #undef
 #undef
 #undef
 #undef1 fact verified.
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] is(::Symbol, ::Vararg{Any,N} where N) at ./deprecated.jl:31
 [3] @fact_throws(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 1361
Using views
  > having the RingArray overflow when no views in use
    Error :: (line:272) :: having the RingArray overflow when no views in use
      Expression: test[test.range] --> expected[test.range]
      UndefVarError: sub not defined
      Stacktrace:
       [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
       [2] do_fact(::##844#909{RingArrays.RingArray{Int64,1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
       [3] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
       [4] (::##840#905)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1381
       [5] context(::##840#905, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
       [6] (::##839#904)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1362
       [7] facts(::##839#904, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
       [8] include_from_node1(::String) at ./loading.jl:569
       [9] include(::String) at ./sysimg.jl:14
       [10] include_from_node1(::String) at ./loading.jl:569
       [11] include(::String) at ./sysimg.jl:14
       [12] process_options(::Base.JLOptions) at ./client.jl:305
       [13] _start() at ./client.jl:371
  > having the RingArray overflow when first block is in use
ERROR: LoadError: LoadError: UndefVarError: sub not defined
Stacktrace:
 [1] get_view(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N} where N) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:241
 [2] getindex(::RingArrays.RingArray{Int64,1}, ::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/RingArrays/src/RingArrays.jl:145
 [3] (::##845#910)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1398
 [4] context(::##845#910, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [5] (::##839#904)() at /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl:1383
 [6] facts(::##839#904, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/RingArrays/test/RingArrays.jl, in expression starting on line 1361
while loading /home/vagrant/.julia/v0.6/RingArrays/test/runtests.jl, in expression starting on line 11
=============================[ ERROR: RingArrays ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/RingArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
INFO: Removing FactCheck v0.4.3
ERROR: RingArrays had test errors

>>> End of log
