>>> 'Pkg.add("TaylorSeries")' log
[ Info: Installing TaylorSeries v0.7.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of TaylorSeries
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TaylorSeries")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3719530 s       5672 s     180953 s     924534 s         28 s
       #2  3500 MHz     748054 s       1723 s      69815 s    4787047 s          1 s
       
  Memory: 2.93927001953125 GB (616.38671875 MB free)
  Uptime: 57145.0 sec
  Load Avg:  0.9951171875  1.0  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - TaylorSeries                  0.7.1
3 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
 - tmpFveHGf                     0.0.0-             non-repo (unregistered)
[ Info: Testing TaylorSeries
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Bool}, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Float64, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = setindex!(::Taylor1{Int64}, ::Int64, ::UnitRange{Int64}) at auxiliary.jl:81
└ @ TaylorSeries auxiliary.jl:81
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = setindex!(::Taylor1{Float64}, ::Array{Float64,1}, ::UnitRange{Int64}) at auxiliary.jl:82
└ @ TaylorSeries auxiliary.jl:82
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = getindex(::Taylor1{Float64}, ::UnitRange{Int64}) at auxiliary.jl:77
└ @ TaylorSeries auxiliary.jl:77
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Int64, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Int64}, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1606 [inlined]
└ @ Core array.jl:1606
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:99
  Test threw an exception of type MethodError
  Expression: TaylorSeries.findfirst(zt) == -1
  MethodError: no method matching -(::Nothing, ::Int64)
  Closest candidates are:
    -(!Matched::Complex{Bool}, ::Real) at complex.jl:297
    -(!Matched::Char, ::Integer) at char.jl:94
    -(!Matched::Base.CoreLogging.LogLevel, ::Any) at logging.jl:107
    ...
  Stacktrace:
   [1] findfirst(::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/auxiliary.jl:209
   [2] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:99 [inlined]
   [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [4] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:123
  Test threw an exception of type MethodError
  Expression: zero(t) / t == zero(t)
  MethodError: no method matching -(::Nothing, ::Int64)
  Closest candidates are:
    -(!Matched::Complex{Bool}, ::Real) at complex.jl:297
    -(!Matched::Char, ::Integer) at char.jl:94
    -(!Matched::Base.CoreLogging.LogLevel, ::Any) at logging.jl:107
    ...
  Stacktrace:
   [1] findfirst(::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/auxiliary.jl:209
   [2] divfactorization(::Taylor1{Int64}, ::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/arithmetic.jl:447
   [3] /(::Taylor1{Int64}, ::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/arithmetic.jl:414
   [4] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:123 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Float64, ::Taylor1{Float64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Float64}, ::Taylor1{Complex{Int64}}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Rational{Int64}, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::BigFloat, ::Taylor1{BigFloat}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Int64}, ::Taylor1{Float64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{BigFloat}, ::Taylor1{Complex{BigFloat}}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Int64, ::Taylor1{Float64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst(::Array{BigFloat,1}) at array.jl:1606
└ @ Base array.jl:1606
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1606 [inlined]
└ @ Core array.jl:1606
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Int64}, ::Taylor1{Rational{Int64}}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = /(::Taylor1{Rational{Int64}}, ::Int64) at arithmetic.jl:369
└ @ TaylorSeries arithmetic.jl:369
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = /(::Taylor1{Rational{Int64}}, ::Complex{Int64}) at arithmetic.jl:369
└ @ TaylorSeries arithmetic.jl:369
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:154
  Test threw an exception of type MethodError
  Expression: sqrt(zero(t)) == zero(t)
  MethodError: no method matching -(::Nothing, ::Int64)
  Closest candidates are:
    -(!Matched::Complex{Bool}, ::Real) at complex.jl:297
    -(!Matched::Char, ::Integer) at char.jl:94
    -(!Matched::Base.CoreLogging.LogLevel, ::Any) at logging.jl:107
    ...
  Stacktrace:
   [1] findfirst(::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/auxiliary.jl:209
   [2] sqrt(::Taylor1{Int64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/power.jl:309
   [3] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:154 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Bool}, ::Taylor1{Float64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = convert(::Type{Taylor1{Rational{Int64}}}, ::Taylor1{Float64}) at conversion.jl:17
└ @ TaylorSeries conversion.jl:17
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = getindex at auxiliary.jl:77 [inlined]
└ @ Core auxiliary.jl:77
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Float64}, ::Taylor1{Complex{Float64}}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:212
  Test threw an exception of type ErrorException
  Expression: norm(csdiff, 1) < 5.0e-15
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm(::Array{Float64,1}, ::Int64) at ./deprecated.jl:138
   [4] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:212 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate at evaluate.jl:49 [inlined]
└ @ Core evaluate.jl:49
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1606 [inlined]
└ @ Core array.jl:1606
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Int64}, ::Taylor1{Complex{Float64}}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = macro expansion at onevariable.jl:306 [inlined]
└ @ Core onevariable.jl:306
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate at evaluate.jl:49 [inlined]
└ @ Core evaluate.jl:49
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = evaluate at evaluate.jl:49 [inlined]
└ @ Core evaluate.jl:49
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:315
  Test threw an exception of type ErrorException
  Expression: ≈(derivative(exp(ta(1.0)), 5), expected_result_approx, atol=eps(), rtol=0.0)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] (::getfield(Base, Symbol("#kw##isapprox")))(::NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Taylor1{Float64}, ::Taylor1{Float64}) at ./<missing>:0
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:227
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:315 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:317
  Test threw an exception of type ErrorException
  Expression: ≈(derivative(exp(ta(1.0pi)), 3), expected_result_approx, atol=eps(16.0), rtol=0.0)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] (::getfield(Base, Symbol("#kw##isapprox")))(::NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Taylor1{Float64}, ::Taylor1{Float64}) at ./<missing>:0
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:227
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:317 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:319
  Test threw an exception of type ErrorException
  Expression: ≈(derivative(exp(ta(1.0pi)), 10), expected_result_approx, atol=eps(64.0), rtol=0.0)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] (::getfield(Base, Symbol("#kw##isapprox")))(::NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Taylor1{Float64}, ::Taylor1{Float64}) at ./<missing>:0
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:227
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:319 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:336
  Test threw an exception of type ErrorException
  Expression: norm((inverse(exp(t) - 1) - log(1 + t)).coeffs) < 2tol1
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm(::Array{Float64,1}) at ./deprecated.jl:138
   [4] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:336 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:338
  Test threw an exception of type ErrorException
  Expression: norm((inverse(t * exp(t)))[1:end] ./ cfs .- 1) < 4tol1
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm(::Array{Float64,1}) at ./deprecated.jl:138
   [4] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:338 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Test Failed at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:343
  Expression: zt / zt
    Expected: ArgumentError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:343 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = *(::Complex{Float64}, ::Taylor1{Int64}) at arithmetic.jl:215
└ @ TaylorSeries arithmetic.jl:215
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:371
  Test threw an exception of type ErrorException
  Expression: typeof(norm(Taylor1(rnd))) == Float64
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined] (repeats 2 times)
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:371 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:372
  Test threw an exception of type ErrorException
  Expression: norm(Taylor1(rnd)) > 0
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined] (repeats 2 times)
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:372 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:373
  Test threw an exception of type ErrorException
  Expression: norm(t_a) == norm(a)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined] (repeats 2 times)
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:373 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:374
  Test threw an exception of type ErrorException
  Expression: norm(Taylor1(a, 15), 3) == sum(a .^ 3) ^ (1 / 3)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm(::Taylor1{Int64}, ::Int64) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:374 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:375
  Test threw an exception of type ErrorException
  Expression: norm(t_a, Inf) == 12
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm(::Taylor1{Int64}, ::Float64) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:375 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:376
  Test threw an exception of type ErrorException
  Expression: norm(t_C) == norm(complex(3.0, 4.0) * a)
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined] (repeats 2 times)
   [5] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:376 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = isapprox(::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at other_functions.jl:189
└ @ TaylorSeries other_functions.jl:189
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = isapprox(::Taylor1{Int64}, ::Taylor1{Int64}) at other_functions.jl:189
└ @ TaylorSeries other_functions.jl:189
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = isapprox(::Taylor1{Int64}, ::Taylor1{Float64}) at other_functions.jl:189
└ @ TaylorSeries other_functions.jl:189
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:395
  Test threw an exception of type ErrorException
  Expression: t_a ≈ t_b
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Int64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] isapprox(::Taylor1{Int64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:215
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:395 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:396
  Test threw an exception of type ErrorException
  Expression: t_C ≈ t_C2
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] isapprox(::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:215
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:396 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:397
  Test threw an exception of type ErrorException
  Expression: t_C ≈ t_C3
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] isapprox(::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:215
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:397 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:398
  Test threw an exception of type ErrorException
  Expression: t_C3 ≈ t_C2
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] isapprox(::Taylor1{Complex{Float64}}, ::Taylor1{Complex{Float64}}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:215
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:398 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = isapprox(::Taylor1{Float64}, ::Taylor1{Float64}) at other_functions.jl:189
└ @ TaylorSeries other_functions.jl:189
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:403
  Test threw an exception of type ErrorException
  Expression: t ≈ t + sqrt(eps())
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] isapprox(::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:215
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:403 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = (::getfield(Base, Symbol("#kw##isapprox")))(::NamedTuple{(:atol,),Tuple{Float64}}, ::typeof(isapprox), ::Taylor1{Float64}, ::Taylor1{Float64}) at <missing>:0
└ @ TaylorSeries <missing>:0
Tests for Taylor1 expansions: Error During Test at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:404
  Test threw an exception of type ErrorException
  Expression: isapprox(p, q, atol=eps())
  Base.norm has been moved to the standard library package LinearAlgebra.
  Restart Julia and then run `using LinearAlgebra` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #norm#980 at ./deprecated.jl:138 [inlined]
   [3] norm at ./deprecated.jl:138 [inlined]
   [4] norm at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:161 [inlined]
   [5] #isapprox#34(::Float64, ::Float64, ::Bool, ::Function, ::Taylor1{Float64}, ::Taylor1{Float64}) at /home/vagrant/.julia/v0.7/TaylorSeries/src/other_functions.jl:189
   [6] (::getfield(Base, Symbol("#kw##isapprox")))(::NamedTuple{(:atol,),Tuple{Float64}}, ::typeof(isapprox), ::Taylor1{Float64}, ::Taylor1{Float64}) at ./<missing>:0
   [7] eval_test(::Expr, ::Expr, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:227
   [8] macro expansion at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:404 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:14
Test Summary:                | Pass  Fail  Error  Total
Tests for Taylor1 expansions |  247     1     21    269
ERROR: LoadError: LoadError: Some tests did not pass: 247 passed, 1 failed, 21 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/TaylorSeries/test/onevariable.jl:13
in expression starting at /home/vagrant/.julia/v0.7/TaylorSeries/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for TaylorSeries
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/TaylorSeries/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
ERROR: TaylorSeries had test errors

>>> End of log
