>>> 'Pkg.add("TaylorSeries")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing TaylorSeries v0.7.3
[ Info: Package database updated

>>> 'Pkg.test("TaylorSeries")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4803
Commit ff7b6452f8 (2018-04-06 17:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3496 MHz    4320962 s       5682 s     318794 s    1293638 s         72 s
       #2  3496 MHz    1041479 s       1354 s     114946 s    5633880 s          2 s
       
  Memory: 2.939197540283203 GB (857.38671875 MB free)
  Uptime: 69544.0 sec
  Load Avg:  0.98291015625  0.962890625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - TaylorSeries                  0.7.3
12 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - FixedPointNumbers             0.4.6
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - SHA                           0.5.6
 - URIParser                     0.3.1
 - tmpX1g0YQ                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing TaylorSeries
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findprev` will only work on boolean collections. Use `findprev(x->x!=0, A, start)` instead.
│   caller = findlast at array.jl:1788 [inlined]
└ @ Core array.jl:1788
┌ Warning: In the future `findprev` will only work on boolean collections. Use `findprev(x->x!=0, A, start)` instead.
│   caller = findlast at array.jl:1788 [inlined]
└ @ Core array.jl:1788
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findprev` will only work on boolean collections. Use `findprev(x->x!=0, A, start)` instead.
│   caller = findlast at array.jl:1788 [inlined]
└ @ Core array.jl:1788
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst(::Array{BigFloat,1}) at array.jl:1608
└ @ Base array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
Test Summary:                | Pass  Total
Tests for Taylor1 expansions |  297    297
Test Summary:                     | Pass  Total
Matrix multiplication for Taylor1 |   16     16
┌ Info: Parameters for `TaylorN` and `HomogeneousPolynomial`:
│ Maximum order       = 6
│ Number of variables = 2
│ Variable names      = ["x", "y"]
└ Variable symbols    = Symbol[:x, :y]
 1  -->  x²
 2  -->  x y
 3  -->  y²
Test Summary:                               | Pass  Total
Tests for HomogeneousPolynomial and TaylorN |  395    395
Test Summary:                   | Pass  Total
Integrate for several variables |    6      6
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst(::Array{TaylorN{Float64},1}) at array.jl:1608
└ @ Base array.jl:1608
┌ Warning: In the future `findnext` will only work on boolean collections. Use `findnext(x->x!=0, A, start)` instead.
│   caller = findfirst at array.jl:1608 [inlined]
└ @ Core array.jl:1608
┌ Warning: In the future `findprev` will only work on boolean collections. Use `findprev(x->x!=0, A, start)` instead.
│   caller = findlast at array.jl:1788 [inlined]
└ @ Core array.jl:1788
Test Summary:                              | Pass  Total
Tests with mixtures of Taylor1 and TaylorN |  160    160
Test Summary:      | Pass  Total
Mutating functions |   53     53
Test Summary:                                     | Pass  Total
Testing an identity proved by Euler (8 variables) |    2      2
Test Summary:                                  | Pass  Total
Test inspired by Fateman (takes a few seconds) |    2      2
[ Info: TaylorSeries tests passed

>>> End of log
