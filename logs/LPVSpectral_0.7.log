>>> 'Pkg.add("LPVSpectral")' log
[ Info: Cloning cache of Contour from https://github.com/JuliaGeometry/Contour.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of LPVSpectral from https://github.com/baggepinnen/LPVSpectral.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of Measures from https://github.com/JuliaGraphics/Measures.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of PlotThemes from https://github.com/JuliaPlots/PlotThemes.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of PlotUtils from https://github.com/JuliaPlots/PlotUtils.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of Plots from https://github.com/JuliaPlots/Plots.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of Showoff from https://github.com/JuliaGraphics/Showoff.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing AbstractFFTs v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ColorTypes v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Colors v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Contour v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DSP v0.3.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FFTW v0.1.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FixedPointNumbers v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LPVSpectral v0.0.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Measures v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PlotThemes v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PlotUtils v0.4.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Plots v0.14.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.1.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Reexport v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requires v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Showoff v0.1.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Building FFTW @ Main none:10
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = makealiases(::String) at build_fftw.jl:26
└ @ Main.__anon__ build_fftw.jl:26
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/FFTW/deps/build_fftw.jl:112
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Building Plots @ Main none:10
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:6
└ @ Core build.jl:6
INFO: Cannot find deps/plotly-latest.min.js... downloading latest version.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 2287k  100 2287k    0     0  2705k      0 --:--:-- --:--:-- --:--:-- 2707k
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of LPVSpectral
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("LPVSpectral")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz     705235 s        100 s      39024 s     292905 s          6 s
       #2  3507 MHz     182022 s         62 s      19020 s     975816 s          0 s
       
  Memory: 2.93927001953125 GB (788.17578125 MB free)
  Uptime: 12016.0 sec
  Load Avg:  1.06494140625  1.01513671875  1.0078125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - LPVSpectral                   0.0.4
27 additional packages:
 - AbstractFFTs                  0.2.0
 - BinDeps                       0.8.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.42.0
 - Contour                       0.4.0
 - DSP                           0.3.4
 - DataStructures                0.7.3
 - FFTW                          0.1.2
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.2
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.14.2
 - Polynomials                   0.1.6
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.4
 - URIParser                     0.3.0
[ Info: Testing LPVSpectral @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LPVSpectral/src/LPVSpectral.jl:57.
│ Use `struct` instead.
└ @ nothing LPVSpectral.jl:57
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
[ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub. @ nothing none:0
WARNING: importing deprecated binding Base.Void into Periodograms.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:169
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:206
WARNING: importing deprecated binding Base.Complex64 into Periodograms.
WARNING: Base.Complex64 is deprecated, use ComplexF32 instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:275
WARNING: importing deprecated binding Base.Complex128 into Periodograms.
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:275
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:284
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:306
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:354
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:367
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:369
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:369
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:369
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DSP/src/periodograms.jl:369
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:73.
│ Use `struct` instead.
└ @ nothing Polynomials.jl:73
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Poly}){T <: Number}(a::AbstractVector{T}, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:78.
│ Use `(::Type{Poly})(a::AbstractVector{T}, var::SymbolLike = :x) where T <: Number` instead.
└ @ nothing Polynomials.jl:78
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Poly{T}}){T, S}(x::AbstractVector{S}, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:89.
│ Use `(::Type{Poly{T}})(x::AbstractVector{S}, var::SymbolLike = :x) where {T, S}` instead.
└ @ nothing Polynomials.jl:89
┌ Warning: Deprecated syntax `parametric method syntax poly{T}(r::AbstractVector{T}, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:116.
│ Use `poly(r::AbstractVector{T}, var::SymbolLike = :x) where T` instead.
└ @ nothing Polynomials.jl:116
┌ Warning: Deprecated syntax `parametric method syntax hasneg{T}(::Type{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:8.
│ Use `hasneg(#unused#::Type{T}) where T` instead.
└ @ nothing show.jl:8
┌ Warning: Deprecated syntax `parametric method syntax isneg{T}(pj::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:11.
│ Use `isneg(pj::T) where T` instead.
└ @ nothing show.jl:11
┌ Warning: Deprecated syntax `parametric method syntax aspos{T}(pj::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:14.
│ Use `aspos(pj::T) where T` instead.
└ @ nothing show.jl:14
┌ Warning: Deprecated syntax `parametric method syntax showone{T}(::Type{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:17.
│ Use `showone(#unused#::Type{T}) where T` instead.
└ @ nothing show.jl:17
┌ Warning: Deprecated syntax `parametric method syntax hasneg{T <: Real}(::Type{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:23.
│ Use `hasneg(#unused#::Type{T}) where T <: Real` instead.
└ @ nothing show.jl:23
┌ Warning: Deprecated syntax `parametric method syntax showone{T <: Integer}(::Type{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:26.
│ Use `showone(#unused#::Type{T}) where T <: Integer` instead.
└ @ nothing show.jl:26
┌ Warning: Deprecated syntax `parametric method syntax showone{T}(::Type{Rational{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:27.
│ Use `showone(#unused#::Type{Rational{T}}) where T` instead.
└ @ nothing show.jl:27
┌ Warning: Deprecated syntax `parametric method syntax hasneg{T}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:33.
│ Use `hasneg(#unused#::Type{Complex{T}}) where T` instead.
└ @ nothing show.jl:33
┌ Warning: Deprecated syntax `parametric method syntax isneg{T}(pj::Complex{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:36.
│ Use `isneg(pj::Complex{T}) where T` instead.
└ @ nothing show.jl:36
┌ Warning: Deprecated syntax `parametric method syntax showone{T}(pj::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:41.
│ Use `showone(pj::Type{Complex{T}}) where T` instead.
└ @ nothing show.jl:41
┌ Warning: Deprecated syntax `parametric method syntax hasneg{S}(::Type{Poly{S}})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:45.
│ Use `hasneg(#unused#::Type{Poly{S}}) where S` instead.
└ @ nothing show.jl:45
┌ Warning: Deprecated syntax `parametric method syntax showone{S}(::Type{Poly{S}})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:46.
│ Use `showone(#unused#::Type{Poly{S}}) where S` instead.
└ @ nothing show.jl:46
┌ Warning: Deprecated syntax `parametric method syntax printpoly{T}(io::IO, p::Poly{T}, mimetype = Base.MIME{:text/plain}(); descending_powers = false)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:88.
│ Use `printpoly(io::IO, p::Poly{T}, mimetype = Base.MIME{:text/plain}(); descending_powers = false) where T` instead.
└ @ nothing show.jl:88
┌ Warning: Deprecated syntax `parametric method syntax showterm{T}(io::IO, p::Poly{T}, j, first, mimetype)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:100.
│ Use `showterm(io::IO, p::Poly{T}, j, first, mimetype) where T` instead.
└ @ nothing show.jl:100
┌ Warning: Deprecated syntax `parametric method syntax printsign{T}(io::IO, pj::T, j, first, mimetype)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:116.
│ Use `printsign(io::IO, pj::T, j, first, mimetype) where T` instead.
└ @ nothing show.jl:116
┌ Warning: Deprecated syntax `parametric method syntax printproductsign{T}(io::IO, pj::T, j, mimetype)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:128.
│ Use `printproductsign(io::IO, pj::T, j, mimetype) where T` instead.
└ @ nothing show.jl:128
┌ Warning: Deprecated syntax `parametric method syntax printcoefficient{T}(io::IO, pj::Complex{T}, j, mimetype)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:134.
│ Use `printcoefficient(io::IO, pj::Complex{T}, j, mimetype) where T` instead.
└ @ nothing show.jl:134
┌ Warning: Deprecated syntax `parametric method syntax printcoefficient{T}(io::IO, pj::T, j, mimetype)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:157.
│ Use `printcoefficient(io::IO, pj::T, j, mimetype) where T` instead.
└ @ nothing show.jl:157
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:186.
│ Use `Base.show(io::IO, p::Poly{T}) where T` instead.
└ @ nothing show.jl:186
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, mimetype::Base.MIME{:text/plain}, p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:188.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/plain}, p::Poly{T}) where T` instead.
└ @ nothing show.jl:188
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, mimetype::Base.MIME{:text/latex}, p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:196.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/latex}, p::Poly{T}) where T` instead.
└ @ nothing show.jl:196
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, mimetype::Base.MIME{:text/latex}, a::Rational{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:202.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/latex}, a::Rational{T}) where T` instead.
└ @ nothing show.jl:202
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T <: Number}(io::IO, mimetype::Base.MIME{:text/latex}, a::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:206.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/latex}, a::T) where T <: Number` instead.
└ @ nothing show.jl:206
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T}(io::IO, mimetype::Base.MIME{:text/html}, p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:212.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/html}, p::Poly{T}) where T` instead.
└ @ nothing show.jl:212
┌ Warning: Deprecated syntax `parametric method syntax Base.show{T <: Number}(io::IO, mimetype::Base.MIME{:text/html}, a::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/show.jl:216.
│ Use `Base.show(io::IO, mimetype::Base.MIME{:text/html}, a::T) where T <: Number` instead.
└ @ nothing show.jl:216
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Poly{T}}, p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:131.
│ Use `convert(#unused#::Type{Poly{T}}, p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:131
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Poly{T}}, p::Poly)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:132.
│ Use `convert(#unused#::Type{Poly{T}}, p::Poly) where T` instead.
└ @ nothing Polynomials.jl:132
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S <: Number}(::Type{Poly{T}}, x::S, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:133.
│ Use `convert(#s8::Type{Poly{T}}, x::S, var::SymbolLike = :x) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:133
┌ Warning: Deprecated syntax `parametric method syntax convert{T, S <: Number}(::Type{Poly{T}}, x::AbstractArray{S}, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:134.
│ Use `convert(#s8::Type{Poly{T}}, x::AbstractArray{S}, var::SymbolLike = :x) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:134
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, S}(::Type{Poly{T}}, ::Type{Poly{S}})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:135.
│ Use `promote_rule(#unused#::Type{Poly{T}}, #unused#::Type{Poly{S}}) where {T, S}` instead.
└ @ nothing Polynomials.jl:135
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, S <: Number}(::Type{Poly{T}}, ::Type{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:136.
│ Use `promote_rule(#unused#::Type{Poly{T}}, #unused#::Type{S}) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:136
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:138.
│ Use `eltype(#unused#::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:138
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{Poly{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:146.
│ Use `eltype(#unused#::Type{Poly{T}}) where T` instead.
└ @ nothing Polynomials.jl:146
┌ Warning: Deprecated syntax `parametric method syntax collect{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:149.
│ Use `collect(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:149
┌ Warning: Deprecated syntax `parametric method syntax variable{T <: Number}(::Type{T}, var::SymbolLike = :x)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:193.
│ Use `variable(#s8::Type{T}, var::SymbolLike = :x) where T <: Number` instead.
└ @ nothing Polynomials.jl:193
┌ Warning: Deprecated syntax `parametric method syntax variable{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:194.
│ Use `variable(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:194
┌ Warning: Deprecated syntax `parametric method syntax truncate{T}(p::Poly{T},; reltol::Real = Base.rtoldefault(real(T)), abstol::Real = 0)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:204.
│ Use `truncate(p::Poly{T},; reltol::Real = Base.rtoldefault(real(T)), abstol::Real = 0) where T` instead.
└ @ nothing Polynomials.jl:204
┌ Warning: Deprecated syntax `parametric method syntax chop{T}(p::Poly{T},; reltol::Real = Base.rtoldefault(real(T)), abstol::Real = 0)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:219.
│ Use `chop(p::Poly{T},; reltol::Real = Base.rtoldefault(real(T)), abstol::Real = 0) where T` instead.
└ @ nothing Polynomials.jl:219
┌ Warning: Deprecated syntax `parametric method syntax conj{T <: Complex}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:249.
│ Use `conj(p::Poly{T}) where T <: Complex` instead.
└ @ nothing Polynomials.jl:249
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(p::Poly{T}, idx::Int)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:259.
│ Use `getindex(p::Poly{T}, idx::Int) where T` instead.
└ @ nothing Polynomials.jl:259
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(p::Poly{T}, indices::AbstractVector{Int})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:260.
│ Use `getindex(p::Poly{T}, indices::AbstractVector{Int}) where T` instead.
└ @ nothing Polynomials.jl:260
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(p::Poly{T}, ::Colon)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:261.
│ Use `getindex(p::Poly{T}, #unused#::Colon) where T` instead.
└ @ nothing Polynomials.jl:261
┌ Warning: Deprecated syntax `parametric method syntax zero{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:293.
│ Use `zero(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:293
┌ Warning: Deprecated syntax `parametric method syntax zero{T}(::Type{Poly{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:294.
│ Use `zero(#unused#::Type{Poly{T}}) where T` instead.
└ @ nothing Polynomials.jl:294
┌ Warning: Deprecated syntax `parametric method syntax one{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:295.
│ Use `one(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:295
┌ Warning: Deprecated syntax `parametric method syntax one{T}(::Type{Poly{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:296.
│ Use `one(#unused#::Type{Poly{T}}) where T` instead.
└ @ nothing Polynomials.jl:296
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Number, S}(c::T, p::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:299.
│ Use `*(c::T, p::Poly{S}) where {T <: Number, S}` instead.
└ @ nothing Polynomials.jl:299
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Number, S}(p::Poly{S}, c::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:300.
│ Use `*(p::Poly{S}, c::T) where {T <: Number, S}` instead.
└ @ nothing Polynomials.jl:300
┌ Warning: Deprecated syntax `parametric method syntax -{T <: Number}(p::Poly, c::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:303.
│ Use `-(p::Poly, c::T) where T <: Number` instead.
└ @ nothing Polynomials.jl:303
┌ Warning: Deprecated syntax `parametric method syntax +{T <: Number}(c::T, p::Poly)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:304.
│ Use `+(c::T, p::Poly) where T <: Number` instead.
└ @ nothing Polynomials.jl:304
┌ Warning: Deprecated syntax `parametric method syntax +{S, T <: Number}(p::Poly{S}, c::T)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:306.
│ Use `+(p::Poly{S}, c::T) where {S, T <: Number}` instead.
└ @ nothing Polynomials.jl:306
┌ Warning: Deprecated syntax `parametric method syntax -{T <: Number, S}(c::T, p::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:312.
│ Use `-(c::T, p::Poly{S}) where {T <: Number, S}` instead.
└ @ nothing Polynomials.jl:312
┌ Warning: Deprecated syntax `parametric method syntax +{T, S}(p1::Poly{T}, p2::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:319.
│ Use `+(p1::Poly{T}, p2::Poly{S}) where {T, S}` instead.
└ @ nothing Polynomials.jl:319
┌ Warning: Deprecated syntax `parametric method syntax -{T, S}(p1::Poly{T}, p2::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:325.
│ Use `-(p1::Poly{T}, p2::Poly{S}) where {T, S}` instead.
└ @ nothing Polynomials.jl:325
┌ Warning: Deprecated syntax `parametric method syntax *{T, S}(p1::Poly{T}, p2::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:333.
│ Use `*(p1::Poly{T}, p2::Poly{S}) where {T, S}` instead.
└ @ nothing Polynomials.jl:333
┌ Warning: Deprecated syntax `parametric method syntax divrem{T, S}(num::Poly{T}, den::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:365.
│ Use `divrem(num::Poly{T}, den::Poly{S}) where {T, S}` instead.
└ @ nothing Polynomials.jl:365
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S}(p1::Poly{T}, p2::Poly{S}; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0, norm::Function = vecnorm)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:413.
│ Use `isapprox(p1::Poly{T}, p2::Poly{S}; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0, norm::Function = vecnorm) where {T, S}` instead.
└ @ nothing Polynomials.jl:413
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S <: Number}(p1::Poly{T}, n::S; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:422.
│ Use `isapprox(p1::Poly{T}, n::S; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:422
┌ Warning: Deprecated syntax `parametric method syntax isapprox{T, S <: Number}(n::S, p1::Poly{T}; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:427.
│ Use `isapprox(n::S, p1::Poly{T}; reltol::Real = Base.rtoldefault(T, S), abstol::Real = 0) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:427
┌ Warning: Deprecated syntax `parametric method syntax polyval{T, S}(p::Poly{T}, x::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:452.
│ Use `polyval(p::Poly{T}, x::S) where {T, S}` instead.
└ @ nothing Polynomials.jl:452
┌ Warning: Deprecated syntax `parametric method syntax polyint{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:487.
│ Use `polyint(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:487
┌ Warning: Deprecated syntax `parametric method syntax polyint{T <: Union{Real, Complex}, S <: Number}(p::Poly{T}, k::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:491.
│ Use `polyint(p::Poly{T}, k::S) where {T <: Union{Real, Complex}, S <: Number}` instead.
└ @ nothing Polynomials.jl:491
┌ Warning: Deprecated syntax `parametric method syntax polyint{T, S <: Union{Real, Complex}}(p::Poly{T}, k::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:497.
│ Use `polyint(p::Poly{T}, k::S) where {T, S <: Union{Real, Complex}}` instead.
└ @ nothing Polynomials.jl:497
┌ Warning: Deprecated syntax `parametric method syntax polyint{T <: Union{Real, Complex}, S <: Union{Real, Complex}}(p::Poly{T}, k::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:503.
│ Use `polyint(p::Poly{T}, k::S) where {T <: Union{Real, Complex}, S <: Union{Real, Complex}}` instead.
└ @ nothing Polynomials.jl:503
┌ Warning: Deprecated syntax `parametric method syntax polyint{T, S <: Number}(p::Poly{T}, k::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:508.
│ Use `polyint(p::Poly{T}, k::S) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:508
┌ Warning: Deprecated syntax `parametric method syntax _polyint{T, S <: Number}(p::Poly{T}, k::S)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:511.
│ Use `_polyint(p::Poly{T}, k::S) where {T, S <: Number}` instead.
└ @ nothing Polynomials.jl:511
┌ Warning: Deprecated syntax `parametric method syntax polyder{T <: Union{Real, Complex}}(p::Poly{T}, order::Int = 1)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:555.
│ Use `polyder(p::Poly{T}, order::Int = 1) where T <: Union{Real, Complex}` instead.
└ @ nothing Polynomials.jl:555
┌ Warning: Deprecated syntax `parametric method syntax polyder{T}(p::Poly{T}, order::Int = 1)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:565.
│ Use `polyder(p::Poly{T}, order::Int = 1) where T` instead.
└ @ nothing Polynomials.jl:565
┌ Warning: Deprecated syntax `parametric method syntax _polyder{T}(p::Poly{T}, order::Int = 1)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:573.
│ Use `_polyder(p::Poly{T}, order::Int = 1) where T` instead.
└ @ nothing Polynomials.jl:573
┌ Warning: Deprecated syntax `parametric method syntax polyint{T}(a::AbstractArray{Poly{T}}, k::Number = 0)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:582.
│ Use `polyint(a::AbstractArray{Poly{T}}, k::Number = 0) where T` instead.
└ @ nothing Polynomials.jl:582
┌ Warning: Deprecated syntax `parametric method syntax polyder{T}(a::AbstractArray{Poly{T}}, order::Int = 1)` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:583.
│ Use `polyder(a::AbstractArray{Poly{T}}, order::Int = 1) where T` instead.
└ @ nothing Polynomials.jl:583
┌ Warning: Deprecated syntax `parametric method syntax roots{T}(p::Poly{T})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:625.
│ Use `roots(p::Poly{T}) where T` instead.
└ @ nothing Polynomials.jl:625
┌ Warning: Deprecated syntax `parametric method syntax roots{T}(p::Poly{Rational{T}})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:651.
│ Use `roots(p::Poly{Rational{T}}) where T` instead.
└ @ nothing Polynomials.jl:651
┌ Warning: Deprecated syntax `parametric method syntax gcd{T, S}(a::Poly{T}, b::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/Polynomials.jl:668.
│ Use `gcd(a::Poly{T}, b::Poly{S}) where {T, S}` instead.
└ @ nothing Polynomials.jl:668
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Polynomials/src/pade.jl:1.
│ Use `struct` instead.
└ @ nothing pade.jl:1
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Pade{T, S}}){T, S}(p::Poly{T}, q::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/pade.jl:6.
│ Use `(::Type{Pade{T, S}})(p::Poly{T}, q::Poly{S}) where {T, S}` instead.
└ @ nothing pade.jl:6
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Pade}){T <: Number, S <: Number}(p::Poly{T}, q::Poly{S})` around /home/vagrant/.julia/v0.7/Polynomials/src/pade.jl:12.
│ Use `(::Type{Pade})(p::Poly{T}, q::Poly{S}) where {T <: Number, S <: Number}` instead.
└ @ nothing pade.jl:12
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Pade}){T}(c::Poly{T}, m::Int, n::Int)` around /home/vagrant/.julia/v0.7/Polynomials/src/pade.jl:15.
│ Use `(::Type{Pade})(c::Poly{T}, m::Int, n::Int) where T` instead.
└ @ nothing pade.jl:15
┌ Warning: Deprecated syntax `parametric method syntax padeval{T}(PQ::Pade{T}, x)` around /home/vagrant/.julia/v0.7/Polynomials/src/pade.jl:33.
│ Use `padeval(PQ::Pade{T}, x) where T` instead.
└ @ nothing pade.jl:33
┌ Warning: Deprecated syntax `implicit assignment to global variable `chain``.
│ Use `global chain` instead.
└ @ nothing none:0
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `(fieldnames(C)...)` at /home/vagrant/.julia/v0.7/ColorTypes/src/types.jl:425.
│ Use `(fieldnames(C)...,)` instead.
└ @ nothing types.jl:425
┌ Warning: Deprecated syntax `(args...)` at /home/vagrant/.julia/v0.7/ColorTypes/src/traits.jl:314.
│ Use `(args...,)` instead.
└ @ nothing traits.jl:314
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = top-level scope at show.jl:13
└ @ Core show.jl:13
WARNING: importing deprecated binding Base.@sprintf into Colors.
ERROR: LoadError: LoadError: LoadError: LoadError: Base.@sprintf has been moved to the standard library package Printf.
Restart Julia and then run `using Printf` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #@sprintf#922(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::LineNumberNode, ::Vararg{Any,N} where N) at ./deprecated.jl:138
 [3] @sprintf(::Vararg{Any,N} where N) at ./deprecated.jl:138
 [4] #macroexpand#37 at ./expr.jl:75 [inlined]
 [5] macroexpand at ./expr.jl:74 [inlined]
 [6] docm(::LineNumberNode, ::Module, ::String, ::Expr, ::Bool) at ./docs/Docs.jl:657 (repeats 2 times)
 [7] @doc(::LineNumberNode, ::Module, ::String, ::Vararg{Any,N} where N) at ./boot.jl:411
 [8] include at ./boot.jl:295 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] include at ./sysimg.jl:26 [inlined]
 [11] include(::String) at /home/vagrant/.julia/v0.7/Colors/src/Colors.jl:3
 [12] top-level scope
 [13] include at ./boot.jl:295 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:521
 [15] include(::Module, ::String) at ./sysimg.jl:26
 [16] top-level scope
 [17] eval at ./boot.jl:298 [inlined]
 [18] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Colors/src/utilities.jl:19
in expression starting at /home/vagrant/.julia/v0.7/Colors/src/utilities.jl:12
in expression starting at /home/vagrant/.julia/v0.7/Colors/src/utilities.jl:12
in expression starting at /home/vagrant/.julia/v0.7/Colors/src/Colors.jl:30
ERROR: LoadError: Failed to precompile Colors to /home/vagrant/.julia/lib/v0.7/Colors.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:298 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/PlotUtils/src/PlotUtils.jl:7
ERROR: LoadError: LoadError: LoadError: Failed to precompile PlotUtils to /home/vagrant/.julia/lib/v0.7/PlotUtils.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:295 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] _require(::Symbol) at ./loading.jl:453
 [13] require(::Symbol) at ./loading.jl:333
 [14] include at ./boot.jl:295 [inlined]
 [15] include_relative(::Module, ::String) at ./loading.jl:521
 [16] include(::Module, ::String) at ./sysimg.jl:26
 [17] process_options(::Base.JLOptions) at ./client.jl:323
 [18] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/Plots/src/Plots.jl:13
in expression starting at /home/vagrant/.julia/v0.7/LPVSpectral/src/LPVSpectral.jl:29
in expression starting at /home/vagrant/.julia/v0.7/LPVSpectral/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for LPVSpectral
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LPVSpectral/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: LPVSpectral had test errors

>>> End of log
