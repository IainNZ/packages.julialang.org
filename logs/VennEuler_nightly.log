>>> 'Pkg.add("VennEuler")' log

WARNING: deprecated syntax "(String=>String)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/BinDeps.jl:146.
Use "Dict{String,String}()" instead.

WARNING: deprecated syntax "(String=>String)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/BinDeps.jl:147.
Use "Dict{String,String}()" instead.

WARNING: deprecated syntax "(String=>String)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/BinDeps.jl:148.
Use "Dict{String,String}()" instead.

WARNING: deprecated syntax "(String=>String)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/BinDeps.jl:149.
Use "Dict{String,String}()" instead.

WARNING: deprecated syntax "(Symbol=>Any)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:224.
Use "Dict{Symbol,Any}()" instead.

WARNING: deprecated syntax "(Symbol=>Any)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:383.
Use "Dict{Symbol,Any}()" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:387.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Any=>Any)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:494.
Use "Dict{Any,Any}()" instead.

WARNING: deprecated syntax "(Any=>Any)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:555.
Use "Dict{Any,Any}()" instead.

WARNING: deprecated syntax "(Any=>Any)[]" at /home/idunning/pkgtest/.julia/v0.4/BinDeps/src/dependencies.jl:660.
Use "Dict{Any,Any}()" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Cairo/deps/build.jl:53.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Cairo/deps/build.jl:63.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Cairo/deps/build.jl:73.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Cairo/deps/build.jl:88.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/deps/build.jl:136.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/NLopt/deps/build.jl:54.
Use "Dict(a=>b, ...)" instead.
INFO: Installing BinDeps v0.3.5
INFO: Installing Cairo v0.2.18
INFO: Installing Color v0.3.8
INFO: Installing FixedPointNumbers v0.0.4
INFO: Installing Iterators v0.1.6
INFO: Installing MathProgBase v0.3.1
INFO: Installing NLopt v0.1.3
INFO: Installing SHA v0.0.3
INFO: Installing URIParser v0.0.3
INFO: Installing VennEuler v0.0.1
INFO: Building Cairo
INFO: Building NLopt
INFO: Package database updated
INFO: METADATA is out-of-date a you may not have the latest version of VennEuler
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'using VennEuler' log

WARNING: deprecated syntax "(Symbol=>Cenum)[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/NLopt/src/NLopt.jl:79.
Use "Dict{Symbol,Cenum}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Cenum=>Symbol)[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/NLopt/src/NLopt.jl:95.
Use "Dict{Cenum,Symbol}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/names_data.jl:6.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/maps_data.jl:9.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/maps_data.jl:20.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/src/constants.jl:126.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/src/constants.jl:139.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/src/constants.jl:147.
Use "Dict(a=>b, ...)" instead.
Julia Version 0.4.0-dev+998
Commit e24fac0 (2014-10-07 22:02 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log

WARNING: deprecated syntax "(Symbol=>Cenum)[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/NLopt/src/NLopt.jl:79.
Use "Dict{Symbol,Cenum}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Cenum=>Symbol)[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/NLopt/src/NLopt.jl:95.
Use "Dict{Cenum,Symbol}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/names_data.jl:6.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/maps_data.jl:9.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Color/src/maps_data.jl:20.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/src/constants.jl:126.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/Cairo/src/constants.jl:139.
... truncated ...
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa

aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa

VennEuler.eval_euler_state(eo2,[0.33,0.5,0.66,0.5]) = 0.035109852128408045
eo2.evalfn([0.33,0.5,0.66,0.5],[]) = 0.035109852128408045
elapsed time: 0.000939603 seconds (85424 bytes allocated)
got 2.0337435475418982e-8 at [0.34934614844867373,0.5643980183858587,0.4596521096774332,0.3625895566648658] (returned FTOL_REACHED)
got 0.0025038986346310322 at [0.4610913088947539,0.6658474488273449,0.5896418289912568,0.49973212244256804,0.7040267252556772,0.5861761247420467] (returned FTOL_REACHED)
got 0.0008804483421327925 at [0.5,0.5,0.36882407012013246,0.4474342753356501,0.3951729553034306,0.3935128409626605,0.21752872679188834] (returned FTOL_REACHED)
optimizing #2
preserving range: [3,4]
lb = [0.5,0.5,0.25953329536970077,0.25953329536970077,0.32897042485896844,0.4342267728392698,0.6359661113669155]
ub = [0.5,0.5,0.7404667046302993,0.7404667046302993,0.32897042485896844,0.4342267728392698,0.6359661113669155]
got 0.006899358750344826 at [0.5,0.5,0.4114739879667975,0.37351822440953675,0.32897042485896844,0.4342267728392698,0.6359661113669155] (returned FTOL_REACHED)
optimizing #1
preserving range: [1,2]
lb = [0.5,0.5,0.4114739879667975,0.37351822440953675,0.32897042485896844,0.4342267728392698,0.6359661113669155]
ub = [0.5,0.5,0.4114739879667975,0.37351822440953675,0.32897042485896844,0.4342267728392698,0.6359661113669155]
got 0.006899358750344826 at [0.5,0.5,0.4114739879667975,0.37351822440953675,0.32897042485896844,0.4342267728392698,0.6359661113669155] (returned MAXTIME_REACHED)
optimizing #3
preserving range: [5,6,7]
lb = [0.5,0.5,0.4114739879667975,0.37351822440953675,0.19364916731037085,0.19364916731037085,0.0]
ub = [0.5,0.5,0.4114739879667975,0.37351822440953675,0.8063508326896291,0.8063508326896291,1.0]
got 0.0011169387058281035 at [0.5,0.5,0.4114739879667975,0.37351822440953675,0.3903984527848228,0.39488906159812825,0.9676449130393455] (returned FTOL_REACHED)
got 0.0011169387058281035 at [0.5,0.5,0.4114739879667975,0.37351822440953675,0.3903984527848228,0.39488906159812825,0.9676449130393455] (returned FTOL_REACHED)
obj.specs[i] = EulerSpec(:circle,[0.5,0.5],[1,2])
obj.specs[i] = EulerSpec(:triangle,[NaN,NaN],[3,4])
obj.specs[i] = EulerSpec(:rectangle,[NaN,NaN,NaN],[5,6,7])

>>> end of log
