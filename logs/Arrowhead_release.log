>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.631972866593647 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3069764004711224
 0.0 0.9434782843162968 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.28057317371342827
 0.0 0.0 0.3618942898990407 0.0 0.0 0.0 0.0 0.0 0.0 0.23207794175674046
 0.0 0.0 0.0 0.11647738488046211 0.0 0.0 0.0 0.0 0.0 0.0891133411313596
 0.0 0.0 0.0 0.0 0.8884807294032673 0.0 0.0 0.0 0.0 0.4644233412465333
 0.0 0.0 0.0 0.0 0.0 0.557939006596538 0.0 0.0 0.0 0.03526413640676851
 0.0 0.0 0.0 0.0 0.0 0.0 0.10549266643287059 0.0 0.0 0.6841583277513261
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5858852485888724 0.0 0.15685729595418163
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.47731959583703776 0.5791292439969644
 0.3069764004711224 0.28057317371342827 0.23207794175674046 0.0891133411313596 0.4644233412465333 0.03526413640676851 0.6841583277513261 0.15685729595418163 0.5791292439969644 0.8023011842308938]
(U,Lambda) = eig(full(A)) => ([-0.5741656860144948,0.11628955162700594,0.2819851003395166,0.38334561028388947,0.5574900593834271,0.5756244174874074,0.6085332079479615,0.7878879403536525,0.9316641140465375,1.8025869413240296],
[-0.15742474743724189 0.0012436751045349212 0.14750194194089297 0.09598616999698686 -0.052021175206283965 -0.3098293394789541 -0.8338597863102685 0.33343356250602585 -0.03915329313122325 -0.19368078891267854
 -0.1143513929203967 0.0007086414735248266 0.07132904078902066 0.03894104920996004 -0.00917494131006389 -0.04337808128297851 -0.053334947266181335 -0.30539078727647717 0.9077793200273742 -0.24120891045842857
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [10860.98465835889 0.0 0.0 0.0 0.0 0.0 0.0 0.0 11826.159607179528
 0.0 357.11469897784235 0.0 0.0 0.0 0.0 0.0 0.0 13.541888170393946
 0.0 0.0 87.77120180046462 0.0 0.0 0.0 0.0 0.0 1537.5102437643864
 0.0 0.0 0.0 3.533909064351816 0.0 0.0 0.0 0.0 620.0280854489022
 0.0 0.0 0.0 0.0 0.23371317811471531 0.0 0.0 0.0 3.364311192413977
 0.0 0.0 0.0 0.0 0.0 0.005467008650196991 0.0 0.0 61.37236219904915
 0.0 0.0 0.0 0.0 0.0 0.0 0.004363761934707961 0.0 1083.7237311605766
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.003677664544852129 0.014299215951614843]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9958371933288127 0.09114958034103121 4.56123483998396e-5 0.00019054126580190825 4.3190364962370027e-7 1.5653487839478186e-11 5.654776702497515e-14 6.727130037333317e-18
 -0.0006231912583525316 -0.00730938693557495 0.9999730705084493 0.00020676792920685673 4.5748548753702264e-7 1.65794355550655e-11 5.9892700457428e-14 7.125055601836436e-18
 -0.07072287596651021 -0.7739815863603963 -0.005831664435489788 0.6292185863604296 0.0008608475807068786 3.1161818363136616e-8 1.1257035982870872e-10 1.339178339221974e-14
 -0.02851940155182805 -0.31077788920671584 -0.0022098700692066535 -0.3866911592187811 0.86779537398573 7.785922161432236e-6 2.80034658461882e-8 3.3313907842859445e-12
 -0.00015474805013577267 -0.0016862885380572168 -1.198972415305425e-5 -0.00208968398122948 -0.001549154623340476 0.9999951828289297 3.475980334169746e-8 4.133917419374681e-12
 -0.002822941409804702 -0.030761574018625087 -0.00021871858347795407 -0.03811970613973804 -0.028096011641233164 -0.00017553111211717986 0.9984003105219447 2.51672214282158e-7
 -0.049847985116801004 -0.5431931667142302 -0.0038621703784508677 -0.6731243273329771 -0.4961236358378597 -0.0030989429070530264 -0.056540427566814884 1.3180267000875384e-5
 -6.577203058704549e-7 -7.167173857073573e-6 -5.095948966796853e-8 -8.881553319088764e-6 -6.546110087246288e-6 -4.088493731919928e-8 -4.939483148279159e-7 -0.9999999999131087],

[16123.40075691512,1336.5743538003157,357.1060817857423,55.31563118745862,3.0676479967436383,0.23371205430732359,0.0054638367135390635,0.0036776645449825758],
[-0.6708121098043578 0.7406802254472206 0.001387248891772186 0.037411952466846414 0.0015291516228171202 7.274433994355272e-7 1.1240534121395772e-7 1.9866753815255487e-11
 -1.3802966383300864e-5 -0.0019529699247845954 0.9999972004812584 0.0013348824773732261 5.325734645628849e-5 2.5333567645955268e-8 3.914568611068646e-9 6.918689987431314e-13
 -0.0003849951949934327 -0.05082642339584448 -0.001433333740608399 0.9984026275120168 0.024630474815190963 1.1702906194233819e-5 1.808332914633663e-6 3.196085200838236e-10
 -6.250850746277519e-6 -0.00082169824413062 -2.186879548384372e-5 -0.0247042538127593 0.9996942091746222 0.00011772923301783182 1.8112126510276148e-5 3.2011707281861354e-9
 -2.2431160243148653e-9 -2.9486414454025125e-7 -7.846846299891133e-9 -8.82908997012913e-6 -0.00011802457478704796 0.999999991318511 1.4868350822967056e-6 2.627077500757798e-10
 -9.571829999811026e-10 -1.2582449362081918e-7 -3.3484066747153008e-9 -3.7674841402906136e-6 -5.007130506554446e-5 -4.106035998731321e-6 0.9989799146921029 3.741217165583837e-7
 -1.3491244387837449e-8 -1.7734633747545077e-6 -4.719491753980379e-8 -5.3101704778296296e-5 -0.0007057411538991159 -5.7862009453089085e-5 -0.045156723841472 1.563914998886337e-5
 -1.5002260911313298e-13 -1.97209089834807e-11 -5.248073833928437e-13 -5.904908439738108e-10 -7.84783554049224e-9 -6.433604156317972e-10 -3.324726377585031e-7 -0.9999999998776388
 -0.7416272411993311 -0.669929092541488 -0.0012726532520927522 -0.034357738722265635 -0.0014043520079595742 -6.680741559279169e-7 -1.0323154151419774e-7 -1.824535737433012e-11],

[1,2,2,4,4,5,6,8],[1.0,74.69093029223643,74.69093029223643,183.48072610377645,183.48072610377645,243.33724057782132,89.02138406096425,100.7725648664814],[1.0,26559.87256149102,26559.87256149102,58620.05264153357,58620.05264153357,1.633554298143037e8,3.828162244895621e8,2.4424664013276274e12],[1.3291746012106471,270646.8966770134,1.0041095010304701,1017.4259828645667,1.027682107849971,1.0001928037266834,1.0430435458037874,1.0000160168492724],[0.0,153.8369422479219,0.0,294.1266560838784,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 2.0710970055751697e-14
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 6.593374842800719e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
