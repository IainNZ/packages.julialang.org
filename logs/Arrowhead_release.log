>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.3807469844422964 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7054789599384137
 0.0 0.6457867440524376 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.45967627025933266
 0.0 0.0 0.08686643557117013 0.0 0.0 0.0 0.0 0.0 0.0 0.2708835146575739
 0.0 0.0 0.0 0.3863704874618823 0.0 0.0 0.0 0.0 0.0 0.2762249662721603
 0.0 0.0 0.0 0.0 0.7921607547711045 0.0 0.0 0.0 0.0 0.14821662713774408
 0.0 0.0 0.0 0.0 0.0 0.9040896761267925 0.0 0.0 0.0 0.5127817692714951
 0.0 0.0 0.0 0.0 0.0 0.0 0.04594025810713287 0.0 0.0 0.4275220427469908
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9977169568212783 0.0 0.7162861111212382
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.831183651705586 0.5051223816840564
 0.7054789599384137 0.45967627025933266 0.2708835146575739 0.2762249662721603 0.14821662713774408 0.5127817692714951 0.4275220427469908 0.7162861111212382 0.5051223816840564 0.22481558117475142]
(U,Lambda) = eig(full(A)) => ([-1.058076276901609,0.06992673218983114,0.12936609277111,0.38560903218519815,0.5212561890658158,0.7041082081799541,0.7945238748350858,0.8629258926587948,0.9460172750586678,1.9400205101915902],
[-0.36311861290367664 0.0940514291133014 0.3149571722999766 0.3713680756519743 0.6946954202605038 -0.2177216801171746 -0.026395001000060023 0.06901819793870242 -0.0651223637527997 -0.287195659331393
 -0.199797156256721 0.03307697649613987 0.0998960193656745 -0.004521907927610925 -0.5107299267200158 -0.7865552197673698 -0.04784499722228057 0.09986233422244443 -0.07989129865580018 -0.22545271498474895
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [620.0396303783594 0.0 0.0 0.0 0.0 0.0 0.0 0.0 3.4753588115775575
 0.0 115.22083414564864 0.0 0.0 0.0 0.0 0.0 0.0 0.16739823799286505
 0.0 0.0 5.44065232375418 0.0 0.0 0.0 0.0 0.0 9.932904793694244e-5
 0.0 0.0 0.0 2.176827946756761 0.0 0.0 0.0 0.0 6.398131307370273
 0.0 0.0 0.0 0.0 0.43748885523566267 0.0 0.0 0.0 0.27931405354253047
 0.0 0.0 0.0 0.0 0.0 0.013154173328423186 0.0 0.0 140.79301175092428
 0.0 0.0 0.0 0.0 0.0 0.0 0.0019940858010654753 0.0 45.50612154623212
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 7.483439559934836e-5 38.735231855744594]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999989141921641 0.001473638455299667 2.0483090443637288e-6 1.1353012222342555e-12 1.1686877095592594e-8 2.064357190879427e-11 3.6178169071224858e-12 2.887434060780085e-13
 -1.6690599926075818e-6 -0.0025225730873283 0.9999968183060549 1.586993611973547e-12 1.6307072566779154e-8 2.8795126411747407e-11 5.046318816858748e-12 4.027542901942139e-13
 -9.562448953668858e-10 -6.496680750186473e-7 -1.640429094922074e-9 0.9999999999997891 5.16328316735233e-9 7.712859742259552e-12 1.3429522608422339e-12 1.071829412810535e-13
 -6.159109423249607e-5 -0.04180298618391565 -0.00010546781910114482 -3.231706726250087e-8 0.9991258656538545 3.213175832470636e-6 5.403726786263974e-7 4.312771065024547e-8
 -2.688762373878863e-6 -0.001824578973759726 -4.602680444689977e-6 -1.1926829074951765e-9 -7.955621428085319e-5 0.9999983322754192 5.841296960739323e-7 4.6613707321657154e-8
 -0.0013553158511443034 -0.9197026408977951 -0.002320026148415396 -5.973083738633034e-7 -0.03848048845357167 -0.0016813775237486612 0.3898313666262214 0.02622524537938609
 -0.0004380556041921802 -0.2972597811544941 -0.0007498624345261457 -1.9305668574028295e-7 -0.012436946838043575 -0.0005429629306529938 -0.7428826812851883 0.5996717583084051
 -0.0003728769848399021 -0.2530302770531225 -0.0006382898446549924 -1.6433161575211115e-7 -0.01058643537581739 -0.00046216548365227324 -0.5442029285480078 -0.7998162406403692],

[620.0500023158274,153.08233274746348,115.2206752309166,5.440652323753033,2.174925550247535,0.4374881262470242,0.00533775018453097,0.0012460008364973594],
[-0.9999821866279882 0.0059687765840534725 1.1022611872588257e-5 1.293837040696337e-10 3.331758622176203e-6 2.9257554498268964e-8 4.202500642254983e-7 1.4368558152984544e-7
 -3.1015318743506887e-7 -0.0018986709315098734 0.9999981975222946 3.360897129138227e-11 8.638983083370705e-7 7.583745216018882e-9 1.089299879804021e-7 3.72437031441867e-8
 -8.390607197201389e-12 -2.3089654165710223e-8 -7.746009428737445e-11 0.9999999999999998 1.2916133409467326e-8 9.591800499705545e-11 1.3688419438993019e-9 4.680134246031924e-10
 -2.1622968259959028e-7 -0.00059443769212187 -1.992570306004031e-6 -1.2930194945024986e-8 0.9999997960552334 1.5987933226823382e-5 0.00022037343596684517 7.534634253296707e-5
 -1.8971108274423117e-9 -5.2144029437677166e-6 -1.7476215919820294e-8 -9.590494830577083e-11 -1.6002826905340405e-5 0.9999999985776089 4.7876019523194585e-5 1.6366744593662425e-5
 -2.8752616005363223e-8 -7.902889727278866e-5 -2.648658847170288e-7 -1.4441462921667746e-9 -0.000232733950283061 -5.0554815207525424e-5 0.9606874035278579 0.2768629146916347
 -1.4087903509947086e-9 -3.872174523273516e-6 -1.2977619081334396e-8 -7.0758352662002e-11 -1.1402845074640025e-5 -2.474843557031047e-6 -0.27752737677782713 0.9597079741168315
 -4.5002860558314e-11 -1.2369401165870225e-7 -4.145613158942978e-10 -2.2603276980195836e-12 -3.64255913408479e-7 -7.905557330822218e-8 -0.007629637175473033 -0.04803669725224285
 -0.005968787696289685 -0.99998020435949 -0.001898638096915048 -2.3081601531864057e-8 -0.0005944125710515419 -5.219844979784747e-6 -7.497691852751985e-5 -2.5634980355212465e-5],

[1,2,2,3,4,5,7,8],[1.0000000083978835,1.0024629415385473,1.0024629415385473,1.001034213080186,1.0010333618473646,1.0046787856047827,14.093949180236962,30.328353580547216],[1.0,111.72161397954964,111.72161397954964,3.987418796190899e6,154.7183571458172,17634.34433662535,23746.81860792498,743381.387455832],[1.0059338248502108,277924.4293661725,1.001908347566702,1.0000000377878586,1.0008582610906742,1.0000743504101943,12.408512622438012,293.48027931565366],[0.0,1.0049941508923252,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) => 7.296217271151353e-16
N2 = norm(Va' * Va - eye(8)) => 3.330973966044193e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
