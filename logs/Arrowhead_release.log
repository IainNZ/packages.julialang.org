>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.4336986422013964 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7095696326398275
 0.0 0.6882711086990911 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11555195775671456
 0.0 0.0 0.9320938961399015 0.0 0.0 0.0 0.0 0.0 0.0 0.6906742088194717
 0.0 0.0 0.0 0.4308214628340816 0.0 0.0 0.0 0.0 0.0 0.9181682089880336
 0.0 0.0 0.0 0.0 0.21535392112458562 0.0 0.0 0.0 0.0 0.13165203023849847
 0.0 0.0 0.0 0.0 0.0 0.8206086708745042 0.0 0.0 0.0 0.898026156434689
 0.0 0.0 0.0 0.0 0.0 0.0 0.19466221620199375 0.0 0.0 0.5523228921131411
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7162871354584044 0.0 0.8110122585027579
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6694924738195871 0.3032460150064016
 0.7095696326398275 0.11555195775671456 0.6906742088194717 0.9181682089880336 0.13165203023849847 0.898026156434689 0.5523228921131411 0.8110122585027579 0.3032460150064016 0.8750193118220457]
(U,Lambda) = eig(full(A)) => ([-1.2015751230668714,0.2130616178020781,0.23043163141862832,0.4326170598107284,0.5764952176956308,0.6746740315766986,0.6888985215207306,0.7684485923478082,0.9039025926208877,2.689354697449281],
[-0.2938444324325604 -0.049419147403767516 0.1851532774400784 0.7887059875084294 0.4353012863592989 0.046866685149048515 0.014837195016094592 0.08791634183230386 -0.05529536577958676 0.22843735999849513
 -0.04140604540064491 -0.0037365502035985676 0.013386509627608595 0.0005433808861305882 -0.09056114184930704 -0.13526133025186782 0.9827909921738893 0.059775056496278664 -0.019635642859588798 0.04193310949263131
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [3404.514254930892 0.0 0.0 0.0 0.0 0.0 0.0 0.0 7.744251311539336
 0.0 24.36409085024402 0.0 0.0 0.0 0.0 0.0 0.0 0.3235535519877636
 0.0 0.0 0.5266771701676178 0.0 0.0 0.0 0.0 0.0 0.0003989412572357641
 0.0 0.0 0.0 0.007816528561267714 0.0 0.0 0.0 0.0 42.01574113092879
 0.0 0.0 0.0 0.0 0.004044819696764977 0.0 0.0 0.0 0.0007992889442233733
 0.0 0.0 0.0 0.0 0.0 0.0035010303184038237 0.0 0.0 1.4878990742631293
 0.0 0.0 0.0 0.0 0.0 0.0 0.0014685127633353237 0.0 95.01227997069134
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0004524002382845403 5.622319555845168]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999975789324 6.958545312190867e-5 1.2541039025344517e-8 6.829241905881643e-15 1.3982620035538133e-13 8.921709992354178e-19 1.1552132677472758e-15 8.029611463211062e-16
 -2.1639196902854405e-7 -0.0032899539973951014 0.9999945880866796 5.57380926789233e-12 1.1406836620566812e-10 7.278212665328009e-16 9.424076534123192e-13 6.550450340739299e-13
 -2.667974576018314e-10 -3.834194015564732e-6 -1.261996409348237e-8 0.9999999999926494 3.010370955199483e-10 1.920545315051696e-15 2.4867503979361253e-12 1.7284057529957746e-12
 -2.8098604597704367e-5 -0.4037997417035906 -0.0013284898744739917 -1.548538733498027e-6 0.9148448519347339 1.2540613603996255e-6 0.001487299692719918 0.0008293065801213169
 -5.345354716694484e-10 -7.681708312236936e-6 -2.5272604042459247e-8 -2.9453967060339984e-11 -4.76202789300481e-6 0.9999999999590988 3.365780051368709e-7 5.948124228937478e-8
 -9.95052964519959e-7 -0.014299718224315416 -4.704566999308952e-5 -5.482858523659373e-8 -0.007937421180934212 -4.841874879180863e-7 0.999866236630391 0.00014844446035975587
 -6.354076864882497e-5 -0.9131323848937496 -0.0030041797659873127 -3.501043375674574e-6 -0.40307501441907373 -8.931963377986907e-6 -0.016267943633575133 0.05870353646688299
 -3.7600035098395985e-6 -0.05403430025383844 -0.00017777132174132088 -2.0717160071635244e-7 -0.022943996205939555 -4.6469001073819117e-7 -0.0008067192971441161 -0.9982751048789688],

[3404.5230710817214,104.05063608383026,24.363966223404997,0.5266771701637467,0.007175428709428484,0.0040448196966330445,0.0035006628487000125,0.0004598200174706228],
[-0.9999974080383055 0.0022768209403207966 1.7524300330220622e-6 4.414516659553867e-11 6.634311503885527e-8 7.509380176479295e-13 1.123484382105353e-9 5.945136281459315e-9
 -1.5485850683336681e-9 -0.0007703627877976451 0.9999997032704477 2.578444692080343e-10 3.873179080884717e-7 4.3840528850533784e-12 6.559016585738802e-9 3.470831219782216e-8
 -4.1273366942701104e-14 -1.9407689659525933e-8 -2.7280644355791327e-10 0.9999999999999996 2.209615230036249e-8 2.5007477405039685e-13 3.741333339154797e-10 1.979713401553693e-9
 -6.451227992411289e-11 -3.0334386533838223e-5 -4.262105337022451e-7 -2.2982194642789252e-8 0.9965830898550093 2.423447069669275e-6 0.00332094835457437 0.014097469277704226
 -6.350668094433493e-16 -2.986154266381053e-10 -4.195668541080218e-12 -2.2620305732350232e-13 -2.684375386917368e-6 0.9999999999917164 3.888970185120914e-7 5.232284182049208e-7
 -1.0232595063881001e-12 -4.811479192460218e-7 -6.760324467910402e-9 -3.644671728771206e-10 -0.003872821169260107 -4.1909286498087224e-7 0.9999711940529437 0.0011302434356325153
 -2.7407783059401877e-11 -1.2887442232942593e-5 -1.810738157019797e-7 -9.761818384059124e-9 -0.08249274394966784 -3.2428397817425488e-6 -0.006824331245722864 0.18747964264092942
 -4.996372320842208e-13 -2.3493494350846878e-7 -3.3009316947202528e-9 -1.779543273172977e-10 -0.0014465852524083388 -5.197410202521457e-8 -0.00010425454207687114 -0.9821666699180256
 -0.0022768216159624955 -0.9999971107663425 -0.0007703607797246909 -1.9407020681271087e-8 -2.9165644525087577e-5 -3.30126061616683e-10 -4.939042446061284e-7 -2.6135904432201994e-6],

[1,2,2,3,4,5,6,8],[1.0000000000009277,1.0117222042068044,1.0117222042068044,1.011098188142866,1.0107691671900234,1.5046336417171327,1.4301958676554458,24.642357998538053],[0.9999999999999999,3344.5540035265235,3344.5540035265235,1.2548191834512694e8,80280.23723091876,8.155143773195763e9,5.061336937757305e6,1.0365642918530554e7],[1.0022716452159506,1.6863369723105878e6,1.0007721375959715,1.00000005299567,1.0679049783920798,1.0000061376727618,1.0101915317346046,1.1692094367324273],[0.0,1.0234547072140403,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 6.661338147904109e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 2.220805658290276e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
