>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.7008661761882955 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.21261187053805064
 0.0 0.44660239872157215 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.09445075187433738
 0.0 0.0 0.35503867824332636 0.0 0.0 0.0 0.0 0.0 0.0 0.4509863875591287
 0.0 0.0 0.0 0.11723218187169859 0.0 0.0 0.0 0.0 0.0 0.8657358915915505
 0.0 0.0 0.0 0.0 0.8944030619121603 0.0 0.0 0.0 0.0 0.934434316094529
 0.0 0.0 0.0 0.0 0.0 0.6613285961393098 0.0 0.0 0.0 0.980833976358326
 0.0 0.0 0.0 0.0 0.0 0.0 0.5591269637285046 0.0 0.0 0.37610542494223465
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7753744733302794 0.0 0.2254782690443431
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6203250602856998 0.7405683963314829
 0.21261187053805064 0.09445075187433738 0.4509863875591287 0.8657358915915505 0.934434316094529 0.980833976358326 0.37610542494223465 0.2254782690443431 0.7405683963314829 0.7025939206293685]
(U,Lambda) = eig(full(A)) => ([-1.2769743117371597,0.2286351432468341,0.3897600194434263,0.4479656677019346,0.5660007785311711,0.6351438944128063,0.6993601244931915,0.769411985418849,0.8222094318551401,2.551378777684029],
[-0.0737571539332462 0.048364192121664665 -0.04659816314496543 0.012024545016937695 -0.027413135158866918 0.05142212434098967 0.9805863953621164 0.07730661517205754 -0.11082629409375437 -0.08185740553287489
 -0.03759955519326362 0.04654843846785649 -0.11329821466085094 -0.9909567797172368 0.01375557414256616 -0.007962943061004885 -0.0025956086620806604 0.007292376008452874 -0.015905328730987413 -0.03197142343061569
... truncated ...
 2.0e-7 2.00000010000001 9.999999999999998e-15 2.0e-7
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [1880.1163719377291 0.0 0.0 0.0 0.0 0.0 0.0 0.0 20586.68279473101
 0.0 202.88506133909192 0.0 0.0 0.0 0.0 0.0 0.0 0.2615177848583303
 0.0 0.0 131.12846253447867 0.0 0.0 0.0 0.0 0.0 97.88633692347923
 0.0 0.0 0.0 102.44342518136685 0.0 0.0 0.0 0.0 0.28306734452665483
 0.0 0.0 0.0 0.0 2.6150757266986613 0.0 0.0 0.0 254.0455422124058
 0.0 0.0 0.0 0.0 0.0 2.189251251944361 0.0 0.0 0.5672865976381887
 0.0 0.0 0.0 0.0 0.0 0.0 1.1783418940014125 0.0 0.2616957614196797
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.20133773436007155 0.0021818792420478807]
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999140044078269 1.2805429972851928e-5 0.0048649521030422645 1.4189400528189766e-5 0.012178491893257816 1.0432498150998686e-7 1.2739779157820843e-7 1.3215541938101954e-9
 -1.2598322085491694e-5 -0.9999999997886496 9.100940263215557e-6 2.0714572192162404e-8 1.3459413023276215e-5 1.1382102072715591e-10 1.3898263982888435e-10 1.4416823359370183e-12
 -0.004715298602039681 -8.875370515746275e-6 -0.9999133932359953 3.5489670254449265e-5 0.01228701135575722 1.0200466347468728e-7 1.245397611327795e-7 1.291805782178913e-9
 -1.3635469183374006e-5 -2.005852443108666e-8 -3.469802083272993e-5 -0.999999997538412 5.9441544374559837e-5 4.833823526648387e-10 5.900976313316317e-10 6.120562385499635e-12
 -0.012237176877979714 -1.3414482176705068e-5 -0.012228494489644283 -5.8841304634037154e-5 -0.9998473502897557 0.0022244434842057506 0.0010196470744796395 8.479946316793813e-6
 -2.7325755618945642e-5 -2.9953202985436564e-8 -2.7303133406990996e-5 -1.3136768021229207e-7 -0.002224105498361717 -0.9999975259215736 3.645157000553937e-6 2.7087453827302984e-8
 -1.260568184738271e-5 -1.3816610474368458e-8 -1.2592763908659146e-5 -6.058174451348158e-8 -0.0010194969807736233 -1.3770013806778996e-6 -0.9999994801531265 4.405448068411138e-8
 -1.0509943041766158e-7 -1.151917334134591e-10 -1.0498353595566387e-7 -5.05033296355722e-10 -8.478725047163e-6 -8.224285873743274e-9 -3.5407806262867225e-8 -0.999999999964044],

[20674.13492411182,202.8850627396834,131.43838545695027,102.44342853744072,23.19645841152483,2.189253572802431,1.1783443230710817,0.2013377355896142],
[-0.09093268942655576 0.00011866668850112405 0.06958907830329701 0.0002604142073523178 0.987089562889863 8.959359855603538e-5 0.00020327052883035055 1.2340834513257953e-5
 -1.2363329147589122e-7 -0.9999999928852755 1.4047987710185787e-5 4.102437130248852e-8 0.00011772115330583617 1.0548154429798008e-8 2.392976386839278e-8 1.4527619887126384e-9
 -2.9907411282071002e-5 -5.736320231947837e-6 -0.99755566432771 4.542708070943496e-5 0.06945788359759411 6.109714680360476e-6 1.3859028368881507e-5 8.413351109478179e-7
 -6.756578556864666e-8 -1.0128217026214433e-8 -2.7043729187342325e-5 -0.999999964778147 0.00026251401381060347 2.261928197555686e-8 5.130217149726715e-8 3.114226813819216e-9
 -1.5478831077764023e-6 -1.729052215714044e-7 -0.00024329604325831384 -1.5020433196406973e-6 -0.11271878188299854 0.0026571102741255715 0.0022628821322120104 0.00011014180581605353
 -2.893612957383389e-9 -3.232129869498982e-10 -4.5476379510790933e-7 -2.8073724442429883e-9 -0.0002099081532345287 -0.9999964658103299 6.772353692168692e-6 2.94536153541935e-7
 -7.184727717869579e-10 -8.024588274365184e-11 -1.1289381882815426e-7 -6.968334483830324e-10 -5.178876800678573e-5 -7.411559972349469e-7 -0.9999974187281603 2.578316481833038e-7
 -1.0235243835110574e-12 -1.14313209209654e-13 -1.6081411226209467e-10 -9.925698613991343e-13 -7.359258301300198e-8 -7.563578313266706e-10 -6.049952761724298e-9 -0.9999999938571776
 -0.9958570404916484 -1.0711252297897397e-5 -0.006324288632341422 -2.3712193399813782e-5 -0.09013403316984543 -8.182287780491403e-6 -1.856404467288589e-5 -1.1270492180318694e-6],

[1,2,3,4,5,6,7,8],[1.0,172.1325128904199,421.7777093188152,694.2117143745022,13305.779068281543,5586.472389316412,51038.17752259191,2.1750332049879963e6],[1.0,729490.7754233531,3015.44948918906,1.334741742382068e6,58260.64063849675,3.116541928346495e7,1.2551715789918071e8,8.81079742808774e10],[129.93108410269926,1.000135283469675,1.071478316256506,1.000331029617688,260.1574705555512,1.0027546991376257,1.0025002708903896,1.0001249956745633],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,1,1,1,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 1.085714033626255e-15
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.1242373856555424e-15
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
