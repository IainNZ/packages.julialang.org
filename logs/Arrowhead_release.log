>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.08373891097958319 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5152013101043795
 0.0 0.627797171329707 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3922343090879976
 0.0 0.0 0.3260797558571209 0.0 0.0 0.0 0.0 0.0 0.0 0.3369846388020983
 0.0 0.0 0.0 0.34697569192561883 0.0 0.0 0.0 0.0 0.0 0.4679707055025275
 0.0 0.0 0.0 0.0 0.44836994049091716 0.0 0.0 0.0 0.0 0.38998450719820843
 0.0 0.0 0.0 0.0 0.0 0.03680100106678408 0.0 0.0 0.0 0.7634952869182985
 0.0 0.0 0.0 0.0 0.0 0.0 0.43018767611968456 0.0 0.0 0.09049556002797288
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.07207332159127744 0.0 0.07713085647031215
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8436535783530825 0.8669270527529607
 0.5152013101043795 0.3922343090879976 0.3369846388020983 0.4679707055025275 0.38998450719820843 0.7634952869182985 0.09049556002797288 0.07713085647031215 0.8669270527529607 0.5553565298820244]
(U,Lambda) = eig(full(A)) => ([-1.0524152995151428,0.06693266850088286,0.07265973522129143,0.22673013037920953,0.33317884085954974,0.4125655926299172,0.4316359177921867,0.5553847149292164,0.6951040487695677,2.0292572280291314],
[-0.30516446717645196 0.7195129821967123 0.3294402490309563 0.45298302819468966 -0.03525257354959967 -0.10419878642156076 -0.02206658899971338 0.13678388832019 -0.09644635205543794 -0.18668802478151775
 -0.1570998110170117 0.016414207740212714 0.005005554734983284 -0.1229540807030409 0.022722999523977237 0.12119713117610616 0.029794855990411116 -0.6782757036331256 -0.6669536495824235 -0.19730572225976198
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [5714.793063252178 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.013505291064979993
 0.0 5121.2933463151085 0.0 0.0 0.0 0.0 0.0 0.0 4186.161799568634
 0.0 0.0 4874.7657971063945 0.0 0.0 0.0 0.0 0.0 0.0020359606011695493
 0.0 0.0 0.0 3546.0051051455325 0.0 0.0 0.0 0.0 0.00024030043395510111
 0.0 0.0 0.0 0.0 809.5798676732124 0.0 0.0 0.0 0.0027607473803935127
 0.0 0.0 0.0 0.0 0.0 302.40198918360466 0.0 0.0 15260.875933619713
 0.0 0.0 0.0 0.0 0.0 0.0 270.8308950439263 0.0 2700.1547667406394
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 6.639992958328522 32.48081246006893]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-9.542809800315413e-7 0.9999999999992841 7.220658015788931e-7 1.5188391522160218e-12 9.52881590443708e-15 2.749019375610571e-15 8.302433688408257e-11 5.0702007299005455e-12
 -0.28764756944760606 -9.660452568255316e-7 0.95773632840945 1.6994203782740135e-6 4.344829395768071e-9 1.0663947397421005e-9 3.2062749937909053e-5 1.9569470388456663e-6
 -1.3843800023781867e-7 -3.396820172141568e-13 -1.8159922324358235e-6 0.9999999999983415 2.5785244026300267e-15 5.739565200297767e-16 1.721603732144541e-11 1.050471569822365e-12
 -1.5599940694400957e-8 -1.775675001529604e-14 -9.221864392065552e-9 -2.1484983167342874e-14 0.9999999999999999 1.3133938990109338e-16 3.85083053597963e-12 2.343144163983338e-13
 -1.7097938880183944e-7 -1.2802784683089566e-13 -5.2465620710359357e-8 -1.1952117729450729e-13 -3.2824422288536338e-15 0.999999999999984 9.509988977204569e-10 5.16485793025035e-11
 -0.9430881636902403 -6.954575731907932e-7 -0.2832539599274421 -6.449492317523356e-7 -1.7324920347479324e-8 -1.7627550805398241e-7 0.1742059671617629 0.002047119219067954
 -0.16685192570689328 -1.229811551226741e-7 -0.05007952383381647 -1.1402572090074195e-7 -3.0609148808346535e-9 -3.021925951187049e-8 -0.984709232319816 0.00045162436749908663
 -0.002006535620669726 -1.4760493925718936e-9 -0.0006005988389657464 -1.3674116191385366e-9 -3.6605824577018826e-11 -3.2285477759123907e-10 -8.809843160046015e-5 -0.9999978026648378],

[16117.143651810531,5714.793063250425,4926.093682115587,4874.765797106185,3546.005105145532,809.5798676732014,271.8430810443411,6.6699138447011235],
[-3.3836754470232183e-7 0.999999999999591 8.376731951030438e-7 1.7805678903451268e-12 1.5356777392301345e-14 1.9405221752409888e-14 1.745370537603918e-9 4.344156256763484e-9
 -0.09140128147522301 -8.657183368256405e-7 0.9956872529677744 1.7853637770687406e-6 6.274989802787693e-9 6.745869682855295e-9 0.0006040350458461557 0.0015025831041420973
 -4.187173876205511e-8 -2.8975157299324176e-13 -1.7970703347824233e-6 0.9999999999983844 3.544750273118734e-15 3.4559945529633413e-15 3.0872277335099865e-10 7.677464804842899e-10
 -3.432212961389049e-9 -1.1017988841965107e-14 -6.638277776150695e-9 -1.562861954118698e-14 1.0 5.752738743794644e-16 5.0231422801622674e-11 1.2457134171497223e-10
 -8.588461699631885e-9 -1.813692397059258e-14 -8.622473102022714e-9 -1.9849556455753158e-14 -7.494064634662242e-16 0.9999999999999977 2.832183768724709e-9 6.268994018633213e-9
 -0.017694930493679904 -3.680058948732618e-8 -0.0173883337292532 -4.000888221545376e-8 -1.4774627278237481e-9 -6.584410804715387e-8 0.19378911832145543 0.09281273167178011
 -0.0028037633314712254 -5.82822439006489e-9 -0.0027533139112899045 -6.33500958505724e-9 -2.3378147866363535e-10 -1.0109328835815718e-8 -0.9810427461410828 0.018338142668903632
 -8.266590333694543e-7 -1.715015305776958e-12 -8.095607430267435e-7 -1.8625722547750753e-12 -6.85454223042464e-14 -2.6479826578813903e-12 -2.151877337541748e-6 -0.9955118645668284
 -0.9956529687044037 -2.5970118365621096e-7 -0.09108764672296037 -2.052226689917388e-7 -3.9963281659480276e-9 -8.046570443860732e-9 -0.0007368861434885413 -0.0018382365922055925],

[1,1,3,3,4,5,7,8],[1.0,1.0,8.713105170245864,8.713105170245864,1.31575102681772,1.1294128010930513,1.5500656741788952,4454.12128530733],[277773.75240584905,277773.75240584905,2.1600934412475876e6,2.1600934412475876e6,2.5159485253233533e7,9.592002749518206e6,29.316275912784512,99403.38192967178],[1.1330416412138908e13,1.0000011680495502,2.469846484527634e11,1.0000020369307854,1.0000000119826504,1.000000090748544,1.155071172826478,1.1059703452658314],[1.0,0.0,16.443290272554417,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 3.371957242713032e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 3.3315014495715955e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
