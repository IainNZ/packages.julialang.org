>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.6904791186263195 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3090908080155983
 0.0 0.4473263250457109 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8798478116715043
 0.0 0.0 0.3456898809025435 0.0 0.0 0.0 0.0 0.0 0.0 0.5419759479703028
 0.0 0.0 0.0 0.6711811642828167 0.0 0.0 0.0 0.0 0.0 0.5847200476005221
 0.0 0.0 0.0 0.0 0.5038167827823221 0.0 0.0 0.0 0.0 0.2206926824062445
 0.0 0.0 0.0 0.0 0.0 0.8133177613279992 0.0 0.0 0.0 0.6490946809952656
 0.0 0.0 0.0 0.0 0.0 0.0 0.6229469667797685 0.0 0.0 0.8030917673868023
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2041229560999851 0.0 0.5938383173905766
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6067461045768394 0.1730687910527684
 0.3090908080155983 0.8798478116715043 0.5419759479703028 0.5847200476005221 0.2206926824062445 0.6490946809952656 0.8030917673868023 0.5938383173905766 0.1730687910527684 0.2840795476310922]
(U,Lambda) = eig(full(A)) => ([-1.3372147187797747,0.2390160136165571,0.36812275927791016,0.498302491664917,0.5363233424071963,0.607439878049655,0.6548392026077536,0.6875458475459708,0.7780381955717068,2.157293596093512],
[-0.111041783377868 -0.036958517216042534 -0.03522212261468162 -0.03614828962418107 0.1206000992194688 0.014592752832180145 -0.1917706409574388 -0.9392677741957234 0.1722268386329142 -0.1426083689582966
 -0.3591565049630226 -0.22800664448514377 -0.4080642055302754 0.3879203959736271 -0.5946391292678196 -0.02154338629265279 0.09375516606008782 0.032647865426660344 0.1297997000959626 -0.34822012806810027
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [2603.761126115194 0.0 0.0 0.0 0.0 0.0 0.0 0.0 101.77483896670549
 0.0 84.15031406259031 0.0 0.0 0.0 0.0 0.0 0.0 0.08145457751963239
 0.0 0.0 34.79746557818425 0.0 0.0 0.0 0.0 0.0 65.30104796885716
 0.0 0.0 0.0 13.941526699625934 0.0 0.0 0.0 0.0 6.769244255089045e-5
 0.0 0.0 0.0 0.0 0.1703861696509379 0.0 0.0 0.0 3572.426300593036
 0.0 0.0 0.0 0.0 0.0 0.0019594443942715124 0.0 0.0 20600.61265027808
 0.0 0.0 0.0 0.0 0.0 0.0 0.0006528891094868298 0.0 0.000832007585519224
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00015628087324559794 1548.77495808458]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.00493039056662106 0.999987845550565 1.9720428644412196e-11 2.700978753018822e-9 4.49372046091543e-16 3.4898781736593125e-12 1.0551809347005044e-22 2.072464918413538e-16
 -3.885195294374978e-6 -1.9175483731700345e-8 0.9999999999924525 2.4960398302055257e-9 3.5403532262778633e-16 2.6741013323415887e-12 8.085237886754085e-23 1.5880093475326755e-16
 -0.0031146676306951226 -1.535941555543004e-5 -1.4597414269333357e-8 0.9999951492930544 1.922955860173384e-12 1.2537390473209472e-8 3.790650225160438e-19 7.445158786330445e-13
 -3.2287226413874666e-9 -1.591950648585853e-11 -1.2898528698640364e-14 -1.1979656385116882e-11 1.0 8.097568369429778e-14 2.447982482113185e-24 4.808045367671049e-18
 -0.17039374185980857 -0.0008401179106528177 -6.620303839636739e-7 -0.0005307477045132148 -5.502536561989942e-10 0.98537555543075 8.649475327109291e-13 1.6988081103046861e-6
 -0.9825858334070809 -0.004844590798400218 -3.817622660141162e-6 -0.0030605154152319835 -3.1725971560903877e-9 -0.16991724391745894 4.242408792239657e-8 0.07496914950844895
 -3.968420166413731e-8 -1.9566099132246813e-10 -1.5418429850986426e-13 -1.2360661680901145e-10 -1.2813331807757074e-16 -6.8617045628847465e-9 -0.9999999999999987 3.019515955701507e-8
 -0.07387179977528477 -0.00036422125099389876 -2.8701274436018575e-7 -0.00023009265304276257 -2.3851906806919317e-10 -0.012772821890071855 -2.7090899522708275e-8 -0.9971858535995649],

[20965.709139827533,2603.7299669356644,84.15031406195519,34.79729678646,13.941526699625934,0.16789469669194013,0.0006528891094868342,0.00021416234921886],
[-0.0006123121907451295 0.9999998125368511 6.101853102633092e-10 2.021048796615144e-7 8.392606419549438e-14 5.4122073552596175e-8 4.208125176035689e-16 2.5196789302530946e-9
 -1.559405417845274e-8 -6.197351487350095e-10 1.0 6.0361739279201526e-9 2.136938387757638e-15 1.340283352514841e-9 1.0420993359437103e-17 6.239728216309445e-11
 -5.169514608056315e-6 -2.0527041624063725e-7 -6.036258167659905e-9 0.9999999999832252 4.799617129058497e-12 2.598470481960763e-6 2.02032808959906e-14 1.2097021607037673e-7
 -2.146997395145606e-12 -8.524010843515744e-14 -2.1369520035966916e-15 -4.7996457992230735e-12 1.0 6.724004262718987e-12 5.227321552571517e-20 3.129938250625786e-13
 -1.3847724784482195e-6 -5.4976696765429e-8 -1.3404682154015627e-9 -2.5988245287554217e-6 -6.7249172085784724e-12 0.9999980336816129 2.2572760811323717e-10 0.0013515606638726254
 -9.18319666804242e-8 -3.6458105882756516e-9 -8.889354013997005e-11 -1.723383805000428e-7 -4.459000686739601e-13 -0.0019830488850700744 1.2732275673423224e-7 0.6859183245020959
 -1.2357980792538798e-15 -4.9062280654310643e-17 -1.1962551830388013e-18 -2.319186299739153e-15 -6.000551427233752e-21 -2.6682988026974413e-11 -0.9999999999999919 9.20520852796856e-8
 -5.506491242490088e-10 -2.1861258994887567e-11 -5.330295296129431e-13 -1.0333871899759578e-9 -2.673736459908647e-15 -1.188928416514269e-5 -6.484699121027348e-9 -0.727677281077252
 -0.9999998125225479 -0.0006123121896162642 -1.5594397657022944e-8 -5.16963571392806e-6 -2.1470646449186067e-12 -1.3846344737638533e-6 -1.0765875788584782e-14 -6.446231814752097e-8],

[1,1,2,3,4,5,7,8],[1.0,1.0,1.0000471804490203,1.0000471390611931,1.0000702451187504,1.0000665258271593,18.429126603202846,2763.52473815298],[1.0,1.0,38660.7545500185,116.62020425162004,2.807960813933731e8,435.355409038873,4.8783713040302423e11,1.0948318306380499e6],[2.6688232992160046e6,1.0006122019063217,1.000000023670738,1.0000081499174343,1.0000000000142062,1.0019372390671055,1.0000001340331985,1.0556436797910849],[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm(Ua' * Ua - eye(8)) => 2.287812097430514e-16
N2 = norm(Va' * Va - eye(8)) => 2.2204460529338557e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
