>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.4722819758829857 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.40614822335703393
 0.0 0.7925981733519956 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.03579534032431275
 0.0 0.0 0.990197359000736 0.0 0.0 0.0 0.0 0.0 0.0 0.5763436757169247
 0.0 0.0 0.0 0.07351247023093399 0.0 0.0 0.0 0.0 0.0 0.8767647694032421
 0.0 0.0 0.0 0.0 0.05054042104390577 0.0 0.0 0.0 0.0 0.9518983348218846
 0.0 0.0 0.0 0.0 0.0 0.8925120501678707 0.0 0.0 0.0 0.6761251255321903
 0.0 0.0 0.0 0.0 0.0 0.0 0.7088850696840414 0.0 0.0 0.6298275252663759
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2399449669823288 0.0 0.05358832290765925
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7440979699252956 0.11346736110075795
 0.40614822335703393 0.03579534032431275 0.5763436757169247 0.8767647694032421 0.9518983348218846 0.6761251255321903 0.6298275252663759 0.05358832290765925 0.11346736110075795 0.33878740384077943]
(U,Lambda) = eig(full(A)) => ([-1.414802677429516,0.0628364724599666,0.23952267087383783,0.3963411002562003,0.5626387725869331,0.7428030170812097,0.7915577255036577,0.8027945866772497,0.9578077274393335,2.1618584646620076],
[-0.15029496529971945 0.008787699572689657 -0.013724790773383632 -0.7441820539432635 0.6181231734707595 0.016727451935470455 0.03519474130378603 -0.10661065618146921 -0.040136692153376154 -0.16360739388876744
 -0.011323913614719534 0.0004345424194109694 -0.0005090615550443548 -0.012569549245971463 -0.021405561348149384 -0.008009136203165115 -0.9518430257948604 -0.30456721867735975 -0.010395864868244464 -0.017792489104540104
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [5326.616433323523 0.0 0.0 0.0 0.0 0.0 0.0 0.0 10.740024293272791
 0.0 2168.738018036799 0.0 0.0 0.0 0.0 0.0 0.0 159.07394789278106
 0.0 0.0 931.3460190397307 0.0 0.0 0.0 0.0 0.0 3474.9533521451226
 0.0 0.0 0.0 223.40125951833804 0.0 0.0 0.0 0.0 14173.508940411852
 0.0 0.0 0.0 0.0 105.55632640314374 0.0 0.0 0.0 0.021697043421449194
 0.0 0.0 0.0 0.0 0.0 0.04897547614919608 0.0 0.0 0.0026536283764281186
 0.0 0.0 0.0 0.0 0.0 0.0 0.005531666437069241 0.0 0.00014119087024956511
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00020106525783439533 6.949335152585273]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.0008485660450204518 0.999999639953661 1.5924434555901526e-6 5.06753528555043e-6 1.580904672227029e-12 6.511101968776497e-10 6.241266907068094e-14 3.390564490707604e-17
 -0.011140788032464464 -1.1048741948427906e-5 0.9999377975771837 0.0005326316069403205 1.415297040446626e-10 5.8175075724345384e-8 5.576416650520277e-12 3.0293849877324803e-15
 -0.23897023068078313 -0.0002076977213511121 -0.0031797135973004754 0.9710216656099822 1.6942377336932655e-8 6.890947512666841e-6 6.605370706236434e-10 3.5883636509586415e-13
 -0.9709624941726206 -0.0008226979811935457 -0.010690667355171029 -0.23899085564490938 1.5263679822827117e-6 0.0004884929873448834 4.682486233819132e-8 2.5437577076981317e-11
 -1.4860951257253942e-6 -1.2576783619197122e-9 -1.6230229861256017e-8 -3.4833621270414514e-7 -0.9999999999988349 3.3495353947386964e-9 3.2107201811797496e-13 1.744221435377561e-16
 -1.817454071382409e-7 -1.537582936320538e-10 -1.980313983310913e-9 -4.202453956035371e-8 -9.94270025917421e-13 -0.0004777092300216185 0.999999885896922 1.0037565192985179e-10
 -9.67007755319717e-9 -8.180974953775353e-12 -1.0536601771896162e-10 -2.235988033574621e-9 -5.2901838718070646e-14 -2.0369245518771676e-5 -9.830955218213473e-9 0.999999999792547
 -0.0004759557735558063 -4.0266298187792783e-7 -5.1860560780118884e-6 -0.00011005407229543964 -2.603798714334594e-9 -0.9999997663530217 -0.0004777092640504332 -2.0369250309281627e-5],

[14597.470032274756,5326.614775932072,2168.6092943542326,906.0258257861889,105.5563264035728,0.10933229257241264,0.048975471682341135,0.005531666435926125],
[-0.00030964172765367395 0.9999999511064146 3.911417101166151e-6 2.9792546702559127e-5 7.977610716014276e-11 3.172177398819243e-5 6.788058129909573e-9 3.264881703125079e-11
 -0.001655180692508669 -4.498509414141113e-6 0.999997151595437 0.001274950870828824 2.9078394474399517e-9 0.0011539728606897663 2.469355858956914e-7 1.187696776417325e-9
 -0.015246749780713257 -3.6315456266523966e-5 -0.001365581899995567 0.9981582609772127 1.494862148337051e-7 0.05870046609590063 1.256115663660492e-5 6.041593866691055e-8
 -0.014859714982365898 -3.450442221432683e-5 -0.0011013088242564123 -0.05892862724758319 3.2304319537107384e-6 0.9981492756720881 0.00021359127056445502 1.0273191313895635e-6
 -1.0746159561236363e-8 -2.4923129091447792e-11 -7.90000967575373e-10 -4.058282878893423e-8 -0.9999999999947702 3.233853814889584e-6 6.920031921937985e-10 3.3283570020839293e-12
 -6.097678455817851e-13 -1.4137282231377512e-15 -4.472304924176938e-14 -2.2716480881029032e-12 -4.613162431781164e-16 -0.00021399018030907025 0.9999999771028724 8.886915731438938e-10
 -3.6644461901006355e-15 -8.495907152659525e-18 -2.687665617504345e-16 -1.3651641715930571e-14 -2.7723144189119542e-18 -1.0305818082977194e-6 -1.1103836912004729e-9 0.9999999999991964
 -6.555805226260458e-12 -1.5199435228068477e-14 -4.808315196212413e-13 -2.4423200522575065e-11 -4.959754452281052e-15 -0.0018390285809010772 -1.961200842927505e-6 -7.403824169024322e-7
 -0.9997719189848466 -0.0003086382426373437 -0.0016183604855544835 -0.01434839873790073 -3.9550175800092234e-8 -0.015732713254133914 -3.366601508035956e-6 -1.619248900917068e-8],

[1,1,2,3,5,6,6,7],[1.0,1.0,1.000001297264749,1.0002776441426946,8.355772640616417,1.1034695641100822e7,1.1034695641100822e7,8.831579587079726e6],[56.57223714411612,56.57223714411612,9.3811026751234,1.0,1.4131075475942674e6,2.4902403848938835e10,2.4902403848938835e10,4.1437871800729683e12],[1.046546114201824e7,1.0003838588388902,1.0040831478512748,1.0678798814317243,1.0000034224455054,2.184332104994173e7,1.0002316899662744,1.000001846420734],[1.0,0.0,0.0,0.0,0.0,2.2069633778048594e7,0.0,0.0],[0,0,0,0,0,3,1,1])
N1 = norm(Ua' * Ua - eye(8)) => 4.443194646273715e-16
N2 = norm(Va' * Va - eye(8)) => 4.444216819597295e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
