>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.25860878852924607 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9486315669862346
 0.0 0.8410699429950863 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9708775949829329
 0.0 0.0 0.9806310395508611 0.0 0.0 0.0 0.0 0.0 0.0 0.7660375552895635
 0.0 0.0 0.0 0.8622645259927462 0.0 0.0 0.0 0.0 0.0 0.24010299450342854
 0.0 0.0 0.0 0.0 0.7646242725405796 0.0 0.0 0.0 0.0 0.988602279926573
 0.0 0.0 0.0 0.0 0.0 0.9507336167005598 0.0 0.0 0.0 0.00011421977371806058
 0.0 0.0 0.0 0.0 0.0 0.0 0.026734155637570645 0.0 0.0 0.24756852521194284
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11140518607485439 0.0 0.19006015124591036
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6870532777371134 0.17656572759017286
 0.9486315669862346 0.9708775949829329 0.7660375552895635 0.24010299450342854 0.988602279926573 0.00011421977371806058 0.24756852521194284 0.19006015124591036 0.17656572759017286 0.20620704996071115]
(U,Lambda) = eig(full(A)) => ([-1.4875683193310558,0.03483268619310964,0.11536852847387014,0.4066829409752193,0.6886420005147627,0.8014440413617316,0.8611812491942534,0.9441729513944428,0.9507336197025373,2.373842157240468],
[-0.40315174972775825 -0.13655466973444153 0.1364008234707515 -0.841492956422803 0.019670766475408497 -0.04735770434987827 0.006929967652156768 0.05782739341780588 -3.60229426679116e-5 -0.2934010635949452
 -0.3094010027710992 -0.03879040417303362 0.02755440453314923 0.29357551115952046 -0.05679702652346169 0.6639669089468644 0.21250400282801238 0.3935294994518174 -0.00023268464330470463 -0.4143899942920326
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [14833.235857903699 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.022350214054735376
 0.0 4513.640771136868 0.0 0.0 0.0 0.0 0.0 0.0 0.0012163860806510634
 0.0 0.0 1003.0519395507308 0.0 0.0 0.0 0.0 0.0 166.44352611113857
 0.0 0.0 0.0 229.24316534983106 0.0 0.0 0.0 0.0 2.1422907413776104
 0.0 0.0 0.0 0.0 3.881615068470314 0.0 0.0 0.0 1.5025929235367352
 0.0 0.0 0.0 0.0 0.0 0.6609669256957351 0.0 0.0 1359.810615837576
 0.0 0.0 0.0 0.0 0.0 0.0 0.06745434348678518 0.0 0.014542929232895997
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 9.578220419978397e-5 1062.4479846940544]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.999999999999984 1.5974810901780756e-13 1.7835522567653377e-7 8.399944779702139e-9 3.912310327675419e-12 7.582135837943002e-16 1.2476549344663596e-14 6.059239236007781e-21
 -1.380553750609899e-13 -0.9999999999999926 1.2138323734134097e-7 5.166612349971904e-9 2.3049358691405988e-12 4.456556617530685e-16 7.333344169891036e-15 3.5614403613622996e-21
 -1.7220309955340854e-8 -1.2264100639872935e-8 -0.143162213652929 0.9896992374134778 6.7210661287323005e-6 1.2348329691888408e-9 2.0319112798203355e-8 9.86798051998742e-15
 -2.2068140815574078e-10 -1.5044359551335825e-10 -0.0012504109842639654 -0.0001876657657378495 0.999999200626646 3.043629592462158e-10 5.006930838681728e-9 2.431609734321228e-15
 -1.547479704887682e-10 -1.052483352928161e-10 -0.0008617723372153142 -0.00012465854118013959 -1.101269042155738e-6 0.9999996208269694 1.2385137452508e-5 5.950532066515269e-12
 -1.4004319850164116e-7 -9.524715484414238e-8 -0.7798795510597698 -0.11281133146757556 -0.0009963446608516847 -0.0006937681426228496 0.6156784999610933 1.8761782483878306e-7
 -1.4977367418929238e-12 -1.0186511172995929e-12 -8.340669917724563e-6 -1.206496313742879e-6 -1.065563875146555e-8 -7.206760771738619e-9 -1.1090947317957398e-5 0.9999999999029844
 -1.0941862932221616e-7 -7.441855826345591e-8 -0.6093358352928218 -0.08814177327491234 -0.0007784580916006811 -0.0005263379919120874 -0.7879974520322114 -1.3928262112446954e-5],

[14833.23585792077,4513.64077113706,1737.6522836187949,996.1270071405886,229.24298543282825,3.8816136237600016,0.4069431542234335,0.06745434348035505],
[-0.9999999999988332 5.249822702036422e-13 1.5225054827655346e-6 1.2508280692875897e-7 2.531472085401118e-10 2.8974447251122556e-12 4.547750642846714e-10 1.3324290189458762e-15
 -4.200919984813231e-14 -0.99999999999995 3.1529917358118206e-7 2.3410902409356265e-8 4.5382642762943914e-11 5.18219936282098e-13 8.133834146236878e-11 2.3831026424115878e-16
 -1.1644704814119097e-9 -2.725411825489814e-9 -0.08263974181065172 0.9965794848882763 2.9408003056429584e-5 3.190945119278149e-7 5.0083470604343006e-5 1.4673772642831913e-10
 -3.4105642911668355e-12 -7.640875247013456e-12 -0.0001649629069769369 -4.3188362384669995e-5 0.9999999854570243 1.797528939144052e-8 2.8205528517550086e-6 8.26381050693351e-12
 -4.049501132577558e-14 -9.05108636062534e-14 -1.9250505531287775e-6 -4.857578083816222e-7 -1.8647037336390546e-8 0.9999999930200583 0.00011813526204285454 3.4241938684835435e-10
 -6.2403054373870364e-12 -1.3947769065090879e-11 -0.00029665002264056567 -7.485446977068284e-5 -2.8727198181139705e-6 -0.00011813586843578576 0.9999999290141935 1.8384164827803413e-6
 -6.810978373709039e-18 -1.522328555673128e-17 -3.2377847906855166e-10 -8.169983965836421e-11 -3.1354028785455096e-12 -1.2523846102257056e-10 -1.838420335162027e-6 0.99999999999831
 -7.065455978308733e-16 -1.5792070980536188e-15 -3.358757672778839e-8 -8.475237862070326e-9 -3.252550203439857e-10 -1.2987849360079653e-8 -0.0001854709486475802 -1.977752027474757e-8
 -1.5276346318772595e-6 -3.1615537282411026e-7 -0.996579428772914 -0.08263971703206269 -0.00016796686475360937 -1.9229559924787804e-6 -0.00030182197670368 -8.842972981434697e-10],

[1,2,3,3,4,5,7,7],[1.0000011728635565,1.0001657561210713,1.0000000005035146,1.0000000005035146,1.0199945261807035,1.018270811316706,4.418719649595766,4.418719649595766],[503.5849478760387,30408.282846041984,1.0,1.0,339.950373331057,28624.40878775545,1.7018783720937958e8,1.7018783720937958e8],[1.0000015288065027,1.00000031890289,156.503749122423,1.0761644904577798,1.0002002377765513,1.0001203949611264,1.8565581367873688e11,1.0000018595723428],[0.0,0.0,0.0,0.0,0.0,0.0,7.818841860881463,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.666055882783349e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 2.2959418884062295e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
