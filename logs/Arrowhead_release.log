>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.27801763260175605 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9068112118820773
 0.0 0.2756615265885698 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9500976237246106
 0.0 0.0 0.7382919242878176 0.0 0.0 0.0 0.0 0.0 0.0 0.9628156987434029
 0.0 0.0 0.0 0.9084732547949363 0.0 0.0 0.0 0.0 0.0 0.4826644816181429
 0.0 0.0 0.0 0.0 0.6983962885680572 0.0 0.0 0.0 0.0 0.20768936370187085
 0.0 0.0 0.0 0.0 0.0 0.8938885210070735 0.0 0.0 0.0 0.566916487946125
 0.0 0.0 0.0 0.0 0.0 0.0 0.07510599447258803 0.0 0.0 0.5942285860477539
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.976311003402343 0.0 0.16960456015946757
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.20567220007815323 0.8377571773135966
 0.9068112118820773 0.9500976237246106 0.9628156987434029 0.4826644816181429 0.20768936370187085 0.566916487946125 0.5942285860477539 0.16960456015946757 0.8377571773135966 0.2804799880094593]
(U,Lambda) = eig(full(A)) => ([-1.7412319038170456,0.09487138265300166,0.2260728865681516,0.2769013442052479,0.5791271304249361,0.7003837804578719,0.8530759874428564,0.9031452717510222,0.9743539349933819,2.463598519131337],
[-0.32100598416442977 0.15522898986024464 -0.3578621295184263 0.727367788031103 0.3561735216967922 0.019939618390942354 0.08412405152305778 0.013239211062330567 -0.014901639072103802 -0.28460245692572284
 -0.3367220213271071 0.1647583606945053 -0.3927593405212739 -0.686157827921041 0.3702780453278967 0.02077553799434537 0.08778004371513844 0.013819097393860398 -0.015560315682556242 -0.29786677855756877
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [9126.316797651843 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0033025885461532684
 0.0 684.000447276301 0.0 0.0 0.0 0.0 0.0 0.0 244.06448868737286
 0.0 0.0 303.53604088872913 0.0 0.0 0.0 0.0 0.0 345.0615769725516
 0.0 0.0 0.0 9.154516171349744 0.0 0.0 0.0 0.0 0.0043194811881573005
 0.0 0.0 0.0 0.0 0.21553085982164988 0.0 0.0 0.0 0.011884502074879864
 0.0 0.0 0.0 0.0 0.0 0.19224527241426914 0.0 0.0 296.739517894634
 0.0 0.0 0.0 0.0 0.0 0.0 0.11909703958344725 0.0 0.06869477636802043
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.001943945505960031 2429.4857952159755]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999999999944 1.0636964638299013e-7 7.893176431562093e-10 2.0802385344654e-10 2.396173314226186e-18 3.4562736196168265e-21 7.204938844042233e-17 6.6053765477914886e-21
 -1.0510851264375448e-8 -0.10619951977999802 0.9943390695567192 0.0033877354641660812 3.153000381751903e-11 4.54712185040196e-14 9.478917977907957e-10 8.690125052636448e-14
 -1.479326953799529e-8 -0.14087332115951176 -0.01841831511267196 0.9898562890914514 2.2652997987044486e-10 3.264532658131764e-13 6.805235402325417e-9 6.238933107902153e-13
 -1.8497750343251245e-13 -1.7371676621300084e-6 -1.8471358903383639e-7 -2.5089421947506817e-7 0.9999999999984426 4.49517205067515e-15 9.369500828989148e-11 8.587534514931706e-15
 -5.089415179376591e-13 -4.779530638905878e-6 -5.081239639785348e-7 -6.896632274674873e-7 -8.574432712166808e-12 0.9999999999858975 2.151190574014992e-6 6.135128476491837e-11
 -1.2707563152467509e-8 -0.11933824458399016 -0.012687149706351524 -0.017219931539502693 -2.1406741342945642e-7 -2.7240251490708727e-6 0.9926232384734592 2.1705389914446596e-6
 -2.941782796225088e-12 -2.7626633795803193e-5 -2.937056968816443e-6 -3.986388655804982e-6 -4.9542832505528185e-11 -1.855568201172066e-10 -5.614780086955228e-6 0.9999999995903629
 -1.0404021808781872e-7 -0.9770541192659159 -0.10387307950040674 -0.14098412724796608 -1.7518543324541656e-6 -4.5590619979001015e-6 -0.1212398713555442 -2.8540550257225894e-5],

[9126.31679765249,2485.110920881611,680.4393552068217,300.51169261076944,9.154516171335487,0.2155308598192467,0.19082727044989872,0.1190970395354046],
[-0.9999999999999236 3.906316947015726e-7 1.0586634665230277e-8 6.317529848931366e-9 2.3887921937569015e-15 1.4635049485926663e-16 3.4457629794427416e-12 5.061650497618325e-16
 -7.877687270221407e-10 -0.029230292466896114 0.9995429616418494 0.007710889891211989 2.355835776590289e-9 1.4430571019403696e-10 3.397619282243344e-6 4.990929620146687e-10
 -4.920156254621735e-10 -0.01720652781020944 -0.008216195030991713 0.9998181981850146 7.51104831162775e-9 4.5975008833180007e-10 1.0824627981460346e-5 1.590082391913085e-9
 -1.8554906476010306e-16 -6.3992835578032515e-9 -2.4851054321576274e-9 -7.643014384992928e-9 1.0 1.9092915634176994e-13 4.494810760235423e-9 6.600896537448874e-13
 -1.2019372698990123e-17 -4.145232872671354e-10 -1.60949530644051e-10 -4.94635357153869e-10 -2.0187356932339045e-13 0.9999999999970476 2.4296734579107734e-6 1.1102790806663877e-10
 -2.6768399499303336e-13 -9.23186693467628e-6 -3.5845142300988868e-6 -1.101604533589494e-5 -4.495425802908407e-9 -2.4297261064407716e-6 0.999999237190606 3.5036627385857548e-6
 -3.8389815946126695e-17 -1.3239852881773723e-9 -5.140719557111012e-10 -1.5798622789374842e-9 -6.445348474518254e-13 -1.0253412420388867e-10 -3.5042354517355255e-6 0.9999999999937537
 -2.216102277349609e-14 -7.642878023138335e-7 -2.967547431521937e-7 -9.119959965429949e-7 -3.7200320507753057e-10 -4.1119717564545454e-8 -0.0012350630101721266 -4.658493160417096e-7
 -3.908250839893618e-7 -0.9994245971142856 -0.02909230067416121 -0.017438825447011582 -6.6011409182559755e-9 -4.0442245837422157e-10 -9.521962577776937e-6 -1.3987278556450953e-9],

[1,2,2,3,4,5,6,7],[1.0000121460178744,1.0000000000038283,1.0000000000038283,1.0247133832970028,1.0596812464249616,1.0564080961042932,1.059633870370493,1.1099414338974705],[5538.739879235211,0.9999999999999999,0.9999999999999999,1.5938744615630347,4.221764433865736e6,6.517342245749155e7,2926.374640054243,2.0404985931193624e7],[1.0000003921050054,1217.3897984842422,1.0363092798279385,1.024839504894637,1.0000000213363027,1.000002471951122,1.0012451444699808,1.0000039730991555],[0.0,1.000000000007936,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.44089209865641e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.440892098515129e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
