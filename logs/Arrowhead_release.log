>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.03472290651308052 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.05205955838621623
 0.0 0.6026164700379666 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1707953923304819
 0.0 0.0 0.7650747173403576 0.0 0.0 0.0 0.0 0.0 0.0 0.17409101597593413
 0.0 0.0 0.0 0.5266939537464848 0.0 0.0 0.0 0.0 0.0 0.6954382368892038
 0.0 0.0 0.0 0.0 0.05371464879907606 0.0 0.0 0.0 0.0 0.9330297529467879
 0.0 0.0 0.0 0.0 0.0 0.5488089410986943 0.0 0.0 0.0 0.5799693127240164
 0.0 0.0 0.0 0.0 0.0 0.0 0.28329404912582334 0.0 0.0 0.8590994713121212
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.68624823809652 0.0 0.6176347191624423
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5005673235677066 0.6059232994115715
 0.05205955838621623 0.1707953923304819 0.17409101597593413 0.6954382368892038 0.9330297529467879 0.5799693127240164 0.8590994713121212 0.6176347191624423 0.6059232994115715 0.09460172564105851]
(U,Lambda) = eig(full(A)) => ([-1.5877754211475499,0.03477504737651893,0.1464640493174516,0.381529822057624,0.5105783745881045,0.5410959656829288,0.6007279973461832,0.6555376514985924,0.7626118132170283,2.0507976740298943],
[-0.023362081448803942 -0.9987755071333154 0.037824523644457715 0.01219987940549849 -0.0014375845962259805 0.0011317810009029527 0.000998001549743869 -0.003749818794507977 -0.001002451554312075 -0.017399948839570956
 -0.05677401903210832 0.00030088095769712473 -0.030398507593405566 -0.06278507857226624 0.024384649758590893 -0.03056249279695964 -0.9813332509236548 -0.1443173162590969 -0.014962247086806168 -0.0794707605981089
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [602.0183274043726 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.957718759753562
 0.0 239.47403686664285 0.0 0.0 0.0 0.0 0.0 0.0 2549.397266458133
 0.0 0.0 180.43475830951806 0.0 0.0 0.0 0.0 0.0 6517.864181257584
 0.0 0.0 0.0 54.97054042095087 0.0 0.0 0.0 0.0 11973.244033558898
 0.0 0.0 0.0 0.0 0.49431662709406526 0.0 0.0 0.0 0.28180148966378865
 0.0 0.0 0.0 0.0 0.0 0.015017244995785512 0.0 0.0 0.011327982175193842
 0.0 0.0 0.0 0.0 0.0 0.0 0.00038395554439930326 0.0 2467.144672990446
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00024332769661237287 0.11446020664419242]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.00013922566295900666 0.9999999902883779 3.4473646826446033e-6 5.244798679177144e-6 2.571801234954173e-7 6.122772931578355e-14 2.265643234092863e-18 8.960478071725265e-21
 -0.18102481759649697 -2.896745366791874e-5 0.9807678711478063 0.07293765794638761 0.002120271807429271 5.038943393891095e-10 1.864581167099366e-14 7.374302517732606e-17
 -0.46275555416474606 -6.849318735250319e-5 -0.15040006376042755 0.8735820784678561 0.009563754440695184 2.2692646373558726e-9 8.397027034390074e-14 3.3209719431053495e-16
 -0.8499502832908936 -0.0001154815518286544 -0.12209738225482633 -0.47340797372185983 0.19637113398058442 4.4916294920520054e-8 1.6619291288795933e-12 6.5728258492652714e-15
 -2.0004069765739135e-5 -2.695306788028078e-9 -2.7184717653427157e-6 -9.838648106299788e-6 -0.00011222114815954555 0.999999993451031 4.841662392227759e-13 1.9130805510757935e-15
 -8.041325321921112e-7 -1.0834707340207452e-10 -1.0927786563880736e-7 -3.954946338372095e-7 -4.50192034131016e-6 -5.25968964197885e-10 0.999999999989459 8.33463078690111e-14
 -0.17513368775581464 -2.359713324736378e-5 -0.02379985233299985 -0.08613559374153451 -0.9804806995063895 -0.00011444621419102144 -4.591543726153793e-6 4.6393795910322317e-5
 -8.125116581263265e-6 -1.094760585900024e-9 -1.1041654938014582e-6 -3.996157163776003e-6 -4.548822151457004e-5 -5.309592396520627e-9 -2.1293579646579134e-10 -0.9999999989238079],

[14086.816258168055,602.0183217680654,236.52687403678704,160.71286666417151,10.943576523209249,0.49431662386315384,0.015017244995627317,0.00024332769700252438],
[-5.949988926543019e-6 0.9999999996507294 8.774380199502516e-6 1.9646621916145533e-5 1.4147764897517929e-5 7.456802667364881e-11 9.082616356600513e-14 2.2169165647540892e-14
 -0.0030773982600748734 -1.1522827157869262e-5 0.9929883963051889 0.10868249537554757 0.046397084892930505 2.441140066557145e-7 2.973373473502082e-10 7.257513282505421e-11
 -0.005927328435457395 -2.052853087510969e-5 -0.1147328364477018 0.9807837696109869 0.1576846214195765 8.283237840186333e-7 1.0089171109013868e-9 2.462599931238768e-10
 -0.0033167342816975724 -1.0544667966296303e-5 -0.028376306556553654 -0.16192538093080686 0.986389352246436 4.9949220525736024e-6 6.083482182146758e-9 1.4848773628230202e-9
 -7.019573559796318e-10 -2.2131136416726465e-12 -5.681323948354644e-9 -3.026146846869571e-8 -5.0689808152940395e-6 0.9999999999871482 1.5937105800372094e-11 3.886394919347102e-12
 -8.572451733377503e-13 -2.7026993814353687e-15 -6.938122729594221e-12 -3.6955596238990624e-11 -6.177728147062761e-9 -1.5978837073716986e-11 0.9999999999999932 5.143811987626384e-12
 -4.77350944262875e-9 -1.504979136788635e-11 -3.863444818417859e-8 -2.0578463612559684e-7 -3.4400179863829996e-5 -8.889496398227109e-8 -1.1739494637810835e-7 7.320644293655224e-5
 -1.403486683003629e-13 -4.4248748265122195e-16 -1.1359134025666157e-12 -6.050391223464026e-12 -1.0114192687061155e-9 -2.6136504932789816e-12 -3.450245161174961e-12 -0.9999999973204083
 -0.9999721974314433 -5.758035477867009e-6 -0.0022817083799238362 -0.00561097950334795 -0.004349143229757942 -2.29304072438276e-8 -2.7929964285279497e-11 -6.8172427508233574e-12],

[1,1,2,3,5,5,6,8],[1.0,1.0,1.0000000347388727,1.1518451772663763,64.32731677253804,64.32731677253804,64.15801123432352,98.13913685712389],[997.8505324166762,997.8505324166762,1.9263249848632105,1.0,8.442615392379673e6,8.442615392379673e6,6.91325673846878e9,4.2225950861230804e10],[2.9188947161644005e10,1.0000483533793416,1.125754690497459,1.2374226963496042,3.741743205053935e10,1.0000061792526707,1.0000001248320776,1.0000732029033739],[1.0,0.0,0.0,0.0,127.13538448470618,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 3.53988707386592e-15
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 3.4122033190160713e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
