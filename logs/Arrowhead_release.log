>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.780793438110714 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7456379845399115
 0.0 0.6937645188576609 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7876904325617011
 0.0 0.0 0.45269385653162764 0.0 0.0 0.0 0.0 0.0 0.0 0.9027776869811863
 0.0 0.0 0.0 0.18699820901890463 0.0 0.0 0.0 0.0 0.0 0.35425245108200554
 0.0 0.0 0.0 0.0 0.5210405297414462 0.0 0.0 0.0 0.0 0.6470318173018661
 0.0 0.0 0.0 0.0 0.0 0.7276360225926057 0.0 0.0 0.0 0.30136979396214736
 0.0 0.0 0.0 0.0 0.0 0.0 0.7940060213215652 0.0 0.0 0.0827345945787481
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.16124688696628753 0.0 0.3286045951515624
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8882483096767029 0.5872858556799394
 0.7456379845399115 0.7876904325617011 0.9027776869811863 0.35425245108200554 0.6470318173018661 0.30136979396214736 0.0827345945787481 0.3286045951515624 0.5872858556799394 0.6260840732757842]
(U,Lambda) = eig(full(A)) => ([-1.1523330123056832,0.16928221426509182,0.21147515171675968,0.49286274413662534,0.5989015238368303,0.7219141317542637,0.7492407430336421,0.7938706442636894,0.864239225785699,2.383058499606389],
[-0.270082653805927 0.026662142743799633 0.07867284344675995 -0.07947610957635384 0.2862976306253517 0.206671374152468 -0.7492014054352322 0.09287757816232503 -0.33402114285195744 -0.32811601221024334
 -0.2987650974099489 0.03283947369343136 0.09810696478648154 -0.12032845410411333 0.5799116879795602 -0.4566654251675047 0.4501483846515508 0.01281718777055792 -0.17272132868009338 -0.328763881598902
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [17102.49642267201 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1546.7309948429504
 0.0 137.76351509408195 0.0 0.0 0.0 0.0 0.0 0.0 0.0017399481373123159
 0.0 0.0 47.133645572937006 0.0 0.0 0.0 0.0 0.0 6.179484084485402
 0.0 0.0 0.0 0.6325236773680724 0.0 0.0 0.0 0.0 0.3076547625911097
 0.0 0.0 0.0 0.0 0.011531439824557278 0.0 0.0 0.0 0.028736180828949485
 0.0 0.0 0.0 0.0 0.0 0.0030581700369067158 0.0 0.0 21.672722691657203
 0.0 0.0 0.0 0.0 0.0 0.0 0.000593538099483718 0.0 0.3485020761410924
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0001224460511844789 0.0011701024732380034]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999930105069 9.37840683846902e-9 4.068094461698606e-5 0.00011101372446217188 1.3861516779699652e-9 3.9984062646246066e-14 3.529830666466419e-14 1.2212974596505819e-16
 -9.126894603939405e-9 -0.9999999999977345 8.010575918455632e-7 1.972049129953711e-6 2.4032115829990558e-11 6.932007483629992e-16 6.119641378467567e-16 2.117354393332168e-18
 -3.241262987721194e-5 -6.53966854871376e-7 -0.9972960095954023 0.07348923862409425 7.292615912580873e-7 2.1032036550059588e-11 1.8567278622411428e-11 6.424152417886192e-14
 -1.6136986036764153e-6 -2.8748122258916194e-8 -0.0010431582225092014 -0.01416624790942471 0.9998991095297999 5.816283713802123e-9 5.1329679555485895e-9 1.77597057634286e-11
 -1.5072587996112347e-7 -2.685132593260187e-9 -9.741796209270251e-5 -0.0013220242699303196 -1.88374629481105e-5 0.9999991212019167 1.4463712919177885e-6 4.991563793743934e-9
 -0.00011367690850418032 -2.0251171876805025e-6 -0.07347226742381377 -0.9970656087639899 -0.014202754976547393 -0.0013255944332249614 0.016078137020136152 5.360591145849824e-5
 -1.8279493161353852e-6 -3.256432309137877e-8 -0.0011814499727944069 -0.01603303068070327 -0.0002283782383348032 -1.9869285720236447e-5 -0.999870738135169 2.3862827615112692e-5
 -6.1373752473652175e-9 -1.093353457453727e-10 -3.966741174903508e-6 -5.383121112750454e-5 -7.667837137063734e-7 -6.654227586459581e-8 -2.2997859904367405e-5 -0.9999999982784857],

[17172.29643292182,137.7635151052809,47.63662232931177,21.361659346568246,0.6324599189475856,0.011531430403335624,0.0005954948062075245,0.00012244616153505493],
[-0.9959353060285069 1.1642717542645712e-6 0.014605269554445636 0.08887941684112678 3.748325135482111e-5 5.9301167717537504e-8 1.0137605855934516e-6 1.705830152030753e-8
 -7.32198566128506e-11 -0.9999999999164435 2.316631705802966e-6 1.2717945533772127e-5 5.2347170985897755e-9 8.281520021376612e-12 1.4157357858115142e-10 2.382223993537177e-12
 -8.896453742729608e-8 -2.2374459544241257e-7 -0.9867659449618497 0.16215106095161627 5.434772440522566e-5 8.596648652892303e-8 1.4696073260758732e-6 2.4728723169038478e-8
 -5.94389095802174e-11 -1.3199335103158646e-10 -1.3851155743514166e-5 -0.0004194658793497046 0.9999999095741345 3.190356299775234e-7 5.452144558125023e-6 9.174182561241664e-8
 -1.0121455925038492e-13 -2.2475794767921362e-13 -2.358205331891823e-8 -7.136544529605953e-7 -3.434574491217137e-7 0.9999999382049289 2.8008209883370097e-5 4.7008347829277006e-7
 -2.0244427810434666e-11 -4.495495559805083e-11 -4.716763611530198e-6 -0.00014274154081771003 -6.867540283513929e-5 -0.0003515516319299185 0.08256944707444824 0.0013388414154291044
 -6.31806914869892e-14 -1.4029960272035625e-13 -1.4720514117055656e-8 -4.454810557924913e-7 -2.1432375631049647e-7 -1.022698630785369e-6 -0.9965853126774623 0.00011567122377230849
 -4.3762193752753076e-17 -9.717871477930525e-17 -1.0196184556916974e-11 -3.0856307209579313e-10 -1.48451522449277e-10 -7.06576602508145e-10 -4.728835754114532e-6 -0.9999990970613756
 -0.090071450559523 -1.2872737131680353e-5 -0.16149196805203636 -0.982754947179113 -0.0004144593814093376 -6.557041994571106e-7 -1.1209342055189298e-5 -1.8861685820005324e-7],

[1,2,3,4,4,5,7,8],[1.0000000000019995,255.97337886107658,2762.1526339821703,10191.797430637997,10191.797430637997,9469.08138491526,262032.91673820984,6.300352840622016e6],[1.0,1.1035798895550153e8,90821.99698200161,1.3593580613026097e8,1.3593580613026097e8,7.982918799600627e10,1.2788521125939478e11,1.8463142236373706e14],[1.082259924716179,1.000014260763683,1.151477614708501,5.6560908659740025e6,1.0005753341704984,1.000353570865251,1.0760202958197356,1.0014535002919915],[0.0,0.0,0.0,20334.252020185537,0.0,0.0,0.0,0.0],[0,0,1,3,1,1,1,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 3.3306726064033453e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.44089451390681e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
