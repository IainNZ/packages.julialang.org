>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.6509849643467522 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3282967721003096
 0.0 0.39558706666552435 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9785342809178674
 0.0 0.0 0.8560325888198423 0.0 0.0 0.0 0.0 0.0 0.0 0.12662543832292017
 0.0 0.0 0.0 0.8252303858417214 0.0 0.0 0.0 0.0 0.0 0.8717466709918122
 0.0 0.0 0.0 0.0 0.9181366997862945 0.0 0.0 0.0 0.0 0.37506752519802067
 0.0 0.0 0.0 0.0 0.0 0.8047486408544411 0.0 0.0 0.0 0.685705814463933
 0.0 0.0 0.0 0.0 0.0 0.0 0.28398650649737345 0.0 0.0 0.8022587895241644
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8037418157566361 0.0 0.5559246950861478
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9385973962813969 0.819938223920865
 0.3282967721003096 0.9785342809178674 0.12662543832292017 0.8717466709918122 0.37506752519802067 0.685705814463933 0.8022587895241644 0.5559246950861478 0.819938223920865 0.840806519383356]
(U,Lambda) = eig(full(A)) => ([-1.2927538992538792,0.321417766988668,0.5483626358380698,0.6645173482044382,0.8041293515333732,0.8147205554868004,0.855556156262018,0.8969110022744764,0.9234182751610525,2.781573391738334],
[-0.11553281679523796 0.039254447860802184 -0.33931985075780335 0.9248487417619906 -0.0011826565094694855 0.016795436600083077 0.0059846949193531635 0.043177671622019576 -0.013384767633093098 -0.1107489730782649
 -0.3964537717845787 0.5198979509366134 0.6793704514852544 0.13871222695579602 -0.0013213933888340963 0.01955651474567443 0.007933544763461026 0.06313275242829888 -0.020591378033765706 -0.2947682843028991
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [8559.484017235562 0.0 0.0 0.0 0.0 0.0 0.0 0.0 2.5956343393912813
 0.0 23.04901540301157 0.0 0.0 0.0 0.0 0.0 0.0 0.005124224537251566
 0.0 0.0 3.9597990816712447 0.0 0.0 0.0 0.0 0.0 0.9027809441749962
 0.0 0.0 0.0 3.8490911862335997 0.0 0.0 0.0 0.0 3.279265799104121
 0.0 0.0 0.0 0.0 0.10015417989830075 0.0 0.0 0.0 177.9826165065526
 0.0 0.0 0.0 0.0 0.0 0.09034136782932789 0.0 0.0 0.0010646472886810295
 0.0 0.0 0.0 0.0 0.0 0.0 0.07430807804389553 0.0 7.552938826608977
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0016120566406148387 0.0002758757206264363]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999999800596 6.315154129447778e-6 3.0896246715615372e-12 1.570356786376474e-11 5.422281062174985e-11 2.2285959779815935e-18 3.798686672678162e-14 3.083992201213045e-18
 -1.81621737767514e-10 -2.9248908188228016e-5 0.9999999995722503 4.405387302104589e-9 1.518575198982406e-8 6.067545886047298e-16 1.034220277734639e-11 8.396307361220789e-16
 -3.199771767692783e-8 -0.005069315257845527 -1.527013924606171e-7 0.9999858884048243 0.0015890355575056926 3.623641264576896e-12 6.1755323707452e-8 5.011884856888869e-12
 -1.1622866063604359e-7 -0.018413303202742783 -5.537447605639968e-7 -0.001682130481625369 0.9998290457382354 1.3931007689393395e-11 2.374146316677421e-7 1.926749375453686e-11
 -6.308325771673156e-6 -0.9989185642544991 -2.9216976151894786e-5 -0.005034660564563823 -0.018405015853233533 5.98938564905606e-6 0.04239821506249125 1.5449587489448207e-6
 -3.773481961655435e-11 -5.975279492459064e-6 -1.7476799477800038e-10 -3.0112482135239914e-8 -1.1008027690535688e-7 -0.9999999999820471 4.3375402868273384e-7 1.1358884026709095e-11
 -2.677025407539259e-7 -0.04239048669488282 -1.2398523230135902e-6 -0.00021359132946795545 -0.0007808044543309825 -1.799766043423644e-7 -0.9991007913915712 1.191278448918002e-7
 -9.77799940312919e-12 -1.5483382429070479e-6 -4.5285895664706005e-11 -7.798808158616195e-9 -2.8508733656174615e-8 -2.126970491913681e-12 -5.351723079798334e-8 -0.9999999999987996],

[8559.484410964791,178.17530640086608,23.049015393317635,3.959748552981232,3.8484390579093133,0.09034136782969854,0.07436259937829517,0.0016120566480633267],
[-0.9999999539808836 0.00030337795920930527 1.147363240650824e-9 3.3945195343848224e-8 1.20599358311937e-7 2.1115057379215418e-13 4.372466553497702e-9 1.637497167812009e-11
 -4.890717746927127e-13 -3.7836810777526567e-6 0.9999999999928294 2.5643001928996855e-8 9.095028562305386e-8 1.54802790732165e-13 3.2056113302798724e-9 1.2004951434535137e-11
 -1.4802823042748314e-11 -0.00011266134633469711 -2.623395504394417e-8 0.9999986488052123 0.0016350165474030667 1.5882968895076448e-10 3.2884632348725348e-6 1.2311017157860414e-8
 -5.2266549217478536e-11 -0.000397779493122733 -9.247310745984638e-8 -0.0016351224135291134 0.999998469452723 5.935455727621736e-10 1.2288846461463662e-5 4.6004797958244845e-8
 -7.381346397265365e-11 -0.0005615024416627639 -1.2695563067087008e-7 -0.0001273419999182952 -0.000478983619347537 6.6399482561151205e-6 0.05710341615593138 9.598550811670657e-5
 -3.982734304166136e-16 -3.029684266667045e-9 -6.850088574981327e-13 -6.870140334505902e-10 -2.5841133605123753e-9 -0.9999999999779444 5.269575375295073e-7 6.365639329240818e-10
 -2.324025646382321e-12 -1.76789682996541e-5 -3.997179124975101e-9 -4.00822450396624e-6 -1.5076262727924722e-5 -1.480353450786616e-7 -0.9983682684727675 5.491222163970276e-6
 -1.8415465363252684e-18 -1.4008725433481759e-11 -3.167312251162155e-15 -3.1749795000273608e-12 -1.1941904942343772e-11 -3.795378560511553e-14 -1.1601639536068608e-9 -0.9999999953783119
 -0.0003033780329470725 -0.9999997107143859 -3.783570728152272e-6 -0.00011193922441847771 -0.00039769394926744223 -6.962999117304704e-10 -1.4418848221322599e-5 -5.3998865030587874e-8],

[1,2,2,3,4,6,7,8],[1.0000000000001827,1.0004316596895182,1.0004316596895182,1.000421936770322,1.0013560698721262,1.461476680238038,2.639552347882601,7711.949707804524],[1.0,188109.42961014656,188109.42961014656,6214.920282219974,1760.1767374029487,2.3099292711331868e8,39585.77033058562,4.995711140524855e10],[1.000303286152365,6.985302957633347e10,1.0000040343643108,1.0018750132974998,1.0025332381212844,1.000006789388569,1.0538589213350076,1.000101580466997],[0.0,1.000863527860682,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 5.551115128696062e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.44089209852217e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
