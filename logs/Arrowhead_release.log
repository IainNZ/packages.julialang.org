>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.8831552737052974 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.34760433165557925
 0.0 0.8198371073174275 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.33143967751059256
 0.0 0.0 0.7102552480673827 0.0 0.0 0.0 0.0 0.0 0.0 0.5708972677511643
 0.0 0.0 0.0 0.17972619664398204 0.0 0.0 0.0 0.0 0.0 0.259711378938456
 0.0 0.0 0.0 0.0 0.49120345444568003 0.0 0.0 0.0 0.0 0.6582019201143317
 0.0 0.0 0.0 0.0 0.0 0.08929782860897695 0.0 0.0 0.0 0.2224267103534463
 0.0 0.0 0.0 0.0 0.0 0.0 0.7753002360823589 0.0 0.0 0.7783256385777277
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5504531062930123 0.0 0.522877949211777
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9262601412576772 0.6450046366359403
 0.34760433165557925 0.33143967751059256 0.5708972677511643 0.259711378938456 0.6582019201143317 0.2224267103534463 0.7783256385777277 0.522877949211777 0.6450046366359403 0.9409185281283634]
(U,Lambda) = eig(full(A)) => ([-0.7555255613314951,0.10168632084230378,0.1981193638966685,0.5211898451326955,0.6078460891169777,0.7324956014446975,0.8131601062524703,0.8651773739780086,0.9011943856311464,2.381063595586692],
[-0.14198520269412704 -0.024056631992470715 0.034511097515141996 0.03341186800821898 0.09484417977457886 0.07163384346162963 -0.09091077314115131 0.7676264796442597 0.5801437197233773 0.16954459434835845
 -0.14082385489464355 -0.024960324702793538 0.03625752580629979 0.0386125630277432 0.11744465118213153 0.11781861535457014 -0.9087015744333801 -0.29021786926865284 0.12265172339056996 0.1551038535807511
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [5231.013288666017 0.0 0.0 0.0 0.0 0.0 0.0 0.0 15.364741224702557
 0.0 0.9960639171875708 0.0 0.0 0.0 0.0 0.0 0.0 0.0001346154809991064
 0.0 0.0 0.5721230750550106 0.0 0.0 0.0 0.0 0.0 0.09357835655628699
 0.0 0.0 0.0 0.17628796917784367 0.0 0.0 0.0 0.0 1.1316956481161147
 0.0 0.0 0.0 0.0 0.029279989158209358 0.0 0.0 0.0 53.8016854710051
 0.0 0.0 0.0 0.0 0.0 0.011437518219469275 0.0 0.0 0.197902481707595
 0.0 0.0 0.0 0.0 0.0 0.0 0.010030117478143278 0.0 3.176083682885942
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.002094280886050134 37.18830931217023]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999993236635 3.677869832684226e-5 1.74786484202248e-14 4.003123253559423e-12 4.516992404425664e-12 3.4187977794159742e-12 1.5245574966770865e-14 1.6562008314007885e-13
 -7.559846125947854e-11 -2.0559710732144657e-6 0.9999999999978867 1.4435665805659364e-9 1.1267653684369836e-9 8.263498617139601e-10 3.684410914197892e-12 4.002428782013624e-11
 -5.2552496477108446e-8 -0.0014289929216940772 -4.3815375276251174e-9 0.9999989789843429 2.5409921650207504e-6 1.742171538655032e-6 7.765336585968416e-9 8.435059083354409e-8
 -6.355468626031304e-7 -0.01728042067995108 -3.665478820993489e-8 -2.7234630091784406e-5 0.9998506569168836 0.00022375158622239783 9.929020207435365e-7 1.0775529883548033e-5
 -3.0214388844752867e-5 -0.8215187616832942 -1.6894725186012017e-6 -0.0011749034380746013 -0.014326040538526947 0.5696117694194445 0.0020106972847500643 0.02094508740163571
 -1.1113968796978669e-7 -0.0030218490878852512 -6.209953076303011e-9 -4.312133055000274e-6 -5.145900857381262e-5 -0.007958244639092263 0.9999620103026574 0.0018735141276934083
 -1.7836509498806242e-6 -0.04849684263558869 -9.965883082882194e-8 -6.919787336745145e-5 -0.0008250460440645614 -0.10647317617140745 -0.002854679755417225 0.9931277281001339
 -2.08845137130021e-5 -0.5678425772767222 -1.1667778233263465e-6 -0.0008099898258391986 -0.009630424180902236 -0.8149493917841032 -0.007986604435296713 -0.11513083349432705],

[5231.035857120627,65.49023939306389,0.9960639171854674,0.5721224920101496,0.17626214244862434,0.01679959957508699,0.011437283309953885,0.0099829837457441],
[-0.9999956849860808 0.002937687531310606 9.179234442350822e-11 3.660123702174916e-8 1.34052876948555e-7 1.0645358858378759e-6 6.972792671414023e-9 8.678375902846341e-8
 -1.4395026436870513e-14 -3.126998190553609e-8 0.9999999999999984 2.513246032169742e-9 6.367392969614943e-9 4.899505351584861e-8 3.2087241946089277e-10 3.993470281444012e-9
 -5.7477135901054024e-12 -1.248368966380733e-5 -2.516684602788445e-9 0.9999999980742648 8.247716900219187e-6 5.933096997423375e-5 3.88442615785771e-7 4.834117798796152e-6
 -2.1418179646607667e-11 -4.6515790695521974e-5 -6.487332853530323e-9 -8.391800177828507e-6 0.9999971595737629 0.0023479555306760015 1.5304043459089678e-5 0.00019028341910259808
 -1.6912080168443876e-10 -0.00036729229665787434 -4.96632155570042e-8 -6.012901154768258e-5 -0.002379786752963132 0.9927752360075774 0.005147480664983217 0.061431726992352186
 -2.430039175377139e-13 -5.277496970462243e-7 -7.130712219047265e-11 -8.620549107946342e-8 -3.339136469933456e-6 -0.005418139143601589 0.9999825484483763 0.0021464877150643145
 -3.4200164280946093e-12 -7.427504212261289e-6 -1.0035397966949616e-9 -1.2131367125152407e-6 -4.694887190116253e-5 -0.06356928095202724 -0.0025034593035212255 0.9978166886120082
 -8.361257517295511e-12 -1.8158764831176302e-5 -2.4532165571906327e-9 -2.9650052809320713e-6 -0.00011442510006082126 -0.10159366755637636 -0.0014624270956660047 -0.024152729296487267
 -0.0029376877333724765 -0.999995616182185 -3.125122311173997e-8 -1.2461098573159605e-5 -4.5639062165148945e-5 -0.000362427279677803 -2.3739268100697543e-6 -2.9546022941588223e-5],

[1,2,2,3,4,6,6,7],[1.0000000000000069,1.1100437333930324,1.1100437333930324,1.1098934878275801,1.1080155762148753,8.663224878983748,8.663224878983748,7.5668660712021225],[1.0,5.994167274196415e8,5.994167274196415e8,1.5012264082059762e6,402864.2712510558,3.550814905589836e7,3.550814905589836e7,2.5229759875434595e6],[1.0029290705342222,1.0233012093092424e15,1.0000000935383087,1.0000852813705037,1.0025920901941086,28433.374395771087,1.0090962277935656,1.0836746704282751],[0.0,1.2202358364415902,0.0,0.0,0.0,16.755034314088174,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 8.884526689011611e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 6.6665240801784405e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
