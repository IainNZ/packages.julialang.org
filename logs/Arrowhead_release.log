>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.595371610330744 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6384856145673978
 0.0 0.3240479935584346 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6496700111630087
 0.0 0.0 0.9533078085936748 0.0 0.0 0.0 0.0 0.0 0.0 0.27562798768930197
 0.0 0.0 0.0 0.5066536348936606 0.0 0.0 0.0 0.0 0.0 0.0866446346389238
 0.0 0.0 0.0 0.0 0.3410503529078406 0.0 0.0 0.0 0.0 0.7699485851944821
 0.0 0.0 0.0 0.0 0.0 0.22437824610160684 0.0 0.0 0.0 0.05406281558543147
 0.0 0.0 0.0 0.0 0.0 0.0 0.906155981668008 0.0 0.0 0.29169661598295327
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6395971429390084 0.0 0.9233484152652736
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.04644195292426878 0.8931974801441187
 0.6384856145673978 0.6496700111630087 0.27562798768930197 0.0866446346389238 0.7699485851944821 0.05406281558543147 0.29169661598295327 0.9233484152652736 0.8931974801441187 0.5228505804400896]
(U,Lambda) = eig(full(A)) => ([-1.357462744366834,0.14670378011462892,0.22474425061811942,0.33100905923387947,0.47486424798401927,0.5085280877347422,0.6113073412096106,0.8918265653909794,0.9442149832194855,2.284119733218714],
[-0.2248509708460289 -0.1322310837342884 0.01163054015696607 0.0199769887893794 0.4743431504693025 0.15398815791120304 -0.7725552042887138 0.10064166903655851 0.0580270913441915 -0.2690193713000654
 -0.2657065326435203 -0.34039499800102335 0.0441685809128699 -0.7719620169854992 -0.38565571107299135 -0.07375932720702408 -0.04360828855513835 0.0534686537508888 0.03321194699864671 -0.2358403816502511
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [115.02632364015278 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0012113309569983118
 0.0 29.25184416298776 0.0 0.0 0.0 0.0 0.0 0.0 6.910691373913695e-5
 0.0 0.0 1.665079117700697 0.0 0.0 0.0 0.0 0.0 0.029635891940828336
 0.0 0.0 0.0 0.22852543935683828 0.0 0.0 0.0 0.0 0.002266844135810035
 0.0 0.0 0.0 0.0 0.022248539301553058 0.0 0.0 0.0 32.87493966403358
 0.0 0.0 0.0 0.0 0.0 0.004881701532239065 0.0 0.0 7478.739630299507
 0.0 0.0 0.0 0.0 0.0 0.0 0.0023279641414248172 0.0 43.209954625298245
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.000133381125359614 0.09265797645046558]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-1.6200398619813432e-7 0.9999999999999869 1.0348062003619551e-16 1.3451281844657942e-16 1.9367912083302425e-19 2.535270759507787e-17 1.3021608093489516e-18 3.611171558862698e-21
 -9.240347071104753e-9 -1.6004536794094411e-15 1.0000000000000002 1.19022419883033e-16 1.7086545073216513e-19 2.2365120438737763e-17 1.1487123273705993e-18 3.185625946993375e-21
 -3.962581120075183e-6 -6.420884499041013e-13 -3.673464726678491e-14 0.9999999999921491 2.3047276260756488e-14 2.9606140254056466e-12 1.520356328264831e-13 4.2162663757892275e-16
 -3.030971146675739e-7 -4.910313446042159e-14 -2.800893401229756e-15 -1.2240941804374098e-12 0.999999999999954 1.2135132173667218e-11 6.174387941528749e-13 1.7121132436915035e-15
 -0.004395670258230353 -7.121161291983702e-10 -4.0617541161085657e-11 -1.74211605610449e-8 -1.3444499878469064e-9 0.9999903389943665 9.550801616415871e-7 2.619734932280186e-9
 -0.999973648549225 -1.6199971715796423e-7 -9.240103574461882e-9 -3.962476688209785e-6 -3.030890778498713e-7 -0.004395602410059305 0.005777604809097341 1.2387683074041039e-5
 -0.005777553186266134 -9.359866453440958e-10 -5.33865955136252e-11 -2.289387107085203e-8 -1.7505419755361068e-9 -2.444139061497729e-5 -0.9999833095015628 3.155288262014986e-7
 -1.238919114163761e-5 -2.0070983471031227e-12 -1.1448042289191986e-13 -4.909275309403926e-11 -3.753415195209398e-12 -5.1839331919570964e-8 -2.4395242008263765e-7 -0.9999999999232229],

[7478.936711133693,115.02632364015128,29.25184416298776,1.6650791176876245,0.2285254393568278,0.022248334706253346,0.002328096139849277,0.00013338113906017027],
[-2.491627308422122e-9 1.0 4.069143546794877e-16 9.29236023923763e-15 9.748672750823916e-17 1.3107627098786505e-13 6.433702119251521e-14 3.1142318275035236e-15
 -3.614112580114395e-11 -4.0700441549905885e-16 1.0000000000000002 2.0909668743880935e-15 2.1871217277704033e-17 2.940539264615285e-14 1.4433232980886762e-14 6.986402606817081e-16
 -8.822124494528669e-10 -9.294638269034772e-15 -2.09101667981049e-15 1.0 1.679267679330164e-13 2.2157418316298357e-10 1.087375014427784e-10 5.263425658573229e-12
 -9.261396903397212e-12 -9.75543251427434e-17 -2.188153989681047e-17 -1.680020231033176e-13 1.0 1.2464692069115377e-10 6.060766533416318e-11 2.933408981211042e-12
 -1.3076356476090745e-8 -1.3773841661935374e-13 -3.0893127825365867e-14 -2.327789540471482e-10 -1.3089154746959565e-10 0.9999995348881635 9.127259887898009e-6 4.3698288986866266e-7
 -6.527094800861695e-7 -6.875245964970398e-12 -1.5420370601649956e-12 -1.161724287741877e-8 -6.474510758665938e-9 -0.000964477535222851 0.012114852890511757 0.00045338472792737054
 -1.7983755127623552e-9 -1.8942997378845006e-14 -4.248692126759109e-15 -3.2008155255325874e-11 -1.783258335954386e-11 -2.5574354966096256e-6 -0.9999266124351998 5.50707392483423e-6
 -2.2095176367878288e-13 -2.327371924721662e-18 -5.22002221531361e-19 -3.932573885004465e-15 -2.1907177778015155e-15 -3.107822909271275e-10 -1.3976505423410088e-8 -0.9999998972058796
 -0.9999999999997871 -2.4916273039332707e-9 -3.614112479423701e-11 -8.822048636670548e-10 -9.257169185342259e-12 -1.244682216452264e-8 -6.109355148522288e-9 -2.957231762391938e-10],

[1,1,2,3,4,5,7,8],[1.0,1.0,1.0000000000000562,1.0000000000000528,1.000000000032045,1.0000000000301241,7.795800383641534,2677.8129161869915],[262.02310029486665,262.02310029486665,18060.29698130349,739.8552501082356,70476.35335182297,49.91524063183073,362.9439321509525,2.954081330777668e6],[1.6107711318765994e17,1.000000002498669,1.0000000000377207,1.0000000127644182,1.0000000066326624,1.0009660996349943,1.0119776993911422,1.0004591235475362],[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.441455305586075e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.440892098500626e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
