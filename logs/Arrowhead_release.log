>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.653076799657412 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.003908971127237537
 0.0 0.018433894996914946 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7199508601363227
 0.0 0.0 0.5939349166782453 0.0 0.0 0.0 0.0 0.0 0.0 0.11298183440742426
 0.0 0.0 0.0 0.8861843946952754 0.0 0.0 0.0 0.0 0.0 0.9065363081658506
 0.0 0.0 0.0 0.0 0.3981837820902172 0.0 0.0 0.0 0.0 0.12583298158067424
 0.0 0.0 0.0 0.0 0.0 0.315385198893261 0.0 0.0 0.0 0.32332654934067384
 0.0 0.0 0.0 0.0 0.0 0.0 0.5737068750188692 0.0 0.0 0.2399406340667527
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8416382584647735 0.0 0.2562750246848886
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3622477717125261 0.41638521443706833
 0.003908971127237537 0.7199508601363227 0.11298183440742426 0.9065363081658506 0.12583298158067424 0.32332654934067384 0.2399406340667527 0.2562750246848886 0.41638521443706833 0.288680862852873]
(U,Lambda) = eig(full(A)) => ([-0.9766655561972102,0.18235541664234356,0.3320547117176966,0.39535799676644245,0.4886744735868247,0.5889874983207388,0.6194941711563438,0.6530869005314028,0.8450824575164076,1.8030446850193838],
[-0.0017058589451660424 -0.0014209017830228675 0.00050543642113453 -0.00032575452915373747 0.004051033487361007 -0.0021752542908281564 -0.014283561503704785 0.9998823218888362 0.00026224136030708687 -0.0021955346219780436
 -0.5145599439655696 0.7515059123655338 -0.09528772523839524 0.04102258766494683 -0.26085194562507263 0.04500279743811213 0.14698518390114224 0.0029309735180527304 0.011218497428633033 -0.2605690802369821
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [7276.535516739555 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0006666766304706893
 0.0 5073.784875928078 0.0 0.0 0.0 0.0 0.0 0.0 26.181403232952825
 0.0 0.0 54.33250912699785 0.0 0.0 0.0 0.0 0.0 85.69070806253637
 0.0 0.0 0.0 27.6586733699729 0.0 0.0 0.0 0.0 0.78830851659327
 0.0 0.0 0.0 0.0 7.4435392395675555 0.0 0.0 0.0 0.00012617809853296072
 0.0 0.0 0.0 0.0 0.0 0.07371691297143089 0.0 0.0 5.588289133581169e-5
 0.0 0.0 0.0 0.0 0.0 0.0 0.021254080543308643 0.0 785.9986937390793
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0014785535406835813 4.220034219965143]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-1.0000000000000002 6.575852155551589e-10 1.0074098235572746e-8 5.088578093373255e-12 1.2357302459353707e-14 1.4252378621441018e-19 5.674562570184569e-24 3.8663155548855117e-20
 -6.492827772717016e-10 -0.999999660417302 0.0008241147438840456 4.11040511706676e-7 9.981440066437758e-10 1.1511998569079467e-14 4.583479410080154e-19 3.1229152058134295e-15
 -1.091925887630685e-9 -8.932576357564945e-5 -0.10888572316161847 0.9940542690587024 3.8453195169158625e-5 3.3486047366053456e-10 1.3082220711859781e-14 8.91344482303106e-11
 -1.004471711471783e-11 -8.216792642720356e-7 -0.0009981817364458918 -0.00014802108273950554 0.999999490861023 1.2574944319956541e-11 4.644116188629363e-16 3.1642070983742684e-12
 -1.6077541894307479e-15 -1.315158561014273e-10 -1.5958942659054695e-7 -1.7817815571487784e-8 -1.7451180454007083e-10 0.9999999999999871 1.026441199666031e-18 6.992885275166354e-15
 -7.120558932104928e-16 -5.82468000776326e-11 -7.06741373917148e-8 -7.74144865791014e-9 -7.169207956893217e-11 -1.1417827378480757e-14 0.9999999999999976 3.159015404097121e-11
 -1.0015140385575142e-8 -0.0008192473165271132 -0.9940391039271486 -0.10888409663047688 -0.0010083500072952862 -1.6057849110728263e-7 -7.109606646204058e-8 0.005368931806480553
 -5.3771380895644614e-11 -4.398546381613112e-6 -0.005337005092952653 -0.0005845996267433984 -5.413837287252148e-6 -8.621404013002477e-10 -3.5012482478817917e-10 -0.999985587181764],

[7276.535516739586,5073.8541063873645,790.6788549570622,54.01097473631561,27.65865938419313,7.4435392395674596,0.07371691297143072,0.0014829292090250163],
[-0.9999999999999959 9.430586839787708e-10 9.271088147949672e-8 6.855499166031005e-10 3.251001756360197e-12 1.3932611342418546e-16 5.601313785333287e-19 1.8971493907348365e-13
 -4.527320904217661e-10 -0.9999860158712971 0.00528834291866232 3.861309931681e-5 1.8310243799458052e-7 7.846993527086614e-12 3.1547154611595343e-14 1.0684933470613634e-8
 -8.153203281866511e-12 -9.565298416129704e-7 -0.00748222177738605 0.9999720040239994 7.553723224505047e-5 2.4442417989441606e-9 9.642154664072696e-12 3.265764941798763e-6
 -3.81807453740351e-14 -4.479150939079999e-9 -3.4917314961873576e-5 -7.580064606034541e-5 0.9999999965172248 4.672592786808292e-11 1.7424779141699045e-13 5.90168229718963e-8
 -1.6446537461510466e-18 -1.9293882224242976e-13 -1.5023927244283413e-9 -2.4555677807564485e-9 -4.696487442931267e-11 1.0 1.0364453744534783e-16 3.5100674817591264e-11
 -7.213674995447828e-21 -8.462549774109266e-16 -6.589121743642571e-12 -1.0565921088705226e-11 -1.9107646241683688e-13 -1.1307618057659313e-16 0.9999999999999998 1.57035725105411e-9
 -2.925328955213223e-14 -3.431779488581807e-9 -2.6720566821295973e-5 -4.284742815636553e-5 -7.748586789115298e-7 -4.5851147870290266e-10 -2.0498437359717713e-8 0.07695020662617769
 -1.0926060269726315e-17 -1.2817645501883716e-12 -9.980092078293878e-9 -1.6003448414393765e-8 -2.8940839751351436e-10 -1.7125196789893167e-13 -7.02251733699713e-12 -0.9970349370434479
 -9.27171066576105e-8 -0.005288483803021253 -0.9999580230455838 -0.0074821183908542034 -3.548300161956561e-5 -1.5206927999609049e-9 -6.113632431726491e-12 -2.070670290706883e-6],

[1,2,3,3,4,5,6,8],[1.0000248102077658,1.0000000670567084,1.0022036022094198,1.0022036022094198,1.0344905770725248,1.0264547054066786,1.0238311322295195,420.1176546018924],[27383.25583134513,1.0,28.531951429500634,28.531951429500634,6092.526192199449,1.414365025407492e8,3.2246231013007675e10,2.1289817609429155e7],[1.0000000931780504,1.0052615543399142,17996.780406479986,1.0075819051621873,1.0001119715955713,1.0000000044781907,1.0000000205214215,1.0712258128011862],[0.0,0.0,1.0044601243948803,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 5.551117006079509e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.440892102867437e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
