>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.0310063529341833 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.42714680769370883
 0.0 0.2554032966980959 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6913254936872266
 0.0 0.0 0.5238081578014648 0.0 0.0 0.0 0.0 0.0 0.0 0.25139892644499073
 0.0 0.0 0.0 0.9974627623268089 0.0 0.0 0.0 0.0 0.0 0.8225509259147785
 0.0 0.0 0.0 0.0 0.12890330035017783 0.0 0.0 0.0 0.0 0.00865750194624293
 0.0 0.0 0.0 0.0 0.0 0.9977490557997728 0.0 0.0 0.0 0.07849660885915544
 0.0 0.0 0.0 0.0 0.0 0.0 0.942593572966302 0.0 0.0 0.9907975536552824
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9957930277176028 0.0 0.47569500466410175
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9907220635013545 0.6536663462277124
 0.42714680769370883 0.6913254936872266 0.25139892644499073 0.8225509259147785 0.00865750194624293 0.07849660885915544 0.9907975536552824 0.47569500466410175 0.6536663462277124 0.8797962969011597]
(U,Lambda) = eig(full(A)) => ([-0.9506319674739339,0.07150198574817956,0.128921698749759,0.3923591725112261,0.5443001913386358,0.9649282003721469,0.9928263314207757,0.9962694390393708,0.9977466661179746,2.6050161691727935],
[-0.29512151359349037 0.926603161742398 -0.00926960690851132 0.19061212663227267 0.06369464739227326 0.0077363693244912185 0.0011304793857503381 -0.00036262704817903446 -1.339862046384531e-5 -0.11735712698200965
 -0.3887745023262139 -0.33023458172261505 0.011614222543422249 0.8139668397445998 0.1831603743933129 0.016481073392992 0.002386410489087498 -0.000764665598893096 -2.8240376864587728e-5 -0.20807924454950383
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [353.8628646935776 0.0 0.0 0.0 0.0 0.0 0.0 0.0 11.701639823045873
 0.0 22.688213359719825 0.0 0.0 0.0 0.0 0.0 0.0 7.618791250418548
 0.0 0.0 0.3536668287850852 0.0 0.0 0.0 0.0 0.0 0.023230778995879706
 0.0 0.0 0.0 0.2864144013433077 0.0 0.0 0.0 0.0 0.08757688855562747
 0.0 0.0 0.0 0.0 0.09277326245857394 0.0 0.0 0.0 2.552593867798871
 0.0 0.0 0.0 0.0 0.0 0.0692615124610941 0.0 0.0 3.6905629478459407
 0.0 0.0 0.0 0.0 0.0 0.0 0.06120364572776682 0.0 1636.9600372185423
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00013320987819918546 882.8679051961082]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.006527748166517766 0.9999786940249593 1.063993126498626e-7 7.66655803479079e-14 1.871478368708542e-13 3.716589538842287e-13 1.2719426812178056e-13 7.863543619604996e-11
 -0.004096900009305197 -2.6850502019948817e-5 0.9999916073094633 1.2145468346952474e-11 2.9645752205849976e-11 5.886546278399896e-11 2.0145604434961718e-11 1.2454541387867344e-8
 -1.2490172893555638e-5 -8.153451160949166e-8 -5.1185755700717644e-8 0.9999999999219807 1.0807580863837102e-9 7.932407191768344e-10 2.6287545141178826e-10 1.5734660995765635e-7
 -4.7086258541816126e-5 -3.0737395345606464e-7 -1.929472226066141e-7 -1.6690513578413134e-9 0.9999999988909647 4.7435714356930775e-9 1.5433349513798895e-9 9.076809789756898e-7
 -0.0013724179317460882 -8.958989312786948e-6 -5.623009094441406e-6 -1.7979533090361177e-8 -6.962058582420028e-8 0.9999990198968567 9.119661933388862e-7 0.0002766977200709793
 -0.001984254066492381 -1.2952986144420503e-5 -8.12973645760417e-6 -2.5171631390780857e-8 -9.569303519557853e-8 -3.852728549037361e-6 0.9999977226592535 0.0007855974674226974
 -0.8801217200332943 -0.005745335007879206 -0.0036059611238000323 -1.1068215140274016e-5 -4.187496084570711e-5 -0.0013393124373800639 -0.00211941645809441 0.47469301504836925
 -0.4746794062012008 -0.003098653367208019 -0.0019448026243004727 -5.790690851635212e-6 -2.1553306291426157e-5 -0.00040796161312403237 -0.000250498208495048 -0.8801510368899372],

[1859.9231635211108,353.8555982005258,22.688022974005708,0.35366682875814115,0.2864144010371308,0.09277320774472433,0.06926147619819438,0.029053242002726173],
[-0.001241947899519241 0.9999992287805745 1.6594996231644116e-6 7.670807573491395e-11 2.3121976212272034e-10 1.417610809279905e-9 6.498465028579573e-10 9.577643939410359e-7
 -4.9975904030671756e-5 -1.721577733239552e-6 0.9999999987024237 7.791484945788493e-10 2.3483775565060077e-9 1.4395882298658185e-8 6.599163009073217e-9 9.725981433634175e-6
 -2.3750227562511433e-9 -8.149101583841152e-11 -7.978969308335801e-10 0.9999999999981657 1.3345288634617637e-9 3.0239649618068186e-9 1.3423093524633626e-9 1.915389565081458e-6
 -7.2509353161767865e-9 -2.487916746699464e-10 -2.4357725358901253e-9 -1.351668594835247e-9 0.9999999999599644 1.4644607058555734e-8 6.382095508717985e-9 8.948154707816615e-6
 -6.845642415877567e-8 -2.3488526707093015e-9 -2.2992964134567676e-8 -4.716359597906723e-9 -2.2550992051376875e-8 0.9999996096554444 1.2215459971697907e-6 0.0008835554463569079
 -7.389145984512536e-8 -2.535337623065552e-9 -2.481828600089554e-8 -4.929569638635507e-9 -2.3140751043378038e-8 -2.8763240260336768e-6 0.9999982462232768 0.0018728260610019179
 -2.896176519908109e-5 -9.93725831095394e-7 -9.727509857602701e-6 -1.915404734627497e-6 -8.948224178617716e-6 -0.000883561169532404 -0.0018728450672870624 0.9999897126709553
 -3.3997095753147184e-8 -1.16649627623911e-9 -1.1418664420489274e-8 -2.1810844566454345e-9 -1.0024332908799529e-8 -5.857781369781939e-7 -4.817806040872316e-7 -0.004035515637462897
 -0.9999992271142157 -0.0012419477867708368 -4.997772187529412e-5 -2.3196844819267742e-9 -6.992185286333696e-9 -4.286918714797706e-8 -1.9651650519089445e-8 -2.8963226947849297e-5],

[1,1,2,3,4,5,6,8],[1.0,1.0,1.0000795064804864,1.0001101057580482,1.000108707711442,1.0000705945628723,1.0000322443180663,7.8763612596711905],[1.0,1.0,23.95495411967744,503991.96646187856,165081.099502999,17485.464128776784,16199.332780854862,35208.66472612283],[649130.7199731685,1.0012431278785143,1.0000614244356807,1.000001931755289,1.0000090147664744,1.000886317427653,1.0018710698127962,47758.9364386064],[1.0,0.0,0.0,0.0,0.0,0.0,0.0,14.751517757132596],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 1.234920568486244e-15
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.44089209912353e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
