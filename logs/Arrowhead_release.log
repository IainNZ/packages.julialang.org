>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.5472465002069402 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.17598026906008757
 0.0 0.13929420238534207 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5034660560324051
 0.0 0.0 0.6177185014207467 0.0 0.0 0.0 0.0 0.0 0.0 0.47912590647237874
 0.0 0.0 0.0 0.16012980559039525 0.0 0.0 0.0 0.0 0.0 0.597195171837112
 0.0 0.0 0.0 0.0 0.993834987101782 0.0 0.0 0.0 0.0 0.9989358376799748
 0.0 0.0 0.0 0.0 0.0 0.5903131240530624 0.0 0.0 0.0 0.3333892477254663
 0.0 0.0 0.0 0.0 0.0 0.0 0.7627996476510714 0.0 0.0 0.1307571639575842
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.10390004808416053 0.0 0.4009797311878196
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4334958868086052 0.7862385904017228
 0.17598026906008757 0.5034660560324051 0.47912590647237874 0.597195171837112 0.9989358376799748 0.3333892477254663 0.1307571639575842 0.4009797311878196 0.7862385904017228 0.4811048154818831]
(U,Lambda) = eig(full(A)) => ([-1.1709585367456925,0.11189421747142214,0.14791537987021997,0.2706450481580023,0.5294416211345359,0.5579329425969866,0.6009195277024983,0.7507032278217163,0.7958825051543934,2.235461585619914],
[-0.07199943509977905 -0.007359664398073604 -0.005739347745694623 0.07141773193428522 -0.6441937181878618 0.7420571945474754 -0.07631033661166749 -0.06816656235374835 -0.09217386136708879 0.07090902050852937
 -0.2701190531425391 -0.3345451447143492 0.760563234772324 -0.4302628544385132 0.08410716492636766 0.05419226864855335 -0.025383765884500153 -0.06489598384330428 -0.09985846297877078 0.16338399918392063
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [19357.73290947942 0.0 0.0 0.0 0.0 0.0 0.0 0.0 103.93527259780099
 0.0 10219.718379402373 0.0 0.0 0.0 0.0 0.0 0.0 0.06669011039787831
 0.0 0.0 3517.110773688227 0.0 0.0 0.0 0.0 0.0 566.4499437713558
 0.0 0.0 0.0 2724.0823591587246 0.0 0.0 0.0 0.0 1.9667584085856102
 0.0 0.0 0.0 0.0 79.3351973224741 0.0 0.0 0.0 0.0010037953600763496
 0.0 0.0 0.0 0.0 0.0 4.274671648378288 0.0 0.0 16157.085503305394
 0.0 0.0 0.0 0.0 0.0 0.0 0.06126734677879246 0.0 1270.1772985259092
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.024994290125176656 7231.545516083614]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9995192647823572 0.03100385919471559 1.2701645720427248e-8 6.630975106259777e-6 1.344963874015943e-8 5.550663618512774e-15 1.0756013141523414e-10 2.015593519877465e-14
 -1.6142803070820545e-7 -5.613887684685506e-6 0.999999999984229 1.6742868115465755e-8 3.2670902634177946e-11 1.2778897719269831e-17 2.4761727535295813e-13 4.6401557740290566e-17
 -0.0010227960692315362 -0.03318721349269269 -2.0320803384132775e-7 0.9994486293547854 5.439702704709771e-6 9.168411924811678e-13 1.7757707649046052e-8 3.3276560052631217e-12
 -3.5033832589360254e-6 -0.00011337580905441415 -6.695612864649741e-10 -9.210991766717679e-6 0.999999993524405 5.308388608599032e-15 1.0277987351637196e-10 1.9260143959255332e-14
 -1.7526857838501962e-9 -5.650381413417002e-8 -3.174703186227796e-13 -1.8789495879508036e-9 -6.434921398190564e-12 0.9999999999999986 6.18766251353357e-11 1.1589444086661303e-14
 -0.028210749930434514 -0.9094670264406124 -5.109693737479071e-6 -0.03022820394422068 -0.00010348886793285048 -5.1520197632705144e-8 0.41371502538043115 6.426780666286906e-5
 -0.0022177670831810908 -0.0714970718920476 -4.016947147536042e-7 -0.002376364329583987 -8.135680599864682e-6 -4.03846603301196e-9 -0.15764940008122402 0.9848981011760966
 -0.012626492084667828 -0.407056818169362 -2.286982783108394e-6 -0.013529439415880203 -4.631915922738568e-5 -2.299233063637165e-8 -0.896652967668372 -0.17313499406350058],

[19359.49045676396,17754.907925638894,10219.718379294602,3515.2475689500457,2724.0823420005613,79.33519732247397,1.768664303707371,0.06049768585539084],
[-0.9994285236353426 0.033802733754971906 2.4058888536988635e-8 3.651539259145926e-5 9.557512651023229e-8 1.3543580582624585e-12 1.177227522079905e-6 6.4493906601865e-9
 -8.521655133764001e-8 -3.231351657320217e-6 0.9999999999947744 4.867577422282172e-8 1.2256877076519185e-10 1.6461386660360607e-15 1.4307852624591972e-9 7.838495733619733e-12
 -0.00018581517330810526 -0.006574131874561134 -6.993393933157158e-8 0.9999783722492065 7.023296136615749e-6 4.064566730362448e-11 3.531242461192293e-5 1.9345756158698346e-7
 -4.929625887805973e-7 -1.7394910899790773e-5 -1.784726370278661e-10 -7.137904141860017e-6 0.9999999998230997 1.822707732794332e-13 1.5830072430117706e-7 8.672433937337084e-10
 -7.1825068338752845e-12 -2.5247899130659515e-10 -2.4645072826072732e-15 -4.2405786049254724e-11 -1.874083433561474e-13 1.0000000000000002 2.7755375932395254e-9 1.5198115770425367e-11
 -6.229073702969541e-6 -0.00021896328211573634 -2.137266619376795e-9 -3.675861908649346e-5 -1.6239631337664966e-7 -2.7759674844469546e-9 0.9999047788745523 0.004541062474718502
 -7.0186095684338294e-9 -2.467169030458776e-7 -2.408165124968532e-12 -4.1417719405993784e-8 -1.8297962470082377e-10 -3.118743095743553e-12 -0.005461047890206646 0.9974281272637002
 -1.630157607361877e-8 -5.730300744654641e-7 -5.593256983294743e-12 -9.61977008329213e-8 -4.2499247773593644e-10 -7.243657316985923e-12 -0.012671259531007027 -0.07152978186285891
 -0.03380224220001974 -0.9994068779643522 -3.2319951426069598e-6 -0.00657664795274387 -1.7448165603933733e-5 -2.5224219398648186e-10 -0.00021925622732580844 -1.201185879510585e-6],

[1,1,2,3,4,5,7,7],[1.0003691269761892,1.0003691269761892,1.0001420439183193,1.0000737598317453,1.0052951112107982,1.0021021294740833,9.132290591824743,9.132290591824743],[1.0,1.0,2952.004995939698,1.0098802243137401,375.53135423016766,2.526424723352495e7,25853.77905149156,25853.77905149156],[1.0328704292622597,902.9060933232353,1.0000033283012624,1.0066140766313665,1.0000247298102432,1.000000003080756,35642.65778749184,1.069110847454064],[0.0,0.0,0.0,0.0,0.0,0.0,20.402577184574554,0.0],[0,0,0,0,0,0,0,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 5.859109435615298e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.440892098500628e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
