>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.6539801491697987 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4631370741661389
 0.0 0.5190046803779815 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5422188964510684
 0.0 0.0 0.7356794526002044 0.0 0.0 0.0 0.0 0.0 0.0 0.8823607123546453
 0.0 0.0 0.0 0.5889701428420044 0.0 0.0 0.0 0.0 0.0 0.48258945693562993
 0.0 0.0 0.0 0.0 0.23801170341428146 0.0 0.0 0.0 0.0 0.7414610421709682
 0.0 0.0 0.0 0.0 0.0 0.0995622102602205 0.0 0.0 0.0 0.3101014141699685
 0.0 0.0 0.0 0.0 0.0 0.0 0.41086921490427963 0.0 0.0 0.18553330737506601
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3477366217547977 0.0 0.3280968070350494
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.352960552280688 0.6122545587309087
 0.4631370741661389 0.5422188964510684 0.8823607123546453 0.48258945693562993 0.7414610421709682 0.3101014141699685 0.18553330737506601 0.3280968070350494 0.6122545587309087 0.2458055236240151]
(U,Lambda) = eig(full(A)) => ([-1.283870810255122,0.11010878783769673,0.2859178385311565,0.3488949753491646,0.4046654457249703,0.4429387462929617,0.5531571182868966,0.6211178097183829,0.6820234075384186,2.0276269322037557],
[-0.174083036169845 0.028178139311185933 0.0653750225999026 -0.004730463796312034 0.05527216966173197 0.1625849933400579 0.2056935827504172 -0.615655715508881 -0.6798562670596511 -0.2270893468063634
 -0.21906661178956072 0.04387941771070123 0.1208594305778621 -0.009932551725864144 0.1410990939318809 0.5281083339253655 -0.7109251563646447 0.23196363640123074 -0.13692198347348822 -0.2420786152560961
... truncated ...
 2.0e-7 2.00000010000001 9.999999999999998e-15 2.0e-7
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [1721.9617696766518 0.0 0.0 0.0 0.0 0.0 0.0 0.0 118.66622815085194
 0.0 176.30477760561337 0.0 0.0 0.0 0.0 0.0 0.0 0.6737914395044591
 0.0 0.0 1.262244289036332 0.0 0.0 0.0 0.0 0.0 0.032392853710929474
 0.0 0.0 0.0 0.7990514075492432 0.0 0.0 0.0 0.0 0.9685168220338358
 0.0 0.0 0.0 0.0 0.5024034718568786 0.0 0.0 0.0 0.10589093305584038
 0.0 0.0 0.0 0.0 0.0 0.3565392900283447 0.0 0.0 1278.206276804276
 0.0 0.0 0.0 0.0 0.0 0.0 0.0024297324788963063 0.0 4.335162867827013
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0010555944711581463 0.004987248524226655]
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.99385847001216 0.1106586715301105 5.285471645466709e-7 1.163318520599174e-12 1.2131387093881421e-11 3.2497321215490424e-13 1.3498043258966492e-11 1.189694019008567e-14
 -5.894356899852341e-5 -0.000534166112540643 0.9999998555960996 6.301411903513614e-13 6.5710759452676985e-12 1.7602252696564825e-13 7.31118905727924e-12 6.44395467156101e-15
 -2.804343720296162e-6 -2.5186656199856933e-5 -1.3619788365806581e-8 0.9999999996788836 1.0284356963312655e-8 1.9617152079300454e-10 6.857330417807359e-9 6.043907859679832e-12
 -8.384729627656758e-5 -0.0007530576353031067 -4.0720675834235626e-7 -2.9486503476816837e-8 0.9999997129366588 2.037061397884471e-8 5.116269635918824e-7 4.509346778511971e-10
 -9.167282478588527e-6 -8.233409559144233e-5 -4.452061857090018e-8 -2.295601012712285e-9 -8.314169954895175e-8 0.9999999965685146 1.4150014099170045e-7 1.247126704280342e-10
 -0.11065798720643878 -0.993852321331038 -0.0005374048852521837 -2.534216253819847e-5 -0.0007577086226105776 -8.28429322300678e-5 0.0033915795505984146 2.9891321265986505e-6
 -0.00037530748011381455 -0.0033707480701789753 -1.8226543073909124e-6 -7.90930785059159e-8 -2.0582135397882274e-6 -1.3946900795635294e-7 -0.9999942123774065 0.00026908335026221543
 -4.3176040517805594e-7 -3.877768575489873e-6 -2.096813956119356e-9 -9.098981176688041e-11 -2.3677877289210642e-9 -1.6044458473136725e-10 -0.0002690716647720784 -0.9999999637926072],

[1730.931117416424,1271.5907740390896,176.30475263331974,1.2622442886633445,0.7990512238392143,0.5024034710011352,0.002713995660465576,0.001055595173403589],
[-0.98870848909613 0.14985167063833915 5.162299922301445e-6 1.5870066011943372e-9 2.6143236084969697e-8 1.1138287846313475e-9 8.56416787836524e-6 1.940713324541197e-8
 -6.003724076020352e-6 -7.406159245461627e-5 0.9999999972388498 8.801537342876749e-11 1.4498595942243796e-9 6.177029869721296e-11 4.749445916781928e-7 1.0762648635528089e-9
 -2.045007343054854e-9 -2.5001528476970244e-8 -9.751013416171414e-11 0.999999999974379 1.624598080330899e-8 4.928635968599478e-10 3.189255710315919e-6 7.227096496419743e-9
 -3.870650855765476e-8 -4.7321180346669796e-7 -1.8455494168881019e-9 -1.866614277320783e-8 0.9999999428467955 3.23985973663812e-8 0.00015063260835432142 3.4134296757721285e-7
 -2.6608075263041115e-9 -3.2530068888393145e-8 -1.2686733060313936e-10 -9.137042085618198e-10 -5.2275345138423776e-8 0.9999999982718136 2.6193911485574326e-5 5.9356162462891036e-8
 -2.2793466358983708e-5 -0.00027866465239822325 -1.086788378553138e-6 -7.15826304012857e-6 -0.0003380920850805063 -5.8790915959073676e-5 0.4455539051368903 0.0010096134134282653
 -5.268244153853769e-10 -6.440763987517838e-9 -2.511879176438605e-11 -1.5224867597160866e-10 -6.258557820736005e-9 -6.745024626436795e-10 -0.8952550853028651 0.0006193667535957614
 -2.6330562319038263e-13 -3.219078930335238e-12 -1.2554313970935607e-14 -7.609330705274964e-14 -3.1279892464417463e-12 -3.37108372743136e-13 -0.00010465402204438297 -0.9999992985324442
 -0.14985167010633976 -0.9887084472520526 -7.412469301312536e-5 -2.3028988699421737e-8 -3.793635652017311e-7 -1.61627318211778e-8 -0.0001242743609989363 -2.8161627809662285e-7],

[1,1,2,3,4,5,7,8],[1.0000001136522603,1.0000001136522603,1.0177596460799097,1.0158628329425743,1.0138061384762576,1.0085575520828083,57735.60888741995,176306.09703362433],[0.9999999999999999,0.9999999999999999,1720.1292201928354,4.997560029135252e6,264039.41044907656,3.8409551544557195e6,1.939933158702577e7,3.881436863502154e10],[1.1286211642961919,49.13166942736515,1.0000803703540007,1.0000072026479765,1.000338459343605,1.000058838363916,1.2504942686985723,1.0016282882078908],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,1,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.440892138931436e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 3.461713126103107e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
