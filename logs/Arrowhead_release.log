>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.11619155994213459 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.02675901995065022
 0.0 0.7145740168190962 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.02909329256054738
 0.0 0.0 0.9236509073325361 0.0 0.0 0.0 0.0 0.0 0.0 0.7636659275700803
 0.0 0.0 0.0 0.8037383157512448 0.0 0.0 0.0 0.0 0.0 0.49913741573629533
 0.0 0.0 0.0 0.0 0.22730614451720932 0.0 0.0 0.0 0.0 0.6011598660950719
 0.0 0.0 0.0 0.0 0.0 0.16315344632572737 0.0 0.0 0.0 0.05663526647759798
 0.0 0.0 0.0 0.0 0.0 0.0 0.34728991085698824 0.0 0.0 0.9238087367417662
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.31630889691264286 0.0 0.20624810899774637
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.019297752539084723 0.07377576394968655
 0.02675901995065022 0.02909329256054738 0.7636659275700803 0.49913741573629533 0.6011598660950719 0.05663526647759798 0.9238087367417662 0.20624810899774637 0.07377576394968655 0.8465831550253349]
(U,Lambda) = eig(full(A)) => ([-0.7966485063166382,0.020462989774705953,0.11628664608666828,0.16344501215454388,0.25963864465660347,0.31794486965996205,0.6578588321321617,0.7149445155940872,0.8493046666754784,2.1748564356044335],
[-0.019169691852419218 -0.0044044058386777905 0.9996791777502291 -0.002910738574316769 0.008571159719677956 -0.00101926328249622 -0.008676694375818363 0.0005666554980425997 -0.0024013844287134427 -0.009503517747199786
 -0.012589372354486528 -0.0006604236678606698 -0.00017273912690150516 0.00027133520572547224 -0.0029383551060062434 0.000563696180798022 0.09009697641234743 0.9956407692182494 -0.014206560347873438 -0.014566521668337454
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [5198.395550589286 0.0 0.0 0.0 0.0 0.0 0.0 0.0 82.18708976681363
 0.0 1241.4145706290901 0.0 0.0 0.0 0.0 0.0 0.0 15040.9848272815
 0.0 0.0 238.97925058340311 0.0 0.0 0.0 0.0 0.0 3803.2675126271215
 0.0 0.0 0.0 208.96060018330414 0.0 0.0 0.0 0.0 2.108803396008455
 0.0 0.0 0.0 0.0 111.39171645405892 0.0 0.0 0.0 214.90895980831522
 0.0 0.0 0.0 0.0 0.0 0.011371776093247542 0.0 0.0 9754.658565148236
 0.0 0.0 0.0 0.0 0.0 0.0 0.008453839533106619 0.0 15.12231982607891
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00013259400615449053 267.6551823265251]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.004859631719149807 0.9999881845465015 0.00012129067096885323 5.959104508351645e-6 6.730133068797874e-9 9.072163976402382e-8 2.7978537352403717e-17 1.104897161400267e-15
 -0.8218026026417566 -0.0040628884267169315 0.5694165254984396 0.019715708627478557 2.2191241788558022e-5 0.00029335817219206347 8.978476398351327e-14 3.5456796618255963e-12
 -0.2068860546073541 -0.0009708053383970548 -0.33047779662499666 0.9208554829376493 0.0006248880908698558 0.0025363245904254633 6.126275645494035e-13 2.4193203801060882e-11
 -0.00011470784101246748 -5.380155961458227e-7 -0.00017792787146873613 -0.000768227145858327 0.9999996825032006 2.0111960992258447e-6 4.442908079484907e-16 1.7545436544968722e-14
 -0.011688835689355 -5.4765926312097836e-5 -0.016987829284310176 -0.01147630608985936 -1.5190489551055859e-5 0.999721499191104 1.5933411829640894e-13 6.2922450802417e-12
 -0.5305335027420124 -0.0024846689127280158 -0.7522188829828073 -0.38908846292647203 -0.0004935597039815702 -0.023451858140616087 0.0015512101533239268 0.02742826071645453
 -0.0008224682856228015 -3.851898834712045e-6 -0.0011661396911448114 -0.0006031907863071619 -7.65149045160063e-7 -3.6356628506815374e-5 -0.9999987962790096 7.699558681777592e-5
 -0.014557151381395473 -6.817609313668248e-5 -0.020639910754258004 -0.010676082870106147 -1.3542638246612854e-5 -0.0006434885710408387 -3.4461463009074787e-5 -0.99962377151894],

[18358.010521681303,5198.341138212688,712.358629371031,221.43461673945035,208.9605890352716,111.36294278314129,0.008453847761116105,0.00033890263014484226],
[-0.001376090719443454 0.9999986516805824 0.0008851115972992191 0.00013989584292577688 1.6742819285318547e-7 4.234864459444402e-6 1.720441486463789e-11 1.6947913579859518e-8
 -0.055572346681875155 -0.0009702573874366491 0.9923119372258986 0.1105309021724834 0.00013183601282832816 0.0032702001246637 1.3184542397639769e-8 1.2987973545948323e-5
 -0.0026931825879406043 -4.4630070644471614e-5 -0.11086738184336752 0.9938163980340784 0.000714657669869817 0.005442824468427149 1.731818225260103e-8 1.705998478417846e-5
 -1.3056654083179496e-6 -2.16269111413614e-8 -5.219269238623877e-5 -0.0007249508131989517 0.9999997358531124 3.7737934493966503e-6 1.0981895641870984e-11 1.0818166118533263e-8
 -7.092486787982679e-5 -1.1735417843698061e-6 -0.002656391576920498 -0.005773105635989084 -8.09767388521259e-6 0.9999798046624584 2.099458309193381e-9 2.0681573923996225e-6
 -3.2863627548438505e-7 -5.435406755761816e-9 -1.2008087440375323e-5 -1.9981640386750803e-5 -2.6859851746400674e-8 -2.394775794179746e-6 0.00208662552669898 0.9203470606334131
 -3.787455563070284e-10 -6.264178086937181e-12 -1.383903755167404e-8 -2.3028369233204338e-8 -3.0955345582420225e-11 -2.759922606929489e-9 -0.9999978229944398 0.0019206352439243915
 -1.0514162292133968e-10 -1.7389665419423537e-12 -3.84178465837437e-9 -6.392788167580609e-9 -8.593355652899324e-12 -7.661680395343314e-10 -5.405093121424681e-7 -0.3910979400080485
 -0.9984500800711069 -0.001324101355013869 -0.05493268767464484 -0.008832462342297176 -1.0572848395852765e-5 -0.00026773545087164553 -1.0881922445038613e-9 -1.0719683443626184e-6],

[1,1,3,4,4,5,7,8],[1.0,1.0,5.653029713104191,15.121115481823606,15.121115481823606,6.515272299104971,6.719684178111976,11445.963509682573],[43.70389930810286,43.70389930810286,20.543575997901886,42373.331658475596,42373.331658475596,779.983998880883,1.4605643391144857e8,5.2613060153528523e8],[549251.7405969152,1.0023374734557815,62.0716673752942,1.153337896580349e6,1.0008648307138102,1.008951746046088,1.0020828452667128,6.890051496899199],[1.0,0.0,0.0,24.909547807749735,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 2.949969763829843e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 2.2412715434102443e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
