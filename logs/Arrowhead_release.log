>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.8330352109267773 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.14949027616382105
 0.0 0.7857678780874162 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4473379245837308
 0.0 0.0 0.4905332351241669 0.0 0.0 0.0 0.0 0.0 0.0 0.8593192138569539
 0.0 0.0 0.0 0.05003830619435745 0.0 0.0 0.0 0.0 0.0 0.4918579615113501
 0.0 0.0 0.0 0.0 0.04469691729835046 0.0 0.0 0.0 0.0 0.36284268483390636
 0.0 0.0 0.0 0.0 0.0 0.1705463601542192 0.0 0.0 0.0 0.9054716521939814
 0.0 0.0 0.0 0.0 0.0 0.0 0.8320829801013943 0.0 0.0 0.4005884298666147
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.683402804979202 0.0 0.6577139485272514
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8284904864252989 0.5549065672990359
 0.14949027616382105 0.4473379245837308 0.8593192138569539 0.4918579615113501 0.36284268483390636 0.9054716521939814 0.4005884298666147 0.6577139485272514 0.5549065672990359 0.6315289305706955]
(U,Lambda) = eig(full(A)) => ([-1.2341045737540872,0.04642456155334118,0.07968518451109086,0.3235052271048404,0.6065257934156747,0.7483195825723454,0.8036237413313194,0.8308571541325513,0.8329508019885543,2.312335637006254],
[-0.04905933601830039 0.0007589937916390837 -0.008964914868116732 -0.03419123658659168 -0.05376860893595073 0.09647336267409695 -0.13629314821152932 -0.16815059482918632 0.9654261427363305 0.07243576628869632
 -0.15024164840770826 0.0024164325002717494 -0.028622672743404482 -0.11277647670029775 -0.2033283105410318 0.6530729142127003 0.6717886652533637 0.024306202962375054 -0.0051682726445683065 0.2100468290467459
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [6363.4961667324515 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00010194856649683583
 0.0 5167.860820152516 0.0 0.0 0.0 0.0 0.0 0.0 1527.483443163494
 0.0 0.0 3833.8466757704455 0.0 0.0 0.0 0.0 0.0 15.460187894354032
 0.0 0.0 0.0 1170.8110226893832 0.0 0.0 0.0 0.0 7486.594491041896
 0.0 0.0 0.0 0.0 209.00954660125774 0.0 0.0 0.0 5478.688515550171
 0.0 0.0 0.0 0.0 0.0 1.1650248164438484 0.0 0.0 1.4947203975309962
 0.0 0.0 0.0 0.0 0.0 0.0 0.001582046155256158 0.0 1208.1341571914693
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00032919066775907637 0.000672242375018972]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-1.8842247953698668e-8 1.0 4.096192173424271e-9 1.1844123714146656e-11 1.7299609602239376e-10 3.9144509773228975e-12 3.50172713294406e-18 2.776518628394967e-27
 -0.22240693552287435 -8.184901357817194e-9 0.9749458184322641 0.000381205770819295 0.003956377943976367 8.892969988988288e-5 7.955136808569824e-11 6.307626014155064e-20
 -0.0018999241482531002 -4.42775414875014e-11 -0.0008247165637426184 0.9999978523277276 7.394645181158905e-5 1.6355458138501245e-6 1.4629789044780203e-12 1.1599955644955714e-21
 -0.7842648302783031 -1.4137255206134729e-8 -0.18131600562584776 -0.0016834662824773289 0.5932773756868804 0.008503148346083402 7.59633086003993e-9 6.023123208401654e-18
 -0.5656132618742044 -1.0006216764427786e-8 -0.1258450611363779 -0.0011203949699802485 -0.7890817819936232 0.20394446454967347 1.7444181392947972e-7 1.3831058087976787e-16
 -0.00015423962422265078 -2.726996013720403e-12 -3.4275438307468004e-5 -3.047627270654689e-7 -0.00019700988804526872 -0.0012120214628325453 0.9999992336128652 1.2145088522701252e-15
 -0.12466689821382143 -2.204142611363991e-9 -0.027703726837653223 -0.0002463298333352777 -0.15923630118926863 -0.9789447762464814 -0.0012380523624217414 5.564302360060341e-7
 -6.9368431678423e-8 -1.2264515949025792e-15 -1.541519128100239e-8 -1.3706536746238506e-10 -8.860389275729034e-8 -5.44714472857001e-7 -6.888885537023183e-10 -0.9999999999998453],

[9575.086090239916,6363.4961667324515,5077.457130925087,3833.840633206314,717.4342602553924,43.80350374575294,1.1650239241908318,0.0003291906677602024],
[-1.2522349302760112e-8 1.0 5.133692421551909e-9 1.9659146809721135e-11 1.5344402335989606e-9 5.686666969299578e-10 1.912684085256822e-14 5.3672134051877385e-20
 -0.12003736336015024 -6.647042747508425e-9 0.9923046452052778 0.0005138498325595527 0.02849879312860339 0.010491770577905115 3.528772154658954e-7 9.902143814864105e-13
 -0.0007607260980578434 -2.6676107095120746e-11 -0.0006227205419617973 0.9999994284368391 0.00039515726271834294 0.00014314909414312618 4.814353330598741e-9 1.3509633092300737e-14
 -0.09589740492604262 -2.601094397203764e-9 -0.04180966426752976 -0.0005141113229325793 0.9681942018201924 0.22727816178683444 7.63406460438786e-6 2.1422050301103478e-11
 -0.012346476084062424 -3.2865499944205224e-10 -0.00518031339150463 -6.10805891777661e-5 -0.22988256154241846 0.97312626667442 3.1295498470578485e-5 8.781607327002038e-11
 -1.8766723161009138e-8 -4.992566895752628e-16 -7.864514695649436e-9 -9.261108484351222e-11 -3.1991977714565405e-7 -3.2235665221173026e-5 0.9999999994789683 4.298217085899087e-12
 -2.0598121536257137e-8 -5.479779122323593e-16 -8.631993023206633e-9 -1.0164876504713978e-10 -3.511390409262248e-7 -3.535643697495332e-5 -1.6812152431423287e-6 2.6741290132285054e-6
 -2.38488094314855e-15 -6.344569226125206e-23 -9.9942490513997e-16 -1.1769044193120377e-17 -4.065539693134103e-14 -4.093620503478909e-12 -1.9465324127344226e-13 -0.9999999999964247
 -0.9880494445877203 -1.1609681735140815e-8 -0.11643117988819217 -0.0007816924292637938 -0.09456034105893331 -0.035493749483044 -1.1938723471035884e-6 -3.3501444015897125e-12],

[1,1,2,3,5,6,6,8],[1.0,1.0,1.0000000000000009,1.1368694264639874,5.072007288304968,122.21122617368098,122.21122617368098,2721.6811279016565],[1.3511208704108419e7,1.3511208704108419e7,1.110411095018108,147.88414152471063,7.654703616318296,5.0335684085545605e6,5.0335684085545605e6,3.960934976996168e13],[6.796300285371187e15,1.000000021213151,1.1480416843760815,1.0018695923319236,13.878517862711226,9.223073288691814e8,1.0000421612978327,1.0000026742397525],[1.0,0.0,0.0,0.0,0.0,240.29595928034675,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 1.2012590380714285e-14
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.441087385969512e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
