>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.01258995694005649 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7358385842163717
 0.0 0.8584817095069128 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8354844697795223
 0.0 0.0 0.06503715103615915 0.0 0.0 0.0 0.0 0.0 0.0 0.2810248524186909
 0.0 0.0 0.0 0.7800886039232642 0.0 0.0 0.0 0.0 0.0 0.5968238415219991
 0.0 0.0 0.0 0.0 0.43410546942297934 0.0 0.0 0.0 0.0 0.9429862749277995
 0.0 0.0 0.0 0.0 0.0 0.7764700571340146 0.0 0.0 0.0 0.8149889436338036
 0.0 0.0 0.0 0.0 0.0 0.0 0.7264631054548132 0.0 0.0 0.8018574450811053
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1253292048425927 0.0 0.9358275166997929
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.47414044024423907 0.6111944569341246
 0.7358385842163717 0.8354844697795223 0.2810248524186909 0.5968238415219991 0.9429862749277995 0.8149889436338036 0.8018574450811053 0.9358275166997929 0.6111944569341246 0.21615698572786912]
(U,Lambda) = eig(full(A)) => ([-1.929473833336889,0.04022858135311802,0.07094582328221266,0.2393405971779523,0.461290490024052,0.5816067448307471,0.7461506753103118,0.778851177961422,0.8341668484902671,2.6457555791397183],
[-0.2738113273881371 -0.8543646899513877 -0.24124873572549935 -0.29651992730044807 0.027714856173254976 -0.10677800133446552 0.019077853804925875 -0.0016228899564301388 -0.022607170991553224 -0.1895151089049589
 -0.2165633108105246 0.0327663349079647 0.02029714896707256 0.12330156496111601 -0.03554883726544508 0.24916039112096103 -0.1414560905212098 0.017731363374719297 0.8673182161961418 -0.31702005339824807
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [1357.2908121490022 0.0 0.0 0.0 0.0 0.0 0.0 0.0 5004.267512196278
 0.0 1062.2088703265654 0.0 0.0 0.0 0.0 0.0 0.0 0.0005137959021431779
 0.0 0.0 8.74744993614515 0.0 0.0 0.0 0.0 0.0 2.608506588658736
 0.0 0.0 0.0 7.947183655071574 0.0 0.0 0.0 0.0 124.0903788501912
 0.0 0.0 0.0 0.0 4.476198854794796 0.0 0.0 0.0 0.5828796793231493
 0.0 0.0 0.0 0.0 0.0 0.019974023778485263 0.0 0.0 0.0027991716430350293
 0.0 0.0 0.0 0.0 0.0 0.0 0.005018251589259856 0.0 6.68713519630564
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 7.212692685111274e-5 75.74362867504605]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9996331236205765 9.987757861483657e-8 0.027080496712189733 5.835648623260143e-6 1.8989253133969522e-5 0.0005142603754086001 5.244052604079224e-13 7.879528532541422e-11
 -9.97911430159914e-8 -0.9999999999999951 4.5420958280858905e-9 9.783103264753843e-13 3.183368853322803e-12 8.621079358750207e-11 8.79109815259027e-20 1.3209194099793372e-17
 -0.00048538776827281477 -3.29455857749867e-11 -0.018289756134299673 0.9997984769908299 0.0003228682495793046 0.00825532447410613 6.581177610516772e-12 9.888597091122046e-10
 -0.02309057696324079 -1.5672499453271764e-9 -0.8619637673600843 -0.019961139409519567 0.020118475282799142 0.5056501645205717 3.793033647568189e-10 5.6992448670316975e-8
 -0.00010846132189295747 -7.361434787903742e-12 -0.003930637932558028 -2.2171343080185722e-5 -0.9994456652467131 0.03305903884827003 5.616181820920948e-12 8.438519267888219e-10
 -5.208650108861812e-7 -3.5351298603452966e-14 -1.862355179558828e-5 -7.859177056207602e-8 -9.764264465831797e-7 -3.1735691892602e-5 0.9999999993223657 2.1711719868999233e-7
 -0.0012443305345134655 -8.44531680063852e-11 -0.04449108289265 -0.00018775241201451795 -0.002332609324084087 -0.07581389744244132 -3.453804936864391e-6 0.9961253795632309
 -0.014094243227980571 -9.565814373392855e-10 -0.5039401636686893 -0.00212662730471696 -0.026420891357786514 -0.85872512958005 -3.6651604033231465e-5 -0.08794446082589957],

[5186.971017626047,1062.2088703265688,38.693497149065465,8.747129565765142,4.4766542272202035,4.0863746456455114,0.019974023764958115,0.004998811815384241],
[-0.26157710339993145 1.276235998216899e-7 0.9499298870372107 0.0009055167412040177 0.005757411115558261 0.17081176914069482 3.5634804993222686e-8 2.1394707535039125e-5
 -2.043563323014791e-8 -0.9999999999999918 1.2468902616579969e-7 1.1880124775805028e-10 7.553414809122938e-10 2.2409562902931444e-8 4.675063245881969e-15 2.806851640120672e-12
 -8.185712216543135e-7 -2.7131185799179967e-13 -0.0041347703856474535 0.9998350953826803 0.0006308894334507334 0.017671663468455646 2.8821694790346392e-9 1.7304113694996483e-6
 -3.5378076184513815e-5 -1.1725775877852236e-11 -0.17703709584165683 -0.018135645489099666 0.035715337798538034 0.9833887176606027 1.5091568610213695e-7 9.060742297626054e-5
 -9.359883508062962e-8 -3.102143739124554e-14 -0.00045470992049510757 -1.134581804906747e-5 -0.9993440000356991 0.03621274226310379 1.2585920058445678e-9 7.556293711004929e-7
 -2.005750577257539e-12 -6.647540786292007e-19 -9.613689477895035e-9 -1.7946388951914983e-10 -4.356638702047996e-9 -1.551226990812001e-7 0.9999999999996028 8.675469790651979e-7
 -1.2038555182143008e-9 -3.9898673076960417e-16 -5.770154260644937e-6 -1.0771406012628434e-7 -2.6148145140474655e-6 -9.310287096018724e-5 -8.6773012375304e-7 0.9999991905498488
 -1.9598614429729506e-10 -6.495453134080005e-17 -9.393737449536068e-7 -1.7535705958584583e-8 -4.256879360297591e-7 -1.5157005898231475e-5 -1.3235027624822585e-7 -0.0012689342842290277
 -0.9651825825845667 -1.3414848294247046e-8 -0.25743693069949697 -0.0002455900898410059 -0.0015615464564087344 -0.04632828737392426 -9.66510948538816e-9 -5.802815276113238e-6],

[1,2,3,3,5,5,6,7],[1.0,2.1766828103940523,540.3632607748051,540.3632607748051,30061.78062854516,30061.78062854516,8664.42863070325,8667.133505768825],[0.9999999999999999,1.2445514837507827e7,297673.3967968938,297673.3967968938,2.603305525382321e6,2.603305525382321e6,1.2148379057635132e11,2.0240483960566935e8],[35.10387096388494,1.0000001410504602,258283.016467687,1.01896404325847,1.0423803004393153,853.4363323636535,1.0000012004359706,1.0013786737250712],[0.0,0.0,4537.8453809592365,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,1,1,1,1])
N1 = norm(Ua' * Ua - eye(8)) => 6.668410102184259e-16
N2 = norm(Va' * Va - eye(8)) => 6.174166547238076e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
