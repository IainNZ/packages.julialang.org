>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.3987223141567082 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9465729552705346
 0.0 0.8308106605869601 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9907908383175295
 0.0 0.0 0.5206813010020053 0.0 0.0 0.0 0.0 0.0 0.0 0.8442541731924871
 0.0 0.0 0.0 0.8528080092845898 0.0 0.0 0.0 0.0 0.0 0.8644883876661671
 0.0 0.0 0.0 0.0 0.10428042877158816 0.0 0.0 0.0 0.0 0.2514345260407098
 0.0 0.0 0.0 0.0 0.0 0.44819887147453263 0.0 0.0 0.0 0.9284222894710215
 0.0 0.0 0.0 0.0 0.0 0.0 0.19241399675136006 0.0 0.0 0.4458536615250204
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7042029170240878 0.0 0.7552495657141902
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5704186454362656 0.19845227118808517
 0.9465729552705346 0.9907908383175295 0.8442541731924871 0.8644883876661671 0.2514345260407098 0.9284222894710215 0.4458536615250204 0.7552495657141902 0.19845227118808517 0.5970964345464569]
(U,Lambda) = eig(full(A)) => ([-1.6636860548179517,0.10926471384346259,0.20712998335804667,0.41978814580537227,0.4900370862154322,0.5681826961523986,0.6315711358766851,0.7540299136002653,0.8440223825873132,2.8592935764135414],
[-0.32319744644667847 0.06410924179153288 0.1579563143141785 -0.7966926154142837 0.2775172429165676 0.061159666694521386 0.25161031378777665 0.1185259133396187 -0.01715482878211432 0.2708456014148525
 -0.27969682519896033 0.026919655429874324 0.05079029244230478 0.04273972060577166 -0.07783823722666995 -0.04130667270450045 -0.30779026320756864 -0.5741076899883003 -0.6052121150114077 0.3438858215035671
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [10530.369254153586 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3842256597441902
 0.0 10.545096512574649 0.0 0.0 0.0 0.0 0.0 0.0 157.57143763114536
 0.0 0.0 1.114928755346926 0.0 0.0 0.0 0.0 0.0 0.00010891079117969837
 0.0 0.0 0.0 0.1825368413247762 0.0 0.0 0.0 0.0 0.0006339854777829265
 0.0 0.0 0.0 0.0 0.010806696739317893 0.0 0.0 0.0 7109.536671847184
 0.0 0.0 0.0 0.0 0.0 0.003421276033855658 0.0 0.0 0.0047390272231769585
 0.0 0.0 0.0 0.0 0.0 0.0 0.0031321173800644064 0.0 72.4066920963992
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 8.837002465980066e-5 0.0003260157357481805]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999989737329 4.530490338843865e-5 1.200137993510912e-12 9.27893850522707e-21 1.442870117332508e-21 3.433437498977106e-23 5.308943653102974e-19 2.606607882213295e-24
 -1.0038127132439352e-6 -0.022156849192471437 0.9997545068829921 3.8375824059917806e-12 5.90248110577417e-13 1.404127053045075e-14 2.1711277057892386e-10 1.0659894814398406e-15
 -6.938181819795028e-13 -1.531441716552733e-8 -3.432410780317745e-10 0.9999999999999998 3.7489067492775003e-17 8.681819471035295e-19 1.3424220053409971e-14 6.591028996864915e-20
 -4.038816007425689e-12 -8.914743659695091e-8 -1.976301729211129e-9 -1.403408451553281e-15 0.999999999999996 1.886083096273888e-16 2.916186062525239e-12 1.4313798173361902e-17
 -4.5291432553712525e-5 -0.9997026611516722 -0.022155700220031667 -1.531746850892776e-8 -8.916474583060202e-8 6.704293448856814e-7 0.010183917824283751 4.579952264768661e-8
 -3.019005903696348e-11 -6.663750881306676e-7 -1.4768383942654806e-8 -1.020935221747408e-14 -5.924733350047078e-14 -0.9999999999997038 3.854303195550469e-7 3.0477501129403927e-13
 -4.612681476845499e-7 -0.010181417737170202 -0.0002256433146101849 -1.5598650541420928e-10 -9.05177198490617e-10 -3.786223565841757e-7 -0.9999481425642028 5.556803515547473e-9
 -2.0768891685364547e-12 -4.5842480832065864e-8 -1.015973283843295e-9 -7.023336219505801e-16 -4.074418889726714e-15 -2.7617359737131557e-13 -5.090096778812993e-9 -0.9999999999999991],

[10530.369267041266,7111.651222205208,10.542507772371184,1.1149287553469258,0.1825368413247755,0.003421276033862521,0.003133887975820305,8.837002466118832e-5],
[-0.9999999977498747 6.708390875728e-5 1.1987561688812879e-9 8.763846862683251e-17 8.323774538347379e-17 1.0567801112051208e-16 1.7838907276842288e-12 3.1060920946589416e-16
 -1.0052165952847811e-9 -3.285398929852512e-5 0.999999999202414 3.6296199781437754e-11 3.409844964573127e-11 4.327816622723966e-11 7.305542308888539e-7 1.272033362700814e-10
 -7.345970710567702e-17 -2.400916965094143e-12 -3.629965053635718e-11 1.0 2.289819362244185e-16 2.829239757676054e-16 4.775872357637147e-12 8.315633931420114e-16
 -7.00101485514734e-17 -2.288173446667183e-12 -3.4218412065135665e-11 -2.2976691973050697e-16 1.0 1.0062901895735307e-14 1.6985654773743446e-10 2.956653589204395e-14
 -4.647992526047124e-11 -1.5191244833299362e-6 -2.271090887431892e-5 -1.4846799510389052e-10 -5.278804875971581e-9 2.117667953012136e-6 0.03511756399536313 5.600785492101902e-6
 -9.808632805226564e-18 -3.205799957485766e-13 -4.7926659512833656e-12 -3.1328469998934175e-17 -1.1104688823576225e-15 -0.9999999999976978 4.207755750011599e-7 1.1799469852545387e-11
 -1.3719803604179083e-13 -4.484105653088879e-9 -6.703730864093478e-8 -4.382056183592921e-13 -1.5531775475319694e-11 -3.466220356968406e-7 -0.9993831881207119 1.96950956338176e-7
 -1.742908936856375e-20 -5.696428346973853e-16 -8.51615062425866e-15 -5.566744887826254e-20 -1.972514124526145e-18 -7.133440087421404e-15 -1.4353160717135602e-10 -0.9999999999842963
 -6.70839087604661e-5 -0.9999999972090285 -3.285395478260014e-5 -2.4018838975464855e-12 -2.2812744861740685e-12 -2.896288810810612e-12 -4.889061309460878e-8 -8.512783012967577e-12],

[1,2,2,3,4,6,7,8],[1.0000000008273995,1.000000005837982,1.000000005837982,1.0009933532854698,1.0009791865192978,19.078751908527067,22.846613799202107,29889.142209716516],[0.9999999999999999,2.4350165030379403,2.4350165030379403,3.3320532683223605e7,3.49623104000645e7,2.4954716856886888e8,17840.754975023036,1.404385789937261e11],[1.0000670804604945,9.265063218145748e8,1.0000556203978688,1.0000000001876048,1.000000005330718,1.000002464331576,1.033902154735945,1.0000057978525871],[0.0,1.0000000151252304,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.440892098505605e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.440892098506508e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
