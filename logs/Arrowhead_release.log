>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.38705397668778785 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5877422446685014
 0.0 0.30234349430193275 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7236124223761551
 0.0 0.0 0.8629402094039855 0.0 0.0 0.0 0.0 0.0 0.0 0.787721545108452
 0.0 0.0 0.0 0.3097958896101285 0.0 0.0 0.0 0.0 0.0 0.2706800620931191
 0.0 0.0 0.0 0.0 0.42186453192007467 0.0 0.0 0.0 0.0 0.7441011696591833
 0.0 0.0 0.0 0.0 0.0 0.7284951858223601 0.0 0.0 0.0 0.33272664226144233
 0.0 0.0 0.0 0.0 0.0 0.0 0.344348968510797 0.0 0.0 0.02395606387229443
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5727985797178341 0.0 0.11679642796474599
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9915202501618121 0.8361518772911922
 0.5877422446685014 0.7236124223761551 0.787721545108452 0.2706800620931191 0.7441011696591833 0.33272664226144233 0.02395606387229443 0.11679642796474599 0.8361518772911922 0.8020274992938212]
(U,Lambda) = eig(full(A)) => ([-1.0236763668200255,0.30875487108148514,0.3399348415761363,0.3445442304645354,0.40158708578278146,0.5690899451564988,0.6403463850963247,0.753045965348144,0.9330668818108256,2.456494745933838],
[-0.2830988409605521 0.02646449667937252 0.4633738366753476 -0.11035621673919001 -0.7320926860590219 0.09951216261917818 -0.3029299131715769 -0.09971814097103104 -0.058434757890171274 -0.20315914259830437
 -0.3708097771256864 -0.39791310863642854 -0.7150888961934254 0.13686247686560787 -0.13199006294091709 0.08360915419780537 -0.27948790983501415 -0.09969535402514099 -0.06228082085845979 -0.24028811195021754
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [12762.386747275163 0.0 0.0 0.0 0.0 0.0 0.0 0.0 16.6285667559562
 0.0 798.8976859015642 0.0 0.0 0.0 0.0 0.0 0.0 1.6616564209587703
 0.0 0.0 0.3351360186796948 0.0 0.0 0.0 0.0 0.0 0.0001281428977881609
 0.0 0.0 0.0 0.16956066432667385 0.0 0.0 0.0 0.0 0.10890054230857554
 0.0 0.0 0.0 0.0 0.0297885845474696 0.0 0.0 0.0 5595.495138545126
 0.0 0.0 0.0 0.0 0.0 0.010667082547054422 0.0 0.0 0.0004282089079601517
 0.0 0.0 0.0 0.0 0.0 0.0 0.0014910806021674492 0.0 409.84547880765695
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0002811329797017467 0.002241814750823718]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999997479533923 0.0007099951774259088 3.5246428182859164e-9 4.631273929785665e-20 9.842981671205947e-18 1.1218504458842206e-21 1.173434228369735e-15 2.0143116515125995e-21
 -2.1110637106148896e-7 -0.00030229918080320825 0.9999999543075793 1.1810504062725442e-18 2.5101205762899294e-16 2.860901153678679e-20 2.992448190813236e-14 5.136822423880268e-20
 -1.6216216509496993e-11 -2.283989097365915e-8 -6.90448525085182e-12 0.9999999999999997 1.478441203306858e-13 1.2549790651002286e-17 1.3114354726364379e-11 2.2510662841417393e-17
 -1.3781136540948646e-8 -1.9410178399499897e-5 -5.867684457820741e-9 -5.91171313801184e-13 0.9999999998116217 4.178746088913355e-14 4.3546424840857866e-8 7.473373134752163e-14
 -0.0007080982414836048 -0.9973279882188694 -0.0003014915970927931 -2.2779834079956042e-8 -1.9361506768224528e-5 7.94842538438692e-8 0.0730499229302114 1.2442656744473917e-7
 -5.4188944357048667e-11 -7.632295590088602e-8 -2.3072379511951026e-11 -1.731263377294953e-15 -1.4416616633001848e-12 -0.9999999999999959 4.606696749548798e-8 7.430222155311802e-14
 -5.186509069107833e-5 -0.07304990116649875 -2.208293720861732e-5 -1.6553734546905096e-9 -1.3744823770830207e-6 -4.03685019956645e-8 -0.9973282853433089 3.7711444372485486e-6
 -2.836969818535802e-10 -3.9957582662053987e-7 -1.207915103020066e-10 -9.054558294021993e-15 -7.517723666881237e-12 -2.1664772042396487e-13 -3.7519796642474176e-6 -0.9999999999928814],

[12762.40017531162,5610.479102040754,798.8976501381413,0.33513601867969467,0.16956066429571318,0.010667082547054643,0.0026356530947702766,0.0002811329797804139],
[-0.9999986957976151 0.0016150551277722012 5.630615484373067e-8 1.763645377699257e-15 7.408554298607277e-13 1.3422122871760099e-15 5.682015389149783e-9 9.144222192012403e-14
 -1.321478632572203e-8 -4.304554238617095e-5 0.9999999990735405 2.8153895251886425e-15 1.1826619859395206e-12 2.1426358155427367e-15 9.070465075865329e-9 1.4597346602773479e-13
 -4.2583198805769005e-16 -1.3643166632964003e-12 -2.896418205264514e-15 1.0 2.9221335077112235e-13 3.9428652168833887e-16 1.6675535332278137e-9 2.6834752466274534e-14
 -1.8309554903161437e-13 -5.866170578768071e-10 -1.2453766443740898e-12 -2.9910064902574636e-13 0.9999999999942152 6.642406297720845e-13 2.801491873008045e-6 4.5074402671627683e-11
 -1.6527646872531855e-9 -5.295267758471681e-6 -1.1241750340356311e-8 -2.0247868794928007e-9 -3.4014485831796937e-6 2.2196541607099504e-7 0.8256222375055793 1.3184121361976425e-5
 -4.529225965759713e-17 -1.451111849848633e-13 -3.0806821971299063e-16 -5.5104579415403803e-17 -9.069511511542034e-14 -0.9999999999999754 1.8644340787560042e-7 2.81926343666868e-12
 -6.05959926007681e-12 -1.9414258325994993e-8 -4.121609233042235e-11 -7.365055112118529e-12 -1.2086907178632186e-8 -5.642844704610774e-9 -0.564223289938673 2.000149652575462e-5
 -6.249339994460873e-18 -2.0022165792179956e-14 -4.2506668041901764e-17 -7.595527819152304e-18 -1.2464447835370368e-14 -5.709791681062559e-15 -4.002063947198531e-7 -0.9999999997130595
 -0.0016150551287135385 -0.9999986948571359 -4.304550752975502e-5 -1.3535937708918152e-12 -5.686048386969784e-10 -1.0301448439467745e-12 -4.360933745196112e-6 -7.018169504938051e-11],

[1,2,2,3,4,6,7,8],[1.0000000001679212,1.0000180028056695,1.0000180028056695,1.0000176046543308,1.000017199277366,15.199653406511358,703.7639215123462,7011.467128871413],[1.0,159.8653438781391,159.8653438781391,4.941639646075944e9,1.1492951329528263e7,4.6460659044434685e10,347268.54747082887,3.367248757736524e11],[1.0016124636990473,5.397120793716133e8,1.0000431112450199,1.0000000020338093,1.000003414094843,1.0000002276099154,2.585287814212624,1.0000331851623556],[0.0,1.0000397870374995,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 1.5932327825233655e-14
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 4.4408920985019475e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
