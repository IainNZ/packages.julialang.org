>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.5541462387595721 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3562132242498359
 0.0 0.9656434395471254 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8330361128926265
 0.0 0.0 0.693610690367882 0.0 0.0 0.0 0.0 0.0 0.0 0.8429736014709284
 0.0 0.0 0.0 0.7388285903217595 0.0 0.0 0.0 0.0 0.0 0.8381442809419872
 0.0 0.0 0.0 0.0 0.7563560372734979 0.0 0.0 0.0 0.0 0.9509508482555877
 0.0 0.0 0.0 0.0 0.0 0.4830369548955826 0.0 0.0 0.0 0.7133686289091379
 0.0 0.0 0.0 0.0 0.0 0.0 0.9921791951949253 0.0 0.0 0.7802047973754733
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6848276826338258 0.0 0.4043994870866563
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5580312743487106 0.6207942849157118
 0.3562132242498359 0.8330361128926265 0.8429736014709284 0.8381442809419872 0.9509508482555877 0.7133686289091379 0.7802047973754733 0.4043994870866563 0.6207942849157118 0.4868867204961671]
(U,Lambda) = eig(full(A)) => ([-1.5818527943454739,0.5044493848799934,0.5550517300104922,0.5874194454706942,0.6861885470424625,0.7116054808593191,0.7471872270332778,0.8999494884451309,0.9813054932266703,2.8222428212164936],
[-0.12114320564283845 0.19477171857914768 -0.8832710864707516 0.38841683980617336 -0.008459243865114274 -0.03635249492290544 0.012688839534617876 -0.05655257750129677 0.009309798650296517 -0.10730289843471773
 -0.23754196963957624 0.04908229741634025 0.0045553514308177 -0.07990931770970203 0.009347311719064128 0.052693561776473524 -0.02622169902480766 0.6961613071608608 0.5937931598881234 -0.3065551287288203
... truncated ...
 2.0e-7 2.00000010000001 9.999999999999998e-15 2.0e-7
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [5142.207588880161 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1014.8037276596933
 0.0 2895.6239210723966 0.0 0.0 0.0 0.0 0.0 0.0 35.03366177380657
 0.0 0.0 59.89679100588658 0.0 0.0 0.0 0.0 0.0 4797.142897042456
 0.0 0.0 0.0 11.254984641631415 0.0 0.0 0.0 0.0 0.6918891227683668
 0.0 0.0 0.0 0.0 0.2081588370415452 0.0 0.0 0.0 39.77383633491699
 0.0 0.0 0.0 0.0 0.0 0.027853372198042802 0.0 0.0 8.92168312432207
 0.0 0.0 0.0 0.0 0.0 0.0 0.008121242037463474 0.0 106.01475921344434
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.002563900556014001 0.0695579722963566]
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.8411015155575984 0.540876034322791 0.0011644833625580925 4.054955970898791e-9 6.788654398659503e-7 4.873183428416071e-9 2.1455644161214285e-11 1.4093161071120978e-14
 -0.005438209271295998 -0.010609615321849411 0.9999289284457364 4.4147793372759337e-10 7.390982068538785e-8 5.305558866385947e-10 2.335930597344429e-12 1.5343583212848448e-15
 -0.5406984434290876 -0.8407998404854812 -0.011861838946871586 0.00014644968632378211 0.023665756132221816 0.00016978919502281476 7.475398543507881e-7 4.910221875138502e-10
 -7.797580191212845e-5 -0.00012124697951887535 -1.7101198601275153e-6 -0.9999999847883562 9.817752554932874e-5 6.937558234101945e-7 3.053571167440796e-9 2.0057291384405145e-12
 -0.004482486930831367 -0.006969941675574267 -9.830621387329508e-5 -3.318617630254488e-5 -0.3567927068426354 0.9341466736155049 0.0005224704768673169 3.371314279133719e-7
 -0.0010054682081314984 -0.0015634300490373614 -2.2051101067857763e-5 -7.441502095765765e-6 -0.0783416466864864 -0.030496018936620174 0.9964582898364912 4.259046208994321e-6
 -0.011947798245464075 -0.018577958651993864 -0.00026202927601510947 -8.842553820966853e-5 -0.9305918011161192 -0.3555838887136622 -0.0840868661028628 0.0006556086634078783
 -7.839140752898524e-6 -1.2189294611636629e-5 -1.7192158202301422e-7 -5.80173770092439e-8 -0.0006105581132369751 -0.0002329388817407963 -5.08839507885257e-5 -0.9999997850794905],

[5532.050618902236,4460.892463896151,2895.498553897171,11.254987889233139,1.4195839257256526,0.19473995422486015,0.02776337254865916,0.002563905537294343],
[-0.7818291794982076 0.6234843970905483 0.0020680428853992673 1.852638631986249e-6 0.0024590775884720745 0.00012867888825048918 3.973918371651026e-6 2.82654562569046e-8
 -0.00284650483854162 -0.00688684073152734 0.9999722226359603 1.1358111426758137e-7 0.0001507589941675212 7.888932309404689e-6 2.4362949795744924e-7 1.732873771666894e-9
 -0.005854267051104252 -0.011289492569241643 -0.00024537608122441663 0.0007793758945760088 0.9985340234980331 0.052222606140681686 0.001612744933856477 1.1471036244107114e-5
 -1.5864215883007428e-7 -3.0591028664637846e-7 -6.647343247738188e-9 -0.9999996962405846 0.0007783876121633539 4.009557858120989e-5 1.2378862305521478e-6 8.80471231098597e-9
 -1.6866607535867742e-7 -3.2523871964574534e-7 -7.067282809131475e-9 -6.137719500881762e-7 -0.0523178331167024 0.9985156152471156 0.003917277941022142 2.737108873311292e-5
 -5.06244106637317e-9 -9.761902895863151e-9 -2.1212150998764186e-10 -1.8415917424856676e-8 -0.0015371257762381697 -0.004361801199868045 0.9996884772553118 4.6268787029092144e-5
 -1.753978190919911e-8 -3.382195378972561e-8 -7.349349798693077e-10 -6.380506182336038e-8 -0.005323786158736516 -0.014828918063376429 -0.024596788109811685 0.002076658659980129
 -3.633151379048097e-12 -7.0058042163379e-12 -1.5223279567739227e-13 -1.3216432273087903e-11 -1.1027247192919183e-6 -3.0668186751389592e-6 -4.699046900380651e-6 -0.9999978422312853
 -0.623458706774237 -0.7817239444757355 -0.007156601546837148 -9.387634805344922e-6 -0.012460622806876596 -0.0006520409185599858 -2.0136616225114168e-5 -1.4322655672794286e-7],

[1,1,2,4,5,5,6,8],[1.0031003332487065,1.0031003332487065,1.2127880132585185,59.00106481027897,3805.029270141919,3805.029270141919,3901.546573804347,38641.376016598566],[1.0,1.0,51.44035655797939,670116.4035355385,630288.4134501785,630288.4134501785,2.0999409474415593e7,2.926062302365406e10],[1.1745974554697143,1.8468050850491475,1.0094148029166958,1.0007908184605208,389.16411690676597,1.0669959651128338,1.02937436398387,1.002157639822205],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,1,1,1,1])
N1 = norm(Ua' * Ua - eye(8)) => 6.661348953747917e-16
N2 = norm(Va' * Va - eye(8)) => 4.441163574029213e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
