>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.9759560967724124 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4450796184480037
 0.0 0.6285368757218961 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.13337901193721224
 0.0 0.0 0.05019981415833197 0.0 0.0 0.0 0.0 0.0 0.0 0.9840768151307202
 0.0 0.0 0.0 0.44693795621558574 0.0 0.0 0.0 0.0 0.0 0.4061577606958542
 0.0 0.0 0.0 0.0 0.6246244555646605 0.0 0.0 0.0 0.0 0.29141649785405654
 0.0 0.0 0.0 0.0 0.0 0.8255177673384007 0.0 0.0 0.0 0.6462814346495649
 0.0 0.0 0.0 0.0 0.0 0.0 0.3067804077977925 0.0 0.0 0.6948707504243292
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9131296245153844 0.0 0.07868046901747983
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8607724013495055 0.2868075888056354
 0.4450796184480037 0.13337901193721224 0.9840768151307202 0.4061577606958542 0.29141649785405654 0.6462814346495649 0.6948707504243292 0.07868046901747983 0.2868075888056354 0.2183406943675712]
(U,Lambda) = eig(full(A)) => ([-1.2854948308030416,0.19994966707981376,0.41356948326732557,0.5759198107099319,0.6278723797409305,0.6946452045274816,0.8551552089003764,0.9119582175726184,0.9451233801313795,1.912097572674731],
[-0.1402955881899289 -0.060005854748131554 -0.05532253973690285 0.13082854315167003 0.00581404216487594 0.20320680727261198 0.06612087984889498 -0.1019568283809436 0.894814250776051 -0.31583735627477033
 -0.049674310022518604 -0.03255888544116308 -0.0433724828837849 0.298074662803098 0.9126816423603852 -0.25913042712792067 -0.010562421594083882 0.006899206411915705 -0.026115724283427386 -0.06903007755238741
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [933.7382642843431 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.004641905183853234
 0.0 447.9067689975268 0.0 0.0 0.0 0.0 0.0 0.0 18.275290503124143
 0.0 0.0 55.60046133995232 0.0 0.0 0.0 0.0 0.0 25.99482997822993
 0.0 0.0 0.0 49.40261929327579 0.0 0.0 0.0 0.0 0.029862263017794356
 0.0 0.0 0.0 0.0 18.29773562707703 0.0 0.0 0.0 0.1245934845731363
 0.0 0.0 0.0 0.0 0.0 0.009652138074839467 0.0 0.0 73.05737822409276
 0.0 0.0 0.0 0.0 0.0 0.0 0.0013379536008202395 0.0 0.011391305714317266
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0002336009571221402 1.4451813083432619]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999999999056 1.3034996456450664e-7 4.026414730513449e-7 1.0146980929541942e-7 1.0788988631946428e-9 4.5139423847697976e-11 1.0601146028241724e-18 1.3414585606532088e-16
 -1.273221439092939e-7 -0.9999734741869846 0.007069489616222324 0.0017529663751749678 1.8634688184300424e-5 7.733172006945422e-7 1.8138271658940848e-14 2.295199002764479e-12
 -1.399268631229067e-7 -0.002474990855315919 -0.5561697182459077 0.8310258494002707 0.008071565390982137 7.992003385641306e-5 1.674314566774144e-12 2.118661134948971e-10
 -1.6062444081998521e-10 -2.833892105981083e-6 -0.0005389323892751789 -0.010072971404226317 0.9999491211011309 1.2018388123453964e-7 2.4362936314995387e-15 3.0828619257432257e-13
 -6.68549587151299e-10 -1.1699666510670919e-5 -0.0014927204665280095 -0.0010951022400463976 -1.195623410711077e-5 0.9999982861269607 7.409817335252529e-14 9.376309712502019e-12
 -3.918641824803213e-7 -0.006848856961511954 -0.8308745947934504 -0.5560299573054253 -0.006048986042808285 -0.001849328786680554 0.00015920253783757813 0.019777559742247007
 -6.110053233725881e-11 -1.067892460737274e-6 -0.000129552231664713 -8.669770462845827e-5 -9.431743702074211e-7 -2.883523107199906e-7 -0.999999973582021 0.0001689188319334609
 -7.751644058895843e-9 -0.00013548036215244074 -0.016435908955673425 -0.010999081690938087 -0.00011965774631522122 -3.658240573652412e-5 -0.00016580262230812164 -0.9998043906670295],

[933.7382642959674,448.2909588981167,81.23640466188931,49.969570361861656,49.402558215604444,18.29770677265841,0.001337954448455857,0.0003016443188630055],
[-0.9999999999874565 2.715039133538488e-7 4.6279959304037245e-6 1.8960788120179945e-6 2.039184180424716e-8 2.303480310293616e-9 7.398380193929204e-13 4.1524773042470824e-10
 -6.107541297265893e-8 -0.9991164867728625 0.03897848834697634 0.015712872846014886 0.00016895082516739 1.892991362671077e-5 6.072145926441567e-9 3.4081038668640565e-6
 -8.332097377793595e-9 -0.00030696722884166643 -0.38065806883611264 0.9246711604177852 0.009084200812346708 0.00024284959901975627 6.957834958303979e-8 3.9052131653004557e-5
 -8.498385899402097e-12 -3.123009510923937e-7 -0.00032774310683726866 -0.009958684211838934 0.9999503573643121 3.244886697326612e-7 8.9957686453759e-11 5.0490410237229334e-8
 -1.3101041337863054e-11 -4.775412050767608e-7 -0.00033622123696065335 -0.00040100187229711264 -4.42835388873146e-6 0.9999998630660561 1.013359451824839e-9 5.687666750152669e-7
 -4.050735993705903e-12 -1.4746251677666075e-7 -9.872071942623762e-5 -0.00010740292307486455 -1.1818345164060855e-6 -9.75530814685948e-7 0.0011485031339046048 0.6328504317107713
 -8.755095552853629e-17 -3.187194688565967e-12 -2.133709333537477e-9 -2.321362886462362e-9 -2.5543688229930283e-11 -2.108471937090705e-11 -0.9999993400510393 0.0007492452046954192
 -1.939292348475775e-15 -7.059777058153223e-11 -4.726260448376144e-8 -5.141921357060114e-8 -5.658039801162537e-10 -4.670358477190164e-10 -2.894840800390358e-5 -0.7742736991536298
 -5.008372739950989e-6 -0.04202560682907718 -0.9238938693641606 -0.38031171818106363 -0.004090420173597683 -0.0004631765780748976 -1.4882145169209368e-7 -8.352878391472949e-5],

[1,2,3,4,4,5,7,8],[1.0002362458737917,1.000108879577244,1.2324506016575445,20.67752453201776,20.67752453201776,1.443859334973505,124.99539040971311,12215.877442503906],[1888.5587227884605,1.0,5.663521305762673,5548.546412487289,5548.546412487289,3590.535577650845,5.370779899639454e8,2.4246829649770476e7],[1.000005077780815,1.0406023843270225,7.436854072419553,9459.434144642724,1.0132506565062622,1.0007259852234995,1.0011763580052464,1.1503423229604806],[0.0,0.0,0.0,40.44395690644067,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm(Ua' * Ua - eye(8)) => 6.661338147751066e-16
N2 = norm(Va' * Va - eye(8)) => 6.661338147751342e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
