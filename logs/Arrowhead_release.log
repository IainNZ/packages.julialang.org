>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.5316045238859157 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5577928578356326
 0.0 0.34833874139955046 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.34143784130262134
 0.0 0.0 0.44277790288244523 0.0 0.0 0.0 0.0 0.0 0.0 0.2637840482510805
 0.0 0.0 0.0 0.07128716407510649 0.0 0.0 0.0 0.0 0.0 0.9838428419929313
 0.0 0.0 0.0 0.0 0.919475077397395 0.0 0.0 0.0 0.0 0.6569998992992359
 0.0 0.0 0.0 0.0 0.0 0.45544625993880716 0.0 0.0 0.0 0.26808874091174695
 0.0 0.0 0.0 0.0 0.0 0.0 0.11954155603905936 0.0 0.0 0.11820133429993906
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5506204614372261 0.0 0.023759254502573546
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5218410221950835 0.16634759324334025
 0.5577928578356326 0.34143784130262134 0.2637840482510805 0.9838428419929313 0.6569998992992359 0.26808874091174695 0.11820133429993906 0.023759254502573546 0.16634759324334025 0.7771971093010965]
(U,Lambda) = eig(full(A)) => ([-0.9023017452799187,0.11879575564196632,0.2901691226747767,0.3946547555120399,0.4487384378935606,0.48226666762287307,0.5227300062405598,0.5505928350288796,0.7902755797141003,2.042208403502856],
[-0.2469256668217995 0.008452539055850123 0.278721930026656 0.3516276044758613 0.1117566203067498 0.6465753870668244 0.31825091920363896 0.03413562154420206 0.36130667162105734 0.2721905777352433
 -0.1732978671744324 0.009304879985282975 0.7081325807889374 -0.6364316795355255 -0.05646201704775309 -0.1458031821639496 -0.009913531690790539 0.001961713301067841 0.12945007765116462 0.1485875412618886
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [4855.137061893204 0.0 0.0 0.0 0.0 0.0 0.0 0.0 9587.257239594353
 0.0 36.69680913963363 0.0 0.0 0.0 0.0 0.0 0.0 2083.709758743216
 0.0 0.0 2.952113034159101 0.0 0.0 0.0 0.0 0.0 377.63668224227956
 0.0 0.0 0.0 1.9361453250159966 0.0 0.0 0.0 0.0 0.0024562673841751884
 0.0 0.0 0.0 0.0 0.14922615039214532 0.0 0.0 0.0 7138.959376063165
 0.0 0.0 0.0 0.0 0.0 0.02134101572193023 0.0 0.0 0.0006539662074125589
 0.0 0.0 0.0 0.0 0.0 0.0 0.0029267397448413026 0.0 2.0716091896656836
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.6005943957970035e-5 954.7634121244954]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.8306454055242454 0.5568017689473773 1.9455912547841622e-5 2.5645855018626685e-8 7.19332541974091e-14 7.941735829830881e-16 1.652173586181041e-10 8.089255059490699e-15
 -0.1545441796701708 -0.23058494292510498 0.9607011350999678 9.820152004926558e-5 2.744286757295858e-10 3.0213762579453194e-12 6.285575240129193e-7 3.0774978663343636e-11
 -0.02800825505086463 -0.04178267836379434 -0.014636222937233769 0.9986268202416813 1.344863989299942e-8 8.461647929381966e-11 1.7603214984341118e-5 8.618382680223055e-10
 -1.821744669345549e-7 -2.717674741346234e-7 -9.48170447970833e-8 -3.1337001215810404e-8 0.9999999999999415 1.2796068340438253e-15 2.6620080075663686e-10 1.3032203962972043e-14
 -0.5294765942755552 -0.7898716886780444 -0.2747524890643862 -0.051927648352151336 -3.388323131461902e-7 6.390626815813463e-7 0.13255881935044064 6.37865723374313e-6
 -4.850283941760169e-8 -7.235639873938711e-8 -2.5168330623667633e-8 -4.744906200448747e-9 -3.085818787901017e-14 -0.9999999999914175 4.142069472926475e-6 2.9106376843943956e-11
 -0.00015364544333209044 -0.0002292078380386587 -7.972724839842193e-5 -1.502995990809756e-5 -9.773973683911064e-11 -9.052064022552874e-9 -0.0021987282441234515 0.9999975414312875
 -0.070812124441673 -0.10563732707063044 -0.03674470048473938 -0.0069270023216220274 -4.5046194971282166e-8 -4.09347045845525e-6 -0.9911727017422854 -0.002217451395955838],

[12795.881267502047,2848.536099723641,35.25487551326285,2.9480716421901207,1.9361453250158844,0.021341015721960146,0.01978137764576593,0.0029267327058171357],
[-0.3151715156887633 0.9490309442827077 0.0026793775529981015 4.223579217103854e-5 1.8038202190920792e-10 1.8067657353112884e-10 4.055091285649426e-5 1.3419210426828197e-8
 -0.00044321122917895174 -0.002970554468948745 0.9999940627142514 0.00122238631751589 5.201395063466322e-9 5.195388510151762e-9 0.0011660489934036478 3.858717661644845e-7
 -6.4617303858314915e-6 -4.33019575956231e-5 -0.0012255832384831845 0.9999957972887706 2.0505643149235155e-8 1.1705038536234917e-8 0.0026270506194749953 8.693120418235826e-7
 -2.7564826143582635e-11 -1.84719907389696e-10 -5.207211069193612e-9 -2.0580567831430983e-8 0.9999999999999994 1.1609123117055259e-13 2.60549818688081e-8 8.621300034475984e-12
 -6.174780168299359e-6 -4.137897757960767e-5 -0.001162966984192416 -0.0026284853297363804 -2.611510668438953e-8 4.468618789007973e-6 0.9999931585365652 0.0003252304051444768
 -8.089320594105217e-14 -5.420886339580965e-13 -1.5235275453812503e-11 -3.4348255440506896e-11 -3.4013204699437013e-16 -0.9999999999900157 4.468645780187697e-6 2.1223654780650967e-10
 -3.514257566267459e-11 -2.3550050479682287e-10 -6.618684741822841e-9 -1.492120489776199e-8 -1.477465398704035e-13 -1.2414139932614314e-9 -0.00032531128293577805 0.9999999465046469
 -2.5459587819732687e-10 -1.7061201890868351e-9 -4.795009503344748e-8 -1.0809889286425945e-7 -1.0703704389295245e-12 -8.82450840010912e-9 -0.00230519009270245 -3.485659775117186e-5
 -0.9490346248595843 -0.3151689055296215 -0.001356807168046877 -2.1388858062067233e-5 -9.134826350340514e-11 -9.149744357824528e-11 -2.053561670242916e-5 -6.795698108061851e-9],

[1,2,2,3,4,6,6,7],[1.0,4.262149106178497,4.262149106178497,4.6946859781924895,4.707941071558163,1945.196890666369,1945.196890666369,331.38738871833124],[1.0,608.737906119936,608.737906119936,41753.09938203145,9.78773678421964e9,3.335227643426356e12,3.335227643426356e12,7.677219200122471e9],[11.088366745436193,78683.15588432334,1.0062285488536222,1.0038990809547192,1.0000000520950927,1.0000044958374597,5.022556275920374e10,1.0003612554839876],[0.0,7.689932064895036,0.0,0.0,0.0,0.0,3895.10880125787,0.0],[0,0,0,0,0,1,3,0])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 8.892573485973237e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 3.7905599489240837e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
