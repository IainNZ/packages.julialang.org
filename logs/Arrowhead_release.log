>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.4
Commit 3392026* (2014-12-26 10:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.686689391688245 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.23766995943619396
 0.0 0.7204480058244391 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.26912464659945035
 0.0 0.0 0.4189468630398283 0.0 0.0 0.0 0.0 0.0 0.0 0.3685121002894418
 0.0 0.0 0.0 0.12028071188132095 0.0 0.0 0.0 0.0 0.0 0.36969850868817833
 0.0 0.0 0.0 0.0 0.6414958682066774 0.0 0.0 0.0 0.0 0.06476651890021978
 0.0 0.0 0.0 0.0 0.0 0.680728345922494 0.0 0.0 0.0 0.3301923359344394
 0.0 0.0 0.0 0.0 0.0 0.0 0.36961105263849214 0.0 0.0 0.7629995197177557
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.41656308955953714 0.0 0.9855120732720783
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7831007355927784 0.2665469347493632
 0.23766995943619396 0.26912464659945035 0.3685121002894418 0.36969850868817833 0.06476651890021978 0.3301923359344394 0.7629995197177557 0.9855120732720783 0.2665469347493632 0.9157719511069]
(U,Lambda) = eig(full(A)) => ([-0.8193190984210181,0.14178370815934915,0.3859093604713435,0.41866080858038246,0.6397507326229788,0.654427411355369,0.684829709718362,0.7134438589974219,0.7742996752829401,2.1598498486935926],
[-0.10134981613892888 -0.024253457069073208 -0.013640771202387224 0.0006466185993272818 -0.13011982847772063 0.4355010036408239 0.8444596300003876 -0.21599382382394788 -0.08684416478123011 -0.12269431246772279
 -0.11224694475099778 -0.02586112904742241 -0.013887395727890314 0.0006502908927672134 -0.0857026954592541 0.24097940751977387 0.049925636870146034 0.9342467169735712 -0.15998370046894678 -0.14219083688488537
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [297.80779458390964 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.02173782757447904
 0.0 87.01027956529231 0.0 0.0 0.0 0.0 0.0 0.0 0.007800835694055691
 0.0 0.0 9.320286028950143 0.0 0.0 0.0 0.0 0.0 2523.989577317529
 0.0 0.0 0.0 3.40605986727901 0.0 0.0 0.0 0.0 0.01076285823013652
 0.0 0.0 0.0 0.0 0.43326196213931534 0.0 0.0 0.0 113.23032375603563
 0.0 0.0 0.0 0.0 0.0 0.007429339087926106 0.0 0.0 0.059741394705097574
 0.0 0.0 0.0 0.0 0.0 0.0 0.0010208147379845748 0.0 727.216361651358
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 6.5226252116936e-5 0.00027964065236971245]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-8.375518630617668e-6 0.9999999999649256 2.2678353149392214e-12 6.955379815269921e-14 2.1763774987715015e-9 9.739370050937381e-12 1.4994122072221742e-18 1.345036428232571e-22
 -2.9703269459678677e-6 -2.714588392009838e-11 0.9999999999955884 2.9281008572943276e-13 9.156885095211324e-9 4.0944583832058315e-11 6.303431373728968e-18 5.654445604191615e-22
 -0.9600198431700524 -8.041273326186736e-6 -2.8541361393087798e-6 9.51493718344186e-6 0.2799295659940895 0.0011569955776986479 1.7774867633568402e-10 1.5944801025492652e-14
 -4.093695573626667e-6 -3.426069094325929e-11 -1.2049494410264779e-11 -0.9999999997925999 1.9950964602209604e-5 3.7455907724748966e-8 5.675474215435242e-15 5.091117185249586e-19
 -0.04306752907713471 -3.603921752704248e-7 -1.265752262488963e-7 -2.814899304971575e-6 -0.15178170591161982 0.9874753169986981 3.6911896938887142e-9 3.3101803975847844e-13
 -2.2722836943061717e-5 -1.9014593370920006e-10 -6.678063669649844e-11 -1.4611435605770703e-9 -7.787513229971462e-5 -1.2964706907395423e-5 0.9999999966255264 5.940164892683001e-13
 -0.2765991468657655 -2.314596682801835e-6 -8.129032062197939e-7 -1.7786035115155113e-5 -0.9479460666990545 -0.1577693237339423 -8.215197601489463e-5 3.8453559264378795e-7
 -1.0636224644175331e-7 -8.900450546438759e-13 -3.125903030473272e-13 -6.839364843838233e-12 -3.6451904837781627e-7 -6.066759352015509e-8 -3.099634229525956e-11 -0.9999999999999263],

[2629.11928112513,297.80779457360734,87.01027956491293,3.4060598677273064,2.609867540929129,0.4279714026066869,0.007429339063329669,6.522625211811236e-5],
[-9.487187400692079e-7 0.9999999999995194 7.762060264588595e-12 6.081414900851686e-12 2.483429419028844e-7 6.7772292677504294e-9 6.010449096462422e-14 6.141121393907758e-16
 -9.830249233058076e-8 -7.931192507289929e-12 0.9999999999999486 7.480046860084995e-12 3.05281061044941e-7 8.324387246934888e-9 7.382397295015669e-14 7.542896867913569e-16
 -0.003403291587433645 -2.5166220899064985e-7 -3.057266947875475e-7 2.603651713155131e-5 0.9996766433962243 0.025196846454462886 2.2299002516831879e-7 2.27837874178612e-9
 -5.303438418442718e-9 -3.9184321758322e-13 -4.716833406010065e-13 -0.9999999996609825 2.6037405645842916e-5 2.9809717031728595e-7 2.6019817897915492e-12 2.6585384505754625e-14
 -7.097252029001161e-6 -5.243120692018257e-10 -6.302730109252402e-10 -3.580644038738962e-7 -0.025197156058237927 0.9996824339223116 2.152616909485745e-7 2.198769985274738e-9
 -6.420996639506413e-11 -4.743524660724781e-15 -5.702038851119335e-15 -3.1870640532545816e-12 -2.2168204144403262e-7 -2.2505990634878332e-7 0.9999999999362431 6.765910625375567e-11
 -1.0739584455586171e-7 -7.933890413033929e-12 -9.537075131967598e-12 -5.330571828138849e-9 -0.0003707764093485007 -0.0003763177863953648 -1.1287941922652621e-5 6.018122880026847e-6
 -2.6387584435364735e-15 -1.949388303041363e-19 -2.343297138893039e-19 -1.3097424970441447e-16 -9.110121865591904e-12 -9.246224692050486e-12 -2.721339300870905e-13 -0.9999999999818912
 -0.9999942087607702 -9.478677457960843e-7 -9.726257404611663e-8 -8.330436189943091e-8 -0.0034020319426220067 -9.284771104799736e-5 -8.234303003046337e-10 -8.413323789258534e-12],

[1,1,2,4,4,5,6,8],[1.0,1.0,1.0000000001480633,32.415640180040796,32.415640180040796,25.188921535881764,24.68536689408188,6377.618246775943],[3633.8299304450034,3633.8299304450034,34658.12813829883,641707.1833408329,641707.1833408329,479.51642356287726,5.3001878193445556e7,1.289715936669141e12],[1.1120204692794824e12,1.0000012000695668,1.0000004036372157,1.0000264825551903,1.5684996881080415e9,1.0250314211490523,1.0000117268924884,1.0000060226399112],[1.0,0.0,0.0,0.0,65.82417416285209,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm(Ua' * Ua - eye(8)) => 9.69035332532684e-16
N2 = norm(Va' * Va - eye(8)) => 4.440892131691828e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
