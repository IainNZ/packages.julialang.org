>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from git://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from git://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] => [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) => [0.3899936056950466 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.24600364738139469
 0.0 0.9912187996756101 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7345403195094886
 0.0 0.0 0.09724605526683816 0.0 0.0 0.0 0.0 0.0 0.0 0.752507592124952
 0.0 0.0 0.0 0.3925733982234114 0.0 0.0 0.0 0.0 0.0 0.007034613504881104
 0.0 0.0 0.0 0.0 0.6810428163183848 0.0 0.0 0.0 0.0 0.5293116749855287
 0.0 0.0 0.0 0.0 0.0 0.13976463435620312 0.0 0.0 0.0 0.8476325214951688
 0.0 0.0 0.0 0.0 0.0 0.0 0.49430926535774433 0.0 0.0 0.02509271267858537
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.22304758159258187 0.0 0.42575129313856275
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4471985141792174 0.1581252789162637
 0.24600364738139469 0.7345403195094886 0.752507592124952 0.007034613504881104 0.5293116749855287 0.8476325214951688 0.02509271267858537 0.42575129313856275 0.1581252789162637 0.3782502311692768]
(U,Lambda) = eig(full(A)) => ([-1.1858069684171282,0.115020310025155,0.2098380405133644,0.37534229538241126,0.39257156222547573,0.44069375001352307,0.4940613608757083,0.568499433697117,0.8403862247065235,1.9840388928121726],
[-0.1084430235176492 0.016374888312896647 -0.03885203929884991 0.93791663468243 0.024897898007220805 0.19196084199325666 0.02330863167347802 -0.22405929694435853 -0.08725970471733174 0.10462261706921981
 -0.23437613912856917 0.015344066022121409 -0.026746864787486134 0.06662253635450269 -0.0003201410640998981 -0.05278601177642861 -0.014568442260809103 0.28251227183343736 0.7780078013184766 0.5015679417890054
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) => (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) => [21029.39651928994 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5037253247907989
 0.0 5204.371994476694 0.0 0.0 0.0 0.0 0.0 0.0 0.002510927225249476
 0.0 0.0 43.13668397357574 0.0 0.0 0.0 0.0 0.0 0.00016800081257679921
 0.0 0.0 0.0 0.5756145497806177 0.0 0.0 0.0 0.0 374.25940576571924
 0.0 0.0 0.0 0.0 0.0024660685779706545 0.0 0.0 0.0 5.70913848215081
 0.0 0.0 0.0 0.0 0.0 0.00029417966099726033 0.0 0.0 0.006114455391441685
 0.0 0.0 0.0 0.0 0.0 0.0 0.00010437221572369292 0.0 3.879627864579313
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.625532092737659e-5 0.0005647888671554104]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) => (
[-0.9999999999999092 3.0624947042394675e-12 4.265052334845165e-7 2.575025213899456e-15 1.858282472455674e-14 4.562207018737925e-16 3.6065878316075026e-20 3.729015924191766e-22
 -3.047617513970609e-12 -0.9999999999999994 3.488161246601517e-8 2.0958818323429355e-16 1.5124082165460745e-15 3.7130627248385046e-17 2.9353088946633782e-21 3.034949964255479e-23
 -1.9142162499248975e-13 -1.5656374156003785e-14 -4.5485174618236816e-7 0.9999999999998965 1.4729549389501933e-12 3.616202081720716e-14 2.858737088995545e-18 2.955778876098255e-20
 -4.264327126359864e-7 -3.487568136731624e-8 -0.9998299657302895 -4.5477443296772267e-7 0.01843461252986943 0.00045242485657808715 3.5765611798452474e-8 3.6979690551799386e-10
 -6.505015960662525e-9 -5.320109236596722e-10 -0.015251865811178452 -6.9361193623658746e-9 -0.8405006537483574 0.541595818603245 3.0153738220005417e-5 3.074448116041271e-7
 -6.966835720737729e-12 -5.697807244729054e-13 -1.633466300148012e-5 -7.428545029492303e-12 -0.0008539732094522143 -0.0013814136809673404 0.9999986810787191 2.3716931971573096e-8
 -4.420464008610205e-9 -3.6152642121804063e-10 -0.010364359486164912 -4.713419011751687e-9 -0.5414961501488069 -0.840637758754528 -0.0016238631494380094 0.00014508996495029146
 -6.435227673556632e-13 -5.2630330798139e-14 -1.5088237989075505e-6 -6.861706011465996e-13 -7.88240792771853e-5 -0.00012180162600679379 -2.1188007835179595e-7 -0.9999999894744036],

[21029.396525324817,5204.371994477303,374.32349613056823,43.13668397357134,0.010811933536851103,0.0013635904264394257,0.00029417933193937295,4.6255322926080675e-5],
[-0.9999999997129358 1.2374675665386509e-11 2.3960952932993807e-5 1.2553404963496504e-12 3.614391341282533e-8 7.035870782009293e-9 2.5781677146561388e-12 1.6953498437767734e-13
 -7.542268376786117e-13 -0.9999999999998825 4.849732622100654e-7 2.5286479411957e-14 7.280043795664364e-10 1.4171527816709315e-10 5.1929002985405955e-14 3.4147439904053455e-15
 -3.926548312057099e-16 -1.297685993346107e-16 -5.241668298335712e-8 0.9999999999999987 5.8766909260262745e-9 1.1439722907933074e-9 4.1918797475872584e-13 2.7564935494619602e-14
 -1.1672273790647897e-11 -3.8573241209204195e-12 -0.001537484773278203 -6.068495683275831e-9 0.9814369608908426 0.19098280911869162 6.998182502242326e-5 4.601859111872853e-6
 -7.628281410961536e-16 -2.520910156626937e-16 -1.0048032629843933e-7 -3.965289965975147e-13 -0.19170782403609607 0.97948211157897 0.00025277501938182774 1.6391194383588493e-5
 -9.745887705727079e-20 -3.220713287714309e-20 -1.2837360395361773e-11 -5.0660520401100344e-17 -2.32355802411417e-5 -0.00029802483244553815 0.9999997996394665 1.5083753751848772e-7
 -2.1939460913672524e-17 -7.25031063598553e-18 -2.8898831500296215e-9 -1.1404446067113246e-14 -0.005227293786467421 -0.06434426628479041 -0.0005761322313894863 0.0003273863452501465
 -1.4154639241436787e-21 -4.677668783409883e-22 -1.8644602800190863e-13 -7.357784243780194e-19 -3.372230389082711e-7 -4.131719606694394e-6 -3.3314988370086476e-8 -0.9999999462641536
 -2.396098123526364e-5 -4.849738293275191e-7 -0.9999988177823996 -5.240741469048406e-8 -0.0015089268883446633 -0.0002937317407950621 -1.0763268888109285e-7 -7.077703333360232e-9],

[1,2,3,3,5,6,6,8],[1.0000000000004767,1.0000000001271798,1.0000036699891712,1.0000036699891712,6212.408064143757,16767.90396751416,16767.90396751416,75923.15584859074],[1.0,810.6215379735639,1.4617141678715192e6,1.4617141678715192e6,752393.2114685859,5.889116848131385e9,5.889116848131385e9,4.054831105816861e11],[1.000023960419541,1.0000004849898263,3.640300550255346e14,1.0000000584775963,30.867302355430226,9.16524847906101e6,1.0008986280199175,1.0003484298543004],[0.0,0.0,1.000007342399026,0.0,0.0,32573.893673259623,0.0,0.0],[0,0,0,0,1,3,1,1])
N1 = norm($(Expr(:', :Ua)) * Ua - eye(8)) => 4.677759251989135e-16
N2 = norm($(Expr(:', :Va)) * Va - eye(8)) => 2.220480670767728e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
