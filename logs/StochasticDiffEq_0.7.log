>>> 'Pkg.add("StochasticDiffEq")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing Calculus v0.3.1
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing DataStructures v0.8.1
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffEqBase v3.12.0
[ Info: Installing DiffEqDiffTools v0.4.1
[ Info: Installing DiffEqNoiseProcess v1.0.2
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing Distances v0.6.0
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing IteratorInterfaceExtensions v0.0.2
[ Info: Installing Juno v0.4.0
[ Info: Installing LineSearches v5.1.0
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing Media v0.3.0
[ Info: Installing Missings v0.2.9
[ Info: Installing MuladdMacro v0.0.2
[ Info: Installing NLSolversBase v6.0.0
[ Info: Installing NLsolve v1.1.0
[ Info: Installing NaNMath v0.3.1
[ Info: Installing NamedTuples v4.0.1
[ Info: Installing Parameters v0.8.1
[ Info: Installing RandomNumbers v0.1.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing Requires v0.4.3
[ Info: Installing ResettableStacks v0.3.1
[ Info: Installing Roots v0.5.0
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing StochasticDiffEq v4.4.2
[ Info: Installing TableTraits v0.2.0
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building RandomNumbers
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#871(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1029
└ @ Base deprecated.jl:1029
WARNING: AES-NI will not be compiled.
[ Info: Building SpecialFunctions
[ Info: Package database updated

>>> 'Pkg.test("StochasticDiffEq")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4925
Commit 55d4808a62 (2018-04-21 19:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3514 MHz    3830705 s       2413 s     294461 s    1172511 s         46 s
       #2  3514 MHz     953720 s       4484 s     103950 s    4979741 s          0 s
       
  Memory: 2.939197540283203 GB (519.078125 MB free)
  Uptime: 61591.0 sec
  Load Avg:  1.10205078125  0.98095703125  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.16.1
 - PyPlot                        2.5.0
 - StochasticDiffEq              4.4.2
47 additional packages:
 - BinDeps                       0.8.8
 - Calculus                      0.3.1
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.64.0
 - DataStructures                0.8.1
 - DiffBase                      0.3.2
 - DiffEqBase                    3.12.0
 - DiffEqDiffTools               0.4.1
 - DiffEqNoiseProcess            1.0.2
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - Distances                     0.6.0
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - Juno                          0.4.0
 - LaTeXStrings                  0.3.0
 - LineSearches                  5.1.0
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Media                         0.3.0
 - Missings                      0.2.9
 - MuladdMacro                   0.0.2
 - NLSolversBase                 6.0.0
 - NLsolve                       1.1.0
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.1
 - Nullables                     0.0.5
 - Parameters                    0.8.1
 - RandomNumbers                 0.1.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - ResettableStacks              0.3.1
 - Roots                         0.5.0
 - SHA                           0.5.7
 - SimpleTraits                  0.7.1
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
 - VersionParsing                1.1.0
 - tmpXzAtnQ                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for StochasticDiffEq...
[ Info: Installing ChunkedArrays v0.1.1
[ Info: Installing DiffEqBiological v2.3.0
[ Info: Installing DiffEqDevTools v1.0.2
[ Info: Installing DiffEqJump v4.3.0
[ Info: Installing DiffEqMonteCarlo v0.10.0
[ Info: Installing DiffEqOperators v1.2.0
[ Info: Installing DiffEqPDEBase v0.4.0
[ Info: Installing DiffEqProblemLibrary v2.3.0
[ Info: Installing DistributedArrays v0.4.0
[ Info: Installing Distributions v0.15.0
[ Info: Installing EllipsisNotation v0.3.0
[ Info: Installing PDMats v0.9.0
[ Info: Installing ParameterizedFunctions v3.0.0
[ Info: Installing Primes v0.3.0
[ Info: Installing QuadGK v0.2.1
[ Info: Installing Rmath v0.3.2
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing SpecialMatrices v0.1.3
[ Info: Installing StatsBase v0.22.0
[ Info: Installing StatsFuns v0.6.0
[ Info: Installing SymEngine v0.4.0
[ Info: Installing VectorizedRoutines v0.0.2
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building SymEngine
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope at build.jl:20
└ @ Core build.jl:20
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
Warning: 'conda-forge' already in 'channels' list, moving to the top
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.7/Conda/deps/usr

  added / updated specs: 
    - symengine=0.3.0


The following packages will be UPDATED:

    symengine: 0.2.0-1 conda-forge --> 0.3.0-1 conda-forge

The following packages will be DOWNGRADED:

    mpc:       1.1.0-5 conda-forge --> 1.1.0-4 conda-forge
    mpfr:      4.0.1-0 conda-forge --> 3.1.5-0 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
[ Info: Building SpecialFunctions
[ Info: Building Rmath
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building RandomNumbers
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#871(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1029
└ @ Base deprecated.jl:1029
WARNING: AES-NI will not be compiled.
[ Info: Testing StochasticDiffEq
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:3.
│ Use `mutable struct` instead.
└ @ nothing types.jl:3
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:72.
│ Use `mutable struct` instead.
└ @ nothing types.jl:72
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:107.
│ Use `mutable struct` instead.
└ @ nothing types.jl:107
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:167.
│ Use `mutable struct` instead.
└ @ nothing types.jl:167
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:203.
│ Use `mutable struct` instead.
└ @ nothing types.jl:203
┌ Warning: Deprecated syntax `parametric method syntax isinplace{T, N, inplace}(W::AbstractNoiseProcess{T, N, inplace})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:1.
│ Use `isinplace(W::AbstractNoiseProcess{T, N, inplace}) where {T, N, inplace}` instead.
└ @ nothing types.jl:1
┌ Warning: Deprecated syntax `parametric method syntax NoiseWrapper{T, N, inplace}(source::AbstractNoiseProcess{T, N, inplace},; reset = true)` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:89.
│ Use `NoiseWrapper(source::AbstractNoiseProcess{T, N, inplace},; reset = true) where {T, N, inplace}` instead.
└ @ nothing types.jl:89
WARNING: importing deprecated binding Base.Void into DiffEqNoiseProcess.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:42.
│ Use `1 .-` instead.
└ @ nothing wiener.jl:42
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:81.
│ Use `1 .-` instead.
└ @ nothing wiener.jl:81
WARNING: importing deprecated binding Base.AbstractRNG into DiffEqNoiseProcess.
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:5
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn!{T <: Number}(y::AbstractRNG, x::AbstractArray{<:Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:8.
│ Use `wiener_randn!(y::AbstractRNG, x::AbstractArray{<:Complex{T}}) where T <: Number` instead.
└ @ nothing wiener.jl:8
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:7
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:1.
│ Use `struct` instead.
└ @ nothing geometric_bm.jl:1
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:37.
│ Use `1 .-` instead.
└ @ nothing geometric_bm.jl:37
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:45.
│ Use `struct` instead.
└ @ nothing geometric_bm.jl:45
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:2.
│ Use `struct` instead.
└ @ nothing ornstein_uhlenbeck.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:38.
│ Use `struct` instead.
└ @ nothing ornstein_uhlenbeck.jl:38
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `1 .-` instead.
└ @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `-2.*` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `-2 .*` instead.
└ @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `2 .*` instead.
└ @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/rswm.jl:1.
│ Use `mutable struct` instead.
└ @ nothing rswm.jl:1
┌ Warning: Deprecated syntax `parametric method syntax adaptive_alg{adaptivealg, T}(rswm::RSWM{adaptivealg, T})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/rswm.jl:11.
│ Use `adaptive_alg(rswm::RSWM{adaptivealg, T}) where {adaptivealg, T}` instead.
└ @ nothing rswm.jl:11
WARNING: Method definition (::Type{NLSolversBase.OnceDifferentiable{TF, TDF, TX} where TX where TDF where TF})(Any, AbstractArray{T, N} where N where T, AbstractArray{T, N} where N where T) in module NLSolversBase at /home/vagrant/.julia/v0.7/NLSolversBase/src/objective_types/oncedifferentiable.jl:114 overwritten in module NLsolve at /home/vagrant/.julia/v0.7/NLsolve/src/objectives/autodiff.jl:2.
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:3.
│ Use `struct` instead.
└ @ nothing misc_utils.jl:3
┌ Warning: Deprecated syntax `parametric method syntax DiffCache{chunk_size}(T, size, ::Type{Val{chunk_size}})` around /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:9.
│ Use `DiffCache(T, size, #unused#::Type{Val{chunk_size}}) where chunk_size` instead.
└ @ nothing misc_utils.jl:9
┌ Warning: Deprecated syntax `parametric method syntax DiffCache{CS}(u::AbstractArray, T::Type{Val{CS}})` around /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:14.
│ Use `DiffCache(u::AbstractArray, T::Type{Val{CS}}) where CS` instead.
└ @ nothing misc_utils.jl:14
┌ Warning: Deprecated syntax `parametric method syntax get_du{T <: Dual}(dc::DiffCache, ::Type{T})` around /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:16.
│ Use `get_du(dc::DiffCache, #unused#::Type{T}) where T <: Dual` instead.
└ @ nothing misc_utils.jl:16
┌ Warning: Deprecated syntax `parametric method syntax (p::NLSOLVEJL_SETUP{CS, AD}){CS, AD}(::Type{Val{:init}}, f, u0_prototype)` around /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:34.
│ Use `(p::NLSOLVEJL_SETUP{CS, AD})(#unused#::Type{Val{:init}}, f, u0_prototype) where {CS, AD}` instead.
└ @ nothing misc_utils.jl:34
┌ Warning: Deprecated syntax `parametric method syntax get_chunksize{CS, AD}(x::NLSOLVEJL_SETUP{CS, AD})` around /home/vagrant/.julia/v0.7/StochasticDiffEq/src/misc_utils.jl:40.
│ Use `get_chunksize(x::NLSOLVEJL_SETUP{CS, AD}) where {CS, AD}` instead.
└ @ nothing misc_utils.jl:40
ERROR: LoadError: LoadError: syntax: invalid escape sequence
Stacktrace:
 [1] include at ./boot.jl:314 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1067
 [3] include at ./sysimg.jl:29 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/StochasticDiffEq/src/StochasticDiffEq.jl:3
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:317 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/StochasticDiffEq/src/algorithms.jl:57
in expression starting at /home/vagrant/.julia/v0.7/StochasticDiffEq/src/StochasticDiffEq.jl:43
ERROR: LoadError: Failed to precompile StochasticDiffEq to /home/vagrant/.julia/compiled/v0.7/StochasticDiffEq.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/StochasticDiffEq/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for StochasticDiffEq
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/StochasticDiffEq/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing ChunkedArrays v0.1.1
[ Info: Removing DiffEqBiological v2.3.0
[ Info: Removing DiffEqDevTools v1.0.2
[ Info: Removing DiffEqJump v4.3.0
[ Info: Removing DiffEqMonteCarlo v0.10.0
[ Info: Removing DiffEqOperators v1.2.0
[ Info: Removing DiffEqPDEBase v0.4.0
[ Info: Removing DiffEqProblemLibrary v2.3.0
[ Info: Removing DistributedArrays v0.4.0
[ Info: Removing Distributions v0.15.0
[ Info: Removing EllipsisNotation v0.3.0
[ Info: Removing PDMats v0.9.0
[ Info: Removing ParameterizedFunctions v3.0.0
[ Info: Removing Primes v0.3.0
[ Info: Removing QuadGK v0.2.1
[ Info: Removing Rmath v0.3.2
[ Info: Removing SortingAlgorithms v0.2.1
[ Info: Removing SpecialMatrices v0.1.3
[ Info: Removing StatsBase v0.22.0
[ Info: Removing StatsFuns v0.6.0
[ Info: Removing SymEngine v0.4.0
[ Info: Removing VectorizedRoutines v0.0.2
ERROR: StochasticDiffEq had test errors

>>> End of log
