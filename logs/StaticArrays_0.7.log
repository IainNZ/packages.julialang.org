>>> 'Pkg.add("StaticArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing StaticArrays v0.7.0
[ Info: Package database updated

>>> 'Pkg.test("StaticArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4449
Commit d1f26785f2 (2018-03-02 17:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3508 MHz    2970069 s       7701 s     174540 s     803577 s         37 s
       #2  3508 MHz     641098 s         44 s      63108 s    3872033 s          0 s
       
  Memory: 2.93927001953125 GB (967.00390625 MB free)
  Uptime: 46456.0 sec
  Load Avg:  0.9541015625  0.9853515625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - StaticArrays                  0.7.0
3 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.3
 - tmpwtT1Hq                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing StaticArrays
Test Summary: | Pass  Total
@testinf      |    3      3
Test Summary: | Pass  Total
SVector       |   53     53
Test Summary: | Pass  Total
MVector       |   52     52
Test Summary: | Pass  Total
SMatrix       |   68     68
Test Summary: | Pass  Total
MMatrix       |   71     71
Test Summary: | Pass  Total
SArray        |   91     91
Test Summary: | Pass  Total
MArray        |   98     98
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##367#371")){Int64,Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
Test Summary: | Pass  Total
FieldVector   |   27     27
Test Summary: | Pass  Total
Scalar        |    8      8
Test Summary: | Pass  Total
SUnitRange    |   10     10
Test Summary: | Pass  Broken  Total
SizedArray    |   42       1     43
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##317#318")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = macro expansion at SDiagonal.jl:30 [inlined]
└ @ Core SDiagonal.jl:30
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = broadcasted_index(::Tuple{Int64}, ::Array{Int64,1}) at broadcast.jl:92
└ @ StaticArrays broadcast.jl:92
┌ Warning: `logm` is deprecated, use `log` instead.
│   caller = macro expansion at SDiagonal.jl:36 [inlined]
└ @ Core SDiagonal.jl:36
┌ Warning: `logm` is deprecated, use `log` instead.
│   caller = macro expansion at SDiagonal.jl:36 [inlined]
└ @ Core SDiagonal.jl:36
┌ Warning: `expm` is deprecated, use `exp` instead.
│   caller = macro expansion at SDiagonal.jl:37 [inlined]
└ @ Core SDiagonal.jl:37
┌ Warning: `expm` is deprecated, use `exp` instead.
│   caller = macro expansion at SDiagonal.jl:37 [inlined]
└ @ Core SDiagonal.jl:37
┌ Warning: `sqrtm` is deprecated, use `sqrt` instead.
│   caller = macro expansion at SDiagonal.jl:38 [inlined]
└ @ Core SDiagonal.jl:38
┌ Warning: `sqrtm` is deprecated, use `sqrt` instead.
│   caller = macro expansion at SDiagonal.jl:38 [inlined]
└ @ Core SDiagonal.jl:38
WARNING: Base.chol is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/SDiagonal.jl:1
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = macro expansion at SDiagonal.jl:110 [inlined]
└ @ Core SDiagonal.jl:110
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = macro expansion at SDiagonal.jl:111 [inlined]
└ @ Core SDiagonal.jl:111
Test Summary: | Pass  Total
SDiagonal     |   71     71
Test Summary: | Pass  Total
Custom types  |    2      2
Test Summary:                     | Pass  Total
Core definitions and constructors |   57     57
WARNING: importing deprecated binding Base.CartesianRange into StaticArrays.
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/abstractarray.jl:1
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/abstractarray.jl:1
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/abstractarray.jl:1
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##178#180")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##178#180")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##179#181")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##179#181")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##183#185")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##183#185")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##184#186")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##184#186")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
Test Summary:           | Pass  Total
AbstractArray interface |   54     54
WARNING: Base.code_warntype is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl
WARNING: Base.DevNull is deprecated, use devnull instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = #s168#219(::Type, ::Type, ::Type, ::Type{T} where T<:Tuple, ::Type{T} where T<:Tuple) at indexing.jl:366
└ @ StaticArrays indexing.jl:366
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = #s168#213(::Type, ::Type, ::Type{T} where T<:Tuple, ::Type{T} where T<:Tuple) at indexing.jl:227
└ @ StaticArrays indexing.jl:227
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = #s168#216(::Type, ::Type, ::Type, ::Type{T} where T<:Tuple, ::Type{T} where T<:Tuple) at indexing.jl:329
└ @ StaticArrays indexing.jl:329
Indexing empty arrays: Error During Test at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:157
  Test threw exception UndefVarError(:T)
  Expression: size((SVector{0}())[:]) == (0,)
  UndefVarError: T not defined
  Stacktrace:
   [1] SArray{Tuple{0},T,1,0} where T(::Tuple{}) at /home/vagrant/.julia/v0.7/StaticArrays/src/SVector.jl:19
   [2] SArray{Tuple{0},T,1,0} where T() at /home/vagrant/.julia/v0.7/StaticArrays/src/convert.jl:3
   [3] macro expansion at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:157 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:157 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:2
Test Summary:                                              | Pass  Error  Total
Indexing                                                   |   72      1     73
  Linear getindex() on SVector                             |    2             2
  Linear getindex() on SMatrix                             |    2             2
  Linear getindex()/setindex!() on MVector                 |   10            10
  Linear getindex()/setindex!() on MMatrix                 |    2             2
  Linear getindex()/setindex!() with a SVector on an Array |    1             1
  Fancy APL indexing                                       |    1             1
  2D getindex() on SMatrix                                 |   12            12
  2D getindex()/setindex! on MMatrix                       |    8             8
  3D scalar indexing                                       |    6             6
  4D scalar indexing                                       |    8             8
  4D StaticArray indexing                                  |    8             8
  Indexing with empty vectors                              |    3             3
  Indexing empty arrays                                    |    8      1      9
  inferabilty of index_sizes helper                        |    1             1
ERROR: LoadError: LoadError: Some tests did not pass: 72 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/StaticArrays/test/indexing.jl:1
in expression starting at /home/vagrant/.julia/v0.7/StaticArrays/test/runtests.jl:34
┌ Error: ------------------------------------------------------------
│ # Testing failed for StaticArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/StaticArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#534(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [17] top-level scope
│     [18] eval at ./boot.jl:308 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:309
│     [21] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: StaticArrays had test errors

>>> End of log
