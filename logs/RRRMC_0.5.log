>>> 'Pkg.add("RRRMC")' log
INFO: Cloning cache of ExtractMacro from https://github.com/carlobaldassi/ExtractMacro.jl.git
INFO: Cloning cache of RRRMC from https://github.com/carlobaldassi/RRRMC.jl.git
INFO: Installing DataStructures v0.6.0
INFO: Installing ExtractMacro v0.1.0
INFO: Installing RRRMC v1.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RRRMC
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RRRMC")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (976.19140625 MB free)
Uptime: 36379.0 sec
Load Avg:  1.04052734375  1.35546875  1.67919921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2393905 s       6186 s     213576 s     588012 s         52 s
#2  3503 MHz     761864 s         42 s      97432 s    2698679 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - RRRMC                         1.0.1
3 additional packages:
 - Compat                        0.27.0
 - DataStructures                0.6.0
 - ExtractMacro                  0.1.0
INFO: Testing RRRMC
samples = 100
iters = 10000
accept rate = 0.0365
samples = 100
iters = 10000
accept rate = 0.0362
samples = 100
iters = 10000
accept rate = 0.0362
samples = 100
iters = 9941
accept rate = 0.0313
true it = 313
samples = 100
iters = 9970
accept rate = 0.0348
true it = 348
samples = 100
iters = 9970
accept rate = 0.0348
true it = 348
samples = 100
num_moves = 363
global time = 4991.470483120943
ratio = 13.750607391517748
samples = 100
num_moves = 358
global time = 4999.4979716498065
ratio = 13.965078133100018
samples = 100
num_moves = 358
global time = 4999.4979716498065
ratio = 13.965078133100018
samples = 100
iters = 10000
accept rate = 0.0351
frac. staged iters = 0.4999
samples = 100
iters = 10000
accept rate = 0.0338
frac. staged iters = 0.5
samples = 100
iters = 10000
accept rate = 0.0338
frac. staged iters = 0.5
samples = 100
iters = 10000
accept rate = 0.0351
frac. staged iters = 0.4999
samples = 100
iters = 10000
accept rate = 0.0338
frac. staged iters = 0.5
samples = 100
iters = 10000
accept rate = 0.0351
frac. staged iters = 0.5
samples = 100
iters = 10000
accept rate = 0.0338
frac. staged iters = 0.5001
samples = 100
iters = 10000
accept rate = 0.0025
samples = 100
iters = 10000
accept rate = 0.0022
samples = 100
iters = 10000
accept rate = 0.0022
samples = 100
iters = 8040
accept rate = 0.001
true it = 10
samples = 100
iters = 9900
accept rate = 0.0017
true it = 17
samples = 100
iters = 8108
accept rate = 0.0014
true it = 14
samples = 100
num_moves = 11
global time = 2153.7898484165844
ratio = 195.7990771287804
samples = 100
num_moves = 5
global time = 2032.7311634660837
ratio = 406.5462326932167
samples = 100
num_moves = 5
global time = 2032.7311634660837
ratio = 406.5462326932167
samples = 100
iters = 10000
accept rate = 0.002
frac. staged iters = 0.9975
samples = 100
iters = 10000
accept rate = 0.0015
frac. staged iters = 0.9983
samples = 100
iters = 10000
accept rate = 0.0026
frac. staged iters = 0.9972
samples = 100
iters = 10000
accept rate = 0.002
frac. staged iters = 0.499
samples = 100
iters = 10000
accept rate = 0.0015
frac. staged iters = 0.4993
samples = 100
iters = 10000
accept rate = 0.002
frac. staged iters = 0.9988
samples = 100
iters = 10000
accept rate = 0.0015
frac. staged iters = 0.9992
samples = 100
iters = 10000
accept rate = 0.035
samples = 100
iters = 10000
accept rate = 0.0346
samples = 100
iters = 10000
accept rate = 0.0346
samples = 100
iters = 9947
accept rate = 0.0328
true it = 328
samples = 100
iters = 9956
accept rate = 0.0326
true it = 326
samples = 100
iters = 9956
accept rate = 0.0326
true it = 326
samples = 100
num_moves = 366
global time = 990.4125412746234
ratio = 2.706045194739408
samples = 100
num_moves = 368
global time = 985.9529324208845
ratio = 2.6792199250567514
samples = 100
num_moves = 368
global time = 985.9529324208845
ratio = 2.6792199250567514
samples = 100
iters = 10000
accept rate = 0.284
frac. staged iters = 0.716
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.7235
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.7235
samples = 100
iters = 10000
accept rate = 0.284
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.284
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.0355
samples = 100
iters = 10000
accept rate = 0.0346
samples = 100
iters = 10000
accept rate = 0.0346
samples = 100
iters = 9964
accept rate = 0.0363
true it = 363
samples = 100
iters = 9956
accept rate = 0.0326
true it = 326
samples = 100
iters = 9956
accept rate = 0.0326
true it = 326
samples = 100
num_moves = 381
global time = 989.6258838323774
ratio = 2.5974432646519094
samples = 100
num_moves = 368
global time = 985.9529324208845
ratio = 2.6792199250567514
samples = 100
num_moves = 368
global time = 985.9529324208845
ratio = 2.6792199250567514
samples = 100
iters = 10000
accept rate = 0.2843
frac. staged iters = 0.7157
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.7235
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.7235
samples = 100
iters = 10000
accept rate = 0.2843
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.2843
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.2764
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.0739
samples = 100
iters = 10000
accept rate = 0.0738
samples = 100
iters = 10000
accept rate = 0.0738
samples = 100
iters = 9991
accept rate = 0.0734
true it = 734
samples = 100
iters = 9970
accept rate = 0.0737
true it = 737
samples = 100
iters = 9984
accept rate = 0.0722
true it = 722
samples = 100
num_moves = 725
global time = 998.3471840904416
ratio = 1.3770305987454368
samples = 100
num_moves = 777
global time = 997.735881183508
ratio = 1.284087363170538
samples = 100
num_moves = 729
global time = 999.2628981427515
ratio = 1.3707309988240761
samples = 100
iters = 10000
accept rate = 0.5221
frac. staged iters = 0.4779
samples = 100
iters = 10000
accept rate = 0.5172
frac. staged iters = 0.4828
samples = 100
iters = 10000
accept rate = 0.5172
frac. staged iters = 0.4828
samples = 100
iters = 10000
accept rate = 0.5221
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.5172
frac. staged iters = 0.0
samples = 100
iters = 10000
accept rate = 0.5221
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.5172
frac. staged iters = 1.0
samples = 100
iters = 10000
accept rate = 0.4218
ERROR: LoadError: assertion failed: |E - RRRMC.energy(X,C)| <= 1.734723475976807e-14
  E = 0.011569285016917619
  RRRMC.energy(X,C) = 0.011569285016886477
  difference = 3.114175584073564e-14 > 1.734723475976807e-14
 in test_approx_eq(::Float64, ::Float64, ::Float64, ::String, ::String) at ./test.jl:865
 in test_approx_eq(::Float64, ::Float64, ::String, ::String) at ./test.jl:875
 in checkenergy_hook at /home/vagrant/.julia/v0.5/RRRMC/test/runtests.jl:18 [inlined]
 in #standardMC#3(::Int64, ::Int64, ::RRRMCTest.#checkenergy_hook, ::RRRMC.Interface.Config, ::Void, ::Function, ::RRRMC.Fields.GraphFieldsNormalDiscretized{Int64,(-1,0,1)}, ::Float64, ::Int64) at /home/vagrant/.julia/v0.5/RRRMC/src/RRRMC.jl:96
 in (::RRRMC.#kw##standardMC)(::Array{Any,1}, ::RRRMC.#standardMC, ::RRRMC.Fields.GraphFieldsNormalDiscretized{Int64,(-1,0,1)}, ::Float64, ::Int64) at ./<missing>:0
 in test() at /home/vagrant/.julia/v0.5/RRRMC/test/runtests.jl:87
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/RRRMC/test/runtests.jl, in expression starting on line 131
================================[ ERROR: RRRMC ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/RRRMC/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: RRRMC had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
