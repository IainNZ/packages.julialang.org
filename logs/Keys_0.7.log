>>> 'Pkg.add("Keys")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Keys from https://github.com/bramtayl/Keys.jl.git
[ Info: Installing Keys v0.2.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing Missings v0.2.9
[ Info: Installing RecurUnroll v0.1.1
[ Info: Installing TypedBools v0.0.3
[ Info: Package database updated

>>> 'Pkg.test("Keys")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4925
Commit 55d4808a62 (2018-04-21 19:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2496097 s       7182 s     206833 s     770679 s         19 s
       #2  3500 MHz     663711 s        364 s      77907 s    3220714 s          0 s
       
  Memory: 2.939197540283203 GB (899.58203125 MB free)
  Uptime: 40493.0 sec
  Load Avg:  0.994140625  0.9853515625  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - Keys                          0.2.0
6 additional packages:
 - Compat                        0.64.0
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - Nullables                     0.0.5
 - RecurUnroll                   0.1.1
 - TypedBools                    0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for Keys...
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing Documenter v0.17.0
[ Info: Testing Keys
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = istb(::Symbol) at types.jl:7
└ @ MacroTools types.jl:7
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:195-200

> Code block:

```jldoctest
julia> using Keys

julia> @keys delete((:a => 1, :b => 1.0), :a)
(.b=>1.0,)
```

> Subexpression:

    @keys delete((:a => 1, :b => 1.0), :a)

> Output Diff (REQUIRES COLOR):

(.b=>1.0,)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.b => 1.0,)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:81-86

> Code block:

```jldoctest
julia> using Keys

julia> @keys key.((:a => 1, :b => 2.0))
(.a, .b)
```

> Subexpression:

    @keys key.((:a => 1, :b => 2.0))

> Output Diff (REQUIRES COLOR):

┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
(.a, .b)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:232-237

> Code block:

```jldoctest
julia> using Keys

julia> @keys map_values(x -> x + 1, (:a => 1, :b => 1.0))
(.a=>2, .b=>2.0)
```

> Subexpression:

    @keys map_values(x -> x + 1, (:a => 1, :b => 1.0))

> Output Diff (REQUIRES COLOR):

(.a=>2, .b=>2.0)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.a => 2, .b => 2.0)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:213-218

> Code block:

```jldoctest
julia> using Keys

julia> @keys push((:a => 1, :b => 1.0), :b => "a", :c => 1 // 1)
(.a=>1, .b=>"a", .c=>1//1)
```

> Subexpression:

    @keys push((:a => 1, :b => 1.0), :b => "a", :c => 1 // 1)

> Output Diff (REQUIRES COLOR):

(.a=>1, .b=>"a", .c=>1//1)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.a => 1, .b => "a", .c => 1//1)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:264-269

> Code block:

```jldoctest
julia> using Keys

julia> @keys rename((:a => 1, :b => "a"), :c => :a)
(.c=>1, .b=>"a")
```

> Subexpression:

    @keys rename((:a => 1, :b => "a"), :c => :a)

> Output Diff (REQUIRES COLOR):

(.c=>1, .b=>"a")┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.c => 1, .b => "a")

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:96-101

> Code block:

```jldoctest
julia> using Keys

julia> @keys value.((:a => 1, :b => 1.0))
(1, 1.0)
```

> Subexpression:

    @keys value.((:a => 1, :b => 1.0))

> Output Diff (REQUIRES COLOR):

┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
(1, 1.0)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:121-143

> Code block:

```jldoctest
julia> using Keys

julia> @keys a_keyed_tuple = (:a => 1, :b => 1.0)
(.a=>1, .b=>1.0)

julia> if VERSION >= v"0.7.0-DEV"
            a_keyed_tuple.b
        else
            @keys a_keyed_tuple[:b]
        end
1.0

julia> @keys a_keyed_tuple[(:a, :b)]
(.a=>1, .b=>1.0)

julia> @keys a_keyed_tuple[:c]
ERROR: Key .c not found
[...]

julia> @keys haskey(a_keyed_tuple, :b)
TypedBools.True()
```

> Subexpression:

    @keys a_keyed_tuple = (:a => 1, :b => 1.0)

> Output Diff (REQUIRES COLOR):

(.a=>1, .b=>1.0)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.a => 1, .b => 1.0)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:121-143

> Code block:

```jldoctest
julia> using Keys

julia> @keys a_keyed_tuple = (:a => 1, :b => 1.0)
(.a=>1, .b=>1.0)

julia> if VERSION >= v"0.7.0-DEV"
            a_keyed_tuple.b
        else
            @keys a_keyed_tuple[:b]
        end
1.0

julia> @keys a_keyed_tuple[(:a, :b)]
(.a=>1, .b=>1.0)

julia> @keys a_keyed_tuple[:c]
ERROR: Key .c not found
[...]

julia> @keys haskey(a_keyed_tuple, :b)
TypedBools.True()
```

> Subexpression:

    if VERSION >= v"0.7.0-DEV"
         a_keyed_tuple.b
     else
         @keys a_keyed_tuple[:b]
     end

> Output Diff (REQUIRES COLOR):

1.0┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
ERROR: MethodError: Cannot `convert` an object of type Symbol to an object of type Key
Closest candidates are:
  convert(::Type{T}, !Matched::T) where T at essentials.jl:123
Stacktrace:
 [1] Key(::Symbol) at ./deprecated.jl:473
 [2] getproperty(::Tuple{Pair{Key{:a},Int64},Pair{Key{:b},Float64}}, ::Symbol) at /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:223
 [3] top-level scope at none:2

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:121-143

> Code block:

```jldoctest
julia> using Keys

julia> @keys a_keyed_tuple = (:a => 1, :b => 1.0)
(.a=>1, .b=>1.0)

julia> if VERSION >= v"0.7.0-DEV"
            a_keyed_tuple.b
        else
            @keys a_keyed_tuple[:b]
        end
1.0

julia> @keys a_keyed_tuple[(:a, :b)]
(.a=>1, .b=>1.0)

julia> @keys a_keyed_tuple[:c]
ERROR: Key .c not found
[...]

julia> @keys haskey(a_keyed_tuple, :b)
TypedBools.True()
```

> Subexpression:

    @keys a_keyed_tuple[(:a, :b)]

> Output Diff (REQUIRES COLOR):

(.a=>1, .b=>1.0)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.a => 1, .b => 1.0)

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:121-143

> Code block:

```jldoctest
julia> using Keys

julia> @keys a_keyed_tuple = (:a => 1, :b => 1.0)
(.a=>1, .b=>1.0)

julia> if VERSION >= v"0.7.0-DEV"
            a_keyed_tuple.b
        else
            @keys a_keyed_tuple[:b]
        end
1.0

julia> @keys a_keyed_tuple[(:a, :b)]
(.a=>1, .b=>1.0)

julia> @keys a_keyed_tuple[:c]
ERROR: Key .c not found
[...]

julia> @keys haskey(a_keyed_tuple, :b)
TypedBools.True()
```

> Subexpression:

    @keys a_keyed_tuple[:c]

> Output Diff (REQUIRES COLOR):

┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
ERROR: Key .c not found
[...]Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] first_error at /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:167 [inlined]
 [3] getindex(::Tuple{Pair{Key{:a},Int64},Pair{Key{:b},Float64}}, ::Key{:c}) at /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:180
 [4] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:121-143

> Code block:

```jldoctest
julia> using Keys

julia> @keys a_keyed_tuple = (:a => 1, :b => 1.0)
(.a=>1, .b=>1.0)

julia> if VERSION >= v"0.7.0-DEV"
            a_keyed_tuple.b
        else
            @keys a_keyed_tuple[:b]
        end
1.0

julia> @keys a_keyed_tuple[(:a, :b)]
(.a=>1, .b=>1.0)

julia> @keys a_keyed_tuple[:c]
ERROR: Key .c not found
[...]

julia> @keys haskey(a_keyed_tuple, :b)
TypedBools.True()
```

> Subexpression:

    @keys haskey(a_keyed_tuple, :b)

> Output Diff (REQUIRES COLOR):

┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
TypedBools.True()

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/Keys/src/Keys.jl:56-61

> Code block:

```jldoctest
julia> using Keys

julia> @keys (:a => 1, :b => 2)
(.a=>1, .b=>2)
```

> Subexpression:

    @keys (:a => 1, :b => 2)

> Output Diff (REQUIRES COLOR):

(.a=>1, .b=>2)┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
(.a => 1, .b => 2)

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202
 [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:168
 [4] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:205 [inlined]
 [5] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:72
 [6] #makedocs#1 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:204 [inlined]
 [7] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :checkdocs, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,Symbol,String}}, ::typeof(Documenter.makedocs)) at ./<missing>:0
 [8] top-level scope
 [9] include at ./boot.jl:314 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1067
 [11] include(::Module, ::String) at ./sysimg.jl:29
 [12] exec_options(::Base.JLOptions) at ./client.jl:327
 [13] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/Keys/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for Keys
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Keys/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing DocStringExtensions v0.4.4
[ Info: Removing Documenter v0.17.0
ERROR: Keys had test errors

>>> End of log
