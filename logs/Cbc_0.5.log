>>> 'Pkg.add("Cbc")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Cbc v0.3.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building Cbc
INFO: Package database updated

>>> 'Pkg.test("Cbc")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (714.07421875 MB free)
Uptime: 12363.0 sec
Load Avg:  1.0029296875  1.0146484375  1.0673828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     660125 s       6272 s      68640 s     358139 s         21 s
#2  3504 MHz     258088 s        800 s      39998 s     909495 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Cbc                           0.3.1
 - JSON                          0.9.0
5 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - MathProgBase                  0.6.4
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Computing test dependencies for Cbc...
INFO: Installing Calculus v0.2.2
INFO: Installing Clp v0.3.0
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing JuMP v0.16.2
INFO: Installing Lazy v0.11.6
INFO: Installing MacroTools v0.3.6
INFO: Installing NaNMath v0.2.4
INFO: Installing OffsetArrays v0.3.0
INFO: Installing ReverseDiffSparse v0.7.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Building Cbc
INFO: Testing Cbc
Solution status: Optimal
Optimal value: -7.0
Solution vector: [1.0,1.0,0.0,0.0,1.0]
Testing mixintprog with solver Cbc.CbcMathProgSolverInterface.CbcSolver
Done
Cbc should not display any output from these tests
Cgl0004I processed model has 1 rows, 5 columns (5 integer (5 of which binary)) and 5 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.25
Cbc0038I Solution found of -16
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -16 - took 0.00 seconds
Cbc0012I Integer solution of -16 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -16, took 1 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Problem LIN1
Problem LIN1A
Problem LIN2
Problem LIN2A
Problem LIN3
Problem LIN4
WARNING: Variable value not defined for __anon__. Check that the model was properly solved.
WARNING: Variable value not defined for __anon__. Check that the model was properly solved.
Test Summary: | Pass  Total
  Printing    |  214    214
WARNING: Expression d["bar"] should not be used as a variable name. Use the "anonymous" syntax d["bar"] = @variable(m, ...) instead.
WARNING: A variable named lbonly is already attached to this model. If creating variables programmatically, consider using the anonymous variable syntax x = @variable(m, [1:N], ...).
WARNING: Variable value not defined for component of x. Check that the model was properly solved.
WARNING: Variable value not defined for component of z. Check that the model was properly solved.
Test Summary: | Pass  Total
  Variables   |   88     88
Test Summary: | Pass  Total
  Expressions |   16     16
Test Summary:      | Pass  Total
  Operator overloads |  467    467
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace sum{C[i,j] * x[i,j],i in 1:2,j = 2:3} with sum(C[i,j] * x[i,j] for i in 1:2 for j = 2:3).
WARNING: Replace sum{C[i,j] * x[i,j],i = 1:3,j in 1:3; i != j} with sum(C[i,j] * x[i,j] for i = 1:3 for j in 1:3 if i != j).
WARNING: Replace sum{C[i,j] * x[i,j],i = 1:3,j = 1:i} with sum(C[i,j] * x[i,j] for i = 1:3 for j = 1:i).
WARNING: Replace sum{0 * x[i,1],i = 1:3} with sum(0 * x[i,1] for i = 1:3).
WARNING: Replace sum{0 * x[i,1] + y,i = 1:3} with sum(0 * x[i,1] + y for i = 1:3).
WARNING: Replace norm2{x[i,j],i in 1:2,j = 1:2} with norm(x[i,j] for i in 1:2 for j = 1:2).
WARNING: Replace norm2{x[i,j],i = 1:2,j in 1:2; iseven(i + j)} with norm(x[i,j] for i = 1:2 for j in 1:2 if iseven(i + j)).
WARNING: Replace norm2{x[i,1],i in 1:2} with norm(x[i,1] for i in 1:2).
WARNING: Replace norm2{x[i,j],i = 1:2,j = 1:2} with norm(x[i,j] for i = 1:2 for j = 1:2).
Test Summary: | Pass  Total
  Macros      |  409    409
WARNING: The following expression did not pass the fuzzer:
    ex1 = QuadExpr(JuMP.Variable[x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,v,v,v,v,v,v,w,w,w,y,y,y,y,y,y,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,y,y,y,y,y,y,w,w,w,w,w,w,x,x,x,x,x,x,z,z,z,z,z,z,x,x,x,x,x,x,y,y,y,y,y,y,y,y,y,v,v,v,y,y,y,z,z,z,x,x,x,z,z,z,z,z,z,z,z,z,y,y,y,y,y,y,x,x,x,x,x,x,x,x,x,w,w,w,v,v,v,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,x,x,x,x,x,z,z,z,z,z,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,z,z,z,z,z,w,w,w,w,w,w,w,w,w,w,z,z,z,z,z,z,x,x,x,x,x,x,x,x,x,x,x,x,v,v,v,v,v,v,y,y,y,y,y,y,z,z,z,w,w,w],JuMP.Variable[x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y],[-0.0527854,0.063539,-0.0303445,-0.0544996,0.0656024,-0.0313299,-0.0994444,0.119703,-0.0571671,-0.15003,0.180595,-0.086247,-0.105433,0.126913,-0.06061,-0.170226,0.204905,-0.0978572,-0.0629946,0.075828,-0.0362134,0.133867,-0.161139,0.0769555,0.167589,-0.201731,0.096341,-0.106223,0.127863,-0.061064,-0.103673,0.124794,-0.059598,-0.163404,0.196693,-0.0939352,-0.0385731,0.0464313,-0.0221743,0.00293649,-0.00353471,0.00168808,-0.17083,0.205632,-0.0982041,-0.0427485,0.0514573,-0.0245746,0.106344,-0.128009,0.0611335,0.113651,-0.136805,0.0653342,-0.0738051,0.0888408,-0.0424279,0.0742887,0.00682664,-0.0720593,0.0770442,0.00707984,-0.0747321,0.115134,0.0105801,-0.111679,-0.216261,-0.0198729,0.209771,0.0666773,0.0061272,-0.0646763,0.0173132,0.00159097,-0.0167937,0.109678,0.0100787,-0.106387,-0.174118,-0.0160003,0.168893,0.0786954,0.00723158,-0.0763338,-0.10416,-0.0095716,0.101034,0.101035,0.00928448,-0.0980034,0.118633,0.0109016,-0.115073,-0.0894996,0.0718496,-0.112733,0.0374784,-0.0300874,0.0472077,-0.0413975,0.0332336,-0.0521441,0.10656,-0.0855455,0.134223,0.0409467,-0.0328717,0.0515763,-0.0632955,0.0508131,-0.0797267,-0.0732851,0.0588327,-0.0923097,0.0625413,-0.0502077,0.0787768,0.0232013,-0.0186258,0.0292243,0.127569,-0.102411,0.160685,-0.00720347,0.00578289,-0.00907346,0.125854,-0.101035,0.158525,0.106293,-0.0853313,0.133886,-0.0881999,-0.0457467,-0.187099,0.187805,0.170461,-0.0528151,-0.0273936,-0.112037,0.11246,0.102074,-0.0724817,-0.0375941,-0.153756,0.154336,0.140083,-0.061532,-0.0319148,-0.130528,0.131021,0.118921,0.0294293,0.0152641,0.0624285,-0.062664,-0.056877,-0.0228718,-0.0118629,-0.0485181,0.0487012,0.0442036,0.0761338,0.0394883,0.161503,-0.162112,-0.147141,0.0795317,0.0412507,0.168711,-0.169348,-0.153708,0.0947562,0.0491472,0.201007,-0.201765,-0.183132,0.053636,0.0278194,0.113778,-0.114208,-0.103661,0.0548059,0.0284262,0.11626,-0.116699,-0.105922,0.0614052,0.0318491,0.130259,-0.130751,-0.118676,-0.0582877,0.151512,-0.00757359,0.00788348,-0.0204921,0.00102434,0.0492789,-0.128094,0.00640304,-0.0714192,0.185645,-0.00927982,-0.0679879,0.176726,-0.00883398,-0.0418396,0.108757,-0.00543641,-0.0540079,0.140387,-0.00701749,-0.064165,0.166789,-0.00833725,-0.0574945,0.14945,-0.00747052,0.0781566,-0.203158,0.0101552,0.0243367,-0.0632602,0.00316218,0.034916,-0.0907598,0.0045368],AffExpr(JuMP.Variable[x,v,w,x,x,x,x,x,x,v,v,w,y,y,z,z,z,z,z,z,y,y,x,x,v,w,w,x,x,z,z,x,x,y,y,y,v,z,y,w,y,z,x,z,z,z,y,y,x,x,x,w,v,y,x,z,v,w,y,y,y,y,x,z,x,x,x,z,w,w,z,x,y,z,z,x,x,x,x,v,v,y,y,z,w],[-0.0604835,0.0728054,-0.0347699,-0.263116,-0.271661,-0.495695,-0.747846,-0.525548,-0.848518,-0.314006,0.667279,0.835371,-0.529484,-0.516773,-0.81451,-0.192273,0.0146373,-0.851525,-0.213086,0.530088,0.566511,-0.367892,-0.326603,-0.0300126,0.316802,-0.144784,-0.150154,-0.224389,0.421478,-0.12995,-0.0337423,-0.213755,0.339345,-0.153372,0.203001,-0.196911,-0.231208,-0.234042,0.187887,-0.294799,0.0383635,-0.0160649,0.0177448,-0.0456763,-0.0175516,0.0271312,0.0314132,-0.026808,-0.00994511,-0.0546815,0.00308772,-0.0539467,-0.045562,-0.0283969,-0.0147286,-0.0602385,0.0604658,0.0548817,0.428228,0.256428,0.351913,0.29875,-0.142885,0.111047,-0.369644,-0.386142,-0.46006,-0.260413,-0.266093,-0.298134,-0.166568,0.432972,-0.0216429,0.0420112,-0.00568206,-0.0355181,0.0514758,0.0490027,0.0301561,0.0389265,0.0462473,0.0414395,-0.0563319,-0.0175408,-0.0251659],0.6932860593769509))
    ex2 = QuadExpr(JuMP.Variable[x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,v,v,v,v,v,v,w,w,w,y,y,y,y,y,y,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,y,y,y,y,y,y,w,w,w,w,w,w,x,x,x,x,x,x,z,z,z,z,z,z,x,x,x,x,x,x,y,y,y,y,y,y,y,y,y,v,v,v,y,y,y,z,z,z,x,x,x,z,z,z,z,z,z,z,z,z,y,y,y,y,y,y,x,x,x,x,x,x,x,x,x,w,w,w,v,v,v,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,x,x,x,x,x,z,z,z,z,z,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,z,z,z,z,z,w,w,w,w,w,w,w,w,w,w,z,z,z,z,z,z,x,x,x,x,x,x,x,x,x,x,x,x,v,v,v,v,v,v,y,y,y,y,y,y,z,z,z,w,w,w],JuMP.Variable[x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,v,w,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,x,x,v,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,z,y,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,y,x,z,v,w,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y,z,x,y],[-0.0527854,0.063539,-0.0303445,-0.0544996,0.0656024,-0.0313299,-0.0994444,0.119703,-0.0571671,-0.15003,0.180595,-0.086247,-0.105433,0.126913,-0.06061,-0.170226,0.204905,-0.0978572,-0.0629946,0.075828,-0.0362134,0.133867,-0.161139,0.0769555,0.167589,-0.201731,0.096341,-0.106223,0.127863,-0.061064,-0.103673,0.124794,-0.059598,-0.163404,0.196693,-0.0939352,-0.0385731,0.0464313,-0.0221743,0.00293649,-0.00353471,0.00168808,-0.17083,0.205632,-0.0982041,-0.0427485,0.0514573,-0.0245746,0.106344,-0.128009,0.0611335,0.113651,-0.136805,0.0653342,-0.0738051,0.0888408,-0.0424279,0.0742887,0.00682664,-0.0720593,0.0770442,0.00707984,-0.0747321,0.115134,0.0105801,-0.111679,-0.216261,-0.0198729,0.209771,0.0666773,0.0061272,-0.0646763,0.0173132,0.00159097,-0.0167937,0.109678,0.0100787,-0.106387,-0.174118,-0.0160003,0.168893,0.0786954,0.00723158,-0.0763338,-0.10416,-0.0095716,0.101034,0.101035,0.00928448,-0.0980034,0.118633,0.0109016,-0.115073,-0.0894996,0.0718496,-0.112733,0.0374784,-0.0300874,0.0472077,-0.0413975,0.0332336,-0.0521441,0.10656,-0.0855455,0.134223,0.0409467,-0.0328717,0.0515763,-0.0632955,0.0508131,-0.0797267,-0.0732851,0.0588327,-0.0923097,0.0625413,-0.0502077,0.0787768,0.0232013,-0.0186258,0.0292243,0.127569,-0.102411,0.160685,-0.00720347,0.00578289,-0.00907346,0.125854,-0.101035,0.158525,0.106293,-0.0853313,0.133886,-0.0881999,-0.0457467,-0.187099,0.187805,0.170461,-0.0528151,-0.0273936,-0.112037,0.11246,0.102074,-0.0724817,-0.0375941,-0.153756,0.154336,0.140083,-0.061532,-0.0319148,-0.130528,0.131021,0.118921,0.0294293,0.0152641,0.0624285,-0.062664,-0.056877,-0.0228718,-0.0118629,-0.0485181,0.0487012,0.0442036,0.0761338,0.0394883,0.161503,-0.162112,-0.147141,0.0795317,0.0412507,0.168711,-0.169348,-0.153708,0.0947562,0.0491472,0.201007,-0.201765,-0.183132,0.053636,0.0278194,0.113778,-0.114208,-0.103661,0.0548059,0.0284262,0.11626,-0.116699,-0.105922,0.0614052,0.0318491,0.130259,-0.130751,-0.118676,-0.0582877,0.151512,-0.00757359,0.00788348,-0.0204921,0.00102434,0.0492789,-0.128094,0.00640304,-0.0714192,0.185645,-0.00927982,-0.0679879,0.176726,-0.00883398,-0.0418396,0.108757,-0.00543641,-0.0540079,0.140387,-0.00701749,-0.064165,0.166789,-0.00833725,-0.0574945,0.14945,-0.00747052,0.0781566,-0.203158,0.0101552,0.0243367,-0.0632602,0.00316218,0.034916,-0.0907598,0.0045368],AffExpr(JuMP.Variable[x,v,w,x,x,x,x,x,x,v,v,w,y,y,z,z,z,z,z,z,y,y,x,x,v,w,w,x,x,z,z,x,x,y,y,y,v,z,y,w,y,z,x,z,z,z,y,y,x,x,x,w,v,y,x,z,v,w,y,y,y,y,x,z,x,x,x,z,w,w,z,x,y,z,z,x,x,x,x,v,v,y,y,z,w],[-0.0604835,0.0728054,-0.0347699,-0.263116,-0.271661,-0.495695,-0.747846,-0.525548,-0.848518,-0.314006,0.667279,0.835371,-0.529484,-0.516773,-0.81451,-0.192273,0.0146373,-0.851525,-0.213086,0.530088,0.566511,-0.367892,-0.326603,-0.0300126,0.316802,-0.144784,-0.150154,-0.224389,0.421478,-0.12995,-0.0337423,-0.213755,0.339345,-0.153372,0.203001,-0.196911,-0.231208,-0.234042,0.187887,-0.294799,0.0383635,-0.0160649,0.0177448,-0.0456763,-0.0175516,0.0271312,0.0314132,-0.026808,-0.00994511,-0.0546815,0.00308772,-0.0539467,-0.045562,-0.0283969,-0.0147286,-0.0602385,0.0604658,0.0548817,0.428228,0.256428,0.351913,0.29875,-0.142885,0.111047,-0.369644,-0.386142,-0.46006,-0.260413,-0.266093,-0.298134,-0.166568,0.432972,-0.0216429,0.0420112,-0.00568206,-0.0355181,0.0514758,0.0490027,0.0301561,0.0389265,0.0462473,0.0414395,-0.0563319,-0.0175408,-0.0251659],0.6932860593769509))
Fuzzing the macros: Test Failed
  Expression: test_approx_equal_exprs(ex,eval(raff))
 in record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:431
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in macro expansion; at /home/vagrant/.julia/v0.5/JuMP/test/fuzzer.jl:107 [inlined]
 in macro expansion; at ./test.jl:674 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488 (repeats 3 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
Test Summary:      | Pass  Fail  Total
  Fuzzing the macros |   99     1    100
ERROR: LoadError: LoadError: LoadError: Some tests did not pass: 99 passed, 1 failed, 0 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:498
 in macro expansion; at ./test.jl:681 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488 (repeats 3 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/JuMP/test/fuzzer.jl, in expression starting on line 103
while loading /home/vagrant/.julia/v0.5/JuMP/test/runtests.jl, in expression starting on line 27
while loading /home/vagrant/.julia/v0.5/Cbc/test/runtests.jl, in expression starting on line 15
=================================[ ERROR: Cbc ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Cbc/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.2.2
INFO: Removing Clp v0.3.0
INFO: Removing DataStructures v0.5.3
INFO: Removing DiffBase v0.1.0
INFO: Removing ForwardDiff v0.4.2
INFO: Removing JuMP v0.16.2
INFO: Removing Lazy v0.11.6
INFO: Removing MacroTools v0.3.6
INFO: Removing NaNMath v0.2.4
INFO: Removing OffsetArrays v0.3.0
INFO: Removing ReverseDiffSparse v0.7.2
INFO: Removing SpecialFunctions v0.1.1
ERROR: Cbc had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
