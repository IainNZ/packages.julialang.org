>>> 'Pkg.add("PyCallJLD")' log
INFO: Cloning cache of PyCallJLD from https://github.com/JuliaPy/PyCallJLD.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing Blosc v0.2.0
INFO: Installing Conda v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Installing MacroTools v0.3.6
INFO: Installing PyCall v1.12.0
INFO: Installing PyCallJLD v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building Conda
INFO: Building HDF5
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyCallJLD
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyCallJLD")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (665.875 MB free)
Uptime: 44995.0 sec
Load Avg:  0.89453125  0.98876953125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2896776 s         80 s     117545 s     789604 s         51 s
#2  3499 MHz     631929 s       6178 s      62593 s    3722904 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.11.0
 - PyCallJLD                     0.0.1
12 additional packages:
 - BinDeps                       0.5.0
 - Blosc                         0.2.0
 - Compat                        0.25.0
 - Conda                         0.5.3
 - FileIO                        0.3.1
 - HDF5                          0.8.1
 - JLD                           0.6.10
 - LegacyStrings                 0.2.1
 - MacroTools                    0.3.6
 - PyCall                        1.12.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing PyCallJLD
ERROR: LoadError: SystemError (with /tmp/hsperfdata_root): rmdir: Operation not permitted
Stacktrace:
 [1] #systemerror#44 at ./error.jl:64 [inlined]
 [2] (::Base.#kw##systemerror)(::Array{Any,1}, ::Base.#systemerror, ::Symbol, ::Bool) at ./<missing>:0
 [3] #rm#7(::Bool, ::Bool, ::Function, ::String) at ./file.jl:163
 [4] (::Base.Filesystem.#kw##rm)(::Array{Any,1}, ::Base.Filesystem.#rm, ::String) at ./<missing>:0
 [5] #rm#7(::Bool, ::Bool, ::Function, ::String) at ./file.jl:155
 [6] (::Base.Filesystem.#kw##rm)(::Array{Any,1}, ::Base.Filesystem.#rm, ::String) at ./<missing>:0
 [7] macro expansion at /home/vagrant/.julia/v0.6/PyCallJLD/test/runtests.jl:22 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyCallJLD/test/runtests.jl, in expression starting on line 8
==============================[ ERROR: PyCallJLD ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PyCallJLD/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PyCallJLD had test errors

>>> End of log
