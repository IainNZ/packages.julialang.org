>>> 'Pkg.add("GaussianProcesses")' log
INFO: Cloning cache of GaussianProcesses from https://github.com/STOR-i/GaussianProcesses.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.6.1
INFO: Installing DiffBase v0.2.0
INFO: Installing Distances v0.5.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing GaussianProcesses v0.4.0
INFO: Installing LineSearches v2.2.1
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.6
INFO: Installing Optim v0.9.3
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing RealInterface v0.0.3
INFO: Installing ScikitLearnBase v0.3.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StaticArrays v0.6.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of GaussianProcesses
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GaussianProcesses")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1194.3046875 MB free)
Uptime: 62586.0 sec
Load Avg:  1.02685546875  1.00537109375  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4109388 s       6935 s     178428 s    1032630 s         40 s
#2  3499 MHz    1176029 s         82 s     112176 s    4864838 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GaussianProcesses             0.4.0
 - JSON                          0.13.0
18 additional packages:
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.29.0
 - DataStructures                0.6.1
 - DiffBase                      0.2.0
 - Distances                     0.5.0
 - ForwardDiff                   0.5.0
 - LineSearches                  2.2.1
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.6
 - Optim                         0.9.3
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - RealInterface                 0.0.3
 - ScikitLearnBase               0.3.0
 - SpecialFunctions              0.2.0
 - StaticArrays                  0.6.1
INFO: Computing test dependencies for GaussianProcesses...
INFO: No packages to install, update or remove
INFO: Testing GaussianProcesses

WARNING: deprecated syntax "typealias MatF64 AbstractMatrix{Float64}" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GaussianProcesses.jl:15.
Use "const MatF64 = AbstractMatrix{Float64}" instead.

WARNING: deprecated syntax "typealias VecF64 AbstractVector{Float64}" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GaussianProcesses.jl:16.
Use "const VecF64 = AbstractVector{Float64}" instead.

WARNING: deprecated syntax "abstract Mean" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/means/meanFunctions.jl:6.
Use "abstract type Mean end" instead.

WARNING: deprecated syntax "abstract Kernel" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/kernels.jl:6.
Use "abstract type Kernel end" instead.

WARNING: deprecated syntax "abstract KernelData" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/kernels.jl:15.
Use "abstract type KernelData end" instead.

WARNING: deprecated syntax "abstract Stationary<:Kernel" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:7.
Use "abstract type Stationary<:Kernel end" instead.

WARNING: deprecated syntax "abstract StationaryData<:KernelData" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:8.
Use "abstract type StationaryData<:KernelData end" instead.

WARNING: deprecated syntax "abstract Isotropic<:Stationary" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:70.
Use "abstract type Isotropic<:Stationary end" instead.

WARNING: deprecated syntax "abstract StationaryARD<:Stationary" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:108.
Use "abstract type StationaryARD<:Stationary end" instead.

WARNING: deprecated syntax "abstract MaternIso<:Isotropic" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/mat.jl:3.
Use "abstract type MaternIso<:Isotropic end" instead.

WARNING: deprecated syntax "abstract MaternARD<:StationaryARD" at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/mat.jl:4.
Use "abstract type MaternARD<:StationaryARD end" instead.
Running test_utils.jl...
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:57
 [3] GaussianProcesses.SEArd(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/se_ard.jl:15
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_utils.jl, in expression starting on line 9
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] GaussianProcesses.KernelData(::GaussianProcesses.SEArd, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:116
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_utils.jl, in expression starting on line 10
WARNING: @test_approx_eq is deprecated, use `@test distance(kern, X, data) ≈ distance(kern, X)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1052
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_utils.jl, in expression starting on line 12
Running test_GP.jl...
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sin(::Array{Float64,1}) at ./deprecated.jl:57
 [3] anonymous at ./<missing>:?
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 8
WARNING: @test_approx_eq_eps is deprecated, use `@test maximum(abs(gp.y - y_pred)) ≈ 0.0 atol=0.0001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 16
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] #predict#17(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:206
 [4] predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:201
 [5] test_pred_matches_obs(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:17
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 21
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] test_pred_matches_obs(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:18
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 21
WARNING: @test_approx_eq_eps is deprecated, use `@test maximum(abs(gp_sk.y - y_pred)) ≈ 0.0 atol=0.0001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1039
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 23
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] #predict#17(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:206
 [4] (::GaussianProcesses.#kw##predict)(::Array{Any,1}, ::GaussianProcesses.#predict, ::GaussianProcesses.GP, ::Array{Float64,2}) at ./<missing>:0
 [5] #predict#26(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/glue/ScikitLearn.jl:10
 [6] predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/glue/ScikitLearn.jl:10
 [7] sk_test_pred_matches_obs() at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:25
 [8] include_from_node1(::String) at ./loading.jl:569
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 29
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] sk_test_pred_matches_obs() at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:26
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 29
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] #predict#17(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:206
 [4] predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:201
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 35
Running test_optim.jl...
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] #get_optim_target#22(::Bool, ::Bool, ::Bool, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:26
 [4] (::GaussianProcesses.#kw##get_optim_target)(::Array{Any,1}, ::GaussianProcesses.#get_optim_target, ::GaussianProcesses.GP) at ./<missing>:0
 [5] #optimize!#21(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##49#51,LineSearches.HagerZhang{Float64}}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:17
 [6] test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl:14
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] #get_optim_target#22(::Bool, ::Bool, ::Bool, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:27
 [4] (::GaussianProcesses.#kw##get_optim_target)(::Array{Any,1}, ::GaussianProcesses.#get_optim_target, ::GaussianProcesses.GP) at ./<missing>:0
 [5] #optimize!#21(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##49#51,LineSearches.HagerZhang{Float64}}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:17
 [6] test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl:14
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
ERROR: LoadError: LoadError: UndefVarError: DifferentiableFunction not defined
Stacktrace:
 [1] #get_optim_target#22(::Bool, ::Bool, ::Bool, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:74
 [2] (::GaussianProcesses.#kw##get_optim_target)(::Array{Any,1}, ::GaussianProcesses.#get_optim_target, ::GaussianProcesses.GP) at ./<missing>:0
 [3] #optimize!#21(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##49#51,LineSearches.HagerZhang{Float64}}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:17
 [4] test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/runtests.jl, in expression starting on line 12
==========================[ ERROR: GaussianProcesses ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/GaussianProcesses/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: GaussianProcesses had test errors

>>> End of log
