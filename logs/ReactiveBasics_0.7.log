>>> 'Pkg.add("ReactiveBasics")' log
[ Info: Cloning cache of ReactiveBasics from https://github.com/tshort/ReactiveBasics.jl.git
[ Info: Installing DocStringExtensions v0.4.2
[ Info: Installing ReactiveBasics v0.2.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ReactiveBasics
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReactiveBasics")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1600423 s       5672 s      84124 s     430338 s         12 s
       #2  3500 MHz     317370 s       1723 s      33886 s    2113862 s          0 s
       
  Memory: 2.93927001953125 GB (764.39453125 MB free)
  Uptime: 25134.0 sec
  Load Avg:  1.0029296875  1.001953125  1.0078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - ReactiveBasics                0.2.1
3 additional packages:
 - Compat                        0.46.0
 - DocStringExtensions           0.4.2
 - Nullables                     0.0.3
[ Info: Computing test dependencies for ReactiveBasics...
[ Info: Installing FactCheck v0.4.3
[ Info: Testing ReactiveBasics
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:43.
│ Use `mutable struct` instead.
└ @ nothing ReactiveBasics.jl:43
┌ Warning: Deprecated syntax `(((if (call == i j) x (. (ref us j) 'value)) for j = 1:length(us))...)` at /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:93.
│ Use `(((if (call == i j) x (. (ref us j) 'value)) for j = 1:length(us))...,)` instead.
└ @ nothing ReactiveBasics.jl:93
┌ Warning: Deprecated syntax `(zip_vals...)` at /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:193.
│ Use `(zip_vals...,)` instead.
└ @ nothing ReactiveBasics.jl:193
┌ Warning: Deprecated syntax `parametric method syntax Signal{T}(::Type{T}, val)` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:50.
│ Use `Signal(#unused#::Type{T}, val) where T` instead.
└ @ nothing ReactiveBasics.jl:50
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{T}(::Type{Signal{T}})` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:52.
│ Use `Base.eltype(#unused#::Type{Signal{T}}) where T` instead.
└ @ nothing ReactiveBasics.jl:52
┌ Warning: Deprecated syntax `parametric method syntax Base.filter{T}(f, default::T, u::Signal{T})` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:237.
│ Use `Base.filter(f, default::T, u::Signal{T}) where T` instead.
└ @ nothing ReactiveBasics.jl:237
┌ Warning: Deprecated syntax `parametric method syntax filterwhen{T}(predicate::Signal{Bool}, default::T, u::Signal{T})` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:249.
│ Use `filterwhen(predicate::Signal{Bool}, default::T, u::Signal{T}) where T` instead.
└ @ nothing ReactiveBasics.jl:249
┌ Warning: Deprecated syntax `parametric method syntax droprepeats{T}(input::Signal{T})` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:315.
│ Use `droprepeats(input::Signal{T}) where T` instead.
└ @ nothing ReactiveBasics.jl:315
┌ Warning: Deprecated syntax `parametric method syntax sampleon{T}(a::Signal, b::Signal{T})` around /home/vagrant/.julia/v0.7/ReactiveBasics/src/ReactiveBasics.jl:341.
│ Use `sampleon(a::Signal, b::Signal{T}) where T` instead.
└ @ nothing ReactiveBasics.jl:341
ERROR: LoadError: LoadError: syntax: extra token "Result" after end of expression
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] _require(::Symbol) at ./loading.jl:453
 [4] require(::Symbol) at ./loading.jl:333
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:521
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/FactCheck/src/FactCheck.jl:45
in expression starting at /home/vagrant/.julia/v0.7/ReactiveBasics/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for ReactiveBasics
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ReactiveBasics/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
[ Info: Removing FactCheck v0.4.3
ERROR: ReactiveBasics had test errors

>>> End of log
