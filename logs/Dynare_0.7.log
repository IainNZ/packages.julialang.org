>>> 'Pkg.add("Dynare")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Dynare from https://github.com/DynareTeam/Dynare.jl.git
[ Info: Installing BinDeps v0.8.8
[ Info: Installing Calculus v0.3.1
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing DataStructures v0.8.2
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing Distances v0.6.0
[ Info: Installing Dynare v0.1.0
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing LineSearches v3.2.5
[ Info: Installing NLSolversBase v3.1.0
[ Info: Installing NLsolve v0.13.0
[ Info: Installing NaNMath v0.3.1
[ Info: Installing Parameters v0.8.1
[ Info: Installing SHA v0.5.7
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing URIParser v0.3.1
[ Info: Building SpecialFunctions
┌ Warning: `isalpha` is deprecated, use `isletter` instead.
│   caller = parse_url(::String) at parser.jl:210
└ @ URIParser parser.jl:210
┌ Warning: `isalpha` is deprecated, use `isletter` instead.
│   caller = parse_url(::String) at parser.jl:218
└ @ URIParser parser.jl:218
┌ Warning: `isalpha` is deprecated, use `isletter` instead.
│   caller = _isalnum at parser.jl:2 [inlined]
└ @ Core parser.jl:2
┌ Warning: `isalpha` is deprecated, use `isletter` instead.
│   caller = _isalnum at parser.jl:2 [inlined]
└ @ Core parser.jl:2
┌ Warning: `isalpha` is deprecated, use `isletter` instead.
│   caller = _isalnum at parser.jl:2 [inlined]
└ @ Core parser.jl:2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Dynare
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Dynare")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4962883 s       6572 s     338881 s    1685337 s         57 s
       #2  3500 MHz    1181965 s       3004 s     131460 s    6685479 s          1 s
       
  Memory: 2.939197540283203 GB (1204.89453125 MB free)
  Uptime: 81854.0 sec
  Load Avg:  0.9970703125  1.0126953125  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Dynare                        0.1.0
 - JSON                          0.17.2
20 additional packages:
 - BinDeps                       0.8.8
 - Calculus                      0.3.1
 - CommonSubexpressions          0.1.0
 - Compat                        0.64.0
 - DataStructures                0.8.2
 - DiffBase                      0.3.2
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - Distances                     0.6.0
 - ForwardDiff                   0.7.5
 - LineSearches                  3.2.5
 - NLSolversBase                 3.1.0
 - NLsolve                       0.13.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - Parameters                    0.8.1
 - SHA                           0.5.7
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Dynare
┌ Warning: `findin(a, b)` is deprecated, use `findall((in)(b), a)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = top-level scope at runtests.jl:2
└ @ Core runtests.jl:2
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dynare/src/Dynare.jl:10.
│ Use `mutable struct` instead.
└ @ nothing Dynare.jl:10
WARNING: importing deprecated binding Base.gradient into NLSolversBase.
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:60
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:61
WARNING: importing deprecated binding Base.clear! into LineSearches.
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/types.jl:20
WARNING: importing deprecated binding Base.Associative into LineSearches.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/backtracking.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/strongwolfe.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/morethuente.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: importing deprecated binding Base.@sprintf into LineSearches.
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:319
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/static.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: importing deprecated binding Base.SparseMatrixCSC into NLsolve.
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:105
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:113
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:113
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:122
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:130
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:130
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/differentiable_functions.jl:139
┌ Warning: Deprecated syntax `parametric method syntax SolverState{T <: Real}(i::Integer, fnorm::T, stepnorm::T)` around /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:13.
│ Use `SolverState(i::Integer, fnorm::T, stepnorm::T) where T <: Real` instead.
└ @ nothing solver_state_results.jl:13
WARNING: importing deprecated binding Base.@printf into NLsolve.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:22
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:22
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:42
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:42
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve_func_defs.jl:1
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve_func_defs.jl:1
┌ Warning: Deprecated syntax `parametric method syntax nlsolve{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1)` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve_func_defs.jl:15.
│ Use `nlsolve(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1) where T` instead.
└ @ nothing nlsolve_func_defs.jl:15
┌ Warning: Deprecated syntax `parametric method syntax nlsolve{T}(f!, g!, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0)` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve_func_defs.jl:52.
│ Use `nlsolve(f!, g!, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0) where T` instead.
└ @ nothing nlsolve_func_defs.jl:52
┌ Warning: Deprecated syntax `parametric method syntax nlsolve{T}(f!, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0, autodiff::Bool = false)` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve_func_defs.jl:75.
│ Use `nlsolve(f!, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = no_linesearch!, factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0, autodiff::Bool = false) where T` instead.
└ @ nothing nlsolve_func_defs.jl:75
┌ Warning: Deprecated syntax `parametric method syntax mcpsolve{T}(df::AbstractDifferentiableMultivariateFunction, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true)` around /home/vagrant/.julia/v0.7/NLsolve/src/mcp_func_defs.jl:30.
│ Use `mcpsolve(df::AbstractDifferentiableMultivariateFunction, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true) where T` instead.
└ @ nothing mcp_func_defs.jl:30
┌ Warning: Deprecated syntax `parametric method syntax mcpsolve{T}(f!, g!, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true)` around /home/vagrant/.julia/v0.7/NLsolve/src/mcp_func_defs.jl:54.
│ Use `mcpsolve(f!, g!, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true) where T` instead.
└ @ nothing mcp_func_defs.jl:54
┌ Warning: Deprecated syntax `parametric method syntax mcpsolve{T}(f!, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true, autodiff::Bool = false)` around /home/vagrant/.julia/v0.7/NLsolve/src/mcp_func_defs.jl:78.
│ Use `mcpsolve(f!, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch! = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true, autodiff::Bool = false) where T` instead.
└ @ nothing mcp_func_defs.jl:78
┌ Warning: Deprecated syntax `parametric method syntax wdot{T}(wx::AbstractVector{T}, x::AbstractVector{T}, wy::AbstractVector{T}, y::AbstractVector{T})` around /home/vagrant/.julia/v0.7/NLsolve/src/utils.jl:3.
│ Use `wdot(wx::AbstractVector{T}, x::AbstractVector{T}, wy::AbstractVector{T}, y::AbstractVector{T}) where T` instead.
└ @ nothing utils.jl:3
┌ Warning: Deprecated syntax `parametric method syntax wnorm{T}(w::AbstractVector{T}, x::AbstractVector{T})` around /home/vagrant/.julia/v0.7/NLsolve/src/utils.jl:10.
│ Use `wnorm(w::AbstractVector{T}, x::AbstractVector{T}) where T` instead.
└ @ nothing utils.jl:10
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/utils.jl:117
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/utils.jl:129
┌ Warning: Deprecated syntax `parametric method syntax newton_{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch!)` around /home/vagrant/.julia/v0.7/NLsolve/src/newton.jl:39.
│ Use `newton_(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch!) where T` instead.
└ @ nothing newton.jl:39
┌ Warning: Deprecated syntax `parametric method syntax newton{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch!)` around /home/vagrant/.julia/v0.7/NLsolve/src/newton.jl:159.
│ Use `newton(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch!) where T` instead.
└ @ nothing newton.jl:159
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/NLsolve/src/trust_region.jl:33.
│ Use `1 ./` instead.
└ @ nothing trust_region.jl:33
┌ Warning: Deprecated syntax `parametric method syntax dogleg!{T}(p::AbstractVector{T}, r::AbstractVector{T}, d::AbstractVector{T}, J::AbstractMatrix{T}, delta::Real)` around /home/vagrant/.julia/v0.7/NLsolve/src/trust_region.jl:25.
│ Use `dogleg!(p::AbstractVector{T}, r::AbstractVector{T}, d::AbstractVector{T}, J::AbstractMatrix{T}, delta::Real) where T` instead.
└ @ nothing trust_region.jl:25
┌ Warning: Deprecated syntax `parametric method syntax trust_region_{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::T, autoscale::Bool)` around /home/vagrant/.julia/v0.7/NLsolve/src/trust_region.jl:93.
│ Use `trust_region_(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::T, autoscale::Bool) where T` instead.
└ @ nothing trust_region.jl:93
┌ Warning: Deprecated syntax `parametric method syntax trust_region{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::Real, autoscale::Bool)` around /home/vagrant/.julia/v0.7/NLsolve/src/trust_region.jl:207.
│ Use `trust_region(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::Real, autoscale::Bool) where T` instead.
└ @ nothing trust_region.jl:207
┌ Warning: Deprecated syntax `parametric method syntax anderson_{T}(df::AbstractDifferentiableMultivariateFunction, x0::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, β::Real)` around /home/vagrant/.julia/v0.7/NLsolve/src/anderson.jl:15.
│ Use `anderson_(df::AbstractDifferentiableMultivariateFunction, x0::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, β::Real) where T` instead.
└ @ nothing anderson.jl:15
┌ Warning: Use of final value of loop variable `n` around /home/vagrant/.julia/v0.7/NLsolve/src/anderson.jl:81 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing anderson.jl:81
┌ Warning: Deprecated syntax `parametric method syntax anderson{T}(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, beta::Real)` around /home/vagrant/.julia/v0.7/NLsolve/src/anderson.jl:97.
│ Use `anderson(df::AbstractDifferentiableMultivariateFunction, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, beta::Real) where T` instead.
└ @ nothing anderson.jl:97
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
ERROR: LoadError: LoadError: ArgumentError: Module Suppressor not found in current path.
Run `Pkg.add("Suppressor")` to install the Suppressor package.
Stacktrace:
 [1] require(::Module, ::Symbol) at ./loading.jl:864
 [2] include at ./boot.jl:314 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] _require(::Base.PkgId) at ./loading.jl:993
 [5] require(::Base.PkgId) at ./loading.jl:874
 [6] require(::Module, ::Symbol) at ./loading.jl:869
 [7] include at ./boot.jl:314 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1067
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] exec_options(::Base.JLOptions) at ./client.jl:327
 [11] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/Dynare/src/Dynare.jl:4
in expression starting at /home/vagrant/.julia/v0.7/Dynare/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for Dynare
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Dynare/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
ERROR: Dynare had test errors

>>> End of log
