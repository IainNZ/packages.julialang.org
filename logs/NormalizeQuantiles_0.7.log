>>> 'Pkg.add("NormalizeQuantiles")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of NormalizeQuantiles from https://github.com/oheil/NormalizeQuantiles.jl.git
[ Info: Installing NormalizeQuantiles v0.5.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of NormalizeQuantiles
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NormalizeQuantiles")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4983
Commit 7e2ce0e543 (2018-05-02 20:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    5481535 s        333 s     398511 s    1383615 s         70 s
       #2  3499 MHz    1331102 s       7296 s     148731 s    6872597 s          1 s
       
  Memory: 2.939197540283203 GB (818.3984375 MB free)
  Uptime: 85317.0 sec
  Load Avg:  0.9931640625  0.9833984375  0.98779296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - NormalizeQuantiles            0.5.2
2 additional packages:
 - Compat                        0.64.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing NormalizeQuantiles
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:91 [inlined]
└ @ Core NormalizeQuantiles.jl:91
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:108 [inlined]
└ @ Core NormalizeQuantiles.jl:108
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:108 [inlined]
└ @ Core NormalizeQuantiles.jl:108
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:92 [inlined]
└ @ Core NormalizeQuantiles.jl:92
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:108 [inlined]
└ @ Core NormalizeQuantiles.jl:108
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:108 [inlined]
└ @ Core NormalizeQuantiles.jl:108
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = macro expansion at NormalizeQuantiles.jl:108 [inlined]
└ @ Core NormalizeQuantiles.jl:108
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = #sampleRanks#17(::qnTiesMethods, ::Bool, ::Bool, ::Function, ::Array{Union{Missing, Float64},2}) at NormalizeQuantiles.jl:196
└ @ NormalizeQuantiles NormalizeQuantiles.jl:196
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = setRank!(::Array{Int64,1}, ::Int64, ::qnTiesMethods, ::Array{Union{Missing, Int64},1}, ::Bool, ::Dict{Int64,Array{Int64,N} where N}) at NormalizeQuantiles.jl:249
└ @ NormalizeQuantiles NormalizeQuantiles.jl:249
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = setRank!(::Array{Int64,1}, ::Int64, ::qnTiesMethods, ::Array{Union{Missing, Int64},1}, ::Bool, ::Dict{Int64,Array{Int64,N} where N}) at NormalizeQuantiles.jl:256
└ @ NormalizeQuantiles NormalizeQuantiles.jl:256
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = setRank!(::Array{Int64,1}, ::Int64, ::qnTiesMethods, ::Array{Union{Missing, Int64},1}, ::Bool, ::Dict{Int64,Array{Int64,N} where N}) at NormalizeQuantiles.jl:292
└ @ NormalizeQuantiles NormalizeQuantiles.jl:292
[ Info: NormalizeQuantiles tests passed

>>> End of log
