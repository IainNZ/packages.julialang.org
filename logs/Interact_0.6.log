>>> 'Pkg.add("Interact")' log
INFO: Cloning cache of Interact from https://github.com/JuliaGizmos/Interact.jl.git
INFO: Installing DataStructures v0.7.4
INFO: Installing Interact v0.6.4
INFO: Installing Reactive v0.6.0
INFO: Building Interact
WARNING: IJulia is not installed. run Pkg.build("Interact")
once you install IJulia to use Interact inside IJulia
INFO: Package database updated

>>> 'Pkg.test("Interact")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2150.6640625 MB free)
Uptime: 27481.0 sec
Load Avg:  0.9931640625  0.96826171875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1640616 s       7015 s      90018 s     606619 s         18 s
#2  3500 MHz     324915 s         98 s      40744 s    2330366 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Interact                      0.6.4
 - JSON                          0.17.1
4 additional packages:
 - Compat                        0.55.1
 - DataStructures                0.7.4
 - Nullables                     0.0.3
 - Reactive                      0.6.0
INFO: Computing test dependencies for Interact...
INFO: Installing BaseTestNext v0.2.2
INFO: Installing BinDeps v0.8.7
INFO: Installing Conda v0.7.1
INFO: Installing IJulia v1.7.0
INFO: Installing MbedTLS v0.5.5
INFO: Installing SHA v0.5.6
INFO: Installing URIParser v0.3.0
INFO: Installing ZMQ v0.5.1
INFO: Building Conda
INFO: Building MbedTLS
Using system libraries...
INFO: Building ZMQ
INFO: Building IJulia
INFO: Installing Jupyter via the Conda package.
Solving environment: ...working... done

# All requested packages already installed.

INFO: Found Jupyter version 4.4.0: /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/jupyter
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 12309  100 12309    0     0   120k      0 --:--:-- --:--:-- --:--:--  121k
INFO: Installing Julia kernelspec julia-0.6
[InstallKernelSpec] Removing existing kernelspec in /home/vagrant/.local/share/jupyter/kernels/julia-0.6
[InstallKernelSpec] Installed kernelspec julia-0.6 in /home/vagrant/.local/share/jupyter/kernels/julia-0.6
INFO: Testing Interact
Test Summary: | Pass  Total
statedict     |    2      2
Test Summary: | Pass  Total
parse         |    6      6
<div id="interact-js-shim">
    <script charset="utf-8">
(function (IPython, $, _, MathJax) {
    $.event.special.destroyed = {
	remove: function(o) {
	    if (o.handler) {
		o.handler.apply(this, arguments)
	    }
	}
    }

    var OutputArea = IPython.version >= "4.0.0" ? require("notebook/js/outputarea").OutputArea : IPython.OutputArea;

    var redrawValue = function (container, type, val) {
	var selector = $("<div/>");
	var oa = new OutputArea(_.extend(selector, {
	    selector: selector,
	    prompt_area: true,
	    events: IPython.events,
	    keyboard_manager: IPython.keyboard_manager
	})); // Hack to work with IPython 2.1.0

	switch (type) {
	case "image/png":
            var _src = 'data:' + type + ';base64,' + val;
	    $(container).find("img").attr('src', _src);
	    break;
	case "text/latex":
		if (MathJax){
			var math = MathJax.Hub.getAllJax(container)[0];
			MathJax.Hub.Queue(["Text", math, val.replace(/^\${1,2}|\${1,2}$/g, '')]);
			break;
		}
	default:
	    var toinsert = OutputArea.append_map[type].apply(
		oa, [val, {}, selector]
	    );
	    $(container).empty().append(toinsert.contents());
	    selector.remove();
	}
    }


    $(document).ready(function() {
	function initComm(evt, data) {
	    var comm_manager = data.kernel.comm_manager;
        //_.extend(comm_manager.targets, require("widgets/js/widget"))
	    comm_manager.register_target("Signal", function (comm) {
            comm.on_msg(function (msg) {
                var val = msg.content.data.value;
                $(".signal-" + comm.comm_id).each(function() {
                var type = $(this).data("type");
                if (typeof(val[type]) !== "undefined" && val[type] !== null) {
                    redrawValue(this, type, val[type], type);
                }
                });
                delete val;
                delete msg.content.data.value;
            });
	    });

	    // coordingate with Comm and redraw Signals
	    // XXX: Test using Reactive here to improve performance
	    $([IPython.events]).on(
		'output_appended.OutputArea', function (event, type, value, md, toinsert) {
		    if (md && md.reactive) {
                // console.log(md.comm_id);
                toinsert.addClass("signal-" + md.comm_id);
                toinsert.data("type", type);
                // Signal back indicating the mimetype required
                var comm_manager = IPython.notebook.kernel.comm_manager;
                var comm = comm_manager.comms[md.comm_id];
                comm.then(function (c) {
                    c.send({action: "subscribe_mime",
                       mime: type});
                    toinsert.bind("destroyed", function() {
                        c.send({action: "unsubscribe_mime",
                               mime: type});
                    });
                })
		    }
	    });
	}

	try {
	    // try to initialize right away. otherwise, wait on the status_started event.
	    initComm(undefined, IPython.notebook);
	} catch (e) {
	    $([IPython.events]).on('kernel_created.Kernel kernel_created.Session', initComm);
	}
    });
})(IPython, jQuery, _, MathJax);
</script>
    <script>
        window.interactLoadedFlag = true
       $("#interact-js-shim").bind("destroyed", function () {
           if (window.interactLoadedFlag) {
               console.warn("JavaScript required by Interact will be removed if you remove this cell or run using Interact more than once.")
           }
       })
       $([IPython.events]).on("kernel_starting.Kernel kernel_restarting.Kernel", function () { window.interactLoadedFlag = false })
   </script>
</div>Test Summary: | Pass  Total
ijulia.jl     |    3      3
Interact.Options{:SelectionSlider,Any}(6: "input-4" = 5 Any , "i", 5, "5", 5, Interact.OptionDict(DataStructures.OrderedDict{Any,Any}("1"=>1,"2"=>2,"3"=>3,"4"=>4,"5"=>5,"6"=>6,"7"=>7,"8"=>8,"9"=>9,"10"=>10), Dict{Any,Any}(Pair{Any,Any}(7, "7"),Pair{Any,Any}(4, "4"),Pair{Any,Any}(9, "9"),Pair{Any,Any}(10, "10"),Pair{Any,Any}(2, "2"),Pair{Any,Any}(3, "3"),Pair{Any,Any}(5, "5"),Pair{Any,Any}(8, "8"),Pair{Any,Any}(6, "6"),Pair{Any,Any}(1, "1"))), Any[], Any[], true, "horizontal")Interact.Options{:ToggleButtons,Any}(8: "input-5" = x Any , "j", "x", "x", 0, Interact.OptionDict(DataStructures.OrderedDict{Any,Any}("x"=>"x","y"=>"y","z"=>"z"), Dict{Any,Any}(Pair{Any,Any}("x", "x"),Pair{Any,Any}("z", "z"),Pair{Any,Any}("y", "y"))), Any[], Any[], true, "horizontal")Interact.Options{:SelectionSlider,Any}(11: "input-6" = 5 Any , "i", 5, "5", 5, Interact.OptionDict(DataStructures.OrderedDict{Any,Any}("1"=>1,"2"=>2,"3"=>3,"4"=>4,"5"=>5,"6"=>6,"7"=>7,"8"=>8,"9"=>9,"10"=>10), Dict{Any,Any}(Pair{Any,Any}(7, "7"),Pair{Any,Any}(4, "4"),Pair{Any,Any}(9, "9"),Pair{Any,Any}(10, "10"),Pair{Any,Any}(2, "2"),Pair{Any,Any}(3, "3"),Pair{Any,Any}(5, "5"),Pair{Any,Any}(8, "8"),Pair{Any,Any}(6, "6"),Pair{Any,Any}(1, "1"))), Any[], Any[], true, "horizontal")Interact.Options{:ToggleButtons,Any}(13: "input-7" = x Any , "j", "x", "x", 0, Interact.OptionDict(DataStructures.OrderedDict{Any,Any}("x"=>"x","y"=>"y","z"=>"z"), Dict{Any,Any}(Pair{Any,Any}("x", "x"),Pair{Any,Any}("z", "z"),Pair{Any,Any}("y", "y"))), Any[], Any[], true, "horizontal")INFO: Interact tests passed
INFO: Removing BaseTestNext v0.2.2
INFO: Removing BinDeps v0.8.7
INFO: Removing Conda v0.7.1
INFO: Removing IJulia v1.7.0
INFO: Removing MbedTLS v0.5.5
INFO: Removing SHA v0.5.6
INFO: Removing URIParser v0.3.0
INFO: Removing ZMQ v0.5.1

>>> End of log
