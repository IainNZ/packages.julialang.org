>>> 'Pkg.add("DiffEqCallbacks")' log
INFO: Installing BinDeps v0.8.6
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBase v3.0.4
INFO: Installing DiffEqCallbacks v1.0.0
INFO: Installing DiffEqDiffTools v0.3.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.3
INFO: Installing Distances v0.5.0
INFO: Installing ForwardDiff v0.7.2
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing Juno v0.4.0
INFO: Installing LineSearches v3.2.5
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing Media v0.3.0
INFO: Installing Missings v0.2.5
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v4.2.0
INFO: Installing NLsolve v0.14.1
INFO: Installing NaNMath v0.3.0
INFO: Installing OrdinaryDiffEq v3.0.1
INFO: Installing Parameters v0.8.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing Roots v0.5.0
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.5.1
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqCallbacks
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqCallbacks")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1482.3984375 MB free)
Uptime: 57697.0 sec
Load Avg:  1.0419921875  1.0146484375  1.06005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3750504 s       7695 s     174573 s    1004964 s         36 s
#2  3499 MHz    1148450 s         98 s     101088 s    4415330 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqCallbacks               1.0.0
 - JSON                          0.16.4
36 additional packages:
 - BinDeps                       0.8.6
 - CommonSubexpressions          0.0.1
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    3.0.4
 - DiffEqDiffTools               0.3.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - ForwardDiff                   0.7.2
 - FunctionWrappers              0.1.0
 - GenericSVD                    0.1.0
 - Juno                          0.4.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Media                         0.3.0
 - Missings                      0.2.5
 - MuladdMacro                   0.0.2
 - NLSolversBase                 4.2.0
 - NLsolve                       0.14.1
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - OrdinaryDiffEq                3.0.1
 - Parameters                    0.8.1
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Roots                         0.5.0
 - SHA                           0.5.6
 - SimpleTraits                  0.5.1
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
INFO: Computing test dependencies for DiffEqCallbacks...
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Conda v0.7.1
INFO: Installing Contour v0.4.0
INFO: Installing DiffEqPDEBase v0.4.0
INFO: Installing DiffEqProblemLibrary v1.0.0
INFO: Installing Distributions v0.15.0
INFO: Installing EllipsisNotation v0.3.0
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing PDMats v0.8.0
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing QuadGK v0.2.0
INFO: Installing Rmath v0.3.2
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing StatsBase v0.19.5
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.3.0
INFO: Installing UnicodePlots v0.2.6
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building Plots
INFO: Testing DiffEqCallbacks
Test Summary: | Pass  Total
AutoAbstol    |    7      7
 30.277767 seconds (18.97 M allocations: 851.041 MiB, 1.13% gc time)
Test Summary: | Pass  Total
Domain tests  |   17     17
 45.267045 seconds (28.48 M allocations: 1.452 GiB, 1.23% gc time)
  0.010022 seconds (12.80 k allocations: 1.776 MiB)
  0.009305 seconds (12.87 k allocations: 1.777 MiB)
Manifold tests: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}
  This may have arisen from a call to the constructor RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}(...),
  since type constructors fall back to convert methods.
  Stacktrace:
   [1] #OnceDifferentiable#4(::Bool, ::Type{T} where T, ::DiffEqCallbacks.NonAutonomousFunction{#g,true}, ::Function, ::Function, ::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLSolversBase/src/objective_types/oncedifferentiable.jl:28
   [2] NLSolversBase.OnceDifferentiable(::DiffEqCallbacks.NonAutonomousFunction{#g,true}, ::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::Symbol, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.6/NLsolve/src/objectives/autodiff.jl:28
   [3] (::OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true})(::Type{Val{:init}}, ::DiffEqCallbacks.NonAutonomousFunction{#g,true}, ::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/misc_utils.jl:35
   [4] Manifold_initialize at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:41 [inlined]
   [5] initialize!(::RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::Float64, ::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,Void,Float64,Float64,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},DiffEqBase.ODESolution{Float64,2,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Void,Void,Array{Float64,1},Array{Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##7#8,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Array{Float64,1},Array{Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},OrdinaryDiffEq.Vern7Cache{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},##7#8,Void,OrdinaryDiffEq.Vern7Cache{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##7#8,DiffEqCallbacks.ManifoldProjection{true,DiffEqCallbacks.NonAutonomousFunction{#g,true},OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true},Dict{Symbol,Any}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}}, ::Bool, ::DiffEqBase.DiscreteCallback{DiffEqCallbacks.##7#8,DiffEqCallbacks.ManifoldProjection{true,DiffEqCallbacks.NonAutonomousFunction{#g,true},OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true},Dict{Symbol,Any}},DiffEqCallbacks.#Manifold_initialize}) at /home/vagrant/.julia/v0.6/DiffEqBase/src/callbacks.jl:90
   [6] initialize_callbacks!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,Void,Float64,Float64,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},DiffEqBase.ODESolution{Float64,2,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Void,Void,Array{Float64,1},Array{Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##7#8,Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Array{Float64,1},Array{Array{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},OrdinaryDiffEq.Vern7Cache{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},##7#8,Void,OrdinaryDiffEq.Vern7Cache{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##7#8,DiffEqCallbacks.ManifoldProjection{true,DiffEqCallbacks.NonAutonomousFunction{#g,true},OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true},Dict{Symbol,Any}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void,Int64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}}, ::Bool) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:397
   [7] #init#1309(::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool, ::Rational{Int64}, ::Void, ::Void, ::Int64, ::Rational{Int64}, ::Int64, ::Int64, ::Rational{Int64}, ::Bool, ::Int64, ::Rational{Int64}, ::Rational{Int64}, ::Int64, ::Float64, ::Float64, ::DiffEqBase.#ODE_DEFAULT_NORM, ::DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN, ::DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::String, ::DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE, ::Void, ::DiffEqBase.DiscreteCallback{DiffEqCallbacks.##7#8,DiffEqCallbacks.ManifoldProjection{true,DiffEqCallbacks.NonAutonomousFunction{#g,true},OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true},Dict{Symbol,Any}},DiffEqCallbacks.#Manifold_initialize}, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:298
   [8] (::DiffEqBase.#kw##init)(::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0
   [9] #solve#1308(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:6
   [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODEProblem{RecursiveArrayTools.ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,true,Void,##7#8,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
   [11] include_from_node1(::String) at ./loading.jl:576
   [12] include(::String) at ./sysimg.jl:14
   [13] macro expansion at /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl:8 [inlined]
   [14] macro expansion at ./test.jl:860 [inlined]
   [15] macro expansion at ./util.jl:237 [inlined]
   [16] anonymous at ./<missing>:?
   [17] include_from_node1(::String) at ./loading.jl:576
   [18] include(::String) at ./sysimg.jl:14
   [19] process_options(::Base.JLOptions) at ./client.jl:305
   [20] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/manifold_tests.jl, in expression starting on line 54
Test Summary:  | Pass  Error  Broken  Total
Manifold tests |    9      1       4     14
ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored, 4 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl, in expression starting on line 8
===========================[ ERROR: DiffEqCallbacks ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing ColorTypes v0.6.6
INFO: Removing Colors v0.8.2
INFO: Removing Conda v0.7.1
INFO: Removing Contour v0.4.0
INFO: Removing DiffEqPDEBase v0.4.0
INFO: Removing DiffEqProblemLibrary v1.0.0
INFO: Removing Distributions v0.15.0
INFO: Removing EllipsisNotation v0.3.0
INFO: Removing FixedPointNumbers v0.4.3
INFO: Removing Measures v0.1.0
INFO: Removing PDMats v0.8.0
INFO: Removing ParameterizedFunctions v3.0.0
INFO: Removing PlotThemes v0.2.0
INFO: Removing PlotUtils v0.4.4
INFO: Removing Plots v0.15.0
INFO: Removing QuadGK v0.2.0
INFO: Removing Rmath v0.3.2
INFO: Removing Showoff v0.1.1
INFO: Removing SortingAlgorithms v0.2.0
INFO: Removing StatsBase v0.19.5
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.3.0
INFO: Removing UnicodePlots v0.2.6
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DiffEqCallbacks had test errors

>>> End of log
