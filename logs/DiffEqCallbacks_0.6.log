>>> 'Pkg.add("DiffEqCallbacks")' log
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.7.0
INFO: Installing DiffEqCallbacks v0.1.1
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqCallbacks
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqCallbacks")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1744.625 MB free)
Uptime: 40940.0 sec
Load Avg:  1.00634765625  1.0146484375  1.11083984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2648859 s       5130 s     121904 s     710878 s         35 s
#2  3501 MHz     754231 s       1942 s      92908 s    3149610 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqCallbacks               0.1.1
 - JSON                          0.12.0
24 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.7.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
INFO: Computing test dependencies for DiffEqCallbacks...
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.2.1
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqPDEBase v0.3.2
INFO: Installing DiffEqProblemLibrary v0.7.0
INFO: Installing Distributions v0.13.0
INFO: Installing EllipsisNotation v0.1.0
INFO: Installing FileIO v0.3.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Installing OrdinaryDiffEq v2.4.0
INFO: Installing PDMats v0.6.0
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing QuadGK v0.1.2
INFO: Installing Rmath v0.1.6
INFO: Installing Roots v0.3.1
INFO: Installing SHA v0.3.2
INFO: Installing StatsBase v0.15.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building HDF5
INFO: Testing DiffEqCallbacks
Test Summary: | Pass  Total
AutoAbstol    |    2      2
 16.442984 seconds (6.62 M allocations: 658.459 MiB, 1.91% gc time)
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] nlsolve(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:13
 [6] NLSOLVEJL_SETUP at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:36 [inlined]
 [7] (::DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}})(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:56
 [8] apply_discrete_callback! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/callbacks.jl:187 [inlined]
 [9] handle_callbacks! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:214 [inlined]
 [10] loopfooter! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:183 [inlined]
 [11] solve!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:309
 [12] #solve#87(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:7
 [13] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] macro expansion at /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl:7 [inlined]
 [17] macro expansion at ./test.jl:856 [inlined]
 [18] macro expansion at ./util.jl:237 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:569
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/manifold_tests.jl, in expression starting on line 18
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] nlsolve(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:13
 [7] NLSOLVEJL_SETUP at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:36 [inlined]
 [8] (::DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}})(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:56
 [9] apply_discrete_callback! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/callbacks.jl:187 [inlined]
 [10] handle_callbacks! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:214 [inlined]
 [11] loopfooter! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:183 [inlined]
 [12] solve!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:309
 [13] #solve#87(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:7
 [14] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl:7 [inlined]
 [18] macro expansion at ./test.jl:856 [inlined]
 [19] macro expansion at ./util.jl:237 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/manifold_tests.jl, in expression starting on line 18
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] nlsolve(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:13
 [7] NLSOLVEJL_SETUP at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:36 [inlined]
 [8] (::DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}})(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DiffEqCallbacks/src/manifold.jl:56
 [9] apply_discrete_callback! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/callbacks.jl:187 [inlined]
 [10] handle_callbacks! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:214 [inlined]
 [11] loopfooter! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/integrator_utils.jl:183 [inlined]
 [12] solve!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Vern7,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Void,Void,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}},OrdinaryDiffEq.Vern7,OrdinaryDiffEq.InterpolationData{##1#2,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}}}},Array{Float64,1},##1#2,Void,OrdinaryDiffEq.Vern7Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},OrdinaryDiffEq.Vern7ConstantCache{Float64,Float64}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqCallbacks.##12#13,DiffEqCallbacks.ManifoldProjection{DiffEqCallbacks.NLSOLVEJL_SETUP{0,true}},DiffEqCallbacks.#Manifold_initialize}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void},Array{Float64,1}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:309
 [13] #solve#87(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:7
 [14] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,##1#2,Void,UniformScaling{Int64}}, ::OrdinaryDiffEq.Vern7, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
 [15] include_from_node1(::String) at ./loading.jl:569
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/runtests.jl:7 [inlined]
 [18] macro expansion at ./test.jl:856 [inlined]
 [19] macro expansion at ./util.jl:237 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqCallbacks/test/manifold_tests.jl, in expression starting on line 18
Test Summary:  | Pass  Total
Manifold tests |    2      2
 23.799943 seconds (15.78 M allocations: 963.566 MiB, 2.78% gc time)
elapsed time: 42.495316013 seconds
INFO: DiffEqCallbacks tests passed
INFO: Removing BinDeps v0.6.0
INFO: Removing Blosc v0.2.1
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqPDEBase v0.3.2
INFO: Removing DiffEqProblemLibrary v0.7.0
INFO: Removing Distributions v0.13.0
INFO: Removing EllipsisNotation v0.1.0
INFO: Removing FileIO v0.3.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing HDF5 v0.8.1
INFO: Removing JLD v0.6.10
INFO: Removing LegacyStrings v0.2.1
INFO: Removing OrdinaryDiffEq v2.4.0
INFO: Removing PDMats v0.6.0
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing QuadGK v0.1.2
INFO: Removing Rmath v0.1.6
INFO: Removing Roots v0.3.1
INFO: Removing SHA v0.3.2
INFO: Removing StatsBase v0.15.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.1.8
INFO: Removing VectorizedRoutines v0.0.2

>>> End of log
