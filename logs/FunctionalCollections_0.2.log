>>> 'Pkg.add("FunctionalCollections")' log

>>> 'using FunctionalCollections' log

>>> test log

[1mSparse Bitmapped Vector Tries 
[0m
[32m32 facts verified.[0m


[1mPersistent Vectors 
[0m
[32m29 facts verified.[0m


[1mPersistent Maps 
[0m
[32m2 facts verified.[0m


[1mPersistent Array Maps 
[0m
[31mFailure[0m :: (line:86) :: map :: got {(1,2),(2,3),(3,4)}
:(map(kv->begin  # /home/idunning/pkgtest/.julia/v0.2/FunctionalCollections/test/./PersistentMapTest.jl, line 86:
... truncated ...
[0m
[31mError[0m :: (line:50) :: map
Test error: :(map(x->begin  # /home/idunning/pkgtest/.julia/v0.2/FunctionalCollections/test/./PersistentListTest.jl, line 50:
                    +(x,1)
                end,PersistentList([1,2,3,4,5]))=>PersistentList([2,3,4,5,6]))
no method convert(Type{PersistentList{Int64}},EmptyList{Int64})
 in map at reduce.jl:110
 in anonymous at /home/idunning/pkgtest/.julia/v0.2/FactCheck/src/FactCheck.jl:257
 in do_fact at /home/idunning/pkgtest/.julia/v0.2/FactCheck/src/FactCheck.jl:221
 in anonymous at no file:50
 in context at /home/idunning/pkgtest/.julia/v0.2/FactCheck/src/FactCheck.jl:306
 in anonymous at no file:49
 in facts at /home/idunning/pkgtest/.julia/v0.2/FactCheck/src/FactCheck.jl:326
 in include at boot.jl:238

Out of 21 total facts:
[32m  Verified: 20[0m
[31m  Failed:   0[0m
[31m  Errored:  1[0m


[1mPersistent Queues 
[0m
[32m15 facts verified.[0m


[1m@Persistent constructor macro 
[0m
[32m3 facts verified.[0m


>>> end of log
