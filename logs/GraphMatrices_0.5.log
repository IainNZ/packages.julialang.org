>>> 'Pkg.add("GraphMatrices")' log
INFO: Cloning cache of GraphMatrices from https://github.com/jpfairbanks/GraphMatrices.jl.git
INFO: Installing Docile v0.5.23
INFO: Installing FactCheck v0.4.3
INFO: Installing GraphMatrices v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GraphMatrices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GraphMatrices")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing GraphMatrices
WARNING: module GraphMatrices should explicitly import .* from Base
WARNING: module GraphMatrices should explicitly import == from Base
WARNING: module GraphMatrices should explicitly import * from Base
WARNING: The `=>` syntax is deprecated, use `-->` instead
constructors
  > Adjacency
WARNING: scale(x::AbstractVector,A::AbstractMatrix) is deprecated, use Diagonal(x) * A instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}) at ./deprecated.jl:50
 in convert(::Type{SparseMatrixCSC{Float64,Int64}}, ::GraphMatrices.StochasticAdjacency{Float64}) at /home/vagrant/.julia/v0.5/GraphMatrices/src/GraphMatrices.jl:256
 in do_fact(::TestGraphMatrices.##10#30, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in test_adjacency(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:30
 in context(::TestGraphMatrices.##253#257{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:152
 in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl, in expression starting on line 149
    Error :: (line:272) :: Adjacency
      Expression: convert(SparseMatrix{Float64},stochmat) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##9#29)(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##10#30, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_adjacency(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:30
       in context(::TestGraphMatrices.##253#257{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:152
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
WARNING: scale(A::AbstractMatrix,x::AbstractVector) is deprecated, use A * Diagonal(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at ./deprecated.jl:50
 in convert(::Type{SparseMatrixCSC{Float64,Int64}}, ::GraphMatrices.NormalizedAdjacency{Float64}) at /home/vagrant/.julia/v0.5/GraphMatrices/src/GraphMatrices.jl:256
 in do_fact(::TestGraphMatrices.##12#32, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in test_adjacency(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:31
 in context(::TestGraphMatrices.##253#257{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:152
 in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl, in expression starting on line 149
    Error :: (line:272) :: Adjacency
      Expression: convert(SparseMatrix{Float64},adjhat) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##11#31)(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##12#32, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_adjacency(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:31
       in context(::TestGraphMatrices.##253#257{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:152
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Adjacency
      Expression: convert(SparseMatrix{Float64},avgmat) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##13#33)(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##14#34, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_adjacency(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:32
       in context(::TestGraphMatrices.##253#257{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:152
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
  > Laplacian
    Error :: (line:272) :: Laplacian
      Expression: lapl --> truthy
      UndefVarError: truthy not defined
       in #43 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260 [inlined]
       in (::TestGraphMatrices.##44#79{GraphMatrices.CombinatorialLaplacian{Float64},TestGraphMatrices.##43#78})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestGraphMatrices.##44#79{GraphMatrices.CombinatorialLaplacian{Float64},TestGraphMatrices.##43#78}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:41
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Laplacian
      Expression: StochasticAdjacency(adjacency(lapl)) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##47#82)(::GraphMatrices.StochasticAdjacency{Float64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##48#83{GraphMatrices.CombinatorialLaplacian{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:44
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Laplacian
      Expression: NormalizedAdjacency(adjacency(lapl)) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##49#84)(::GraphMatrices.NormalizedAdjacency{Float64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##50#85{GraphMatrices.CombinatorialLaplacian{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:45
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Laplacian
      Expression: AveragingAdjacency(adjacency(lapl)) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##51#86)(::GraphMatrices.AveragingAdjacency{Float64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##52#87{GraphMatrices.CombinatorialLaplacian{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:46
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Laplacian
      Expression: convert(Adjacency,lapl) --> truthy
      UndefVarError: Adjacency not defined
       in do_fact(::TestGraphMatrices.##54#89{GraphMatrices.CombinatorialLaplacian{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:48
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: Laplacian
      Expression: convert(SparseMatrix{Float64},lapl) --> truthy
      UndefVarError: truthy not defined
       in (::TestGraphMatrices.##55#90)(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
       in do_fact(::TestGraphMatrices.##56#91{GraphMatrices.CombinatorialLaplacian{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in test_laplacian(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:49
       in context(::TestGraphMatrices.##254#258{SparseMatrixCSC{Float64,Int64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestGraphMatrices.##252#256)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:156
       in facts(::TestGraphMatrices.##252#256, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
  > Accessors
Out of 43 total facts:
  Verified: 34
  Errored:  9
arithmetic
adjmat * ones(Float64,n) = [7.0,6.0,6.0,5.0,9.0,5.0,3.0,8.0,5.0,6.0]
  Error :: (line:272)
    Expression: ((eigs(adjmat,which=:LR))[1])[1] --> greater_than(1.0)
    MethodError: no method matching issymmetric(::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}) at ./null:0
     in (::TestGraphMatrices.##150#174{GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestGraphMatrices.##150#174{GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in test_arithmetic(::SparseMatrixCSC{Float64,Int64}, ::Int64) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:104
     in facts(::TestGraphMatrices.##260#261, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: ((eigs(stochmat,which=:LR))[1])[1] --> roughly(1.0)
    MethodError: no method matching issymmetric(::GraphMatrices.StochasticAdjacency{Float64})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.StochasticAdjacency{Float64}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.StochasticAdjacency{Float64}) at ./null:0
     in (::TestGraphMatrices.##152#176)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestGraphMatrices.##152#176, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in test_arithmetic(::SparseMatrixCSC{Float64,Int64}, ::Int64) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:105
     in facts(::TestGraphMatrices.##260#261, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: ((eigs(avgmat,which=:LR))[1])[1] --> roughly(1.0)
    MethodError: no method matching issymmetric(::GraphMatrices.AveragingAdjacency{Float64})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.AveragingAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.AveragingAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.AveragingAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.AveragingAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.AveragingAdjacency{Float64}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.AveragingAdjacency{Float64}) at ./null:0
     in (::TestGraphMatrices.##154#178)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestGraphMatrices.##154#178, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in test_arithmetic(::SparseMatrixCSC{Float64,Int64}, ::Int64) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:106
     in facts(::TestGraphMatrices.##260#261, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: ((eigs(lapl,which=:LR))[1])[1] --> greater_than(2.0)
    MethodError: no method matching issymmetric(::GraphMatrices.CombinatorialLaplacian{Float64})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.CombinatorialLaplacian{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.CombinatorialLaplacian{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.CombinatorialLaplacian{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.CombinatorialLaplacian{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.CombinatorialLaplacian{Float64}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.CombinatorialLaplacian{Float64}) at ./null:0
     in (::TestGraphMatrices.##156#180)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestGraphMatrices.##156#180, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in test_arithmetic(::SparseMatrixCSC{Float64,Int64}, ::Int64) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:107
     in facts(::TestGraphMatrices.##260#261, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: ((eigs(lhat,which=:LR))[1])[1] --> less_than(2.0 + 1.0e-9)
    MethodError: no method matching issymmetric(::GraphMatrices.NormalizedLaplacian{Float64})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.NormalizedLaplacian{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.NormalizedLaplacian{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.NormalizedLaplacian{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.NormalizedLaplacian{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.NormalizedLaplacian{Float64}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.NormalizedLaplacian{Float64}) at ./null:0
     in (::TestGraphMatrices.##159#183)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestGraphMatrices.##159#183, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in test_arithmetic(::SparseMatrixCSC{Float64,Int64}, ::Int64) at /home/vagrant/.julia/v0.5/GraphMatrices/test/types.jl:110
     in facts(::TestGraphMatrices.##260#261, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 12 total facts:
  Verified: 7
  Errored:  5
other tests
  > equality testing 
20 facts verified.
Random Walk Demo
  Error :: (line:272)
    Expression: stationarydistribution(A; ncv=10) --> x->begin  # /home/vagrant/.julia/v0.5/GraphMatrices/test/randwalk.jl, line 33:
        all(x .>= 0)
    end
    MethodError: no method matching issymmetric(::GraphMatrices.StochasticAdjacency{Float64})
     in #_eigs#44(::Int64, ::Int64, ::Symbol, ::Float64, ::Int64, ::Void, ::Array{Float64,1}, ::Bool, ::Base.LinAlg.#_eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:157
     in (::Base.LinAlg.#kw##_eigs)(::Array{Any,1}, ::Base.LinAlg.#_eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#43(::Array{Any,1}, ::Function, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./linalg/arnoldi.jl:146
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.StochasticAdjacency{Float64}, ::UniformScaling{Int64}) at ./null:0
     in #eigs#36(::Array{Any,1}, ::Function, ::GraphMatrices.StochasticAdjacency{Float64}) at ./linalg/arnoldi.jl:78
     in (::Base.LinAlg.#kw##eigs)(::Array{Any,1}, ::Base.LinAlg.#eigs, ::GraphMatrices.StochasticAdjacency{Float64}) at ./null:0
     in #stationarydistribution#1(::Array{Any,1}, ::Function, ::GraphMatrices.StochasticAdjacency{Float64}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/randwalk.jl:10
     in (::#kw##stationarydistribution)(::Array{Any,1}, ::#stationarydistribution, ::GraphMatrices.StochasticAdjacency{Float64}) at ./null:0
     in #stationarydistribution#2(::Array{Any,1}, ::Function, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}) at /home/vagrant/.julia/v0.5/GraphMatrices/test/randwalk.jl:24
     in (::#kw##stationarydistribution)(::Array{Any,1}, ::#stationarydistribution, ::GraphMatrices.CombinatorialAdjacency{Float64,SparseMatrixCSC{Float64,Int64},Array{Float64,1}}) at ./null:0
     in (::##8#14)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::##8#14, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::##3#9)() at /home/vagrant/.julia/v0.5/GraphMatrices/test/randwalk.jl:33
     in facts(::##3#9, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 1 total fact:
  Errored:  1
INFO: GraphMatrices tests passed

>>> End of log
