>>> 'Pkg.add("Poltergeist")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of HierarchicalMatrices from https://github.com/MikaelSlevinsky/HierarchicalMatrices.jl.git
INFO: Cloning cache of Poltergeist from https://github.com/wormell/Poltergeist.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.1
INFO: Installing BandedMatrices v0.2.3
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.6.0
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.2.2
INFO: Installing HierarchicalMatrices v0.0.2
INFO: Installing IntervalSets v0.1.1
INFO: Installing LowRankApprox v0.0.2
INFO: Installing NaNMath v0.2.6
INFO: Installing Poltergeist v0.0.4
INFO: Installing ProgressMeter v0.3.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.17.0
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Poltergeist")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (247.109375 MB free)
Uptime: 23943.0 sec
Load Avg:  0.93505859375  0.97509765625  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1437682 s       7212 s     152073 s     515748 s         41 s
#2  3502 MHz     439362 s        360 s      65696 s    1832866 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - Poltergeist                   0.0.4
18 additional packages:
 - ApproxFun                     0.6.1
 - BandedMatrices                0.2.3
 - Calculus                      0.2.2
 - Compat                        0.28.0
 - DataStructures                0.6.0
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.2.2
 - HierarchicalMatrices          0.0.2
 - IntervalSets                  0.1.1
 - LowRankApprox                 0.0.2
 - NaNMath                       0.2.6
 - ProgressMeter                 0.3.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.2.0
 - StaticArrays                  0.3.1
 - StatsBase                     0.17.0
 - ToeplitzMatrices              0.2.0
INFO: Testing Poltergeist
Fourier tests 🌚🌞
  0.395061 seconds (2.06 M allocations: 77.879 MB, 10.02% gc time)
  0.192778 seconds (1.71 M allocations: 64.321 MB, 11.47% gc time)
Should all be ≤0.3s
Chebyshev tests 🌞🌚
  0.168430 seconds (1.04 M allocations: 20.508 MB, 6.56% gc time)
  0.193305 seconds (1.21 M allocations: 23.097 MB, 4.73% gc time)
  0.151644 seconds (934.80 k allocations: 18.028 MB)
Should be ≤0.12s
Lanford map test
  0.127653 seconds (335.33 k allocations: 9.250 MB)
  0.010852 seconds (6.76 k allocations: 182.923 KB)
  0.007036 seconds (991 allocations: 56.656 KB)
Correlation sum test
Newton's method test ☏
Inducing tests 🐴
  4.573148 seconds (80.40 M allocations: 1.270 GB, 6.20% gc time)
Should be ≤4s
Time series tests
  9.765487 seconds (12.11 M allocations: 489.178 MB, 2.92% gc time)
Should be ≤4s
 56.477132 seconds (114.26 M allocations: 2.396 GB, 1.35% gc time)
Should be ≤27s
2D tests

😎
INFO: Poltergeist tests passed

>>> End of log
