>>> 'Pkg.add("Poltergeist")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of Poltergeist from https://github.com/wormell/Poltergeist.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.3
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing Poltergeist v0.0.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.3.1
INFO: Installing StatsBase v0.14.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of Poltergeist
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Poltergeist")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (484.1796875 MB free)
Uptime: 23535.0 sec
Load Avg:  0.98583984375  1.00927734375  0.984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1440135 s        532 s     122004 s     486709 s         36 s
#2  3504 MHz     368588 s       6267 s      60300 s    1872882 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - Poltergeist                   0.0.4
15 additional packages:
 - ApproxFun                     0.6.0
 - BandedMatrices                0.2.3
 - Calculus                      0.2.2
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.3.1
 - StatsBase                     0.14.1
 - ToeplitzMatrices              0.2.0
INFO: Testing Poltergeist
Fourier tests 🌚🌞
  0.222246 seconds (2.06 M allocations: 77.879 MB, 13.41% gc time)
  0.264973 seconds (1.71 M allocations: 64.321 MB, 8.92% gc time)
Should all be ≤0.3s
Chebyshev tests 🌞🌚
  0.165406 seconds (1.04 M allocations: 20.508 MB, 6.40% gc time)
  0.102205 seconds (1.21 M allocations: 23.097 MB, 7.12% gc time)
  0.092354 seconds (934.80 k allocations: 18.028 MB, 9.06% gc time)
Should be ≤0.12s
Lanford map test
  0.115360 seconds (335.33 k allocations: 9.250 MB)
  0.009945 seconds (6.74 k allocations: 173.798 KB)
  0.004813 seconds (992 allocations: 56.672 KB)
Correlation sum test
Newton's method test ☏
Inducing tests 🐴
  5.029655 seconds (80.37 M allocations: 1.269 GB, 5.62% gc time)
Should be ≤4s
Time series tests
 10.594642 seconds (11.88 M allocations: 481.300 MB, 4.37% gc time)
Should be ≤4s
 54.330707 seconds (114.25 M allocations: 2.396 GB, 1.20% gc time)
Should be ≤27s
2D tests

😎
INFO: Poltergeist tests passed

>>> End of log
