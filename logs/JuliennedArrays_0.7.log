>>> 'Pkg.add("JuliennedArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of JuliennedArrays from https://github.com/bramtayl/JuliennedArrays.jl.git
[ Info: Cloning cache of Parts from https://github.com/bramtayl/Parts.jl.git
[ Info: Cloning cache of RecurUnroll from https://github.com/bramtayl/RecurUnroll.jl.git
[ Info: Cloning cache of TypedBools from https://github.com/bramtayl/TypedBools.jl.git
[ Info: Installing JuliennedArrays v0.0.2
[ Info: Installing Missings v0.2.9
[ Info: Installing Parts v0.0.2
[ Info: Installing RecurUnroll v0.1.0
[ Info: Installing TypedBools v0.0.2
[ Info: Package database updated

>>> 'Pkg.test("JuliennedArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4959
Commit 509d6a1a88 (2018-04-27 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    2229459 s       6244 s     187272 s     630518 s         17 s
       #2  3507 MHz     459365 s       2765 s      61873 s    3003013 s          0 s
       
  Memory: 2.939197540283203 GB (1315.92578125 MB free)
  Uptime: 35962.0 sec
  Load Avg:  0.94384765625  0.94775390625  0.95166015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - JuliennedArrays               0.0.2
6 additional packages:
 - Compat                        0.64.0
 - Missings                      0.2.9
 - Nullables                     0.0.5
 - Parts                         0.0.2
 - RecurUnroll                   0.1.0
 - TypedBools                    0.0.2
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for JuliennedArrays...
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing Documenter v0.17.0
[ Info: Installing MappedArrays v0.0.7
[ Info: Testing JuliennedArrays
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:139-168

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(Reduction(+), julienne(array, (*, :)))
3×1 Array{Int64,2}:
 15
  6
 24

julia> array = reshape(1:8, 2, 2, 2)
2×2×2 Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}:
[:, :, 1] =
 1  3
 2  4

[:, :, 2] =
 5  7
 6  8

julia> @inferred map(Reduction(+), julienne(array, (:, *, :)))
1×2×1 Array{Int64,3}:
[:, :, 1] =
 14  22
```

> Subexpression:

    using JuliennedArrays, Base.Test, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl:4
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:139-168

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(Reduction(+), julienne(array, (*, :)))
3×1 Array{Int64,2}:
 15
  6
 24

julia> array = reshape(1:8, 2, 2, 2)
2×2×2 Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}:
[:, :, 1] =
 1  3
 2  4

[:, :, 2] =
 5  7
 6  8

julia> @inferred map(Reduction(+), julienne(array, (:, *, :)))
1×2×1 Array{Int64,3}:
[:, :, 1] =
 14  22
```

> Subexpression:

    @inferred map(Reduction(+), julienne(array, (*, :)))

> Output Diff (REQUIRES COLOR):

┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = julienne at JuliennedArrays.jl:68 [inlined]
└ @ Core JuliennedArrays.jl:68
┌ Warning: `mapreducedim(f, op, A::AbstractArray, dims)` is deprecated, use `mapreduce(f, op, A, dims=dims)` instead.
│   caller = map(::Reduction{typeof(+)}, ::Views{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},JuliennedArrays.JulienneIndexer{Tuple{Int64,Base.OneTo{Int64}},1,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},Tuple{TypedBools.True,TypedBools.False}}}) at JuliennedArrays.jl:174
└ @ JuliennedArrays JuliennedArrays.jl:174
3×1 Array{Int64,2}:
 15
  6
 24

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:139-168

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(Reduction(+), julienne(array, (*, :)))
3×1 Array{Int64,2}:
 15
  6
 24

julia> array = reshape(1:8, 2, 2, 2)
2×2×2 Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}:
[:, :, 1] =
 1  3
 2  4

[:, :, 2] =
 5  7
 6  8

julia> @inferred map(Reduction(+), julienne(array, (:, *, :)))
1×2×1 Array{Int64,3}:
[:, :, 1] =
 14  22
```

> Subexpression:

    array = reshape(1:8, 2, 2, 2)

> Output Diff (REQUIRES COLOR):

2×2×2 Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}:
reshape(::UnitRange{Int64}, 2, 2, 2) with eltype Int64:
[:, :, 1] =
 1  3
 2  4

[:, :, 2] =
 5  7
 6  8

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:139-168

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(Reduction(+), julienne(array, (*, :)))
3×1 Array{Int64,2}:
 15
  6
 24

julia> array = reshape(1:8, 2, 2, 2)
2×2×2 Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}:
[:, :, 1] =
 1  3
 2  4

[:, :, 2] =
 5  7
 6  8

julia> @inferred map(Reduction(+), julienne(array, (:, *, :)))
1×2×1 Array{Int64,3}:
[:, :, 1] =
 14  22
```

> Subexpression:

    @inferred map(Reduction(+), julienne(array, (:, *, :)))

> Output Diff (REQUIRES COLOR):

┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = julienne at JuliennedArrays.jl:68 [inlined]
└ @ Core JuliennedArrays.jl:68
┌ Warning: `mapreducedim(f, op, A::AbstractArray, dims)` is deprecated, use `mapreduce(f, op, A, dims=dims)` instead.
│   caller = map(::Reduction{typeof(+)}, ::Views{SubArray{Int64,2,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},false},1,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},JuliennedArrays.JulienneIndexer{Tuple{Base.OneTo{Int64},Int64,Base.OneTo{Int64}},1,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},Tuple{TypedBools.False,TypedBools.True,TypedBools.False}}}) at JuliennedArrays.jl:174
└ @ JuliennedArrays JuliennedArrays.jl:174
1×2×1 Array{Int64,3}:
[:, :, 1] =
 14  22

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:82-100

> Code block:

```jldoctest
julia> using JuliennedArrays, MappedArrays, Base.Test

julia> code = (*, :);

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> views = @inferred julienne(array, code);

julia> align(mappedarray(sort, views), code)
3×3 Array{Int64,2}:
 4  5  6
 1  2  3
 7  8  9
```

> Subexpression:

    using JuliennedArrays, MappedArrays, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:82-100

> Code block:

```jldoctest
julia> using JuliennedArrays, MappedArrays, Base.Test

julia> code = (*, :);

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> views = @inferred julienne(array, code);

julia> align(mappedarray(sort, views), code)
3×3 Array{Int64,2}:
 4  5  6
 1  2  3
 7  8  9
```

> Subexpression:

    views = @inferred julienne(array, code);

> Output Diff (REQUIRES COLOR):

┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = julienne at JuliennedArrays.jl:68 [inlined]
└ @ Core JuliennedArrays.jl:68

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:82-100

> Code block:

```jldoctest
julia> using JuliennedArrays, MappedArrays, Base.Test

julia> code = (*, :);

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> views = @inferred julienne(array, code);

julia> align(mappedarray(sort, views), code)
3×3 Array{Int64,2}:
 4  5  6
 1  2  3
 7  8  9
```

> Subexpression:

    align(mappedarray(sort, views), code)

> Output Diff (REQUIRES COLOR):

┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at MappedArrays.jl:54 [inlined]
└ @ Core MappedArrays.jl:54
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = align(::MappedArrays.ReadonlyMappedArray{Array{Int64,1},1,Views{SubArray{Int64,1,Array{Int64,2},Tuple{Int64,Base.OneTo{Int64}},true},1,Array{Int64,2},JuliennedArrays.JulienneIndexer{Tuple{Int64,Base.OneTo{Int64}},1,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},Tuple{TypedBools.True,TypedBools.False}}},typeof(sort)}, ::Tuple{typeof(*),Colon}) at JuliennedArrays.jl:109
└ @ JuliennedArrays JuliennedArrays.jl:109
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = julienne at JuliennedArrays.jl:68 [inlined]
└ @ Core JuliennedArrays.jl:68
3×3 Array{Int64,2}:
 4  5  6
 1  2  3
 7  8  9

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:52-66

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(sum, julienne(array, (*, :)))
3-element Array{Int64,1}:
 15
  6
 24
```

> Subexpression:

    using JuliennedArrays, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/JuliennedArrays/src/JuliennedArrays.jl:52-66

> Code block:

```jldoctest
julia> using JuliennedArrays, Base.Test

julia> array = [5 6 4; 1 3 2; 7 9 8]
3×3 Array{Int64,2}:
 5  6  4
 1  3  2
 7  9  8

julia> @inferred map(sum, julienne(array, (*, :)))
3-element Array{Int64,1}:
 15
  6
 24
```

> Subexpression:

    @inferred map(sum, julienne(array, (*, :)))

> Output Diff (REQUIRES COLOR):

┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = julienne at JuliennedArrays.jl:68 [inlined]
└ @ Core JuliennedArrays.jl:68
3-element Array{Int64,1}:
 15
  6
 24

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202
 [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:168
 [4] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:205 [inlined]
 [5] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:72
 [6] #makedocs#1 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:204 [inlined]
 [7] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :checkdocs, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,Symbol,String}}, ::typeof(Documenter.makedocs)) at ./<missing>:0
 [8] top-level scope
 [9] include at ./boot.jl:314 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1067
 [11] include(::Module, ::String) at ./sysimg.jl:29
 [12] exec_options(::Base.JLOptions) at ./client.jl:327
 [13] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for JuliennedArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/JuliennedArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing DocStringExtensions v0.4.4
[ Info: Removing Documenter v0.17.0
[ Info: Removing MappedArrays v0.0.7
ERROR: JuliennedArrays had test errors

>>> End of log
