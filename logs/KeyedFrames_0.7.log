>>> 'Pkg.add("KeyedFrames")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of KeyedFrames from https://github.com/invenia/KeyedFrames.jl.git
[ Info: Installing BinaryProvider v0.3.0
[ Info: Installing CategoricalArrays v0.3.9
[ Info: Installing CodecZlib v0.4.3
[ Info: Installing DataFrames v0.11.6
[ Info: Installing DataStreams v0.3.4
[ Info: Installing DataStructures v0.7.4
[ Info: Installing KeyedFrames v0.1.1
[ Info: Installing Missings v0.2.9
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing SHA v0.5.7
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing StatsBase v0.21.0
[ Info: Installing TranscodingStreams v0.5.2
[ Info: Installing WeakRefStrings v0.4.4
[ Info: Building CodecZlib
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:376
└ @ BinaryProvider PlatformNames.jl:376
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/CodecZlib/deps/build.jl:98
[ Info: Package database updated

>>> 'Pkg.test("KeyedFrames")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4922
Commit 23b08c5c5c (2018-04-20 18:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3506 MHz    2457089 s       7213 s     209843 s     720231 s         19 s
       #2  3506 MHz     600006 s         87 s      76721 s    3206830 s          0 s
       
  Memory: 2.939197540283203 GB (920.83984375 MB free)
  Uptime: 39712.0 sec
  Load Avg:  0.923828125  0.96142578125  0.94970703125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - KeyedFrames                   0.1.1
16 additional packages:
 - BinaryProvider                0.3.0
 - CategoricalArrays             0.3.9
 - CodecZlib                     0.4.3
 - Compat                        0.63.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - Missings                      0.2.9
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - StatsBase                     0.21.0
 - TranscodingStreams            0.5.2
 - WeakRefStrings                0.4.4
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing KeyedFrames
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:3
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = deepcopy(::KeyedFrame) at KeyedFrames.jl:58
└ @ KeyedFrames KeyedFrames.jl:58
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:71 [inlined]
└ @ Core runtests.jl:71
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:71 [inlined]
└ @ Core runtests.jl:71
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:78 [inlined]
└ @ Core runtests.jl:78
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = copy(::KeyedFrame) at KeyedFrames.jl:57
└ @ KeyedFrames KeyedFrames.jl:57
sort: Error During Test at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:178
  Test threw exception MethodError(start, (sort,), 0x0000000000006b10)
  Expression: sort(kf3) == expected
  MethodError: no method matching start(::typeof(sort))
  Closest candidates are:
    start(!Matched::Core.SimpleVector) at essentials.jl:533
    start(!Matched::Base.MethodList) at reflection.jl:690
    start(!Matched::ExponentialBackOff) at error.jl:170
    ...
  Stacktrace:
   [1] _any(::getfield(Base, Symbol("##198#199")){Symbol}, ::Function, ::Colon) at ./reduce.jl:675
   [2] any(::Function, ::Function) at ./reduce.jl:671
   [3] in(::Symbol, ::Function) at ./reduce.jl:782
   [4] firstcaller(::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}, ::Function) at ./deprecated.jl:107
   [5] macro expansion at ./deprecated.jl:76 [inlined]
   [6] macro expansion at ./logging.jl:299 [inlined]
   [7] depwarn(::String, ::Function) at ./deprecated.jl:71
   [8] #sort#219(::Array{Symbol,1}, ::Nothing, ::Function, ::Function, ::Bool, ::Base.Order.ForwardOrdering, ::Function, ::DataFrame, ::Array{Any,1}) at /home/vagrant/.julia/v0.7/DataFrames/src/abstractdataframe/sort.jl:293
   [9] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols,),Tuple{Array{Symbol,1}}}, ::typeof(sort), ::DataFrame, ::Array{Any,1}) at ./<missing>:0 (repeats 2 times)
   [10] #sort#1(::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::KeyedFrame) at /home/vagrant/.julia/v0.7/KeyedFrames/src/KeyedFrames.jl:136
   [11] sort(::KeyedFrame) at /home/vagrant/.julia/v0.7/KeyedFrames/src/KeyedFrames.jl:136
   [12] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:178 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:175 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:6
sort: Error During Test at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:179
  Test threw exception MethodError(start, (sort,), 0x0000000000006b10)
  Expression: sort(kf3; rev=true) == reversed
  MethodError: no method matching start(::typeof(sort))
  Closest candidates are:
    start(!Matched::Core.SimpleVector) at essentials.jl:533
    start(!Matched::Base.MethodList) at reflection.jl:690
    start(!Matched::ExponentialBackOff) at error.jl:170
    ...
  Stacktrace:
   [1] _any(::getfield(Base, Symbol("##198#199")){Symbol}, ::Function, ::Colon) at ./reduce.jl:675
   [2] any(::Function, ::Function) at ./reduce.jl:671
   [3] in(::Symbol, ::Function) at ./reduce.jl:782
   [4] firstcaller(::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}, ::Function) at ./deprecated.jl:107
   [5] macro expansion at ./deprecated.jl:76 [inlined]
   [6] macro expansion at ./logging.jl:299 [inlined]
   [7] depwarn(::String, ::Function) at ./deprecated.jl:71
   [8] #sort#219(::Array{Symbol,1}, ::Nothing, ::Function, ::Function, ::Bool, ::Base.Order.ForwardOrdering, ::Function, ::DataFrame, ::Array{Any,1}) at /home/vagrant/.julia/v0.7/DataFrames/src/abstractdataframe/sort.jl:293
   [9] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols, :rev),Tuple{Array{Symbol,1},Bool}}, ::typeof(sort), ::DataFrame, ::Array{Any,1}) at ./<missing>:0 (repeats 2 times)
   [10] #sort#1(::Nothing, ::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:rev,),Tuple{Bool}}}, ::Function, ::KeyedFrame) at /home/vagrant/.julia/v0.7/KeyedFrames/src/KeyedFrames.jl:136
   [11] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:rev,),Tuple{Bool}}, ::typeof(sort), ::KeyedFrame) at ./<missing>:0
   [12] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:179 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:175 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:6
┌ Warning: sort!(df, cols=cols) is deprecated, use sort!(df, cols) instead
│   caller = macro expansion at runtests.jl:182 [inlined]
└ @ Core runtests.jl:182
┌ Warning: sort!(df, cols=cols) is deprecated, use sort!(df, cols) instead
│   caller = ip:0x0
└ @ Core :-1
sort: Error During Test at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:196
  Test threw exception MethodError(start, (sort,), 0x0000000000006b10)
  Expression: sort(kf3; cols=:a) == expected
  MethodError: no method matching start(::typeof(sort))
  Closest candidates are:
    start(!Matched::Core.SimpleVector) at essentials.jl:533
    start(!Matched::Base.MethodList) at reflection.jl:690
    start(!Matched::ExponentialBackOff) at error.jl:170
    ...
  Stacktrace:
   [1] _any(::getfield(Base, Symbol("##198#199")){Symbol}, ::Function, ::Colon) at ./reduce.jl:675
   [2] any(::Function, ::Function) at ./reduce.jl:671
   [3] in(::Symbol, ::Function) at ./reduce.jl:782
   [4] firstcaller(::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}, ::Function) at ./deprecated.jl:107
   [5] macro expansion at ./deprecated.jl:76 [inlined]
   [6] macro expansion at ./logging.jl:299 [inlined]
   [7] depwarn(::String, ::Function) at ./deprecated.jl:71
   [8] #sort#219(::Symbol, ::Nothing, ::Function, ::Function, ::Bool, ::Base.Order.ForwardOrdering, ::Function, ::DataFrame, ::Array{Any,1}) at /home/vagrant/.julia/v0.7/DataFrames/src/abstractdataframe/sort.jl:293
   [9] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols,),Tuple{Symbol}}, ::typeof(sort), ::DataFrame, ::Array{Any,1}) at ./<missing>:0 (repeats 2 times)
   [10] #sort#1(::Symbol, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::KeyedFrame) at /home/vagrant/.julia/v0.7/KeyedFrames/src/KeyedFrames.jl:136
   [11] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols,),Tuple{Symbol}}, ::typeof(sort), ::KeyedFrame) at ./<missing>:0
   [12] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:196 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:175 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:6
sort: Error During Test at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:197
  Test threw exception MethodError(start, (sort,), 0x0000000000006b10)
  Expression: sort(kf3; cols=:a, rev=true) == reversed
  MethodError: no method matching start(::typeof(sort))
  Closest candidates are:
    start(!Matched::Core.SimpleVector) at essentials.jl:533
    start(!Matched::Base.MethodList) at reflection.jl:690
    start(!Matched::ExponentialBackOff) at error.jl:170
    ...
  Stacktrace:
   [1] _any(::getfield(Base, Symbol("##198#199")){Symbol}, ::Function, ::Colon) at ./reduce.jl:675
   [2] any(::Function, ::Function) at ./reduce.jl:671
   [3] in(::Symbol, ::Function) at ./reduce.jl:782
   [4] firstcaller(::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}, ::Function) at ./deprecated.jl:107
   [5] macro expansion at ./deprecated.jl:76 [inlined]
   [6] macro expansion at ./logging.jl:299 [inlined]
   [7] depwarn(::String, ::Function) at ./deprecated.jl:71
   [8] #sort#219(::Symbol, ::Nothing, ::Function, ::Function, ::Bool, ::Base.Order.ForwardOrdering, ::Function, ::DataFrame, ::Array{Any,1}) at /home/vagrant/.julia/v0.7/DataFrames/src/abstractdataframe/sort.jl:293
   [9] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols, :rev),Tuple{Symbol,Bool}}, ::typeof(sort), ::DataFrame, ::Array{Any,1}) at ./<missing>:0 (repeats 2 times)
   [10] #sort#1(::Symbol, ::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:rev,),Tuple{Bool}}}, ::Function, ::KeyedFrame) at /home/vagrant/.julia/v0.7/KeyedFrames/src/KeyedFrames.jl:136
   [11] (::getfield(Base, Symbol("#kw##sort")))(::NamedTuple{(:cols, :rev),Tuple{Symbol,Bool}}, ::typeof(sort), ::KeyedFrame) at ./<missing>:0
   [12] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:197 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:175 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:6
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:288 [inlined]
└ @ Core runtests.jl:288
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:292 [inlined]
└ @ Core runtests.jl:292
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:298 [inlined]
└ @ Core runtests.jl:298
┌ Warning: `a::Number + b::AbstractArray` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = + at operators.jl:466 [inlined]
└ @ Core operators.jl:466
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:305 [inlined]
└ @ Core runtests.jl:305
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:309 [inlined]
└ @ Core runtests.jl:309
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::DataFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:320 [inlined]
└ @ Core runtests.jl:320
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:325 [inlined]
└ @ Core runtests.jl:325
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:330 [inlined]
└ @ Core runtests.jl:330
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:335 [inlined]
└ @ Core runtests.jl:335
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DataFrame(::KeyedFrame)` should be defined instead.
│   caller = macro expansion at runtests.jl:340 [inlined]
└ @ Core runtests.jl:340
Test Summary:     | Pass  Error  Total
KeyedFrames       |  164      4    168
  constructor     |    9             9
  equality        |   23            23
  copy            |    4             4
  convert         |    9             9
  size            |    9             9
  names/index/key |    9             9
  getindex        |   18            18
  setindex!       |    7             7
  head/tail       |    8             8
  sort            |    8      4     12
  push!           |    1             1
  append!         |    2             2
  deleterows!     |    3             3
  delete!         |   12            12
  unique          |    6             6
  join            |   32            32
  permute!        |    4             4
ERROR: LoadError: Some tests did not pass: 164 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for KeyedFrames
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/KeyedFrames/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: KeyedFrames had test errors

>>> End of log
