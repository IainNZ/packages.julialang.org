>>> 'Pkg.add("PolynomialFactors")' log
┌ Info: Cloning cache of PolynomialFactors from https://github.com/jverzani/PolynomialFactors.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Combinatorics v0.5.0            @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PolynomialFactors v0.1.0        @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Primes v0.2.0                   @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of PolynomialFactors
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("PolynomialFactors")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     740982 s         96 s      43181 s     278411 s         12 s
       #2  3500 MHz     142497 s         46 s      19324 s    1056880 s          0 s
       
  Memory: 2.93927001953125 GB (975.015625 MB free)
  Uptime: 12382.0 sec
  Load Avg:  0.912109375  0.96923828125  0.958984375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PolynomialFactors             0.1.0
6 additional packages:
 - Combinatorics                 0.5.0
 - Compat                        0.46.0
 - IterTools                     0.2.0
 - Nullables                     0.0.3
 - Polynomials                   0.2.0
 - Primes                        0.2.0
[ Info: Testing PolynomialFactors                  @ Base.Pkg.Entry entry.jl:723
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:4.
│ Use `struct` instead.
└                                                   @ nothing factorization.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Factorization{T}}){T <: Integer}()` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:8.
│ Use `(::Type{Factorization{T}})() where T <: Integer` instead.
└                                                   @ nothing factorization.jl:8
WARNING: importing deprecated binding Base.Associative into Primes.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Factorization{T}}){T <: Integer}(d::Associative)` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:12.
│ Use `(::Type{Factorization{T}})(d::Associative) where T <: Integer` instead.
└                                                  @ nothing factorization.jl:12
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:11
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Factorization}, d::Associative{T})` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:17.
│ Use `Base.convert(#unused#::Type{Factorization}, d::Associative{T}) where T` instead.
└                                                  @ nothing factorization.jl:17
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:17
┌ Warning: Deprecated syntax `parametric method syntax Base.setindex!{T}(f::Factorization{T}, e::Int, p::Integer)` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:34.
│ Use `Base.setindex!(f::Factorization{T}, e::Int, p::Integer) where T` instead.
└                                                  @ nothing factorization.jl:34
┌ Warning: Deprecated syntax `parametric method syntax primesmask{T <: Integer}(lo::T, hi::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:104.
│ Use `primesmask(lo::T, hi::T) where T <: Integer` instead.
└                                                        @ nothing Primes.jl:104
┌ Warning: Deprecated syntax `parametric method syntax factor!{T <: Integer, K <: Integer}(n::T, h::Associative{K, Int})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:245.
│ Use `factor!(n::T, h::Associative{K, Int}) where {T <: Integer, K <: Integer}` instead.
└                                                        @ nothing Primes.jl:245
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:243
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer}(n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:306.
│ Use `factor(n::T) where T <: Integer` instead.
└                                                        @ nothing Primes.jl:306
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, D <: Associative}(::Type{D}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:345.
│ Use `factor(#unused#::Type{D}, n::T) where {T <: Integer, D <: Associative}` instead.
└                                                        @ nothing Primes.jl:345
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:309
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:309
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, A <: AbstractArray}(::Type{A}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:346.
│ Use `factor(#unused#::Type{A}, n::T) where {T <: Integer, A <: AbstractArray}` instead.
└                                                        @ nothing Primes.jl:346
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer}(::Type{Vector{T}}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:347.
│ Use `factor(#unused#::Type{Vector{T}}, n::T) where T <: Integer` instead.
└                                                        @ nothing Primes.jl:347
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, S <: Union{Set, IntSet}}(::Type{S}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:349.
│ Use `factor(#unused#::Type{S}, n::T) where {T <: Integer, S <: Union{Set, IntSet}}` instead.
└                                                        @ nothing Primes.jl:349
WARNING: importing deprecated binding Base.IntSet into Primes.
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:349
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Any}(::Type{T}, n)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:350.
│ Use `factor(#unused#::Type{T}, n) where T <: Any` instead.
└                                                        @ nothing Primes.jl:350
┌ Warning: Deprecated syntax `parametric method syntax prodfactors{K}(factors::Associative{K})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:368.
│ Use `prodfactors(factors::Associative{K}) where K` instead.
└                                                        @ nothing Primes.jl:368
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:368
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:369
┌ Warning: Deprecated syntax `parametric method syntax pollardfactors!{T <: Integer, K <: Integer}(n::T, h::Associative{K, Int})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:392.
│ Use `pollardfactors!(n::T, h::Associative{K, Int}) where {T <: Integer, K <: Integer}` instead.
└                                                        @ nothing Primes.jl:392
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:391
┌ Warning: Deprecated syntax `parametric method syntax totient{T <: Integer}(f::Factorization{T})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:514.
│ Use `totient(f::Factorization{T}) where T <: Integer` instead.
└                                                        @ nothing Primes.jl:514
WARNING: importing deprecated binding Base.Void into Primes.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:540
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:540
┌ Warning: Deprecated syntax `parametric method syntax prime{T <: Integer}(::Type{T}, i::Integer)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:654.
│ Use `prime(#unused#::Type{T}, i::Integer) where T <: Integer` instead.
└                                                        @ nothing Primes.jl:654
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/utils.jl:20 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing utils.jl:20
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/utils.jl:20 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing utils.jl:20
WARNING: importing deprecated binding Base.Void into PolynomialFactors.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PolynomialFactors/src/utils.jl:18
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/utils.jl:80.
└                                                          @ nothing utils.jl:80
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/utils.jl:80.
└                                                          @ nothing utils.jl:80
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/polyutils.jl:116.
└                                                     @ nothing polyutils.jl:116
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:65.
└                                                             @ nothing zx.jl:65
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:66.
└                                                             @ nothing zx.jl:66
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:132.
└                                                            @ nothing zx.jl:132
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:132.
└                                                            @ nothing zx.jl:132
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:162.
└                                                            @ nothing zx.jl:162
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/zx.jl:162.
└                                                            @ nothing zx.jl:162
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/lll.jl:36.
└                                                            @ nothing lll.jl:36
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/lll.jl:36.
└                                                            @ nothing lll.jl:36
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PolynomialFactors/src/factor.jl:163.
└                                                        @ nothing factor.jl:163
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PolynomialFactors/test/runtests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PolynomialFactors/test/test-utils.jl:3
Testing utils.jl

signal (11): Segmentation fault
in expression starting at /home/vagrant/.julia/v0.7/PolynomialFactors/test/test-utils.jl:12
_ZN4llvm5Value16DoPHITranslationEPKNS_10BasicBlockES3_ at /home/vagrant/julia/bin/../lib/julia/libLLVM-3.9.so (unknown line)
Allocations: 8149226 (Pool: 8148102; Big: 1124); GC: 19
┌ Error: ------------------------------------------------------------
│ # Testing failed for PolynomialFactors
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PolynomialFactors/test/runtests.jl`, ProcessSignaled(11)) [0]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: PolynomialFactors had test errors

>>> End of log
