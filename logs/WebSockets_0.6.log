>>> 'Pkg.add("WebSockets")' log
INFO: No packages to install, update or remove
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of WebSockets
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("WebSockets")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1123.41015625 MB free)
Uptime: 82337.0 sec
Load Avg:  0.99365234375  0.998046875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    5300748 s        127 s     392797 s    1205143 s         14 s
#2  3499 MHz     868038 s       5011 s     113850 s    7116085 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
10 required packages:
 - Cairo                         0.5.2
 - Colors                        0.8.2
 - Conda                         0.8.1
 - Distributions                 0.15.0
 - JSON                          0.17.2
 - POMDPModels                   0.2.2
 - PyCall                        1.17.1
 - PyPlot                        2.5.0
 - RDatasets                     0.4.0
 - WebSockets                    0.5.0
70 additional packages:
 - AbstractTrees                 0.1.0
 - AssetRegistry                 0.0.1
 - AutoHashEquals                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.2
 - Blink                         0.6.2
 - CPUTime                       0.0.5
 - CSV                           0.2.5
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.10
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Compat                        0.69.0
 - D3Trees                       0.2.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.6
 - DataStructures                0.8.3
 - DiscreteValueIteration        0.0.0-             master (unregistered)
 - Emoji_Entities                0.2.4              81d15593 (dirty)
 - FileIO                        0.9.1
 - FixedPointNumbers             0.4.6
 - Graphics                      0.3.0
 - HTML_Entities                 0.2.4              1a5cf18a (dirty)
 - Hiccup                        0.1.1
 - HttpCommon                    0.4.0
 - HttpParser                    0.3.1
 - HttpServer                    0.3.1
 - InternedStrings               0.6.2
 - Iterators                     0.3.1
 - LaTeXStrings                  1.0.0
 - LaTeX_Entities                0.2.4              96871748 (dirty)
 - Lazy                          0.12.1
 - LightXML                      0.6.0
 - MCTS                          0.0.0-             master (unregistered)
 - MacroTools                    0.4.1
 - MbedTLS                       0.5.11
 - Missings                      0.2.9
 - Mocking                       0.5.3
 - Mustache                      0.3.2
 - Mux                           0.3.0
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.5
 - PDMats                        0.8.0
 - POMDPToolbox                  0.2.7
 - POMDPXFiles                   0.0.0-             master (unregistered)
 - POMDPs                        0.6.7
 - Pidfile                       1.0.0
 - ProgressMeter                 0.5.5
 - QMDP                          0.0.0-             master (unregistered)
 - QuadGK                        0.2.1
 - RData                         0.4.0
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - Rmath                         0.3.3
 - SARSOP                        0.0.0-             master (unregistered)
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.5.0
 - StaticArrays                  0.7.1
 - StatsBase                     0.23.0
 - StatsFuns                     0.6.0
 - StrTables                     0.2.4
 - TabularTDLearning             0.0.0-             master (unregistered)
 - TikzPictures                  1.2.0
 - TimeZones                     0.7.2
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
INFO: Computing test dependencies for WebSockets...
INFO: Installing HTTP v0.6.12
INFO: Installing IniFile v0.4.0
INFO: Building MbedTLS
Info: using prebuilt binaries
INFO: Testing WebSockets
INFO: 
Fragment and unit tests
INFO: Provoking close handshake from protocol error without a peer. Waits a reasonable time
INFO: 
HttpServer and HTTP handshake
INFO: Loading HTTP methods...
INFO: Loading HttpServer methods...
INFO: 
Client-server test, HTTP client
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f40)
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 0
Listening on 0.0.0.0:8081...
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f41)
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   1s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 0
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 125
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 125
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 126
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 126
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 127
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 127
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 2000
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8000, message length 2000
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8000:8000 â‰£16
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8000:8000 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 0
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 0
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 125
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 125
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8081, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 0
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 0
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 0-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 125
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 125
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 125-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 126
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 126
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 126-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 127
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 127
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 127-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 2000
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://127.0.0.1:8001, message length 2000
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
 -Foo- -Ping- -String length 2000-
INFO: ws|server received OPCODE_PING
INFO: ws|client received OPCODE_PONG
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8001:8001 â‰£16
INFO: Testing client -> server at ws://echo.websocket.org, message length 125
 -Foo- -Ping- -String length 125-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 125
 -Foo- -Ping- -String length 125-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at ws://echo.websocket.org, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 125
 -Foo-INFO: ws|client received OPCODE_PING
 -Ping- -String length 125-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 125
 -Foo- -Ping- -String length 125-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 126
 -Foo- -Ping- -String length 126-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 127
 -Foo- -Ping- -String length 127-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|client received OPCODE_PONG
INFO: Testing client -> server at wss://echo.websocket.org, message length 2000
 -Foo- -Ping- -String length 2000-
INFO: ws|client received OPCODE_PONG
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8001:8001 â‰£16
W- accept: software caused connection abort (ECONNABORTED)
W- accept: software caused connection abort (ECONNABORTED)
INFO: 
Client test, HTTP client
INFO: start HTTP server
I- INFO: open client with approved subprotocol
Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f9b)
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8091:8091 â‰£16
INFO: open with unknown subprotocol
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8091:8091 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8091:8091 â‰£16
INFO: try open with uknown port
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8091:8091 â‰£16
INFO: try open with uknown scheme
INFO: start a client websocket that irritates by closing the TCP stream
 connection without a websocket closing handshake. This 
 throws an error in the server task
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8091:8091 â‰£16
INFO: check that the server is still running regardless

WARNING: Workqueue inconsistency detected: shift!(Workqueue).state != :queued
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8091:8091 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8091:8091 â‰£16
I- 
WARNING: Workqueue inconsistency detected: shift!(Workqueue).state != :queued
INFO: Open with a ws client handler that throws a domain error
Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8091:8091 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8091:8091 â‰£16
I- 
WARNING: Workqueue inconsistency detected: shift!(Workqueue).state != :queued
INFO: Stop the TCP server
Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8091:8091 â‰£16
W- accept: software caused connection abort (ECONNABORTED)
INFO: Emulate a correct first accept response from server, with BufferStream socket
INFO: emulate an incorrect first accept response from server
INFO: 
Abrupt close & error handling test
INFO: Start a HTTP server with a ws handler that is unresponsive. Close from client side. The  close handshake aborts after 10.0 seconds...
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f9c)
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
INFO: Start a HTTP server with a ws handler that always reads guarded.
W- accept: software caused connection abort (ECONNABORTED)
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f9c)
INFO: Attempt to read guarded from a closing ws|client. Check for return false.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Attempt to write guarded from a closing ws|client. Check for return false.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’  16s 127.0.0.1:8092:8092 â‰£16
INFO: Attempt to read from closing ws|client. Check caught error.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Attempt to write to a closing ws|client (this takes some time, there is no check
      in WebSockets against it). Check caught error.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- INFO: 

Start a HttpServer
Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
W- accept: software caused connection abort (ECONNABORTED)
WARNING: redefining constant server
Listening on 0.0.0.0:8092...
INFO: Attempt to write to a closing ws|client, served by HttpServer (this takes some time, there is no check
      in WebSockets against it). Check caught error.
INFO: 
Start an async HTTP server. The wshandler use global channels for inspecting caught errors.
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f9c)
INFO: Open a ws|client, close it out of protocol. Check server error on channel.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   1s 127.0.0.1:8092:8092 â‰£16
W- accept: software caused connection abort (ECONNABORTED)
INFO: 
Start an async HTTP server. Errors are output on built-in channel
I- Listening on: Base.InetAddr{IPv4}(ip"127.0.0.1", 0x1f9c)
INFO: Open a ws|client, close it out of protocol. Check server error on server.out channel.
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Open ws|clients, close using every status code from RFC 6455 7.4.1
  Verify error messages on server.out reflect the codes.
INFO: Closing ws|client with reason 1010 Missing Extension
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1012 Service Restart
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1006 Abnormal Closure- reserved
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1003 Unsupported Data
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1007 Invalid frame payload data
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1001 Going Away
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1009 Message too big
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1000 Normal
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1008 Policy Violation
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1005 No Status Recvd- reserved
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1013 Try Again Later
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1004 Reserved
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1015 TLS Handshake
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1002 Protocol Error
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1014 Bad Gateway
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Closing ws|client with reason 1011 Internal Error
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: Open a ws|client, close it using a status code from RFC 6455 7.4.1
 and also a custom reason string. Verify error messages on server.out reflect the codes.
INFO: Closing ws|client with reason1000 Normal and goodbye!
W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   0s 127.0.0.1:8092:8092 â‰£16
INFO: 
Open a ws|client. Throw an InterruptException to it. Check that the ws|server
 error shows the reason for the close.
 A lot of error text will spill over into REPL, but the test is unaffected

W- throttling 127.0.0.1
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Accept:  ğŸ”—    0â†‘     0â†“    0s 127.0.0.1:8092:8092 â‰£16
I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’   3s 127.0.0.1:8092:8092 â‰£16ERROR (unhandled task failure): WebSockets.WebSocketClosedError(" while read(ws|client received InterruptException. Performed closing handshake.")
Stacktrace:
 [1] read(::WebSockets.WebSocket{TCPSocket}) at /home/vagrant/.julia/v0.6/WebSockets/src/WebSockets.jl:438
 [2] _openstream(::##90#93, ::HTTP.Streams.Stream{HTTP.Messages.Response,HTTP.ConnectionPool.Transaction{TCPSocket}}, ::String) at /home/vagrant/.julia/v0.6/WebSockets/src/HTTP.jl:80
 [3] macro expansion at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:61 [inlined]
 [4] macro expansion at ./task.jl:302 [inlined]
 [5] #request#1(::Void, ::WebSockets.##38#39{##90#93,String}, ::Int64, ::Array{Any,1}, ::Function, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{TCPSocket}, ::HTTP.Messages.Request, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:53
 [6] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{TCPSocket}, ::HTTP.Messages.Request, ::Void) at ./<missing>:0
 [7] #request#1(::Void, ::Type{T} where T, ::Array{Any,1}, ::Function, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/ConnectionRequest.jl:45
 [8] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Void) at ./<missing>:0
 [9] #request#1(::Array{Any,1}, ::Function, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/HTTP/src/ExceptionRequest.jl:19
 [10] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Void) at ./<missing>:0
 [11] (::Base.###49#50#52{ExponentialBackOff,HTTP.RetryRequest.##2#3{Bool,HTTP.Messages.Request},HTTP.#request})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at ./error.jl:139
 [12] (::Base.#kw###49#51)(::Array{Any,1}, ::Base.##49#51, ::Type{T} where T, ::Vararg{Any,N} where N) at ./<missing>:0
 [13] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/RetryRequest.jl:44
 [14] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Void) at ./<missing>:0
 [15] #request#1(::VersionNumber, ::String, ::Void, ::Function, ::Array{Any,1}, ::Function, ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/MessageRequest.jl:44
 [16] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at ./<missing>:0
 [17] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/RedirectRequest.jl:24
 [18] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at ./<missing>:0
 [19] #request#7(::Array{Any,1}, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:289
 [20] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Void) at ./<missing>:0
 [21] #request#8(::Array{Pair{String,String},1}, ::Void, ::Void, ::Array{Any,1}, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{String,String},1}, ::Void) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:303
 [22] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::String, ::HTTP.URIs.URI, ::Array{Pair{String,String},1}, ::Void) at ./<missing>:0
 [23] #open#9(::Array{Any,1}, ::Function, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{String,String},1}) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:328
 [24] (::HTTP.#kw##open)(::Array{Any,1}, ::HTTP.#open, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{String,String},1}) at ./<missing>:0
 [25] #open#37(::Bool, ::String, ::Array{Any,1}, ::Function, ::Function, ::String) at /home/vagrant/.julia/v0.6/WebSockets/src/HTTP.jl:46
 [26] (::##89#92)() at ./event.jl:73

I- Closed:  ğŸ’€    1â†‘     1â†“ğŸ”’  10s 127.0.0.1:8092:8092 â‰£16
W- accept: software caused connection abort (ECONNABORTED)
Test Summary: | Pass  Total
WebSockets    | 1044   1044
INFO: WebSockets tests passed
INFO: Removing HTTP v0.6.12
INFO: Removing IniFile v0.4.0

>>> End of log
