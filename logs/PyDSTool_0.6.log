>>> 'Pkg.add("PyDSTool")' log
INFO: Cloning cache of PyDSTool from https://github.com/JuliaDiffEq/PyDSTool.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Conda v0.5.3
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffEqBase v1.11.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing LinearMaps v0.3.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing PyCall v1.12.0
INFO: Installing PyDSTool v0.1.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.9.0
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing StaticArrays v0.5.1
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Building PyDSTool
WARNING: Method definition macroexpand(Module, Any) in module Compat at /home/vagrant/.julia/v0.6/Compat/src/Compat.jl:1491 overwritten in module MacroTools at /home/vagrant/.julia/v0.6/MacroTools/src/utils.jl:64.
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyDSTool
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyDSTool")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (898.52734375 MB free)
Uptime: 43943.0 sec
Load Avg:  1.07421875  1.001953125  0.9736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2867413 s       6724 s     127440 s     673592 s         50 s
#2  3500 MHz     547648 s        113 s      62292 s    3698971 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - PyDSTool                      0.1.2
17 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - Conda                         0.5.3
 - DataStructures                0.5.3
 - DiffEqBase                    1.11.0
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - LinearMaps                    0.3.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - PyCall                        1.12.0
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.9.0
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - StaticArrays                  0.5.1
 - URIParser                     0.1.8
INFO: Computing test dependencies for PyDSTool...
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building SymEngine
INFO: Testing PyDSTool
WARNING: Method definition macroexpand(Module, Any) in module Compat at /home/vagrant/.julia/v0.6/Compat/src/Compat.jl:1491 overwritten in module MacroTools at /home/vagrant/.julia/v0.6/MacroTools/src/utils.jl:64.
WARNING: Method definition macroexpand(Module, Any) in module Compat at /home/vagrant/.julia/v0.6/Compat/src/Compat.jl:1491 overwritten in module MacroTools at /home/vagrant/.julia/v0.6/MacroTools/src/utils.jl:64.
Test Summary: |
Linear Solve  | No tests
  4.214148 seconds (983.31 k allocations: 54.236 MiB, 2.94% gc time)
Test Summary:  | Pass  Total
Calcium Direct |    2      2
 41.426115 seconds (753.50 k allocations: 37.426 MiB, 0.05% gc time)
Test Summary:         | Pass  Total
Calcium Parameterized |    1      1
 11.562088 seconds (2.60 M allocations: 136.273 MiB, 0.70% gc time)
elapsed time: 59.166680129 seconds
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
PyCont curve SN1 (type LP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  SN1
auxpars  =  []
freepars  =  ['i', 'gca']
MaxNumPoints  =  200
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['CP']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method FoldCurve._MoorePenrose of PyCont curve SN1 (type LP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
INFO: PyDSTool tests passed
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing SymEngine v0.2.0

>>> End of log
