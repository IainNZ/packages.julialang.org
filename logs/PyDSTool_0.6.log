>>> 'Pkg.add("PyDSTool")' log
INFO: Cloning cache of PyDSTool from https://github.com/JuliaDiffEq/PyDSTool.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing Conda v0.7.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffEqBase v3.6.2
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing NamedTuples v4.0.0
INFO: Installing PyCall v1.15.0
INFO: Installing PyDSTool v0.4.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.6.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing TableTraits v0.1.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.14.1          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyDSTool
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyDSTool")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (802.21875 MB free)
Uptime: 24540.0 sec
Load Avg:  0.98486328125  0.9853515625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1404588 s         56 s      75804 s     625413 s         27 s
#2  3499 MHz     324114 s       6568 s      39136 s    2034766 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.1
 - PyDSTool                      0.4.0
20 additional packages:
 - BinDeps                       0.8.7
 - Compat                        0.56.0
 - Conda                         0.7.1
 - DataStructures                0.7.4
 - DiffEqBase                    3.6.2
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.4
 - PyCall                        1.15.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Requires                      0.4.3
 - SHA                           0.5.6
 - SimpleTraits                  0.6.0
 - StaticArrays                  0.7.0
 - TableTraits                   0.1.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for PyDSTool...
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing SymEngine v0.3.0
INFO: Building Conda
INFO: Building SymEngine
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Testing PyDSTool
INFO: Installing PyDSTool via the Conda pydstool package...
Warning: 'conda-forge' already in 'channels' list, moving to the top
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pydstool: 0.90.2-py27_0 conda-forge

pydstool-0.90.   0% |                              | ETA:  --:--:--   0.00  B/spydstool-0.90.   1% |                               | ETA:  0:00:00   2.14 MB/spydstool-0.90.   2% |                               | ETA:  0:00:01   1.17 MB/spydstool-0.90.   3% |#                              | ETA:  0:00:00   1.70 MB/spydstool-0.90.   4% |#                              | ETA:  0:00:00   1.84 MB/spydstool-0.90.   5% |#                              | ETA:  0:00:00   2.25 MB/spydstool-0.90.   7% |##                             | ETA:  0:00:00   1.95 MB/spydstool-0.90.   8% |##                             | ETA:  0:00:00   2.24 MB/spydstool-0.90.   9% |##                             | ETA:  0:00:00   2.00 MB/spydstool-0.90.  10% |###                            | ETA:  0:00:00   2.21 MB/spydstool-0.90.  11% |###                            | ETA:  0:00:00   2.44 MB/spydstool-0.90.  12% |####                           | ETA:  0:00:00   2.66 MB/spydstool-0.90.  14% |####                           | ETA:  0:00:00   2.44 MB/spydstool-0.90.  15% |####                           | ETA:  0:00:00   2.59 MB/spydstool-0.90.  16% |#####                          | ETA:  0:00:00   2.76 MB/spydstool-0.90.  17% |#####                          | ETA:  0:00:00   2.54 MB/spydstool-0.90.  18% |#####                          | ETA:  0:00:00   2.69 MB/spydstool-0.90.  19% |######                         | ETA:  0:00:00   2.84 MB/spydstool-0.90.  21% |######                         | ETA:  0:00:00   2.99 MB/spydstool-0.90.  22% |######                         | ETA:  0:00:00   3.14 MB/spydstool-0.90.  23% |#######                        | ETA:  0:00:00   3.29 MB/spydstool-0.90.  24% |#######                        | ETA:  0:00:00   3.43 MB/spydstool-0.90.  25% |########                       | ETA:  0:00:00   3.58 MB/spydstool-0.90.  26% |########                       | ETA:  0:00:00   3.72 MB/spydstool-0.90.  28% |########                       | ETA:  0:00:00   3.87 MB/spydstool-0.90.  29% |#########                      | ETA:  0:00:00   3.85 MB/spydstool-0.90.  30% |#########                      | ETA:  0:00:00   3.97 MB/spydstool-0.90.  31% |#########                      | ETA:  0:00:00   3.91 MB/spydstool-0.90.  32% |##########                     | ETA:  0:00:00   3.97 MB/spydstool-0.90.  34% |##########                     | ETA:  0:00:00   4.05 MB/spydstool-0.90.  35% |##########                     | ETA:  0:00:00   4.14 MB/spydstool-0.90.  36% |###########                    | ETA:  0:00:00   4.23 MB/spydstool-0.90.  37% |###########                    | ETA:  0:00:00   4.34 MB/spydstool-0.90.  38% |############                   | ETA:  0:00:00   4.44 MB/spydstool-0.90.  39% |############                   | ETA:  0:00:00   4.51 MB/spydstool-0.90.  41% |############                   | ETA:  0:00:00   4.59 MB/spydstool-0.90.  42% |#############                  | ETA:  0:00:00   4.66 MB/spydstool-0.90.  43% |#############                  | ETA:  0:00:00   4.77 MB/spydstool-0.90.  44% |#############                  | ETA:  0:00:00   4.85 MB/spydstool-0.90.  45% |##############                 | ETA:  0:00:00   4.95 MB/spydstool-0.90.  46% |##############                 | ETA:  0:00:00   5.05 MB/spydstool-0.90.  48% |##############                 | ETA:  0:00:00   5.01 MB/spydstool-0.90.  49% |###############                | ETA:  0:00:00   5.09 MB/spydstool-0.90.  50% |###############                | ETA:  0:00:00   5.15 MB/spydstool-0.90.  51% |################               | ETA:  0:00:00   5.23 MB/spydstool-0.90.  52% |################               | ETA:  0:00:00   5.31 MB/spydstool-0.90.  53% |################               | ETA:  0:00:00   5.38 MB/spydstool-0.90.  55% |#################              | ETA:  0:00:00   5.45 MB/spydstool-0.90.  56% |#################              | ETA:  0:00:00   5.53 MB/spydstool-0.90.  57% |#################              | ETA:  0:00:00   5.61 MB/spydstool-0.90.  58% |##################             | ETA:  0:00:00   5.70 MB/spydstool-0.90.  59% |##################             | ETA:  0:00:00   5.76 MB/spydstool-0.90.  61% |##################             | ETA:  0:00:00   5.84 MB/spydstool-0.90.  62% |###################            | ETA:  0:00:00   5.92 MB/spydstool-0.90.  63% |###################            | ETA:  0:00:00   5.98 MB/spydstool-0.90.  64% |####################           | ETA:  0:00:00   6.05 MB/spydstool-0.90.  65% |####################           | ETA:  0:00:00   6.13 MB/spydstool-0.90.  66% |####################           | ETA:  0:00:00   6.20 MB/spydstool-0.90.  68% |#####################          | ETA:  0:00:00   6.25 MB/spydstool-0.90.  69% |#####################          | ETA:  0:00:00   6.30 MB/spydstool-0.90.  70% |#####################          | ETA:  0:00:00   6.34 MB/spydstool-0.90.  71% |######################         | ETA:  0:00:00   6.38 MB/spydstool-0.90.  72% |######################         | ETA:  0:00:00   6.44 MB/spydstool-0.90.  73% |######################         | ETA:  0:00:00   6.51 MB/spydstool-0.90.  75% |#######################        | ETA:  0:00:00   6.54 MB/spydstool-0.90.  76% |#######################        | ETA:  0:00:00   6.59 MB/spydstool-0.90.  77% |########################       | ETA:  0:00:00   6.64 MB/spydstool-0.90.  78% |########################       | ETA:  0:00:00   6.69 MB/spydstool-0.90.  79% |########################       | ETA:  0:00:00   6.74 MB/spydstool-0.90.  80% |#########################      | ETA:  0:00:00   6.81 MB/spydstool-0.90.  82% |#########################      | ETA:  0:00:00   6.87 MB/spydstool-0.90.  83% |#########################      | ETA:  0:00:00   6.92 MB/spydstool-0.90.  84% |##########################     | ETA:  0:00:00   6.96 MB/spydstool-0.90.  85% |##########################     | ETA:  0:00:00   7.01 MB/spydstool-0.90.  86% |##########################     | ETA:  0:00:00   7.06 MB/spydstool-0.90.  88% |###########################    | ETA:  0:00:00   7.11 MB/spydstool-0.90.  89% |###########################    | ETA:  0:00:00   7.16 MB/spydstool-0.90.  90% |############################   | ETA:  0:00:00   7.21 MB/spydstool-0.90.  91% |############################   | ETA:  0:00:00   7.26 MB/spydstool-0.90.  92% |############################   | ETA:  0:00:00   7.30 MB/spydstool-0.90.  93% |#############################  | ETA:  0:00:00   7.36 MB/spydstool-0.90.  95% |#############################  | ETA:  0:00:00   7.41 MB/spydstool-0.90.  96% |#############################  | ETA:  0:00:00   7.47 MB/spydstool-0.90.  97% |############################## | ETA:  0:00:00   7.53 MB/spydstool-0.90.  98% |############################## | ETA:  0:00:00   7.60 MB/spydstool-0.90.  99% |############################## | ETA:  0:00:00   7.67 MB/spydstool-0.90. 100% |###############################| Time: 0:00:00   7.67 MB/s
Test Summary: |
Linear Solve  | No tests
  4.915618 seconds (1.74 M allocations: 93.159 MiB, 0.88% gc time)
Test Summary:  | Pass  Total
Calcium Direct |    2      2
 37.570134 seconds (459.23 k allocations: 24.021 MiB, 0.02% gc time)
Test Summary:         | Pass  Total
Calcium Parameterized |    1      1
 22.151844 seconds (2.75 M allocations: 143.512 MiB, 0.34% gc time)
elapsed time: 65.385093003 seconds
Warning: matplotlib failed to import properly and so is not
  providing a graphing interface
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
PyCont curve SN1 (type LP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  SN1
auxpars  =  []
freepars  =  ['i', 'gca']
MaxNumPoints  =  200
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['CP']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method FoldCurve._MoorePenrose of PyCont curve SN1 (type LP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
INFO: PyDSTool tests passed
INFO: Removing ParameterizedFunctions v3.0.0
INFO: Removing SymEngine v0.3.0

>>> End of log
