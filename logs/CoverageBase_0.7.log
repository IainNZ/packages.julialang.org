>>> 'Pkg.add("CoverageBase")' log
[ Info: Cloning cache of CoverageBase from https://github.com/JuliaCI/CoverageBase.jl.git
[ Info: Installing BinDeps v0.8.5
[ Info: Installing Blosc v0.3.0
[ Info: Installing BufferedStreams v0.3.3
[ Info: Installing Codecs v0.4.0
[ Info: Installing Coverage v0.4.0
[ Info: Installing CoverageBase v0.0.3
[ Info: Installing Git v0.2.0
[ Info: Installing HDF5 v0.8.8
[ Info: Installing HttpCommon v0.3.0
[ Info: Installing HttpParser v0.3.0
[ Info: Installing Libz v0.2.4
[ Info: Installing MbedTLS v0.5.4
[ Info: Installing Requests v0.5.1
[ Info: Installing SHA v0.5.3
[ Info: Installing URIParser v0.3.0
[ Info: Building Blosc
┌ Error: ------------------------------------------------------------
│ # Build failed for Blosc
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] top-level scope
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:521
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:555
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Blosc/deps/build.jl:6
└ @ Main none:15
[ Info: Building Git
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: Deprecated syntax `implicit assignment to global variable `gitver``.
│ Use `global gitver` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `gitver``.
│ Use `global gitver` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `gitpath``.
│ Use `global gitpath` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `gitcmd``.
│ Use `global gitcmd` instead.
└ @ nothing none:0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope at build.jl:75
└ @ Core build.jl:75
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:78
└ @ Core build.jl:78
INFO: Using git version 1.9.1 found on path at `/usr/bin/git`
[ Info: Building HttpParser
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope
└ @ Core :0
┌ Error: ------------------------------------------------------------
│ # Build failed for HttpParser
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] top-level scope at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:38
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:521
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:555
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:38
└ @ Main none:15
[ Info: Building MbedTLS
Using system libraries...
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MbedTLS/deps/build.jl:48
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building HDF5
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:40
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Error: ------------------------------------------------------------
│ # Build failed for HDF5
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] h5_get_libversion(::String, ::Ptr{Nothing}) at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:10
│     [2] compatible_version(::String, ::Ptr{Nothing}) at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:16
│     [3] check_system_handle!(::Array{Any,1}, ::BinDeps.LibraryDependency, ::Ptr{Nothing}) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:741
│     [4] check_path!(::Array{Any,1}, ::BinDeps.LibraryDependency, ::String) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:717
│     [5] #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:708
│     [6] _find_library at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:642 [inlined]
│     [7] satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:921 (repeats 2 times)
│     [8] top-level scope at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:976
│     [9] include at ./boot.jl:292 [inlined]
│     [10] include_relative(::Module, ::String) at ./loading.jl:521
│     [11] include at ./sysimg.jl:26 [inlined]
│     [12] include(::String) at ./loading.jl:555
│     [13] top-level scope
│     [14] eval at ./boot.jl:295 [inlined]
│     [15] eval at ./sysimg.jl:71 [inlined]
│     [16] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [17] #2 at ./none:12 [inlined]
│     [18] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [19] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [20] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [21] top-level scope
│     [22] eval at ./boot.jl:295 [inlined]
│     [23] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [24] process_options(::Base.JLOptions) at ./client.jl:301
│     [25] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ HDF5, HttpParser and Blosc had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("HDF5", "HttpParser", "Blosc")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:650
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CoverageBase
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CoverageBase")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2220107 s       6361 s     119375 s     488840 s         18 s
       #2  3500 MHz     427647 s       1155 s      50604 s    2815816 s          0 s
       
  Memory: 2.93927001953125 GB (1035.92578125 MB free)
  Uptime: 33489.0 sec
  Load Avg:  0.994140625  0.9853515625  0.98095703125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CoverageBase                  0.0.3
 - JSON                          0.16.4
16 additional packages:
 - BinDeps                       0.8.5
 - Blosc                         0.3.0
 - BufferedStreams               0.3.3
 - Codecs                        0.4.0
 - Compat                        0.46.0
 - Coverage                      0.4.0
 - Git                           0.2.0
 - HDF5                          0.8.8
 - HttpCommon                    0.3.0
 - HttpParser                    0.3.0
 - Libz                          0.2.4
 - MbedTLS                       0.5.4
 - Nullables                     0.0.3
 - Requests                      0.5.1
 - SHA                           0.5.3
 - URIParser                     0.3.0
[ Info: Testing CoverageBase
ERROR: LoadError: LoadError: UndefVarError: JULIA_HOME not defined
Stacktrace:
 [1] julia_top() at /home/vagrant/.julia/v0.7/CoverageBase/src/CoverageBase.jl:8
 [2] top-level scope
 [3] include at ./boot.jl:292 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] _require(::Symbol) at ./loading.jl:453
 [6] require(::Symbol) at ./loading.jl:333
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:521
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] process_options(::Base.JLOptions) at ./client.jl:324
 [11] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/CoverageBase/src/CoverageBase.jl:21
in expression starting at /home/vagrant/.julia/v0.7/CoverageBase/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for CoverageBase
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CoverageBase/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
ERROR: CoverageBase had test errors

>>> End of log
