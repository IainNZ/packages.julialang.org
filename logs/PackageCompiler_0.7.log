>>> 'Pkg.add("PackageCompiler")' log
[ Info: Cloning cache of Compat from https://github.com/JuliaLang/Compat.jl.git
[ Info: Cloning cache of PackageCompiler from https://github.com/SimonDanisch/PackageCompiler.jl.git
[ Info: Cloning cache of SnoopCompile from https://github.com/timholy/SnoopCompile.jl.git
[ Info: Installing Compat v0.46.0
[ Info: Installing PackageCompiler v0.2.0
[ Info: Installing SnoopCompile v0.2.0
[ Info: Building PackageCompiler
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = build() at build.jl:32
└ @ Main.__anon__ build.jl:32
INFO: installing gcc
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = build() at build.jl:36
└ @ Main.__anon__ build.jl:36
INFO: using cc as a compiler
[ Info: Package database updated

>>> 'Pkg.test("PackageCompiler")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz       5797 s        132 s       1993 s      50101 s          0 s
       #2  3500 MHz       3636 s         41 s       1750 s      54680 s          0 s
       
  Memory: 2.93927001953125 GB (578.171875 MB free)
  Uptime: 612.0 sec
  Load Avg:  0.45654296875  0.25830078125  0.13623046875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
1 required packages:
 - PackageCompiler               0.2.0
2 additional packages:
 - Compat                        0.46.0
 - SnoopCompile                  0.2.0
[ Info: Computing test dependencies for PackageCompiler...
[ Info: Cloning cache of Matcha from https://github.com/SimonDanisch/Matcha.jl.git
[ Info: Cloning cache of UnicodeFun from https://github.com/SimonDanisch/UnicodeFun.jl.git
[ Info: Installing Matcha v0.1.1
[ Info: Installing UnicodeFun v0.1.0
[ Info: Testing PackageCompiler
ERROR: LoadError: UndefVarError: Libdl not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include(::Module, ::String) at ./sysimg.jl:26
 [5] top-level scope
 [6] eval at ./boot.jl:295 [inlined]
 [7] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/PackageCompiler/src/PackageCompiler.jl:8
ERROR: LoadError: Failed to precompile PackageCompiler to /home/vagrant/.julia/lib/v0.7/PackageCompiler.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/PackageCompiler/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for PackageCompiler
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PackageCompiler/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
[ Info: Removing Matcha v0.1.1
[ Info: Removing UnicodeFun v0.1.0
ERROR: PackageCompiler had test errors

>>> End of log
