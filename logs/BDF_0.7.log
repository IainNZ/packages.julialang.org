>>> 'Pkg.add("BDF")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of BDF from https://github.com/sam81/BDF.jl.git
[ Info: Installing BDF v0.3.0
[ Info: Installing BinDeps v0.8.8
[ Info: Installing BinaryProvider v0.3.0
[ Info: Installing Blosc v0.4.2
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing HDF5 v0.8.8
[ Info: Installing SHA v0.5.7
[ Info: Installing URIParser v0.3.1
[ Info: Building Blosc
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:376
└ @ BinaryProvider PlatformNames.jl:376
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::BinaryProvider.Prefix` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Blosc/deps/build.jl:45
[ Info: Building HDF5
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:975
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:975
[ Info: Package database updated

>>> 'Pkg.test("BDF")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1010323 s         74 s      80774 s     384331 s         10 s
       #2  3499 MHz     272440 s         96 s      33410 s    1383096 s          0 s
       
  Memory: 2.939197540283203 GB (699.90234375 MB free)
  Uptime: 17168.0 sec
  Load Avg:  0.90576171875  0.96875  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BDF                           0.3.0
 - JSON                          0.17.2
9 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - Blosc                         0.4.2
 - Compat                        0.64.0
 - DocStringExtensions           0.4.4
 - HDF5                          0.8.8
 - Nullables                     0.0.5
 - SHA                           0.5.7
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing BDF
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:277.
│ Use `at most one line break` instead.
└ @ nothing BDF.jl:277
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:926.
│ Use `at most one line break` instead.
└ @ nothing BDF.jl:926
┌ Warning: Deprecated syntax `parametric method syntax writeBDF{P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ])` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:449.
│ Use `writeBDF(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ]) where {P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}` instead.
└ @ nothing BDF.jl:449
┌ Warning: Deprecated syntax `parametric method syntax splitBDFAtTime{T <: Real}(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1)` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:858.
│ Use `splitBDFAtTime(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1) where T <: Real` instead.
└ @ nothing BDF.jl:858
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:1
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:289
└ @ BDF BDF.jl:289
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:290
└ @ BDF BDF.jl:290
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:291
└ @ BDF BDF.jl:291
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:292
└ @ BDF BDF.jl:292
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:293
└ @ BDF BDF.jl:293
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:294
└ @ BDF BDF.jl:294
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:295
└ @ BDF BDF.jl:295
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:296
└ @ BDF BDF.jl:296
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:297
└ @ BDF BDF.jl:297
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:299
└ @ BDF BDF.jl:299
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:300
└ @ BDF BDF.jl:300
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:301
└ @ BDF BDF.jl:301
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:302
└ @ BDF BDF.jl:302
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:303
└ @ BDF BDF.jl:303
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:304
└ @ BDF BDF.jl:304
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:305
└ @ BDF BDF.jl:305
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:306
└ @ BDF BDF.jl:306
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:307
└ @ BDF BDF.jl:307
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:308
└ @ BDF BDF.jl:308
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:309
└ @ BDF BDF.jl:309
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:310
└ @ BDF BDF.jl:310
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:311
└ @ BDF BDF.jl:311
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:316
└ @ BDF BDF.jl:316
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:320
└ @ BDF BDF.jl:320
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:324
└ @ BDF BDF.jl:324
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:328
└ @ BDF BDF.jl:328
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:332
└ @ BDF BDF.jl:332
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:336
└ @ BDF BDF.jl:336
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:340
└ @ BDF BDF.jl:340
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:344
└ @ BDF BDF.jl:344
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:348
└ @ BDF BDF.jl:348
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#5(::String, ::Function, ::IOStream) at BDF.jl:352
└ @ BDF BDF.jl:352
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:60
└ @ BDF BDF.jl:60
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:61
└ @ BDF BDF.jl:61
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:62
└ @ BDF BDF.jl:62
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:63
└ @ BDF BDF.jl:63
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:64
└ @ BDF BDF.jl:64
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:65
└ @ BDF BDF.jl:65
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:66
└ @ BDF BDF.jl:66
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:67
└ @ BDF BDF.jl:67
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:68
└ @ BDF BDF.jl:68
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:70
└ @ BDF BDF.jl:70
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:71
└ @ BDF BDF.jl:71
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:72
└ @ BDF BDF.jl:72
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:73
└ @ BDF BDF.jl:73
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:74
└ @ BDF BDF.jl:74
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:75
└ @ BDF BDF.jl:75
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:76
└ @ BDF BDF.jl:76
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:77
└ @ BDF BDF.jl:77
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:78
└ @ BDF BDF.jl:78
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:79
└ @ BDF BDF.jl:79
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:80
└ @ BDF BDF.jl:80
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:81
└ @ BDF BDF.jl:81
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:82
└ @ BDF BDF.jl:82
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:93
└ @ BDF BDF.jl:93
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:97
└ @ BDF BDF.jl:97
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:101
└ @ BDF BDF.jl:101
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:105
└ @ BDF BDF.jl:105
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:109
└ @ BDF BDF.jl:109
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:113
└ @ BDF BDF.jl:113
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:117
└ @ BDF BDF.jl:117
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:121
└ @ BDF BDF.jl:121
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:125
└ @ BDF BDF.jl:125
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:129
└ @ BDF BDF.jl:129
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:148
└ @ BDF BDF.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:150
└ @ BDF BDF.jl:150
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:151
└ @ BDF BDF.jl:151
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:155
└ @ BDF BDF.jl:155
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:219
└ @ BDF BDF.jl:219
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:220
└ @ BDF BDF.jl:220
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:1
WARNING: importing deprecated binding Base.DateTime into BDF.
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: importing deprecated binding Base.Dates into BDF.
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#51 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #splitBDFAtTrigger#51(::Int64, ::Int64, ::Function, ::String, ::Int64) at BDF.jl:806
└ @ BDF BDF.jl:806
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#52 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#52 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:238.
│ Use `struct` instead.
└ @ nothing HDF5.jl:238
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:280.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:280
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:285.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:285
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:312.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:312
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:334.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:334
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:353.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:353
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:372.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:372
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:401.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:401
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:412.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:412
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:425.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:425
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:430.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:430
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:455.
│ Use `struct` instead.
└ @ nothing HDF5.jl:455
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:462.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:462
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:468.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:468
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:471.
│ Use `struct` instead.
└ @ nothing HDF5.jl:471
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:476.
│ Use `mutable struct` instead.
└ @ nothing HDF5.jl:476
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:485.
│ Use `struct` instead.
└ @ nothing HDF5.jl:485
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:501.
│ Use `struct` instead.
└ @ nothing HDF5.jl:501
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:509.
│ Use `struct` instead.
└ @ nothing HDF5.jl:509
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:513.
│ Use `struct` instead.
└ @ nothing HDF5.jl:513
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:537.
│ Use `struct` instead.
└ @ nothing HDF5.jl:537
┌ Warning: Deprecated syntax `(row...)` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1428.
│ Use `(row...,)` instead.
└ @ nothing HDF5.jl:1428
┌ Warning: Deprecated syntax `(membername...)` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1471.
│ Use `(membername...,)` instead.
└ @ nothing HDF5.jl:1471
┌ Warning: Deprecated syntax `(membertype...)` at /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1472.
│ Use `(membertype...,)` instead.
└ @ nothing HDF5.jl:1472
┌ Warning: Deprecated syntax `parametric method syntax hdf5_type_id{S <: AbstractString}(::Type{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:274.
│ Use `hdf5_type_id(#unused#::Type{S}) where S <: AbstractString` instead.
└ @ nothing HDF5.jl:274
┌ Warning: Deprecated syntax `parametric method syntax hdf5_type_id{C <: CharType}(::Type{C})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:298.
│ Use `hdf5_type_id(#unused#::Type{C}) where C <: CharType` instead.
└ @ nothing HDF5.jl:298
┌ Warning: Deprecated syntax `parametric method syntax size{T, D}(::Type{FixedArray{T, D}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:472.
│ Use `size(#unused#::Type{FixedArray{T, D}}) where {T, D}` instead.
└ @ nothing HDF5.jl:472
┌ Warning: Deprecated syntax `parametric method syntax eltype{T, D}(::Type{FixedArray{T, D}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:473.
│ Use `eltype(#unused#::Type{FixedArray{T, D}}) where {T, D}` instead.
└ @ nothing HDF5.jl:473
┌ Warning: Deprecated syntax `parametric method syntax HDF5Vlen{S <: String}(strs::Array{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:479.
│ Use `HDF5Vlen(strs::Array{S}) where S <: String` instead.
└ @ nothing HDF5.jl:479
┌ Warning: Deprecated syntax `parametric method syntax HDF5Vlen{T <: HDF5Scalar}(A::Array{Array{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:480.
│ Use `HDF5Vlen(A::Array{Array{T}}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:480
┌ Warning: Deprecated syntax `parametric method syntax HDF5Vlen{T <: HDF5Scalar, N}(A::Array{Array{T, N}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:481.
│ Use `HDF5Vlen(A::Array{Array{T, N}}) where {T <: HDF5Scalar, N}` instead.
└ @ nothing HDF5.jl:481
WARNING: importing deprecated binding Base.Void into HDF5.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:485
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:485
┌ Warning: Deprecated syntax `parametric method syntax vlenpack{T <: Union{HDF5Scalar, CharType}}(v::HDF5Vlen{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:491.
│ Use `vlenpack(v::HDF5Vlen{T}) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:491
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12.
│ Use `struct` instead.
└ @ nothing blosc_filter.jl:12
WARNING: importing deprecated binding Base.Libdl into Blosc.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Blosc/src/Blosc.jl:316
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Blosc/src/Blosc.jl:316
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:12
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/blosc_filter.jl:76
┌ Warning: Deprecated syntax `parametric method syntax heuristic_chunk{T}(A::AbstractArray{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:570.
│ Use `heuristic_chunk(A::AbstractArray{T}) where T` instead.
└ @ nothing HDF5.jl:570
┌ Warning: Deprecated syntax `parametric method syntax datatype{T <: HDF5Scalar}(x::T)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1128.
│ Use `datatype(x::T) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1128
┌ Warning: Deprecated syntax `parametric method syntax datatype{T <: HDF5Scalar}(::Type{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1129.
│ Use `datatype(#unused#::Type{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1129
┌ Warning: Deprecated syntax `parametric method syntax datatype{T <: HDF5Scalar}(A::Array{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1130.
│ Use `datatype(A::Array{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1130
┌ Warning: Deprecated syntax `parametric method syntax datatype{S <: String}(str::S)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1132.
│ Use `datatype(str::S) where S <: String` instead.
└ @ nothing HDF5.jl:1132
┌ Warning: Deprecated syntax `parametric method syntax datatype{S <: String}(str::Array{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1138.
│ Use `datatype(str::Array{S}) where S <: String` instead.
└ @ nothing HDF5.jl:1138
┌ Warning: Deprecated syntax `parametric method syntax datatype{T <: HDF5Scalar}(A::HDF5Vlen{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1143.
│ Use `datatype(A::HDF5Vlen{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1143
┌ Warning: Deprecated syntax `parametric method syntax datatype{C <: CharType}(str::HDF5Vlen{C})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1145.
│ Use `datatype(str::HDF5Vlen{C}) where C <: CharType` instead.
└ @ nothing HDF5.jl:1145
┌ Warning: Deprecated syntax `parametric method syntax dataspace{T <: HDF5Scalar}(x::T)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1159.
│ Use `dataspace(x::T) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1159
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1187
┌ Warning: Deprecated syntax `parametric method syntax read{T <: HDF5Scalar}(obj::DatasetOrAttribute, ::Type{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1255.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1255
┌ Warning: Deprecated syntax `parametric method syntax read{T <: HDF5Scalar}(obj::DatasetOrAttribute, ::Type{Array{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1260.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{Array{T}}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1260
┌ Warning: Deprecated syntax `parametric method syntax read{T <: ScalarOrString}(obj::DatasetOrAttribute, ::Type{EmptyArray{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1270.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{EmptyArray{T}}) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1270
┌ Warning: Deprecated syntax `parametric method syntax read{A <: FixedArray}(obj::DatasetOrAttribute, ::Type{A})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1274.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{A}) where A <: FixedArray` instead.
└ @ nothing HDF5.jl:1274
┌ Warning: Deprecated syntax `parametric method syntax read{A <: FixedArray}(obj::DatasetOrAttribute, ::Type{Array{A}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1281.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{Array{A}}) where A <: FixedArray` instead.
└ @ nothing HDF5.jl:1281
┌ Warning: Deprecated syntax `parametric method syntax read{S <: String}(obj::DatasetOrAttribute, ::Type{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1322.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{S}) where S <: String` instead.
└ @ nothing HDF5.jl:1322
┌ Warning: Deprecated syntax `parametric method syntax read{S <: CharType}(obj::DatasetOrAttribute, ::Type{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1345.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{S}) where S <: CharType` instead.
└ @ nothing HDF5.jl:1345
┌ Warning: Deprecated syntax `parametric method syntax read{S <: String}(obj::DatasetOrAttribute, ::Type{Array{S}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1348.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{Array{S}}) where S <: String` instead.
└ @ nothing HDF5.jl:1348
┌ Warning: Deprecated syntax `parametric method syntax read{S <: CharType}(obj::DatasetOrAttribute, ::Type{Array{S}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1399.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{Array{S}}) where S <: CharType` instead.
└ @ nothing HDF5.jl:1399
┌ Warning: Deprecated syntax `parametric method syntax read{C <: CharType}(obj::DatasetOrAttribute, ::Type{EmptyArray{C}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1402.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{EmptyArray{C}}) where C <: CharType` instead.
└ @ nothing HDF5.jl:1402
┌ Warning: Deprecated syntax `parametric method syntax read{N}(obj::HDF5Dataset, T::Union{Type{Array{HDF5Compound{N}}}, Type{HDF5Compound{N}}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1433.
│ Use `read(obj::HDF5Dataset, T::Union{Type{Array{HDF5Compound{N}}}, Type{HDF5Compound{N}}}) where N` instead.
└ @ nothing HDF5.jl:1433
┌ Warning: Deprecated syntax `parametric method syntax atype{T <: HDF5Scalar}(::Type{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1503.
│ Use `atype(#unused#::Type{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1503
┌ Warning: Deprecated syntax `parametric method syntax atype{C <: CharType}(::Type{C})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1504.
│ Use `atype(#unused#::Type{C}) where C <: CharType` instead.
└ @ nothing HDF5.jl:1504
┌ Warning: Deprecated syntax `parametric method syntax p2a{T <: HDF5Scalar}(p::Ptr{T}, len::Int)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1505.
│ Use `p2a(p::Ptr{T}, len::Int) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1505
┌ Warning: Deprecated syntax `parametric method syntax p2a{C <: CharType}(p::Ptr{C}, len::Int)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1506.
│ Use `p2a(p::Ptr{C}, len::Int) where C <: CharType` instead.
└ @ nothing HDF5.jl:1506
┌ Warning: Deprecated syntax `parametric method syntax t2p{T <: HDF5Scalar}(::Type{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1507.
│ Use `t2p(#unused#::Type{T}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1507
┌ Warning: Deprecated syntax `parametric method syntax t2p{C <: CharType}(::Type{C})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1508.
│ Use `t2p(#unused#::Type{C}) where C <: CharType` instead.
└ @ nothing HDF5.jl:1508
┌ Warning: Deprecated syntax `parametric method syntax read{T <: Union{HDF5Scalar, CharType}}(obj::DatasetOrAttribute, ::Type{HDF5Vlen{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1510.
│ Use `read(obj::DatasetOrAttribute, #unused#::Type{HDF5Vlen{T}}) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1510
┌ Warning: Deprecated syntax `parametric method syntax ismmappable{T <: HDF5Scalar}(::Type{Array{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1538.
│ Use `ismmappable(#unused#::Type{Array{T}}) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1538
┌ Warning: Deprecated syntax `parametric method syntax ismmappable{T}(obj::HDF5Dataset, ::Type{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1540.
│ Use `ismmappable(obj::HDF5Dataset, #unused#::Type{T}) where T` instead.
└ @ nothing HDF5.jl:1540
┌ Warning: Deprecated syntax `parametric method syntax readmmap{T}(obj::HDF5Dataset, ::Type{Array{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1544.
│ Use `readmmap(obj::HDF5Dataset, #unused#::Type{Array{T}}) where T` instead.
└ @ nothing HDF5.jl:1544
┌ Warning: Deprecated syntax `parametric method syntax d_create{T <: ScalarOrString}(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1612.
│ Use `d_create(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1612
┌ Warning: Deprecated syntax `parametric method syntax d_create{T <: Union{HDF5Scalar, CharType}}(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1615.
│ Use `d_create(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1615
┌ Warning: Deprecated syntax `parametric method syntax a_create{T <: ScalarOrString}(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1612.
│ Use `a_create(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1612
┌ Warning: Deprecated syntax `parametric method syntax a_create{T <: Union{HDF5Scalar, CharType}}(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1615.
│ Use `a_create(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1615
┌ Warning: Deprecated syntax `parametric method syntax d_write{T <: ScalarOrString}(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1635.
│ Use `d_write(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1635
┌ Warning: Deprecated syntax `parametric method syntax d_write{T <: Union{HDF5Scalar, CharType}}(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1638.
│ Use `d_write(parent::Union{HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1638
┌ Warning: Deprecated syntax `parametric method syntax a_write{T <: ScalarOrString}(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1635.
│ Use `a_write(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1635
┌ Warning: Deprecated syntax `parametric method syntax a_write{T <: Union{HDF5Scalar, CharType}}(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1638.
│ Use `a_write(parent::Union{HDF5.HDF5Dataset, HDF5.HDF5Datatype, HDF5.HDF5File, HDF5.HDF5Group}, name::String, data::HDF5Vlen{T}, plists...) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1638
┌ Warning: Deprecated syntax `parametric method syntax write{T <: ScalarOrString}(obj::DatasetOrAttribute, x::Union{T, Array{T}})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1645.
│ Use `write(obj::DatasetOrAttribute, x::Union{T, Array{T}}) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1645
┌ Warning: Deprecated syntax `parametric method syntax write{T <: Union{HDF5Scalar, CharType}}(obj::DatasetOrAttribute, data::HDF5Vlen{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1654.
│ Use `write(obj::DatasetOrAttribute, data::HDF5Vlen{T}) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1654
┌ Warning: Deprecated syntax `parametric method syntax write{T <: ScalarOrString}(parent::Union{HDF5File, HDF5Group}, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1662.
│ Use `write(parent::Union{HDF5File, HDF5Group}, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1662
┌ Warning: Deprecated syntax `parametric method syntax write{T <: ScalarOrString}(parent::HDF5Dataset, name::String, data::Union{T, Array{T}}, plists...)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1665.
│ Use `write(parent::HDF5Dataset, name::String, data::Union{T, Array{T}}, plists...) where T <: ScalarOrString` instead.
└ @ nothing HDF5.jl:1665
┌ Warning: Deprecated syntax `parametric method syntax h5a_write{T <: HDF5Scalar}(attr_id::Hid, mem_type_id::Hid, x::T)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1902.
│ Use `h5a_write(attr_id::Hid, mem_type_id::Hid, x::T) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1902
┌ Warning: Deprecated syntax `parametric method syntax h5a_write{S <: String}(attr_id::Hid, memtype_id::Hid, strs::Array{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1906.
│ Use `h5a_write(attr_id::Hid, memtype_id::Hid, strs::Array{S}) where S <: String` instead.
└ @ nothing HDF5.jl:1906
┌ Warning: Deprecated syntax `parametric method syntax h5a_write{T <: Union{HDF5Scalar, CharType}}(attr_id::Hid, memtype_id::Hid, v::HDF5Vlen{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1910.
│ Use `h5a_write(attr_id::Hid, memtype_id::Hid, v::HDF5Vlen{T}) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1910
┌ Warning: Deprecated syntax `parametric method syntax h5d_write{T <: HDF5Scalar}(dataset_id::Hid, memtype_id::Hid, x::T)` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1923.
│ Use `h5d_write(dataset_id::Hid, memtype_id::Hid, x::T) where T <: HDF5Scalar` instead.
└ @ nothing HDF5.jl:1923
┌ Warning: Deprecated syntax `parametric method syntax h5d_write{S <: String}(dataset_id::Hid, memtype_id::Hid, strs::Array{S})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1927.
│ Use `h5d_write(dataset_id::Hid, memtype_id::Hid, strs::Array{S}) where S <: String` instead.
└ @ nothing HDF5.jl:1927
┌ Warning: Deprecated syntax `parametric method syntax h5d_write{T <: Union{HDF5Scalar, CharType}}(dataset_id::Hid, memtype_id::Hid, v::HDF5Vlen{T})` around /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:1935.
│ Use `h5d_write(dataset_id::Hid, memtype_id::Hid, v::HDF5Vlen{T}) where T <: Union{HDF5Scalar, CharType}` instead.
└ @ nothing HDF5.jl:1935
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2001
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2064
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2064
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2064
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2064
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2064
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2337
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/src/HDF5.jl:2366
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
┌ Warning: The function `cfunction` is now written as a macro `@cfunction`.
│   caller = register_blosc() at blosc_filter.jl:122
└ @ HDF5 blosc_filter.jl:122
┌ Warning: The function `cfunction` is now written as a macro `@cfunction`.
│   caller = register_blosc() at blosc_filter.jl:123
└ @ HDF5 blosc_filter.jl:123
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:319 [inlined]
└ @ Core HDF5.jl:319
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:340 [inlined]
└ @ Core HDF5.jl:340
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1064
└ @ HDF5 HDF5.jl:1064
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1065
└ @ HDF5 HDF5.jl:1065
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = read(::HDF5Group) at datafile.jl:43
└ @ HDF5 datafile.jl:43
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:359 [inlined]
└ @ Core HDF5.jl:359
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:387 [inlined]
└ @ Core HDF5.jl:387
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2215 [inlined]
└ @ Core HDF5.jl:2215
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2216 [inlined]
└ @ Core HDF5.jl:2216
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float32,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int16,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:146
└ @ BDF BDF.jl:146
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:160
└ @ BDF BDF.jl:160
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:1
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats2``.
│ Use `global dats2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab2``.
│ Use `global evtTab2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs2``.
│ Use `global trigs2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan2``.
│ Use `global statusChan2` instead.
└ @ nothing none:0
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#4(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats2``.
│ Use `global dats2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab2``.
│ Use `global evtTab2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs2``.
│ Use `global trigs2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan2``.
│ Use `global statusChan2` instead.
└ @ nothing none:0
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = (::getfield(BDF, Symbol("##2#3")))(::String) at <missing>:0
└ @ BDF <missing>:0
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_decode_status_channel.jl:1
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats``.
│ Use `global dats` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab``.
│ Use `global evtTab` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs``.
│ Use `global trigs` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan``.
│ Use `global statusChan` instead.
└ @ nothing none:0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:929
└ @ BDF BDF.jl:929
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:930
└ @ BDF BDF.jl:930
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:931
└ @ BDF BDF.jl:931
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:932
└ @ BDF BDF.jl:932
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:933
└ @ BDF BDF.jl:933
┌ Warning: `bin(n)` is deprecated, use `string(n, base=2)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:935
└ @ BDF BDF.jl:935
┌ Warning: `parse(T::Type{<:Integer}, s, base)` is deprecated, use `parse(T, s, base=base)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:937
└ @ BDF BDF.jl:937
[ Info: BDF tests passed

>>> End of log
