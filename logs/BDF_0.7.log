>>> 'Pkg.add("BDF")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of BDF from https://github.com/sam81/BDF.jl.git
[ Info: Cloning cache of DocStringExtensions from https://github.com/JuliaDocs/DocStringExtensions.jl.git
[ Info: Installing BDF v0.3.0
[ Info: Installing BinDeps v0.8.6
[ Info: Installing Blosc v0.3.0
[ Info: Installing DocStringExtensions v0.4.3
[ Info: Installing HDF5 v0.8.8
[ Info: Installing SHA v0.5.6
[ Info: Installing URIParser v0.3.0
[ Info: Building Blosc
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Blosc/deps/build.jl:6
[ Info: Building HDF5
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:40
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
in h5_get_libversion at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl
[ Info: Package database updated

>>> 'Pkg.test("BDF")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.3738
Commit 251a501def (2018-02-06 20:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     862765 s         64 s      48746 s     217211 s         12 s
       #2  3499 MHz     169102 s         87 s      22098 s    1105624 s          0 s
       
  Memory: 2.93927001953125 GB (865.609375 MB free)
  Uptime: 13144.0 sec
  Load Avg:  1.0830078125  1.001953125  0.99169921875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BDF                           0.3.0
 - JSON                          0.16.4
8 additional packages:
 - BinDeps                       0.8.6
 - Blosc                         0.3.0
 - Compat                        0.52.0
 - DocStringExtensions           0.4.3
 - HDF5                          0.8.8
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - URIParser                     0.3.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing BDF
┌ Warning: Deprecated syntax `parametric method syntax writeBDF{P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ])` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:449.
│ Use `writeBDF(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ]) where {P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}` instead.
└ @ nothing BDF.jl:449
┌ Warning: Deprecated syntax `parametric method syntax splitBDFAtTime{T <: Real}(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1)` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:858.
│ Use `splitBDFAtTime(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1) where T <: Real` instead.
└ @ nothing BDF.jl:858
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:1
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:289
└ @ BDF BDF.jl:289
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:290
└ @ BDF BDF.jl:290
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:291
└ @ BDF BDF.jl:291
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:292
└ @ BDF BDF.jl:292
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:293
└ @ BDF BDF.jl:293
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:294
└ @ BDF BDF.jl:294
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:295
└ @ BDF BDF.jl:295
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:296
└ @ BDF BDF.jl:296
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:297
└ @ BDF BDF.jl:297
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:299
└ @ BDF BDF.jl:299
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:300
└ @ BDF BDF.jl:300
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:301
└ @ BDF BDF.jl:301
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:302
└ @ BDF BDF.jl:302
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:303
└ @ BDF BDF.jl:303
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:304
└ @ BDF BDF.jl:304
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:305
└ @ BDF BDF.jl:305
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:306
└ @ BDF BDF.jl:306
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:307
└ @ BDF BDF.jl:307
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:308
└ @ BDF BDF.jl:308
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:309
└ @ BDF BDF.jl:309
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:310
└ @ BDF BDF.jl:310
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:311
└ @ BDF BDF.jl:311
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:316
└ @ BDF BDF.jl:316
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:320
└ @ BDF BDF.jl:320
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:324
└ @ BDF BDF.jl:324
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:328
└ @ BDF BDF.jl:328
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:332
└ @ BDF BDF.jl:332
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:336
└ @ BDF BDF.jl:336
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:340
└ @ BDF BDF.jl:340
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:344
└ @ BDF BDF.jl:344
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:348
└ @ BDF BDF.jl:348
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:352
└ @ BDF BDF.jl:352
WARNING: importing deprecated binding Base.diff into BDF.
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:7
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:60
└ @ BDF BDF.jl:60
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:61
└ @ BDF BDF.jl:61
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:62
└ @ BDF BDF.jl:62
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:63
└ @ BDF BDF.jl:63
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:64
└ @ BDF BDF.jl:64
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:65
└ @ BDF BDF.jl:65
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:66
└ @ BDF BDF.jl:66
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:67
└ @ BDF BDF.jl:67
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:68
└ @ BDF BDF.jl:68
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:70
└ @ BDF BDF.jl:70
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:71
└ @ BDF BDF.jl:71
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:72
└ @ BDF BDF.jl:72
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:73
└ @ BDF BDF.jl:73
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:74
└ @ BDF BDF.jl:74
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:75
└ @ BDF BDF.jl:75
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:76
└ @ BDF BDF.jl:76
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:77
└ @ BDF BDF.jl:77
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:78
└ @ BDF BDF.jl:78
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:79
└ @ BDF BDF.jl:79
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:80
└ @ BDF BDF.jl:80
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:81
└ @ BDF BDF.jl:81
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:82
└ @ BDF BDF.jl:82
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:93
└ @ BDF BDF.jl:93
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:97
└ @ BDF BDF.jl:97
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:101
└ @ BDF BDF.jl:101
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:105
└ @ BDF BDF.jl:105
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:109
└ @ BDF BDF.jl:109
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:113
└ @ BDF BDF.jl:113
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:117
└ @ BDF BDF.jl:117
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:121
└ @ BDF BDF.jl:121
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:125
└ @ BDF BDF.jl:125
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:129
└ @ BDF BDF.jl:129
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:148
└ @ BDF BDF.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:150
└ @ BDF BDF.jl:150
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:151
└ @ BDF BDF.jl:151
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:155
└ @ BDF BDF.jl:155
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:219
└ @ BDF BDF.jl:219
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:220
└ @ BDF BDF.jl:220
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:1
WARNING: importing deprecated binding Base.DateTime into BDF.
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: importing deprecated binding Base.Dates into BDF.
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = #splitBDFAtTrigger#59(::Int64, ::Int64, ::Function, ::String, ::Int64) at BDF.jl:806
└ @ BDF BDF.jl:806
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:319 [inlined]
└ @ Core HDF5.jl:319
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:340 [inlined]
└ @ Core HDF5.jl:340
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(uninitialized, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1064
└ @ HDF5 HDF5.jl:1064
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1065
└ @ HDF5 HDF5.jl:1065
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = read(::HDF5Group) at datafile.jl:43
└ @ HDF5 datafile.jl:43
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:359 [inlined]
└ @ Core HDF5.jl:359
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:387 [inlined]
└ @ Core HDF5.jl:387
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(uninitialized, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2215 [inlined]
└ @ Core HDF5.jl:2215
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(uninitialized, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2216 [inlined]
└ @ Core HDF5.jl:2216
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float32,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int16,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:146
└ @ BDF BDF.jl:146
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:160
└ @ BDF BDF.jl:160
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:1
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats2``.
│ Use `global dats2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab2``.
│ Use `global evtTab2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs2``.
│ Use `global trigs2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan2``.
│ Use `global statusChan2` instead.
└ @ nothing none:0
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
ERROR: LoadError: LoadError: ArgumentError: invalid index: nothing
Stacktrace:
 [1] to_index at ./indices.jl:191 [inlined]
 [2] to_index at ./indices.jl:173 [inlined]
 [3] to_indices at ./indices.jl:218 [inlined]
 [4] to_indices at ./indices.jl:215 [inlined]
 [5] setindex!(::Array{Int32,2}, ::Int32, ::Nothing, ::Int64) at ./abstractarray.jl:1019
 [6] #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:186
 [7] #readBDF at ./<missing>:0 [inlined]
 [8] #readBDF#1 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:50 [inlined]
 [9] (::getfield(BDF, Symbol("#kw##readBDF")))(::NamedTuple{(:channels,),Tuple{Array{Int64,1}}}, ::typeof(readBDF), ::String) at ./<missing>:0
 [10] top-level scope at ./<missing>:9
 [11] include at ./boot.jl:295 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1066
 [13] include(::Module, ::String) at ./sysimg.jl:26
 [14] include(::String) at ./sysimg.jl:65
 [15] top-level scope
 [16] include at ./boot.jl:295 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1066
 [18] include(::Module, ::String) at ./sysimg.jl:26
 [19] exec_options(::Base.JLOptions) at ./client.jl:332
 [20] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:7
in expression starting at /home/vagrant/.julia/v0.7/BDF/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for BDF
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BDF/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:734
ERROR: BDF had test errors

>>> End of log
