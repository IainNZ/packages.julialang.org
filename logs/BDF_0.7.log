>>> 'Pkg.add("BDF")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of BDF from https://github.com/sam81/BDF.jl.git
[ Info: Installing BDF v0.3.0
[ Info: Installing BinDeps v0.8.7
[ Info: Installing Blosc v0.3.0
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing HDF5 v0.8.8
[ Info: Installing SHA v0.5.6
[ Info: Installing URIParser v0.3.1
[ Info: Building Blosc
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Blosc/deps/build.jl:6
[ Info: Building HDF5
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:40
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:976
in h5_get_libversion at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl
[ Info: Package database updated

>>> 'Pkg.test("BDF")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4737
Commit c4c93ea692 (2018-04-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     836807 s        105 s      76756 s     389852 s         12 s
       #2  3500 MHz     328716 s         58 s      31334 s    1097344 s          0 s
       
  Memory: 2.939197540283203 GB (726.61328125 MB free)
  Uptime: 14979.0 sec
  Load Avg:  0.931640625  0.978515625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BDF                           0.3.0
 - JSON                          0.17.2
8 additional packages:
 - BinDeps                       0.8.7
 - Blosc                         0.3.0
 - Compat                        0.63.0
 - DocStringExtensions           0.4.4
 - HDF5                          0.8.8
 - Nullables                     0.0.5
 - SHA                           0.5.6
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing BDF
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:277.
│ Use `at most one line break` instead.
└ @ nothing BDF.jl:277
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:926.
│ Use `at most one line break` instead.
└ @ nothing BDF.jl:926
┌ Warning: Deprecated syntax `parametric method syntax writeBDF{P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ])` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:449.
│ Use `writeBDF(fName::AbstractString, data::AbstractMatrix{P}, trigChan::AbstractVector{Q}, statusChan::AbstractVector{R}, sampRate::Integer; subjID::String = "", recID::String = "", startDate::String = Libc.strftime("%d.%m.%y", time()), startTime::String = Libc.strftime("%H.%M.%S", time()), versionDataFormat::String = "24BIT", chanLabels::AbstractVector{S} = [ "" for i = 1:size(data)[1] ], transducer::AbstractVector{T} = [ "" for i = 1:size(data)[1] ], physDim::AbstractVector{U} = [ "" for i = 1:size(data)[1] ], physMin::AbstractVector{V} = [ -262144 for i = 1:size(data)[1] ], physMax::AbstractVector{W} = [ 262144 for i = 1:size(data)[1] ], prefilt::AbstractVector{Z} = [ "" for i = 1:size(data)[1] ]) where {P <: Real, Q <: Real, R <: Real, S <: String, T <: String, U <: String, V <: Real, W <: Real, Z <: String}` instead.
└ @ nothing BDF.jl:449
┌ Warning: Deprecated syntax `parametric method syntax splitBDFAtTime{T <: Real}(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1)` around /home/vagrant/.julia/v0.7/BDF/src/BDF.jl:858.
│ Use `splitBDFAtTime(fName::AbstractString, timeSeconds::Union{T, AbstractVector{T}}; from::Real = 0, to::Real = -1) where T <: Real` instead.
└ @ nothing BDF.jl:858
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_read_write.jl:1
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:289
└ @ BDF BDF.jl:289
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:290
└ @ BDF BDF.jl:290
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:291
└ @ BDF BDF.jl:291
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:292
└ @ BDF BDF.jl:292
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:293
└ @ BDF BDF.jl:293
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:294
└ @ BDF BDF.jl:294
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:295
└ @ BDF BDF.jl:295
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:296
└ @ BDF BDF.jl:296
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:297
└ @ BDF BDF.jl:297
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:298
└ @ BDF BDF.jl:298
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:299
└ @ BDF BDF.jl:299
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:300
└ @ BDF BDF.jl:300
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:301
└ @ BDF BDF.jl:301
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:302
└ @ BDF BDF.jl:302
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:303
└ @ BDF BDF.jl:303
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:304
└ @ BDF BDF.jl:304
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:305
└ @ BDF BDF.jl:305
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:306
└ @ BDF BDF.jl:306
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:307
└ @ BDF BDF.jl:307
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:308
└ @ BDF BDF.jl:308
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:309
└ @ BDF BDF.jl:309
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:310
└ @ BDF BDF.jl:310
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:311
└ @ BDF BDF.jl:311
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:316
└ @ BDF BDF.jl:316
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:320
└ @ BDF BDF.jl:320
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:324
└ @ BDF BDF.jl:324
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:328
└ @ BDF BDF.jl:328
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:332
└ @ BDF BDF.jl:332
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:336
└ @ BDF BDF.jl:336
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:340
└ @ BDF BDF.jl:340
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:344
└ @ BDF BDF.jl:344
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:348
└ @ BDF BDF.jl:348
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDFHeader#13(::String, ::Function, ::IOStream) at BDF.jl:352
└ @ BDF BDF.jl:352
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:60
└ @ BDF BDF.jl:60
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:61
└ @ BDF BDF.jl:61
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:62
└ @ BDF BDF.jl:62
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:63
└ @ BDF BDF.jl:63
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:64
└ @ BDF BDF.jl:64
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:65
└ @ BDF BDF.jl:65
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:66
└ @ BDF BDF.jl:66
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:67
└ @ BDF BDF.jl:67
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:68
└ @ BDF BDF.jl:68
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `float(x::AbstractString)` is deprecated, use `parse(Float64, x)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:69
└ @ BDF BDF.jl:69
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:70
└ @ BDF BDF.jl:70
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:71
└ @ BDF BDF.jl:71
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:72
└ @ BDF BDF.jl:72
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:73
└ @ BDF BDF.jl:73
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:74
└ @ BDF BDF.jl:74
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:75
└ @ BDF BDF.jl:75
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:76
└ @ BDF BDF.jl:76
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:77
└ @ BDF BDF.jl:77
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:78
└ @ BDF BDF.jl:78
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:79
└ @ BDF BDF.jl:79
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:80
└ @ BDF BDF.jl:80
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:81
└ @ BDF BDF.jl:81
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:82
└ @ BDF BDF.jl:82
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:93
└ @ BDF BDF.jl:93
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:97
└ @ BDF BDF.jl:97
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:101
└ @ BDF BDF.jl:101
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:105
└ @ BDF BDF.jl:105
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:109
└ @ BDF BDF.jl:109
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:113
└ @ BDF BDF.jl:113
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:117
└ @ BDF BDF.jl:117
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:121
└ @ BDF BDF.jl:121
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:125
└ @ BDF BDF.jl:125
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:129
└ @ BDF BDF.jl:129
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:148
└ @ BDF BDF.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:150
└ @ BDF BDF.jl:150
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:151
└ @ BDF BDF.jl:151
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(undef, d1, dims...))` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:155
└ @ BDF BDF.jl:155
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:219
└ @ BDF BDF.jl:219
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:220
└ @ BDF BDF.jl:220
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:1
WARNING: importing deprecated binding Base.DateTime into BDF.
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: importing deprecated binding Base.Dates into BDF.
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_trigger.jl:24
in #splitBDFAtTrigger#59 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = #splitBDFAtTrigger#59(::Int64, ::Int64, ::Function, ::String, ::Int64) at BDF.jl:806
└ @ BDF BDF.jl:806
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time1.jl:12
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:1
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
WARNING: Base.DateTime is deprecated: it has been moved to the standard library package `Dates`.
Add `using Dates` to your imports.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_split_time2.jl:13
in #splitBDFAtTime#64 at /home/vagrant/.julia/v0.7/BDF/src/BDF.jl
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_eq.jl:1
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:319 [inlined]
└ @ Core HDF5.jl:319
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:340 [inlined]
└ @ Core HDF5.jl:340
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1064
└ @ HDF5 HDF5.jl:1064
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = names(::HDF5Group) at HDF5.jl:1065
└ @ HDF5 HDF5.jl:1065
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = read(::HDF5Group) at datafile.jl:43
└ @ HDF5 datafile.jl:43
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:359 [inlined]
└ @ Core HDF5.jl:359
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:387 [inlined]
└ @ Core HDF5.jl:387
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at HDF5.jl:406 [inlined]
└ @ Core HDF5.jl:406
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2215 [inlined]
└ @ Core HDF5.jl:2215
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = h5s_get_simple_extent_dims at HDF5.jl:2216 [inlined]
└ @ Core HDF5.jl:2216
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float32,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int16,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Float64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = read(::HDF5Dataset, ::Type{Array{Int64,N} where N}) at HDF5.jl:1264
└ @ HDF5 HDF5.jl:1264
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:146
└ @ BDF BDF.jl:146
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:160
└ @ BDF BDF.jl:160
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_channel_select.jl:1
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats2``.
│ Use `global dats2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab2``.
│ Use `global evtTab2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs2``.
│ Use `global trigs2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan2``.
│ Use `global statusChan2` instead.
└ @ nothing none:0
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = #readBDF#6(::Int64, ::Int64, ::Array{Int64,1}, ::Bool, ::Function, ::IOStream) at BDF.jl:183
└ @ BDF BDF.jl:183
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats2``.
│ Use `global dats2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab2``.
│ Use `global evtTab2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs2``.
│ Use `global trigs2` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan2``.
│ Use `global statusChan2` instead.
└ @ nothing none:0
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = (::getfield(BDF, Symbol("##2#4")))(::String) at <missing>:0
└ @ BDF <missing>:0
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BDF/test/test_decode_status_channel.jl:1
┌ Warning: Deprecated syntax `implicit assignment to global variable `dats``.
│ Use `global dats` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `evtTab``.
│ Use `global evtTab` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `trigs``.
│ Use `global trigs` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `statusChan``.
│ Use `global statusChan` instead.
└ @ nothing none:0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:929
└ @ BDF BDF.jl:929
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:930
└ @ BDF BDF.jl:930
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:931
└ @ BDF BDF.jl:931
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:932
└ @ BDF BDF.jl:932
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:933
└ @ BDF BDF.jl:933
┌ Warning: `bin(n)` is deprecated, use `string(n, base=2)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:935
└ @ BDF BDF.jl:935
┌ Warning: `parse(T::Type{<:Integer}, s, base)` is deprecated, use `parse(T, s, base=base)` instead.
│   caller = decodeStatusChannel(::Array{Int16,1}) at BDF.jl:937
└ @ BDF BDF.jl:937
[ Info: BDF tests passed

>>> End of log
