>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.12109375 MB free)
Uptime: 21722.0 sec
Load Avg:  1.03125  1.03173828125  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1202789 s       1135 s     109850 s     602304 s         30 s
#2  3499 MHz     371302 s       5511 s      52296 s    1689824 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1913	 ParSpMatVec=0.0210	 speedup=9.0901
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1913	 ParSpMatVec=0.0098	 speedup=19.5637
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1913	 ParSpMatVec=0.0084	 speedup=22.6900
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1913	 ParSpMatVec=0.0069	 speedup=27.5382
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1913	 ParSpMatVec=0.0085	 speedup=22.5138
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1662	 ParSpMatVec=0.0334	 speedup=4.9743
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1662	 ParSpMatVec=0.0129	 speedup=12.8668
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1662	 ParSpMatVec=0.0083	 speedup=20.0147
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1662	 ParSpMatVec=0.0126	 speedup=13.2184
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1662	 ParSpMatVec=0.0104	 speedup=15.9193

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0460	 ParSpMatVec=0.0216	 speedup=2.1332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0460	 ParSpMatVec=0.0137	 speedup=3.3656
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0460	 ParSpMatVec=0.0090	 speedup=5.1282
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0460	 ParSpMatVec=0.0086	 speedup=5.3252
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0460	 ParSpMatVec=0.0139	 speedup=3.3104

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0553	 ParSpMatVec=0.0397	 speedup=1.3933
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0553	 ParSpMatVec=0.0021	 speedup=26.5128
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0553	 ParSpMatVec=0.0012	 speedup=47.5990
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0553	 ParSpMatVec=0.0020	 speedup=27.2055
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0553	 ParSpMatVec=0.0016	 speedup=33.7837

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0646	 speedup=0.1317
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0044	 speedup=1.9168
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0024	 speedup=3.5295
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0033	 speedup=2.5911
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0031	 speedup=2.7635

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0714	 ParSpMatVec=0.0667	 speedup=1.0708
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0714	 ParSpMatVec=0.0043	 speedup=16.7495
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0714	 ParSpMatVec=0.0015	 speedup=46.4578
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0714	 ParSpMatVec=0.0035	 speedup=20.1163
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0714	 ParSpMatVec=0.0022	 speedup=32.0908

INFO: ParSpMatVec tests passed

>>> End of log
