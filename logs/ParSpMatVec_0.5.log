>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1050.64453125 MB free)
Uptime: 14416.0 sec
Load Avg:  1.1015625  1.0517578125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     915952 s       1308 s      82844 s     271964 s         14 s
#2  3502 MHz     229873 s       5427 s      40020 s    1138210 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.22.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2275	 ParSpMatVec=0.0306	 speedup=7.4425
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2275	 ParSpMatVec=0.0080	 speedup=28.3361
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2275	 ParSpMatVec=0.0118	 speedup=19.2173
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2275	 ParSpMatVec=0.0092	 speedup=24.8537
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2275	 ParSpMatVec=0.0105	 speedup=21.7020
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2245	 ParSpMatVec=0.0447	 speedup=5.0222
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2245	 ParSpMatVec=0.0135	 speedup=16.6895
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2245	 ParSpMatVec=0.0155	 speedup=14.4799
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2245	 ParSpMatVec=0.0128	 speedup=17.5903
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2245	 ParSpMatVec=0.0123	 speedup=18.3273

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0479	 ParSpMatVec=0.0365	 speedup=1.3123
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0479	 ParSpMatVec=0.0137	 speedup=3.5093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0479	 ParSpMatVec=0.0118	 speedup=4.0492
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0479	 ParSpMatVec=0.0121	 speedup=3.9515
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0479	 ParSpMatVec=0.0169	 speedup=2.8409

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0739	 ParSpMatVec=0.0512	 speedup=1.4440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0739	 ParSpMatVec=0.0024	 speedup=30.3483
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0739	 ParSpMatVec=0.0023	 speedup=32.0129
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0739	 ParSpMatVec=0.0022	 speedup=33.2300
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0739	 ParSpMatVec=0.0027	 speedup=27.5818

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0063	 ParSpMatVec=0.0631	 speedup=0.0993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0063	 ParSpMatVec=0.0035	 speedup=1.7969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0063	 ParSpMatVec=0.0039	 speedup=1.6090
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0063	 ParSpMatVec=0.0018	 speedup=3.4427
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0063	 ParSpMatVec=0.0022	 speedup=2.9094

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0802	 ParSpMatVec=0.0647	 speedup=1.2384
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0802	 ParSpMatVec=0.0048	 speedup=16.6537
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0802	 ParSpMatVec=0.0073	 speedup=10.9979
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0802	 ParSpMatVec=0.0025	 speedup=31.7330
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0802	 ParSpMatVec=0.0023	 speedup=35.0437

INFO: ParSpMatVec tests passed

>>> End of log
