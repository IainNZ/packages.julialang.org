>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1043.90234375 MB free)
Uptime: 18943.0 sec
Load Avg:  1.01416015625  1.04931640625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1138865 s       2172 s     110121 s     426405 s         31 s
#2  3499 MHz     400126 s       4704 s      53986 s    1391062 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2743	 ParSpMatVec=0.0289	 speedup=9.4926
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2743	 ParSpMatVec=0.0097	 speedup=28.3738
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2743	 ParSpMatVec=0.0141	 speedup=19.4715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2743	 ParSpMatVec=0.0124	 speedup=22.1696
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2743	 ParSpMatVec=0.0131	 speedup=20.9919
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2549	 ParSpMatVec=0.0530	 speedup=4.8096
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2549	 ParSpMatVec=0.0117	 speedup=21.8635
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2549	 ParSpMatVec=0.0144	 speedup=17.6778
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2549	 ParSpMatVec=0.0141	 speedup=18.0584
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2549	 ParSpMatVec=0.0117	 speedup=21.7321

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0387	 ParSpMatVec=0.0222	 speedup=1.7469
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0387	 ParSpMatVec=0.0127	 speedup=3.0507
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0387	 ParSpMatVec=0.0145	 speedup=2.6635
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0387	 ParSpMatVec=0.0136	 speedup=2.8554
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0387	 ParSpMatVec=0.0140	 speedup=2.7655

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0705	 ParSpMatVec=0.0375	 speedup=1.8798
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0705	 ParSpMatVec=0.0019	 speedup=36.9006
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0705	 ParSpMatVec=0.0019	 speedup=36.8094
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0705	 ParSpMatVec=0.0019	 speedup=36.9090
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0705	 ParSpMatVec=0.0023	 speedup=30.6064

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0074	 ParSpMatVec=0.0402	 speedup=0.1851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0074	 ParSpMatVec=0.0034	 speedup=2.1865
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0074	 ParSpMatVec=0.0022	 speedup=3.3975
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0074	 ParSpMatVec=0.0024	 speedup=3.0655
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0074	 ParSpMatVec=0.0025	 speedup=2.9530

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0820	 ParSpMatVec=0.0417	 speedup=1.9659
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0820	 ParSpMatVec=0.0035	 speedup=23.7178
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0820	 ParSpMatVec=0.0026	 speedup=31.3873
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0820	 ParSpMatVec=0.0031	 speedup=26.8775
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0820	 ParSpMatVec=0.0025	 speedup=33.0381

INFO: ParSpMatVec tests passed

>>> End of log
