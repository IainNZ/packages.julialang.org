>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1051.328125 MB free)
Uptime: 24638.0 sec
Load Avg:  1.0029296875  1.0654296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1493669 s         52 s     135731 s     541347 s         22 s
#2  3499 MHz     403128 s        144 s      59466 s    1956730 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.42.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2902	 ParSpMatVec=0.0307	 speedup=9.4597
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2902	 ParSpMatVec=0.0094	 speedup=30.8975
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2902	 ParSpMatVec=0.0108	 speedup=26.9248
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2902	 ParSpMatVec=0.0124	 speedup=23.4170
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2902	 ParSpMatVec=0.0094	 speedup=30.8896
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2576	 ParSpMatVec=0.0489	 speedup=5.2657
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2576	 ParSpMatVec=0.0142	 speedup=18.0855
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2576	 ParSpMatVec=0.0167	 speedup=15.4383
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2576	 ParSpMatVec=0.0152	 speedup=16.9606
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2576	 ParSpMatVec=0.0126	 speedup=20.4817

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0675	 ParSpMatVec=0.0356	 speedup=1.8960
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0675	 ParSpMatVec=0.0142	 speedup=4.7496
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0675	 ParSpMatVec=0.0162	 speedup=4.1727
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0675	 ParSpMatVec=0.0149	 speedup=4.5322
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0675	 ParSpMatVec=0.0206	 speedup=3.2815

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0808	 ParSpMatVec=0.0361	 speedup=2.2353
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0808	 ParSpMatVec=0.0019	 speedup=41.6853
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0808	 ParSpMatVec=0.0018	 speedup=44.2789
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0808	 ParSpMatVec=0.0014	 speedup=57.3310
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0808	 ParSpMatVec=0.0064	 speedup=12.6844

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0094	 ParSpMatVec=0.0715	 speedup=0.1319
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0094	 ParSpMatVec=0.0038	 speedup=2.4541
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0094	 ParSpMatVec=0.0022	 speedup=4.3230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0094	 ParSpMatVec=0.0032	 speedup=2.9245
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0094	 ParSpMatVec=0.0023	 speedup=4.1654

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0795	 ParSpMatVec=0.0662	 speedup=1.2014
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0795	 ParSpMatVec=0.0038	 speedup=20.6707
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0795	 ParSpMatVec=0.0021	 speedup=38.1974
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0795	 ParSpMatVec=0.0026	 speedup=30.7112
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0795	 ParSpMatVec=0.0206	 speedup=3.8647

INFO: ParSpMatVec tests passed

>>> End of log
