>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1050.70703125 MB free)
Uptime: 20116.0 sec
Load Avg:  0.99267578125  1.03564453125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1230227 s       1577 s     122559 s     387933 s         35 s
#2  3500 MHz     338025 s       5028 s      57783 s    1564126 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1909	 ParSpMatVec=0.0560	 speedup=3.4082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1909	 ParSpMatVec=0.0122	 speedup=15.7043
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1909	 ParSpMatVec=0.0111	 speedup=17.2530
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1909	 ParSpMatVec=0.0058	 speedup=32.9034
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1909	 ParSpMatVec=0.0066	 speedup=28.8749
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2171	 ParSpMatVec=0.0367	 speedup=5.9229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2171	 ParSpMatVec=0.0242	 speedup=8.9649
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2171	 ParSpMatVec=0.0092	 speedup=23.5161
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2171	 ParSpMatVec=0.0098	 speedup=22.2480
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2171	 ParSpMatVec=0.0097	 speedup=22.3291

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0450	 ParSpMatVec=0.0214	 speedup=2.1048
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0450	 ParSpMatVec=0.0145	 speedup=3.1137
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0450	 ParSpMatVec=0.0108	 speedup=4.1682
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0450	 ParSpMatVec=0.0237	 speedup=1.8963
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0450	 ParSpMatVec=0.0140	 speedup=3.2206

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0752	 ParSpMatVec=0.0640	 speedup=1.1754
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0752	 ParSpMatVec=0.0019	 speedup=39.1938
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0752	 ParSpMatVec=0.0024	 speedup=31.0116
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0752	 ParSpMatVec=0.0031	 speedup=23.9158
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0752	 ParSpMatVec=0.0012	 speedup=60.8445

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0125	 ParSpMatVec=0.0654	 speedup=0.1914
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0125	 ParSpMatVec=0.0046	 speedup=2.7455
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0125	 ParSpMatVec=0.0021	 speedup=6.0950
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0125	 ParSpMatVec=0.0089	 speedup=1.4108
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0125	 ParSpMatVec=0.0137	 speedup=0.9133

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0536	 ParSpMatVec=0.0566	 speedup=0.9468
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0536	 ParSpMatVec=0.0041	 speedup=13.2159
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0536	 ParSpMatVec=0.0025	 speedup=21.8265
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0536	 ParSpMatVec=0.0041	 speedup=12.9659
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0536	 ParSpMatVec=0.0028	 speedup=18.9255

INFO: ParSpMatVec tests passed

>>> End of log
