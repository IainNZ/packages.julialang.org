>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1031.91796875 MB free)
Uptime: 21298.0 sec
Load Avg:  1.01123046875  1.0439453125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1301678 s       1806 s     122902 s     443245 s         30 s
#2  3500 MHz     426354 s       5644 s      57098 s    1583710 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3106	 ParSpMatVec=0.0278	 speedup=11.1750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3106	 ParSpMatVec=0.0085	 speedup=36.4750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3106	 ParSpMatVec=0.0124	 speedup=25.0741
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3106	 ParSpMatVec=0.0321	 speedup=9.6715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3106	 ParSpMatVec=0.0121	 speedup=25.6708
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2424	 ParSpMatVec=0.0593	 speedup=4.0874
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2424	 ParSpMatVec=0.0138	 speedup=17.5923
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2424	 ParSpMatVec=0.0157	 speedup=15.4785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2424	 ParSpMatVec=0.0142	 speedup=17.0268
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2424	 ParSpMatVec=0.0137	 speedup=17.6719

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0846	 ParSpMatVec=0.0215	 speedup=3.9429
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0846	 ParSpMatVec=0.0127	 speedup=6.6688
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0846	 ParSpMatVec=0.0159	 speedup=5.3201
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0846	 ParSpMatVec=0.0138	 speedup=6.1170
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0846	 ParSpMatVec=0.0139	 speedup=6.1064

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0703	 ParSpMatVec=0.0397	 speedup=1.7705
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0703	 ParSpMatVec=0.0032	 speedup=22.0283
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0703	 ParSpMatVec=0.0024	 speedup=29.0307
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0703	 ParSpMatVec=0.0020	 speedup=34.3091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0703	 ParSpMatVec=0.0025	 speedup=28.3593

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0096	 ParSpMatVec=0.0704	 speedup=0.1360
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0096	 ParSpMatVec=0.0038	 speedup=2.5216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0096	 ParSpMatVec=0.0021	 speedup=4.6468
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0096	 ParSpMatVec=0.0039	 speedup=2.4666
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0096	 ParSpMatVec=0.0029	 speedup=3.2751

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0891	 ParSpMatVec=0.0707	 speedup=1.2594
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0891	 ParSpMatVec=0.0039	 speedup=22.9826
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0891	 ParSpMatVec=0.0041	 speedup=21.7213
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0891	 ParSpMatVec=0.0022	 speedup=39.9461
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0891	 ParSpMatVec=0.0039	 speedup=22.7743

INFO: ParSpMatVec tests passed

>>> End of log
