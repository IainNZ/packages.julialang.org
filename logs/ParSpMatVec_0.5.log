>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:1214
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1596	 ParSpMatVec=0.0290	 speedup=5.5117
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1596	 ParSpMatVec=0.0100	 speedup=15.9631
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1596	 ParSpMatVec=0.0124	 speedup=12.8431
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1596	 ParSpMatVec=0.0054	 speedup=29.2981
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1596	 ParSpMatVec=0.0096	 speedup=16.6790
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1748	 ParSpMatVec=0.0533	 speedup=3.2821
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1748	 ParSpMatVec=0.0104	 speedup=16.8311
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1748	 ParSpMatVec=0.0104	 speedup=16.8398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1748	 ParSpMatVec=0.0103	 speedup=17.0184
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1748	 ParSpMatVec=0.0112	 speedup=15.6722

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0602	 ParSpMatVec=0.0352	 speedup=1.7093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0602	 ParSpMatVec=0.0135	 speedup=4.4568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0602	 ParSpMatVec=0.0095	 speedup=6.3501
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0602	 ParSpMatVec=0.0095	 speedup=6.3437
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0602	 ParSpMatVec=0.0097	 speedup=6.2290

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1315	 ParSpMatVec=0.0526	 speedup=2.5014
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1315	 ParSpMatVec=0.0022	 speedup=60.6605
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1315	 ParSpMatVec=0.0014	 speedup=93.9725
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1315	 ParSpMatVec=0.0015	 speedup=85.2856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1315	 ParSpMatVec=0.0015	 speedup=89.2654

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0740	 speedup=0.1114
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0039	 speedup=2.1023
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0027	 speedup=3.0316
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0043	 speedup=1.9369
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0030	 speedup=2.7879

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0923	 ParSpMatVec=0.0378	 speedup=2.4448
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0923	 ParSpMatVec=0.0045	 speedup=20.6550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0923	 ParSpMatVec=0.0020	 speedup=45.5077
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0923	 ParSpMatVec=0.0015	 speedup=61.4973
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0923	 ParSpMatVec=0.0016	 speedup=59.4360

INFO: ParSpMatVec tests passed

>>> End of log
