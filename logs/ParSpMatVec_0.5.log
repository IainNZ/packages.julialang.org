>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1037.49609375 MB free)
Uptime: 21758.0 sec
Load Avg:  1.0029296875  1.03125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1289369 s       1512 s     133706 s     509034 s         33 s
#2  3500 MHz     459330 s       4146 s      58819 s    1601700 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2776	 ParSpMatVec=0.0265	 speedup=10.4605
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2776	 ParSpMatVec=0.0114	 speedup=24.3923
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2776	 ParSpMatVec=0.0154	 speedup=18.0020
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2776	 ParSpMatVec=0.0087	 speedup=31.9364
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2776	 ParSpMatVec=0.0091	 speedup=30.5627
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2339	 ParSpMatVec=0.0506	 speedup=4.6235
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2339	 ParSpMatVec=0.0176	 speedup=13.3070
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2339	 ParSpMatVec=0.0132	 speedup=17.6567
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2339	 ParSpMatVec=0.0232	 speedup=10.0883
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2339	 ParSpMatVec=0.0136	 speedup=17.1701

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0761	 ParSpMatVec=0.0320	 speedup=2.3794
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0761	 ParSpMatVec=0.0162	 speedup=4.6852
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0761	 ParSpMatVec=0.0158	 speedup=4.8151
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0761	 ParSpMatVec=0.0138	 speedup=5.5019
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0761	 ParSpMatVec=0.0149	 speedup=5.1185

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0767	 ParSpMatVec=0.0666	 speedup=1.1520
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0767	 ParSpMatVec=0.0020	 speedup=37.4948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0767	 ParSpMatVec=0.0026	 speedup=29.4343
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0767	 ParSpMatVec=0.0015	 speedup=52.7883
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0767	 ParSpMatVec=0.0032	 speedup=24.2610

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0106	 ParSpMatVec=0.0676	 speedup=0.1574
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0106	 ParSpMatVec=0.0046	 speedup=2.3281
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0106	 ParSpMatVec=0.0075	 speedup=1.4253
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0106	 ParSpMatVec=0.0062	 speedup=1.7160
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0106	 ParSpMatVec=0.0053	 speedup=2.0007

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0496	 ParSpMatVec=0.0426	 speedup=1.1655
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0496	 ParSpMatVec=0.0040	 speedup=12.4351
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0496	 ParSpMatVec=0.0020	 speedup=25.1555
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0496	 ParSpMatVec=0.0039	 speedup=12.6485
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0496	 ParSpMatVec=0.0050	 speedup=9.9760

INFO: ParSpMatVec tests passed

>>> End of log
