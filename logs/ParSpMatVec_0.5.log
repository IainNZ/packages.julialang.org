>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1024.8125 MB free)
Uptime: 20365.0 sec
Load Avg:  1.02685546875  1.04052734375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1206781 s       3246 s     105193 s     458767 s         29 s
#2  3500 MHz     470870 s       3597 s      54514 s    1440343 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2838	 ParSpMatVec=0.0278	 speedup=10.1924
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2838	 ParSpMatVec=0.0101	 speedup=28.0401
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2838	 ParSpMatVec=0.0101	 speedup=27.9708
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2838	 ParSpMatVec=0.0054	 speedup=52.7464
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2838	 ParSpMatVec=0.0074	 speedup=38.5887
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2401	 ParSpMatVec=0.0539	 speedup=4.4536
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2401	 ParSpMatVec=0.0152	 speedup=15.7470
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2401	 ParSpMatVec=0.0097	 speedup=24.7477
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2401	 ParSpMatVec=0.0121	 speedup=19.8414
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2401	 ParSpMatVec=0.0128	 speedup=18.8049

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0656	 ParSpMatVec=0.0382	 speedup=1.7189
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0656	 ParSpMatVec=0.0151	 speedup=4.3492
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0656	 ParSpMatVec=0.0218	 speedup=3.0036
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0656	 ParSpMatVec=0.0144	 speedup=4.5421
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0656	 ParSpMatVec=0.0139	 speedup=4.7155

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1366	 ParSpMatVec=0.0657	 speedup=2.0790
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1366	 ParSpMatVec=0.0024	 speedup=56.3560
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1366	 ParSpMatVec=0.0040	 speedup=34.1834
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1366	 ParSpMatVec=0.0022	 speedup=61.8991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1366	 ParSpMatVec=0.0016	 speedup=85.2032

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0216	 ParSpMatVec=0.0850	 speedup=0.2545
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0216	 ParSpMatVec=0.0044	 speedup=4.8965
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0216	 ParSpMatVec=0.0043	 speedup=5.0754
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0216	 ParSpMatVec=0.0028	 speedup=7.6620
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0216	 ParSpMatVec=0.0022	 speedup=9.6752

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0881	 ParSpMatVec=0.0711	 speedup=1.2385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0881	 ParSpMatVec=0.0039	 speedup=22.5965
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0881	 ParSpMatVec=0.0138	 speedup=6.3920
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0881	 ParSpMatVec=0.0496	 speedup=1.7757
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0881	 ParSpMatVec=0.0032	 speedup=27.8602

INFO: ParSpMatVec tests passed

>>> End of log
