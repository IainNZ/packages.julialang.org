>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1063.34765625 MB free)
Uptime: 14698.0 sec
Load Avg:  1.00390625  1.03955078125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     864473 s        136 s      89474 s     340851 s         20 s
#2  3500 MHz     278173 s       6744 s      45024 s    1108034 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.23.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2957	 ParSpMatVec=0.0252	 speedup=11.7229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2957	 ParSpMatVec=0.0101	 speedup=29.3922
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2957	 ParSpMatVec=0.0094	 speedup=31.5752
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2957	 ParSpMatVec=0.0064	 speedup=46.3307
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2957	 ParSpMatVec=0.0080	 speedup=37.0287
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1940	 ParSpMatVec=0.0510	 speedup=3.8018
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1940	 ParSpMatVec=0.0132	 speedup=14.7207
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1940	 ParSpMatVec=0.0079	 speedup=24.6855
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1940	 ParSpMatVec=0.0090	 speedup=21.4846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1940	 ParSpMatVec=0.0102	 speedup=19.0639

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0597	 ParSpMatVec=0.0302	 speedup=1.9749
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0597	 ParSpMatVec=0.0117	 speedup=5.1205
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0597	 ParSpMatVec=0.0085	 speedup=7.0395
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0597	 ParSpMatVec=0.0100	 speedup=5.9506
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0597	 ParSpMatVec=0.0106	 speedup=5.6255

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0661	 ParSpMatVec=0.0361	 speedup=1.8325
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0661	 ParSpMatVec=0.0020	 speedup=33.6672
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0661	 ParSpMatVec=0.0016	 speedup=42.5974
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0661	 ParSpMatVec=0.0016	 speedup=41.4778
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0661	 ParSpMatVec=0.0019	 speedup=35.1524

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0359	 speedup=0.2147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0030	 speedup=2.5877
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0028	 speedup=2.7439
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0023	 speedup=3.3172
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0026	 speedup=3.0124

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0746	 ParSpMatVec=0.0638	 speedup=1.1692
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0746	 ParSpMatVec=0.0038	 speedup=19.8631
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0746	 ParSpMatVec=0.0022	 speedup=33.5885
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0746	 ParSpMatVec=0.0025	 speedup=29.9766
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0746	 ParSpMatVec=0.0025	 speedup=29.4993

INFO: ParSpMatVec tests passed

>>> End of log
