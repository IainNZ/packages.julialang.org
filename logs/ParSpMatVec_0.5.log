>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1048.90625 MB free)
Uptime: 18946.0 sec
Load Avg:  1.021484375  1.07568359375  1.0634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1185564 s        119 s     102098 s     363268 s         22 s
#2  3504 MHz     315469 s       6051 s      51433 s    1483893 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.5.0
 - Compat                        0.25.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1829	 ParSpMatVec=0.0221	 speedup=8.2841
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1829	 ParSpMatVec=0.0109	 speedup=16.8026
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1829	 ParSpMatVec=0.0129	 speedup=14.1434
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1829	 ParSpMatVec=0.0103	 speedup=17.7023
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1829	 ParSpMatVec=0.0115	 speedup=15.8826
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2686	 ParSpMatVec=0.0586	 speedup=4.5827
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2686	 ParSpMatVec=0.0141	 speedup=19.0186
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2686	 ParSpMatVec=0.0147	 speedup=18.2829
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2686	 ParSpMatVec=0.0136	 speedup=19.7889
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2686	 ParSpMatVec=0.0143	 speedup=18.8512

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0420	 ParSpMatVec=0.0227	 speedup=1.8445
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0420	 ParSpMatVec=0.0112	 speedup=3.7398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0420	 ParSpMatVec=0.0146	 speedup=2.8738
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0420	 ParSpMatVec=0.0146	 speedup=2.8830
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0420	 ParSpMatVec=0.0141	 speedup=2.9836

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0733	 ParSpMatVec=0.0525	 speedup=1.3948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0733	 ParSpMatVec=0.0027	 speedup=27.0046
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0733	 ParSpMatVec=0.0029	 speedup=25.1471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0733	 ParSpMatVec=0.0022	 speedup=33.1960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0733	 ParSpMatVec=0.0020	 speedup=37.3375

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0102	 ParSpMatVec=0.0714	 speedup=0.1429
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0102	 ParSpMatVec=0.0038	 speedup=2.6787
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0102	 ParSpMatVec=0.0018	 speedup=5.7571
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0102	 ParSpMatVec=0.0022	 speedup=4.7022
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0102	 ParSpMatVec=0.0021	 speedup=4.9449

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0583	 ParSpMatVec=0.0449	 speedup=1.2986
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0583	 ParSpMatVec=0.0038	 speedup=15.4138
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0583	 ParSpMatVec=0.0025	 speedup=22.9633
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0583	 ParSpMatVec=0.0030	 speedup=19.5299
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0583	 ParSpMatVec=0.0028	 speedup=20.5821

INFO: ParSpMatVec tests passed

>>> End of log
