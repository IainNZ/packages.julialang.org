>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1035.609375 MB free)
Uptime: 20402.0 sec
Load Avg:  1.0322265625  1.04052734375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1224981 s         68 s     129813 s     443113 s         28 s
#2  3500 MHz     390779 s       6340 s      57047 s    1538509 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3235	 ParSpMatVec=0.0269	 speedup=12.0387
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3235	 ParSpMatVec=0.0088	 speedup=36.6069
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3235	 ParSpMatVec=0.0120	 speedup=26.9790
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3235	 ParSpMatVec=0.0105	 speedup=30.8784
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3235	 ParSpMatVec=0.0089	 speedup=36.4097
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1411	 ParSpMatVec=0.0338	 speedup=4.1693
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1411	 ParSpMatVec=0.0132	 speedup=10.6716
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1411	 ParSpMatVec=0.0143	 speedup=9.8690
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1411	 ParSpMatVec=0.0160	 speedup=8.8291
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1411	 ParSpMatVec=0.0123	 speedup=11.4575

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0692	 ParSpMatVec=0.0317	 speedup=2.1867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0692	 ParSpMatVec=0.0145	 speedup=4.7883
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0692	 ParSpMatVec=0.0181	 speedup=3.8262
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0692	 ParSpMatVec=0.0139	 speedup=4.9723
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0692	 ParSpMatVec=0.0132	 speedup=5.2511

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0712	 ParSpMatVec=0.0587	 speedup=1.2119
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0712	 ParSpMatVec=0.0025	 speedup=28.0158
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0712	 ParSpMatVec=0.0028	 speedup=25.1251
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0712	 ParSpMatVec=0.0019	 speedup=37.0325
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0712	 ParSpMatVec=0.0020	 speedup=35.3545

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0716	 speedup=0.1230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0033	 speedup=2.6795
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0058	 speedup=1.5200
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0030	 speedup=2.9535
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0030	 speedup=2.9160

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0819	 ParSpMatVec=0.0713	 speedup=1.1479
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0819	 ParSpMatVec=0.0047	 speedup=17.4840
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0819	 ParSpMatVec=0.0028	 speedup=29.2932
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0819	 ParSpMatVec=0.0033	 speedup=25.0098
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0819	 ParSpMatVec=0.0031	 speedup=26.6547

INFO: ParSpMatVec tests passed

>>> End of log
