>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1019.98828125 MB free)
Uptime: 20245.0 sec
Load Avg:  0.9931640625  1.0166015625  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1201322 s        950 s     127422 s     448854 s         40 s
#2  3499 MHz     380079 s       7026 s      56613 s    1529945 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.23.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2812	 ParSpMatVec=0.0293	 speedup=9.6045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2812	 ParSpMatVec=0.0214	 speedup=13.1276
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2812	 ParSpMatVec=0.0119	 speedup=23.5926
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2812	 ParSpMatVec=0.0117	 speedup=23.9736
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2812	 ParSpMatVec=0.0110	 speedup=25.4935
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2348	 ParSpMatVec=0.0545	 speedup=4.3041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2348	 ParSpMatVec=0.0139	 speedup=16.9406
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2348	 ParSpMatVec=0.0083	 speedup=28.4421
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2348	 ParSpMatVec=0.0092	 speedup=25.6145
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2348	 ParSpMatVec=0.0108	 speedup=21.6677

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0662	 ParSpMatVec=0.0350	 speedup=1.8938
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0662	 ParSpMatVec=0.0138	 speedup=4.7914
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0662	 ParSpMatVec=0.0097	 speedup=6.8360
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0662	 ParSpMatVec=0.0109	 speedup=6.0666
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0662	 ParSpMatVec=0.0109	 speedup=6.0776

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0569	 ParSpMatVec=0.0372	 speedup=1.5290
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0569	 ParSpMatVec=0.0022	 speedup=25.3195
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0569	 ParSpMatVec=0.0031	 speedup=18.2643
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0569	 ParSpMatVec=0.0013	 speedup=42.2561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0569	 ParSpMatVec=0.0015	 speedup=37.9161

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0646	 speedup=0.1005
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0037	 speedup=1.7635
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0022	 speedup=2.9532
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0023	 speedup=2.8142
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0025	 speedup=2.5860

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0517	 ParSpMatVec=0.0655	 speedup=0.7892
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0517	 ParSpMatVec=0.0039	 speedup=13.3405
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0517	 ParSpMatVec=0.0020	 speedup=25.5301
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0517	 ParSpMatVec=0.0021	 speedup=24.6363
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0517	 ParSpMatVec=0.0060	 speedup=8.6036

INFO: ParSpMatVec tests passed

>>> End of log
