>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1053.43359375 MB free)
Uptime: 20869.0 sec
Load Avg:  1.01953125  1.0673828125  1.052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1249697 s       6203 s     125441 s     449299 s         37 s
#2  3503 MHz     354138 s         13 s      55368 s    1631090 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3390	 ParSpMatVec=0.0299	 speedup=11.3270
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3390	 ParSpMatVec=0.0101	 speedup=33.6727
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3390	 ParSpMatVec=0.0116	 speedup=29.3191
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3390	 ParSpMatVec=0.0250	 speedup=13.5818
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3390	 ParSpMatVec=0.0121	 speedup=27.9367
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2274	 ParSpMatVec=0.0548	 speedup=4.1493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2274	 ParSpMatVec=0.0141	 speedup=16.1629
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2274	 ParSpMatVec=0.0073	 speedup=31.3161
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2274	 ParSpMatVec=0.0143	 speedup=15.9074
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2274	 ParSpMatVec=0.0115	 speedup=19.8231

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0443	 ParSpMatVec=0.0335	 speedup=1.3206
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0443	 ParSpMatVec=0.0144	 speedup=3.0706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0443	 ParSpMatVec=0.0110	 speedup=4.0390
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0443	 ParSpMatVec=0.0090	 speedup=4.8974
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0443	 ParSpMatVec=0.0115	 speedup=3.8398

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0791	 ParSpMatVec=0.0705	 speedup=1.1212
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0791	 ParSpMatVec=0.0022	 speedup=35.8677
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0791	 ParSpMatVec=0.0012	 speedup=63.6943
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0791	 ParSpMatVec=0.0013	 speedup=60.9909
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0791	 ParSpMatVec=0.0019	 speedup=42.6804

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0649	 speedup=0.1257
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0036	 speedup=2.2735
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0024	 speedup=3.4418
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0045	 speedup=1.8293
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0133	 speedup=0.6114

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0864	 ParSpMatVec=0.0684	 speedup=1.2640
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0864	 ParSpMatVec=0.0043	 speedup=19.9156
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0864	 ParSpMatVec=0.0021	 speedup=41.3895
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0864	 ParSpMatVec=0.0037	 speedup=23.6255
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0864	 ParSpMatVec=0.0088	 speedup=9.8546

INFO: ParSpMatVec tests passed

>>> End of log
