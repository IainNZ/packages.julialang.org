>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.23046875 MB free)
Uptime: 20240.0 sec
Load Avg:  1.1005859375  1.06005859375  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1247302 s       3155 s     113459 s     411504 s         28 s
#2  3500 MHz     353634 s       2715 s      55030 s    1563907 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2058	 ParSpMatVec=0.0317	 speedup=6.5011
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2058	 ParSpMatVec=0.0104	 speedup=19.6981
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2058	 ParSpMatVec=0.0145	 speedup=14.1992
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2058	 ParSpMatVec=0.0120	 speedup=17.1493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2058	 ParSpMatVec=0.0081	 speedup=25.3199
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2527	 ParSpMatVec=0.0511	 speedup=4.9447
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2527	 ParSpMatVec=0.0134	 speedup=18.9150
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2527	 ParSpMatVec=0.0153	 speedup=16.4613
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2527	 ParSpMatVec=0.0130	 speedup=19.4873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2527	 ParSpMatVec=0.0152	 speedup=16.6412

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0407	 ParSpMatVec=0.0212	 speedup=1.9215
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0407	 ParSpMatVec=0.0140	 speedup=2.9166
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0407	 ParSpMatVec=0.0155	 speedup=2.6321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0407	 ParSpMatVec=0.0132	 speedup=3.0885
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0407	 ParSpMatVec=0.0126	 speedup=3.2341

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0550	 ParSpMatVec=0.0739	 speedup=0.7434
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0550	 ParSpMatVec=0.0040	 speedup=13.6278
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0550	 ParSpMatVec=0.0058	 speedup=9.5448
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0550	 ParSpMatVec=0.0024	 speedup=22.6280
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0550	 ParSpMatVec=0.0064	 speedup=8.6258

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0103	 ParSpMatVec=0.0579	 speedup=0.1787
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0103	 ParSpMatVec=0.0040	 speedup=2.5877
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0103	 ParSpMatVec=0.0024	 speedup=4.2849
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0103	 ParSpMatVec=0.0022	 speedup=4.6955
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0103	 ParSpMatVec=0.0025	 speedup=4.1331

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0793	 ParSpMatVec=0.0687	 speedup=1.1536
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0793	 ParSpMatVec=0.0042	 speedup=18.9631
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0793	 ParSpMatVec=0.0021	 speedup=38.2173
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0793	 ParSpMatVec=0.0026	 speedup=30.5135
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0793	 ParSpMatVec=0.0023	 speedup=34.4643

INFO: ParSpMatVec tests passed

>>> End of log
