>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1026.61328125 MB free)
Uptime: 19951.0 sec
Load Avg:  1.0029296875  1.05419921875  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1189682 s       1125 s     114100 s     458453 s         29 s
#2  3496 MHz     412293 s       5422 s      54295 s    1473841 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2733	 ParSpMatVec=0.0281	 speedup=9.7419
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2733	 ParSpMatVec=0.0099	 speedup=27.6058
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2733	 ParSpMatVec=0.0123	 speedup=22.2382
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2733	 ParSpMatVec=0.0093	 speedup=29.3000
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2733	 ParSpMatVec=0.0114	 speedup=24.0695
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2150	 ParSpMatVec=0.0517	 speedup=4.1607
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2150	 ParSpMatVec=0.0136	 speedup=15.7577
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2150	 ParSpMatVec=0.0150	 speedup=14.3712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2150	 ParSpMatVec=0.0165	 speedup=13.0269
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2150	 ParSpMatVec=0.0137	 speedup=15.6721

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0713	 ParSpMatVec=0.0212	 speedup=3.3668
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0713	 ParSpMatVec=0.0138	 speedup=5.1845
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0713	 ParSpMatVec=0.0166	 speedup=4.3036
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0713	 ParSpMatVec=0.0101	 speedup=7.0806
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0713	 ParSpMatVec=0.0149	 speedup=4.7740

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0596	 ParSpMatVec=0.0630	 speedup=0.9467
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0596	 ParSpMatVec=0.0021	 speedup=28.6755
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0596	 ParSpMatVec=0.0088	 speedup=6.7781
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0596	 ParSpMatVec=0.0015	 speedup=39.3485
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0596	 ParSpMatVec=0.0025	 speedup=24.1481

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0092	 ParSpMatVec=0.0571	 speedup=0.1608
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0092	 ParSpMatVec=0.0039	 speedup=2.3464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0092	 ParSpMatVec=0.0021	 speedup=4.3789
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0092	 ParSpMatVec=0.0039	 speedup=2.3600
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0092	 ParSpMatVec=0.0022	 speedup=4.0822

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0932	 ParSpMatVec=0.0672	 speedup=1.3868
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0932	 ParSpMatVec=0.0048	 speedup=19.4018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0932	 ParSpMatVec=0.0017	 speedup=53.3019
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0932	 ParSpMatVec=0.0026	 speedup=35.4476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0932	 ParSpMatVec=0.0028	 speedup=32.8675

INFO: ParSpMatVec tests passed

>>> End of log
