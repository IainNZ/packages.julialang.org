>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1040.1484375 MB free)
Uptime: 23953.0 sec
Load Avg:  0.962890625  1.02783203125  1.04296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1424730 s       1656 s     137540 s     552484 s         28 s
#2  3499 MHz     426187 s       5338 s      60172 s    1851055 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.37.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3046	 ParSpMatVec=0.0188	 speedup=16.2366
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3046	 ParSpMatVec=0.0092	 speedup=32.9606
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3046	 ParSpMatVec=0.0120	 speedup=25.3097
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3046	 ParSpMatVec=0.0283	 speedup=10.7514
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3046	 ParSpMatVec=0.0100	 speedup=30.3448
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2477	 ParSpMatVec=0.0659	 speedup=3.7554
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2477	 ParSpMatVec=0.0161	 speedup=15.4117
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2477	 ParSpMatVec=0.0177	 speedup=13.9841
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2477	 ParSpMatVec=0.0151	 speedup=16.3964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2477	 ParSpMatVec=0.0129	 speedup=19.2370

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0410	 ParSpMatVec=0.0248	 speedup=1.6521
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0410	 ParSpMatVec=0.0127	 speedup=3.2413
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0410	 ParSpMatVec=0.0259	 speedup=1.5836
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0410	 ParSpMatVec=0.0139	 speedup=2.9436
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0410	 ParSpMatVec=0.0142	 speedup=2.8907

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0899	 ParSpMatVec=0.0581	 speedup=1.5463
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0899	 ParSpMatVec=0.0023	 speedup=39.7365
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0899	 ParSpMatVec=0.0031	 speedup=29.3073
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0899	 ParSpMatVec=0.0023	 speedup=39.2078
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0899	 ParSpMatVec=0.0082	 speedup=10.9648

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0677	 speedup=0.1273
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0044	 speedup=1.9528
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0041	 speedup=2.0960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0057	 speedup=1.5219
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0075	 speedup=1.1439

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0758	 ParSpMatVec=0.0695	 speedup=1.0905
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0758	 ParSpMatVec=0.0044	 speedup=17.0582
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0758	 ParSpMatVec=0.0018	 speedup=41.9058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0758	 ParSpMatVec=0.0027	 speedup=28.5822
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0758	 ParSpMatVec=0.0022	 speedup=34.2356

INFO: ParSpMatVec tests passed

>>> End of log
