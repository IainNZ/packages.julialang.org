>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1025.90625 MB free)
Uptime: 23442.0 sec
Load Avg:  0.9970703125  1.06494140625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1259082 s       4594 s     112911 s     725253 s         36 s
#2  3500 MHz     457344 s       1974 s      56196 s    1779021 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2394	 ParSpMatVec=0.0279	 speedup=8.5695
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2394	 ParSpMatVec=0.0085	 speedup=28.1218
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2394	 ParSpMatVec=0.0180	 speedup=13.2663
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2394	 ParSpMatVec=0.0073	 speedup=32.7051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2394	 ParSpMatVec=0.0082	 speedup=29.1241
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2585	 ParSpMatVec=0.0535	 speedup=4.8336
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2585	 ParSpMatVec=0.0132	 speedup=19.5569
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2585	 ParSpMatVec=0.0158	 speedup=16.3815
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2585	 ParSpMatVec=0.0119	 speedup=21.7041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2585	 ParSpMatVec=0.0100	 speedup=25.7208

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0673	 ParSpMatVec=0.0339	 speedup=1.9830
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0673	 ParSpMatVec=0.0146	 speedup=4.5933
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0673	 ParSpMatVec=0.0162	 speedup=4.1420
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0673	 ParSpMatVec=0.0153	 speedup=4.3848
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0673	 ParSpMatVec=0.0139	 speedup=4.8449

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0763	 ParSpMatVec=0.0702	 speedup=1.0863
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0763	 ParSpMatVec=0.0060	 speedup=12.7266
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0763	 ParSpMatVec=0.0026	 speedup=28.8061
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0763	 ParSpMatVec=0.0020	 speedup=37.2714
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0763	 ParSpMatVec=0.0017	 speedup=44.5530

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0169	 ParSpMatVec=0.0719	 speedup=0.2351
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0169	 ParSpMatVec=0.0039	 speedup=4.3630
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0169	 ParSpMatVec=0.0020	 speedup=8.2907
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0169	 ParSpMatVec=0.0024	 speedup=7.1390
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0169	 ParSpMatVec=0.0025	 speedup=6.7644

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0845	 ParSpMatVec=0.0694	 speedup=1.2172
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0845	 ParSpMatVec=0.0043	 speedup=19.7468
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0845	 ParSpMatVec=0.0078	 speedup=10.8859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0845	 ParSpMatVec=0.0054	 speedup=15.5760
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0845	 ParSpMatVec=0.0025	 speedup=33.6655

INFO: ParSpMatVec tests passed

>>> End of log
