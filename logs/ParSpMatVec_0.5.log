>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.7.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1030.7265625 MB free)
Uptime: 20254.0 sec
Load Avg:  1.0859375  1.0498046875  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1222278 s       5221 s     113797 s     444313 s         23 s
#2  3500 MHz     402262 s       1687 s      51762 s    1530561 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.7.0
 - Compat                        0.27.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2621	 ParSpMatVec=0.0268	 speedup=9.7845
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2621	 ParSpMatVec=0.0102	 speedup=25.7987
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2621	 ParSpMatVec=0.0123	 speedup=21.3427
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2621	 ParSpMatVec=0.0094	 speedup=27.8207
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2621	 ParSpMatVec=0.0087	 speedup=29.9669
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2309	 ParSpMatVec=0.0467	 speedup=4.9401
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2309	 ParSpMatVec=0.0108	 speedup=21.2952
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2309	 ParSpMatVec=0.0167	 speedup=13.7999
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2309	 ParSpMatVec=0.0146	 speedup=15.8431
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2309	 ParSpMatVec=0.0178	 speedup=12.9625

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0737	 ParSpMatVec=0.0254	 speedup=2.8969
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0737	 ParSpMatVec=0.0148	 speedup=4.9836
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0737	 ParSpMatVec=0.0119	 speedup=6.1907
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0737	 ParSpMatVec=0.0097	 speedup=7.6045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0737	 ParSpMatVec=0.0129	 speedup=5.7096

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0778	 ParSpMatVec=0.0622	 speedup=1.2506
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0778	 ParSpMatVec=0.0025	 speedup=31.6042
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0778	 ParSpMatVec=0.0031	 speedup=24.8345
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0778	 ParSpMatVec=0.0017	 speedup=45.7382
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0778	 ParSpMatVec=0.0021	 speedup=36.3755

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0607	 speedup=0.1331
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0028	 speedup=2.8611
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0021	 speedup=3.8991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0032	 speedup=2.5503
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0029	 speedup=2.7746

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0876	 ParSpMatVec=0.0730	 speedup=1.1996
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0876	 ParSpMatVec=0.0090	 speedup=9.7454
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0876	 ParSpMatVec=0.0030	 speedup=29.1401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0876	 ParSpMatVec=0.0029	 speedup=30.6664
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0876	 ParSpMatVec=0.0027	 speedup=32.6775

INFO: ParSpMatVec tests passed

>>> End of log
