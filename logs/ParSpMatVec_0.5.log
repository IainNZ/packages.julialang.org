>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1041.74609375 MB free)
Uptime: 21008.0 sec
Load Avg:  1.029296875  1.04638671875  1.04736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    1208460 s       6849 s     124074 s     506115 s         31 s
#2  3505 MHz     386132 s         46 s      55874 s    1610716 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3073	 ParSpMatVec=0.0262	 speedup=11.7294
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3073	 ParSpMatVec=0.0086	 speedup=35.6725
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3073	 ParSpMatVec=0.0122	 speedup=25.1088
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3073	 ParSpMatVec=0.0100	 speedup=30.7127
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3073	 ParSpMatVec=0.0096	 speedup=32.0495
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2523	 ParSpMatVec=0.0554	 speedup=4.5527
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2523	 ParSpMatVec=0.0145	 speedup=17.4244
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2523	 ParSpMatVec=0.0159	 speedup=15.9085
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2523	 ParSpMatVec=0.0124	 speedup=20.3540
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2523	 ParSpMatVec=0.0140	 speedup=18.0176

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0620	 ParSpMatVec=0.0350	 speedup=1.7705
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0620	 ParSpMatVec=0.0144	 speedup=4.2989
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0620	 ParSpMatVec=0.0151	 speedup=4.1213
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0620	 ParSpMatVec=0.0139	 speedup=4.4742
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0620	 ParSpMatVec=0.0133	 speedup=4.6625

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0735	 ParSpMatVec=0.0563	 speedup=1.3064
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0735	 ParSpMatVec=0.0027	 speedup=27.2769
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0735	 ParSpMatVec=0.0055	 speedup=13.2861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0735	 ParSpMatVec=0.0018	 speedup=40.4881
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0735	 ParSpMatVec=0.0023	 speedup=31.9434

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0566	 speedup=0.1449
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0114	 speedup=0.7227
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0062	 speedup=1.3257
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0039	 speedup=2.1065
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0026	 speedup=3.1850

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0834	 ParSpMatVec=0.0683	 speedup=1.2203
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0834	 ParSpMatVec=0.0039	 speedup=21.3073
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0834	 ParSpMatVec=0.0023	 speedup=36.6802
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0834	 ParSpMatVec=0.0029	 speedup=29.1729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0834	 ParSpMatVec=0.0038	 speedup=22.1854

INFO: ParSpMatVec tests passed

>>> End of log
