>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1033.17578125 MB free)
Uptime: 21545.0 sec
Load Avg:  1.025390625  1.04443359375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1274367 s       1137 s     143160 s     493976 s         23 s
#2  3500 MHz     433312 s       5032 s      59626 s    1609318 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.31.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3272	 ParSpMatVec=0.0165	 speedup=19.8372
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3272	 ParSpMatVec=0.0094	 speedup=34.7867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3272	 ParSpMatVec=0.0143	 speedup=22.8240
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3272	 ParSpMatVec=0.0127	 speedup=25.8366
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3272	 ParSpMatVec=0.0108	 speedup=30.3833
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2485	 ParSpMatVec=0.0612	 speedup=4.0635
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2485	 ParSpMatVec=0.0127	 speedup=19.5330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2485	 ParSpMatVec=0.0147	 speedup=16.9004
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2485	 ParSpMatVec=0.0142	 speedup=17.4451
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2485	 ParSpMatVec=0.0140	 speedup=17.8065

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0480	 ParSpMatVec=0.0204	 speedup=2.3521
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0480	 ParSpMatVec=0.0141	 speedup=3.3988
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0480	 ParSpMatVec=0.0150	 speedup=3.1912
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0480	 ParSpMatVec=0.0135	 speedup=3.5418
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0480	 ParSpMatVec=0.0140	 speedup=3.4209

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0559	 ParSpMatVec=0.0580	 speedup=0.9632
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0559	 ParSpMatVec=0.0029	 speedup=18.9582
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0559	 ParSpMatVec=0.0029	 speedup=19.4683
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0559	 ParSpMatVec=0.0017	 speedup=31.9894
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0559	 ParSpMatVec=0.0020	 speedup=28.0314

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0064	 ParSpMatVec=0.0651	 speedup=0.0983
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0064	 ParSpMatVec=0.0041	 speedup=1.5772
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0064	 ParSpMatVec=0.0021	 speedup=3.1075
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0064	 ParSpMatVec=0.0023	 speedup=2.7870
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0064	 ParSpMatVec=0.0023	 speedup=2.8250

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0836	 ParSpMatVec=0.0673	 speedup=1.2427
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0836	 ParSpMatVec=0.0039	 speedup=21.2921
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0836	 ParSpMatVec=0.0024	 speedup=35.4874
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0836	 ParSpMatVec=0.0028	 speedup=30.0849
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0836	 ParSpMatVec=0.0029	 speedup=29.1890

INFO: ParSpMatVec tests passed

>>> End of log
