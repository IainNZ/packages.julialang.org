>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.7.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1038.34375 MB free)
Uptime: 20049.0 sec
Load Avg:  1.0078125  1.07080078125  1.06591796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1257156 s       5736 s     119774 s     381954 s         29 s
#2  3500 MHz     344723 s       1423 s      53148 s    1556699 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.7.0
 - Compat                        0.29.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2858	 ParSpMatVec=0.0267	 speedup=10.6897
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2858	 ParSpMatVec=0.0088	 speedup=32.4336
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2858	 ParSpMatVec=0.0144	 speedup=19.8770
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2858	 ParSpMatVec=0.0097	 speedup=29.5923
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2858	 ParSpMatVec=0.0102	 speedup=28.0751
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2188	 ParSpMatVec=0.0470	 speedup=4.6534
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2188	 ParSpMatVec=0.0121	 speedup=18.0120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2188	 ParSpMatVec=0.0155	 speedup=14.1147
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2188	 ParSpMatVec=0.0132	 speedup=16.6376
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2188	 ParSpMatVec=0.0142	 speedup=15.3615

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0469	 ParSpMatVec=0.0217	 speedup=2.1582
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0469	 ParSpMatVec=0.0118	 speedup=3.9722
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0469	 ParSpMatVec=0.0148	 speedup=3.1603
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0469	 ParSpMatVec=0.0145	 speedup=3.2326
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0469	 ParSpMatVec=0.0136	 speedup=3.4406

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0497	 ParSpMatVec=0.0376	 speedup=1.3214
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0497	 ParSpMatVec=0.0020	 speedup=24.8004
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0497	 ParSpMatVec=0.0023	 speedup=21.7485
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0497	 ParSpMatVec=0.0016	 speedup=30.7081
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0497	 ParSpMatVec=0.0017	 speedup=29.5081

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0567	 speedup=0.1273
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0043	 speedup=1.6784
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0025	 speedup=2.8938
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0034	 speedup=2.1001
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0034	 speedup=2.1331

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0796	 ParSpMatVec=0.0642	 speedup=1.2391
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0796	 ParSpMatVec=0.0040	 speedup=20.1485
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0796	 ParSpMatVec=0.0026	 speedup=30.5062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0796	 ParSpMatVec=0.0028	 speedup=28.8419
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0796	 ParSpMatVec=0.0029	 speedup=27.7871

INFO: ParSpMatVec tests passed

>>> End of log
