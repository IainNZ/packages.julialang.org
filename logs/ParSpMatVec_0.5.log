>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1026.3359375 MB free)
Uptime: 20611.0 sec
Load Avg:  1.06787109375  1.0771484375  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1233227 s       1229 s     112122 s     471043 s         20 s
#2  3500 MHz     331966 s       4963 s      46732 s    1636240 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.31.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2820	 ParSpMatVec=0.0170	 speedup=16.6015
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2820	 ParSpMatVec=0.0082	 speedup=34.4616
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2820	 ParSpMatVec=0.0142	 speedup=19.8712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2820	 ParSpMatVec=0.0098	 speedup=28.8001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2820	 ParSpMatVec=0.0104	 speedup=27.0665
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2454	 ParSpMatVec=0.0471	 speedup=5.2058
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2454	 ParSpMatVec=0.0130	 speedup=18.8253
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2454	 ParSpMatVec=0.0145	 speedup=16.8899
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2454	 ParSpMatVec=0.0129	 speedup=18.9510
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2454	 ParSpMatVec=0.0136	 speedup=18.0185

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0536	 ParSpMatVec=0.0349	 speedup=1.5365
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0536	 ParSpMatVec=0.0128	 speedup=4.1709
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0536	 ParSpMatVec=0.0137	 speedup=3.9116
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0536	 ParSpMatVec=0.0149	 speedup=3.5997
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0536	 ParSpMatVec=0.0139	 speedup=3.8556

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0502	 ParSpMatVec=0.0371	 speedup=1.3522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0502	 ParSpMatVec=0.0028	 speedup=17.6739
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0502	 ParSpMatVec=0.0027	 speedup=18.7498
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0502	 ParSpMatVec=0.0019	 speedup=26.4582
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0502	 ParSpMatVec=0.0020	 speedup=25.2576

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0049	 ParSpMatVec=0.0426	 speedup=0.1146
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0049	 ParSpMatVec=0.0032	 speedup=1.5466
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0049	 ParSpMatVec=0.0025	 speedup=1.9470
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0049	 ParSpMatVec=0.0024	 speedup=2.0090
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0049	 ParSpMatVec=0.0021	 speedup=2.2965

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0489	 ParSpMatVec=0.0403	 speedup=1.2134
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0489	 ParSpMatVec=0.0036	 speedup=13.5593
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0489	 ParSpMatVec=0.0037	 speedup=13.1209
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0489	 ParSpMatVec=0.0026	 speedup=18.8465
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0489	 ParSpMatVec=0.0028	 speedup=17.5042

INFO: ParSpMatVec tests passed

>>> End of log
