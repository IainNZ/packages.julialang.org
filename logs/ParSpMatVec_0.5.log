>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1038.47265625 MB free)
Uptime: 20667.0 sec
Load Avg:  1.0546875  1.04931640625  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1253339 s       6792 s     107768 s     443429 s         25 s
#2  3500 MHz     371786 s         77 s      53146 s    1601890 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2592	 ParSpMatVec=0.0285	 speedup=9.0846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2592	 ParSpMatVec=0.0102	 speedup=25.4797
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2592	 ParSpMatVec=0.0126	 speedup=20.6442
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2592	 ParSpMatVec=0.0073	 speedup=35.3134
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2592	 ParSpMatVec=0.0069	 speedup=37.4955
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1586	 ParSpMatVec=0.0354	 speedup=4.4787
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1586	 ParSpMatVec=0.0162	 speedup=9.8079
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1586	 ParSpMatVec=0.0150	 speedup=10.5909
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1586	 ParSpMatVec=0.0126	 speedup=12.5417
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1586	 ParSpMatVec=0.0139	 speedup=11.3761

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0617	 ParSpMatVec=0.0339	 speedup=1.8187
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0617	 ParSpMatVec=0.0133	 speedup=4.6304
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0617	 ParSpMatVec=0.0157	 speedup=3.9252
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0617	 ParSpMatVec=0.0135	 speedup=4.5771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0617	 ParSpMatVec=0.0143	 speedup=4.3201

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0720	 ParSpMatVec=0.0365	 speedup=1.9723
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0720	 ParSpMatVec=0.0027	 speedup=27.0879
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0720	 ParSpMatVec=0.0028	 speedup=25.3004
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0720	 ParSpMatVec=0.0021	 speedup=33.7368
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0720	 ParSpMatVec=0.0018	 speedup=41.0564

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0093	 ParSpMatVec=0.0683	 speedup=0.1362
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0093	 ParSpMatVec=0.0049	 speedup=1.9185
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0093	 ParSpMatVec=0.0023	 speedup=4.0604
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0093	 ParSpMatVec=0.0037	 speedup=2.5398
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0093	 ParSpMatVec=0.0025	 speedup=3.7739

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0481	 ParSpMatVec=0.0469	 speedup=1.0246
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0481	 ParSpMatVec=0.0039	 speedup=12.3112
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0481	 ParSpMatVec=0.0017	 speedup=27.7152
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0481	 ParSpMatVec=0.0022	 speedup=22.1336
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0481	 ParSpMatVec=0.0026	 speedup=18.7649

INFO: ParSpMatVec tests passed

>>> End of log
