>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.7.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.18359375 MB free)
Uptime: 20295.0 sec
Load Avg:  1.07275390625  1.07470703125  1.06005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1161565 s       5647 s     116075 s     480334 s         29 s
#2  3500 MHz     429053 s       1142 s      58024 s    1491375 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.7.0
 - Compat                        0.28.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2042	 ParSpMatVec=0.0223	 speedup=9.1642
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2042	 ParSpMatVec=0.0081	 speedup=25.3351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2042	 ParSpMatVec=0.0135	 speedup=15.1067
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2042	 ParSpMatVec=0.0113	 speedup=18.0404
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2042	 ParSpMatVec=0.0125	 speedup=16.3871
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2171	 ParSpMatVec=0.0502	 speedup=4.3226
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2171	 ParSpMatVec=0.0133	 speedup=16.3862
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2171	 ParSpMatVec=0.0139	 speedup=15.5928
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2171	 ParSpMatVec=0.0135	 speedup=16.0290
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2171	 ParSpMatVec=0.0145	 speedup=14.9798

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0578	 ParSpMatVec=0.0331	 speedup=1.7466
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0578	 ParSpMatVec=0.0135	 speedup=4.2909
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0578	 ParSpMatVec=0.0156	 speedup=3.6970
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0578	 ParSpMatVec=0.0144	 speedup=3.9988
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0578	 ParSpMatVec=0.0121	 speedup=4.7614

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0549	 ParSpMatVec=0.0657	 speedup=0.8351
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0549	 ParSpMatVec=0.0026	 speedup=20.8447
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0549	 ParSpMatVec=0.0021	 speedup=26.0464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0549	 ParSpMatVec=0.0016	 speedup=33.6877
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0549	 ParSpMatVec=0.0016	 speedup=33.2914

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0099	 ParSpMatVec=0.0445	 speedup=0.2231
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0099	 ParSpMatVec=0.0037	 speedup=2.6863
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0099	 ParSpMatVec=0.0026	 speedup=3.7958
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0099	 ParSpMatVec=0.0029	 speedup=3.4182
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0099	 ParSpMatVec=0.0032	 speedup=3.0842

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0772	 ParSpMatVec=0.0667	 speedup=1.1566
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0772	 ParSpMatVec=0.0038	 speedup=20.1736
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0772	 ParSpMatVec=0.0026	 speedup=30.2649
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0772	 ParSpMatVec=0.0025	 speedup=31.3381
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0772	 ParSpMatVec=0.0028	 speedup=27.6916

INFO: ParSpMatVec tests passed

>>> End of log
