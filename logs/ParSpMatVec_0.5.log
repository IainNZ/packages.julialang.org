>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1038.59375 MB free)
Uptime: 21597.0 sec
Load Avg:  1.00341796875  1.04150390625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1270853 s       6415 s     138809 s     501531 s         20 s
#2  3500 MHz     423621 s         52 s      61215 s    1622812 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1830	 ParSpMatVec=0.0252	 speedup=7.2469
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1830	 ParSpMatVec=0.0086	 speedup=21.3232
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1830	 ParSpMatVec=0.0121	 speedup=15.1423
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1830	 ParSpMatVec=0.0097	 speedup=18.7683
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1830	 ParSpMatVec=0.0109	 speedup=16.8136
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1853	 ParSpMatVec=0.0311	 speedup=5.9541
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1853	 ParSpMatVec=0.0134	 speedup=13.8580
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1853	 ParSpMatVec=0.0135	 speedup=13.7385
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1853	 ParSpMatVec=0.0124	 speedup=14.9421
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1853	 ParSpMatVec=0.0135	 speedup=13.7239

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0573	 ParSpMatVec=0.0288	 speedup=1.9896
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0573	 ParSpMatVec=0.0132	 speedup=4.3392
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0573	 ParSpMatVec=0.0148	 speedup=3.8569
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0573	 ParSpMatVec=0.0181	 speedup=3.1605
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0573	 ParSpMatVec=0.0297	 speedup=1.9304

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0793	 ParSpMatVec=0.0549	 speedup=1.4438
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0793	 ParSpMatVec=0.0024	 speedup=32.5814
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0793	 ParSpMatVec=0.0027	 speedup=29.4609
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0793	 ParSpMatVec=0.0016	 speedup=48.3535
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0793	 ParSpMatVec=0.0018	 speedup=45.0502

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0691	 speedup=0.1058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0045	 speedup=1.6178
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0028	 speedup=2.5912
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0027	 speedup=2.6842
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0024	 speedup=3.0053

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0776	 ParSpMatVec=0.0688	 speedup=1.1281
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0776	 ParSpMatVec=0.0048	 speedup=16.2446
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0776	 ParSpMatVec=0.0025	 speedup=31.2652
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0776	 ParSpMatVec=0.0036	 speedup=21.3869
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0776	 ParSpMatVec=0.0028	 speedup=28.1975

INFO: ParSpMatVec tests passed

>>> End of log
