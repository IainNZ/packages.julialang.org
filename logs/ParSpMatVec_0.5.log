>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.76953125 MB free)
Uptime: 20620.0 sec
Load Avg:  1.00830078125  1.07763671875  1.0693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1252282 s       7486 s     126899 s     445454 s         18 s
#2  3502 MHz     388645 s         91 s      57579 s    1570915 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2928	 ParSpMatVec=0.0299	 speedup=9.7790
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2928	 ParSpMatVec=0.0093	 speedup=31.3212
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2928	 ParSpMatVec=0.0124	 speedup=23.5557
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2928	 ParSpMatVec=0.0106	 speedup=27.5846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2928	 ParSpMatVec=0.0099	 speedup=29.6445
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2329	 ParSpMatVec=0.0499	 speedup=4.6695
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2329	 ParSpMatVec=0.0121	 speedup=19.3001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2329	 ParSpMatVec=0.0151	 speedup=15.4680
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2329	 ParSpMatVec=0.0173	 speedup=13.4896
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2329	 ParSpMatVec=0.0133	 speedup=17.5195

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0672	 ParSpMatVec=0.0315	 speedup=2.1337
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0672	 ParSpMatVec=0.0125	 speedup=5.3803
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0672	 ParSpMatVec=0.0160	 speedup=4.1895
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0672	 ParSpMatVec=0.0161	 speedup=4.1679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0672	 ParSpMatVec=0.0164	 speedup=4.1042

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0745	 ParSpMatVec=0.0603	 speedup=1.2364
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0745	 ParSpMatVec=0.0031	 speedup=23.7122
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0745	 ParSpMatVec=0.0032	 speedup=23.2651
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0745	 ParSpMatVec=0.0019	 speedup=39.8613
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0745	 ParSpMatVec=0.0025	 speedup=29.5751

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0717	 speedup=0.1083
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0043	 speedup=1.7980
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0026	 speedup=3.0399
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0030	 speedup=2.5583
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0028	 speedup=2.7722

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0827	 ParSpMatVec=0.0743	 speedup=1.1130
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0827	 ParSpMatVec=0.0047	 speedup=17.5225
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0827	 ParSpMatVec=0.0024	 speedup=35.1324
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0827	 ParSpMatVec=0.0024	 speedup=34.3294
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0827	 ParSpMatVec=0.0026	 speedup=32.1699

INFO: ParSpMatVec tests passed

>>> End of log
