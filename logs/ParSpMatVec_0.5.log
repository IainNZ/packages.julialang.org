>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1045.625 MB free)
Uptime: 20794.0 sec
Load Avg:  0.9970703125  1.033203125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1265704 s       1156 s     130575 s     416584 s         30 s
#2  3500 MHz     369212 s       6006 s      57908 s    1596856 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3192	 ParSpMatVec=0.0276	 speedup=11.5701
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3192	 ParSpMatVec=0.0112	 speedup=28.6153
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3192	 ParSpMatVec=0.0109	 speedup=29.2112
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3192	 ParSpMatVec=0.0131	 speedup=24.4003
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3192	 ParSpMatVec=0.0085	 speedup=37.7197
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2425	 ParSpMatVec=0.0342	 speedup=7.0848
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2425	 ParSpMatVec=0.0134	 speedup=18.1325
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2425	 ParSpMatVec=0.0146	 speedup=16.5623
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2425	 ParSpMatVec=0.0133	 speedup=18.2294
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2425	 ParSpMatVec=0.0292	 speedup=8.2997

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0646	 ParSpMatVec=0.0329	 speedup=1.9660
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0646	 ParSpMatVec=0.0128	 speedup=5.0464
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0646	 ParSpMatVec=0.0214	 speedup=3.0145
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0646	 ParSpMatVec=0.0133	 speedup=4.8457
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0646	 ParSpMatVec=0.0107	 speedup=6.0241

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0786	 ParSpMatVec=0.0604	 speedup=1.3028
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0786	 ParSpMatVec=0.0020	 speedup=38.8807
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0786	 ParSpMatVec=0.0021	 speedup=37.4198
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0786	 ParSpMatVec=0.0030	 speedup=26.1919
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0786	 ParSpMatVec=0.0019	 speedup=41.7192

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0640	 speedup=0.1180
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0038	 speedup=1.9787
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0047	 speedup=1.6059
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0036	 speedup=2.0953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0034	 speedup=2.2269

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0971	 ParSpMatVec=0.0745	 speedup=1.3031
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0971	 ParSpMatVec=0.0038	 speedup=25.8460
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0971	 ParSpMatVec=0.0019	 speedup=50.0502
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0971	 ParSpMatVec=0.0031	 speedup=30.9974
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0971	 ParSpMatVec=0.0027	 speedup=36.1143

INFO: ParSpMatVec tests passed

>>> End of log
