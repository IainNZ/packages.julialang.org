>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1031.18359375 MB free)
Uptime: 20431.0 sec
Load Avg:  0.95068359375  1.0947265625  1.08935546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1261730 s       2871 s     109811 s     419467 s         22 s
#2  3500 MHz     349282 s       3729 s      53360 s    1596955 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2737	 ParSpMatVec=0.0178	 speedup=15.3593
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2737	 ParSpMatVec=0.0101	 speedup=27.0387
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2737	 ParSpMatVec=0.0116	 speedup=23.5633
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2737	 ParSpMatVec=0.0120	 speedup=22.7628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2737	 ParSpMatVec=0.0085	 speedup=32.0976
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1868	 ParSpMatVec=0.0347	 speedup=5.3891
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1868	 ParSpMatVec=0.0111	 speedup=16.8769
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1868	 ParSpMatVec=0.0128	 speedup=14.6104
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1868	 ParSpMatVec=0.0134	 speedup=13.9667
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1868	 ParSpMatVec=0.0145	 speedup=12.8921

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0409	 ParSpMatVec=0.0206	 speedup=1.9853
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0409	 ParSpMatVec=0.0138	 speedup=2.9667
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0409	 ParSpMatVec=0.0152	 speedup=2.6884
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0409	 ParSpMatVec=0.0139	 speedup=2.9420
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0409	 ParSpMatVec=0.0136	 speedup=2.9939

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0641	 ParSpMatVec=0.0609	 speedup=1.0536
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0641	 ParSpMatVec=0.0027	 speedup=23.6438
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0641	 ParSpMatVec=0.0030	 speedup=21.1528
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0641	 ParSpMatVec=0.0016	 speedup=40.7436
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0641	 ParSpMatVec=0.0015	 speedup=41.7716

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0092	 ParSpMatVec=0.0757	 speedup=0.1214
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0092	 ParSpMatVec=0.0042	 speedup=2.1960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0092	 ParSpMatVec=0.0032	 speedup=2.8576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0092	 ParSpMatVec=0.0036	 speedup=2.5415
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0092	 ParSpMatVec=0.0027	 speedup=3.3585

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0861	 ParSpMatVec=0.0725	 speedup=1.1881
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0861	 ParSpMatVec=0.0036	 speedup=23.7586
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0861	 ParSpMatVec=0.0024	 speedup=35.4806
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0861	 ParSpMatVec=0.0030	 speedup=28.2622
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0861	 ParSpMatVec=0.0028	 speedup=31.2608

INFO: ParSpMatVec tests passed

>>> End of log
