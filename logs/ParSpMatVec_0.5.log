>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1038.203125 MB free)
Uptime: 20765.0 sec
Load Avg:  1.1640625  1.05078125  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1225660 s       6462 s     119844 s     494220 s         27 s
#2  3498 MHz     365907 s        102 s      56300 s    1614814 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.29.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1808	 ParSpMatVec=0.0261	 speedup=6.9219
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1808	 ParSpMatVec=0.0091	 speedup=19.7695
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1808	 ParSpMatVec=0.0126	 speedup=14.2975
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1808	 ParSpMatVec=0.0135	 speedup=13.3611
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1808	 ParSpMatVec=0.0080	 speedup=22.6718
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2238	 ParSpMatVec=0.0463	 speedup=4.8336
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2238	 ParSpMatVec=0.0128	 speedup=17.4721
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2238	 ParSpMatVec=0.0142	 speedup=15.7639
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2238	 ParSpMatVec=0.0164	 speedup=13.6630
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2238	 ParSpMatVec=0.0133	 speedup=16.8210

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0594	 ParSpMatVec=0.0339	 speedup=1.7523
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0594	 ParSpMatVec=0.0128	 speedup=4.6281
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0594	 ParSpMatVec=0.0140	 speedup=4.2309
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0594	 ParSpMatVec=0.0132	 speedup=4.5190
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0594	 ParSpMatVec=0.0133	 speedup=4.4683

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0494	 ParSpMatVec=0.0360	 speedup=1.3693
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0494	 ParSpMatVec=0.0018	 speedup=27.5083
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0494	 ParSpMatVec=0.0023	 speedup=21.1673
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0494	 ParSpMatVec=0.0017	 speedup=28.5857
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0494	 ParSpMatVec=0.0015	 speedup=32.1217

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0060	 ParSpMatVec=0.0435	 speedup=0.1370
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0060	 ParSpMatVec=0.0033	 speedup=1.8006
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0060	 ParSpMatVec=0.0024	 speedup=2.4791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0060	 ParSpMatVec=0.0026	 speedup=2.3102
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0060	 ParSpMatVec=0.0028	 speedup=2.1192

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0470	 ParSpMatVec=0.0390	 speedup=1.2066
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0470	 ParSpMatVec=0.0032	 speedup=14.5868
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0470	 ParSpMatVec=0.0020	 speedup=23.5140
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0470	 ParSpMatVec=0.0024	 speedup=19.8025
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0470	 ParSpMatVec=0.0021	 speedup=22.6813

INFO: ParSpMatVec tests passed

>>> End of log
