>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1024.0078125 MB free)
Uptime: 18858.0 sec
Load Avg:  0.955078125  1.0439453125  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1165994 s        174 s      99970 s     389050 s         23 s
#2  3499 MHz     358048 s       5816 s      49910 s    1434061 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2714	 ParSpMatVec=0.0300	 speedup=9.0476
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2714	 ParSpMatVec=0.0089	 speedup=30.4555
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2714	 ParSpMatVec=0.0089	 speedup=30.6435
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2714	 ParSpMatVec=0.0068	 speedup=39.8713
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2714	 ParSpMatVec=0.0087	 speedup=31.2827
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1732	 ParSpMatVec=0.0520	 speedup=3.3320
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1732	 ParSpMatVec=0.0148	 speedup=11.7350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1732	 ParSpMatVec=0.0100	 speedup=17.3557
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1732	 ParSpMatVec=0.0085	 speedup=20.2720
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1732	 ParSpMatVec=0.0095	 speedup=18.2826

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0680	 ParSpMatVec=0.0331	 speedup=2.0532
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0680	 ParSpMatVec=0.0163	 speedup=4.1785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0680	 ParSpMatVec=0.0192	 speedup=3.5359
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0680	 ParSpMatVec=0.0133	 speedup=5.1047
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0680	 ParSpMatVec=0.0091	 speedup=7.4976

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0770	 ParSpMatVec=0.0368	 speedup=2.0922
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0770	 ParSpMatVec=0.0064	 speedup=12.0751
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0770	 ParSpMatVec=0.0018	 speedup=43.3274
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0770	 ParSpMatVec=0.0033	 speedup=23.3213
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0770	 ParSpMatVec=0.0030	 speedup=25.3032

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0089	 ParSpMatVec=0.0759	 speedup=0.1175
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0089	 ParSpMatVec=0.0042	 speedup=2.1238
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0089	 ParSpMatVec=0.0037	 speedup=2.3964
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0089	 ParSpMatVec=0.0057	 speedup=1.5697
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0089	 ParSpMatVec=0.0027	 speedup=3.2977

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0942	 ParSpMatVec=0.0714	 speedup=1.3199
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0942	 ParSpMatVec=0.0035	 speedup=27.2831
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0942	 ParSpMatVec=0.0024	 speedup=38.5626
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0942	 ParSpMatVec=0.0024	 speedup=39.8720
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0942	 ParSpMatVec=0.0120	 speedup=7.8820

INFO: ParSpMatVec tests passed

>>> End of log
