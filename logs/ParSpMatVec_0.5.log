>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1033.4765625 MB free)
Uptime: 19913.0 sec
Load Avg:  0.927734375  1.0146484375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1121626 s       5814 s     110246 s     517548 s         27 s
#2  3500 MHz     452091 s         43 s      54921 s    1422416 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2741	 ParSpMatVec=0.0291	 speedup=9.4305
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2741	 ParSpMatVec=0.0084	 speedup=32.6911
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2741	 ParSpMatVec=0.0130	 speedup=21.0214
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2741	 ParSpMatVec=0.0093	 speedup=29.4120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2741	 ParSpMatVec=0.0093	 speedup=29.4261
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2540	 ParSpMatVec=0.0840	 speedup=3.0239
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2540	 ParSpMatVec=0.0164	 speedup=15.5217
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2540	 ParSpMatVec=0.0148	 speedup=17.1128
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2540	 ParSpMatVec=0.0160	 speedup=15.9006
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2540	 ParSpMatVec=0.0147	 speedup=17.2391

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0687	 ParSpMatVec=0.0388	 speedup=1.7690
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0687	 ParSpMatVec=0.0118	 speedup=5.7990
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0687	 ParSpMatVec=0.0149	 speedup=4.6002
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0687	 ParSpMatVec=0.0154	 speedup=4.4494
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0687	 ParSpMatVec=0.0134	 speedup=5.1353

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0667	 ParSpMatVec=0.0602	 speedup=1.1085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0667	 ParSpMatVec=0.0029	 speedup=22.9426
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0667	 ParSpMatVec=0.0026	 speedup=25.5106
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0667	 ParSpMatVec=0.0019	 speedup=34.4705
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0667	 ParSpMatVec=0.0030	 speedup=22.5501

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0089	 ParSpMatVec=0.0808	 speedup=0.1097
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0089	 ParSpMatVec=0.0037	 speedup=2.4238
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0089	 ParSpMatVec=0.0037	 speedup=2.4230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0089	 ParSpMatVec=0.0025	 speedup=3.5592
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0089	 ParSpMatVec=0.0035	 speedup=2.5412

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0622	 ParSpMatVec=0.0744	 speedup=0.8359
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0622	 ParSpMatVec=0.0040	 speedup=15.6693
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0622	 ParSpMatVec=0.0073	 speedup=8.5681
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0622	 ParSpMatVec=0.0026	 speedup=23.9833
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0622	 ParSpMatVec=0.0024	 speedup=25.7409

INFO: ParSpMatVec tests passed

>>> End of log
