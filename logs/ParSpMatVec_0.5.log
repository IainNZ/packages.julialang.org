>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1028.43359375 MB free)
Uptime: 21664.0 sec
Load Avg:  0.9501953125  1.07568359375  1.0654296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1313445 s        105 s     133247 s     473741 s         24 s
#2  3499 MHz     388432 s       6026 s      59106 s    1664619 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2664	 ParSpMatVec=0.0258	 speedup=10.3045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2664	 ParSpMatVec=0.0096	 speedup=27.8819
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2664	 ParSpMatVec=0.0125	 speedup=21.2779
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2664	 ParSpMatVec=0.0099	 speedup=27.0090
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2664	 ParSpMatVec=0.0094	 speedup=28.2284
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1843	 ParSpMatVec=0.0488	 speedup=3.7763
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1843	 ParSpMatVec=0.0140	 speedup=13.1280
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1843	 ParSpMatVec=0.0161	 speedup=11.4775
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1843	 ParSpMatVec=0.0135	 speedup=13.6578
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1843	 ParSpMatVec=0.0139	 speedup=13.2165

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0472	 ParSpMatVec=0.0223	 speedup=2.1205
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0472	 ParSpMatVec=0.0128	 speedup=3.6865
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0472	 ParSpMatVec=0.0141	 speedup=3.3523
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0472	 ParSpMatVec=0.0146	 speedup=3.2374
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0472	 ParSpMatVec=0.0140	 speedup=3.3833

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0732	 ParSpMatVec=0.0660	 speedup=1.1088
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0732	 ParSpMatVec=0.0020	 speedup=35.8286
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0732	 ParSpMatVec=0.0030	 speedup=24.6778
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0732	 ParSpMatVec=0.0017	 speedup=42.5330
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0732	 ParSpMatVec=0.0021	 speedup=34.1871

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0611	 speedup=0.1071
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0039	 speedup=1.6896
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0025	 speedup=2.6474
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0029	 speedup=2.2522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.7029

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0859	 ParSpMatVec=0.0526	 speedup=1.6331
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0859	 ParSpMatVec=0.0037	 speedup=23.0812
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0859	 ParSpMatVec=0.0021	 speedup=40.6565
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0859	 ParSpMatVec=0.0031	 speedup=27.6199
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0859	 ParSpMatVec=0.0258	 speedup=3.3323

INFO: ParSpMatVec tests passed

>>> End of log
