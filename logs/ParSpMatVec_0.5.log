>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1047.66796875 MB free)
Uptime: 21265.0 sec
Load Avg:  0.93212890625  1.03515625  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1235041 s       7313 s     112642 s     502789 s         37 s
#2  3500 MHz     391818 s         92 s      56428 s    1626362 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.5.0
 - Compat                        0.25.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3037	 ParSpMatVec=0.0441	 speedup=6.8933
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3037	 ParSpMatVec=0.0094	 speedup=32.2246
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3037	 ParSpMatVec=0.0143	 speedup=21.2826
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3037	 ParSpMatVec=0.0105	 speedup=28.9602
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3037	 ParSpMatVec=0.0096	 speedup=31.5537
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2452	 ParSpMatVec=0.0570	 speedup=4.2979
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2452	 ParSpMatVec=0.0152	 speedup=16.0896
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2452	 ParSpMatVec=0.0154	 speedup=15.8925
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2452	 ParSpMatVec=0.0139	 speedup=17.6872
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2452	 ParSpMatVec=0.0324	 speedup=7.5751

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0723	 ParSpMatVec=0.0368	 speedup=1.9669
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0723	 ParSpMatVec=0.0144	 speedup=5.0369
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0723	 ParSpMatVec=0.0151	 speedup=4.7787
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0723	 ParSpMatVec=0.0149	 speedup=4.8655
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0723	 ParSpMatVec=0.0173	 speedup=4.1778

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0746	 ParSpMatVec=0.0623	 speedup=1.1976
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0746	 ParSpMatVec=0.0023	 speedup=32.1245
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0746	 ParSpMatVec=0.0034	 speedup=21.9365
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0746	 ParSpMatVec=0.0078	 speedup=9.5443
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0746	 ParSpMatVec=0.0018	 speedup=42.5967

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0461	 speedup=0.1683
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0052	 speedup=1.4812
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0020	 speedup=3.8507
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0029	 speedup=2.6750
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0183	 speedup=0.4240

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0912	 ParSpMatVec=0.0722	 speedup=1.2640
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0912	 ParSpMatVec=0.0192	 speedup=4.7424
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0912	 ParSpMatVec=0.0304	 speedup=3.0006
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0912	 ParSpMatVec=0.0025	 speedup=36.0184
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0912	 ParSpMatVec=0.0146	 speedup=6.2425

INFO: ParSpMatVec tests passed

>>> End of log
