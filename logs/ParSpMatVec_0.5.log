>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.6171875 MB free)
Uptime: 20275.0 sec
Load Avg:  1.00341796875  1.0283203125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1276940 s       2265 s     110422 s     380849 s         23 s
#2  3499 MHz     341287 s       4700 s      54104 s    1591747 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1917	 ParSpMatVec=0.0177	 speedup=10.8218
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1917	 ParSpMatVec=0.0062	 speedup=31.1370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1917	 ParSpMatVec=0.0133	 speedup=14.4039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1917	 ParSpMatVec=0.0084	 speedup=22.7536
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1917	 ParSpMatVec=0.0093	 speedup=20.6113
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1540	 ParSpMatVec=0.0347	 speedup=4.4405
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1540	 ParSpMatVec=0.0127	 speedup=12.1418
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1540	 ParSpMatVec=0.0139	 speedup=11.0884
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1540	 ParSpMatVec=0.0167	 speedup=9.2031
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1540	 ParSpMatVec=0.0147	 speedup=10.4564

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0497	 ParSpMatVec=0.0242	 speedup=2.0529
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0497	 ParSpMatVec=0.0130	 speedup=3.8244
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0497	 ParSpMatVec=0.0163	 speedup=3.0534
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0497	 ParSpMatVec=0.0151	 speedup=3.3025
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0497	 ParSpMatVec=0.0130	 speedup=3.8137

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0571	 ParSpMatVec=0.0366	 speedup=1.5600
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0571	 ParSpMatVec=0.0015	 speedup=38.4323
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0571	 ParSpMatVec=0.0016	 speedup=34.6507
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0571	 ParSpMatVec=0.0012	 speedup=49.3522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0571	 ParSpMatVec=0.0018	 speedup=31.7734

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0069	 ParSpMatVec=0.0646	 speedup=0.1066
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0069	 ParSpMatVec=0.0042	 speedup=1.6501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0069	 ParSpMatVec=0.0024	 speedup=2.8928
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0069	 ParSpMatVec=0.0027	 speedup=2.5909
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0069	 ParSpMatVec=0.0029	 speedup=2.3521

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0784	 ParSpMatVec=0.0689	 speedup=1.1380
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0784	 ParSpMatVec=0.0039	 speedup=20.1185
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0784	 ParSpMatVec=0.0024	 speedup=32.9344
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0784	 ParSpMatVec=0.0029	 speedup=27.1726
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0784	 ParSpMatVec=0.0024	 speedup=32.7108

INFO: ParSpMatVec tests passed

>>> End of log
