>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1032.98828125 MB free)
Uptime: 20266.0 sec
Load Avg:  1.140625  1.0712890625  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1280648 s         64 s     119564 s     369788 s         28 s
#2  3499 MHz     366972 s       7875 s      51995 s    1560274 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2233	 ParSpMatVec=0.0183	 speedup=12.2117
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2233	 ParSpMatVec=0.0077	 speedup=28.8264
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2233	 ParSpMatVec=0.0123	 speedup=18.2185
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2233	 ParSpMatVec=0.0081	 speedup=27.6721
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2233	 ParSpMatVec=0.0082	 speedup=27.1841
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1421	 ParSpMatVec=0.0367	 speedup=3.8710
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1421	 ParSpMatVec=0.0104	 speedup=13.7132
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1421	 ParSpMatVec=0.0130	 speedup=10.9691
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1421	 ParSpMatVec=0.0125	 speedup=11.3478
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1421	 ParSpMatVec=0.0138	 speedup=10.3012

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0412	 ParSpMatVec=0.0352	 speedup=1.1706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0412	 ParSpMatVec=0.0124	 speedup=3.3197
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0412	 ParSpMatVec=0.0139	 speedup=2.9652
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0412	 ParSpMatVec=0.0129	 speedup=3.1964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0412	 ParSpMatVec=0.0126	 speedup=3.2791

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0550	 ParSpMatVec=0.0363	 speedup=1.5136
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0550	 ParSpMatVec=0.0030	 speedup=18.1142
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0550	 ParSpMatVec=0.0024	 speedup=23.0126
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0550	 ParSpMatVec=0.0027	 speedup=20.4092
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0550	 ParSpMatVec=0.0022	 speedup=24.8341

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0372	 speedup=0.2262
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0032	 speedup=2.6605
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0028	 speedup=3.0415
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0030	 speedup=2.8468
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0022	 speedup=3.8987

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0782	 ParSpMatVec=0.0724	 speedup=1.0804
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0782	 ParSpMatVec=0.0035	 speedup=22.3001
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0782	 ParSpMatVec=0.0022	 speedup=36.2557
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0782	 ParSpMatVec=0.0532	 speedup=1.4704
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0782	 ParSpMatVec=0.0027	 speedup=28.5616

INFO: ParSpMatVec tests passed

>>> End of log
