>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.60546875 MB free)
Uptime: 20208.0 sec
Load Avg:  1.02783203125  1.04248046875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1246231 s       6689 s     117187 s     398947 s         28 s
#2  3499 MHz     342935 s         40 s      54388 s    1576527 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1776	 ParSpMatVec=0.0193	 speedup=9.1795
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1776	 ParSpMatVec=0.0091	 speedup=19.5651
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1776	 ParSpMatVec=0.0129	 speedup=13.7886
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1776	 ParSpMatVec=0.0116	 speedup=15.2982
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1776	 ParSpMatVec=0.0127	 speedup=13.9402
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2233	 ParSpMatVec=0.0507	 speedup=4.4049
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2233	 ParSpMatVec=0.0133	 speedup=16.8270
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2233	 ParSpMatVec=0.0148	 speedup=15.1311
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2233	 ParSpMatVec=0.0201	 speedup=11.1093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2233	 ParSpMatVec=0.0175	 speedup=12.7642

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0679	 ParSpMatVec=0.0315	 speedup=2.1592
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0679	 ParSpMatVec=0.0134	 speedup=5.0639
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0679	 ParSpMatVec=0.0151	 speedup=4.5051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0679	 ParSpMatVec=0.0138	 speedup=4.9314
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0679	 ParSpMatVec=0.0129	 speedup=5.2719

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0664	 ParSpMatVec=0.0555	 speedup=1.1969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0664	 ParSpMatVec=0.0021	 speedup=30.9870
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0664	 ParSpMatVec=0.0021	 speedup=31.3194
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0664	 ParSpMatVec=0.0018	 speedup=37.8437
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0664	 ParSpMatVec=0.0017	 speedup=40.2000

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0630	 speedup=0.1287
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0035	 speedup=2.2889
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0025	 speedup=3.2761
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0024	 speedup=3.3222
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0030	 speedup=2.6801

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0486	 ParSpMatVec=0.0424	 speedup=1.1459
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0486	 ParSpMatVec=0.0044	 speedup=10.9441
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0486	 ParSpMatVec=0.0024	 speedup=20.4476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0486	 ParSpMatVec=0.0030	 speedup=15.9659
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0486	 ParSpMatVec=0.0024	 speedup=19.9779

INFO: ParSpMatVec tests passed

>>> End of log
