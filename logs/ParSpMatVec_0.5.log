>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1031.9453125 MB free)
Uptime: 21152.0 sec
Load Avg:  1.0078125  1.048828125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1259666 s       1856 s     148161 s     462084 s         25 s
#2  3500 MHz     387518 s       5688 s      64111 s    1611191 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2806	 ParSpMatVec=0.0253	 speedup=11.1113
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2806	 ParSpMatVec=0.0087	 speedup=32.1829
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2806	 ParSpMatVec=0.0139	 speedup=20.1219
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2806	 ParSpMatVec=0.0107	 speedup=26.1428
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2806	 ParSpMatVec=0.0115	 speedup=24.3121
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2263	 ParSpMatVec=0.0483	 speedup=4.6832
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2263	 ParSpMatVec=0.0172	 speedup=13.1271
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2263	 ParSpMatVec=0.0146	 speedup=15.5400
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2263	 ParSpMatVec=0.0139	 speedup=16.2818
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2263	 ParSpMatVec=0.0136	 speedup=16.6221

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0433	 ParSpMatVec=0.0190	 speedup=2.2750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0433	 ParSpMatVec=0.0144	 speedup=3.0099
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0433	 ParSpMatVec=0.0161	 speedup=2.6881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0433	 ParSpMatVec=0.0176	 speedup=2.4513
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0433	 ParSpMatVec=0.0144	 speedup=3.0135

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0737	 ParSpMatVec=0.0771	 speedup=0.9565
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0737	 ParSpMatVec=0.0042	 speedup=17.6791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0737	 ParSpMatVec=0.0039	 speedup=18.9745
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0737	 ParSpMatVec=0.0027	 speedup=27.0393
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0737	 ParSpMatVec=0.0018	 speedup=40.0005

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0478	 speedup=0.1355
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0037	 speedup=1.7529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0016	 speedup=4.0879
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0028	 speedup=2.3230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0023	 speedup=2.8542

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0594	 ParSpMatVec=0.0750	 speedup=0.7912
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0594	 ParSpMatVec=0.0040	 speedup=14.7385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0594	 ParSpMatVec=0.0020	 speedup=29.4161
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0594	 ParSpMatVec=0.0039	 speedup=15.1662
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0594	 ParSpMatVec=0.0023	 speedup=25.7682

INFO: ParSpMatVec tests passed

>>> End of log
