>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1030.7109375 MB free)
Uptime: 21443.0 sec
Load Avg:  0.7294921875  0.92236328125  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz    1261985 s       7635 s     134834 s     486948 s         34 s
#2  3510 MHz     405124 s        128 s      58605 s    1634385 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2933	 ParSpMatVec=0.0271	 speedup=10.8386
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2933	 ParSpMatVec=0.0093	 speedup=31.3924
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2933	 ParSpMatVec=0.0118	 speedup=24.7984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2933	 ParSpMatVec=0.0061	 speedup=48.2620
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2933	 ParSpMatVec=0.0073	 speedup=40.1433
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1508	 ParSpMatVec=0.0332	 speedup=4.5502
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1508	 ParSpMatVec=0.0126	 speedup=11.9492
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1508	 ParSpMatVec=0.0107	 speedup=14.1283
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1508	 ParSpMatVec=0.0093	 speedup=16.2679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1508	 ParSpMatVec=0.0119	 speedup=12.6686

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0538	 ParSpMatVec=0.0282	 speedup=1.9054
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0538	 ParSpMatVec=0.0137	 speedup=3.9133
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0538	 ParSpMatVec=0.0099	 speedup=5.4242
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0538	 ParSpMatVec=0.0100	 speedup=5.3793
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0538	 ParSpMatVec=0.0126	 speedup=4.2651

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0732	 ParSpMatVec=0.0559	 speedup=1.3094
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0732	 ParSpMatVec=0.0024	 speedup=30.8115
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0732	 ParSpMatVec=0.0014	 speedup=50.6592
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0732	 ParSpMatVec=0.0016	 speedup=44.7654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0732	 ParSpMatVec=0.0020	 speedup=35.7351

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0064	 ParSpMatVec=0.0654	 speedup=0.0972
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0064	 ParSpMatVec=0.0038	 speedup=1.6741
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0064	 ParSpMatVec=0.0035	 speedup=1.8291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0064	 ParSpMatVec=0.0024	 speedup=2.6617
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0064	 ParSpMatVec=0.0032	 speedup=1.9943

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0701	 ParSpMatVec=0.0731	 speedup=0.9592
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0701	 ParSpMatVec=0.0046	 speedup=15.2142
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0701	 ParSpMatVec=0.0018	 speedup=37.9292
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0701	 ParSpMatVec=0.0025	 speedup=27.7655
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0701	 ParSpMatVec=0.0022	 speedup=32.5030

INFO: ParSpMatVec tests passed

>>> End of log
