>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1042.46875 MB free)
Uptime: 21510.0 sec
Load Avg:  0.974609375  1.0400390625  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1300306 s       5401 s     116597 s     455007 s         29 s
#2  3500 MHz     377685 s       3376 s      54320 s    1667411 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3149	 ParSpMatVec=0.0287	 speedup=10.9927
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3149	 ParSpMatVec=0.0097	 speedup=32.5062
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3149	 ParSpMatVec=0.0132	 speedup=23.8059
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3149	 ParSpMatVec=0.0121	 speedup=26.0630
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3149	 ParSpMatVec=0.0084	 speedup=37.3005
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2078	 ParSpMatVec=0.0501	 speedup=4.1490
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2078	 ParSpMatVec=0.0131	 speedup=15.8648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2078	 ParSpMatVec=0.0143	 speedup=14.4962
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2078	 ParSpMatVec=0.0192	 speedup=10.8124
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2078	 ParSpMatVec=0.0123	 speedup=16.8916

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0484	 ParSpMatVec=0.0338	 speedup=1.4330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0484	 ParSpMatVec=0.0161	 speedup=3.0123
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0484	 ParSpMatVec=0.0168	 speedup=2.8863
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0484	 ParSpMatVec=0.0137	 speedup=3.5415
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0484	 ParSpMatVec=0.0140	 speedup=3.4451

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0726	 ParSpMatVec=0.0458	 speedup=1.5860
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0726	 ParSpMatVec=0.0024	 speedup=29.8928
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0726	 ParSpMatVec=0.0275	 speedup=2.6441
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0726	 ParSpMatVec=0.0042	 speedup=17.3812
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0726	 ParSpMatVec=0.0321	 speedup=2.2625

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0142	 ParSpMatVec=0.0786	 speedup=0.1813
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0142	 ParSpMatVec=0.0033	 speedup=4.3205
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0142	 ParSpMatVec=0.0021	 speedup=6.8803
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0142	 ParSpMatVec=0.0044	 speedup=3.2635
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0142	 ParSpMatVec=0.0029	 speedup=4.9823

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0729	 ParSpMatVec=0.0720	 speedup=1.0120
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0729	 ParSpMatVec=0.0035	 speedup=20.6344
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0729	 ParSpMatVec=0.0045	 speedup=16.1071
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0729	 ParSpMatVec=0.0035	 speedup=20.5537
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0729	 ParSpMatVec=0.0022	 speedup=33.6077

INFO: ParSpMatVec tests passed

>>> End of log
