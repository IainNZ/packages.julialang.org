>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1053.1484375 MB free)
Uptime: 20167.0 sec
Load Avg:  0.9931640625  1.02490234375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1175791 s       7017 s     100879 s     481850 s         37 s
#2  3500 MHz     389062 s         38 s      54590 s    1528343 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2716	 ParSpMatVec=0.0338	 speedup=8.0333
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2716	 ParSpMatVec=0.0080	 speedup=33.7961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2716	 ParSpMatVec=0.0147	 speedup=18.4886
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2716	 ParSpMatVec=0.0099	 speedup=27.3826
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2716	 ParSpMatVec=0.0107	 speedup=25.4703
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2439	 ParSpMatVec=0.0585	 speedup=4.1670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2439	 ParSpMatVec=0.0138	 speedup=17.7058
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2439	 ParSpMatVec=0.0133	 speedup=18.3037
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2439	 ParSpMatVec=0.0176	 speedup=13.8710
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2439	 ParSpMatVec=0.0130	 speedup=18.7678

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0416	 ParSpMatVec=0.0235	 speedup=1.7721
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0416	 ParSpMatVec=0.0140	 speedup=2.9627
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0416	 ParSpMatVec=0.0150	 speedup=2.7758
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0416	 ParSpMatVec=0.0124	 speedup=3.3428
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0416	 ParSpMatVec=0.0134	 speedup=3.1110

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0556	 ParSpMatVec=0.0383	 speedup=1.4531
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0556	 ParSpMatVec=0.0030	 speedup=18.7030
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0556	 ParSpMatVec=0.0024	 speedup=23.0188
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0556	 ParSpMatVec=0.0028	 speedup=19.8479
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0556	 ParSpMatVec=0.0034	 speedup=16.4271

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0643	 speedup=0.1201
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0027	 speedup=2.8448
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0034	 speedup=2.2593
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0041	 speedup=1.8684
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0085	 speedup=0.9040

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0490	 ParSpMatVec=0.0437	 speedup=1.1197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0490	 ParSpMatVec=0.0044	 speedup=11.1561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0490	 ParSpMatVec=0.0024	 speedup=20.5978
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0490	 ParSpMatVec=0.0081	 speedup=6.0603
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0490	 ParSpMatVec=0.0062	 speedup=7.8999

INFO: ParSpMatVec tests passed

>>> End of log
