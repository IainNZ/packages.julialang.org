>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1050.57421875 MB free)
Uptime: 21530.0 sec
Load Avg:  1.01123046875  1.03857421875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1278870 s       4482 s     126932 s     474993 s         34 s
#2  3501 MHz     385242 s       2705 s      58635 s    1659215 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.5.0
 - Compat                        0.25.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3293	 ParSpMatVec=0.0288	 speedup=11.4180
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3293	 ParSpMatVec=0.0102	 speedup=32.3437
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3293	 ParSpMatVec=0.0116	 speedup=28.4806
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3293	 ParSpMatVec=0.0102	 speedup=32.2648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3293	 ParSpMatVec=0.0097	 speedup=34.0457
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2644	 ParSpMatVec=0.0550	 speedup=4.8086
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2644	 ParSpMatVec=0.0129	 speedup=20.4308
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2644	 ParSpMatVec=0.0125	 speedup=21.1060
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2644	 ParSpMatVec=0.0103	 speedup=25.6577
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2644	 ParSpMatVec=0.0106	 speedup=24.9333

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0588	 ParSpMatVec=0.0317	 speedup=1.8513
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0588	 ParSpMatVec=0.0140	 speedup=4.1874
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0588	 ParSpMatVec=0.0132	 speedup=4.4655
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0588	 ParSpMatVec=0.0113	 speedup=5.1785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0588	 ParSpMatVec=0.0133	 speedup=4.4100

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0784	 ParSpMatVec=0.0669	 speedup=1.1722
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0784	 ParSpMatVec=0.0034	 speedup=22.9822
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0784	 ParSpMatVec=0.0029	 speedup=26.6083
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0784	 ParSpMatVec=0.0020	 speedup=39.1499
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0784	 ParSpMatVec=0.0023	 speedup=34.3587

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0080	 ParSpMatVec=0.0729	 speedup=0.1091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0080	 ParSpMatVec=0.0038	 speedup=2.0795
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0080	 ParSpMatVec=0.0059	 speedup=1.3463
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0080	 ParSpMatVec=0.0042	 speedup=1.8796
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0080	 ParSpMatVec=0.0027	 speedup=2.9311

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0899	 ParSpMatVec=0.0682	 speedup=1.3184
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0899	 ParSpMatVec=0.0038	 speedup=23.4144
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0899	 ParSpMatVec=0.0023	 speedup=39.6221
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0899	 ParSpMatVec=0.0032	 speedup=27.7237
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0899	 ParSpMatVec=0.0034	 speedup=26.0970

INFO: ParSpMatVec tests passed

>>> End of log
