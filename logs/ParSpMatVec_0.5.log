>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.7.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1032.4296875 MB free)
Uptime: 20596.0 sec
Load Avg:  0.96923828125  1.09521484375  1.08251953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1271776 s       1298 s     123653 s     420175 s         26 s
#2  3500 MHz     367734 s       5422 s      57372 s    1585802 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.7.0
 - Compat                        0.28.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3079	 ParSpMatVec=0.0270	 speedup=11.3853
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3079	 ParSpMatVec=0.0065	 speedup=47.2158
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3079	 ParSpMatVec=0.0123	 speedup=25.0877
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3079	 ParSpMatVec=0.0088	 speedup=35.0398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3079	 ParSpMatVec=0.0128	 speedup=23.9925
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2553	 ParSpMatVec=0.0550	 speedup=4.6449
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2553	 ParSpMatVec=0.0145	 speedup=17.6083
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2553	 ParSpMatVec=0.0159	 speedup=16.0628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2553	 ParSpMatVec=0.0138	 speedup=18.4582
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2553	 ParSpMatVec=0.0131	 speedup=19.4577

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0611	 ParSpMatVec=0.0318	 speedup=1.9221
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0611	 ParSpMatVec=0.0143	 speedup=4.2645
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0611	 ParSpMatVec=0.0179	 speedup=3.4166
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0611	 ParSpMatVec=0.0134	 speedup=4.5731
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0611	 ParSpMatVec=0.0144	 speedup=4.2353

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0694	 ParSpMatVec=0.0584	 speedup=1.1881
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0694	 ParSpMatVec=0.0029	 speedup=23.5473
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0694	 ParSpMatVec=0.0029	 speedup=23.5095
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0694	 ParSpMatVec=0.0019	 speedup=37.2206
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0694	 ParSpMatVec=0.0016	 speedup=42.6033

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0620	 speedup=0.1220
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0048	 speedup=1.5882
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0019	 speedup=3.9656
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0025	 speedup=3.0375
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0023	 speedup=3.2886

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0806	 ParSpMatVec=0.0648	 speedup=1.2428
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0806	 ParSpMatVec=0.0032	 speedup=25.0548
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0806	 ParSpMatVec=0.0074	 speedup=10.8654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0806	 ParSpMatVec=0.0028	 speedup=28.3016
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0806	 ParSpMatVec=0.0023	 speedup=35.0451

INFO: ParSpMatVec tests passed

>>> End of log
