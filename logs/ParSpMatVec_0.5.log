>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1023.14453125 MB free)
Uptime: 21269.0 sec
Load Avg:  1.0078125  1.0634765625  1.05615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1282839 s       2462 s     161886 s     433764 s         30 s
#2  3500 MHz     370960 s       4561 s      66512 s    1638191 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2849	 ParSpMatVec=0.0196	 speedup=14.5450
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2849	 ParSpMatVec=0.0093	 speedup=30.5031
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2849	 ParSpMatVec=0.0116	 speedup=24.4864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2849	 ParSpMatVec=0.0094	 speedup=30.1808
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2849	 ParSpMatVec=0.0093	 speedup=30.5722
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2413	 ParSpMatVec=0.0519	 speedup=4.6536
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2413	 ParSpMatVec=0.0134	 speedup=17.9636
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2413	 ParSpMatVec=0.0176	 speedup=13.6930
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2413	 ParSpMatVec=0.0132	 speedup=18.3045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2413	 ParSpMatVec=0.0138	 speedup=17.4767

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0434	 ParSpMatVec=0.0200	 speedup=2.1670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0434	 ParSpMatVec=0.0129	 speedup=3.3558
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0434	 ParSpMatVec=0.0153	 speedup=2.8415
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0434	 ParSpMatVec=0.0132	 speedup=3.2839
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0434	 ParSpMatVec=0.0132	 speedup=3.2726

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0512	 ParSpMatVec=0.0351	 speedup=1.4558
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0512	 ParSpMatVec=0.0020	 speedup=25.5433
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0512	 ParSpMatVec=0.0022	 speedup=23.5235
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0512	 ParSpMatVec=0.0024	 speedup=20.9196
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0512	 ParSpMatVec=0.0015	 speedup=33.7973

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0059	 ParSpMatVec=0.0483	 speedup=0.1223
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0059	 ParSpMatVec=0.0031	 speedup=1.8894
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0059	 ParSpMatVec=0.0035	 speedup=1.6878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0059	 ParSpMatVec=0.0026	 speedup=2.2993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0059	 ParSpMatVec=0.0029	 speedup=2.0471

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0498	 ParSpMatVec=0.0414	 speedup=1.2027
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0498	 ParSpMatVec=0.0037	 speedup=13.3531
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0498	 ParSpMatVec=0.0027	 speedup=18.6245
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0498	 ParSpMatVec=0.0030	 speedup=16.7087
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0498	 ParSpMatVec=0.0043	 speedup=11.5924

INFO: ParSpMatVec tests passed

>>> End of log
