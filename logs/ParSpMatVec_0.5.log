>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1030.0703125 MB free)
Uptime: 20534.0 sec
Load Avg:  1.1044921875  1.08984375  1.060546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz    1246014 s       6559 s     123956 s     429187 s         27 s
#2  3510 MHz     367294 s         93 s      56959 s    1584511 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1900	 ParSpMatVec=0.0171	 speedup=11.0946
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1900	 ParSpMatVec=0.0092	 speedup=20.7540
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1900	 ParSpMatVec=0.0121	 speedup=15.7621
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1900	 ParSpMatVec=0.0115	 speedup=16.5741
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1900	 ParSpMatVec=0.0091	 speedup=20.7867
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1823	 ParSpMatVec=0.0351	 speedup=5.1880
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1823	 ParSpMatVec=0.0129	 speedup=14.1176
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1823	 ParSpMatVec=0.0202	 speedup=9.0024
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1823	 ParSpMatVec=0.0133	 speedup=13.7098
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1823	 ParSpMatVec=0.0158	 speedup=11.5558

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0419	 ParSpMatVec=0.0299	 speedup=1.4008
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0419	 ParSpMatVec=0.0133	 speedup=3.1476
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0419	 ParSpMatVec=0.0145	 speedup=2.8818
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0419	 ParSpMatVec=0.0121	 speedup=3.4615
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0419	 ParSpMatVec=0.0110	 speedup=3.8154

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0618	 ParSpMatVec=0.0406	 speedup=1.5226
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0618	 ParSpMatVec=0.0030	 speedup=20.9197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0618	 ParSpMatVec=0.0025	 speedup=24.4618
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0618	 ParSpMatVec=0.0012	 speedup=49.6135
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0618	 ParSpMatVec=0.0018	 speedup=35.0281

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0640	 speedup=0.1131
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0038	 speedup=1.9240
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0027	 speedup=2.6361
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0025	 speedup=2.9410
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0023	 speedup=3.1392

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0436	 ParSpMatVec=0.0371	 speedup=1.1753
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0436	 ParSpMatVec=0.0031	 speedup=14.1744
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0436	 ParSpMatVec=0.0023	 speedup=19.2701
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0436	 ParSpMatVec=0.0026	 speedup=16.4622
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0436	 ParSpMatVec=0.0026	 speedup=16.8571

INFO: ParSpMatVec tests passed

>>> End of log
