>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1053.34375 MB free)
Uptime: 19539.0 sec
Load Avg:  0.935546875  1.046875  1.05908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1148063 s         86 s     118677 s     446587 s         29 s
#2  3500 MHz     399958 s       6691 s      54110 s    1449043 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3022	 ParSpMatVec=0.0185	 speedup=16.2905
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3022	 ParSpMatVec=0.0086	 speedup=35.1312
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3022	 ParSpMatVec=0.0118	 speedup=25.5748
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3022	 ParSpMatVec=0.0146	 speedup=20.6556
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3022	 ParSpMatVec=0.0086	 speedup=35.1388
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2378	 ParSpMatVec=0.0540	 speedup=4.4008
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2378	 ParSpMatVec=0.0130	 speedup=18.2888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2378	 ParSpMatVec=0.0565	 speedup=4.2071
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2378	 ParSpMatVec=0.0180	 speedup=13.2171
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2378	 ParSpMatVec=0.0128	 speedup=18.5595

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0521	 ParSpMatVec=0.0297	 speedup=1.7513
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0521	 ParSpMatVec=0.0124	 speedup=4.1932
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0521	 ParSpMatVec=0.0206	 speedup=2.5288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0521	 ParSpMatVec=0.0143	 speedup=3.6329
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0521	 ParSpMatVec=0.0148	 speedup=3.5164

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0938	 ParSpMatVec=0.0749	 speedup=1.2534
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0938	 ParSpMatVec=0.0023	 speedup=40.3521
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0938	 ParSpMatVec=0.0140	 speedup=6.7252
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0938	 ParSpMatVec=0.0227	 speedup=4.1415
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0938	 ParSpMatVec=0.0040	 speedup=23.4890

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0492	 speedup=0.1461
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0036	 speedup=1.9921
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0022	 speedup=3.2514
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0066	 speedup=1.0851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0065	 speedup=1.1111

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0775	 ParSpMatVec=0.0692	 speedup=1.1187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0775	 ParSpMatVec=0.0049	 speedup=15.9147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0775	 ParSpMatVec=0.0023	 speedup=33.2459
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0775	 ParSpMatVec=0.0038	 speedup=20.2334
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0775	 ParSpMatVec=0.0036	 speedup=21.7677

INFO: ParSpMatVec tests passed

>>> End of log
