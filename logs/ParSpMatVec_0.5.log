>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (963.08984375 MB free)
Uptime: 20909.0 sec
Load Avg:  1.0166015625  1.056640625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1228092 s       6680 s     132941 s     469844 s         39 s
#2  3499 MHz     372952 s        147 s      57896 s    1616600 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2075	 ParSpMatVec=0.0288	 speedup=7.1948
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2075	 ParSpMatVec=0.0094	 speedup=22.1556
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2075	 ParSpMatVec=0.0155	 speedup=13.3667
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2075	 ParSpMatVec=0.0098	 speedup=21.2196
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2075	 ParSpMatVec=0.0129	 speedup=16.0518
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2379	 ParSpMatVec=0.0532	 speedup=4.4721
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2379	 ParSpMatVec=0.0128	 speedup=18.6322
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2379	 ParSpMatVec=0.0137	 speedup=17.4184
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2379	 ParSpMatVec=0.0131	 speedup=18.2321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2379	 ParSpMatVec=0.0149	 speedup=15.9720

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0487	 ParSpMatVec=0.0334	 speedup=1.4576
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0487	 ParSpMatVec=0.0132	 speedup=3.6751
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0487	 ParSpMatVec=0.0148	 speedup=3.2814
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0487	 ParSpMatVec=0.0134	 speedup=3.6266
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0487	 ParSpMatVec=0.0158	 speedup=3.0698

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0703	 ParSpMatVec=0.0645	 speedup=1.0894
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0703	 ParSpMatVec=0.0023	 speedup=31.1173
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0703	 ParSpMatVec=0.0028	 speedup=25.2645
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0703	 ParSpMatVec=0.0059	 speedup=11.9091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0703	 ParSpMatVec=0.0018	 speedup=39.4017

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0091	 ParSpMatVec=0.0653	 speedup=0.1393
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0091	 ParSpMatVec=0.0040	 speedup=2.2491
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0091	 ParSpMatVec=0.0038	 speedup=2.4114
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0091	 ParSpMatVec=0.0024	 speedup=3.8644
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0091	 ParSpMatVec=0.0034	 speedup=2.7107

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0802	 ParSpMatVec=0.0718	 speedup=1.1166
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0802	 ParSpMatVec=0.0042	 speedup=19.0454
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0802	 ParSpMatVec=0.0023	 speedup=35.4514
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0802	 ParSpMatVec=0.0043	 speedup=18.6963
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0802	 ParSpMatVec=0.0074	 speedup=10.8605

INFO: ParSpMatVec tests passed

>>> End of log
