>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1057.92578125 MB free)
Uptime: 19866.0 sec
Load Avg:  0.9638671875  1.0634765625  1.060546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1185259 s       4003 s     135232 s     428828 s         32 s
#2  3496 MHz     383362 s       3012 s      62731 s    1492362 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.5.0
 - Compat                        0.25.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2551	 ParSpMatVec=0.0219	 speedup=11.6735
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2551	 ParSpMatVec=0.0090	 speedup=28.3926
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2551	 ParSpMatVec=0.0124	 speedup=20.4954
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2551	 ParSpMatVec=0.0101	 speedup=25.1547
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2551	 ParSpMatVec=0.0125	 speedup=20.4528
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2215	 ParSpMatVec=0.0489	 speedup=4.5330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2215	 ParSpMatVec=0.0134	 speedup=16.4970
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2215	 ParSpMatVec=0.0148	 speedup=15.0157
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2215	 ParSpMatVec=0.0133	 speedup=16.6731
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2215	 ParSpMatVec=0.0177	 speedup=12.5276

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0435	 ParSpMatVec=0.0212	 speedup=2.0496
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0435	 ParSpMatVec=0.0168	 speedup=2.5871
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0435	 ParSpMatVec=0.0147	 speedup=2.9679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0435	 ParSpMatVec=0.0154	 speedup=2.8220
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0435	 ParSpMatVec=0.0156	 speedup=2.7962

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0577	 ParSpMatVec=0.0390	 speedup=1.4788
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0577	 ParSpMatVec=0.0029	 speedup=19.6522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0577	 ParSpMatVec=0.0019	 speedup=30.2027
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0577	 ParSpMatVec=0.0028	 speedup=20.7933
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0577	 ParSpMatVec=0.0017	 speedup=33.3283

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0094	 ParSpMatVec=0.0636	 speedup=0.1484
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0094	 ParSpMatVec=0.0041	 speedup=2.3052
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0094	 ParSpMatVec=0.0025	 speedup=3.7244
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0094	 ParSpMatVec=0.0027	 speedup=3.5572
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0094	 ParSpMatVec=0.0023	 speedup=4.1606

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0848	 ParSpMatVec=0.0684	 speedup=1.2401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0848	 ParSpMatVec=0.0035	 speedup=23.8843
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0848	 ParSpMatVec=0.0021	 speedup=40.2743
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0848	 ParSpMatVec=0.0021	 speedup=40.3678
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0848	 ParSpMatVec=0.0024	 speedup=35.1150

INFO: ParSpMatVec tests passed

>>> End of log
