>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1037.46875 MB free)
Uptime: 21171.0 sec
Load Avg:  1.00732421875  1.06396484375  1.05712890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1310846 s       4241 s     103477 s     419984 s         30 s
#2  3499 MHz     336409 s       2689 s      51984 s    1683636 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3383	 ParSpMatVec=0.0292	 speedup=11.5838
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3383	 ParSpMatVec=0.0092	 speedup=36.6462
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3383	 ParSpMatVec=0.0136	 speedup=24.8973
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3383	 ParSpMatVec=0.0084	 speedup=40.0644
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3383	 ParSpMatVec=0.0166	 speedup=20.3562
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2531	 ParSpMatVec=0.0563	 speedup=4.4948
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2531	 ParSpMatVec=0.0158	 speedup=16.0398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2531	 ParSpMatVec=0.0162	 speedup=15.6050
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2531	 ParSpMatVec=0.0153	 speedup=16.5609
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2531	 ParSpMatVec=0.0153	 speedup=16.5268

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0651	 ParSpMatVec=0.0329	 speedup=1.9801
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0651	 ParSpMatVec=0.0140	 speedup=4.6646
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0651	 ParSpMatVec=0.0145	 speedup=4.4864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0651	 ParSpMatVec=0.0135	 speedup=4.8229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0651	 ParSpMatVec=0.0221	 speedup=2.9472

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0704	 ParSpMatVec=0.0389	 speedup=1.8091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0704	 ParSpMatVec=0.0017	 speedup=41.5673
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0704	 ParSpMatVec=0.0017	 speedup=41.3394
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0704	 ParSpMatVec=0.0009	 speedup=76.8858
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0704	 ParSpMatVec=0.0018	 speedup=39.1587

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0649	 speedup=0.1246
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0039	 speedup=2.0847
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0045	 speedup=1.8149
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0034	 speedup=2.3979
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0035	 speedup=2.3273

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0796	 ParSpMatVec=0.0666	 speedup=1.1946
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0796	 ParSpMatVec=0.0039	 speedup=20.5115
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0796	 ParSpMatVec=0.0017	 speedup=47.7571
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0796	 ParSpMatVec=0.0023	 speedup=35.0764
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0796	 ParSpMatVec=0.0031	 speedup=25.5099

INFO: ParSpMatVec tests passed

>>> End of log
