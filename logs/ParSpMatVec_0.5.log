>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1055.03515625 MB free)
Uptime: 19917.0 sec
Load Avg:  1.078125  1.08740234375  1.07177734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1176249 s       6821 s     107182 s     449681 s         23 s
#2  3499 MHz     384745 s         98 s      52309 s    1513578 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3161	 ParSpMatVec=0.0274	 speedup=11.5325
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3161	 ParSpMatVec=0.0099	 speedup=32.0602
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3161	 ParSpMatVec=0.0137	 speedup=23.0230
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3161	 ParSpMatVec=0.0120	 speedup=26.2440
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3161	 ParSpMatVec=0.0090	 speedup=35.2675
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1473	 ParSpMatVec=0.0364	 speedup=4.0425
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1473	 ParSpMatVec=0.0119	 speedup=12.3785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1473	 ParSpMatVec=0.0129	 speedup=11.4182
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1473	 ParSpMatVec=0.0153	 speedup=9.6500
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1473	 ParSpMatVec=0.0145	 speedup=10.1364

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0593	 ParSpMatVec=0.0290	 speedup=2.0422
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0593	 ParSpMatVec=0.0137	 speedup=4.3271
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0593	 ParSpMatVec=0.0146	 speedup=4.0664
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0593	 ParSpMatVec=0.0128	 speedup=4.6167
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0593	 ParSpMatVec=0.0132	 speedup=4.4795

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0539	 ParSpMatVec=0.0593	 speedup=0.9089
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0539	 ParSpMatVec=0.0023	 speedup=23.0204
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0539	 ParSpMatVec=0.0029	 speedup=18.5721
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0539	 ParSpMatVec=0.0015	 speedup=34.8567
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0539	 ParSpMatVec=0.0023	 speedup=23.5805

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0104	 ParSpMatVec=0.0482	 speedup=0.2150
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0104	 ParSpMatVec=0.0045	 speedup=2.3233
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0104	 ParSpMatVec=0.0047	 speedup=2.1880
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0104	 ParSpMatVec=0.0028	 speedup=3.6826
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0104	 ParSpMatVec=0.0026	 speedup=3.9422

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0773	 ParSpMatVec=0.0422	 speedup=1.8321
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0773	 ParSpMatVec=0.0028	 speedup=27.9105
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0773	 ParSpMatVec=0.0020	 speedup=39.0325
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0773	 ParSpMatVec=0.0027	 speedup=28.7326
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0773	 ParSpMatVec=0.0025	 speedup=30.7747

INFO: ParSpMatVec tests passed

>>> End of log
