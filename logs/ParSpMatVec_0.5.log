>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1048.09375 MB free)
Uptime: 20379.0 sec
Load Avg:  1.00634765625  1.0419921875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz    1169218 s       7174 s     138447 s     485423 s         23 s
#2  3509 MHz     395936 s        558 s      56864 s    1536215 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.23.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3168	 ParSpMatVec=0.0451	 speedup=7.0300
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3168	 ParSpMatVec=0.0095	 speedup=33.2813
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3168	 ParSpMatVec=0.0116	 speedup=27.2998
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3168	 ParSpMatVec=0.0129	 speedup=24.5438
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3168	 ParSpMatVec=0.0127	 speedup=24.9586
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1835	 ParSpMatVec=0.0395	 speedup=4.6467
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1835	 ParSpMatVec=0.0146	 speedup=12.5886
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1835	 ParSpMatVec=0.0158	 speedup=11.6103
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1835	 ParSpMatVec=0.0202	 speedup=9.0852
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1835	 ParSpMatVec=0.0130	 speedup=14.1158

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0647	 ParSpMatVec=0.0208	 speedup=3.1173
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0647	 ParSpMatVec=0.0144	 speedup=4.5086
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0647	 ParSpMatVec=0.0251	 speedup=2.5771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0647	 ParSpMatVec=0.0131	 speedup=4.9334
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0647	 ParSpMatVec=0.0138	 speedup=4.6961

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0651	 ParSpMatVec=0.0370	 speedup=1.7593
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0651	 ParSpMatVec=0.0027	 speedup=24.2906
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0651	 ParSpMatVec=0.0039	 speedup=16.7848
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0651	 ParSpMatVec=0.0015	 speedup=43.1342
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0651	 ParSpMatVec=0.0022	 speedup=29.9465

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0123	 ParSpMatVec=0.0900	 speedup=0.1371
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0123	 ParSpMatVec=0.0042	 speedup=2.9273
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0123	 ParSpMatVec=0.0032	 speedup=3.8539
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0123	 ParSpMatVec=0.0084	 speedup=1.4608
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0123	 ParSpMatVec=0.0400	 speedup=0.3083

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0820	 ParSpMatVec=0.0715	 speedup=1.1463
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0820	 ParSpMatVec=0.0045	 speedup=18.0425
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0820	 ParSpMatVec=0.0391	 speedup=2.0975
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0820	 ParSpMatVec=0.0037	 speedup=22.3969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0820	 ParSpMatVec=0.0042	 speedup=19.5454

INFO: ParSpMatVec tests passed

>>> End of log
