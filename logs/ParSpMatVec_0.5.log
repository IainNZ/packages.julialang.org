>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.171875 MB free)
Uptime: 18442.0 sec
Load Avg:  0.9970703125  1.04296875  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1111288 s       4880 s     109950 s     384532 s          8 s
#2  3500 MHz     326571 s        194 s      45044 s    1438974 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1957	 ParSpMatVec=0.0175	 speedup=11.1510
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1957	 ParSpMatVec=0.0079	 speedup=24.8607
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1957	 ParSpMatVec=0.0081	 speedup=24.1757
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1957	 ParSpMatVec=0.0047	 speedup=41.6978
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1957	 ParSpMatVec=0.0080	 speedup=24.4736
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2333	 ParSpMatVec=0.0491	 speedup=4.7517
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2333	 ParSpMatVec=0.0127	 speedup=18.4427
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2333	 ParSpMatVec=0.0090	 speedup=25.9173
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2333	 ParSpMatVec=0.0098	 speedup=23.8034
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2333	 ParSpMatVec=0.0129	 speedup=18.0256

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0592	 ParSpMatVec=0.0313	 speedup=1.8892
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0592	 ParSpMatVec=0.0137	 speedup=4.3370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0592	 ParSpMatVec=0.0080	 speedup=7.4178
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0592	 ParSpMatVec=0.0109	 speedup=5.4492
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0592	 ParSpMatVec=0.0109	 speedup=5.4333

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0635	 ParSpMatVec=0.0355	 speedup=1.7887
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0635	 ParSpMatVec=0.0016	 speedup=40.2884
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0635	 ParSpMatVec=0.0012	 speedup=54.0431
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0635	 ParSpMatVec=0.0014	 speedup=46.5300
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0635	 ParSpMatVec=0.0016	 speedup=40.1969

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0559	 speedup=0.1352
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0026	 speedup=2.9339
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0023	 speedup=3.2856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0026	 speedup=2.8547
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0023	 speedup=3.2263

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0496	 ParSpMatVec=0.0383	 speedup=1.2960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0496	 ParSpMatVec=0.0033	 speedup=14.8961
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0496	 ParSpMatVec=0.0025	 speedup=20.0833
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0496	 ParSpMatVec=0.0028	 speedup=17.6319
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0496	 ParSpMatVec=0.0025	 speedup=19.5401

INFO: ParSpMatVec tests passed

>>> End of log
