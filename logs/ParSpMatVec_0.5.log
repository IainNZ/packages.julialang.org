>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1015.8984375 MB free)
Uptime: 20089.0 sec
Load Avg:  1.01220703125  1.064453125  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1225230 s       5464 s     127916 s     400799 s         24 s
#2  3500 MHz     367567 s       1178 s      59876 s    1535602 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.29.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2255	 ParSpMatVec=0.0165	 speedup=13.7001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2255	 ParSpMatVec=0.0099	 speedup=22.7587
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2255	 ParSpMatVec=0.0122	 speedup=18.4875
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2255	 ParSpMatVec=0.0122	 speedup=18.4582
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2255	 ParSpMatVec=0.0096	 speedup=23.4935
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2362	 ParSpMatVec=0.0504	 speedup=4.6881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2362	 ParSpMatVec=0.0130	 speedup=18.2102
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2362	 ParSpMatVec=0.0142	 speedup=16.5758
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2362	 ParSpMatVec=0.0115	 speedup=20.5990
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2362	 ParSpMatVec=0.0138	 speedup=17.1270

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0408	 ParSpMatVec=0.0239	 speedup=1.7082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0408	 ParSpMatVec=0.0135	 speedup=3.0322
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0408	 ParSpMatVec=0.0153	 speedup=2.6596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0408	 ParSpMatVec=0.0156	 speedup=2.6182
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0408	 ParSpMatVec=0.0139	 speedup=2.9351

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0637	 ParSpMatVec=0.0520	 speedup=1.2259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0637	 ParSpMatVec=0.0024	 speedup=26.1633
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0637	 ParSpMatVec=0.0021	 speedup=30.5018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0637	 ParSpMatVec=0.0021	 speedup=30.4839
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0637	 ParSpMatVec=0.0017	 speedup=37.0303

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0108	 ParSpMatVec=0.0601	 speedup=0.1791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0108	 ParSpMatVec=0.0044	 speedup=2.4724
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0108	 ParSpMatVec=0.0026	 speedup=4.0941
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0108	 ParSpMatVec=0.0024	 speedup=4.4285
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0108	 ParSpMatVec=0.0028	 speedup=3.8093

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0726	 ParSpMatVec=0.0585	 speedup=1.2405
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0726	 ParSpMatVec=0.0042	 speedup=17.4681
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0726	 ParSpMatVec=0.0021	 speedup=34.7117
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0726	 ParSpMatVec=0.0026	 speedup=28.4565
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0726	 ParSpMatVec=0.0023	 speedup=31.0648

INFO: ParSpMatVec tests passed

>>> End of log
