>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1029.140625 MB free)
Uptime: 20166.0 sec
Load Avg:  1.03076171875  1.06201171875  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1207272 s       4384 s     118980 s     449546 s         27 s
#2  3499 MHz     406692 s       2805 s      54743 s    1501758 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.26.0
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3045	 ParSpMatVec=0.0265	 speedup=11.4720
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3045	 ParSpMatVec=0.0094	 speedup=32.3526
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3045	 ParSpMatVec=0.0119	 speedup=25.4828
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3045	 ParSpMatVec=0.0107	 speedup=28.5250
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3045	 ParSpMatVec=0.0074	 speedup=40.9653
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1373	 ParSpMatVec=0.0334	 speedup=4.1116
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1373	 ParSpMatVec=0.0124	 speedup=11.1168
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1373	 ParSpMatVec=0.0136	 speedup=10.0707
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1373	 ParSpMatVec=0.0119	 speedup=11.5861
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1373	 ParSpMatVec=0.0136	 speedup=10.0651

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0447	 ParSpMatVec=0.0209	 speedup=2.1437
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0447	 ParSpMatVec=0.0146	 speedup=3.0611
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0447	 ParSpMatVec=0.0144	 speedup=3.0993
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0447	 ParSpMatVec=0.0140	 speedup=3.2028
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0447	 ParSpMatVec=0.0164	 speedup=2.7245

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0758	 ParSpMatVec=0.0622	 speedup=1.2176
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0758	 ParSpMatVec=0.0022	 speedup=34.3610
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0758	 ParSpMatVec=0.0023	 speedup=32.3325
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0758	 ParSpMatVec=0.0014	 speedup=54.0904
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0758	 ParSpMatVec=0.0029	 speedup=26.4364

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0378	 speedup=0.1713
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0036	 speedup=1.7803
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0021	 speedup=3.1400
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0022	 speedup=2.8883
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0019	 speedup=3.3815

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0522	 ParSpMatVec=0.0370	 speedup=1.4100
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0522	 ParSpMatVec=0.0033	 speedup=16.0291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0522	 ParSpMatVec=0.0015	 speedup=35.2683
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0522	 ParSpMatVec=0.0026	 speedup=20.1364
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0522	 ParSpMatVec=0.0025	 speedup=20.6148

INFO: ParSpMatVec tests passed

>>> End of log
