>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1044.31640625 MB free)
Uptime: 20719.0 sec
Load Avg:  0.95361328125  1.0439453125  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1216513 s       7347 s     112177 s     479400 s         30 s
#2  3498 MHz     410104 s         24 s      54214 s    1563192 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1817	 ParSpMatVec=0.0250	 speedup=7.2748
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1817	 ParSpMatVec=0.0100	 speedup=18.1558
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1817	 ParSpMatVec=0.0117	 speedup=15.5816
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1817	 ParSpMatVec=0.0115	 speedup=15.8549
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1817	 ParSpMatVec=0.0101	 speedup=17.9906
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1672	 ParSpMatVec=0.0499	 speedup=3.3500
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1672	 ParSpMatVec=0.0132	 speedup=12.6847
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1672	 ParSpMatVec=0.0136	 speedup=12.2573
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1672	 ParSpMatVec=0.0124	 speedup=13.4619
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1672	 ParSpMatVec=0.0127	 speedup=13.1906

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0440	 ParSpMatVec=0.0225	 speedup=1.9538
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0440	 ParSpMatVec=0.0131	 speedup=3.3700
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0440	 ParSpMatVec=0.0160	 speedup=2.7434
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0440	 ParSpMatVec=0.0103	 speedup=4.2918
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0440	 ParSpMatVec=0.0129	 speedup=3.4243

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0736	 ParSpMatVec=0.0546	 speedup=1.3489
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0736	 ParSpMatVec=0.0024	 speedup=30.8484
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0736	 ParSpMatVec=0.0035	 speedup=20.8962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0736	 ParSpMatVec=0.0015	 speedup=48.4920
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0736	 ParSpMatVec=0.0024	 speedup=30.4525

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0686	 speedup=0.1134
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0040	 speedup=1.9219
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0043	 speedup=1.8077
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0017	 speedup=4.5251
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0018	 speedup=4.4300

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0717	 ParSpMatVec=0.0550	 speedup=1.3043
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0717	 ParSpMatVec=0.0038	 speedup=18.7064
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0717	 ParSpMatVec=0.0021	 speedup=34.8459
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0717	 ParSpMatVec=0.0037	 speedup=19.4974
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0717	 ParSpMatVec=0.0024	 speedup=30.2259

INFO: ParSpMatVec tests passed

>>> End of log
