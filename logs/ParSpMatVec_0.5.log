>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1019.39453125 MB free)
Uptime: 21101.0 sec
Load Avg:  1.0625  1.0869140625  1.06591796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1313118 s       6531 s     134550 s     395561 s         28 s
#2  3500 MHz     362254 s         91 s      56858 s    1647732 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2529	 ParSpMatVec=0.0286	 speedup=8.8449
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2529	 ParSpMatVec=0.0096	 speedup=26.3678
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2529	 ParSpMatVec=0.0118	 speedup=21.4280
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2529	 ParSpMatVec=0.0114	 speedup=22.2687
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2529	 ParSpMatVec=0.0068	 speedup=37.3963
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2363	 ParSpMatVec=0.0382	 speedup=6.1789
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2363	 ParSpMatVec=0.0137	 speedup=17.2946
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2363	 ParSpMatVec=0.0177	 speedup=13.3750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2363	 ParSpMatVec=0.0120	 speedup=19.6106
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2363	 ParSpMatVec=0.0152	 speedup=15.5249

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0577	 ParSpMatVec=0.0203	 speedup=2.8416
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0577	 ParSpMatVec=0.0142	 speedup=4.0628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0577	 ParSpMatVec=0.0145	 speedup=3.9782
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0577	 ParSpMatVec=0.0098	 speedup=5.8879
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0577	 ParSpMatVec=0.0097	 speedup=5.9383

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0444	 ParSpMatVec=0.0326	 speedup=1.3629
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0444	 ParSpMatVec=0.0019	 speedup=23.3901
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0444	 ParSpMatVec=0.0021	 speedup=21.1550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0444	 ParSpMatVec=0.0015	 speedup=28.7322
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0444	 ParSpMatVec=0.0016	 speedup=28.3685

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0055	 ParSpMatVec=0.0388	 speedup=0.1431
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0055	 ParSpMatVec=0.0041	 speedup=1.3387
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0055	 ParSpMatVec=0.0019	 speedup=2.9281
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0055	 ParSpMatVec=0.0026	 speedup=2.1514
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0055	 ParSpMatVec=0.0020	 speedup=2.7651

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0750	 ParSpMatVec=0.0512	 speedup=1.4641
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0750	 ParSpMatVec=0.0031	 speedup=24.5391
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0750	 ParSpMatVec=0.0019	 speedup=39.8409
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0750	 ParSpMatVec=0.0029	 speedup=26.0994
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0750	 ParSpMatVec=0.0026	 speedup=28.5685

INFO: ParSpMatVec tests passed

>>> End of log
