>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1034.54296875 MB free)
Uptime: 21099.0 sec
Load Avg:  1.00830078125  1.0673828125  1.06201171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1254204 s       3574 s     124140 s     481362 s         26 s
#2  3499 MHz     411131 s       3211 s      56164 s    1584399 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.25.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2358	 ParSpMatVec=0.0271	 speedup=8.7080
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2358	 ParSpMatVec=0.0092	 speedup=25.4961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2358	 ParSpMatVec=0.0134	 speedup=17.5586
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2358	 ParSpMatVec=0.0116	 speedup=20.3123
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2358	 ParSpMatVec=0.0126	 speedup=18.7039
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2369	 ParSpMatVec=0.0318	 speedup=7.4576
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2369	 ParSpMatVec=0.0134	 speedup=17.6388
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2369	 ParSpMatVec=0.0158	 speedup=14.9950
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2369	 ParSpMatVec=0.0129	 speedup=18.4212
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2369	 ParSpMatVec=0.0137	 speedup=17.2608

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0679	 ParSpMatVec=0.0324	 speedup=2.0925
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0679	 ParSpMatVec=0.0136	 speedup=5.0066
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0679	 ParSpMatVec=0.0148	 speedup=4.5874
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0679	 ParSpMatVec=0.0107	 speedup=6.3362
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0679	 ParSpMatVec=0.0142	 speedup=4.7825

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0784	 ParSpMatVec=0.0359	 speedup=2.1865
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0784	 ParSpMatVec=0.0024	 speedup=32.8501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0784	 ParSpMatVec=0.0017	 speedup=46.9412
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0784	 ParSpMatVec=0.0035	 speedup=22.6423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0784	 ParSpMatVec=0.0021	 speedup=37.4009

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0094	 ParSpMatVec=0.0679	 speedup=0.1380
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0094	 ParSpMatVec=0.0029	 speedup=3.1982
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0094	 ParSpMatVec=0.0013	 speedup=7.3295
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0094	 ParSpMatVec=0.0027	 speedup=3.5032
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0094	 ParSpMatVec=0.0024	 speedup=3.9784

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0579	 ParSpMatVec=0.0672	 speedup=0.8614
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0579	 ParSpMatVec=0.0057	 speedup=10.1569
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0579	 ParSpMatVec=0.0023	 speedup=25.6111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0579	 ParSpMatVec=0.0023	 speedup=24.8083
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0579	 ParSpMatVec=0.0027	 speedup=21.7986

INFO: ParSpMatVec tests passed

>>> End of log
