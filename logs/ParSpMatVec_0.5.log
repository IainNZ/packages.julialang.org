>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.78125 MB free)
Uptime: 21091.0 sec
Load Avg:  0.93505859375  1.005859375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1279536 s       6586 s     118121 s     417557 s         28 s
#2  3496 MHz     349798 s         88 s      57985 s    1656474 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3163	 ParSpMatVec=0.0170	 speedup=18.5997
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3163	 ParSpMatVec=0.0090	 speedup=35.1736
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3163	 ParSpMatVec=0.0130	 speedup=24.4237
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3163	 ParSpMatVec=0.0093	 speedup=33.8484
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3163	 ParSpMatVec=0.0085	 speedup=37.3955
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1471	 ParSpMatVec=0.0323	 speedup=4.5596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1471	 ParSpMatVec=0.0140	 speedup=10.5206
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1471	 ParSpMatVec=0.0135	 speedup=10.8941
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1471	 ParSpMatVec=0.0131	 speedup=11.2569
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1471	 ParSpMatVec=0.0143	 speedup=10.2942

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0679	 ParSpMatVec=0.0377	 speedup=1.7999
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0679	 ParSpMatVec=0.0121	 speedup=5.6258
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0679	 ParSpMatVec=0.0166	 speedup=4.0841
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0679	 ParSpMatVec=0.0136	 speedup=4.9776
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0679	 ParSpMatVec=0.0129	 speedup=5.2465

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0782	 ParSpMatVec=0.0537	 speedup=1.4573
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0782	 ParSpMatVec=0.0021	 speedup=37.2609
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0782	 ParSpMatVec=0.0029	 speedup=26.8991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0782	 ParSpMatVec=0.0020	 speedup=38.8021
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0782	 ParSpMatVec=0.0030	 speedup=26.1940

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0634	 speedup=0.1147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0039	 speedup=1.8762
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0025	 speedup=2.8607
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0019	 speedup=3.8300
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0022	 speedup=3.2647

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0771	 ParSpMatVec=0.0672	 speedup=1.1464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0771	 ParSpMatVec=0.0041	 speedup=18.7572
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0771	 ParSpMatVec=0.0027	 speedup=28.2688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0771	 ParSpMatVec=0.0027	 speedup=28.0392
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0771	 ParSpMatVec=0.0035	 speedup=22.2821

INFO: ParSpMatVec tests passed

>>> End of log
