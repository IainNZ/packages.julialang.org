>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1045.5625 MB free)
Uptime: 19787.0 sec
Load Avg:  0.92431640625  1.00048828125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1184248 s       2486 s     105077 s     438045 s         29 s
#2  3499 MHz     383155 s       3354 s      54608 s    1493346 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2927	 ParSpMatVec=0.0290	 speedup=10.1088
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2927	 ParSpMatVec=0.0092	 speedup=31.7583
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2927	 ParSpMatVec=0.0112	 speedup=26.0396
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2927	 ParSpMatVec=0.0113	 speedup=25.8398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2927	 ParSpMatVec=0.0091	 speedup=32.1426
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2361	 ParSpMatVec=0.0536	 speedup=4.4032
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2361	 ParSpMatVec=0.0130	 speedup=18.1629
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2361	 ParSpMatVec=0.0160	 speedup=14.8034
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2361	 ParSpMatVec=0.0134	 speedup=17.6335
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2361	 ParSpMatVec=0.0134	 speedup=17.5977

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0618	 ParSpMatVec=0.0337	 speedup=1.8332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0618	 ParSpMatVec=0.0124	 speedup=5.0072
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0618	 ParSpMatVec=0.0167	 speedup=3.7144
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0618	 ParSpMatVec=0.0124	 speedup=5.0013
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0618	 ParSpMatVec=0.0146	 speedup=4.2426

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0717	 ParSpMatVec=0.0549	 speedup=1.3068
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0717	 ParSpMatVec=0.0025	 speedup=29.1384
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0717	 ParSpMatVec=0.0051	 speedup=14.0183
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0717	 ParSpMatVec=0.0040	 speedup=17.9464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0717	 ParSpMatVec=0.0019	 speedup=38.6250

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0075	 ParSpMatVec=0.0442	 speedup=0.1704
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0075	 ParSpMatVec=0.0035	 speedup=2.1595
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0075	 ParSpMatVec=0.0040	 speedup=1.8791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0075	 ParSpMatVec=0.0028	 speedup=2.7267
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0075	 ParSpMatVec=0.0021	 speedup=3.6265

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0860	 ParSpMatVec=0.0670	 speedup=1.2850
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0860	 ParSpMatVec=0.0040	 speedup=21.3990
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0860	 ParSpMatVec=0.0025	 speedup=33.9601
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0860	 ParSpMatVec=0.0046	 speedup=18.8213
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0860	 ParSpMatVec=0.0024	 speedup=36.5103

INFO: ParSpMatVec tests passed

>>> End of log
