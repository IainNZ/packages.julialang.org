>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1054.40234375 MB free)
Uptime: 20604.0 sec
Load Avg:  0.943359375  1.01171875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1230190 s         57 s     135139 s     442713 s         36 s
#2  3500 MHz     364068 s       6444 s      58604 s    1586590 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.24.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1869	 ParSpMatVec=0.0304	 speedup=6.1420
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1869	 ParSpMatVec=0.0104	 speedup=18.0345
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1869	 ParSpMatVec=0.0128	 speedup=14.6363
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1869	 ParSpMatVec=0.0105	 speedup=17.8070
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1869	 ParSpMatVec=0.0107	 speedup=17.4490
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2532	 ParSpMatVec=0.0560	 speedup=4.5228
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2532	 ParSpMatVec=0.0127	 speedup=20.0033
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2532	 ParSpMatVec=0.0153	 speedup=16.5317
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2532	 ParSpMatVec=0.0177	 speedup=14.3097
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2532	 ParSpMatVec=0.0146	 speedup=17.3655

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0682	 ParSpMatVec=0.0356	 speedup=1.9139
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0682	 ParSpMatVec=0.0145	 speedup=4.6897
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0682	 ParSpMatVec=0.0152	 speedup=4.4739
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0682	 ParSpMatVec=0.0123	 speedup=5.5655
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0682	 ParSpMatVec=0.0137	 speedup=4.9899

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0739	 ParSpMatVec=0.0500	 speedup=1.4785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0739	 ParSpMatVec=0.0029	 speedup=25.8547
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0739	 ParSpMatVec=0.0044	 speedup=16.7580
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0739	 ParSpMatVec=0.0031	 speedup=23.8211
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0739	 ParSpMatVec=0.0032	 speedup=23.0148

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0489	 speedup=0.1621
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0039	 speedup=2.0390
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0039	 speedup=2.0382
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0027	 speedup=2.9291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0087	 speedup=0.9126

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0834	 ParSpMatVec=0.0722	 speedup=1.1561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0834	 ParSpMatVec=0.0043	 speedup=19.2471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0834	 ParSpMatVec=0.0041	 speedup=20.5109
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0834	 ParSpMatVec=0.0030	 speedup=27.4338
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0834	 ParSpMatVec=0.0822	 speedup=1.0144

INFO: ParSpMatVec tests passed

>>> End of log
