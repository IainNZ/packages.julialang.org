>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1054.15234375 MB free)
Uptime: 15305.0 sec
Load Avg:  1.0166015625  1.0595703125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     886920 s       6327 s      99919 s     366986 s         22 s
#2  3499 MHz     263720 s         44 s      48999 s    1179361 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1803	 ParSpMatVec=0.0261	 speedup=6.9140
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1803	 ParSpMatVec=0.0110	 speedup=16.4032
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1803	 ParSpMatVec=0.0132	 speedup=13.6861
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1803	 ParSpMatVec=0.0108	 speedup=16.6565
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1803	 ParSpMatVec=0.0135	 speedup=13.3430
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2204	 ParSpMatVec=0.0529	 speedup=4.1634
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2204	 ParSpMatVec=0.0127	 speedup=17.3190
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2204	 ParSpMatVec=0.0140	 speedup=15.7552
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2204	 ParSpMatVec=0.0138	 speedup=16.0126
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2204	 ParSpMatVec=0.0101	 speedup=21.8098

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0459	 ParSpMatVec=0.0205	 speedup=2.2330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0459	 ParSpMatVec=0.0125	 speedup=3.6761
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0459	 ParSpMatVec=0.0149	 speedup=3.0744
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0459	 ParSpMatVec=0.0125	 speedup=3.6810
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0459	 ParSpMatVec=0.0125	 speedup=3.6688

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0538	 ParSpMatVec=0.0448	 speedup=1.2027
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0538	 ParSpMatVec=0.0021	 speedup=26.0654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0538	 ParSpMatVec=0.0017	 speedup=31.0231
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0538	 ParSpMatVec=0.0016	 speedup=34.6211
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0538	 ParSpMatVec=0.0017	 speedup=31.8365

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0071	 ParSpMatVec=0.0637	 speedup=0.1107
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0071	 ParSpMatVec=0.0042	 speedup=1.6897
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0071	 ParSpMatVec=0.0026	 speedup=2.7204
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0071	 ParSpMatVec=0.0027	 speedup=2.6502
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0071	 ParSpMatVec=0.0023	 speedup=3.0563

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0518	 ParSpMatVec=0.0410	 speedup=1.2629
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0518	 ParSpMatVec=0.0038	 speedup=13.7275
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0518	 ParSpMatVec=0.0022	 speedup=23.7703
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0518	 ParSpMatVec=0.0026	 speedup=19.7907
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0518	 ParSpMatVec=0.0042	 speedup=12.1929

INFO: ParSpMatVec tests passed

>>> End of log
