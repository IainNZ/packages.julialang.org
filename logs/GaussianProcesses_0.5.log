>>> 'Pkg.add("GaussianProcesses")' log
INFO: Cloning cache of GaussianProcesses from https://github.com/STOR-i/GaussianProcesses.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing DiffBase v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GaussianProcesses v0.4.0
INFO: Installing LineSearches v0.1.5
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.6
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.7.1
INFO: Installing PositiveFactorizations v0.1.0
INFO: Installing ScikitLearnBase v0.3.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GaussianProcesses
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GaussianProcesses")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1729.0546875 MB free)
Uptime: 44916.0 sec
Load Avg:  1.05615234375  1.1611328125  1.1025390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2866814 s       6687 s     205847 s     904295 s         89 s
#2  3500 MHz    1016096 s         58 s     112241 s    3234254 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - GaussianProcesses             0.4.0
 - JSON                          0.14.0
13 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.37.0
 - DiffBase                      0.1.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - LineSearches                  0.1.5
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.6
 - Optim                         0.7.8
 - PDMats                        0.7.1
 - PositiveFactorizations        0.1.0
 - ScikitLearnBase               0.3.0
 - SpecialFunctions              0.2.0
INFO: Computing test dependencies for GaussianProcesses...
INFO: No packages to install, update or remove
INFO: Testing GaussianProcesses
Running test_utils.jl...
Running test_GP.jl...
Running test_optim.jl...
WARNING: DifferentiableFunction(args...) is deprecated, use OnceDifferentiable(args...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in DifferentiableFunction(::Function, ::Vararg{Function,N}) at ./deprecated.jl:50
 in #get_optim_target#20(::Bool, ::Bool, ::Bool, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/optimize.jl:74
 in (::GaussianProcesses.#kw##get_optim_target)(::Array{Any,1}, ::GaussianProcesses.#get_optim_target, ::GaussianProcesses.GP) at ./<missing>:0
 in #optimize!#19(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/optimize.jl:17
 in optimize!(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/optimize.jl:17
 in test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/GaussianProcesses/test/test_optim.jl:14
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
ERROR: LoadError: LoadError: MethodError: no method matching set_params!(::GaussianProcesses.GP, ::Float64; noise=true, mean=true, kern=true)
Closest candidates are:
  set_params!(::GaussianProcesses.GP, !Matched::Array{Float64,1}; noise, mean, kern) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/GP.jl:275
  set_params!{K<:GaussianProcesses.Kernel}(!Matched::GaussianProcesses.Masked{K<:GaussianProcesses.Kernel}, ::Any) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/kernels/masked_kernel.jl:55 got unsupported keyword arguments "noise", "mean", "kern"
 in #optimize!#19(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/optimize.jl:20
 in optimize!(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.5/GaussianProcesses/src/optimize.jl:17
 in test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/GaussianProcesses/test/test_optim.jl:14
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
while loading /home/vagrant/.julia/v0.5/GaussianProcesses/test/runtests.jl, in expression starting on line 12
==========================[ ERROR: GaussianProcesses ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/GaussianProcesses/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: GaussianProcesses had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
