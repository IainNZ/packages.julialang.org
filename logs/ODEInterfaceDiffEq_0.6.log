>>> 'Pkg.add("ODEInterfaceDiffEq")' log
INFO: Cloning cache of ODEInterfaceDiffEq from https://github.com/JuliaDiffEq/ODEInterfaceDiffEq.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DataStructures v0.8.3
INFO: Installing DiffEqBase v3.13.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.6
INFO: Installing ForwardDiff v0.7.5
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.2
INFO: Installing Missings v0.2.10
INFO: Installing NaNMath v0.3.1
INFO: Installing NamedTuples v4.0.2
INFO: Installing ODEInterface v0.3.0
INFO: Installing ODEInterfaceDiffEq v1.1.1
INFO: Installing RecipesBase v0.3.1
INFO: Installing RecursiveArrayTools v0.15.0
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.4
INFO: Installing Roots v0.6.0
INFO: Installing SHA v0.5.7
INFO: Installing SimpleTraits v0.6.0
INFO: Installing SpecialFunctions v0.6.0
INFO: Installing StaticArrays v0.7.2
INFO: Installing TableTraits v0.2.0
INFO: Installing URIParser v0.3.1
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building SpecialFunctions
INFO: Building ODEInterface


!!! bvpsol: only non commercial use !!!
Please note: bvpsol's license only covers non commercial use!
see using ODEInterface; help_bvpsol_license() for the complete
license text.
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ODEInterfaceDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ODEInterfaceDiffEq")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (995.078125 MB free)
Uptime: 89469.0 sec
Load Avg:  0.9970703125  1.0087890625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5575250 s        850 s     402727 s    1560201 s         23 s
#2  3500 MHz    1299087 s       3637 s     147812 s    7347836 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - ODEInterfaceDiffEq            1.1.1
29 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - CommonSubexpressions          0.1.0
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - DiffEqBase                    3.13.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.6
 - ForwardDiff                   0.7.5
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.2
 - Missings                      0.2.10
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.5
 - ODEInterface                  0.3.0
 - RecipesBase                   0.3.1
 - RecursiveArrayTools           0.15.0
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - Roots                         0.6.0
 - SHA                           0.5.7
 - SimpleTraits                  0.6.0
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for ODEInterfaceDiffEq...
INFO: Installing Conda v0.8.1
INFO: Installing DiffEqBiological v2.3.1
INFO: Installing DiffEqJump v4.5.0
INFO: Installing DiffEqOperators v1.3.0
INFO: Installing DiffEqProblemLibrary v2.4.3
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing PoissonRandom v0.0.1
INFO: Installing RandomNumbers v0.1.1
INFO: Installing SymEngine v0.4.0
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building SymEngine
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Testing ODEInterfaceDiffEq
Test Summary: |
Algorithms    | No tests
 31.348431 seconds (10.29 M allocations: 536.713 MiB, 1.04% gc time)
Test Summary: | Pass  Total
Saving        |    2      2
  0.519790 seconds (171.57 k allocations: 9.363 MiB)
Test Summary: | Pass  Total
Mass Matrix   |    4      4
  6.106821 seconds (2.68 M allocations: 138.202 MiB, 0.96% gc time)
Test Summary:  | Pass  Total
Jacobian Tests |    1      1
  0.651467 seconds (268.21 k allocations: 14.537 MiB, 1.63% gc time)
Test Summary:  | Pass  Total
Callback Tests |    2      2
  1.478348 seconds (649.98 k allocations: 33.660 MiB, 1.63% gc time)
INFO: ODEInterfaceDiffEq tests passed
INFO: Removing Conda v0.8.1
INFO: Removing DiffEqBiological v2.3.1
INFO: Removing DiffEqJump v4.5.0
INFO: Removing DiffEqOperators v1.3.0
INFO: Removing DiffEqProblemLibrary v2.4.3
INFO: Removing ParameterizedFunctions v3.0.0
INFO: Removing PoissonRandom v0.0.1
INFO: Removing RandomNumbers v0.1.1
INFO: Removing SymEngine v0.4.0
INFO: Removing VersionParsing v1.1.1

>>> End of log
