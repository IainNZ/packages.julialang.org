>>> 'Pkg.add("JuLIP")' log
INFO: Cloning cache of JuLIP from https://github.com/libAtoms/JuLIP.jl.git
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing Conda v0.7.1
INFO: Installing DataStructures v0.7.3
INFO: Installing Dierckx v0.3.0
INFO: Installing DiffResults v0.0.2
INFO: Installing DiffRules v0.0.2
INFO: Installing ForwardDiff v0.7.0
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing JuLIP v0.2.1
INFO: Installing LineSearches v3.2.3
INFO: Installing MacroTools v0.4.0
INFO: Installing NLSolversBase v3.1.0
INFO: Installing Optim v0.11.0
INFO: Installing Parameters v0.8.1
INFO: Installing PositiveFactorizations v0.1.0
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.15.0
INFO: Installing SpecialFunctions v0.3.6
INFO: Installing StaticArrays v0.6.6
INFO: Building Conda
INFO: Building Dierckx
make: Nothing to be done for `all'.
INFO: Building SpecialFunctions
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata ...............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.13.3          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Building JuLIP
Installing Dependencies of `JuLIP.jl`: `ase` and `matscipy`
`ase` was not found, trying to install via pip. If this fails,
please file an issue and try to install it manually, following
the instructions at `https://wiki.fysik.dtu.dk/ase/install.html`
I couldn't find `pip`. I will try to download and install it
automatically, but if this fails, please install
manually, then try to build `JuLIP` again.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1558k  100 1558k    0     0  3944k      0 --:--:-- --:--:-- --:--:-- 3954k
Requirement already up-to-date: pip in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages
Collecting ase
  Downloading ase-3.15.0-py2-none-any.whl (1.6MB)
Collecting scipy (from ase)
  Downloading scipy-1.0.0-cp27-cp27mu-manylinux1_x86_64.whl (46.7MB)
Requirement already up-to-date: numpy in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from ase)
Requirement already up-to-date: matplotlib in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from ase)
Collecting flask (from ase)
  Downloading Flask-0.12.2-py2.py3-none-any.whl (83kB)
Requirement already up-to-date: six>=1.10 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Requirement already up-to-date: python-dateutil>=2.0 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Requirement already up-to-date: backports.functools_lru_cache in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Requirement already up-to-date: subprocess32 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Requirement already up-to-date: pytz in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Requirement already up-to-date: cycler>=0.10 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/cycler-0.10.0-py2.7.egg (from matplotlib->ase)
Requirement already up-to-date: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from matplotlib->ase)
Collecting itsdangerous>=0.21 (from flask->ase)
  Downloading itsdangerous-0.24.tar.gz (46kB)
Collecting click>=2.0 (from flask->ase)
  Downloading click-6.7-py2.py3-none-any.whl (71kB)
Requirement already up-to-date: Jinja2>=2.4 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from flask->ase)
Collecting Werkzeug>=0.7 (from flask->ase)
  Downloading Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)
Requirement already up-to-date: MarkupSafe>=0.23 in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages (from Jinja2>=2.4->flask->ase)
Building wheels for collected packages: itsdangerous
  Running setup.py bdist_wheel for itsdangerous: started
  Running setup.py bdist_wheel for itsdangerous: finished with status 'done'
  Stored in directory: /home/vagrant/.cache/pip/wheels/fc/a8/66/24d655233c757e178d45dea2de22a04c6d92766abfb741129a
Successfully built itsdangerous
Installing collected packages: scipy, itsdangerous, click, Werkzeug, flask, ase
Successfully installed Werkzeug-0.14.1 ase-3.15.0 click-6.7 flask-0.12.2 itsdangerous-0.24 scipy-1.0.0
`matscipy` was not found, trying to install it. If this fails,
please file an issue and try to install it manually, following
the instructions at `https://github.com/libAtoms/matscipy`
I couldn't find `pip`. I will try to download and install it
automatically, but if this fails, please install
manually, then try to build `JuLIP` again.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1558k  100 1558k    0     0  11.4M      0 --:--:-- --:--:-- --:--:-- 11.4M
Requirement already up-to-date: pip in /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages
Collecting matscipy
  Downloading matscipy-0.1.4.tar.gz (117kB)
Building wheels for collected packages: matscipy
  Running setup.py bdist_wheel for matscipy: started
  Running setup.py bdist_wheel for matscipy: finished with status 'done'
  Stored in directory: /home/vagrant/.cache/pip/wheels/71/91/7e/96241f92e6a4f28abffe1c2e1214cf913e6a50bc9878f27412
Successfully built matscipy
Installing collected packages: matscipy
Successfully installed matscipy-0.1.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JuLIP
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JuLIP")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (802.44140625 MB free)
Uptime: 103360.0 sec
Load Avg:  0.91015625  0.955078125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3516 MHz    6767778 s        100 s     289599 s    1603581 s         61 s
#2  3516 MHz    1573832 s         62 s     155551 s    8408920 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - JuLIP                         0.2.1
36 additional packages:
 - BinDeps                       0.8.2
 - Cairo                         0.4.0
 - Calculus                      0.2.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.42.0
 - Conda                         0.7.1
 - DataStructures                0.7.3
 - Dierckx                       0.3.0
 - DiffResults                   0.0.2
 - DiffRules                     0.0.2
 - FixedPointNumbers             0.4.3
 - ForwardDiff                   0.7.0
 - FunctionWrappers              0.1.0
 - Graphics                      0.2.0
 - Gtk                           0.13.1
 - LineSearches                  3.2.3
 - MacroTools                    0.4.0
 - NLSolversBase                 3.1.0
 - NaNMath                       0.3.0
 - NodeJS                        0.1.0
 - Nullables                     0.0.2
 - Optim                         0.11.0
 - Parameters                    0.8.1
 - PositiveFactorizations        0.1.0
 - PyAMG                         0.2.1
 - PyCall                        1.15.0
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.1.0
 - SHA                           0.5.2
 - SpecialFunctions              0.3.6
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Testing JuLIP
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata ...............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pyamg: 3.3.2-py27_0                  conda-forge
    scipy: 0.19.1-py27_blas_openblas_202 conda-forge [blas_openblas]

scipy-0.19.1-p   0% |                              | ETA:  --:--:--   0.00  B/sscipy-0.19.1-p   1% |                               | ETA:  0:00:11   3.53 MB/sscipy-0.19.1-p   2% |                               | ETA:  0:00:07   5.29 MB/sscipy-0.19.1-p   3% |                               | ETA:  0:00:05   6.82 MB/sscipy-0.19.1-p   4% |#                              | ETA:  0:00:04   8.36 MB/sscipy-0.19.1-p   5% |#                              | ETA:  0:00:04   9.41 MB/sscipy-0.19.1-p   6% |#                              | ETA:  0:00:03  10.63 MB/sscipy-0.19.1-p   7% |##                             | ETA:  0:00:03  11.73 MB/sscipy-0.19.1-p   8% |##                             | ETA:  0:00:02  12.78 MB/sscipy-0.19.1-p   9% |##                             | ETA:  0:00:02  13.70 MB/sscipy-0.19.1-p  10% |###                            | ETA:  0:00:02  14.55 MB/sscipy-0.19.1-p  11% |###                            | ETA:  0:00:02  15.33 MB/sscipy-0.19.1-p  12% |###                            | ETA:  0:00:02  16.01 MB/sscipy-0.19.1-p  13% |####                           | ETA:  0:00:02  16.55 MB/sscipy-0.19.1-p  14% |####                           | ETA:  0:00:01  17.11 MB/sscipy-0.19.1-p  15% |####                           | ETA:  0:00:01  17.59 MB/sscipy-0.19.1-p  16% |#####                          | ETA:  0:00:01  18.07 MB/sscipy-0.19.1-p  17% |#####                          | ETA:  0:00:01  18.46 MB/sscipy-0.19.1-p  18% |#####                          | ETA:  0:00:01  18.83 MB/sscipy-0.19.1-p  19% |######                         | ETA:  0:00:01  19.22 MB/sscipy-0.19.1-p  20% |######                         | ETA:  0:00:01  19.55 MB/sscipy-0.19.1-p  21% |######                         | ETA:  0:00:01  19.86 MB/sscipy-0.19.1-p  22% |#######                        | ETA:  0:00:01  20.16 MB/sscipy-0.19.1-p  23% |#######                        | ETA:  0:00:01  20.40 MB/sscipy-0.19.1-p  24% |#######                        | ETA:  0:00:01  20.69 MB/sscipy-0.19.1-p  25% |#######                        | ETA:  0:00:01  20.95 MB/sscipy-0.19.1-p  26% |########                       | ETA:  0:00:01  21.21 MB/sscipy-0.19.1-p  27% |########                       | ETA:  0:00:01  21.43 MB/sscipy-0.19.1-p  28% |########                       | ETA:  0:00:01  21.65 MB/sscipy-0.19.1-p  29% |#########                      | ETA:  0:00:01  21.84 MB/sscipy-0.19.1-p  30% |#########                      | ETA:  0:00:01  21.84 MB/sscipy-0.19.1-p  31% |#########                      | ETA:  0:00:01  22.01 MB/sscipy-0.19.1-p  32% |##########                     | ETA:  0:00:01  22.18 MB/sscipy-0.19.1-p  33% |##########                     | ETA:  0:00:01  22.36 MB/sscipy-0.19.1-p  35% |##########                     | ETA:  0:00:01  22.53 MB/sscipy-0.19.1-p  36% |###########                    | ETA:  0:00:01  22.70 MB/sscipy-0.19.1-p  37% |###########                    | ETA:  0:00:01  22.83 MB/sscipy-0.19.1-p  38% |###########                    | ETA:  0:00:01  22.98 MB/sscipy-0.19.1-p  39% |############                   | ETA:  0:00:01  23.15 MB/sscipy-0.19.1-p  40% |############                   | ETA:  0:00:01  23.29 MB/sscipy-0.19.1-p  41% |############                   | ETA:  0:00:00  23.42 MB/sscipy-0.19.1-p  42% |#############                  | ETA:  0:00:00  23.52 MB/sscipy-0.19.1-p  43% |#############                  | ETA:  0:00:00  23.64 MB/sscipy-0.19.1-p  44% |#############                  | ETA:  0:00:00  23.76 MB/sscipy-0.19.1-p  45% |##############                 | ETA:  0:00:00  23.89 MB/sscipy-0.19.1-p  46% |##############                 | ETA:  0:00:00  23.99 MB/sscipy-0.19.1-p  47% |##############                 | ETA:  0:00:00  24.10 MB/sscipy-0.19.1-p  48% |###############                | ETA:  0:00:00  24.21 MB/sscipy-0.19.1-p  49% |###############                | ETA:  0:00:00  24.32 MB/sscipy-0.19.1-p  50% |###############                | ETA:  0:00:00  24.43 MB/sscipy-0.19.1-p  51% |###############                | ETA:  0:00:00  24.53 MB/sscipy-0.19.1-p  52% |################               | ETA:  0:00:00  24.60 MB/sscipy-0.19.1-p  53% |################               | ETA:  0:00:00  24.70 MB/sscipy-0.19.1-p  54% |################               | ETA:  0:00:00  24.81 MB/sscipy-0.19.1-p  55% |#################              | ETA:  0:00:00  24.92 MB/sscipy-0.19.1-p  56% |#################              | ETA:  0:00:00  24.99 MB/sscipy-0.19.1-p  57% |#################              | ETA:  0:00:00  25.08 MB/sscipy-0.19.1-p  58% |##################             | ETA:  0:00:00  25.16 MB/sscipy-0.19.1-p  59% |##################             | ETA:  0:00:00  25.25 MB/sscipy-0.19.1-p  60% |##################             | ETA:  0:00:00  25.33 MB/sscipy-0.19.1-p  61% |###################            | ETA:  0:00:00  25.40 MB/sscipy-0.19.1-p  62% |###################            | ETA:  0:00:00  25.48 MB/sscipy-0.19.1-p  63% |###################            | ETA:  0:00:00  25.56 MB/sscipy-0.19.1-p  64% |####################           | ETA:  0:00:00  25.64 MB/sscipy-0.19.1-p  65% |####################           | ETA:  0:00:00  25.72 MB/sscipy-0.19.1-p  66% |####################           | ETA:  0:00:00  25.78 MB/sscipy-0.19.1-p  67% |#####################          | ETA:  0:00:00  25.85 MB/sscipy-0.19.1-p  69% |#####################          | ETA:  0:00:00  25.92 MB/sscipy-0.19.1-p  70% |#####################          | ETA:  0:00:00  25.88 MB/sscipy-0.19.1-p  71% |######################         | ETA:  0:00:00  25.93 MB/sscipy-0.19.1-p  72% |######################         | ETA:  0:00:00  25.99 MB/sscipy-0.19.1-p  73% |######################         | ETA:  0:00:00  26.04 MB/sscipy-0.19.1-p  74% |######################         | ETA:  0:00:00  26.11 MB/sscipy-0.19.1-p  75% |#######################        | ETA:  0:00:00  26.14 MB/sscipy-0.19.1-p  76% |#######################        | ETA:  0:00:00  26.20 MB/sscipy-0.19.1-p  77% |#######################        | ETA:  0:00:00  26.27 MB/sscipy-0.19.1-p  78% |########################       | ETA:  0:00:00  26.33 MB/sscipy-0.19.1-p  79% |########################       | ETA:  0:00:00  26.38 MB/sscipy-0.19.1-p  80% |########################       | ETA:  0:00:00  26.43 MB/sscipy-0.19.1-p  81% |#########################      | ETA:  0:00:00  26.46 MB/sscipy-0.19.1-p  82% |#########################      | ETA:  0:00:00  26.51 MB/sscipy-0.19.1-p  83% |#########################      | ETA:  0:00:00  26.56 MB/sscipy-0.19.1-p  84% |##########################     | ETA:  0:00:00  26.60 MB/sscipy-0.19.1-p  85% |##########################     | ETA:  0:00:00  26.64 MB/sscipy-0.19.1-p  86% |##########################     | ETA:  0:00:00  26.67 MB/sscipy-0.19.1-p  87% |###########################    | ETA:  0:00:00  26.72 MB/sscipy-0.19.1-p  88% |###########################    | ETA:  0:00:00  26.75 MB/sscipy-0.19.1-p  89% |###########################    | ETA:  0:00:00  26.79 MB/sscipy-0.19.1-p  90% |############################   | ETA:  0:00:00  26.83 MB/sscipy-0.19.1-p  91% |############################   | ETA:  0:00:00  26.86 MB/sscipy-0.19.1-p  92% |############################   | ETA:  0:00:00  26.81 MB/sscipy-0.19.1-p  93% |#############################  | ETA:  0:00:00  26.86 MB/sscipy-0.19.1-p  94% |#############################  | ETA:  0:00:00  26.88 MB/sscipy-0.19.1-p  95% |#############################  | ETA:  0:00:00  26.97 MB/sscipy-0.19.1-p  96% |############################## | ETA:  0:00:00  27.13 MB/sscipy-0.19.1-p  97% |############################## | ETA:  0:00:00  27.27 MB/sscipy-0.19.1-p  98% |############################## | ETA:  0:00:00  27.42 MB/sscipy-0.19.1-p  99% |############################## | ETA:  0:00:00  27.56 MB/sscipy-0.19.1-p 100% |###############################| Time: 0:00:01  27.56 MB/s
pyamg-3.3.2-py   0% |                              | ETA:  --:--:--   0.00  B/spyamg-3.3.2-py   0% |                               | Time: 0:00:00   7.28 MB/spyamg-3.3.2-py   1% |                               | Time: 0:00:00   9.29 MB/spyamg-3.3.2-py   2% |                               | Time: 0:00:00  10.96 MB/spyamg-3.3.2-py   3% |#                              | Time: 0:00:00  13.46 MB/spyamg-3.3.2-py   4% |#                              | Time: 0:00:00  15.69 MB/spyamg-3.3.2-py   5% |#                              | Time: 0:00:00  17.58 MB/spyamg-3.3.2-py   6% |##                             | Time: 0:00:00  19.22 MB/spyamg-3.3.2-py   7% |##                             | Time: 0:00:00  20.73 MB/spyamg-3.3.2-py   8% |##                             | Time: 0:00:00  21.60 MB/spyamg-3.3.2-py   9% |##                             | Time: 0:00:00  22.84 MB/spyamg-3.3.2-py  10% |###                            | Time: 0:00:00  24.30 MB/spyamg-3.3.2-py  11% |###                            | Time: 0:00:00  25.39 MB/spyamg-3.3.2-py  12% |###                            | Time: 0:00:00  26.25 MB/spyamg-3.3.2-py  13% |####                           | Time: 0:00:00  27.01 MB/spyamg-3.3.2-py  14% |####                           | Time: 0:00:00  27.81 MB/spyamg-3.3.2-py  14% |####                           | Time: 0:00:00  28.62 MB/spyamg-3.3.2-py  15% |####                           | Time: 0:00:00  29.35 MB/spyamg-3.3.2-py  16% |#####                          | Time: 0:00:00  30.02 MB/spyamg-3.3.2-py  17% |#####                          | Time: 0:00:00  26.89 MB/spyamg-3.3.2-py  18% |#####                          | Time: 0:00:00  26.78 MB/spyamg-3.3.2-py  19% |######                         | Time: 0:00:00  27.37 MB/spyamg-3.3.2-py  20% |######                         | Time: 0:00:00  28.06 MB/spyamg-3.3.2-py  21% |######                         | Time: 0:00:00  27.51 MB/spyamg-3.3.2-py  22% |######                         | Time: 0:00:00  25.21 MB/spyamg-3.3.2-py  23% |#######                        | Time: 0:00:00  25.01 MB/spyamg-3.3.2-py  24% |#######                        | Time: 0:00:00  25.45 MB/spyamg-3.3.2-py  25% |#######                        | Time: 0:00:00  25.88 MB/spyamg-3.3.2-py  26% |########                       | Time: 0:00:00  26.24 MB/spyamg-3.3.2-py  27% |########                       | Time: 0:00:00  26.60 MB/spyamg-3.3.2-py  28% |########                       | Time: 0:00:00  26.92 MB/spyamg-3.3.2-py  28% |########                       | Time: 0:00:00  27.10 MB/spyamg-3.3.2-py  29% |#########                      | Time: 0:00:00  27.44 MB/spyamg-3.3.2-py  30% |#########                      | Time: 0:00:00  27.84 MB/spyamg-3.3.2-py  31% |#########                      | Time: 0:00:00  28.14 MB/spyamg-3.3.2-py  32% |##########                     | Time: 0:00:00  28.44 MB/spyamg-3.3.2-py  33% |##########                     | Time: 0:00:00  28.71 MB/spyamg-3.3.2-py  34% |##########                     | Time: 0:00:00  28.99 MB/spyamg-3.3.2-py  35% |###########                    | Time: 0:00:00  29.25 MB/spyamg-3.3.2-py  36% |###########                    | Time: 0:00:00  29.53 MB/spyamg-3.3.2-py  37% |###########                    | Time: 0:00:00  29.84 MB/spyamg-3.3.2-py  38% |###########                    | Time: 0:00:00  29.98 MB/spyamg-3.3.2-py  39% |############                   | Time: 0:00:00  28.60 MB/spyamg-3.3.2-py  40% |############                   | Time: 0:00:00  28.40 MB/spyamg-3.3.2-py  41% |############                   | Time: 0:00:00  28.67 MB/spyamg-3.3.2-py  42% |#############                  | Time: 0:00:00  28.75 MB/spyamg-3.3.2-py  42% |#############                  | Time: 0:00:00  28.14 MB/spyamg-3.3.2-py  43% |#############                  | Time: 0:00:00  26.70 MB/spyamg-3.3.2-py  44% |#############                  | Time: 0:00:00  26.25 MB/spyamg-3.3.2-py  45% |##############                 | Time: 0:00:00  26.43 MB/spyamg-3.3.2-py  46% |##############                 | Time: 0:00:00  26.65 MB/spyamg-3.3.2-py  47% |##############                 | Time: 0:00:00  26.63 MB/spyamg-3.3.2-py  48% |###############                | Time: 0:00:00  26.70 MB/spyamg-3.3.2-py  49% |###############                | Time: 0:00:00  26.92 MB/spyamg-3.3.2-py  50% |###############                | Time: 0:00:00  27.17 MB/spyamg-3.3.2-py  51% |###############                | Time: 0:00:00  27.39 MB/spyamg-3.3.2-py  52% |################               | Time: 0:00:00  27.61 MB/spyamg-3.3.2-py  53% |################               | Time: 0:00:00  27.81 MB/spyamg-3.3.2-py  54% |################               | Time: 0:00:00  28.03 MB/spyamg-3.3.2-py  55% |#################              | Time: 0:00:00  28.23 MB/spyamg-3.3.2-py  56% |#################              | Time: 0:00:00  28.39 MB/spyamg-3.3.2-py  57% |#################              | Time: 0:00:00  28.50 MB/spyamg-3.3.2-py  57% |#################              | Time: 0:00:00  28.31 MB/spyamg-3.3.2-py  58% |##################             | Time: 0:00:00  27.61 MB/spyamg-3.3.2-py  59% |##################             | Time: 0:00:00  27.42 MB/spyamg-3.3.2-py  60% |##################             | Time: 0:00:00  27.17 MB/spyamg-3.3.2-py  61% |###################            | Time: 0:00:00  26.83 MB/spyamg-3.3.2-py  62% |###################            | Time: 0:00:00  26.90 MB/spyamg-3.3.2-py  63% |###################            | Time: 0:00:00  27.07 MB/spyamg-3.3.2-py  64% |###################            | Time: 0:00:00  27.20 MB/spyamg-3.3.2-py  65% |####################           | Time: 0:00:00  27.34 MB/spyamg-3.3.2-py  66% |####################           | Time: 0:00:00  27.48 MB/spyamg-3.3.2-py  67% |####################           | Time: 0:00:00  27.62 MB/spyamg-3.3.2-py  68% |#####################          | Time: 0:00:00  27.68 MB/spyamg-3.3.2-py  69% |#####################          | Time: 0:00:00  27.92 MB/spyamg-3.3.2-py  70% |#####################          | Time: 0:00:00  28.06 MB/spyamg-3.3.2-py  71% |######################         | Time: 0:00:00  28.20 MB/spyamg-3.3.2-py  71% |######################         | Time: 0:00:00  28.33 MB/spyamg-3.3.2-py  72% |######################         | Time: 0:00:00  28.47 MB/spyamg-3.3.2-py  73% |######################         | Time: 0:00:00  28.60 MB/spyamg-3.3.2-py  74% |#######################        | Time: 0:00:00  28.72 MB/spyamg-3.3.2-py  75% |#######################        | Time: 0:00:00  28.81 MB/spyamg-3.3.2-py  76% |#######################        | Time: 0:00:00  28.95 MB/spyamg-3.3.2-py  77% |########################       | Time: 0:00:00  29.06 MB/spyamg-3.3.2-py  78% |########################       | Time: 0:00:00  29.19 MB/spyamg-3.3.2-py  79% |########################       | Time: 0:00:00  29.36 MB/spyamg-3.3.2-py  80% |########################       | Time: 0:00:00  29.46 MB/spyamg-3.3.2-py  81% |#########################      | Time: 0:00:00  29.59 MB/spyamg-3.3.2-py  82% |#########################      | Time: 0:00:00  29.69 MB/spyamg-3.3.2-py  83% |#########################      | Time: 0:00:00  29.82 MB/spyamg-3.3.2-py  84% |##########################     | Time: 0:00:00  29.93 MB/spyamg-3.3.2-py  85% |##########################     | Time: 0:00:00  30.05 MB/spyamg-3.3.2-py  85% |##########################     | Time: 0:00:00  30.18 MB/spyamg-3.3.2-py  86% |##########################     | Time: 0:00:00  30.28 MB/spyamg-3.3.2-py  87% |###########################    | Time: 0:00:00  30.36 MB/spyamg-3.3.2-py  88% |###########################    | Time: 0:00:00  30.48 MB/spyamg-3.3.2-py  89% |###########################    | Time: 0:00:00  30.57 MB/spyamg-3.3.2-py  90% |############################   | Time: 0:00:00  30.66 MB/spyamg-3.3.2-py  91% |############################   | Time: 0:00:00  30.81 MB/spyamg-3.3.2-py  92% |############################   | Time: 0:00:00  30.91 MB/spyamg-3.3.2-py  93% |############################   | Time: 0:00:00  31.01 MB/spyamg-3.3.2-py  94% |#############################  | Time: 0:00:00  31.09 MB/spyamg-3.3.2-py  95% |#############################  | Time: 0:00:00  31.18 MB/spyamg-3.3.2-py  96% |#############################  | Time: 0:00:00  31.11 MB/spyamg-3.3.2-py  97% |############################## | Time: 0:00:00  31.06 MB/spyamg-3.3.2-py  98% |############################## | Time: 0:00:00  31.14 MB/spyamg-3.3.2-py  99% |############################## | Time: 0:00:00  31.24 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00  31.35 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00  31.18 MB/s
Loading some interatomic potentials . . . . done.
â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡
  Starting JuLIP Tests
â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡â‰¡
=======================
Testset Miscellaneous
=======================
test matrix <-> vec conversions
check the positions-as-ref thing (and the pyref)
test set_positions!
test set_momenta!
test set_dofs!, etc
testing periodic notion of distance
=======================
Testset ASE
=======================
-------------------
 Testing JuLIP.ASE
-------------------
Check that the cubic unit cell for Al is reproduced correctly
Check neighbourlist without periodicity
   TODO: implement test with periodicity as well?
   ... assemble neighbour list ...
   ... check the bond-iterator ... 
   ... check the site iterator ... 
Checking `***_data`, `***_array`, `***_info`, `***_transient`
Checking momenta and velocites
Checking chemical_symbols
testing static_neighbourlist
testing read and write
=======================
Testset Analytic Potential
=======================
typeof(morse) = JuLIP.Potentials.AnalyticFunction{##3#6,##4#7,##5#8}
1M evaluations of Analytic Potential
  0.026419 seconds (85 allocations: 6.639 KiB)
1M evaluations of old Potential
  0.050320 seconds (5 allocations: 176 bytes)
1M âˆ‡ evaluations of Analytic Potential
  0.044436 seconds (5 allocations: 176 bytes)
1M âˆ‡ evaluations of old Potential
  0.049803 seconds (5 allocations: 176 bytes)
=======================
Testset Potentials
=======================
WARNING: using Potentials.morse in module Main conflicts with an existing identifier.
============================================
  Testing pair potential implementations 
============================================
--------------------------------
JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}(JuLIP.Potentials.#18, JuLIP.Potentials.#19, JuLIP.Potentials.#20)
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##26#29{Float64,Float64,Float64},JuLIP.Potentials.##27#30{Float64,Float64,Float64},JuLIP.Potentials.##28#31{Float64,Float64,Float64}}(JuLIP.Potentials.#26, JuLIP.Potentials.#27, JuLIP.Potentials.#28)
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.19e+00  
 1.0e-03 | 1.23e-01  
 1.0e-04 | 1.23e-02  
 1.0e-05 | 1.23e-03  
 1.0e-06 | 1.23e-04  
 1.0e-07 | 1.23e-05  
 1.0e-08 | 1.13e-06  
 1.0e-09 | 3.33e-07  
 1.0e-10 | 4.64e-06  
 1.0e-11 | 3.61e-05  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.SWCutoff(1.0, 3.0, 1.0) * JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}(JuLIP.Potentials.#18, JuLIP.Potentials.#19, JuLIP.Potentials.#20)
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 7.17e-04  
 1.0e-03 | 8.77e-05  
 1.0e-04 | 8.96e-06  
 1.0e-05 | 8.98e-07  
 1.0e-06 | 8.98e-08  
 1.0e-07 | 8.98e-09  
 1.0e-08 | 8.85e-10  
 1.0e-09 | 1.34e-10  
 1.0e-10 | 4.96e-10  
 1.0e-11 | 6.56e-10  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.SplineCutoff(2.0, 3.0) * JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}(JuLIP.Potentials.#18, JuLIP.Potentials.#19, JuLIP.Potentials.#20)
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.Shift{2,JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}}(Val{2}(), JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}(JuLIP.Potentials.#18, JuLIP.Potentials.#19, JuLIP.Potentials.#20), 2.0, -0.0615234375, 0.181640625, -0.6181640625)
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.84e-05  
 1.0e-09 | 2.90e-05  
 1.0e-10 | 4.62e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
testing shift-cutoffs: HS, V0, V1, V2
--------------------------------------------------
 EMT Consistency test: 
--------------------------------------------------
 E_ase - E_jl = -2.3865342130946487e-5
 |Frc_ase - Frc_jl = 6.713274424256893e-5
--------------------------------------------------
Potentials: Test Failed
  Expression: abs(energy(at) - energy(at2)) < 1.0e-10
   Evaluated: 2.3865342130946487e-5 < 1.0e-10
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:576
 [2] include(::String) at ./sysimg.jl:14
 [3] macro expansion at /home/vagrant/.julia/v0.6/JuLIP/test/runtests.jl:51 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/JuLIP/test/runtests.jl:51 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
--------------------------------------------------
 PairSitePotential Consistency test: 
--------------------------------------------------
 E_pp - E_psp = -1.5631940186722204e-13
 |Frc_pp - Frc_psp = 2.4872217172271682e-14
--------------------------------------------------
============================================
  Testing calculator implementations 
============================================
--------------------------------
JuLIP.Potentials.ProdPot{JuLIP.Potentials.SplineCutoff,JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}}
length(at) = 72
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.01e+00  
 1.0e-03 | 1.01e-01  
 1.0e-04 | 1.01e-02  
 1.0e-05 | 1.01e-03  
 1.0e-06 | 1.01e-04  
 1.0e-07 | 1.05e-05  
 1.0e-08 | 6.37e-06  
 1.0e-09 | 4.84e-05  
 1.0e-10 | 7.40e-04  
 1.0e-11 | 5.96e-03  
---------|----------- 
passed
--------------------------------
JuLIP.ASE.ASECalculator
length(at) = 32
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.58e-02  
 1.0e-03 | 4.57e-03  
 1.0e-04 | 4.57e-04  
 1.0e-05 | 4.57e-05  
 1.0e-06 | 4.42e-06  
 1.0e-07 | 3.06e-06  
 1.0e-08 | 3.20e-05  
 1.0e-09 | 2.13e-04  
 1.0e-10 | 2.57e-03  
 1.0e-11 | 2.37e-02  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.EMTCalculator
length(at) = 32
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.50e-02  
 1.0e-03 | 4.49e-03  
 1.0e-04 | 4.49e-04  
 1.0e-05 | 4.49e-05  
 1.0e-06 | 4.54e-06  
 1.0e-07 | 4.77e-06  
 1.0e-08 | 3.25e-05  
 1.0e-09 | 3.11e-04  
 1.0e-10 | 2.79e-03  
 1.0e-11 | 3.17e-02  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.StillingerWeber{JuLIP.Potentials.Shift{-1,JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##63#69{Float64,Float64,Float64,Float64,Int64,Float64},JuLIP.Potentials.##64#70{Float64,Float64,Float64,Float64,Int64,Float64},JuLIP.Potentials.##65#71{Float64,Float64,Float64,Float64,Int64,Float64}}},JuLIP.Potentials.Shift{-1,JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##66#72{Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.##67#73{Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.##68#74{Float64,Float64,Float64,Float64,Float64}}}}
length(at) = 64
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 8.92e-02  
 1.0e-03 | 8.92e-03  
 1.0e-04 | 8.92e-04  
 1.0e-05 | 8.92e-05  
 1.0e-06 | 8.98e-06  
 1.0e-07 | 2.41e-06  
 1.0e-08 | 1.71e-05  
 1.0e-09 | 1.44e-04  
 1.0e-10 | 1.44e-03  
 1.0e-11 | 1.20e-02  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.PairSitePotential{JuLIP.Potentials.ProdPot{JuLIP.Potentials.SplineCutoff,JuLIP.Potentials.AnalyticFunction{JuLIP.Potentials.##18#21{Float64,Float64},JuLIP.Potentials.##19#22{Float64,Float64},JuLIP.Potentials.##20#23{Float64,Float64}}}}
length(at) = 32
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 9.96e-01  
 1.0e-03 | 9.96e-02  
 1.0e-04 | 9.96e-03  
 1.0e-05 | 9.96e-04  
 1.0e-06 | 9.96e-05  
 1.0e-07 | 1.01e-05  
 1.0e-08 | 2.41e-06  
 1.0e-09 | 2.34e-05  
 1.0e-10 | 1.95e-04  
 1.0e-11 | 2.08e-03  
---------|----------- 
passed
--------------------------------
JuLIP.Potentials.EAM{JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.SplinePairPotential,Void}
length(at) = 4
--------------------------------
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.77e-03  
 1.0e-03 | 1.76e-04  
 1.0e-04 | 1.76e-05  
 1.0e-05 | 1.76e-06  
 1.0e-06 | 1.76e-07  
 1.0e-07 | 1.91e-08  
 1.0e-08 | 1.19e-08  
 1.0e-09 | 2.02e-07  
 1.0e-10 | 9.77e-07  
 1.0e-11 | 1.47e-05  
---------|----------- 
passed
INFO: JuLIP tests passed

>>> End of log
