>>> 'Pkg.add("VehicleModels")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing AbstractFFTs v0.3.1
[ Info: Installing AxisAlgorithms v0.2.0
[ Info: Installing AxisArrays v0.2.1
[ Info: Installing BinaryProvider v0.2.7
[ Info: Installing CSV v0.2.3
[ Info: Installing Calculus v0.2.2
[ Info: Installing CatIndices v0.1.0
[ Info: Installing CategoricalArrays v0.3.6
[ Info: Installing CodecZlib v0.4.3
[ Info: Installing ColorVectorSpace v0.5.2
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing ComputationalResources v0.2.0
[ Info: Installing CoordinateTransformations v0.4.1
[ Info: Installing CustomUnitRanges v0.1.0
[ Info: Installing DataFrames v0.11.5
[ Info: Installing DataStreams v0.3.4
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffEqBase v3.8.0
[ Info: Installing DiffEqDiffTools v0.4.0
[ Info: Installing DiffEqOperators v1.2.0
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing Distances v0.6.0
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing Expokit v0.0.1
[ Info: Installing FFTViews v0.1.0
[ Info: Installing FFTW v0.2.0
[ Info: Installing FastGaussQuadrature v0.3.0
[ Info: Installing FileIO v0.7.0
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing GenericSVD v0.1.0
[ Info: Installing IdentityRanges v0.1.0
[ Info: Installing ImageAxes v0.4.0
[ Info: Installing ImageCore v0.5.0
[ Info: Installing ImageDistances v0.0.2
[ Info: Installing ImageFiltering v0.3.0
[ Info: Installing ImageMetadata v0.4.0
[ Info: Installing ImageMorphology v0.0.2
[ Info: Installing ImageTransformations v0.4.1
[ Info: Installing Images v0.13.0
[ Info: Installing IndirectArrays v0.4.1
[ Info: Installing Interpolations v0.7.3
[ Info: Installing IntervalSets v0.2.0
[ Info: Installing Ipopt v0.3.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing IteratorInterfaceExtensions v0.0.2
[ Info: Installing JuMP v0.18.0
[ Info: Installing Juno v0.4.0
[ Info: Installing KNITRO v0.3.1
[ Info: Installing LineSearches v3.2.5
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MappedArrays v0.0.7
[ Info: Installing MathProgBase v0.7.0
[ Info: Installing Media v0.3.0
[ Info: Installing Missings v0.2.8
[ Info: Installing MuladdMacro v0.0.2
[ Info: Installing NLOptControl v0.1.5
[ Info: Installing NLSolversBase v4.3.0
[ Info: Installing NLsolve v1.0.1
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing OffsetArrays v0.5.0
[ Info: Installing OrdinaryDiffEq v3.7.0
[ Info: Installing PaddedViews v0.3.0
[ Info: Installing Parameters v0.8.1
[ Info: Installing ProgressMeter v0.5.5
[ Info: Installing RangeArrays v0.2.0
[ Info: Installing Ranges v0.0.1
[ Info: Installing Ratios v0.2.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing ReverseDiffSparse v0.8.1
[ Info: Installing Roots v0.5.0
[ Info: Installing Rotations v0.6.1
[ Info: Installing SIUnits v0.1.0
[ Info: Installing ShowItLikeYouBuildIt v0.2.0
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing StatsBase v0.20.1
[ Info: Installing TableTraits v0.2.0
[ Info: Installing TexExtensions v0.1.0
[ Info: Installing TiledIteration v0.1.0
[ Info: Installing TranscodingStreams v0.5.2
[ Info: Installing VehicleModels v0.1.3
[ Info: Installing WeakRefStrings v0.4.3
[ Info: Installing WoodburyMatrices v0.2.2
[ Info: Removing Cairo v0.5.1
[ Info: Removing Gtk v0.13.1
[ Info: Removing NodeJS v0.4.0
[ Info: Removing Rsvg v0.2.0
[ Info: Building CodecZlib
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:387
└ @ BinaryProvider PlatformNames.jl:387
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/CodecZlib/deps/build.jl:98
[ Info: Building SpecialFunctions
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building FFTW
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/FFTW/deps/build_fftw.jl:113
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Building Ipopt
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Ipopt/deps/build.jl:13
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of VehicleModels
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("VehicleModels")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4737
Commit c4c93ea692 (2018-04-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3502 MHz    4791277 s       2750 s     355460 s    1500537 s         88 s
       #2  3502 MHz    1230706 s       4578 s     128140 s    6216823 s          2 s
       
  Memory: 2.939197540283203 GB (759.08203125 MB free)
  Uptime: 77323.0 sec
  Load Avg:  0.998046875  0.978515625  0.95751953125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - VehicleModels                 0.1.3
103 additional packages:
 - AbstractFFTs                  0.3.1
 - AxisAlgorithms                0.2.0
 - AxisArrays                    0.2.1
 - BinDeps                       0.8.7
 - BinaryProvider                0.2.7
 - CSV                           0.2.3
 - Calculus                      0.2.2
 - CatIndices                    0.1.0
 - CategoricalArrays             0.3.6
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - ColorVectorSpace              0.5.2
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.63.0
 - ComputationalResources        0.2.0
 - CoordinateTransformations     0.4.1
 - CustomUnitRanges              0.1.0
 - DataFrames                    0.11.5
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    3.8.0
 - DiffEqDiffTools               0.4.0
 - DiffEqOperators               1.2.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - Distances                     0.6.0
 - DualNumbers                   0.3.0
 - Expokit                       0.0.1
 - FFTViews                      0.1.0
 - FFTW                          0.2.0
 - FastGaussQuadrature           0.3.0
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - FunctionWrappers              0.1.0
 - GenericSVD                    0.1.0
 - Graphics                      0.2.0
 - IdentityRanges                0.1.0
 - ImageAxes                     0.4.0
 - ImageCore                     0.5.0
 - ImageDistances                0.0.2
 - ImageFiltering                0.3.0
 - ImageMetadata                 0.4.0
 - ImageMorphology               0.0.2
 - ImageTransformations          0.4.1
 - Images                        0.13.0
 - IndirectArrays                0.4.1
 - Interpolations                0.7.3
 - IntervalSets                  0.2.0
 - Ipopt                         0.3.0
 - IterTools                     0.2.1
 - IteratorInterfaceExtensions   0.0.2
 - JuMP                          0.18.0
 - Juno                          0.4.0
 - KNITRO                        0.3.1
 - LaTeXStrings                  0.3.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - MappedArrays                  0.0.7
 - MathProgBase                  0.7.0
 - Media                         0.3.0
 - Missings                      0.2.8
 - MuladdMacro                   0.0.2
 - NLOptControl                  0.1.5
 - NLSolversBase                 4.3.0
 - NLsolve                       1.0.1
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - OffsetArrays                  0.5.0
 - OrdinaryDiffEq                3.7.0
 - PaddedViews                   0.3.0
 - Parameters                    0.8.1
 - ProgressMeter                 0.5.5
 - RangeArrays                   0.2.0
 - Ranges                        0.0.1
 - Ratios                        0.2.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - ReverseDiffSparse             0.8.1
 - Roots                         0.5.0
 - Rotations                     0.6.1
 - SHA                           0.5.6
 - SIUnits                       0.1.0
 - ShowItLikeYouBuildIt          0.2.0
 - SimpleTraits                  0.7.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - TableTraits                   0.2.0
 - TexExtensions                 0.1.0
 - TiledIteration                0.1.0
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - WeakRefStrings                0.4.3
 - WoodburyMatrices              0.2.2
 - tmpvbu5JM                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing VehicleModels
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/VehicleModels/test/runtests.jl:10.
│ Use `mutable struct` instead.
└ @ nothing runtests.jl:10
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:63.
│ Use `mutable struct` instead.
└ @ nothing JuMP.jl:63
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:140.
│ Use `mutable struct` instead.
└ @ nothing JuMP.jl:140
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:337.
│ Use `struct` instead.
└ @ nothing JuMP.jl:337
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:487.
│ Use `mutable struct` instead.
└ @ nothing JuMP.jl:487
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:535.
│ Use `struct` instead.
└ @ nothing JuMP.jl:535
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:542.
│ Use `mutable struct` instead.
└ @ nothing JuMP.jl:542
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:568.
│ Use `struct` instead.
└ @ nothing JuMP.jl:568
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:876.
│ Use `struct` instead.
└ @ nothing JuMP.jl:876
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:881.
│ Use `struct` instead.
└ @ nothing JuMP.jl:881
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding Operators.!== into JuMP.
WARNING: importing deprecated binding Operators.<: into JuMP.
WARNING: importing deprecated binding Operators.∛ into JuMP.
WARNING: importing deprecated binding Operators.⊆ into JuMP.
WARNING: importing deprecated binding Operators.|> into JuMP.
WARNING: importing deprecated binding Operators.<< into JuMP.
WARNING: importing deprecated binding Operators.xor into JuMP.
WARNING: importing deprecated binding Operators./ into JuMP.
WARNING: importing deprecated binding Operators.< into JuMP.
WARNING: importing deprecated binding Operators.∈ into JuMP.
WARNING: importing deprecated binding Operators.& into JuMP.
WARNING: importing deprecated binding Operators.√ into JuMP.
WARNING: importing deprecated binding Operators.^ into JuMP.
WARNING: importing deprecated binding Operators.⊈ into JuMP.
WARNING: importing deprecated binding Operators.∉ into JuMP.
WARNING: importing deprecated binding Operators.// into JuMP.
WARNING: importing deprecated binding Operators.=== into JuMP.
WARNING: importing deprecated binding Operators.== into JuMP.
WARNING: importing deprecated binding Operators.∌ into JuMP.
WARNING: importing deprecated binding Operators.+ into JuMP.
WARNING: importing deprecated binding Operators.>= into JuMP.
WARNING: importing deprecated binding Operators.!= into JuMP.
WARNING: importing deprecated binding Operators.>> into JuMP.
WARNING: importing deprecated binding Operators.⊊ into JuMP.
WARNING: importing deprecated binding Operators.>: into JuMP.
WARNING: importing deprecated binding Operators.! into JuMP.
WARNING: importing deprecated binding Operators.∘ into JuMP.
WARNING: importing deprecated binding Operators.⊻ into JuMP.
WARNING: importing deprecated binding Operators.∪ into JuMP.
WARNING: importing deprecated binding Operators.≥ into JuMP.
WARNING: importing deprecated binding Operators.* into JuMP.
WARNING: importing deprecated binding Operators.colon into JuMP.
WARNING: importing deprecated binding Operators.> into JuMP.
WARNING: importing deprecated binding Operators.∋ into JuMP.
WARNING: importing deprecated binding Operators.transpose into JuMP.
WARNING: importing deprecated binding Operators.>>> into JuMP.
WARNING: importing deprecated binding Operators.setindex! into JuMP.
WARNING: importing deprecated binding Operators.÷ into JuMP.
WARNING: importing deprecated binding Operators.getindex into JuMP.
WARNING: importing deprecated binding Operators.\ into JuMP.
WARNING: importing deprecated binding Operators.≠ into JuMP.
WARNING: importing deprecated binding Operators.% into JuMP.
WARNING: importing deprecated binding Operators.≤ into JuMP.
WARNING: importing deprecated binding Operators.∩ into JuMP.
WARNING: importing deprecated binding Operators.hvcat into JuMP.
WARNING: importing deprecated binding Operators.<= into JuMP.
WARNING: importing deprecated binding Operators.~ into JuMP.
WARNING: importing deprecated binding Operators.hcat into JuMP.
WARNING: importing deprecated binding Operators.adjoint into JuMP.
WARNING: importing deprecated binding Operators.vcat into JuMP.
WARNING: importing deprecated binding Operators.| into JuMP.
WARNING: importing deprecated binding Operators.- into JuMP.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:13.
│ Use `mutable struct` instead.
└ @ nothing JuMPContainer.jl:13
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:18.
│ Use `mutable struct` instead.
└ @ nothing JuMPContainer.jl:18
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:38.
│ Use `mutable struct` instead.
└ @ nothing JuMPContainer.jl:38
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:202.
│ Use `mutable struct` instead.
└ @ nothing JuMPContainer.jl:202
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:210.
│ Use `mutable struct` instead.
└ @ nothing JuMPContainer.jl:210
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/JuMPArray.jl:6.
│ Use `struct` instead.
└ @ nothing JuMPArray.jl:6
┌ Warning: Deprecated syntax `parametric method syntax JuMPArray{T, N}(innerArray::Array{T, N}, indexsets::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPArray.jl:14.
│ Use `JuMPArray(innerArray::Array{T, N}, indexsets::NTuple{N, Any}) where {T, N}` instead.
└ @ nothing JuMPArray.jl:14
┌ Warning: Deprecated syntax `parametric method syntax Base.getindex{T, N, NT}(d::JuMPArray{T, N, NT}, idx...)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPArray.jl:40.
│ Use `Base.getindex(d::JuMPArray{T, N, NT}, idx...) where {T, N, NT}` instead.
└ @ nothing JuMPArray.jl:40
┌ Warning: Deprecated syntax `parametric method syntax Base.setindex!{T, N, NT}(d::JuMPArray{T, N, NT}, v, idx...)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPArray.jl:47.
│ Use `Base.setindex!(d::JuMPArray{T, N, NT}, v, idx...) where {T, N, NT}` instead.
└ @ nothing JuMPArray.jl:47
┌ Warning: Deprecated syntax `parametric method syntax (::Type{JuMPDict{T, N}}){T, N}()` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:22.
│ Use `(::Type{JuMPDict{T, N}})() where {T, N}` instead.
└ @ nothing JuMPContainer.jl:22
┌ Warning: Deprecated syntax `parametric method syntax JuMPDict{T, N}(d::Dict{NTuple{N, Any}, T})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:26.
│ Use `JuMPDict(d::Dict{NTuple{N, Any}, T}) where {T, N}` instead.
└ @ nothing JuMPContainer.jl:26
┌ Warning: Deprecated syntax `parametric method syntax JuMPDict{T, N}(d::Dict{NTuple{N, Any}, T}, meta::Dict{Symbol, Any})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:32.
│ Use `JuMPDict(d::Dict{NTuple{N, Any}, T}, meta::Dict{Symbol, Any}) where {T, N}` instead.
└ @ nothing JuMPContainer.jl:32
┌ Warning: Deprecated syntax `parametric method syntax Base.map{T, N}(f::Function, d::JuMPDict{T, N})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:58.
│ Use `Base.map(f::Function, d::JuMPDict{T, N}) where {T, N}` instead.
└ @ nothing JuMPContainer.jl:58
┌ Warning: Deprecated syntax `parametric method syntax metadata{T <: JuMPContainer}(::T)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:102.
│ Use `metadata(#unused#::T) where T <: JuMPContainer` instead.
└ @ nothing JuMPContainer.jl:102
┌ Warning: Deprecated syntax `parametric method syntax _similar{T}(x::Dict{T})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:119.
│ Use `_similar(x::Dict{T}) where T` instead.
└ @ nothing JuMPContainer.jl:119
┌ Warning: Deprecated syntax `parametric method syntax _mapInner{T}(f, x::JuMPContainer{T})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:134.
│ Use `_mapInner(f, x::JuMPContainer{T}) where T` instead.
└ @ nothing JuMPContainer.jl:134
┌ Warning: Deprecated syntax `parametric method syntax _map{T}(f, x::JuMPContainer{T})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:153.
│ Use `_map(f, x::JuMPContainer{T}) where T` instead.
└ @ nothing JuMPContainer.jl:153
┌ Warning: Deprecated syntax `parametric method syntax Base.ndims{T, N}(x::JuMPDict{T, N})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:174.
│ Use `Base.ndims(x::JuMPDict{T, N}) where {T, N}` instead.
└ @ nothing JuMPContainer.jl:174
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:188
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{T}(x::JuMPContainer{T})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:190.
│ Use `Base.eltype(x::JuMPContainer{T}) where T` instead.
└ @ nothing JuMPContainer.jl:190
┌ Warning: Deprecated syntax `parametric method syntax (::Type{KeyIterator{JA}}){JA}(d)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:215.
│ Use `(::Type{KeyIterator{JA}})(d) where JA` instead.
└ @ nothing JuMPContainer.jl:215
┌ Warning: Deprecated syntax `parametric method syntax KeyIterator{JA}(d::JA)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:220.
│ Use `KeyIterator(d::JA) where JA` instead.
└ @ nothing JuMPContainer.jl:220
┌ Warning: Deprecated syntax `parametric method syntax notindexable_start{T, N, NT}(x::JuMPArray{T, N, NT})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:241.
│ Use `notindexable_start(x::JuMPArray{T, N, NT}) where {T, N, NT}` instead.
└ @ nothing JuMPContainer.jl:241
┌ Warning: Deprecated syntax `parametric method syntax _next{T, N, NT}(x::JuMPArray{T, N, NT}, k::Tuple)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:247.
│ Use `_next(x::JuMPArray{T, N, NT}, k::Tuple) where {T, N, NT}` instead.
└ @ nothing JuMPContainer.jl:247
┌ Warning: Deprecated syntax `parametric method syntax __next{T, N, NT}(x::JuMPArray{T, N, NT}, k::Integer)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMPContainer.jl:280.
│ Use `__next(x::JuMPArray{T, N, NT}, k::Integer) where {T, N, NT}` instead.
└ @ nothing JuMPContainer.jl:280
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:6.
│ Use `mutable struct` instead.
└ @ nothing utils.jl:6
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:70.
│ Use `struct` instead.
└ @ nothing utils.jl:70
┌ Warning: Deprecated syntax `parametric method syntax IndexedVector{T}(::Type{T}, n::Integer)` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:13.
│ Use `IndexedVector(#unused#::Type{T}, n::Integer) where T` instead.
└ @ nothing utils.jl:13
┌ Warning: Deprecated syntax `parametric method syntax addelt!{T}(v::IndexedVector{T}, i::Integer, val::T)` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:16.
│ Use `addelt!(v::IndexedVector{T}, i::Integer, val::T) where T` instead.
└ @ nothing utils.jl:16
┌ Warning: Deprecated syntax `parametric method syntax rmz!{T}(v::IndexedVector{T})` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:29.
│ Use `rmz!(v::IndexedVector{T}) where T` instead.
└ @ nothing utils.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.empty!{T}(v::IndexedVector{T})` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:44.
│ Use `Base.empty!(v::IndexedVector{T}) where T` instead.
└ @ nothing utils.jl:44
┌ Warning: Deprecated syntax `parametric method syntax Base.setindex!{T}(v::VectorView{T}, value::T, idx::Vector{Int})` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:79.
│ Use `Base.setindex!(v::VectorView{T}, value::T, idx::Vector{Int}) where T` instead.
└ @ nothing utils.jl:79
┌ Warning: Deprecated syntax `parametric method syntax Base.fill!{T}(v::VectorView{T}, value)` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:85.
│ Use `Base.fill!(v::VectorView{T}, value) where T` instead.
└ @ nothing utils.jl:85
┌ Warning: Deprecated syntax `parametric method syntax Base.scale!{T <: Number}(v::VectorView{T}, value::T)` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:92.
│ Use `Base.scale!(v::VectorView{T}, value::T) where T <: Number` instead.
└ @ nothing utils.jl:92
WARNING: Base.scale! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:91
┌ Warning: Deprecated syntax `parametric method syntax reinterpret_unsafe{T, R}(::Type{T}, x::Vector{R})` around /home/vagrant/.julia/v0.7/JuMP/src/utils.jl:99.
│ Use `reinterpret_unsafe(#unused#::Type{T}, x::Vector{R}) where {T, R}` instead.
└ @ nothing utils.jl:99
WARNING: importing deprecated binding Base.ObjectIdDict into JuMP.
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:63
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:63
WARNING: importing deprecated binding Base.Void into JuMP.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:503
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:22.
│ Use `mutable struct` instead.
└ @ nothing affexpr.jl:22
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:36.
│ Use `struct` instead.
└ @ nothing affexpr.jl:36
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:134.
│ Use `mutable struct` instead.
└ @ nothing affexpr.jl:134
┌ Warning: Deprecated syntax `parametric method syntax coeftype{C, V}(::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:27.
│ Use `coeftype(#unused#::GenericAffExpr{C, V}) where {C, V}` instead.
└ @ nothing affexpr.jl:27
┌ Warning: Deprecated syntax `parametric method syntax Base.zero{C, V}(::Type{GenericAffExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:29.
│ Use `Base.zero(#unused#::Type{GenericAffExpr{C, V}}) where {C, V}` instead.
└ @ nothing affexpr.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.one{C, V}(::Type{GenericAffExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:30.
│ Use `Base.one(#unused#::Type{GenericAffExpr{C, V}}) where {C, V}` instead.
└ @ nothing affexpr.jl:30
┌ Warning: Deprecated syntax `parametric method syntax Base.push!{C, V}(aff::GenericAffExpr{C, V}, new_coeff::C, new_var::V)` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:49.
│ Use `Base.push!(aff::GenericAffExpr{C, V}, new_coeff::C, new_var::V) where {C, V}` instead.
└ @ nothing affexpr.jl:49
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{C, V}(aff::GenericAffExpr{C, V}, other::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:55.
│ Use `Base.append!(aff::GenericAffExpr{C, V}, other::GenericAffExpr{C, V}) where {C, V}` instead.
└ @ nothing affexpr.jl:55
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{C}(aff::GenericAffExpr{C, C}, other::C)` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:61.
│ Use `Base.append!(aff::GenericAffExpr{C, C}, other::C) where C` instead.
└ @ nothing affexpr.jl:61
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{C, V}(aff::GenericAffExpr{C, V}, other::C)` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:63.
│ Use `Base.append!(aff::GenericAffExpr{C, V}, other::C) where {C, V}` instead.
└ @ nothing affexpr.jl:63
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{C, V}(aff::GenericAffExpr{C, V}, other::Real)` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:67.
│ Use `Base.append!(aff::GenericAffExpr{C, V}, other::Real) where {C, V}` instead.
└ @ nothing affexpr.jl:67
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{C, V}(aff::GenericAffExpr{C, V}, other::V)` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:70.
│ Use `Base.append!(aff::GenericAffExpr{C, V}, other::V) where {C, V}` instead.
└ @ nothing affexpr.jl:70
┌ Warning: Deprecated syntax `parametric method syntax Base.isequal{C, V}(aff::GenericAffExpr{C, V}, other::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/affexpr.jl:73.
│ Use `Base.isequal(aff::GenericAffExpr{C, V}, other::GenericAffExpr{C, V}) where {C, V}` instead.
└ @ nothing affexpr.jl:73
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:23.
│ Use `mutable struct` instead.
└ @ nothing quadexpr.jl:23
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:106.
│ Use `mutable struct` instead.
└ @ nothing quadexpr.jl:106
┌ Warning: Deprecated syntax `parametric method syntax coeftype{C, V}(::GenericQuadExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:29.
│ Use `coeftype(#unused#::GenericQuadExpr{C, V}) where {C, V}` instead.
└ @ nothing quadexpr.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.zero{C, V}(::Type{GenericQuadExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:32.
│ Use `Base.zero(#unused#::Type{GenericQuadExpr{C, V}}) where {C, V}` instead.
└ @ nothing quadexpr.jl:32
┌ Warning: Deprecated syntax `parametric method syntax Base.one{C, V}(::Type{GenericQuadExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:33.
│ Use `Base.one(#unused#::Type{GenericQuadExpr{C, V}}) where {C, V}` instead.
└ @ nothing quadexpr.jl:33
┌ Warning: Deprecated syntax `parametric method syntax Base.append!{T, S}(q::GenericQuadExpr{T, S}, other::GenericQuadExpr{T, S})` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:39.
│ Use `Base.append!(q::GenericQuadExpr{T, S}, other::GenericQuadExpr{T, S}) where {T, S}` instead.
└ @ nothing quadexpr.jl:39
┌ Warning: Deprecated syntax `parametric method syntax Base.isequal{T, S}(q::GenericQuadExpr{T, S}, other::GenericQuadExpr{T, S})` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:54.
│ Use `Base.isequal(q::GenericQuadExpr{T, S}, other::GenericQuadExpr{T, S}) where {T, S}` instead.
└ @ nothing quadexpr.jl:54
┌ Warning: Deprecated syntax `parametric method syntax Base.copy{CON <: GenericQuadConstraint}(c::CON, new_model::Model)` around /home/vagrant/.julia/v0.7/JuMP/src/quadexpr.jl:110.
│ Use `Base.copy(c::CON, new_model::Model) where CON <: GenericQuadConstraint` instead.
└ @ nothing quadexpr.jl:110
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:26.
│ Use `mutable struct` instead.
└ @ nothing norms.jl:26
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:84.
│ Use `mutable struct` instead.
└ @ nothing norms.jl:84
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:109.
│ Use `mutable struct` instead.
└ @ nothing norms.jl:109
┌ Warning: Deprecated syntax `parametric method syntax GenericNorm{C, V}(P, terms::Vector{GenericAffExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:31.
│ Use `GenericNorm(P, terms::Vector{GenericAffExpr{C, V}}) where {C, V}` instead.
└ @ nothing norms.jl:31
┌ Warning: Deprecated syntax `parametric method syntax GenericNorm{C, V}(P, terms::AbstractVector{GenericAffExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:41.
│ Use `GenericNorm(P, terms::AbstractVector{GenericAffExpr{C, V}}) where {C, V}` instead.
└ @ nothing norms.jl:41
┌ Warning: Deprecated syntax `parametric method syntax Base.copy{P, C, V}(x::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:43.
│ Use `Base.copy(x::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing norms.jl:43
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{V <: AbstractJuMPScalar}(x::V, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:46.
│ Use `Base.norm(x::V, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:46
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:46
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:46
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{V <: AbstractJuMPScalar}(x::AbstractVector{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:47.
│ Use `Base.norm(x::AbstractVector{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:47
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:47
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:47
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{V <: AbstractJuMPScalar}(x::AbstractMatrix{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:48.
│ Use `Base.norm(x::AbstractMatrix{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:48
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:48
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:48
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{V <: AbstractJuMPScalar}(x::JuMPArray{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:49.
│ Use `Base.norm(x::JuMPArray{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:49
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:49
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:49
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{V <: AbstractJuMPScalar}(x::JuMPDict{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:50.
│ Use `Base.norm(x::JuMPDict{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:50
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:50
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:50
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{C, V}(x::GenericAffExpr{C, V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:51.
│ Use `Base.norm(x::GenericAffExpr{C, V}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:51
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:51
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:51
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{C, V}(x::AbstractVector{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:52.
│ Use `Base.norm(x::AbstractVector{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:52
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:52
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:52
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{C, V}(x::AbstractMatrix{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:53.
│ Use `Base.norm(x::AbstractMatrix{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:53
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:53
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:53
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{C, V}(x::JuMPArray{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:54.
│ Use `Base.norm(x::JuMPArray{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:54
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:54
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:54
┌ Warning: Deprecated syntax `parametric method syntax Base.norm{C, V}(x::JuMPDict{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:55.
│ Use `Base.norm(x::JuMPDict{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:55
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:55
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:55
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{V <: AbstractJuMPScalar}(x::V, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:58.
│ Use `Base.vecnorm(x::V, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:58
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:58
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:58
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{V <: AbstractJuMPScalar}(x::AbstractArray{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:59.
│ Use `Base.vecnorm(x::AbstractArray{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:59
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:59
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:59
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{V <: AbstractJuMPScalar}(x::JuMPArray{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:60.
│ Use `Base.vecnorm(x::JuMPArray{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:60
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:60
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:60
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{V <: AbstractJuMPScalar}(x::JuMPDict{V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:61.
│ Use `Base.vecnorm(x::JuMPDict{V}, p::Real = 2) where V <: AbstractJuMPScalar` instead.
└ @ nothing norms.jl:61
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:61
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:61
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{C, V}(x::GenericAffExpr{C, V}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:62.
│ Use `Base.vecnorm(x::GenericAffExpr{C, V}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:62
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:62
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:62
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{C, V}(x::AbstractArray{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:63.
│ Use `Base.vecnorm(x::AbstractArray{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:63
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:63
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:63
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{C, V}(x::JuMPArray{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:64.
│ Use `Base.vecnorm(x::JuMPArray{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:64
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:64
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:64
┌ Warning: Deprecated syntax `parametric method syntax Base.vecnorm{C, V}(x::JuMPDict{GenericAffExpr{C, V}}, p::Real = 2)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:65.
│ Use `Base.vecnorm(x::JuMPDict{GenericAffExpr{C, V}}, p::Real = 2) where {C, V}` instead.
└ @ nothing norms.jl:65
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:65
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:65
┌ Warning: Deprecated syntax `parametric method syntax _build_norm{C, V}(P, terms::Vector{GenericAffExpr{C, V}})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:69.
│ Use `_build_norm(P, terms::Vector{GenericAffExpr{C, V}}) where {C, V}` instead.
└ @ nothing norms.jl:69
┌ Warning: Deprecated syntax `parametric method syntax getvalue{P, C, V}(n::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:79.
│ Use `getvalue(n::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing norms.jl:79
┌ Warning: Deprecated syntax `parametric method syntax GenericNormExpr{P, C, V}(norm::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:90.
│ Use `GenericNormExpr(norm::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing norms.jl:90
┌ Warning: Deprecated syntax `parametric method syntax Base.copy{P, C, V}(x::GenericNormExpr{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:92.
│ Use `Base.copy(x::GenericNormExpr{P, C, V}) where {P, C, V}` instead.
└ @ nothing norms.jl:92
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{P, C, V}(::Type{GenericNormExpr{P, C, V}}, x::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:94.
│ Use `Base.convert(#unused#::Type{GenericNormExpr{P, C, V}}, x::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing norms.jl:94
┌ Warning: Deprecated syntax `parametric method syntax (::Type{GenericSOCConstraint{T}}){T}(normexpr::T)` around /home/vagrant/.julia/v0.7/JuMP/src/norms.jl:112.
│ Use `(::Type{GenericSOCConstraint{T}})(normexpr::T) where T` instead.
└ @ nothing norms.jl:112
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/JuMP/src/sos.jl:17.
│ Use `mutable struct` instead.
└ @ nothing sos.jl:17
┌ Warning: Deprecated syntax `parametric method syntax Base.copy{M, T}(c::ConstraintRef{M, T}, new_model::M)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:572.
│ Use `Base.copy(c::ConstraintRef{M, T}, new_model::M) where {M, T}` instead.
└ @ nothing JuMP.jl:572
┌ Warning: Deprecated syntax `parametric method syntax getdualwarn{T <: Union{ConstraintRef, Int}}(::T)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:583.
│ Use `getdualwarn(#unused#::T) where T <: Union{ConstraintRef, Int}` instead.
└ @ nothing JuMP.jl:583
┌ Warning: Deprecated syntax `parametric method syntax mapcontainer_warn{E}(f, x::JuMPContainer{E})` around /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:857.
│ Use `mapcontainer_warn(f, x::JuMPContainer{E}) where E` instead.
└ @ nothing JuMP.jl:857
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{T <: JuMPTypes}(::T)` around /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:899.
│ Use `Base.eltype(#unused#::T) where T <: JuMPTypes` instead.
└ @ nothing JuMP.jl:899
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:52.
│ Use `1 ./` instead.
└ @ nothing operators.jl:52
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:24
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:25
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:26
┌ Warning: Deprecated syntax `parametric method syntax +{P, C, V}(lhs::Number, rhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:28.
│ Use `(lhs::Number + rhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:28
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:28
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::Number, rhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:29.
│ Use `(lhs::Number - rhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:29
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:29
┌ Warning: Deprecated syntax `parametric method syntax *{P, C, V}(lhs::Number, rhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:30.
│ Use `(lhs::Number * rhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:30
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:30
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:32
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:33
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:34
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:36
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:37
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:38
┌ Warning: Deprecated syntax `parametric method syntax +{T <: GenericNormExpr}(lhs::Number, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:40.
│ Use `(lhs::Number + rhs::T) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:40
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:40
┌ Warning: Deprecated syntax `parametric method syntax -{T <: GenericNormExpr}(lhs::Number, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:41.
│ Use `(lhs::Number - rhs::T) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:41
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:41
┌ Warning: Deprecated syntax `parametric method syntax *{T <: GenericNormExpr}(lhs::Number, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:42.
│ Use `(lhs::Number * rhs::T) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:42
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:42
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:45
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:46
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:47
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:49
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:50
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:51
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:52
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:54
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:55
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:56
┌ Warning: Deprecated syntax `parametric method syntax +{C, V <: Variable}(lhs::Variable, rhs::GenericNorm{2, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:58.
│ Use `(lhs::Variable + rhs::GenericNorm{2, C, V}) where {C, V <: Variable}` instead.
└ @ nothing operators.jl:58
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:58
┌ Warning: Deprecated syntax `parametric method syntax -{C, V <: Variable}(lhs::Variable, rhs::GenericNorm{2, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:59.
│ Use `(lhs::Variable - rhs::GenericNorm{2, C, V}) where {C, V <: Variable}` instead.
└ @ nothing operators.jl:59
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:59
┌ Warning: Deprecated syntax `parametric method syntax +{C, V <: JuMPTypes}(lhs::V, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:61.
│ Use `(lhs::V + rhs::GenericAffExpr{C, V}) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:61
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:61
┌ Warning: Deprecated syntax `parametric method syntax -{C, V <: JuMPTypes}(lhs::V, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:63.
│ Use `(lhs::V - rhs::GenericAffExpr{C, V}) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:63
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:63
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:65
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:73
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:75
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:76
┌ Warning: Deprecated syntax `parametric method syntax +{C, V <: Variable}(lhs::Variable, rhs::GenericSOCExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:78.
│ Use `(lhs::Variable + rhs::GenericSOCExpr{C, V}) where {C, V <: Variable}` instead.
└ @ nothing operators.jl:78
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:78
┌ Warning: Deprecated syntax `parametric method syntax -{C, V <: Variable}(lhs::Variable, rhs::GenericSOCExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:79.
│ Use `(lhs::Variable - rhs::GenericSOCExpr{C, V}) where {C, V <: Variable}` instead.
└ @ nothing operators.jl:79
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:79
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:82
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:83.
│ Use `-(lhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:83
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:83
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:84
┌ Warning: Deprecated syntax `parametric method syntax +{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:86.
│ Use `(lhs::GenericNorm{P, C, V} + rhs::Number) where {P, C, V}` instead.
└ @ nothing operators.jl:86
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:86
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:88.
│ Use `(lhs::GenericNorm{P, C, V} - rhs::Number) where {P, C, V}` instead.
└ @ nothing operators.jl:88
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:88
┌ Warning: Deprecated syntax `parametric method syntax *{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:90.
│ Use `(lhs::GenericNorm{P, C, V} * rhs::Number) where {P, C, V}` instead.
└ @ nothing operators.jl:90
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:90
┌ Warning: Deprecated syntax `parametric method syntax /{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:92.
│ Use `(lhs::GenericNorm{P, C, V} / rhs::Number) where {P, C, V}` instead.
└ @ nothing operators.jl:92
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:92
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:95
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:96
┌ Warning: Deprecated syntax `parametric method syntax +{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:99.
│ Use `(lhs::GenericNorm{P, C, V} + rhs::GenericAffExpr{C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:99
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:99
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::GenericNorm{P, C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:101.
│ Use `(lhs::GenericNorm{P, C, V} - rhs::GenericAffExpr{C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:101
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:101
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:107
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:108
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:109
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:111
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:112
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:113
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:114
WARNING: Operators.^ is deprecated, use Base.:^ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:115
WARNING: Operators.^ is deprecated, use Base.:^ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:126
WARNING: Operators.< is deprecated, use Base.:< instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:127
┌ Warning: Deprecated syntax `parametric method syntax +{C, V <: JuMPTypes}(lhs::GenericAffExpr{C, V}, rhs::V)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:131.
│ Use `(lhs::GenericAffExpr{C, V} + rhs::V) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:131
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:131
┌ Warning: Deprecated syntax `parametric method syntax -{C, V <: JuMPTypes}(lhs::GenericAffExpr{C, V}, rhs::V)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:132.
│ Use `(lhs::GenericAffExpr{C, V} - rhs::V) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:132
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:132
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:133
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:134
┌ Warning: Deprecated syntax `parametric method syntax +{P, C, V}(lhs::GenericAffExpr{C, V}, rhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:136.
│ Use `(lhs::GenericAffExpr{C, V} + rhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:136
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:136
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::GenericAffExpr{C, V}, rhs::GenericNorm{P, C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:137.
│ Use `(lhs::GenericAffExpr{C, V} - rhs::GenericNorm{P, C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:137
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:137
┌ Warning: Deprecated syntax `parametric method syntax +{C, V <: JuMPTypes}(lhs::GenericAffExpr{C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:139.
│ Use `(lhs::GenericAffExpr{C, V} + rhs::GenericAffExpr{C, V}) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:139
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:139
┌ Warning: Deprecated syntax `parametric method syntax -{C, V <: JuMPTypes}(lhs::GenericAffExpr{C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:140.
│ Use `(lhs::GenericAffExpr{C, V} - rhs::GenericAffExpr{C, V}) where {C, V <: JuMPTypes}` instead.
└ @ nothing operators.jl:140
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:140
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:141
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:196
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:197
┌ Warning: Deprecated syntax `parametric method syntax +{C, V}(lhs::GenericAffExpr{C, V}, rhs::GenericSOCExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:199.
│ Use `(lhs::GenericAffExpr{C, V} + rhs::GenericSOCExpr{C, V}) where {C, V}` instead.
└ @ nothing operators.jl:199
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:199
┌ Warning: Deprecated syntax `parametric method syntax -{C, V}(lhs::GenericAffExpr{C, V}, rhs::GenericSOCExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:200.
│ Use `(lhs::GenericAffExpr{C, V} - rhs::GenericSOCExpr{C, V}) where {C, V}` instead.
└ @ nothing operators.jl:200
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:200
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:203
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:204
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:205
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:207
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:208
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:209
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:210
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:212
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:213
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:214
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:215
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:217
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:218
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:219
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:220
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:222
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:224
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:228
┌ Warning: Deprecated syntax `parametric method syntax -{T <: GenericNormExpr}(lhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:229.
│ Use `-(lhs::T) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:229
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:229
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:230
┌ Warning: Deprecated syntax `parametric method syntax +{T <: GenericNormExpr}(lhs::T, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:232.
│ Use `(lhs::T + rhs::Number) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:232
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:232
┌ Warning: Deprecated syntax `parametric method syntax -{T <: GenericNormExpr}(lhs::T, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:233.
│ Use `(lhs::T - rhs::Number) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:233
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:233
┌ Warning: Deprecated syntax `parametric method syntax *{T <: GenericNormExpr}(lhs::T, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:234.
│ Use `(lhs::T * rhs::Number) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:234
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:234
┌ Warning: Deprecated syntax `parametric method syntax /{T <: GenericNormExpr}(lhs::T, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:235.
│ Use `(lhs::T / rhs::Number) where T <: GenericNormExpr` instead.
└ @ nothing operators.jl:235
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:235
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:237
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:238
┌ Warning: Deprecated syntax `parametric method syntax +{P, C, V}(lhs::GenericNormExpr{P, C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:241.
│ Use `(lhs::GenericNormExpr{P, C, V} + rhs::GenericAffExpr{C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:241
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:241
┌ Warning: Deprecated syntax `parametric method syntax -{P, C, V}(lhs::GenericNormExpr{P, C, V}, rhs::GenericAffExpr{C, V})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:243.
│ Use `(lhs::GenericNormExpr{P, C, V} - rhs::GenericAffExpr{C, V}) where {P, C, V}` instead.
└ @ nothing operators.jl:243
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:243
WARNING: Operators.== is deprecated, use Base.:== instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:248
WARNING: Operators.== is deprecated, use Base.:== instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:249
┌ Warning: Deprecated syntax `parametric method syntax Base.sum{T <: GenericAffExpr}(affs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:284.
│ Use `Base.sum(affs::AbstractArray{T}) where T <: GenericAffExpr` instead.
└ @ nothing operators.jl:284
WARNING: importing deprecated binding Base.vecdot into JuMP.
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:298
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:299
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:300
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T, S, N}(lhs::AbstractArray{T, N}, rhs::JuMPArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:302.
│ Use `Base.dot(lhs::AbstractArray{T, N}, rhs::JuMPArray{S, N}) where {T, S, N}` instead.
└ @ nothing operators.jl:302
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:302
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T, S, N}(lhs::JuMPArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:303.
│ Use `Base.dot(lhs::JuMPArray{T, N}, rhs::AbstractArray{S, N}) where {T, S, N}` instead.
└ @ nothing operators.jl:303
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:303
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T, S, N}(lhs::JuMPArray{T, N}, rhs::JuMPArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:304.
│ Use `Base.dot(lhs::JuMPArray{T, N}, rhs::JuMPArray{S, N}) where {T, S, N}` instead.
└ @ nothing operators.jl:304
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:304
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T <: JuMPTypes, S, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:305.
│ Use `Base.dot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T <: JuMPTypes, S, N}` instead.
└ @ nothing operators.jl:305
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:305
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T <: JuMPTypes, S <: JuMPTypes, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:306.
│ Use `Base.dot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T <: JuMPTypes, S <: JuMPTypes, N}` instead.
└ @ nothing operators.jl:306
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:306
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T, S <: JuMPTypes, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:307.
│ Use `Base.dot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T, S <: JuMPTypes, N}` instead.
└ @ nothing operators.jl:307
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:307
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T <: JuMPTypes, S <: JuMPTypes}(lhs::AbstractVector{T}, rhs::AbstractVector{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:309.
│ Use `Base.dot(lhs::AbstractVector{T}, rhs::AbstractVector{S}) where {T <: JuMPTypes, S <: JuMPTypes}` instead.
└ @ nothing operators.jl:309
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:309
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T <: JuMPTypes, S}(lhs::AbstractVector{T}, rhs::AbstractVector{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:310.
│ Use `Base.dot(lhs::AbstractVector{T}, rhs::AbstractVector{S}) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:310
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:310
┌ Warning: Deprecated syntax `parametric method syntax Base.dot{T, S <: JuMPTypes}(lhs::AbstractVector{T}, rhs::AbstractVector{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:311.
│ Use `Base.dot(lhs::AbstractVector{T}, rhs::AbstractVector{S}) where {T, S <: JuMPTypes}` instead.
└ @ nothing operators.jl:311
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:311
┌ Warning: Deprecated syntax `parametric method syntax vecdot{T <: JuMPTypes, S, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:314.
│ Use `vecdot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T <: JuMPTypes, S, N}` instead.
└ @ nothing operators.jl:314
WARNING: Base.vecdot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:314
┌ Warning: Deprecated syntax `parametric method syntax vecdot{T <: JuMPTypes, S <: JuMPTypes, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:315.
│ Use `vecdot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T <: JuMPTypes, S <: JuMPTypes, N}` instead.
└ @ nothing operators.jl:315
WARNING: Base.vecdot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:315
┌ Warning: Deprecated syntax `parametric method syntax vecdot{T, S <: JuMPTypes, N}(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:316.
│ Use `vecdot(lhs::AbstractArray{T, N}, rhs::AbstractArray{S, N}) where {T, S <: JuMPTypes, N}` instead.
└ @ nothing operators.jl:316
WARNING: Base.vecdot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:316
┌ Warning: Deprecated syntax `parametric method syntax _dot{T, S}(lhs::AbstractArray{T}, rhs::AbstractArray{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:319.
│ Use `_dot(lhs::AbstractArray{T}, rhs::AbstractArray{S}) where {T, S}` instead.
└ @ nothing operators.jl:319
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{R <: Real}(::Type{Variable}, ::Type{R})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:331.
│ Use `Base.promote_rule(#unused#::Type{Variable}, #unused#::Type{R}) where R <: Real` instead.
└ @ nothing operators.jl:331
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{R <: Real}(::Type{AffExpr}, ::Type{R})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:334.
│ Use `Base.promote_rule(#unused#::Type{AffExpr}, #unused#::Type{R}) where R <: Real` instead.
└ @ nothing operators.jl:334
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{R <: Real}(::Type{QuadExpr}, ::Type{R})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:336.
│ Use `Base.promote_rule(#unused#::Type{QuadExpr}, #unused#::Type{R}) where R <: Real` instead.
└ @ nothing operators.jl:336
┌ Warning: Deprecated syntax `parametric method syntax Base.issymmetric{T <: JuMPTypes}(x::Matrix{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:346.
│ Use `Base.issymmetric(x::Matrix{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:346
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:345
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:354
┌ Warning: Deprecated syntax `parametric method syntax _multiply!{T <: JuMPTypes}(ret::Array{T}, lhs::Array, rhs::Array)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:365.
│ Use `_multiply!(ret::Array{T}, lhs::Array, rhs::Array) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:365
┌ Warning: Deprecated syntax `parametric method syntax _multiplyt!{T <: JuMPTypes}(ret::Array{T}, lhs::Array, rhs::Array)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:380.
│ Use `_multiplyt!(ret::Array{T}, lhs::Array, rhs::Array) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:380
┌ Warning: Deprecated syntax `parametric method syntax _multiply!{T <: Union{GenericAffExpr, GenericQuadExpr}}(ret::Array{T}, lhs::SparseMatrixCSC, rhs::Array)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:394.
│ Use `_multiply!(ret::Array{T}, lhs::SparseMatrixCSC, rhs::Array) where T <: Union{GenericAffExpr, GenericQuadExpr}` instead.
└ @ nothing operators.jl:394
WARNING: importing deprecated binding Base.SparseMatrixCSC into JuMP.
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:393
┌ Warning: Deprecated syntax `parametric method syntax _multiplyt!{T <: Union{GenericAffExpr, GenericQuadExpr}}(ret::Array{T}, lhs::SparseMatrixCSC, rhs::Array)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:408.
│ Use `_multiplyt!(ret::Array{T}, lhs::SparseMatrixCSC, rhs::Array) where T <: Union{GenericAffExpr, GenericQuadExpr}` instead.
└ @ nothing operators.jl:408
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:407
┌ Warning: Deprecated syntax `parametric method syntax _multiply!{T <: Union{GenericAffExpr, GenericQuadExpr}}(ret::Array{T}, lhs::Matrix, rhs::SparseMatrixCSC)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:412.
│ Use `_multiply!(ret::Array{T}, lhs::Matrix, rhs::SparseMatrixCSC) where T <: Union{GenericAffExpr, GenericQuadExpr}` instead.
└ @ nothing operators.jl:412
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:411
┌ Warning: Deprecated syntax `parametric method syntax _multiplyt!{T <: Union{GenericAffExpr, GenericQuadExpr}}(ret::Array{T}, lhs::Matrix, rhs::SparseMatrixCSC)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:429.
│ Use `_multiplyt!(ret::Array{T}, lhs::Matrix, rhs::SparseMatrixCSC) where T <: Union{GenericAffExpr, GenericQuadExpr}` instead.
└ @ nothing operators.jl:429
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:428
┌ Warning: Deprecated syntax `parametric method syntax _multiply!{T <: JuMPTypes}(ret::AbstractArray{T}, lhs::SparseMatrixCSC, rhs::SparseMatrixCSC)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:446.
│ Use `_multiply!(ret::AbstractArray{T}, lhs::SparseMatrixCSC, rhs::SparseMatrixCSC) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:446
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:446
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:446
┌ Warning: Deprecated syntax `parametric method syntax _multiplyt!{T <: JuMPTypes}(ret::AbstractArray{T}, lhs::SparseMatrixCSC, rhs::SparseMatrixCSC)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:447.
│ Use `_multiplyt!(ret::AbstractArray{T}, lhs::SparseMatrixCSC, rhs::SparseMatrixCSC) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:447
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:447
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:447
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix, Vector, SparseMatrixCSC})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:452.
│ Use `(A::Union{Matrix{T}, SparseMatrixCSC{T}} * x::Union{Matrix, Vector, SparseMatrixCSC}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:452
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:452
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:452
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:452
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes, R <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:453.
│ Use `(A::Union{Matrix{T}, SparseMatrixCSC{T}} * x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}}) where {T <: JuMPTypes, R <: JuMPTypes}` instead.
└ @ nothing operators.jl:453
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:453
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:453
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:453
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(A::Union{Matrix, SparseMatrixCSC}, x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:454.
│ Use `(A::Union{Matrix, SparseMatrixCSC} * x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:454
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:454
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:454
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:454
┌ Warning: Deprecated syntax `parametric method syntax At_mul_B{T <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix, Vector, SparseMatrixCSC})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:459.
│ Use `At_mul_B(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix, Vector, SparseMatrixCSC}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:459
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:459
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:459
┌ Warning: Deprecated syntax `parametric method syntax At_mul_B{T <: JuMPTypes, R <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:460.
│ Use `At_mul_B(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}}) where {T <: JuMPTypes, R <: JuMPTypes}` instead.
└ @ nothing operators.jl:460
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:460
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:460
┌ Warning: Deprecated syntax `parametric method syntax At_mul_B{T <: JuMPTypes}(A::Union{Matrix, SparseMatrixCSC}, x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:461.
│ Use `At_mul_B(A::Union{Matrix, SparseMatrixCSC}, x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:461
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:461
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:461
┌ Warning: Deprecated syntax `parametric method syntax Ac_mul_B{T <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix, Vector, SparseMatrixCSC})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:463.
│ Use `Ac_mul_B(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix, Vector, SparseMatrixCSC}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:463
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:463
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:463
┌ Warning: Deprecated syntax `parametric method syntax Ac_mul_B{T <: JuMPTypes, R <: JuMPTypes}(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:464.
│ Use `Ac_mul_B(A::Union{Matrix{T}, SparseMatrixCSC{T}}, x::Union{Matrix{R}, Vector{R}, SparseMatrixCSC{R}}) where {T <: JuMPTypes, R <: JuMPTypes}` instead.
└ @ nothing operators.jl:464
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:464
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:464
┌ Warning: Deprecated syntax `parametric method syntax Ac_mul_B{T <: JuMPTypes}(A::Union{Matrix, SparseMatrixCSC}, x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:465.
│ Use `Ac_mul_B(A::Union{Matrix, SparseMatrixCSC}, x::Union{Matrix{T}, Vector{T}, SparseMatrixCSC{T}}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:465
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:465
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:465
┌ Warning: Deprecated syntax `parametric method syntax _return_array{R, S}(A::AbstractMatrix{R}, x::AbstractVector{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:488.
│ Use `_return_array(A::AbstractMatrix{R}, x::AbstractVector{S}) where {R, S}` instead.
└ @ nothing operators.jl:488
┌ Warning: Deprecated syntax `parametric method syntax _return_array{R, S}(A::AbstractMatrix{R}, x::AbstractMatrix{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:489.
│ Use `_return_array(A::AbstractMatrix{R}, x::AbstractMatrix{S}) where {R, S}` instead.
└ @ nothing operators.jl:489
┌ Warning: Deprecated syntax `parametric method syntax _return_arrayt{R, S}(A::AbstractMatrix{R}, x::AbstractVector{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:491.
│ Use `_return_arrayt(A::AbstractMatrix{R}, x::AbstractVector{S}) where {R, S}` instead.
└ @ nothing operators.jl:491
┌ Warning: Deprecated syntax `parametric method syntax _return_arrayt{R, S}(A::AbstractMatrix{R}, x::AbstractMatrix{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:492.
│ Use `_return_arrayt(A::AbstractMatrix{R}, x::AbstractMatrix{S}) where {R, S}` instead.
└ @ nothing operators.jl:492
┌ Warning: Deprecated syntax `parametric method syntax _fillwithzeros{T}(arr::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:496.
│ Use `_fillwithzeros(arr::AbstractArray{T}) where T` instead.
└ @ nothing operators.jl:496
┌ Warning: Deprecated syntax `parametric method syntax +{T <: JuMPTypes}(lhs::Number, rhs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:504.
│ Use `(lhs::Number + rhs::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:504
┌ Warning: Deprecated syntax `parametric method syntax +{T <: JuMPTypes}(lhs::AbstractArray{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:511.
│ Use `(lhs::AbstractArray{T} + rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:511
┌ Warning: Deprecated syntax `parametric method syntax +{T <: JuMPTypes, S}(lhs::T, rhs::AbstractArray{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:518.
│ Use `(lhs::T + rhs::AbstractArray{S}) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:518
┌ Warning: Deprecated syntax `parametric method syntax +{T <: JuMPTypes, S}(lhs::AbstractArray{S}, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:525.
│ Use `(lhs::AbstractArray{S} + rhs::T) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:525
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:503
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:510
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:517
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:524
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:524
┌ Warning: Deprecated syntax `parametric method syntax -{T <: JuMPTypes}(lhs::Number, rhs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:504.
│ Use `(lhs::Number - rhs::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:504
┌ Warning: Deprecated syntax `parametric method syntax -{T <: JuMPTypes}(lhs::AbstractArray{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:511.
│ Use `(lhs::AbstractArray{T} - rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:511
┌ Warning: Deprecated syntax `parametric method syntax -{T <: JuMPTypes, S}(lhs::T, rhs::AbstractArray{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:518.
│ Use `(lhs::T - rhs::AbstractArray{S}) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:518
┌ Warning: Deprecated syntax `parametric method syntax -{T <: JuMPTypes, S}(lhs::AbstractArray{S}, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:525.
│ Use `(lhs::AbstractArray{S} - rhs::T) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:525
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:503
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:510
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:517
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:524
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:524
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(lhs::Number, rhs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:535.
│ Use `(lhs::Number * rhs::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:535
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(lhs::AbstractArray{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:542.
│ Use `(lhs::AbstractArray{T} * rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:542
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes, S}(lhs::T, rhs::AbstractArray{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:549.
│ Use `(lhs::T * rhs::AbstractArray{S}) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:549
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes, S}(lhs::AbstractArray{S}, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:556.
│ Use `(lhs::AbstractArray{S} * rhs::T) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:556
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:534
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:541
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:548
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:555
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:555
┌ Warning: Deprecated syntax `parametric method syntax /{T <: JuMPTypes}(lhs::Number, rhs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:535.
│ Use `(lhs::Number / rhs::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:535
┌ Warning: Deprecated syntax `parametric method syntax /{T <: JuMPTypes}(lhs::AbstractArray{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:542.
│ Use `(lhs::AbstractArray{T} / rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:542
┌ Warning: Deprecated syntax `parametric method syntax /{T <: JuMPTypes, S}(lhs::T, rhs::AbstractArray{S})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:549.
│ Use `(lhs::T / rhs::AbstractArray{S}) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:549
┌ Warning: Deprecated syntax `parametric method syntax /{T <: JuMPTypes, S}(lhs::AbstractArray{S}, rhs::T)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:556.
│ Use `(lhs::AbstractArray{S} / rhs::T) where {T <: JuMPTypes, S}` instead.
└ @ nothing operators.jl:556
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:534
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:541
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:548
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:555
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:555
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(lhs::Number, rhs::SparseMatrixCSC{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:565.
│ Use `(lhs::Number * rhs::SparseMatrixCSC{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:565
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:565
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:565
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:567
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:567
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(lhs::SparseMatrixCSC{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:569.
│ Use `(lhs::SparseMatrixCSC{T} * rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:569
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:569
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:569
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:571
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:571
┌ Warning: Deprecated syntax `parametric method syntax /{T <: JuMPTypes}(lhs::SparseMatrixCSC{T}, rhs::Number)` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:573.
│ Use `(lhs::SparseMatrixCSC{T} / rhs::Number) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:573
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:573
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:573
WARNING: Operators.>= is deprecated, use Base.:>= instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:576
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:577
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:577
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:577
WARNING: Operators./ is deprecated, use Base.:/ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:577
┌ Warning: Deprecated syntax `parametric method syntax +{T <: JuMPTypes}(x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:615.
│ Use `+(x::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:615
WARNING: Operators.+ is deprecated, use Base.:+ instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:615
┌ Warning: Deprecated syntax `parametric method syntax -{T <: JuMPTypes}(x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:617.
│ Use `-(x::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:617
WARNING: Operators.- is deprecated, use Base.:- instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:616
┌ Warning: Deprecated syntax `parametric method syntax *{T <: JuMPTypes}(x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:623.
│ Use `*(x::AbstractArray{T}) where T <: JuMPTypes` instead.
└ @ nothing operators.jl:623
WARNING: Operators.* is deprecated, use Base.:* instead.
  likely near /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:623
ERROR: LoadError: LoadError: WARNING: Operators.> is deprecated, use Base.:> instead.
 in module JuMP
WARNING: Operators.== is deprecated, use Base.:== instead.
 in module JuMP
WARNING: Operators.> is deprecated, use Base.:> instead.
 in module JuMP
WARNING: Operators.> is deprecated, use Base.:> instead.
 in module JuMP
WARNING: Operators.== is deprecated, use Base.:== instead.
 in module JuMP
WARNING: Operators.== is deprecated, use Base.:== instead.
 in module JuMP
UndefVarError: erf not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:13
 [2] top-level scope
 [3] eval at ./boot.jl:309 [inlined]
 [4] eval(::Module, ::Expr) at ./sysimg.jl:74
 [5] top-level scope at /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:630
 [6] include at ./boot.jl:306 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include at ./sysimg.jl:29 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:13
 [10] top-level scope
 [11] include at ./boot.jl:306 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] top-level scope
 [15] eval at ./boot.jl:309 [inlined]
 [16] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/JuMP/src/operators.jl:630
in expression starting at /home/vagrant/.julia/v0.7/JuMP/src/JuMP.jl:907
ERROR: LoadError: Failed to precompile JuMP to /home/vagrant/.julia/compiled/v0.7/JuMP.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:974
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:306 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:309 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/VehicleModels/src/VehicleModels.jl:6
ERROR: LoadError: Failed to precompile VehicleModels to /home/vagrant/.julia/compiled/v0.7/VehicleModels.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:306 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/VehicleModels/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for VehicleModels
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/VehicleModels/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#541(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:309 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: VehicleModels had test errors

>>> End of log
