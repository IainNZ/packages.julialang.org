>>> 'Pkg.add("FixedPolynomials")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of FixedPolynomials from https://github.com/JuliaAlgebra/FixedPolynomials.jl.git
[ Info: Installing FixedPolynomials v0.3.0
[ Info: Installing MultivariatePolynomials v0.1.4
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of FixedPolynomials
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FixedPolynomials")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    6196822 s       6572 s     409597 s    2077894 s         80 s
       #2  3500 MHz    1454057 s       3004 s     156302 s    8330050 s          1 s
       
  Memory: 2.939197540283203 GB (1583.375 MB free)
  Uptime: 101678.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - FixedPolynomials              0.3.0
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.64.0
 - MultivariatePolynomials       0.1.4
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for FixedPolynomials...
[ Info: Installing DynamicPolynomials v0.0.3
[ Info: Testing FixedPolynomials
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/runtests.jl:2
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl
WARNING: importing deprecated binding Base.uninitialized into DynamicPolynomials.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/poly_test.jl:1
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = substitute(::Polynomial{Int64}, ::Int64, ::Float64) at poly.jl:247
└ @ FixedPolynomials poly.jl:247
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = _coefficients_exponents at poly.jl:67 [inlined]
└ @ Core poly.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _coefficients_exponents at poly.jl:68 [inlined]
└ @ Core poly.jl:68
┌ Warning: `sum(a::AbstractArray, dims)` is deprecated, use `sum(a, dims=dims)` instead.
│   caller = ishomogenous(::Polynomial{Float64}) at poly.jl:342
└ @ FixedPolynomials poly.jl:342
┌ Warning: `sum(a::AbstractArray, dims)` is deprecated, use `sum(a, dims=dims)` instead.
│   caller = ishomogenous at poly.jl:342 [inlined]
└ @ Core poly.jl:342
┌ Warning: `sum(a::AbstractArray, dims)` is deprecated, use `sum(a, dims=dims)` instead.
│   caller = #homogenize#11(::Bool, ::Function, ::Polynomial{Float64}, ::Symbol) at poly.jl:357
└ @ FixedPolynomials poly.jl:357
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Polynomial{Float64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
poly          |   51     51
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/config_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/config_test.jl
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/config_test.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/config_test.jl
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = computetables(::Array{UInt16,2}) at tables.jl:27
└ @ FixedPolynomials tables.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Float64}) at config.jl:22
└ @ FixedPolynomials config.jl:22
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Float64}) at config.jl:36
└ @ FixedPolynomials config.jl:36
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Float64}) at config.jl:49
└ @ FixedPolynomials config.jl:49
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Float64}) at config.jl:50
└ @ FixedPolynomials config.jl:50
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Float64}) at config.jl:52
└ @ FixedPolynomials config.jl:52
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Complex{Float64}}) at config.jl:22
└ @ FixedPolynomials config.jl:22
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Complex{Float64}}) at config.jl:36
└ @ FixedPolynomials config.jl:36
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Complex{Float64}}) at config.jl:49
└ @ FixedPolynomials config.jl:49
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Complex{Float64}}) at config.jl:50
└ @ FixedPolynomials config.jl:50
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = FixedPolynomials.PolyConfig(::Polynomial{Float64}, ::Array{UInt16,2}, ::Array{UInt16,2}, ::Type{Complex{Float64}}) at config.jl:52
└ @ FixedPolynomials config.jl:52
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = GradientDiffResult(::GradientConfig{Float64}) at config.jl:372
└ @ FixedPolynomials config.jl:372
Test Summary: | Pass  Total
Config        |   24     24
WARNING: Base.RowVector is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/system_test.jl:2
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/system_test.jl
WARNING: Base.RowVector is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/FixedPolynomials/test/system_test.jl:2
in top-level scope at /home/vagrant/.julia/v0.7/FixedPolynomials/test/system_test.jl
┌ Warning: `ConjRowVector` and `RowVector` have been deprecated in favor of `Adjoint` and `Transpose`. Please see 0.7's NEWS.md for a more detailed explanation of the associated changes.
│   caller = macro expansion at system_test.jl:36 [inlined]
└ @ Core system_test.jl:36
┌ Warning: `ConjRowVector` and `RowVector` have been deprecated in favor of `Adjoint` and `Transpose`. Please see 0.7's NEWS.md for a more detailed explanation of the associated changes.
│   caller = |>(::Array{Float64,1}, ::Type) at operators.jl:774
└ @ Base operators.jl:774
Test Summary: | Pass  Total
System        |   21     21
[ Info: FixedPolynomials tests passed
[ Info: Removing DynamicPolynomials v0.0.3

>>> End of log
