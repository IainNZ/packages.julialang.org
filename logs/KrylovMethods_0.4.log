>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1361.44140625 MB free)
Uptime: 47951.0 sec
Load Avg:  1.05712890625  1.0029296875  0.982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz    2221721 s       4946 s     183548 s    1898419 s         39 s
#2  3510 MHz    1617880 s       4173 s     159965 s    2867839 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.16e-01
  2	2.25e-02
  3	1.06e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.25e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 8.97e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.44e-02
  2	3.13e-02
  3	1.73e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.13e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 4.55e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	3.40e-03
cg iterated maxIter (=1) times but reached only residual norm 3.40e-03 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.50e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.05e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.05e-16.
=== blockcg ===
iter	max(relres)
  1	4.88e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.88e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.12e-01
  2	2.53e-01
  3	1.73e-01
  4	1.26e-01
  5	9.55e-02
  6	6.54e-02
  7	3.71e-02
  8	1.92e-02
  9	1.01e-02
 10	5.08e-03
 11	2.35e-03
 12	1.03e-03
 13	4.12e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.12e-04.
=== blockcg ===
iter	max(relres)
  1	4.12e-01
  2	2.53e-01
  3	1.73e-01
  4	1.26e-01
  5	9.55e-02
  6	6.54e-02
  7	3.71e-02
  8	1.92e-02
  9	1.01e-02
 10	5.08e-03
 11	2.35e-03
 12	1.03e-03
 13	4.12e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.12e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	9.40e+00	3.41e-01	8.48e+00
  2	1.08e+00	4.33e-01	8.45e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.08e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.89e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.6e-02 2.5e-02 	 2.5e-02
  2	8.2e-03 3.0e-03 9.6e-04 	 9.6e-04
  3	3.2e-04 1.0e-04 3.3e-05 	 3.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.18e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-2.0886175392220467]
Givens rotation for v=[-0.6326781497928242,0.0]
Givens rotation for v=[-1.1806606921229965,1.8819603150668769]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 40. Residual norm is 9.96e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.27e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.58e-02
  3	4.06e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.06e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.54e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.77e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.91e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.05e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.52e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.52e-01	5.88e-01	4.80e+00		1.12e+00
2	2.51e-02	7.89e-02	1.60e+01		3.73e+00
3	3.30e-03	4.25e-03	1.60e+01		3.73e+00
4	4.04e-04	1.01e-03	1.60e+01		3.73e+00
5	1.59e-11	5.65e-18	1.60e+01		3.79e+00
6	1.99e-17	2.13e-22	1.60e+01		4.00e+00
minres converged at iteration 6. |A r_k|=2.13e-22 and |r_k|=1.99e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.79e-02	5.97e-01	1.52e+01		1.00e+00
2	3.48e-03	1.58e-03	1.52e+01		3.54e+00
3	4.42e-04	1.18e-03	1.52e+01		3.54e+00
4	2.11e-05	9.38e-06	1.52e+01		3.54e+00
5	1.56e-12	1.08e-18	1.52e+01		3.54e+00
6	1.46e-15	1.17e-17	1.52e+01		3.80e+00
minres converged at iteration 6. |A r_k|=1.17e-17 and |r_k|=1.46e-15.
test stop by condlim
The estimated condition number (=2.28e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 9.
test stop by beta
minres stopped because beta (=5.98e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
