>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1433.359375 MB free)
Uptime: 47960.0 sec
Load Avg:  1.1318359375  1.03125  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2303046 s       1820 s     177656 s    1832922 s        100 s
#2  3500 MHz    1606453 s       4970 s     160640 s    2869910 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.25.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.12e-01
  2	1.06e-02
  3	1.06e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.06e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.49e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.60e-02
  2	9.99e-02
  3	2.75e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 9.99e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 9.16e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.53e-01
cg iterated maxIter (=1) times but reached only residual norm 2.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.30e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.06e-15
  2	5.97e-16
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.97e-16.
=== blockcg ===
iter	max(relres)
  1	3.42e-15
blockCG iterated maxIter (=1) times but reached only residual norm 3.42e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.41e-01
  3	1.73e-01
  4	1.29e-01
  5	9.83e-02
  6	6.50e-02
  7	3.43e-02
  8	1.90e-02
  9	9.53e-03
 10	4.17e-03
 11	1.90e-03
 12	7.79e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.79e-04.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.41e-01
  3	1.73e-01
  4	1.29e-01
  5	9.83e-02
  6	6.50e-02
  7	3.43e-02
  8	1.90e-02
  9	9.53e-03
 10	4.17e-03
 11	1.90e-03
 12	7.79e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.79e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.96e+01	4.99e-01	9.16e+00
  2	4.13e+00	7.32e-01	9.04e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.13e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.58e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.5e-02 2.5e-02 	 2.5e-02
  2	7.7e-03 2.2e-03 6.1e-04 	 6.1e-04
  3	1.9e-04 6.3e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.04677523329872021]
Givens rotation for v=[-0.559245137911376,0.0]
Givens rotation for v=[1.622463772389063,1.846819210666961]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.93e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.41e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.55e-02
  3	4.09e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.09e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.42e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.29e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.08e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.01e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.78e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.78e-01	1.28e+00	6.00e+00		1.20e+00
2	1.34e-02	1.24e-02	6.82e+00		1.36e+00
3	2.28e-03	1.18e-02	9.23e+00		1.84e+00
4	2.05e-05	2.54e-06	9.23e+00		2.19e+00
5	8.62e-08	4.85e-09	9.23e+00		2.28e+00
6	1.62e-11	4.06e-14	9.23e+00		2.30e+00
7	2.54e-18	5.35e-24	9.23e+00		2.30e+00
minres converged at iteration 7. |A r_k|=5.35e-24 and |r_k|=2.54e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.84e-02	4.41e-01	6.09e+00		1.01e+00
2	1.04e-02	2.23e-02	6.09e+00		1.18e+00
3	5.03e-04	7.42e-04	9.45e+00		1.84e+00
4	4.57e-06	5.60e-07	9.45e+00		2.32e+00
5	1.97e-08	1.13e-09	9.45e+00		2.34e+00
6	3.57e-12	8.63e-15	9.45e+00		2.35e+00
7	2.15e-18	1.73e-23	9.45e+00		2.35e+00
minres converged at iteration 7. |A r_k|=1.73e-23 and |r_k|=2.15e-18.
test stop by condlim
The estimated condition number (=2.07e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=8.25e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
