>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1445.57421875 MB free)
Uptime: 48815.0 sec
Load Avg:  1.29443359375  1.0439453125  1.0380859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2361908 s       2654 s     180006 s    1807758 s        122 s
#2  3501 MHz    1525806 s       4096 s     160226 s    2949510 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.91e-02
  2	2.06e-02
  3	1.07e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.06e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 1.32e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.86e-02
  2	2.47e-02
  3	2.24e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.47e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.42e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.97e-01
cg iterated maxIter (=1) times but reached only residual norm 1.97e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.85e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.78e-15
  2	8.23e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 8.23e-30.
=== blockcg ===
iter	max(relres)
  1	9.96e-15
blockCG iterated maxIter (=1) times but reached only residual norm 9.96e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.20e-01
  2	2.49e-01
  3	1.69e-01
  4	1.18e-01
  5	8.08e-02
  6	5.11e-02
  7	3.56e-02
  8	2.69e-02
  9	1.44e-02
 10	7.08e-03
 11	3.08e-03
 12	1.35e-03
 13	5.78e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.78e-04.
=== blockcg ===
iter	max(relres)
  1	4.20e-01
  2	2.49e-01
  3	1.69e-01
  4	1.18e-01
  5	8.08e-02
  6	5.11e-02
  7	3.56e-02
  8	2.69e-02
  9	1.44e-02
 10	7.08e-03
 11	3.08e-03
 12	1.35e-03
 13	5.78e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.78e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.31e+01	4.40e-01	9.14e+00
  2	2.68e+00	5.08e-01	9.11e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.68e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.11e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.9e-02 3.4e-02 	 3.4e-02
  2	1.0e-02 3.3e-03 8.5e-04 	 8.5e-04
  3	2.5e-04 7.3e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.37e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.3862063324241752]
Givens rotation for v=[0.5692920539318821,0.0]
Givens rotation for v=[-1.0271699922350426,0.25125844020487176]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.94e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.81e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.57e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.48e-02
  3	4.02e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.02e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.11e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.66e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.68e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.96e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.16e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.16e-01	3.90e-01	5.07e+00		1.07e+00
2	2.87e-02	3.69e-02	6.10e+00		1.28e+00
3	8.89e-04	2.69e-04	6.10e+00		1.28e+00
4	6.34e-05	4.09e-05	6.10e+00		1.28e+00
5	5.87e-08	3.97e-10	6.10e+00		1.46e+00
6	4.24e-11	2.15e-13	6.10e+00		1.52e+00
7	8.77e-19	1.27e-25	6.10e+00		1.52e+00
minres converged at iteration 7. |A r_k|=1.27e-25 and |r_k|=8.77e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.43e-02	1.35e-01	5.66e+00		1.00e+00
2	4.09e-03	2.59e-03	5.66e+00		1.15e+00
3	7.94e-05	1.48e-05	5.66e+00		1.15e+00
4	9.10e-06	8.82e-06	5.66e+00		1.17e+00
5	1.04e-08	9.17e-11	5.66e+00		1.28e+00
6	7.59e-12	3.88e-14	5.66e+00		1.41e+00
7	6.21e-20	3.56e-27	5.66e+00		1.42e+00
minres converged at iteration 7. |A r_k|=3.56e-27 and |r_k|=6.21e-20.
test stop by condlim
The estimated condition number (=2.58e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.54e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
