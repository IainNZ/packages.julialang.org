>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1305.2890625 MB free)
Uptime: 60452.0 sec
Load Avg:  1.09912109375  1.0400390625  1.0498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2900617 s         58 s     243131 s    2315249 s        139 s
#2  3500 MHz    2024720 s       6193 s     216020 s    3580726 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.78e-02
  2	1.71e-01
  3	1.00e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.71e-01 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.35e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.12e-02
  2	4.32e-02
  3	2.63e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.32e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.88e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.62e-02
cg iterated maxIter (=1) times but reached only residual norm 1.62e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 6.86e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.75e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.75e-16.
=== blockcg ===
iter	max(relres)
  1	1.28e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.28e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.48e-01
  2	2.77e-01
  3	2.01e-01
  4	1.40e-01
  5	8.72e-02
  6	5.53e-02
  7	3.06e-02
  8	1.52e-02
  9	7.13e-03
 10	3.51e-03
 11	1.88e-03
 12	8.47e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.47e-04.
=== blockcg ===
iter	max(relres)
  1	4.48e-01
  2	2.77e-01
  3	2.01e-01
  4	1.40e-01
  5	8.72e-02
  6	5.53e-02
  7	3.06e-02
  8	1.52e-02
  9	7.13e-03
 10	3.51e-03
 11	1.88e-03
 12	8.47e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.47e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	7.30e+00	5.67e-01	9.32e+00
  2	6.53e-01	6.02e-01	9.30e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.53e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.15e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.4e-01 1.1e-01 3.5e-02 	 3.5e-02
  2	1.3e-02 4.1e-03 1.4e-03 	 1.4e-03
  3	4.8e-04 1.5e-04 5.1e-05 	 5.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.62e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.8876544017289794]
Givens rotation for v=[-0.2271999017139755,0.0]
Givens rotation for v=[-0.743596592062382,-2.117344990584804]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.06e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.50e-02
  3	4.03e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.03e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.96e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.52e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.93e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.42e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.65e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.65e-01	3.31e-01	5.19e+00		1.18e+00
2	2.29e-02	5.76e-02	6.90e+00		1.57e+00
3	1.41e-03	1.15e-03	6.90e+00		1.57e+00
4	2.65e-05	5.94e-06	6.90e+00		1.60e+00
5	1.79e-06	1.44e-06	6.90e+00		1.60e+00
6	8.85e-08	5.39e-08	6.90e+00		1.60e+00
7	1.21e-10	2.09e-12	6.90e+00		1.60e+00
8	1.21e-18	1.63e-25	6.90e+00		1.60e+00
minres converged at iteration 8. |A r_k|=1.63e-25 and |r_k|=1.21e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.53e-02	1.38e-01	6.67e+00		1.00e+00
2	2.22e-03	1.70e-03	6.67e+00		1.47e+00
3	7.58e-05	3.39e-05	6.67e+00		1.47e+00
4	1.90e-06	5.55e-07	6.67e+00		1.57e+00
5	1.45e-07	1.31e-07	6.67e+00		1.57e+00
6	1.71e-09	2.56e-10	6.67e+00		1.57e+00
7	1.19e-11	1.03e-12	6.67e+00		1.57e+00
8	3.40e-19	1.31e-25	6.67e+00		1.57e+00
minres converged at iteration 8. |A r_k|=1.31e-25 and |r_k|=3.40e-19.
test stop by condlim
The estimated condition number (=2.14e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=1.12e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6

>>> End of log
