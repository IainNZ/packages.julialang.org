>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1409.96484375 MB free)
Uptime: 49510.0 sec
Load Avg:  1.03662109375  1.0263671875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2369945 s       4139 s     180755 s    1903814 s        153 s
#2  3500 MHz    1671698 s       3478 s     154092 s    2930753 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.71e-02
  2	9.73e-03
  3	9.98e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 9.73e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 6.92e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.21e-02
  2	4.65e-02
  3	8.28e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.65e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.54e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.22e-01
cg iterated maxIter (=1) times but reached only residual norm 2.22e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.20e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.76e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.76e-16.
=== blockcg ===
iter	max(relres)
  1	1.07e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.07e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.61e-01
  3	2.05e-01
  4	1.70e-01
  5	1.30e-01
  6	8.56e-02
  7	5.13e-02
  8	2.57e-02
  9	1.15e-02
 10	5.56e-03
 11	2.30e-03
 12	9.55e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.55e-04.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.61e-01
  3	2.05e-01
  4	1.70e-01
  5	1.30e-01
  6	8.56e-02
  7	5.13e-02
  8	2.57e-02
  9	1.15e-02
 10	5.56e-03
 11	2.30e-03
 12	9.55e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.55e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.94e+01	9.48e-01	9.41e+00
  2	3.68e+00	1.08e+00	9.33e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.68e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.19e-13.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.1e-01 3.3e-02 	 3.3e-02
  2	1.0e-02 2.8e-03 9.2e-04 	 9.2e-04
  3	2.7e-04 8.0e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.28e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.4308471737566399]
Givens rotation for v=[0.49997307839030897,0.0]
Givens rotation for v=[-0.04767009513236209,0.8435358509461929]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 49. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 74. Residual norm is 9.88e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.52e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.65e-02
  3	4.14e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.14e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.48e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.36e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.58e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.52e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.97e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.97e-01	2.49e+00	6.41e+00		1.10e+00
2	2.64e-02	2.89e-02	8.49e+00		1.46e+00
3	8.28e-03	4.64e-02	8.49e+00		1.46e+00
4	3.90e-04	3.75e-04	9.23e+00		1.59e+00
5	5.67e-05	1.09e-04	9.23e+00		1.90e+00
6	4.07e-06	4.06e-06	9.23e+00		1.90e+00
7	2.13e-18	1.28e-29	9.23e+00		2.20e+00
minres converged at iteration 7. |A r_k|=1.28e-29 and |r_k|=2.13e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.59e-01	1.14e+00	6.67e+00		1.01e+00
2	8.60e-03	6.74e-03	7.93e+00		1.37e+00
3	2.07e-03	1.23e-02	9.08e+00		1.57e+00
4	1.01e-04	7.45e-05	9.08e+00		1.60e+00
5	7.15e-06	6.06e-06	9.08e+00		2.06e+00
6	1.17e-06	2.67e-06	9.08e+00		2.06e+00
7	1.83e-18	3.64e-29	9.08e+00		2.06e+00
minres converged at iteration 7. |A r_k|=3.64e-29 and |r_k|=1.83e-18.
test stop by condlim
The estimated condition number (=2.88e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.12e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
