>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1444.5859375 MB free)
Uptime: 45950.0 sec
Load Avg:  1.0009765625  1.0205078125  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    2251658 s       4112 s     175845 s    1687800 s         84 s
#2  3507 MHz    1479200 s       2489 s     148843 s    2792255 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.36e-02
  2	1.77e-02
  3	1.23e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.77e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.06e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.82e-02
  2	2.01e-02
  3	3.25e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.01e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.25e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.26e-01
cg iterated maxIter (=1) times but reached only residual norm 2.26e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.37e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.03e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.03e-16.
=== blockcg ===
iter	max(relres)
  1	1.10e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.10e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.46e-01
  3	1.84e-01
  4	1.33e-01
  5	9.21e-02
  6	5.86e-02
  7	3.50e-02
  8	1.93e-02
  9	9.90e-03
 10	4.95e-03
 11	2.34e-03
 12	9.06e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.06e-04.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.46e-01
  3	1.84e-01
  4	1.33e-01
  5	9.21e-02
  6	5.86e-02
  7	3.50e-02
  8	1.93e-02
  9	9.90e-03
 10	4.95e-03
 11	2.34e-03
 12	9.06e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.06e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.22e+01	3.55e-01	9.09e+00
  2	1.24e+00	4.64e-01	9.05e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.24e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.33e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.6e-02 2.9e-02 	 2.9e-02
  2	9.8e-03 3.6e-03 1.1e-03 	 1.1e-03
  3	3.6e-04 1.2e-04 3.7e-05 	 3.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.39e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.4193578078788185]
Givens rotation for v=[1.138324139590081,0.0]
Givens rotation for v=[0.602548198183954,-2.4067512324347615]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 59. Residual norm is 9.86e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.27e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.32e-02
  3	3.86e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.86e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.26e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.48e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.61e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.13e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.71e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.71e-01	2.06e+00	6.34e+00		1.10e+00
2	5.34e-02	1.42e-01	9.35e+00		1.62e+00
3	1.40e-02	5.22e-02	9.35e+00		1.69e+00
4	1.95e-03	4.24e-03	9.35e+00		1.69e+00
5	2.08e-04	4.67e-04	9.35e+00		1.69e+00
6	6.38e-06	2.26e-06	9.35e+00		2.08e+00
7	8.99e-09	1.36e-10	9.35e+00		2.25e+00
8	1.69e-17	3.28e-25	9.35e+00		2.34e+00
minres converged at iteration 8. |A r_k|=3.28e-25 and |r_k|=1.69e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.45e-01	1.13e+00	7.72e+00		1.01e+00
2	1.44e-02	1.93e-02	8.01e+00		1.41e+00
3	3.96e-03	1.55e-02	8.01e+00		1.45e+00
4	5.30e-04	1.23e-03	8.01e+00		1.45e+00
5	6.00e-05	1.30e-04	8.01e+00		1.45e+00
6	2.11e-06	8.62e-07	8.01e+00		1.77e+00
7	3.21e-09	5.28e-11	8.01e+00		1.92e+00
8	6.59e-18	1.40e-25	8.01e+00		2.00e+00
minres converged at iteration 8. |A r_k|=1.40e-25 and |r_k|=6.59e-18.
test stop by condlim
The estimated condition number (=2.12e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=1.03e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
