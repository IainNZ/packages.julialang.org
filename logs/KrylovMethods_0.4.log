>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1384.7109375 MB free)
Uptime: 50442.0 sec
Load Avg:  1.0478515625  1.001953125  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2437603 s       5463 s     201263 s    1884410 s        134 s
#2  3499 MHz    1659559 s       1832 s     175930 s    2985281 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.08e-02
  2	1.36e-02
  3	1.08e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.36e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.41e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.01e-01
  2	2.09e-02
  3	2.45e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.09e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 4.95e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.23e-01
cg iterated maxIter (=1) times but reached only residual norm 1.23e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.66e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.40e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.40e-16.
=== blockcg ===
iter	max(relres)
  1	5.27e-15
blockCG iterated maxIter (=1) times but reached only residual norm 5.27e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.33e-01
  3	1.64e-01
  4	1.33e-01
  5	1.08e-01
  6	6.68e-02
  7	3.77e-02
  8	2.21e-02
  9	1.23e-02
 10	6.46e-03
 11	3.04e-03
 12	1.34e-03
 13	5.16e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.16e-04.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.33e-01
  3	1.64e-01
  4	1.33e-01
  5	1.08e-01
  6	6.68e-02
  7	3.77e-02
  8	2.21e-02
  9	1.23e-02
 10	6.46e-03
 11	3.04e-03
 12	1.34e-03
 13	5.16e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.16e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.66e+01	4.02e-01	9.58e+00
  2	3.14e+00	5.21e-01	9.54e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.14e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.47e-06.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.1e-02 2.9e-02 	 2.9e-02
  2	9.7e-03 2.9e-03 8.4e-04 	 8.4e-04
  3	2.8e-04 9.3e-05 3.0e-05 	 3.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.46e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.39309039111077726]
Givens rotation for v=[-1.2009076210986394,0.0]
Givens rotation for v=[0.33127374830948275,1.1057270472760585]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.82e-03.
ssor achieved desired tolerance at iteration 58. Residual norm is 9.88e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.01e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.75e-02
  3	4.28e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.28e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.61e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.26e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.01e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.68e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.68e-01	5.53e+00	8.37e+00		1.09e+00
2	1.08e-01	5.14e-01	1.05e+01		1.48e+00
3	1.54e-02	5.49e-02	1.05e+01		1.48e+00
4	2.08e-03	4.23e-03	1.05e+01		2.27e+00
5	1.39e-04	2.21e-04	1.05e+01		2.27e+00
6	3.82e-06	1.62e-06	1.05e+01		2.27e+00
7	4.37e-16	6.68e-25	1.05e+01		2.60e+00
minres converged at iteration 7. |A r_k|=6.68e-25 and |r_k|=4.37e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.34e-01	2.74e+00	7.25e+00		1.02e+00
2	1.71e-02	2.64e-02	1.12e+01		1.58e+00
3	4.16e-03	1.64e-02	1.12e+01		2.27e+00
4	2.89e-04	4.58e-04	1.12e+01		2.27e+00
5	6.01e-05	2.87e-04	1.12e+01		2.27e+00
6	2.04e-06	1.16e-06	1.12e+01		2.27e+00
7	1.45e-16	1.38e-25	1.12e+01		2.76e+00
minres converged at iteration 7. |A r_k|=1.38e-25 and |r_k|=1.45e-16.
test stop by condlim
The estimated condition number (=2.32e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.60e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
