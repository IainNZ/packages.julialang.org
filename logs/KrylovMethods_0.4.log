>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1372.91796875 MB free)
Uptime: 49419.0 sec
Load Avg:  0.974609375  0.9951171875  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2394208 s       4952 s     180946 s    1858939 s        129 s
#2  3500 MHz    1650986 s       1314 s     160703 s    2951775 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.79e-02
  2	9.47e-03
  3	6.56e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.47e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 4.77e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.60e-02
  2	1.26e-02
  3	2.84e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.26e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 6.71e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.38e-01
cg iterated maxIter (=1) times but reached only residual norm 2.38e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.54e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.15e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.15e-16.
=== blockcg ===
iter	max(relres)
  1	3.54e-15
blockCG iterated maxIter (=1) times but reached only residual norm 3.54e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.18e-01
  2	2.46e-01
  3	1.88e-01
  4	1.30e-01
  5	9.54e-02
  6	6.62e-02
  7	3.93e-02
  8	2.15e-02
  9	1.07e-02
 10	4.70e-03
 11	1.94e-03
 12	7.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.56e-04.
=== blockcg ===
iter	max(relres)
  1	4.18e-01
  2	2.46e-01
  3	1.88e-01
  4	1.30e-01
  5	9.54e-02
  6	6.62e-02
  7	3.93e-02
  8	2.15e-02
  9	1.07e-02
 10	4.70e-03
 11	1.94e-03
 12	7.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.56e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.53e+01	5.26e-01	9.62e+00
  2	6.26e+00	7.56e-01	9.52e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.26e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.83e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 7.8e-02 2.3e-02 	 2.3e-02
  2	7.4e-03 2.3e-03 7.8e-04 	 7.8e-04
  3	2.1e-04 6.5e-05 2.4e-05 	 2.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.03e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.1538467429542785]
Givens rotation for v=[0.7350301179387527,0.0]
Givens rotation for v=[-0.3538316050959229,-0.441277655322587]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 1.00e-02.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.87e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.87e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.66e-02
  3	4.18e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.18e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.27e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.87e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.74e-02.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.56e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.85e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.85e-01	9.22e-01	5.21e+00		1.14e+00
2	7.19e-02	4.29e-01	1.09e+01		2.37e+00
3	6.85e-03	1.01e-02	1.09e+01		2.37e+00
4	3.67e-04	3.02e-04	1.09e+01		2.37e+00
5	2.11e-05	1.24e-05	1.09e+01		2.63e+00
6	2.68e-08	4.33e-10	1.09e+01		2.63e+00
7	8.80e-12	2.86e-14	1.09e+01		2.71e+00
8	1.47e-16	2.44e-20	1.09e+01		2.72e+00
minres converged at iteration 8. |A r_k|=2.44e-20 and |r_k|=1.47e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.05e-01	9.52e-01	1.00e+01		1.00e+00
2	1.98e-02	4.56e-02	1.00e+01		1.89e+00
3	1.67e-03	2.05e-03	1.00e+01		1.89e+00
4	5.55e-05	2.66e-05	1.00e+01		1.89e+00
5	1.96e-06	6.99e-07	1.00e+01		2.45e+00
6	4.35e-09	1.24e-10	1.00e+01		2.45e+00
7	1.44e-12	4.72e-15	1.00e+01		2.50e+00
8	1.43e-16	1.41e-19	1.00e+01		2.50e+00
minres converged at iteration 8. |A r_k|=1.41e-19 and |r_k|=1.43e-16.
test stop by condlim
The estimated condition number (=2.55e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=5.48e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
