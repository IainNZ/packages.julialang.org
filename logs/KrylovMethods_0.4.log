>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1358.77734375 MB free)
Uptime: 52414.0 sec
Load Avg:  1.0830078125  1.0419921875  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2596207 s        427 s     183119 s    1918500 s        124 s
#2  3504 MHz    1734647 s       6253 s     154944 s    3173104 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.40e-02
  2	9.88e-03
  3	2.49e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.88e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.34e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.54e-02
  2	1.55e-01
  3	1.83e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.55e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.00e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.47e-01
cg iterated maxIter (=1) times but reached only residual norm 2.47e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.47e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.61e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.61e-16.
=== blockcg ===
iter	max(relres)
  1	5.84e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.84e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.22e-01
  3	1.55e-01
  4	1.13e-01
  5	8.26e-02
  6	5.52e-02
  7	3.23e-02
  8	1.93e-02
  9	9.45e-03
 10	4.19e-03
 11	1.72e-03
 12	6.83e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.83e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.22e-01
  3	1.55e-01
  4	1.13e-01
  5	8.26e-02
  6	5.52e-02
  7	3.23e-02
  8	1.93e-02
  9	9.45e-03
 10	4.19e-03
 11	1.72e-03
 12	6.83e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.83e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.67e+01	6.27e-01	9.85e+00
  2	1.01e+01	8.74e-01	9.74e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.01e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.40e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.3e-02 2.8e-02 	 2.8e-02
  2	8.9e-03 2.4e-03 8.2e-04 	 8.2e-04
  3	2.7e-04 7.3e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.431455944466982]
Givens rotation for v=[-0.45419411945380955,0.0]
Givens rotation for v=[-1.825258144985363,0.3452589952740929]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.83e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.94e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.86e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.47e-02
  3	4.06e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.06e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.27e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.84e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.33e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.33e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.11e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.11e-01	2.31e+00	7.02e+00		1.27e+00
2	4.44e-02	1.60e-01	7.18e+00		1.30e+00
3	5.37e-03	1.54e-02	7.18e+00		1.30e+00
4	1.70e-04	1.31e-04	7.18e+00		1.30e+00
5	6.50e-18	4.43e-30	7.18e+00		1.74e+00
minres converged at iteration 5. |A r_k|=4.43e-30 and |r_k|=6.50e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.05e-01	9.30e-01	6.24e+00		1.02e+00
2	5.55e-03	6.54e-03	6.82e+00		1.25e+00
3	5.68e-04	1.35e-03	6.82e+00		1.27e+00
4	4.86e-05	1.04e-04	6.82e+00		1.27e+00
5	1.22e-17	5.54e-29	6.82e+00		1.62e+00
minres converged at iteration 5. |A r_k|=5.54e-29 and |r_k|=1.22e-17.
test stop by condlim
The estimated condition number (=2.04e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=2.45e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
