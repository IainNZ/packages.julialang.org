>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1353.78125 MB free)
Uptime: 52533.0 sec
Load Avg:  1.21923828125  1.04833984375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2482412 s        142 s     205146 s    1999872 s        118 s
#2  3499 MHz    1756057 s       6520 s     174216 s    3108288 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.66e-02
  2	1.08e-02
  3	2.49e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.08e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 2.76e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.36e-02
  2	1.88e-02
  3	8.82e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.88e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 3.88e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.46e-01
cg iterated maxIter (=1) times but reached only residual norm 2.46e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.96e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.79e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 1.79e-16.
=== blockcg ===
iter	max(relres)
  1	3.68e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.68e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.34e-01
  3	1.41e-01
  4	9.31e-02
  5	6.33e-02
  6	4.80e-02
  7	3.36e-02
  8	1.89e-02
  9	9.37e-03
 10	4.37e-03
 11	1.99e-03
 12	8.15e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.15e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.34e-01
  3	1.41e-01
  4	9.31e-02
  5	6.33e-02
  6	4.80e-02
  7	3.36e-02
  8	1.89e-02
  9	9.37e-03
 10	4.37e-03
 11	1.99e-03
 12	8.15e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.15e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.72e+01	3.76e-01	1.02e+01
  2	5.67e+00	5.29e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.67e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.47e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 7.8e-02 2.0e-02 	 2.0e-02
  2	5.6e-03 1.5e-03 4.0e-04 	 4.0e-04
  3	1.2e-04 3.6e-05 1.3e-05 	 1.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 2.98e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.5751473562335168]
Givens rotation for v=[-0.4307842144778491,0.0]
Givens rotation for v=[-1.7558030074237128,-1.2241946820256848]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.79e-03.
ssor achieved desired tolerance at iteration 40. Residual norm is 9.89e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.66e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.57e-02
  3	4.10e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.10e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.19e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.77e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.04e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.04e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.07e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.07e-01	1.87e+00	6.65e+00		1.18e+00
2	3.91e-02	9.70e-02	6.90e+00		1.22e+00
3	2.96e-03	4.03e-03	6.90e+00		1.34e+00
4	2.66e-04	6.50e-04	7.81e+00		1.51e+00
5	1.32e-05	1.33e-05	7.81e+00		1.51e+00
6	5.92e-19	3.77e-31	7.81e+00		1.93e+00
minres converged at iteration 6. |A r_k|=3.77e-31 and |r_k|=5.92e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.01e-01	6.76e-01	5.93e+00		1.02e+00
2	5.39e-03	5.27e-03	6.78e+00		1.23e+00
3	8.94e-04	2.93e-03	6.78e+00		1.23e+00
4	1.59e-05	7.25e-06	7.75e+00		1.40e+00
5	2.58e-06	6.57e-06	7.75e+00		1.74e+00
6	5.48e-20	2.10e-32	7.75e+00		1.74e+00
minres converged at iteration 6. |A r_k|=2.10e-32 and |r_k|=5.48e-20.
test stop by condlim
The estimated condition number (=2.77e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.85e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
