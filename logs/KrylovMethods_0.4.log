>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1427.66015625 MB free)
Uptime: 48994.0 sec
Load Avg:  0.94384765625  0.990234375  0.97802734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2328507 s       3286 s     178890 s    1907599 s        109 s
#2  3500 MHz    1698198 s       3339 s     151919 s    2852893 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.53e-02
  2	8.62e-03
  3	1.26e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.62e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 7.78e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.35e-02
  2	1.36e-01
  3	3.02e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.36e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.37e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.42e-01
cg iterated maxIter (=1) times but reached only residual norm 1.42e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.53e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.14e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.14e-16.
=== blockcg ===
iter	max(relres)
  1	1.33e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.33e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.17e-01
  3	1.35e-01
  4	8.33e-02
  5	6.43e-02
  6	5.93e-02
  7	4.47e-02
  8	2.42e-02
  9	1.21e-02
 10	5.66e-03
 11	2.49e-03
 12	9.63e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.63e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.17e-01
  3	1.35e-01
  4	8.33e-02
  5	6.43e-02
  6	5.93e-02
  7	4.47e-02
  8	2.42e-02
  9	1.21e-02
 10	5.66e-03
 11	2.49e-03
 12	9.63e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.63e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.58e+01	3.85e-01	9.74e+00
  2	3.09e+00	4.96e-01	9.69e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.09e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.36e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.6e-02 2.9e-02 	 2.9e-02
  2	9.6e-03 2.4e-03 7.4e-04 	 7.4e-04
  3	2.4e-04 6.4e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.76e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.0921468676590864]
Givens rotation for v=[-1.5606373130749482,0.0]
Givens rotation for v=[1.3828770399572115,-2.8846060031348664]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 47. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.15e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.63e-02
  3	4.19e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.19e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.03e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.91e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.50e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.22e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.28e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.28e-01	1.81e-01	5.10e+00		1.14e+00
2	2.98e-02	9.16e-02	5.52e+00		1.24e+00
3	3.27e-03	5.70e-03	7.19e+00		1.61e+00
4	3.12e-04	4.26e-04	7.19e+00		1.61e+00
5	1.32e-05	6.56e-06	7.19e+00		1.61e+00
6	9.17e-19	6.94e-31	7.19e+00		1.63e+00
minres converged at iteration 6. |A r_k|=6.94e-31 and |r_k|=9.17e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.36e-02	1.17e-01	5.39e+00		1.00e+00
2	6.22e-03	1.69e-02	6.87e+00		1.28e+00
3	7.22e-04	1.09e-03	6.87e+00		1.29e+00
4	1.39e-05	3.61e-06	6.87e+00		1.29e+00
5	5.61e-07	2.53e-07	6.87e+00		1.52e+00
6	6.44e-19	8.13e-30	6.87e+00		1.55e+00
minres converged at iteration 6. |A r_k|=8.13e-30 and |r_k|=6.44e-19.
test stop by condlim
The estimated condition number (=2.44e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.22e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
