>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1383.3203125 MB free)
Uptime: 51077.0 sec
Load Avg:  1.02587890625  0.98779296875  0.9619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2468179 s       4419 s     180032 s    1943360 s        110 s
#2  3500 MHz    1708928 s       2811 s     153206 s    3031772 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	1.28e-02
  3	1.64e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.28e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 5.74e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.02e-01
  2	4.04e-02
  3	3.62e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.04e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 9.94e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.22e-01
cg iterated maxIter (=1) times but reached only residual norm 2.22e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.48e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.66e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.66e-16.
=== blockcg ===
iter	max(relres)
  1	1.47e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.47e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.88e-01
  2	2.21e-01
  3	1.50e-01
  4	1.24e-01
  5	1.02e-01
  6	6.66e-02
  7	4.46e-02
  8	2.54e-02
  9	1.16e-02
 10	5.42e-03
 11	2.47e-03
 12	9.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.89e-04.
=== blockcg ===
iter	max(relres)
  1	3.88e-01
  2	2.21e-01
  3	1.50e-01
  4	1.24e-01
  5	1.02e-01
  6	6.66e-02
  7	4.46e-02
  8	2.54e-02
  9	1.16e-02
 10	5.42e-03
 11	2.47e-03
 12	9.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.89e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.49e+01	8.84e-01	1.07e+01
  2	5.57e+00	1.05e+00	1.06e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.57e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.83e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.2e-02 2.8e-02 	 2.8e-02
  2	8.2e-03 2.4e-03 6.5e-04 	 6.5e-04
  3	2.0e-04 6.3e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.78e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.7021595058022555]
Givens rotation for v=[-1.1680850218014023,0.0]
Givens rotation for v=[0.1923789880634416,-0.7010406354386262]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.89e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 9.96e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.97e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.49e-02
  3	4.01e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.01e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.21e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.76e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.56e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.02e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.86e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.86e-01	1.71e+00	6.50e+00		1.34e+00
2	2.27e-02	4.90e-02	7.39e+00		1.52e+00
3	4.06e-03	1.81e-02	7.39e+00		1.52e+00
4	3.82e-04	7.67e-04	7.39e+00		1.52e+00
5	2.04e-05	3.09e-05	7.39e+00		1.52e+00
6	6.66e-07	4.17e-07	7.39e+00		1.66e+00
7	1.12e-10	3.28e-13	7.39e+00		1.82e+00
8	4.31e-17	2.86e-22	7.39e+00		1.85e+00
minres converged at iteration 8. |A r_k|=2.86e-22 and |r_k|=4.31e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.44e-02	7.04e-01	6.67e+00		1.02e+00
2	5.45e-03	7.10e-03	6.67e+00		1.36e+00
3	6.50e-04	2.10e-03	6.67e+00		1.36e+00
4	1.07e-04	3.73e-04	6.67e+00		1.36e+00
5	2.69e-06	1.77e-06	6.67e+00		1.36e+00
6	1.28e-07	1.14e-07	6.67e+00		1.53e+00
7	2.37e-11	7.84e-14	6.67e+00		1.62e+00
8	9.15e-18	6.08e-23	6.67e+00		1.67e+00
minres converged at iteration 8. |A r_k|=6.08e-23 and |r_k|=9.15e-18.
test stop by condlim
The estimated condition number (=3.47e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.59e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
