>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1446.296875 MB free)
Uptime: 46956.0 sec
Load Avg:  1.0029296875  1.0146484375  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2248454 s       6912 s     175406 s    1795243 s        110 s
#2  3500 MHz    1516976 s         42 s     155344 s    2837097 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.06e-01
  2	5.98e-02
  3	1.00e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 5.98e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 1.22e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.57e-02
  2	4.80e-02
  3	2.54e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.80e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 6.15e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.39e-01
cg iterated maxIter (=1) times but reached only residual norm 2.39e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.90e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.56e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.56e-16.
=== blockcg ===
iter	max(relres)
  1	3.69e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.69e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.99e-01
  2	2.29e-01
  3	1.71e-01
  4	1.33e-01
  5	1.10e-01
  6	7.78e-02
  7	4.63e-02
  8	2.58e-02
  9	1.36e-02
 10	5.99e-03
 11	2.42e-03
 12	9.79e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.79e-04.
=== blockcg ===
iter	max(relres)
  1	3.99e-01
  2	2.29e-01
  3	1.71e-01
  4	1.33e-01
  5	1.10e-01
  6	7.78e-02
  7	4.63e-02
  8	2.58e-02
  9	1.36e-02
 10	5.99e-03
 11	2.42e-03
 12	9.79e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.79e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.14e+01	8.46e-01	8.98e+00
  2	5.66e+00	1.01e+00	8.88e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.66e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.71e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 1.0e-01 3.0e-02 	 3.0e-02
  2	9.4e-03 2.6e-03 8.3e-04 	 8.3e-04
  3	2.7e-04 9.6e-05 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.29e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-2.0760878518326558]
Givens rotation for v=[1.629116534915424,0.0]
Givens rotation for v=[-0.4500485409929473,-1.9013674675016667]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 9.70e-03.
ssor achieved desired tolerance at iteration 48. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.28e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.48e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.30e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.55e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.76e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.25e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.77e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.77e-01	3.17e+00	9.54e+00		1.03e+00
2	5.83e-02	1.16e-01	9.54e+00		1.67e+00
3	6.09e-03	7.69e-03	9.54e+00		1.89e+00
4	2.03e-04	8.14e-05	9.54e+00		1.92e+00
5	4.70e-06	1.15e-06	9.54e+00		2.19e+00
6	9.12e-08	1.77e-08	9.54e+00		2.31e+00
7	2.78e-16	8.77e-24	9.54e+00		2.31e+00
minres converged at iteration 7. |A r_k|=8.77e-24 and |r_k|=2.78e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.51e-01	8.32e-01	5.78e+00		1.01e+00
2	2.85e-02	1.04e-01	1.07e+01		1.88e+00
3	3.01e-03	3.97e-03	1.07e+01		2.05e+00
4	1.14e-04	5.31e-05	1.07e+01		2.10e+00
5	2.75e-06	6.99e-07	1.07e+01		2.45e+00
6	5.20e-08	9.88e-09	1.07e+01		2.59e+00
7	3.66e-16	2.66e-23	1.07e+01		2.59e+00
minres converged at iteration 7. |A r_k|=2.66e-23 and |r_k|=3.66e-16.
test stop by condlim
The estimated condition number (=2.82e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.36e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
