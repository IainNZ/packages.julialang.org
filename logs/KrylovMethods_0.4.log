>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1443.70703125 MB free)
Uptime: 50949.0 sec
Load Avg:  0.9326171875  0.96875  0.98291015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2376945 s       1469 s     176526 s    2039544 s        129 s
#2  3500 MHz    1581624 s       4450 s     150690 s    3155610 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.25.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.82e-02
  2	1.38e-02
  3	2.75e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.38e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.94e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.03e-02
  2	5.24e-02
  3	3.82e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.24e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.30e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.82e-01
cg iterated maxIter (=1) times but reached only residual norm 1.82e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.83e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.08e-13
  2	1.21e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.21e-28.
=== blockcg ===
iter	max(relres)
  1	8.95e-16
blockCG iterated maxIter (=1) times but reached only residual norm 8.95e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.16e-01
  3	1.49e-01
  4	1.09e-01
  5	6.95e-02
  6	4.61e-02
  7	2.88e-02
  8	1.59e-02
  9	8.07e-03
 10	3.65e-03
 11	1.50e-03
 12	5.75e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.75e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.16e-01
  3	1.49e-01
  4	1.09e-01
  5	6.95e-02
  6	4.61e-02
  7	2.88e-02
  8	1.59e-02
  9	8.07e-03
 10	3.65e-03
 11	1.50e-03
 12	5.75e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.75e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.48e+01	5.56e-01	9.57e+00
  2	2.11e+00	6.35e-01	9.53e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.11e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.09e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.5e-01 1.1e-01 3.6e-02 	 3.6e-02
  2	1.1e-02 3.0e-03 1.0e-03 	 1.0e-03
  3	3.4e-04 1.0e-04 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.97e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.18973745137094453]
Givens rotation for v=[-0.9343219594941212,0.0]
Givens rotation for v=[0.2731538861621844,-0.5368828397976818]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.73e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.84e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.05e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.65e-02
  3	4.13e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.13e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.37e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.94e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.43e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.03e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.60e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.60e-01	1.30e+00	6.36e+00		1.23e+00
2	4.86e-02	2.12e-01	7.17e+00		1.39e+00
3	1.16e-02	5.86e-02	7.17e+00		1.39e+00
4	3.56e-05	2.68e-06	7.44e+00		1.44e+00
5	1.98e-08	1.64e-10	7.44e+00		1.85e+00
6	5.08e-18	1.95e-26	7.44e+00		1.86e+00
minres converged at iteration 6. |A r_k|=1.95e-26 and |r_k|=5.08e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.14e-02	6.13e-01	6.53e+00		1.01e+00
2	1.26e-02	3.64e-02	6.53e+00		1.24e+00
3	1.12e-03	2.76e-03	7.77e+00		1.48e+00
4	8.81e-06	1.31e-06	7.77e+00		1.52e+00
5	4.94e-09	4.14e-11	7.77e+00		1.94e+00
6	3.00e-18	2.73e-26	7.77e+00		1.94e+00
minres converged at iteration 6. |A r_k|=2.73e-26 and |r_k|=3.00e-18.
test stop by condlim
The estimated condition number (=2.11e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=5.04e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
