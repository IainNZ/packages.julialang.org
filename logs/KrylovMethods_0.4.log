>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1437.81640625 MB free)
Uptime: 47456.0 sec
Load Avg:  0.89404296875  0.9521484375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2292164 s       6266 s     170871 s    1806454 s         82 s
#2  3500 MHz    1602942 s       1184 s     145516 s    2822947 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.25.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	3.62e-02
  3	4.75e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 3.62e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.63e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.94e-02
  2	1.64e-02
  3	3.28e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.64e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.59e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	6.34e-02
cg iterated maxIter (=1) times but reached only residual norm 6.34e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.55e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.25e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.25e-16.
=== blockcg ===
iter	max(relres)
  1	4.94e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.94e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.21e-01
  2	2.61e-01
  3	1.86e-01
  4	1.58e-01
  5	1.36e-01
  6	9.47e-02
  7	5.02e-02
  8	2.66e-02
  9	1.45e-02
 10	7.11e-03
 11	3.25e-03
 12	1.31e-03
 13	5.23e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.23e-04.
=== blockcg ===
iter	max(relres)
  1	4.21e-01
  2	2.61e-01
  3	1.86e-01
  4	1.58e-01
  5	1.36e-01
  6	9.47e-02
  7	5.02e-02
  8	2.66e-02
  9	1.45e-02
 10	7.11e-03
 11	3.25e-03
 12	1.31e-03
 13	5.23e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.23e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.37e+01	3.86e-01	9.52e+00
  2	3.94e+00	5.56e-01	9.44e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.94e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.74e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.1e-02 2.4e-02 	 2.4e-02
  2	6.7e-03 2.0e-03 5.6e-04 	 5.6e-04
  3	1.9e-04 5.3e-05 1.3e-05 	 1.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.62e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.5498329199741413]
Givens rotation for v=[-2.6948545723475297,0.0]
Givens rotation for v=[0.5768964266911358,1.134929215149226]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.51e-03.
ssor achieved desired tolerance at iteration 39. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.02e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.73e-02
  3	4.19e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.19e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.19e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.78e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.94e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.07e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.17e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.17e-01	1.18e+00	5.74e+00		1.09e+00
2	7.14e-02	2.30e-01	7.85e+00		1.48e+00
3	4.22e-03	3.78e-03	7.85e+00		1.48e+00
4	6.69e-04	1.39e-03	7.85e+00		1.48e+00
5	3.95e-05	2.30e-05	7.85e+00		1.75e+00
6	1.24e-07	4.53e-09	7.85e+00		1.75e+00
7	3.50e-10	8.85e-12	7.85e+00		1.95e+00
8	2.98e-18	2.26e-25	7.85e+00		1.96e+00
minres converged at iteration 8. |A r_k|=2.26e-25 and |r_k|=2.98e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.19e-01	6.75e-01	6.79e+00		1.01e+00
2	1.64e-02	2.66e-02	7.61e+00		1.33e+00
3	7.02e-04	4.38e-04	7.61e+00		1.33e+00
4	1.43e-04	3.30e-04	7.61e+00		1.50e+00
5	2.41e-06	4.46e-07	7.61e+00		1.50e+00
6	3.44e-08	5.75e-09	7.61e+00		1.50e+00
7	9.86e-11	2.54e-12	7.61e+00		1.89e+00
8	2.24e-18	4.54e-25	7.61e+00		1.90e+00
minres converged at iteration 8. |A r_k|=4.54e-25 and |r_k|=2.24e-18.
test stop by condlim
The estimated condition number (=2.45e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.30e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
