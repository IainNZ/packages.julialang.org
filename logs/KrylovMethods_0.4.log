>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1457.26171875 MB free)
Uptime: 45394.0 sec
Load Avg:  1.0751953125  1.001953125  0.97216796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2203582 s       6404 s     178752 s    1675850 s         85 s
#2  3500 MHz    1502402 s        441 s     157498 s    2730433 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.23.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.73e-02
  2	1.53e-02
  3	9.99e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.53e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.60e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.69e-02
  2	5.27e-02
  3	9.63e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.27e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.79e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.35e-01
cg iterated maxIter (=1) times but reached only residual norm 2.35e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.62e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.13e-15
  2	1.10e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.10e-28.
=== blockcg ===
iter	max(relres)
  1	1.65e-16
blockCG iterated maxIter (=1) times but reached only residual norm 1.65e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.63e-01
  3	1.98e-01
  4	1.51e-01
  5	1.13e-01
  6	7.02e-02
  7	4.17e-02
  8	2.49e-02
  9	1.28e-02
 10	5.65e-03
 11	2.51e-03
 12	1.08e-03
 13	4.75e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.75e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.63e-01
  3	1.98e-01
  4	1.51e-01
  5	1.13e-01
  6	7.02e-02
  7	4.17e-02
  8	2.49e-02
  9	1.28e-02
 10	5.65e-03
 11	2.51e-03
 12	1.08e-03
 13	4.75e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.75e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	6.74e+00	1.87e-01	1.02e+01
  2	8.58e-01	2.47e-01	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.58e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.48e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.4e-01 9.8e-02 2.8e-02 	 2.8e-02
  2	8.8e-03 2.5e-03 8.0e-04 	 8.0e-04
  3	2.5e-04 7.8e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.36e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.0859369500461116]
Givens rotation for v=[0.22015582511228474,0.0]
Givens rotation for v=[2.8452059319937923,1.4377603480601286]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.79e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 9.86e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.99e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.61e-02
  3	4.11e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.11e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.16e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.73e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.00e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.02e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.78e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.78e-01	4.86e-01	5.64e+00		1.27e+00
2	2.64e-02	9.25e-02	7.23e+00		1.62e+00
3	1.85e-03	2.11e-03	7.23e+00		1.62e+00
4	8.32e-05	5.76e-05	7.23e+00		1.62e+00
5	1.62e-06	7.89e-07	7.23e+00		1.62e+00
6	5.10e-08	2.24e-08	7.23e+00		1.79e+00
7	2.87e-19	3.66e-29	7.23e+00		1.79e+00
minres converged at iteration 7. |A r_k|=3.66e-29 and |r_k|=2.87e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.06e-02	2.23e-01	6.96e+00		1.00e+00
2	2.26e-03	1.92e-03	6.96e+00		1.54e+00
3	1.25e-04	1.14e-04	6.96e+00		1.54e+00
4	3.07e-05	1.46e-04	6.96e+00		1.54e+00
5	1.85e-07	2.11e-08	6.96e+00		1.54e+00
6	2.19e-08	3.71e-08	6.96e+00		1.68e+00
7	2.62e-20	6.85e-31	6.96e+00		1.68e+00
minres converged at iteration 7. |A r_k|=6.85e-31 and |r_k|=2.62e-20.
test stop by condlim
The estimated condition number (=2.84e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 8.
test stop by beta
minres stopped because beta (=2.43e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
