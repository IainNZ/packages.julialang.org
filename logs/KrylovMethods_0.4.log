>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1412.28125 MB free)
Uptime: 48455.0 sec
Load Avg:  0.984375  0.9482421875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    2328543 s       4234 s     176814 s    1850204 s        106 s
#2  3497 MHz    1637354 s       2078 s     154788 s    2836578 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.33e-02
  2	1.02e-02
  3	3.23e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.02e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.31e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.61e-02
  2	1.08e-01
  3	2.19e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.08e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.94e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.76e-02
cg iterated maxIter (=1) times but reached only residual norm 2.76e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.39e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.67e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.67e-16.
=== blockcg ===
iter	max(relres)
  1	1.09e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.09e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.52e-01
  3	1.81e-01
  4	1.37e-01
  5	9.23e-02
  6	6.84e-02
  7	4.40e-02
  8	2.62e-02
  9	1.36e-02
 10	6.30e-03
 11	2.88e-03
 12	1.15e-03
 13	4.29e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.29e-04.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.52e-01
  3	1.81e-01
  4	1.37e-01
  5	9.23e-02
  6	6.84e-02
  7	4.40e-02
  8	2.62e-02
  9	1.36e-02
 10	6.30e-03
 11	2.88e-03
 12	1.15e-03
 13	4.29e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.29e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.40e+01	5.56e-01	1.04e+01
  2	7.54e+00	7.31e-01	1.03e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.54e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.39e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 8.2e-02 2.3e-02 	 2.3e-02
  2	8.1e-03 2.5e-03 7.7e-04 	 7.7e-04
  3	2.5e-04 7.8e-05 2.5e-05 	 2.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.27e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.0722925144268576]
Givens rotation for v=[1.2199055279481164,0.0]
Givens rotation for v=[0.9652743868570661,-0.2570120693113705]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.73e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.99e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.65e-02
  3	4.17e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.17e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.43e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.30e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.77e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.47e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.87e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.87e-01	1.06e+00	5.92e+00		1.09e+00
2	4.03e-02	7.68e-02	6.91e+00		1.27e+00
3	8.69e-03	2.87e-02	6.91e+00		1.27e+00
4	1.09e-03	1.64e-03	6.91e+00		1.33e+00
5	1.74e-04	4.06e-04	6.91e+00		1.33e+00
6	3.64e-06	1.01e-06	6.91e+00		1.33e+00
7	4.38e-08	5.29e-09	6.91e+00		1.63e+00
8	7.70e-20	1.38e-30	6.91e+00		1.63e+00
minres converged at iteration 8. |A r_k|=1.38e-30 and |r_k|=7.70e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.05e-02	4.04e-01	6.05e+00		1.01e+00
2	1.10e-02	1.68e-02	6.74e+00		1.21e+00
3	1.95e-03	5.47e-03	6.92e+00		1.24e+00
4	2.34e-04	3.19e-04	6.92e+00		1.41e+00
5	1.67e-05	1.88e-05	6.92e+00		1.41e+00
6	8.91e-07	5.86e-07	6.92e+00		1.41e+00
7	1.05e-08	1.24e-09	6.92e+00		1.61e+00
8	4.32e-20	1.82e-30	6.92e+00		1.61e+00
minres converged at iteration 8. |A r_k|=1.82e-30 and |r_k|=4.32e-20.
test stop by condlim
The estimated condition number (=2.81e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.57e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
