>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1439.54296875 MB free)
Uptime: 46614.0 sec
Load Avg:  0.998046875  0.98583984375  0.96484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2311589 s       2519 s     177216 s    1694994 s        208 s
#2  3499 MHz    1481414 s       5246 s     155122 s    2821097 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.22.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.38e-02
  2	1.75e-02
  3	7.46e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.75e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.67e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.86e-02
  2	2.14e-02
  3	2.15e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.14e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 4.19e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.90e-01
cg iterated maxIter (=1) times but reached only residual norm 1.90e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.21e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	9.60e-15
  2	5.17e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.17e-28.
=== blockcg ===
iter	max(relres)
  1	6.23e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.23e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.28e-01
  3	1.52e-01
  4	1.13e-01
  5	9.06e-02
  6	6.93e-02
  7	4.48e-02
  8	2.59e-02
  9	1.33e-02
 10	6.55e-03
 11	3.32e-03
 12	1.46e-03
 13	5.51e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.51e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.28e-01
  3	1.52e-01
  4	1.13e-01
  5	9.06e-02
  6	6.93e-02
  7	4.48e-02
  8	2.59e-02
  9	1.33e-02
 10	6.55e-03
 11	3.32e-03
 12	1.46e-03
 13	5.51e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.51e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.27e+01	4.50e-01	9.62e+00
  2	2.64e+00	5.30e-01	9.58e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.64e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.22e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 7.9e-02 2.5e-02 	 2.5e-02
  2	7.8e-03 2.5e-03 7.6e-04 	 7.6e-04
  3	2.4e-04 7.0e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.63e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.2682414012630487]
Givens rotation for v=[0.0800566814345524,0.0]
Givens rotation for v=[0.927743555550393,0.1568754351280095]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.62e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.26e-02
  3	3.81e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.81e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.54e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.78e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.08e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.51e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 7.85e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.85e-02	8.46e-02	5.29e+00		1.29e+00
2	3.31e-04	2.49e-05	5.39e+00		1.32e+00
3	4.80e-05	1.15e-04	5.39e+00		1.32e+00
4	3.36e-10	3.48e-14	5.39e+00		1.32e+00
5	1.41e-21	7.97e-32	5.39e+00		1.35e+00
minres converged at iteration 5. |A r_k|=7.97e-32 and |r_k|=1.41e-21.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.18e-03	8.70e-03	5.34e+00		1.00e+00
2	8.49e-05	1.60e-05	5.34e+00		1.31e+00
3	1.15e-06	2.86e-07	5.46e+00		1.34e+00
4	8.25e-12	7.97e-16	5.46e+00		1.36e+00
5	4.91e-21	3.93e-29	5.46e+00		1.37e+00
minres converged at iteration 5. |A r_k|=3.93e-29 and |r_k|=4.91e-21.
test stop by condlim
The estimated condition number (=2.19e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=3.89e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
