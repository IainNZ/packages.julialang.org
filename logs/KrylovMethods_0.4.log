>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1380.84765625 MB free)
Uptime: 50903.0 sec
Load Avg:  0.9736328125  1.041015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2475104 s       6183 s     186524 s    1953943 s        116 s
#2  3499 MHz    1731196 s         43 s     163832 s    2998329 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.88e-02
  2	7.51e-03
  3	5.56e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.51e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 3.74e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.02e-01
  2	5.11e-02
  3	2.15e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.11e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.49e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.47e-01
cg iterated maxIter (=1) times but reached only residual norm 2.47e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.75e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.42e-12
  2	7.17e-27
blockCG achieved desired tolerance at iteration 2. Residual norm is 7.17e-27.
=== blockcg ===
iter	max(relres)
  1	4.60e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.60e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.50e-01
  3	2.19e-01
  4	1.89e-01
  5	1.21e-01
  6	6.48e-02
  7	3.58e-02
  8	2.01e-02
  9	1.03e-02
 10	5.30e-03
 11	2.36e-03
 12	9.37e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.37e-04.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.50e-01
  3	2.19e-01
  4	1.89e-01
  5	1.21e-01
  6	6.48e-02
  7	3.58e-02
  8	2.01e-02
  9	1.03e-02
 10	5.30e-03
 11	2.36e-03
 12	9.37e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.37e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.34e+01	5.12e-01	8.79e+00
  2	6.59e-01	6.08e-01	8.76e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.59e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.35e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 2.7e-02 	 2.7e-02
  2	6.9e-03 2.0e-03 6.1e-04 	 6.1e-04
  3	1.7e-04 4.9e-05 1.4e-05 	 1.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.71e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.9383315773554898]
Givens rotation for v=[1.222216375084613,0.0]
Givens rotation for v=[-0.039665055112863966,-0.15850508632430058]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.88e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.85e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.06e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.47e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.73e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.98e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.87e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.57e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.47e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.47e-01	1.04e+00	6.05e+00		1.21e+00
2	2.31e-02	4.39e-02	6.79e+00		1.36e+00
3	2.76e-03	5.31e-03	6.79e+00		1.43e+00
4	1.08e-04	7.11e-05	6.79e+00		1.43e+00
5	1.37e-06	2.48e-07	6.79e+00		1.62e+00
6	2.60e-08	7.10e-09	6.79e+00		1.62e+00
7	9.81e-18	5.64e-26	6.79e+00		1.62e+00
minres converged at iteration 7. |A r_k|=5.64e-26 and |r_k|=9.81e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.46e-02	3.56e-01	6.22e+00		1.01e+00
2	3.14e-03	2.47e-03	6.22e+00		1.26e+00
3	2.39e-04	2.75e-04	6.22e+00		1.40e+00
4	1.92e-05	2.73e-05	6.22e+00		1.40e+00
5	2.45e-07	4.58e-08	6.22e+00		1.44e+00
6	3.41e-09	6.84e-10	6.22e+00		1.47e+00
7	4.55e-19	9.27e-28	6.22e+00		1.47e+00
minres converged at iteration 7. |A r_k|=9.27e-28 and |r_k|=4.55e-19.
test stop by condlim
The estimated condition number (=2.08e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 9.
test stop by beta
minres stopped because beta (=4.33e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
