>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1367.65234375 MB free)
Uptime: 50575.0 sec
Load Avg:  0.96728515625  0.998046875  0.9658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2327917 s         75 s     185264 s    2019840 s         35 s
#2  3499 MHz    1699626 s       5750 s     156225 s    3041826 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.21e-01
  2	1.57e-02
  3	3.40e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.57e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 1.84e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.04e-01
  2	2.40e-02
  3	2.25e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.40e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.90e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.07e-01
cg iterated maxIter (=1) times but reached only residual norm 2.07e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.41e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.25e-15
  2	2.74e-24
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.74e-24.
=== blockcg ===
iter	max(relres)
  1	3.34e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.34e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.46e-01
  3	1.71e-01
  4	1.20e-01
  5	9.48e-02
  6	7.01e-02
  7	4.43e-02
  8	2.69e-02
  9	1.46e-02
 10	7.34e-03
 11	3.16e-03
 12	1.31e-03
 13	5.49e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.49e-04.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.46e-01
  3	1.71e-01
  4	1.20e-01
  5	9.48e-02
  6	7.01e-02
  7	4.43e-02
  8	2.69e-02
  9	1.46e-02
 10	7.34e-03
 11	3.16e-03
 12	1.31e-03
 13	5.49e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.49e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.71e+01	4.27e-01	9.52e+00
  2	5.32e+00	5.71e-01	9.46e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.32e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.04e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.8e-02 3.4e-02 	 3.4e-02
  2	1.0e-02 3.3e-03 9.9e-04 	 9.9e-04
  3	3.0e-04 1.0e-04 3.5e-05 	 3.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.86e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.36679045162053314]
Givens rotation for v=[0.05487087523184341,0.0]
Givens rotation for v=[-0.028522750219772734,-0.29311047106821964]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.85e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.58e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.35e-02
  3	3.87e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.87e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.10e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.32e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.32e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.78e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.50e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.50e-01	3.70e+00	6.91e+00		1.10e+00
2	1.05e-01	5.30e-01	1.10e+01		1.75e+00
3	2.21e-02	1.15e-01	1.10e+01		1.75e+00
4	3.12e-03	7.36e-03	1.10e+01		1.88e+00
5	2.24e-04	2.13e-04	1.10e+01		2.40e+00
6	1.01e-05	7.37e-06	1.10e+01		2.40e+00
7	1.09e-07	1.49e-08	1.10e+01		2.52e+00
8	1.68e-17	3.04e-26	1.10e+01		2.74e+00
minres converged at iteration 8. |A r_k|=3.04e-26 and |r_k|=1.68e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.20e-01	2.57e+00	8.35e+00		1.01e+00
2	3.55e-02	9.47e-02	1.05e+01		1.61e+00
3	5.79e-03	2.38e-02	1.05e+01		1.61e+00
4	9.33e-04	2.16e-03	1.05e+01		2.09e+00
5	4.51e-05	3.20e-05	1.05e+01		2.09e+00
6	3.77e-06	5.07e-06	1.05e+01		2.09e+00
7	4.67e-08	7.47e-09	1.05e+01		2.35e+00
8	3.04e-17	2.32e-25	1.05e+01		2.60e+00
minres converged at iteration 8. |A r_k|=2.32e-25 and |r_k|=3.04e-17.
test stop by condlim
The estimated condition number (=3.47e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.35e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6

>>> End of log
