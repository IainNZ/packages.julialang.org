>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1441.94921875 MB free)
Uptime: 46635.0 sec
Load Avg:  0.9775390625  0.998046875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2264314 s       3414 s     182628 s    1743617 s        104 s
#2  3499 MHz    1523932 s       4056 s     159135 s    2806907 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.02e-01
  2	9.70e-03
  3	9.73e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 9.70e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 7.46e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.42e-02
  2	1.33e-02
  3	4.94e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.33e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.75e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.40e-01
cg iterated maxIter (=1) times but reached only residual norm 1.40e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.55e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.56e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.56e-16.
=== blockcg ===
iter	max(relres)
  1	7.01e-14
blockCG iterated maxIter (=1) times but reached only residual norm 7.01e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.37e-01
  3	1.66e-01
  4	1.15e-01
  5	8.55e-02
  6	5.38e-02
  7	3.11e-02
  8	1.82e-02
  9	9.87e-03
 10	4.84e-03
 11	2.24e-03
 12	1.05e-03
 13	4.72e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.72e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.37e-01
  3	1.66e-01
  4	1.15e-01
  5	8.55e-02
  6	5.38e-02
  7	3.11e-02
  8	1.82e-02
  9	9.87e-03
 10	4.84e-03
 11	2.24e-03
 12	1.05e-03
 13	4.72e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.72e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.69e+01	9.95e-01	1.04e+01
  2	8.19e+00	1.24e+00	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.19e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.06e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 7.7e-02 2.2e-02 	 2.2e-02
  2	6.8e-03 2.0e-03 5.6e-04 	 5.6e-04
  3	1.7e-04 5.9e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.83e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.7260477448659105]
Givens rotation for v=[0.8243107916893908,0.0]
Givens rotation for v=[0.3335578950782524,-1.3408546675639426]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.82e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.43e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.62e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.85e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.38e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.32e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.72e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.72e-01	1.46e+00	6.38e+00		1.26e+00
2	4.31e-02	1.60e-01	7.00e+00		1.39e+00
3	3.45e-03	6.49e-03	7.00e+00		1.39e+00
4	3.38e-04	7.48e-04	7.00e+00		1.39e+00
5	8.34e-06	3.38e-06	7.00e+00		1.65e+00
6	3.49e-08	2.34e-09	7.00e+00		1.70e+00
7	9.74e-11	4.28e-12	7.00e+00		1.73e+00
8	2.11e-14	7.17e-17	7.00e+00		1.73e+00
minres converged at iteration 8. |A r_k|=7.17e-17 and |r_k|=2.11e-14.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.43e-02	6.34e-01	6.32e+00		1.01e+00
2	7.35e-03	1.24e-02	6.41e+00		1.23e+00
3	3.98e-04	5.22e-04	6.41e+00		1.23e+00
4	6.16e-05	1.85e-04	6.41e+00		1.29e+00
5	1.78e-06	9.25e-07	6.41e+00		1.37e+00
6	8.08e-09	5.92e-10	6.41e+00		1.55e+00
7	2.26e-11	9.92e-13	6.41e+00		1.59e+00
8	4.84e-15	1.63e-17	6.41e+00		1.59e+00
minres converged at iteration 8. |A r_k|=1.63e-17 and |r_k|=4.84e-15.
test stop by condlim
The estimated condition number (=2.81e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.12e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
