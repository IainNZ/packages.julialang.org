>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1453.89453125 MB free)
Uptime: 46247.0 sec
Load Avg:  1.01416015625  1.0029296875  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    2280090 s       6744 s     178408 s    1677057 s         96 s
#2  3515 MHz    1421079 s         94 s     153453 s    2874698 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.75e-02
  2	2.64e-02
  3	1.36e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.64e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.69e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.86e-02
  2	6.52e-02
  3	1.06e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 6.52e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.86e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.12e-02
cg iterated maxIter (=1) times but reached only residual norm 2.12e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.78e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.91e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.91e-16.
=== blockcg ===
iter	max(relres)
  1	7.86e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.86e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.39e-01
  2	2.53e-01
  3	2.02e-01
  4	1.92e-01
  5	1.38e-01
  6	7.64e-02
  7	3.71e-02
  8	1.97e-02
  9	1.04e-02
 10	5.21e-03
 11	2.56e-03
 12	1.28e-03
 13	5.99e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.99e-04.
=== blockcg ===
iter	max(relres)
  1	4.39e-01
  2	2.53e-01
  3	2.02e-01
  4	1.92e-01
  5	1.38e-01
  6	7.64e-02
  7	3.71e-02
  8	1.97e-02
  9	1.04e-02
 10	5.21e-03
 11	2.56e-03
 12	1.28e-03
 13	5.99e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.99e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.20e+00	3.45e-01	1.02e+01
  2	2.08e+00	4.07e-01	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.08e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.19e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.4e-02 2.5e-02 	 2.5e-02
  2	8.5e-03 2.6e-03 8.2e-04 	 8.2e-04
  3	2.3e-04 6.6e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.8269921940300634]
Givens rotation for v=[2.0516807292065904,0.0]
Givens rotation for v=[0.29254980611975107,0.6947133458495091]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 25. Residual norm is 9.90e-03.
ssor achieved desired tolerance at iteration 38. Residual norm is 9.73e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.20e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.42e-02
  3	3.93e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.93e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.58e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.82e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.37e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.10e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.87e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.87e-01	5.62e-01	5.85e+00		1.22e+00
2	4.01e-02	1.80e-01	6.75e+00		1.41e+00
3	3.65e-03	5.66e-03	6.75e+00		1.41e+00
4	4.40e-04	9.70e-04	6.75e+00		1.41e+00
5	1.67e-05	9.49e-06	6.75e+00		1.50e+00
6	1.26e-06	1.70e-06	6.75e+00		1.50e+00
7	3.08e-08	1.26e-08	6.75e+00		1.50e+00
8	3.21e-19	5.22e-29	6.75e+00		1.50e+00
minres converged at iteration 8. |A r_k|=5.22e-29 and |r_k|=3.21e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.23e-02	3.12e-01	6.43e+00		1.00e+00
2	4.42e-03	5.92e-03	6.43e+00		1.30e+00
3	4.46e-04	8.45e-04	6.43e+00		1.30e+00
4	3.86e-05	5.13e-05	6.43e+00		1.39e+00
5	2.07e-06	1.81e-06	6.43e+00		1.39e+00
6	3.77e-08	1.27e-08	6.43e+00		1.39e+00
7	2.90e-10	3.46e-11	6.43e+00		1.39e+00
8	1.66e-19	1.54e-27	6.43e+00		1.39e+00
minres converged at iteration 8. |A r_k|=1.54e-27 and |r_k|=1.66e-19.
test stop by condlim
The estimated condition number (=2.33e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=9.75e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
