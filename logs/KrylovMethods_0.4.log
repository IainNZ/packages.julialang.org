>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1448.0546875 MB free)
Uptime: 46392.0 sec
Load Avg:  0.99169921875  0.99365234375  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2230246 s       4275 s     185321 s    1773328 s         89 s
#2  3499 MHz    1559842 s       3027 s     164474 s    2752594 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.09e-01
  2	1.60e-02
  3	3.89e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.60e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 8. Residual norm is 3.72e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.11e-02
  2	1.94e-02
  3	1.97e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.94e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.28e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.54e-01
cg iterated maxIter (=1) times but reached only residual norm 2.54e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 25. Residual norm is 4.65e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.69e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.69e-16.
=== blockcg ===
iter	max(relres)
  1	2.80e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.80e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.48e-01
  3	1.93e-01
  4	1.45e-01
  5	9.74e-02
  6	6.27e-02
  7	4.29e-02
  8	3.12e-02
  9	1.92e-02
 10	1.03e-02
 11	4.60e-03
 12	2.28e-03
 13	8.87e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 8.87e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.48e-01
  3	1.93e-01
  4	1.45e-01
  5	9.74e-02
  6	6.27e-02
  7	4.29e-02
  8	3.12e-02
  9	1.92e-02
 10	1.03e-02
 11	4.60e-03
 12	2.28e-03
 13	8.87e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 8.87e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.25e+01	4.51e-01	1.05e+01
  2	2.20e+00	5.24e-01	1.05e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.20e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  7.60e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.0e-01 2.9e-02 	 2.9e-02
  2	9.1e-03 2.8e-03 7.5e-04 	 7.5e-04
  3	2.2e-04 6.4e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.29e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.4868331271234694]
Givens rotation for v=[-0.29213615647113517,0.0]
Givens rotation for v=[0.2457088379251838,1.4729937585806592]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.96e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.04e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.40e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.99e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.50e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.03e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.60e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.60e-01	1.29e+00	6.33e+00		1.24e+00
2	3.11e-02	7.89e-02	6.59e+00		1.29e+00
3	2.72e-03	4.47e-03	6.59e+00		1.30e+00
4	6.84e-06	3.10e-07	6.59e+00		1.35e+00
5	1.70e-17	6.34e-28	6.59e+00		1.64e+00
minres converged at iteration 5. |A r_k|=6.34e-28 and |r_k|=1.70e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.36e-02	4.57e-01	5.96e+00		1.01e+00
2	2.88e-03	2.03e-03	5.99e+00		1.19e+00
3	1.27e-04	9.75e-05	5.99e+00		1.29e+00
4	1.66e-06	4.32e-07	5.99e+00		1.29e+00
5	1.93e-18	3.35e-29	5.99e+00		1.49e+00
minres converged at iteration 5. |A r_k|=3.35e-29 and |r_k|=1.93e-18.
test stop by condlim
The estimated condition number (=2.60e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=1.30e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
