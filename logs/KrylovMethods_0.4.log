>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1372.76171875 MB free)
Uptime: 51413.0 sec
Load Avg:  0.9970703125  1.0341796875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2432683 s       4512 s     196156 s    2005469 s        131 s
#2  3499 MHz    1765606 s       3743 s     165222 s    3034010 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.55e-02
  2	9.37e-03
  3	1.42e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.37e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.15e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.75e-02
  2	1.18e-01
  3	4.86e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.18e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 6.33e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.53e-01
cg iterated maxIter (=1) times but reached only residual norm 2.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.31e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.66e-15
  2	4.38e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 4.38e-31.
=== blockcg ===
iter	max(relres)
  1	4.80e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.80e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.32e-01
  3	1.53e-01
  4	1.07e-01
  5	7.15e-02
  6	5.10e-02
  7	3.57e-02
  8	2.07e-02
  9	9.30e-03
 10	4.32e-03
 11	1.77e-03
 12	6.85e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.85e-04.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.32e-01
  3	1.53e-01
  4	1.07e-01
  5	7.15e-02
  6	5.10e-02
  7	3.57e-02
  8	2.07e-02
  9	9.30e-03
 10	4.32e-03
 11	1.77e-03
 12	6.85e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.85e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.02e+01	5.16e-01	8.97e+00
  2	9.89e-01	5.95e-01	8.94e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.89e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.55e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.2e-02 3.1e-02 	 3.1e-02
  2	1.0e-02 4.0e-03 1.4e-03 	 1.4e-03
  3	4.9e-04 1.8e-04 6.0e-05 	 6.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5292077919795883]
Givens rotation for v=[0.6028704411793017,0.0]
Givens rotation for v=[-0.9809955303906556,-0.29531150362068626]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.84e-03.
ssor achieved desired tolerance at iteration 45. Residual norm is 9.82e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.11e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.33e-02
  3	3.88e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.88e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.01e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.54e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.90e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.44e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.55e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.55e-01	5.09e+00	7.35e+00		1.19e+00
2	1.37e-01	1.71e+00	1.47e+01		2.38e+00
3	4.92e-02	6.78e-01	1.47e+01		2.38e+00
4	9.37e-03	4.15e-02	1.47e+01		2.38e+00
5	3.24e-03	3.52e-02	1.47e+01		2.38e+00
6	1.32e-04	1.40e-04	1.47e+01		2.38e+00
7	4.52e-08	2.52e-10	1.47e+01		3.60e+00
8	5.38e-16	1.02e-22	1.47e+01		3.68e+00
minres converged at iteration 8. |A r_k|=1.02e-22 and |r_k|=5.38e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.34e-01	5.59e+00	1.18e+01		1.01e+00
2	7.72e-02	6.11e-01	1.30e+01		1.85e+00
3	1.46e-02	1.05e-01	1.30e+01		1.85e+00
4	4.08e-03	2.47e-02	1.30e+01		2.36e+00
5	6.65e-04	3.87e-03	1.30e+01		2.36e+00
6	5.36e-05	1.00e-04	1.30e+01		2.36e+00
7	1.91e-08	1.13e-10	1.30e+01		3.14e+00
8	1.35e-15	1.53e-21	1.30e+01		3.26e+00
minres converged at iteration 8. |A r_k|=1.53e-21 and |r_k|=1.35e-15.
test stop by condlim
The estimated condition number (=3.04e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=3.10e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
