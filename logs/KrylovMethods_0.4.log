>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1369.3515625 MB free)
Uptime: 51752.0 sec
Load Avg:  1.05322265625  1.03759765625  1.01416015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2516327 s       2389 s     202818 s    1922084 s        141 s
#2  3500 MHz    1697810 s       3636 s     176886 s    3081959 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.02e-01
  2	5.23e-02
  3	1.14e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 5.23e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.05e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.68e-02
  2	1.29e-02
  3	2.63e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.29e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 2.66e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.33e-01
cg iterated maxIter (=1) times but reached only residual norm 2.33e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.62e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.06e-14
  2	4.65e-25
blockCG achieved desired tolerance at iteration 2. Residual norm is 4.65e-25.
=== blockcg ===
iter	max(relres)
  1	5.76e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.76e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.72e-01
  3	1.92e-01
  4	1.28e-01
  5	8.50e-02
  6	5.72e-02
  7	3.61e-02
  8	1.93e-02
  9	1.05e-02
 10	5.49e-03
 11	2.75e-03
 12	1.26e-03
 13	5.08e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.08e-04.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.72e-01
  3	1.92e-01
  4	1.28e-01
  5	8.50e-02
  6	5.72e-02
  7	3.61e-02
  8	1.93e-02
  9	1.05e-02
 10	5.49e-03
 11	2.75e-03
 12	1.26e-03
 13	5.08e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.08e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.56e+01	7.78e-01	9.80e+00
  2	1.16e+00	8.55e-01	9.77e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.16e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  7.78e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.6e-01 8.3e-02 2.6e-02 	 2.6e-02
  2	6.9e-03 2.1e-03 7.3e-04 	 7.3e-04
  3	1.9e-04 6.5e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.02e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.4487045821372069]
Givens rotation for v=[-0.16124729667928647,0.0]
Givens rotation for v=[-0.5084400061713051,0.8348195262431092]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 24. Residual norm is 9.98e-03.
ssor achieved desired tolerance at iteration 36. Residual norm is 9.94e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 5.34e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.41e-01
  2	6.26e-02
  3	3.86e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.86e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.72e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.96e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.51e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.03e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.08e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.08e-01	1.79e+00	6.19e+00		1.29e+00
2	5.70e-02	3.01e-01	8.67e+00		1.80e+00
3	1.00e-02	6.15e-02	9.57e+00		1.99e+00
4	8.45e-04	1.40e-03	9.57e+00		1.99e+00
5	1.39e-05	9.25e-06	1.05e+01		2.18e+00
6	1.06e-06	1.40e-06	1.05e+01		2.36e+00
7	1.10e-18	1.90e-29	1.05e+01		2.44e+00
minres converged at iteration 7. |A r_k|=1.90e-29 and |r_k|=1.10e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.08e-01	1.14e+00	7.77e+00		1.01e+00
2	3.47e-02	2.45e-01	7.81e+00		1.30e+00
3	8.99e-04	6.58e-04	8.87e+00		1.48e+00
4	2.25e-04	2.08e-03	9.48e+00		1.58e+00
5	1.99e-06	3.57e-07	9.48e+00		1.77e+00
6	1.11e-07	1.00e-07	9.48e+00		2.30e+00
7	2.10e-18	7.11e-28	9.48e+00		2.30e+00
minres converged at iteration 7. |A r_k|=7.11e-28 and |r_k|=2.10e-18.
test stop by condlim
The estimated condition number (=2.49e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.93e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	gmres iterated maxIter (=350) times without achieving the desired tolerance.
 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
