>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1450.9921875 MB free)
Uptime: 44834.0 sec
Load Avg:  0.87744140625  0.9814453125  1.01220703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    2193660 s       5832 s     179492 s    1650907 s        106 s
#2  3505 MHz    1495481 s       1094 s     153380 s    2650905 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.10.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.44e-02
  2	2.25e-02
  3	1.10e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.25e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.51e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.05e-01
  2	5.80e-02
  3	2.39e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.80e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 9.72e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.72e-01
cg iterated maxIter (=1) times but reached only residual norm 1.72e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.83e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.03e-15
  2	1.83e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.83e-30.
=== blockcg ===
iter	max(relres)
  1	5.08e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.08e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.54e-01
  3	2.12e-01
  4	1.62e-01
  5	1.18e-01
  6	7.33e-02
  7	4.22e-02
  8	2.25e-02
  9	1.13e-02
 10	5.39e-03
 11	2.48e-03
 12	1.02e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.54e-01
  3	2.12e-01
  4	1.62e-01
  5	1.18e-01
  6	7.33e-02
  7	4.22e-02
  8	2.25e-02
  9	1.13e-02
 10	5.39e-03
 11	2.48e-03
 12	1.02e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.21e+01	5.87e-01	8.52e+00
  2	2.10e+00	7.07e-01	8.45e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.10e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.87e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.9e-02 3.7e-02 	 3.7e-02
  2	1.2e-02 4.4e-03 1.5e-03 	 1.5e-03
  3	5.2e-04 1.9e-04 6.1e-05 	 6.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.47e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.22094807200914063]
Givens rotation for v=[1.244812086698014,0.0]
Givens rotation for v=[-0.9629284906303122,-1.4088529554444649]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.61e-03.
ssor achieved desired tolerance at iteration 40. Residual norm is 9.74e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.79e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.40e-02
  3	3.90e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.90e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.22e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.45e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.34e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.68e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.88e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.88e-01	5.37e-01	6.25e+00		1.11e+00
2	4.58e-02	1.87e-01	6.73e+00		1.19e+00
3	3.61e-03	3.83e-03	6.73e+00		1.30e+00
4	8.21e-04	2.59e-03	6.73e+00		1.30e+00
5	9.47e-05	1.91e-04	7.21e+00		1.40e+00
6	1.71e-06	4.36e-07	7.21e+00		1.40e+00
7	1.98e-08	2.50e-09	7.21e+00		1.79e+00
8	1.03e-19	6.03e-30	7.21e+00		1.79e+00
minres converged at iteration 8. |A r_k|=6.03e-30 and |r_k|=1.03e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.67e-02	2.91e-01	6.35e+00		1.00e+00
2	4.17e-03	4.12e-03	6.37e+00		1.22e+00
3	8.21e-04	2.20e-03	6.37e+00		1.26e+00
4	1.36e-04	3.98e-04	7.05e+00		1.39e+00
5	5.64e-06	3.40e-06	7.05e+00		1.39e+00
6	4.91e-07	6.16e-07	7.05e+00		1.39e+00
7	5.39e-09	6.58e-10	7.05e+00		1.70e+00
8	3.31e-20	2.30e-30	7.05e+00		1.70e+00
minres converged at iteration 8. |A r_k|=2.30e-30 and |r_k|=3.31e-20.
test stop by condlim
The estimated condition number (=3.70e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.35e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
