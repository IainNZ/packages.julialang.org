>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1369.91015625 MB free)
Uptime: 50773.0 sec
Load Avg:  0.8837890625  0.9814453125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2408169 s         79 s     190131 s    1961782 s        129 s
#2  3500 MHz    1747815 s       6441 s     166092 s    2948984 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	4.73e-02
  3	9.73e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 4.73e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.22e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.06e-01
  2	3.82e-02
  3	1.66e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.82e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 5.91e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	4.93e-02
cg iterated maxIter (=1) times but reached only residual norm 4.93e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.68e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.47e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 1.47e-16.
=== blockcg ===
iter	max(relres)
  1	7.23e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.23e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.86e-01
  2	2.19e-01
  3	1.50e-01
  4	9.30e-02
  5	6.97e-02
  6	5.66e-02
  7	3.98e-02
  8	2.38e-02
  9	1.34e-02
 10	6.72e-03
 11	2.81e-03
 12	1.11e-03
 13	4.17e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.17e-04.
=== blockcg ===
iter	max(relres)
  1	3.86e-01
  2	2.19e-01
  3	1.50e-01
  4	9.30e-02
  5	6.97e-02
  6	5.66e-02
  7	3.98e-02
  8	2.38e-02
  9	1.34e-02
 10	6.72e-03
 11	2.81e-03
 12	1.11e-03
 13	4.17e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.17e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	7.68e+01	5.56e-01	1.02e+01
  2	7.47e+00	7.42e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.47e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.81e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.4e-02 2.7e-02 	 2.7e-02
  2	8.0e-03 2.2e-03 6.4e-04 	 6.4e-04
  3	2.1e-04 6.9e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.91e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.2482890939744808]
Givens rotation for v=[-0.5770555579485931,0.0]
Givens rotation for v=[0.9561855253234485,0.16923211070497218]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 9.90e-03.
ssor achieved desired tolerance at iteration 49. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.17e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.45e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.64e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.87e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.15e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.91e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.61e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.61e-01	9.67e-01	6.70e+00		1.06e+00
2	3.59e-02	5.36e-02	6.70e+00		1.35e+00
3	2.86e-03	3.10e-03	6.70e+00		1.35e+00
4	5.26e-04	1.08e-03	6.70e+00		1.35e+00
5	5.78e-05	9.02e-05	6.75e+00		1.36e+00
6	5.96e-19	6.44e-32	6.75e+00		1.44e+00
minres converged at iteration 6. |A r_k|=6.44e-32 and |r_k|=5.96e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.59e-02	2.47e-01	5.01e+00		1.01e+00
2	3.38e-03	2.00e-03	7.05e+00		1.42e+00
3	5.85e-04	1.15e-03	7.05e+00		1.42e+00
4	7.44e-05	1.23e-04	7.05e+00		1.42e+00
5	1.37e-05	3.29e-05	7.05e+00		1.42e+00
6	8.93e-20	7.00e-33	7.05e+00		1.42e+00
minres converged at iteration 6. |A r_k|=7.00e-33 and |r_k|=8.93e-20.
test stop by condlim
The estimated condition number (=2.52e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.49e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
