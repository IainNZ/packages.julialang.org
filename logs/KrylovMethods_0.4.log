>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1444.34375 MB free)
Uptime: 45399.0 sec
Load Avg:  1.08544921875  1.03564453125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2218418 s       3379 s     187725 s    1674560 s         76 s
#2  3500 MHz    1485110 s       3510 s     166938 s    2720004 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.23.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.94e-02
  2	8.28e-03
  3	6.50e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.28e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 9.10e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.37e-02
  2	3.27e-02
  3	5.34e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.27e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 9.64e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.58e-01
cg iterated maxIter (=1) times but reached only residual norm 2.58e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.15e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.30e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.30e-16.
=== blockcg ===
iter	max(relres)
  1	5.77e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.77e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.51e-01
  3	1.74e-01
  4	1.39e-01
  5	1.11e-01
  6	8.21e-02
  7	5.49e-02
  8	3.20e-02
  9	1.56e-02
 10	6.93e-03
 11	3.19e-03
 12	1.32e-03
 13	4.78e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.78e-04.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.51e-01
  3	1.74e-01
  4	1.39e-01
  5	1.11e-01
  6	8.21e-02
  7	5.49e-02
  8	3.20e-02
  9	1.56e-02
 10	6.93e-03
 11	3.19e-03
 12	1.32e-03
 13	4.78e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.78e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.61e+01	6.55e-01	8.72e+00
  2	4.29e+00	7.84e-01	8.67e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.29e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.82e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 7.7e-02 2.3e-02 	 2.3e-02
  2	6.8e-03 1.9e-03 5.1e-04 	 5.1e-04
  3	1.7e-04 5.0e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.96e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.01514517989836053]
Givens rotation for v=[0.09533108140197502,0.0]
Givens rotation for v=[0.10983983980556948,-0.06151284894300789]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.89e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 1.00e-02.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.05e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.40e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.96e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.50e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.64e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.96e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.47e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.47e-01	1.16e+00	6.23e+00		1.31e+00
2	9.88e-03	8.96e-03	6.43e+00		1.35e+00
3	3.85e-04	3.16e-04	6.43e+00		1.35e+00
4	1.36e-05	7.85e-06	6.43e+00		1.58e+00
5	4.85e-18	3.59e-29	6.43e+00		1.58e+00
minres converged at iteration 5. |A r_k|=3.59e-29 and |r_k|=4.85e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.16e-02	3.60e-01	5.92e+00		1.01e+00
2	7.73e-04	1.79e-04	5.92e+00		1.24e+00
3	6.73e-05	1.20e-04	5.92e+00		1.24e+00
4	8.08e-07	1.61e-07	5.92e+00		1.42e+00
5	9.07e-19	2.12e-29	5.92e+00		1.42e+00
minres converged at iteration 5. |A r_k|=2.12e-29 and |r_k|=9.07e-19.
test stop by condlim
The estimated condition number (=2.05e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=4.66e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
