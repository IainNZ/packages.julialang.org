>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1358.68359375 MB free)
Uptime: 48847.0 sec
Load Avg:  1.0302734375  0.9755859375  0.9775390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2283933 s        100 s     179320 s    1899641 s         27 s
#2  3500 MHz    1643542 s       5564 s     151572 s    2905542 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.20e-02
  2	9.75e-03
  3	1.79e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.75e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.37e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.03e-01
  2	6.22e-02
  3	2.58e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 6.22e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.35e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.00e-01
cg iterated maxIter (=1) times but reached only residual norm 1.00e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.68e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.11e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.11e-16.
=== blockcg ===
iter	max(relres)
  1	5.46e-13
blockCG iterated maxIter (=1) times but reached only residual norm 5.46e-13 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.35e-01
  3	1.61e-01
  4	1.26e-01
  5	1.16e-01
  6	9.89e-02
  7	5.61e-02
  8	2.63e-02
  9	1.20e-02
 10	5.80e-03
 11	2.65e-03
 12	1.11e-03
 13	4.56e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.56e-04.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.35e-01
  3	1.61e-01
  4	1.26e-01
  5	1.16e-01
  6	9.89e-02
  7	5.61e-02
  8	2.63e-02
  9	1.20e-02
 10	5.80e-03
 11	2.65e-03
 12	1.11e-03
 13	4.56e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.56e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.14e+01	7.26e-01	1.00e+01
  2	3.89e+00	8.48e-01	9.95e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.89e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.03e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 7.9e-02 2.3e-02 	 2.3e-02
  2	6.6e-03 1.9e-03 5.6e-04 	 5.6e-04
  3	1.6e-04 5.2e-05 1.4e-05 	 1.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.53e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.05145907780035332]
Givens rotation for v=[1.6432211202732323,0.0]
Givens rotation for v=[-0.7281170614528132,0.8833802583502811]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 47. Residual norm is 9.97e-03.
ssor achieved desired tolerance at iteration 71. Residual norm is 9.90e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.87e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.43e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.98e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.55e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.35e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.11e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.30e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.30e-01	2.37e-01	5.41e+00		1.25e+00
2	1.01e-02	1.32e-02	5.41e+00		1.25e+00
3	6.24e-04	6.24e-04	5.41e+00		1.25e+00
4	1.63e-05	7.34e-06	5.41e+00		1.25e+00
5	5.92e-07	4.10e-07	5.85e+00		1.36e+00
6	2.27e-09	1.37e-10	5.85e+00		1.36e+00
7	5.05e-22	1.47e-33	5.85e+00		1.46e+00
minres converged at iteration 7. |A r_k|=1.47e-33 and |r_k|=5.05e-22.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.95e-02	4.98e-02	5.21e+00		1.00e+00
2	1.36e-03	1.38e-03	5.21e+00		1.17e+00
3	9.31e-05	1.06e-04	5.21e+00		1.17e+00
4	5.38e-06	5.06e-06	5.21e+00		1.17e+00
5	5.95e-08	1.24e-08	5.81e+00		1.30e+00
6	1.84e-10	8.87e-12	5.81e+00		1.30e+00
7	2.00e-22	2.83e-33	5.81e+00		1.45e+00
minres converged at iteration 7. |A r_k|=2.83e-33 and |r_k|=2.00e-22.
test stop by condlim
The estimated condition number (=2.36e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=6.58e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6

>>> End of log
