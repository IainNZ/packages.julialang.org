>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1411.65625 MB free)
Uptime: 44736.0 sec
Load Avg:  1.05908203125  1.0146484375  1.00146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2137497 s       4514 s     165588 s    1677005 s         34 s
#2  3501 MHz    1438721 s       1080 s     142510 s    2725442 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.39e-02
  2	8.86e-03
  3	9.22e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.86e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 1.83e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.03e-02
  2	1.66e-02
  3	5.90e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.66e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.38e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.90e-01
cg iterated maxIter (=1) times but reached only residual norm 1.90e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.28e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.88e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.88e-16.
=== blockcg ===
iter	max(relres)
  1	2.62e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.62e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.48e-01
  3	1.72e-01
  4	1.08e-01
  5	7.56e-02
  6	5.17e-02
  7	3.18e-02
  8	1.93e-02
  9	1.15e-02
 10	5.57e-03
 11	2.42e-03
 12	1.07e-03
 13	4.06e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.06e-04.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.48e-01
  3	1.72e-01
  4	1.08e-01
  5	7.56e-02
  6	5.17e-02
  7	3.18e-02
  8	1.93e-02
  9	1.15e-02
 10	5.57e-03
 11	2.42e-03
 12	1.07e-03
 13	4.06e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.06e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	6.63e+00	4.77e-01	9.84e+00
  2	2.13e-01	5.11e-01	9.83e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.13e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.34e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.8e-02 2.3e-02 	 2.3e-02
  2	7.3e-03 2.2e-03 6.7e-04 	 6.7e-04
  3	1.9e-04 5.5e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.34e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-2.849239478237352]
Givens rotation for v=[-1.079017161327648,0.0]
Givens rotation for v=[0.4419404008345906,0.9584304136140648]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.68e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.79e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.87e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.53e-02
  3	4.05e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.05e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 1.00e-02.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.48e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.80e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.58e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.33e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.33e-01	2.17e-01	5.29e+00		1.16e+00
2	9.17e-03	8.03e-03	5.29e+00		1.16e+00
3	2.04e-03	7.05e-03	5.84e+00		1.28e+00
4	2.67e-04	5.80e-04	6.86e+00		1.51e+00
5	1.36e-05	8.95e-06	6.86e+00		1.51e+00
6	6.43e-08	3.54e-09	6.86e+00		1.58e+00
7	2.29e-11	8.82e-14	6.86e+00		1.71e+00
8	1.13e-20	6.06e-29	6.86e+00		1.71e+00
minres converged at iteration 8. |A r_k|=6.06e-29 and |r_k|=1.13e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.98e-02	3.79e-02	4.75e+00		1.00e+00
2	3.02e-03	5.91e-03	5.03e+00		1.06e+00
3	3.00e-04	5.71e-04	7.41e+00		1.56e+00
4	2.19e-05	2.23e-05	7.41e+00		1.56e+00
5	4.35e-07	1.00e-07	7.41e+00		1.72e+00
6	8.14e-09	1.84e-09	7.41e+00		1.72e+00
7	2.94e-12	1.15e-14	7.41e+00		1.84e+00
8	1.91e-19	1.34e-25	7.41e+00		1.85e+00
minres converged at iteration 8. |A r_k|=1.34e-25 and |r_k|=1.91e-19.
test stop by condlim
The estimated condition number (=2.21e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=9.92e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
