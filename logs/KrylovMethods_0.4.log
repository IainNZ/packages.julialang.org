>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1363.22265625 MB free)
Uptime: 52819.0 sec
Load Avg:  1.068359375  1.0361328125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2573291 s       2481 s     194704 s    1987328 s        100 s
#2  3504 MHz    1748905 s       4112 s     170051 s    3176477 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.35e-02
  2	7.82e-03
  3	1.05e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 7.82e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 5.51e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.69e-02
  2	7.84e-02
  3	6.99e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.84e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 1.68e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.25e-01
cg iterated maxIter (=1) times but reached only residual norm 1.25e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.75e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.08e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.08e-16.
=== blockcg ===
iter	max(relres)
  1	3.85e-15
blockCG iterated maxIter (=1) times but reached only residual norm 3.85e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.39e-01
  3	1.86e-01
  4	1.41e-01
  5	1.00e-01
  6	6.88e-02
  7	4.10e-02
  8	2.52e-02
  9	1.56e-02
 10	8.05e-03
 11	3.74e-03
 12	1.42e-03
 13	6.00e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.00e-04.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.39e-01
  3	1.86e-01
  4	1.41e-01
  5	1.00e-01
  6	6.88e-02
  7	4.10e-02
  8	2.52e-02
  9	1.56e-02
 10	8.05e-03
 11	3.74e-03
 12	1.42e-03
 13	6.00e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.00e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.64e+00	4.22e-01	1.02e+01
  2	3.28e-01	4.48e-01	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.28e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.39e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.4e-02 2.6e-02 	 2.6e-02
  2	8.1e-03 2.4e-03 7.0e-04 	 7.0e-04
  3	2.3e-04 8.4e-05 2.4e-05 	 2.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.29e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.6252067387146676]
Givens rotation for v=[1.4276391750400597,0.0]
Givens rotation for v=[-0.8240519704503931,-0.8980333321676889]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 55. Residual norm is 9.87e-03.
ssor achieved desired tolerance at iteration 82. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 8.70e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.47e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.19e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.75e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.45e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.83e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.51e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.51e-01	9.50e-01	5.54e+00		1.30e+00
2	4.96e-02	4.59e-01	1.45e+01		3.39e+00
3	5.69e-03	1.99e-02	1.45e+01		3.39e+00
4	1.47e-03	9.27e-03	1.45e+01		3.39e+00
5	3.68e-04	1.79e-03	1.45e+01		3.39e+00
6	1.27e-05	1.04e-05	1.45e+01		3.39e+00
7	2.06e-07	4.93e-08	1.45e+01		3.44e+00
8	1.12e-16	8.76e-25	1.45e+01		3.54e+00
minres converged at iteration 8. |A r_k|=8.76e-25 and |r_k|=1.12e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.83e-02	1.18e+00	1.37e+01		1.00e+00
2	2.85e-02	2.17e-01	1.37e+01		2.20e+00
3	3.47e-03	8.83e-03	1.37e+01		2.20e+00
4	4.02e-04	1.30e-03	1.37e+01		2.20e+00
5	2.92e-05	5.69e-05	1.37e+01		2.20e+00
6	5.03e-07	1.29e-07	1.37e+01		3.26e+00
7	1.32e-08	5.15e-09	1.37e+01		3.27e+00
8	9.70e-17	1.04e-23	1.37e+01		3.31e+00
minres converged at iteration 8. |A r_k|=1.04e-23 and |r_k|=9.70e-17.
test stop by condlim
The estimated condition number (=2.66e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.40e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
