>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1374.46484375 MB free)
Uptime: 51136.0 sec
Load Avg:  0.951171875  0.943359375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz    2481416 s       6722 s     197215 s    1926596 s        116 s
#2  3506 MHz    1711670 s        140 s     173532 s    3053035 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.89e-02
  2	1.16e-02
  3	8.79e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.16e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.30e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.20e-02
  2	2.85e-02
  3	1.30e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.85e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.97e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.02e-02
cg iterated maxIter (=1) times but reached only residual norm 1.02e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.74e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.27e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.27e-16.
=== blockcg ===
iter	max(relres)
  1	2.97e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.97e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.60e-01
  3	2.00e-01
  4	1.45e-01
  5	1.00e-01
  6	6.68e-02
  7	3.68e-02
  8	1.87e-02
  9	9.54e-03
 10	4.71e-03
 11	2.33e-03
 12	9.44e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.44e-04.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.60e-01
  3	2.00e-01
  4	1.45e-01
  5	1.00e-01
  6	6.68e-02
  7	3.68e-02
  8	1.87e-02
  9	9.54e-03
 10	4.71e-03
 11	2.33e-03
 12	9.44e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.44e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.04e+00	4.64e-01	9.53e+00
  2	3.37e-01	4.83e-01	9.52e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.37e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.34e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.1e-01 3.4e-02 	 3.4e-02
  2	1.0e-02 3.0e-03 7.8e-04 	 7.8e-04
  3	2.6e-04 8.5e-05 2.5e-05 	 2.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.76e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.4108826781711028]
Givens rotation for v=[-0.76073291902078,0.0]
Givens rotation for v=[-0.3879437521543767,-0.6200747560642962]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 45. Residual norm is 9.89e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.22e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.36e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.93e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.49e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.60e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.04e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.10e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.10e-01	1.89e-01	5.67e+00		1.27e+00
2	7.57e-03	8.40e-03	5.67e+00		1.27e+00
3	1.91e-04	8.16e-05	5.67e+00		1.27e+00
4	6.99e-06	4.46e-06	5.67e+00		1.27e+00
5	2.42e-08	1.41e-09	5.67e+00		1.27e+00
6	8.70e-22	4.40e-34	5.67e+00		1.42e+00
minres converged at iteration 6. |A r_k|=4.40e-34 and |r_k|=8.70e-22.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.42e-02	2.97e-02	4.63e+00		1.00e+00
2	5.41e-04	3.26e-04	4.70e+00		1.03e+00
3	1.96e-05	1.20e-05	4.85e+00		1.07e+00
4	4.11e-07	1.50e-07	5.00e+00		1.10e+00
5	2.57e-09	2.66e-10	5.00e+00		1.10e+00
6	3.06e-23	5.14e-36	5.00e+00		1.25e+00
minres converged at iteration 6. |A r_k|=5.14e-36 and |r_k|=3.06e-23.
test stop by condlim
The estimated condition number (=2.03e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 9.
test stop by beta
minres stopped because beta (=3.55e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
