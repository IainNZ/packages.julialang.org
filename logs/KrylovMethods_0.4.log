>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1440.91015625 MB free)
Uptime: 48294.0 sec
Load Avg:  1.0693359375  1.03271484375  0.97705078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2322425 s       5448 s     176836 s    1844436 s        100 s
#2  3500 MHz    1639965 s       1623 s     154154 s    2849019 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.98e-02
  2	6.92e-03
  3	1.43e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 6.92e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 8.50e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.29e-02
  2	2.40e-02
  3	7.34e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.40e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.16e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.30e-01
cg iterated maxIter (=1) times but reached only residual norm 2.30e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.87e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.63e-15
  2	2.03e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.03e-30.
=== blockcg ===
iter	max(relres)
  1	2.75e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.75e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.29e-01
  2	2.63e-01
  3	1.77e-01
  4	1.18e-01
  5	8.30e-02
  6	5.77e-02
  7	3.80e-02
  8	2.14e-02
  9	1.10e-02
 10	5.62e-03
 11	2.45e-03
 12	1.01e-03
 13	4.04e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.04e-04.
=== blockcg ===
iter	max(relres)
  1	4.29e-01
  2	2.63e-01
  3	1.77e-01
  4	1.18e-01
  5	8.30e-02
  6	5.77e-02
  7	3.80e-02
  8	2.14e-02
  9	1.10e-02
 10	5.62e-03
 11	2.45e-03
 12	1.01e-03
 13	4.04e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.04e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.69e+00	4.67e-01	9.46e+00
  2	4.17e-01	5.05e-01	9.44e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.17e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.21e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.9e-02 3.2e-02 	 3.2e-02
  2	1.0e-02 3.2e-03 1.0e-03 	 1.0e-03
  3	3.3e-04 1.1e-04 3.5e-05 	 3.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.59e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.002590052994910781]
Givens rotation for v=[0.4185980166885136,0.0]
Givens rotation for v=[-1.2034282012150535,-0.3604918868465423]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.88e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.20e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.27e-02
  3	3.85e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.85e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.62e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.85e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.71e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.02e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.35e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.35e-01	9.44e-01	5.91e+00		1.29e+00
2	3.32e-02	1.16e-01	7.36e+00		1.60e+00
3	5.35e-03	1.78e-02	7.36e+00		1.60e+00
4	2.49e-04	2.62e-04	7.36e+00		1.60e+00
5	3.70e-05	1.01e-04	7.36e+00		1.60e+00
6	1.90e-06	1.83e-06	7.36e+00		1.60e+00
7	1.06e-07	1.11e-07	7.36e+00		1.60e+00
8	7.28e-20	7.62e-31	7.36e+00		1.79e+00
minres converged at iteration 8. |A r_k|=7.62e-31 and |r_k|=7.28e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.35e-02	4.36e-01	6.88e+00		1.01e+00
2	7.81e-03	1.65e-02	6.88e+00		1.43e+00
3	4.63e-04	6.69e-04	6.88e+00		1.43e+00
4	3.76e-05	5.80e-05	6.88e+00		1.43e+00
5	4.50e-06	1.06e-05	6.88e+00		1.43e+00
6	1.66e-07	1.05e-07	6.88e+00		1.48e+00
7	1.42e-08	2.19e-08	6.88e+00		1.48e+00
8	1.19e-19	1.56e-29	6.88e+00		1.63e+00
minres converged at iteration 8. |A r_k|=1.56e-29 and |r_k|=1.19e-19.
test stop by condlim
The estimated condition number (=2.17e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.30e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
