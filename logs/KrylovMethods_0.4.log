>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1427.50390625 MB free)
Uptime: 49400.0 sec
Load Avg:  1.017578125  1.06201171875  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2392481 s       6842 s     186214 s    1834599 s        124 s
#2  3500 MHz    1605889 s         48 s     161688 s    2956127 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.80e-02
  2	1.88e-02
  3	8.09e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.88e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.69e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.67e-02
  2	2.22e-02
  3	2.45e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.22e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.58e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	5.63e-02
cg iterated maxIter (=1) times but reached only residual norm 5.63e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.73e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.78e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.78e-16.
=== blockcg ===
iter	max(relres)
  1	1.11e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.11e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.38e-01
  3	1.75e-01
  4	1.25e-01
  5	8.55e-02
  6	5.26e-02
  7	3.30e-02
  8	1.98e-02
  9	9.63e-03
 10	4.41e-03
 11	1.96e-03
 12	8.25e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.25e-04.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.38e-01
  3	1.75e-01
  4	1.25e-01
  5	8.55e-02
  6	5.26e-02
  7	3.30e-02
  8	1.98e-02
  9	9.63e-03
 10	4.41e-03
 11	1.96e-03
 12	8.25e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.25e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.49e+01	5.43e-01	1.07e+01
  2	1.39e+00	6.03e-01	1.06e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.39e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.65e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.5e-02 2.8e-02 	 2.8e-02
  2	7.8e-03 2.3e-03 7.4e-04 	 7.4e-04
  3	2.4e-04 6.5e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.63e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.5479922422021972]
Givens rotation for v=[0.6739926250099297,0.0]
Givens rotation for v=[0.4622059537899107,-0.21539727809607667]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.99e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.33e-02
  3	3.87e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.87e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.27e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.49e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.58e-02.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.61e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.76e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.76e-01	2.02e+00	6.62e+00		1.07e+00
2	1.22e-02	5.07e-03	7.73e+00		1.30e+00
3	2.60e-03	6.38e-03	7.73e+00		1.54e+00
4	1.30e-04	8.31e-05	7.73e+00		1.54e+00
5	7.54e-07	4.18e-08	7.73e+00		1.86e+00
6	7.37e-09	6.78e-10	7.73e+00		1.90e+00
7	5.07e-11	3.25e-12	7.73e+00		1.91e+00
8	5.81e-14	6.38e-16	7.73e+00		1.91e+00
minres converged at iteration 8. |A r_k|=6.38e-16 and |r_k|=5.81e-14.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.41e-01	7.33e-01	6.02e+00		1.01e+00
2	3.81e-03	1.36e-03	7.92e+00		1.33e+00
3	1.32e-04	4.49e-05	7.92e+00		1.86e+00
4	7.92e-06	4.59e-06	7.92e+00		1.90e+00
5	2.95e-07	1.67e-07	7.92e+00		1.90e+00
6	2.93e-09	2.73e-10	7.92e+00		1.94e+00
7	1.93e-11	1.19e-12	7.92e+00		1.96e+00
8	2.28e-14	2.57e-16	7.92e+00		1.96e+00
minres converged at iteration 8. |A r_k|=2.57e-16 and |r_k|=2.28e-14.
test stop by condlim
The estimated condition number (=2.21e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=7.94e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
