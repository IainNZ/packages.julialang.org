>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1393.26953125 MB free)
Uptime: 51774.0 sec
Load Avg:  1.03466796875  1.03857421875  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz    2496904 s        109 s     196034 s    1970466 s        123 s
#2  3512 MHz    1776433 s       6368 s     166688 s    3047414 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.54e-02
  2	2.25e-02
  3	6.83e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 2.25e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.58e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.05e-01
  2	4.06e-02
  3	1.07e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.06e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.46e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.58e-01
cg iterated maxIter (=1) times but reached only residual norm 2.58e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.53e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.01e-15
  2	3.72e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 3.72e-30.
=== blockcg ===
iter	max(relres)
  1	4.48e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.48e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.12e-01
  2	2.48e-01
  3	1.58e-01
  4	1.01e-01
  5	6.22e-02
  6	4.37e-02
  7	2.89e-02
  8	1.78e-02
  9	8.98e-03
 10	4.34e-03
 11	1.86e-03
 12	6.82e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.82e-04.
=== blockcg ===
iter	max(relres)
  1	4.12e-01
  2	2.48e-01
  3	1.58e-01
  4	1.01e-01
  5	6.22e-02
  6	4.37e-02
  7	2.89e-02
  8	1.78e-02
  9	8.98e-03
 10	4.34e-03
 11	1.86e-03
 12	6.82e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.82e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.77e+01	3.45e-01	9.88e+00
  2	9.24e-01	5.06e-01	9.83e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.24e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.11e-13.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 8.5e-02 2.8e-02 	 2.8e-02
  2	8.3e-03 2.7e-03 8.9e-04 	 8.9e-04
  3	2.8e-04 1.0e-04 3.0e-05 	 3.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.34e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.07730040865491462]
Givens rotation for v=[0.05427728564122888,0.0]
Givens rotation for v=[2.1762609403930133,0.622441669118276]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.59e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.54e-02
  3	4.02e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.02e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.27e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.49e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.41e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.71e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.71e-01	1.70e+00	7.09e+00		1.20e+00
2	6.20e-02	3.10e-01	7.09e+00		1.23e+00
3	1.20e-02	5.91e-02	7.26e+00		1.26e+00
4	2.04e-04	8.12e-05	7.26e+00		1.26e+00
5	8.24e-07	5.33e-08	7.26e+00		1.78e+00
6	8.25e-18	1.32e-27	7.26e+00		1.79e+00
minres converged at iteration 6. |A r_k|=1.32e-27 and |r_k|=8.25e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.31e-02	7.25e-01	5.85e+00		1.02e+00
2	1.35e-02	4.37e-02	7.42e+00		1.29e+00
3	1.56e-03	4.85e-03	7.42e+00		1.29e+00
4	6.80e-05	6.58e-05	7.42e+00		1.30e+00
5	2.80e-07	1.85e-08	7.42e+00		1.81e+00
6	5.45e-19	1.69e-29	7.42e+00		1.83e+00
minres converged at iteration 6. |A r_k|=1.69e-29 and |r_k|=5.45e-19.
test stop by condlim
The estimated condition number (=3.06e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.33e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
