>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1431.078125 MB free)
Uptime: 49135.0 sec
Load Avg:  1.0458984375  1.017578125  1.00537109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2377531 s       6323 s     197576 s    1824674 s        122 s
#2  3500 MHz    1670410 s        629 s     171550 s    2892656 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	1.04e-02
  3	7.31e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.04e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.70e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.78e-02
  2	5.25e-02
  3	1.29e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.25e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.48e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.19e-02
cg iterated maxIter (=1) times but reached only residual norm 1.19e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.70e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.93e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.93e-16.
=== blockcg ===
iter	max(relres)
  1	3.49e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.49e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.43e-01
  3	1.74e-01
  4	1.31e-01
  5	1.06e-01
  6	7.92e-02
  7	5.29e-02
  8	2.89e-02
  9	1.41e-02
 10	7.27e-03
 11	4.14e-03
 12	2.05e-03
 13	8.68e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 8.68e-04.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.43e-01
  3	1.74e-01
  4	1.31e-01
  5	1.06e-01
  6	7.92e-02
  7	5.29e-02
  8	2.89e-02
  9	1.41e-02
 10	7.27e-03
 11	4.14e-03
 12	2.05e-03
 13	8.68e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 8.68e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.74e+01	3.43e-01	1.02e+01
  2	1.40e+00	4.56e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.40e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.20e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 2.9e-02 	 2.9e-02
  2	8.8e-03 2.9e-03 7.6e-04 	 7.6e-04
  3	2.2e-04 7.1e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.45e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.3614061334791321]
Givens rotation for v=[0.6570909513717966,0.0]
Givens rotation for v=[0.34246493588002164,-0.12656421630094988]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 46. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 68. Residual norm is 9.92e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.97e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.60e-02
  3	4.19e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.19e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.65e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.85e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.52e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.04e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 5.86e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.86e-01	8.25e+00	8.48e+00		1.07e+00
2	4.91e-02	1.04e-01	1.66e+01		2.10e+00
3	1.58e-03	6.51e-04	1.66e+01		3.94e+00
4	8.70e-06	6.46e-07	1.66e+01		3.94e+00
5	1.22e-07	2.39e-08	1.66e+01		3.94e+00
6	2.38e-14	6.33e-20	1.66e+01		3.94e+00
minres converged at iteration 6. |A r_k|=6.33e-20 and |r_k|=2.38e-14.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.45e-01	6.30e+00	1.04e+01		1.02e+00
2	2.79e-02	4.35e-02	1.53e+01		1.95e+00
3	8.61e-04	3.42e-04	1.53e+01		3.61e+00
4	4.61e-06	3.34e-07	1.53e+01		3.61e+00
5	6.60e-08	1.32e-08	1.53e+01		3.61e+00
6	6.38e-15	8.39e-21	1.53e+01		3.61e+00
minres converged at iteration 6. |A r_k|=8.39e-21 and |r_k|=6.38e-15.
test stop by condlim
The estimated condition number (=2.25e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=9.51e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
