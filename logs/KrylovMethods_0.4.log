>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1428.48046875 MB free)
Uptime: 48936.0 sec
Load Avg:  1.0458984375  1.0146484375  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2415051 s       5517 s     191666 s    1766115 s        132 s
#2  3500 MHz    1585736 s        120 s     166395 s    2969205 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.97e-02
  2	8.07e-03
  3	9.77e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.07e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.24e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.01e-01
  2	2.57e-02
  3	1.31e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.57e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.69e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	4.97e-02
cg iterated maxIter (=1) times but reached only residual norm 4.97e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 23. Residual norm is 8.84e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.43e-15
  2	1.50e-27
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.50e-27.
=== blockcg ===
iter	max(relres)
  1	5.68e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.68e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.27e-01
  3	1.65e-01
  4	1.47e-01
  5	1.17e-01
  6	8.36e-02
  7	4.90e-02
  8	2.80e-02
  9	1.33e-02
 10	6.62e-03
 11	2.99e-03
 12	1.09e-03
 13	4.38e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.38e-04.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.27e-01
  3	1.65e-01
  4	1.47e-01
  5	1.17e-01
  6	8.36e-02
  7	4.90e-02
  8	2.80e-02
  9	1.33e-02
 10	6.62e-03
 11	2.99e-03
 12	1.09e-03
 13	4.38e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.38e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.66e+01	6.93e-01	9.90e+00
  2	8.87e+00	1.01e+00	9.78e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.87e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.23e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.0e-01 2.9e-02 	 2.9e-02
  2	9.6e-03 2.6e-03 8.0e-04 	 8.0e-04
  3	2.4e-04 7.7e-05 2.4e-05 	 2.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.95e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.4020113080785186]
Givens rotation for v=[1.7170793326631812,0.0]
Givens rotation for v=[-0.370789390221775,-0.081147991407913]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.79e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.97e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.60e-02
  3	4.13e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.13e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.60e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.46e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.03e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.70e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.55e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.55e-01	1.34e+00	5.47e+00		1.08e+00
2	3.93e-02	7.01e-02	9.59e+00		1.90e+00
3	5.68e-03	1.02e-02	9.59e+00		1.90e+00
4	4.76e-04	4.04e-04	9.59e+00		1.97e+00
5	5.39e-05	5.97e-05	9.59e+00		2.06e+00
6	5.38e-07	5.56e-08	9.59e+00		2.06e+00
7	2.75e-08	1.30e-08	9.59e+00		2.18e+00
8	2.14e-16	1.55e-23	9.59e+00		2.18e+00
minres converged at iteration 8. |A r_k|=1.55e-23 and |r_k|=2.14e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.31e-01	8.26e-01	8.21e+00		1.00e+00
2	7.32e-03	4.07e-03	8.21e+00		1.62e+00
3	1.02e-03	1.82e-03	8.21e+00		1.62e+00
4	7.16e-05	4.77e-05	8.21e+00		1.79e+00
5	9.98e-07	1.30e-07	8.21e+00		1.84e+00
6	9.30e-08	9.46e-08	8.21e+00		1.84e+00
7	4.59e-09	2.14e-09	8.21e+00		1.84e+00
8	2.25e-17	1.05e-24	8.21e+00		1.84e+00
minres converged at iteration 8. |A r_k|=1.05e-24 and |r_k|=2.25e-17.
test stop by condlim
The estimated condition number (=2.30e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 11.
test stop by beta
minres stopped because beta (=3.38e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
