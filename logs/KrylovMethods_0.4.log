>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1375.45703125 MB free)
Uptime: 50001.0 sec
Load Avg:  1.0166015625  1.00439453125  1.03857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2414310 s         68 s     199384 s    1892423 s        142 s
#2  3499 MHz    1711564 s       6082 s     173538 s    2929233 s         10 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.44e-02
  2	8.49e-03
  3	1.00e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.49e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 8.88e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.02e-01
  2	3.57e-02
  3	2.62e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.57e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.99e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.53e-01
cg iterated maxIter (=1) times but reached only residual norm 1.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.36e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.58e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.58e-16.
=== blockcg ===
iter	max(relres)
  1	2.96e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.96e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.46e-01
  3	1.58e-01
  4	1.08e-01
  5	8.09e-02
  6	6.54e-02
  7	4.30e-02
  8	2.12e-02
  9	9.91e-03
 10	4.34e-03
 11	2.05e-03
 12	9.03e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.03e-04.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.46e-01
  3	1.58e-01
  4	1.08e-01
  5	8.09e-02
  6	6.54e-02
  7	4.30e-02
  8	2.12e-02
  9	9.91e-03
 10	4.34e-03
 11	2.05e-03
 12	9.03e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.03e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.24e+01	7.24e-01	9.27e+00
  2	4.31e+00	8.58e-01	9.18e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.31e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.19e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.5e-02 2.6e-02 	 2.6e-02
  2	7.6e-03 2.4e-03 7.1e-04 	 7.1e-04
  3	1.9e-04 6.2e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.19e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.5501578282150438]
Givens rotation for v=[-0.25113541929395644,0.0]
Givens rotation for v=[0.22520776079158983,-0.7748343240322366]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 41. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 61. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.44e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.51e-02
  3	4.05e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.05e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.34e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.91e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.83e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.56e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.74e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.74e-01	1.53e+00	6.33e+00		1.04e+00
2	2.42e-02	1.54e-02	7.61e+00		1.29e+00
3	2.69e-04	3.08e-05	7.61e+00		1.34e+00
4	3.48e-05	3.57e-05	7.61e+00		1.73e+00
5	1.03e-06	2.91e-07	7.61e+00		1.73e+00
6	3.48e-10	8.57e-13	7.61e+00		1.87e+00
7	2.81e-17	2.32e-23	7.61e+00		1.87e+00
minres converged at iteration 7. |A r_k|=2.32e-23 and |r_k|=2.81e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.41e-01	5.68e-01	5.93e+00		1.01e+00
2	3.07e-03	6.72e-04	7.75e+00		1.32e+00
3	9.26e-05	2.88e-05	7.75e+00		1.36e+00
4	5.56e-06	2.50e-06	7.75e+00		1.86e+00
5	3.88e-07	2.68e-07	7.75e+00		1.86e+00
6	4.73e-11	4.28e-14	7.75e+00		1.88e+00
7	1.67e-18	6.05e-25	7.75e+00		1.88e+00
minres converged at iteration 7. |A r_k|=6.05e-25 and |r_k|=1.67e-18.
test stop by condlim
The estimated condition number (=2.65e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.03e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
