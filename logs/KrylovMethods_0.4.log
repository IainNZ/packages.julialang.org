>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1410.02734375 MB free)
Uptime: 49167.0 sec
Load Avg:  0.96728515625  0.95361328125  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2371449 s       4169 s     194523 s    1852327 s        150 s
#2  3500 MHz    1655321 s       9905 s     169060 s    2884979 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.11e-01
  2	1.39e-02
  3	1.87e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.39e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.94e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.29e-02
  2	2.71e-02
  3	5.27e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.71e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 2.93e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	8.78e-02
cg iterated maxIter (=1) times but reached only residual norm 8.78e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.13e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.48e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.48e-16.
=== blockcg ===
iter	max(relres)
  1	5.87e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.87e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.39e-01
  3	1.88e-01
  4	1.36e-01
  5	7.78e-02
  6	6.03e-02
  7	3.71e-02
  8	2.12e-02
  9	1.03e-02
 10	4.91e-03
 11	2.34e-03
 12	1.02e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.39e-01
  3	1.88e-01
  4	1.36e-01
  5	7.78e-02
  6	6.03e-02
  7	3.71e-02
  8	2.12e-02
  9	1.03e-02
 10	4.91e-03
 11	2.34e-03
 12	1.02e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.86e+01	3.92e-01	9.60e+00
  2	6.81e+00	5.92e-01	9.52e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.81e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.44e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.5e-01 1.1e-01 2.9e-02 	 2.9e-02
  2	1.1e-02 3.1e-03 9.7e-04 	 9.7e-04
  3	3.0e-04 9.7e-05 2.8e-05 	 2.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.10e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.6259656612644025]
Givens rotation for v=[1.6504832788633659,0.0]
Givens rotation for v=[-2.888204648646268,-0.958223558012784]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 39. Residual norm is 9.89e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 52. Residual norm is 8.88e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.34e-02
  3	3.88e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.88e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.20e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.44e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.53e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.84e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.25e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.25e-01	1.41e+00	5.78e+00		1.12e+00
2	3.99e-02	7.89e-02	7.68e+00		1.49e+00
3	9.23e-03	3.99e-02	7.68e+00		1.49e+00
4	8.61e-05	1.43e-05	7.80e+00		1.51e+00
5	1.54e-05	4.11e-05	7.80e+00		1.51e+00
6	2.27e-07	3.97e-08	7.80e+00		1.69e+00
7	1.74e-18	1.38e-28	7.80e+00		1.94e+00
minres converged at iteration 7. |A r_k|=1.38e-28 and |r_k|=1.74e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.11e-01	6.48e-01	6.60e+00		1.01e+00
2	1.63e-02	3.10e-02	6.90e+00		1.28e+00
3	4.51e-04	2.78e-04	8.92e+00		1.66e+00
4	1.65e-05	8.95e-06	8.92e+00		1.66e+00
5	3.31e-06	9.28e-06	8.92e+00		1.66e+00
6	6.00e-08	1.36e-08	8.92e+00		1.82e+00
7	1.23e-19	2.64e-30	8.92e+00		2.22e+00
minres converged at iteration 7. |A r_k|=2.64e-30 and |r_k|=1.23e-19.
test stop by condlim
The estimated condition number (=2.46e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=5.70e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
