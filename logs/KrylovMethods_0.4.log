>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1470.90625 MB free)
Uptime: 45643.0 sec
Load Avg:  1.0078125  0.9697265625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2213542 s       6152 s     178353 s    1691588 s        112 s
#2  3501 MHz    1471018 s       1319 s     154943 s    2757928 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.24.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.13e-02
  2	8.24e-03
  3	1.46e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.24e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.16e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.86e-02
  2	1.64e-02
  3	4.19e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.64e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.85e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.63e-01
cg iterated maxIter (=1) times but reached only residual norm 1.63e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.39e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	9.78e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 9.78e-16.
=== blockcg ===
iter	max(relres)
  1	3.16e-14
blockCG iterated maxIter (=1) times but reached only residual norm 3.16e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.40e-01
  3	1.57e-01
  4	1.13e-01
  5	8.24e-02
  6	5.34e-02
  7	3.69e-02
  8	2.30e-02
  9	1.33e-02
 10	6.68e-03
 11	2.95e-03
 12	1.17e-03
 13	4.83e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.83e-04.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.40e-01
  3	1.57e-01
  4	1.13e-01
  5	8.24e-02
  6	5.34e-02
  7	3.69e-02
  8	2.30e-02
  9	1.33e-02
 10	6.68e-03
 11	2.95e-03
 12	1.17e-03
 13	4.83e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.83e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.44e+01	4.77e-01	9.69e+00
  2	2.94e+00	5.91e-01	9.65e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.94e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.10e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 9.4e-02 2.7e-02 	 2.7e-02
  2	8.2e-03 2.3e-03 5.4e-04 	 5.4e-04
  3	1.8e-04 5.1e-05 1.6e-05 	 1.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.83e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.767973362367223]
Givens rotation for v=[-0.44963037661674216,0.0]
Givens rotation for v=[0.6304410888495983,0.5442406444734987]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 49. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.19e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.66e-02
  3	4.25e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.25e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.60e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.81e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.82e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.55e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.50e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.50e-01	9.10e-01	5.83e+00		1.15e+00
2	4.45e-02	1.40e-01	7.08e+00		1.39e+00
3	3.22e-03	3.29e-03	7.08e+00		1.41e+00
4	1.88e-04	1.59e-04	7.08e+00		1.41e+00
5	2.10e-06	3.11e-07	7.08e+00		1.52e+00
6	2.71e-08	5.03e-09	7.08e+00		1.52e+00
7	5.21e-18	1.14e-26	7.08e+00		1.77e+00
minres converged at iteration 7. |A r_k|=1.14e-26 and |r_k|=5.21e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.54e-02	4.15e-01	6.47e+00		1.01e+00
2	3.37e-03	2.03e-03	6.47e+00		1.30e+00
3	2.44e-04	2.50e-04	6.47e+00		1.31e+00
4	1.70e-05	1.68e-05	6.47e+00		1.31e+00
5	9.29e-08	7.12e-09	6.47e+00		1.31e+00
6	6.24e-09	5.90e-09	6.47e+00		1.31e+00
7	1.10e-18	2.24e-27	6.47e+00		1.58e+00
minres converged at iteration 7. |A r_k|=2.24e-27 and |r_k|=1.10e-18.
test stop by condlim
The estimated condition number (=2.43e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=9.29e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
