>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1446.62890625 MB free)
Uptime: 51309.0 sec
Load Avg:  1.00439453125  1.00439453125  0.9677734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2300856 s       2584 s     174575 s    2168807 s         95 s
#2  3500 MHz    1606336 s       3528 s     149838 s    3158994 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.25.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.52e-02
  2	1.10e-02
  3	8.01e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.10e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.74e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.03e-02
  2	7.75e-02
  3	3.64e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.75e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 8.81e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	9.43e-02
cg iterated maxIter (=1) times but reached only residual norm 9.43e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.37e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.27e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.27e-16.
=== blockcg ===
iter	max(relres)
  1	4.89e-14
blockCG iterated maxIter (=1) times but reached only residual norm 4.89e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.46e-01
  3	1.74e-01
  4	1.23e-01
  5	9.21e-02
  6	6.37e-02
  7	3.71e-02
  8	1.93e-02
  9	8.94e-03
 10	4.30e-03
 11	2.04e-03
 12	8.86e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.86e-04.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.46e-01
  3	1.74e-01
  4	1.23e-01
  5	9.21e-02
  6	6.37e-02
  7	3.71e-02
  8	1.93e-02
  9	8.94e-03
 10	4.30e-03
 11	2.04e-03
 12	8.86e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.86e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.33e+01	5.27e-01	9.03e+00
  2	6.24e+00	7.08e-01	8.95e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.24e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.24e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.4e-02 3.0e-02 	 3.0e-02
  2	9.3e-03 2.9e-03 8.2e-04 	 8.2e-04
  3	2.6e-04 7.7e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.64e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.32946100706337406]
Givens rotation for v=[-1.16378985231936,0.0]
Givens rotation for v=[0.20836889269679446,2.085784096210921]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.92e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.39e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.66e-02
  3	4.22e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.22e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.36e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.56e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.69e-02.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.04e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.96e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.96e-01	6.97e-01	6.07e+00		1.31e+00
2	3.87e-02	1.82e-01	6.50e+00		1.41e+00
3	3.80e-03	8.50e-03	6.50e+00		1.41e+00
4	3.07e-04	5.06e-04	6.50e+00		1.41e+00
5	3.89e-05	9.37e-05	6.50e+00		1.41e+00
6	4.44e-07	9.85e-08	6.50e+00		1.41e+00
7	6.91e-21	2.51e-33	6.50e+00		1.41e+00
minres converged at iteration 7. |A r_k|=2.51e-33 and |r_k|=6.91e-21.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.34e-02	3.52e-01	6.19e+00		1.01e+00
2	7.77e-03	2.23e-02	6.19e+00		1.19e+00
3	3.75e-04	3.90e-04	6.19e+00		1.19e+00
4	4.06e-05	9.00e-05	6.19e+00		1.19e+00
5	3.48e-06	5.55e-06	6.19e+00		1.30e+00
6	1.12e-07	6.83e-08	6.19e+00		1.30e+00
7	2.78e-20	1.60e-31	6.19e+00		1.30e+00
minres converged at iteration 7. |A r_k|=1.60e-31 and |r_k|=2.78e-20.
test stop by condlim
The estimated condition number (=2.47e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=6.21e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
