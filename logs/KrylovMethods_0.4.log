>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1445.6796875 MB free)
Uptime: 47178.0 sec
Load Avg:  0.984375  0.9853515625  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2329179 s         66 s     184543 s    1760035 s         94 s
#2  3503 MHz    1631779 s       6725 s     158069 s    2780940 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.25.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.22e-01
  2	1.44e-02
  3	3.60e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.44e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.58e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.74e-02
  2	1.60e-02
  3	8.09e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.60e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 6.41e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.34e-01
cg iterated maxIter (=1) times but reached only residual norm 2.34e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.00e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	9.64e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 9.64e-16.
=== blockcg ===
iter	max(relres)
  1	3.72e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.72e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.31e-01
  3	1.70e-01
  4	1.41e-01
  5	1.11e-01
  6	7.01e-02
  7	3.51e-02
  8	1.82e-02
  9	9.27e-03
 10	4.30e-03
 11	1.90e-03
 12	7.80e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.80e-04.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.31e-01
  3	1.70e-01
  4	1.41e-01
  5	1.11e-01
  6	7.01e-02
  7	3.51e-02
  8	1.82e-02
  9	9.27e-03
 10	4.30e-03
 11	1.90e-03
 12	7.80e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.80e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.90e+01	7.68e-01	9.74e+00
  2	1.35e+01	1.00e+00	9.58e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.35e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.23e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 9.8e-02 3.6e-02 	 3.6e-02
  2	1.3e-02 3.6e-03 1.1e-03 	 1.1e-03
  3	3.3e-04 1.1e-04 3.4e-05 	 3.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.25e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.10134715817580134]
Givens rotation for v=[0.3194749687915253,0.0]
Givens rotation for v=[2.3428240578693704,0.4557410130986336]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 36. Residual norm is 9.94e-03.
ssor achieved desired tolerance at iteration 54. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.15e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.33e-02
  3	3.90e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.90e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.93e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.43e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.95e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.24e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.16e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.16e-01	9.15e-01	6.49e+00		1.22e+00
2	5.71e-02	3.47e-01	6.87e+00		1.29e+00
3	6.01e-03	1.32e-02	6.87e+00		1.29e+00
4	1.07e-03	3.57e-03	6.87e+00		1.34e+00
5	6.12e-05	7.13e-05	6.87e+00		1.34e+00
6	2.00e-06	1.39e-06	6.87e+00		1.34e+00
7	4.18e-08	1.73e-08	6.87e+00		1.34e+00
8	6.52e-20	1.63e-30	6.87e+00		1.58e+00
minres converged at iteration 8. |A r_k|=1.63e-30 and |r_k|=6.52e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.16e-02	5.59e-01	6.42e+00		1.01e+00
2	7.29e-03	1.43e-02	6.93e+00		1.25e+00
3	1.16e-03	3.78e-03	6.93e+00		1.25e+00
4	1.33e-04	2.84e-04	6.93e+00		1.35e+00
5	3.23e-06	1.66e-06	6.93e+00		1.35e+00
6	7.52e-08	3.69e-08	6.93e+00		1.35e+00
7	7.30e-09	1.30e-08	6.93e+00		1.39e+00
8	3.17e-19	2.34e-28	6.93e+00		1.49e+00
minres converged at iteration 8. |A r_k|=2.34e-28 and |r_k|=3.17e-19.
test stop by condlim
The estimated condition number (=2.67e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.29e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
