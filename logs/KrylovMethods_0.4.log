>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1396.3359375 MB free)
Uptime: 50954.0 sec
Load Avg:  1.07861328125  1.03857421875  1.0341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2411812 s       3188 s     199162 s    1986978 s        126 s
#2  3501 MHz    1742618 s       3992 s     172550 s    2965169 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.71e-02
  2	9.21e-03
  3	1.40e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.21e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.71e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.37e-02
  2	8.53e-02
  3	1.84e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 8.53e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 4.08e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	7.60e-02
cg iterated maxIter (=1) times but reached only residual norm 7.60e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.34e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.37e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.37e-16.
=== blockcg ===
iter	max(relres)
  1	7.31e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.31e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.81e-01
  2	2.28e-01
  3	1.65e-01
  4	1.25e-01
  5	9.49e-02
  6	5.62e-02
  7	3.46e-02
  8	2.12e-02
  9	1.10e-02
 10	5.65e-03
 11	2.63e-03
 12	1.10e-03
 13	4.31e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.31e-04.
=== blockcg ===
iter	max(relres)
  1	3.81e-01
  2	2.28e-01
  3	1.65e-01
  4	1.25e-01
  5	9.49e-02
  6	5.62e-02
  7	3.46e-02
  8	2.12e-02
  9	1.10e-02
 10	5.65e-03
 11	2.63e-03
 12	1.10e-03
 13	4.31e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.31e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.07e+01	9.53e-01	8.97e+00
  2	6.40e-01	1.04e+00	8.90e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.40e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.00e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.6e-01 1.1e-01 3.2e-02 	 3.2e-02
  2	1.1e-02 3.9e-03 1.2e-03 	 1.2e-03
  3	3.4e-04 9.8e-05 3.0e-05 	 3.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.15e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.4426087056000896]
Givens rotation for v=[-0.932257295219984,0.0]
Givens rotation for v=[-0.14485609724881812,0.3428327315536011]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 47. Residual norm is 9.87e-03.
ssor achieved desired tolerance at iteration 70. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.58e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.56e-02
  3	4.08e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.08e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.00e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.57e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.76e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.10e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.89e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.89e-01	2.61e+00	6.80e+00		1.09e+00
2	1.84e-01	2.18e+00	1.16e+01		1.87e+00
3	3.74e-02	2.03e-01	1.54e+01		2.48e+00
4	2.12e-03	1.70e-03	1.54e+01		2.95e+00
5	1.58e-05	1.43e-06	1.54e+01		3.53e+00
6	1.90e-07	2.64e-08	1.54e+01		3.70e+00
7	1.46e-15	1.24e-22	1.54e+01		3.83e+00
minres converged at iteration 7. |A r_k|=1.24e-22 and |r_k|=1.46e-15.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.20e-01	3.31e+00	9.68e+00		1.01e+00
2	7.83e-02	5.70e-01	1.52e+01		1.70e+00
3	9.11e-03	2.10e-02	1.52e+01		1.98e+00
4	7.26e-04	8.24e-04	1.52e+01		2.95e+00
5	6.05e-06	6.21e-07	1.52e+01		3.41e+00
6	7.68e-08	1.13e-08	1.52e+01		3.65e+00
7	5.70e-15	4.71e-21	1.52e+01		3.78e+00
minres converged at iteration 7. |A r_k|=4.71e-21 and |r_k|=5.70e-15.
test stop by condlim
The estimated condition number (=2.03e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=3.29e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
