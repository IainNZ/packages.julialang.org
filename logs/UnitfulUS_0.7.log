>>> 'Pkg.add("UnitfulUS")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of UnitfulUS from https://github.com/ajkeller34/UnitfulUS.jl.git
[ Info: Installing Unitful v0.7.1
[ Info: Installing UnitfulUS v0.0.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of UnitfulUS
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("UnitfulUS")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4390
Commit 79c7bdd9ec (2018-02-26 07:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4044386 s       7891 s     214411 s    1180195 s         69 s
       #2  3499 MHz     971403 s         96 s      85934 s    5222946 s          0 s
       
  Memory: 2.93927001953125 GB (697.6796875 MB free)
  Uptime: 63982.0 sec
  Load Avg:  0.9765625  1.00732421875  1.02099609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - UnitfulUS                     0.0.1
4 additional packages:
 - Compat                        0.55.0
 - Nullables                     0.0.3
 - Unitful                       0.7.1
 - tmpdaTwg0                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing UnitfulUS
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:2
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:4
in top-level scope at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:5 [inlined]
└ @ Core runtests.jl:5
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = @us_str(::LineNumberNode, ::Module, ::Any) at usmacro.jl:23
└ @ UnitfulUS usmacro.jl:23
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:6 [inlined]
└ @ Core runtests.jl:6
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:7 [inlined]
└ @ Core runtests.jl:7
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:9 [inlined]
└ @ Core runtests.jl:9
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:11 [inlined]
└ @ Core runtests.jl:11
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:14 [inlined]
└ @ Core runtests.jl:14
US string macro: Error During Test at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:14
  Test threw an exception of type LoadError
  Expression: (macroexpand($(Expr(:quote, :(#= /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:14 =# @us_str "ton gal"))))).args[1] isa ParseError
  LoadError: Base.Meta.ParseError("extra token \"gal\" after end of expression")
  Stacktrace:
   [1] #parse#1(::Bool, ::Bool, ::Bool, ::Function, ::String, ::Int64) at ./meta.jl:129
   [2] #parse at ./<missing>:0 [inlined]
   [3] #parse#4(::Bool, ::Bool, ::Function, ::String) at ./meta.jl:164
   [4] parse at ./meta.jl:164 [inlined]
   [5] #parse#865(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String) at ./deprecated.jl:57
   [6] parse(::String) at ./deprecated.jl:56
   [7] @us_str(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:23
   [8] #macroexpand#42 at ./expr.jl:75 [inlined]
   [9] macroexpand at ./expr.jl:74 [inlined]
   [10] macroexpand(::Any) at ./deprecated.jl:220
   [11] macro expansion at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:14 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:5
  in expression starting at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:14
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:17 [inlined]
└ @ Core runtests.jl:17
US string macro: Error During Test at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:17
  Test threw an exception of type LoadError
  Expression: (macroexpand($(Expr(:quote, :(#= /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:17 =# @us_str "abs(2)"))))).args[1] isa ErrorException
  LoadError: abs is not a valid function call when parsing a unit.
  Only the following functions are allowed: Symbol[:*, :/, :^, :sqrt, :√, :+, :-, ://]
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] replace_value(::Expr) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:30
   [3] @us_str(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:24
   [4] #macroexpand#42 at ./expr.jl:75 [inlined]
   [5] macroexpand at ./expr.jl:74 [inlined]
   [6] macroexpand(::Any) at ./deprecated.jl:220
   [7] macro expansion at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:17 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:5
  in expression starting at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:17
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:20 [inlined]
└ @ Core runtests.jl:20
US string macro: Error During Test at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:20
  Test threw an exception of type LoadError
  Expression: (macroexpand($(Expr(:quote, :(#= /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:20 =# @us_str "kg"))))).args[1] isa ErrorException
  LoadError: Symbol kg_us could not be found in UnitfulUS.
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] replace_value(::Symbol) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:59
   [3] @us_str(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:24
   [4] #macroexpand#42 at ./expr.jl:75 [inlined]
   [5] macroexpand at ./expr.jl:74 [inlined]
   [6] macroexpand(::Any) at ./deprecated.jl:220
   [7] macro expansion at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:20 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:5
  in expression starting at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:20
┌ Warning: `macroexpand(x)` is deprecated, use `macroexpand(module, x)` instead.
│   caller = macro expansion at runtests.jl:23 [inlined]
└ @ Core runtests.jl:23
US string macro: Error During Test at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:23
  Test threw an exception of type LoadError
  Expression: (macroexpand($(Expr(:quote, :(#= /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:23 =# @us_str "ustrcheck"))))).args[1] isa ErrorException
  LoadError: Symbol ustrcheck_us could not be found in UnitfulUS.
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] replace_value(::Symbol) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:59
   [3] @us_str(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/UnitfulUS/src/usmacro.jl:24
   [4] #macroexpand#42 at ./expr.jl:75 [inlined]
   [5] macroexpand at ./expr.jl:74 [inlined]
   [6] macroexpand(::Any) at ./deprecated.jl:220
   [7] macro expansion at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:23 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:5
  in expression starting at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:23
Test Summary:   | Pass  Error  Total
US string macro |    5      4      9
ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for UnitfulUS
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/UnitfulUS/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: UnitfulUS had test errors

>>> End of log
