>>> 'Pkg.add("HyperDualNumbers")' log
INFO: No packages to install, update or remove
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of HyperDualNumbers
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("HyperDualNumbers")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1440.953125 MB free)
Uptime: 44456.0 sec
Load Avg:  0.9970703125  0.9931640625  1.20556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2748419 s       1726 s     261347 s     851518 s         25 s
#2  3500 MHz     916411 s       5451 s     114874 s    3270539 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - HyperDualNumbers              1.0.0+             master
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.32.0
 - SpecialFunctions              0.2.0
INFO: Testing HyperDualNumbers
Running tests:
  * test_basics.jl *

Examples of show() for hyperdual numbers with NaN:

hdNaN = HyperDualNumbers.Hyper{Float64}(NaN,0.0,0.0,0.0)
hdNaN + hd4 = HyperDualNumbers.Hyper{Float64}(NaN,4.0,3.0,4.0)

Testing includes Tim Holy's division performance improvement.
Testing includes ngedwin98's fixes for asin, acos and atan.



  * test_TimHoly_example.jl *
HyperDualNumbers.Hyper{Rational{Int64}}(8//25,-8//5,-8//5,144//25)



  * test_Paper_example.jl *

"THE" example
f(1.5) = 4.497780053946162

t0 = HyperDualNumbers.Hyper{Float64}(1.5,1.0,1.0,0.0)
t1 = HyperDualNumbers.Hyper{Float64}(4.4816890703380645,4.4816890703380645,4.4816890703380645,4.4816890703380645)
t2 = HyperDualNumbers.Hyper{Float64}(0.9974949866040544,0.0707372016677029,0.0707372016677029,-0.9974949866040544)
t3 = HyperDualNumbers.Hyper{Float64}(0.9925037693693151,0.21114975082386195,0.21114975082386195,-2.947564004699509)
t4 = HyperDualNumbers.Hyper{Float64}(0.0707372016677029,-0.9974949866040544,-0.9974949866040544,-0.0707372016677029)
t5 = HyperDualNumbers.Hyper{Float64}(0.000353951393082256,-0.014973651704218029,-0.014973651704218029,0.42123764746847714)
t5a = HyperDualNumbers.Hyper{Float64}(0.000353951393082256,-0.014973651704218029,-0.014973651704218029,0.42123764746847714)
t6 = HyperDualNumbers.Hyper{Float64}(0.9928577207623973,0.19617609911964393,0.19617609911964393,-2.526326357231032)
t7 = HyperDualNumbers.Hyper{Float64}(1.0035903837494204,-0.0991483686337086,-0.0991483686337086,1.3062034995890381)
t8 = HyperDualNumbers.Hyper{Float64}(4.497780053946162,4.053427893898621,4.053427893898621,9.463073681596603)

f(t0) = HyperDualNumbers.Hyper{Float64}(4.497780053946162,4.05342789389862,4.05342789389862,9.463073681596601)



  * test_Erf_example.jl *
24.274806105338804   = 24.274806105338804
0.841601975531715   = 0.8416019755317149
0.008545857737238427   = 0.00854585773723843
Test Erf Passed



INFO: HyperDualNumbers tests passed

>>> End of log
