>>> 'Pkg.add("IntervalRootFinding")' log
INFO: Installing AdjacentFloats v0.0.6
INFO: Installing CRlibm v0.5.0
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DiffBase v0.2.0
INFO: Installing ErrorfreeArithmetic v0.0.3
INFO: Installing FastRounding v0.0.5
INFO: Installing ForwardDiff v0.5.0
INFO: Installing IntervalArithmetic v0.11.0
INFO: Installing IntervalRootFinding v0.1.1
INFO: Installing NaNMath v0.2.6
INFO: Installing RealInterface v0.0.3
INFO: Installing RecipesBase v0.2.2
INFO: Installing SpecialFunctions v0.3.1
INFO: Installing StaticArrays v0.6.2
INFO: Building CRlibm
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of IntervalRootFinding
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IntervalRootFinding")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1978.30078125 MB free)
Uptime: 78538.0 sec
Load Avg:  0.99462890625  0.9853515625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4995750 s       6845 s     224981 s    1403454 s         43 s
#2  3499 MHz    1155226 s         92 s     120018 s    6441331 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - IntervalRootFinding           0.1.1
 - JSON                          0.13.0
14 additional packages:
 - AdjacentFloats                0.0.6
 - CRlibm                        0.5.0
 - CommonSubexpressions          0.0.1
 - Compat                        0.30.0
 - DiffBase                      0.2.0
 - ErrorfreeArithmetic           0.0.3
 - FastRounding                  0.0.5
 - ForwardDiff                   0.5.0
 - IntervalArithmetic            0.11.0
 - NaNMath                       0.2.6
 - RealInterface                 0.0.3
 - RecipesBase                   0.2.2
 - SpecialFunctions              0.3.1
 - StaticArrays                  0.6.2
INFO: Computing test dependencies for IntervalRootFinding...
INFO: Installing Polynomials v0.1.6
INFO: Testing IntervalRootFinding
`bisect` function: Test Failed
  Expression: bisect(X) == (0 .. 0.5, 0.5 .. 1)
   Evaluated: ([0, 0.5], [0.5, 1]) == ([0, 0.500001], [0.499999, 1])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl:7 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
`bisect` function: Test Failed
  Expression: bisect(X, 0.25) == (0 .. 0.25, 0.25 .. 1)
   Evaluated: ([0, 0.25], [0.25, 1]) == ([0, 0.250001], [0.249999, 1])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl:8 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
`bisect` function: Test Failed
  Expression: bisect(X, 0.25) == ((0 .. 1) × (0 .. 0.5), (0 .. 1) × (0.5 .. 2))
   Evaluated: ([0, 1] × [0, 0.5], [0, 1] × [0.5, 2]) == ([0, 1] × [0, 0.500001], [0, 1] × [0.499999, 2])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl:19 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
`bisect` function: Test Failed
  Expression: bisect(X, 1, 0.5) == ((0 .. 0.5) × (0 .. 2), (0.5 .. 1) × (0 .. 2))
   Evaluated: ([0, 0.5] × [0, 2], [0.5, 1] × [0, 2]) == ([0, 0.500001] × [0, 2], [0.499999, 1] × [0, 2])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl:20 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
`bisect` function: Test Failed
  Expression: bisect(X, 1, 0.25) == ((0 .. 0.25) × (0 .. 2), (0.25 .. 1) × (0 .. 2))
   Evaluated: ([0, 0.25] × [0, 2], [0.25, 1] × [0, 2]) == ([0, 0.250001] × [0, 2], [0.249999, 1] × [0, 2])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl:21 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
Test Summary:     | Pass  Fail  Total
`bisect` function |    5     5     10
ERROR: LoadError: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/IntervalRootFinding/test/bisect.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/IntervalRootFinding/test/runtests.jl, in expression starting on line 4
=========================[ ERROR: IntervalRootFinding ]=========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/IntervalRootFinding/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Polynomials v0.1.6
ERROR: IntervalRootFinding had test errors

>>> End of log
