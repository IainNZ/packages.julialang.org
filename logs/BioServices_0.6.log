>>> 'Pkg.add("BioServices")' log
INFO: Installing AbstractTrees v0.1.0
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing BioServices v0.1.3
INFO: Installing DataStructures v0.8.4
INFO: Installing Gumbo v0.4.1
INFO: Installing HTTP v0.6.12
INFO: Installing IniFile v0.4.0
INFO: Installing IterTools v0.2.1
INFO: Installing LightXML v0.6.0
INFO: Installing MbedTLS v0.5.12
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Installing XMLDict v0.1.3
INFO: Building MbedTLS
Info: using prebuilt binaries
INFO: Building Gumbo
INFO: Building LightXML
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of BioServices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BioServices")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (596.3125 MB free)
Uptime: 16911.0 sec
Load Avg:  1.0029296875  1.0146484375  0.9931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1072109 s         73 s      83339 s     284418 s          2 s
#2  3499 MHz     209894 s        107 s      32259 s    1424368 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - BioServices                   0.1.3
 - JSON                          0.17.2
15 additional packages:
 - AbstractTrees                 0.1.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Compat                        0.69.0
 - DataStructures                0.8.4
 - Gumbo                         0.4.1
 - HTTP                          0.6.12
 - IniFile                       0.4.0
 - IterTools                     0.2.1
 - LightXML                      0.6.0
 - MbedTLS                       0.5.12
 - Nullables                     0.0.6
 - SHA                           0.5.7
 - URIParser                     0.3.1
 - XMLDict                       0.1.3
INFO: Testing BioServices
Running tests:
-----------------------------------------
-----------------------------------------
       Testing: EUtils
-----------------------------------------
-----------------------------------------
epost: Error During Test
  Got an exception of type HTTP.IOExtras.IOError outside of a @test
  IOError(EOFError() during request(https://eutils.ncbi.nlm.nih.gov/entrez/eutils/epost.fcgi?id=NP_005537&db=protein))
  
  Stacktrace:
   [1] readuntil(::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Parsers.#find_end_of_header) at /home/vagrant/.julia/v0.6/HTTP/src/IOExtras.jl:171
   [2] readheaders(::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Response) at /home/vagrant/.julia/v0.6/HTTP/src/Messages.jl:468
   [3] startread(::HTTP.Streams.Stream{HTTP.Messages.Response,HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}) at /home/vagrant/.julia/v0.6/HTTP/src/Streams.jl:146
   [4] macro expansion at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:58 [inlined]
   [5] macro expansion at ./task.jl:302 [inlined]
   [6] #request#1(::Void, ::Void, ::Int64, ::Array{Any,1}, ::Function, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:53
   [7] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [8] #request#1(::Void, ::Type{T} where T, ::Array{Any,1}, ::Function, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/ConnectionRequest.jl:45
   [9] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [10] #request#1(::Array{Any,1}, ::Function, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/HTTP/src/ExceptionRequest.jl:19
   [11] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [12] (::Base.###49#50#52{ExponentialBackOff,HTTP.RetryRequest.##2#3{Bool,HTTP.Messages.Request},HTTP.#request})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at ./error.jl:139
   [13] (::Base.#kw###49#51)(::Array{Any,1}, ::Base.##49#51, ::Type{T} where T, ::Vararg{Any,N} where N) at ./<missing>:0
   [14] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RetryRequest.jl:44
   [15] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [16] #request#1(::VersionNumber, ::String, ::Void, ::Void, ::Array{Any,1}, ::Function, ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/MessageRequest.jl:44
   [17] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RedirectRequest.jl:24
   [18] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RedirectRequest.jl:21
   [19] #request#7(::Array{Any,1}, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:289
   [20] #request#8(::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}, ::String, ::Array{Any,1}, ::Function, ::String, ::String, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:303
   [21] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::String, ::String, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at ./<missing>:0
   [22] #epost#3(::Array{Any,1}, ::Function, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.6/BioServices/src/eutils.jl:94
   [23] (::BioServices.EUtils.#kw##epost)(::Array{Any,1}, ::BioServices.EUtils.#epost, ::Dict{Any,Any}) at ./<missing>:0
   [24] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/eutils.jl:25 [inlined]
   [25] macro expansion at ./test.jl:860 [inlined]
   [26] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/eutils.jl:23 [inlined]
   [27] macro expansion at ./test.jl:860 [inlined]
   [28] anonymous at ./<missing>:?
   [29] include_from_node1(::String) at ./loading.jl:576
   [30] include(::String) at ./sysimg.jl:14
   [31] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/runtests.jl:21 [inlined]
   [32] anonymous at ./<missing>:?
   [33] include_from_node1(::String) at ./loading.jl:576
   [34] include(::String) at ./sysimg.jl:14
   [35] process_options(::Base.JLOptions) at ./client.jl:305
   [36] _start() at ./client.jl:371
esummary: Error During Test
  Got an exception of type HTTP.IOExtras.IOError outside of a @test
  IOError(EOFError() during request(https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?WebEnv=NCID_1_5609500_130.14.18.34_9001_1531456970_2140445920_0MetA0_S_MegaStore&query_key=1&db=pubmed))
  
  Stacktrace:
   [1] readuntil(::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Parsers.#find_end_of_header) at /home/vagrant/.julia/v0.6/HTTP/src/IOExtras.jl:171
   [2] readheaders(::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Response) at /home/vagrant/.julia/v0.6/HTTP/src/Messages.jl:468
   [3] startread(::HTTP.Streams.Stream{HTTP.Messages.Response,HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}) at /home/vagrant/.julia/v0.6/HTTP/src/Streams.jl:146
   [4] macro expansion at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:58 [inlined]
   [5] macro expansion at ./task.jl:302 [inlined]
   [6] #request#1(::Void, ::Void, ::Int64, ::Array{Any,1}, ::Function, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/StreamRequest.jl:53
   [7] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.StreamRequest.StreamLayer}, ::HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [8] #request#1(::Void, ::Type{T} where T, ::Array{Any,1}, ::Function, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/ConnectionRequest.jl:45
   [9] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [10] #request#1(::Array{Any,1}, ::Function, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/HTTP/src/ExceptionRequest.jl:19
   [11] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [12] (::Base.###49#50#52{ExponentialBackOff,HTTP.RetryRequest.##2#3{Bool,HTTP.Messages.Request},HTTP.#request})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at ./error.jl:139
   [13] (::Base.#kw###49#51)(::Array{Any,1}, ::Base.##49#51, ::Type{T} where T, ::Vararg{Any,N} where N) at ./<missing>:0
   [14] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RetryRequest.jl:44
   [15] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::Type{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}) at ./<missing>:0
   [16] #request#1(::VersionNumber, ::String, ::Void, ::Void, ::Array{Any,1}, ::Function, ::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/MessageRequest.jl:44
   [17] #request#1(::Int64, ::Bool, ::Array{Any,1}, ::Function, ::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RedirectRequest.jl:24
   [18] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/RedirectRequest.jl:21
   [19] #request#7(::Array{Any,1}, ::Function, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:289
   [20] #request#8(::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}, ::String, ::Array{Any,1}, ::Function, ::String, ::String, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/HTTP/src/HTTP.jl:303
   [21] (::HTTP.#kw##request)(::Array{Any,1}, ::HTTP.#request, ::String, ::String, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at ./<missing>:0
   [22] #esummary#4(::Array{Any,1}, ::Function, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.6/BioServices/src/eutils.jl:109
   [23] (::BioServices.EUtils.#kw##esummary)(::Array{Any,1}, ::BioServices.EUtils.#esummary, ::Dict{Any,Any}) at ./<missing>:0
   [24] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/eutils.jl:61 [inlined]
   [25] macro expansion at ./test.jl:860 [inlined]
   [26] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/eutils.jl:34 [inlined]
   [27] macro expansion at ./test.jl:860 [inlined]
   [28] anonymous at ./<missing>:?
   [29] include_from_node1(::String) at ./loading.jl:576
   [30] include(::String) at ./sysimg.jl:14
   [31] macro expansion at /home/vagrant/.julia/v0.6/BioServices/test/runtests.jl:21 [inlined]
   [32] anonymous at ./<missing>:?
   [33] include_from_node1(::String) at ./loading.jl:576
   [34] include(::String) at ./sysimg.jl:14
   [35] process_options(::Base.JLOptions) at ./client.jl:305
   [36] _start() at ./client.jl:371
Test Summary: | Pass  Error  Total
EUtils        |   35      2     37
  einfo       |    4             4
  esearch     |    4             4
  epost       |           1      1
  esummary    |   11      1     12
  efetch      |    5             5
  elink       |    3             3
  egquery     |    3             3
  espell      |    4             4
  ecitmatch   |    1             1
ERROR: LoadError: LoadError: Some tests did not pass: 35 passed, 0 failed, 2 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/BioServices/test/eutils.jl, in expression starting on line 2
while loading /home/vagrant/.julia/v0.6/BioServices/test/runtests.jl, in expression starting on line 15
=============================[ ERROR: BioServices ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/BioServices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BioServices had test errors

>>> End of log
