>>> 'Pkg.add("MultiPoly")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing Combinatorics v0.5.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing MultiPoly v0.1.0
[ Info: Installing Polynomials v0.2.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MultiPoly
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MultiPoly")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.3979
Commit a2e4f16a43 (2018-02-14 20:50 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4992836 s       1258 s     228290 s    1560279 s         96 s
       #2  3500 MHz    1384185 s       5604 s     111738 s    6264140 s          1 s
       
  Memory: 2.93927001953125 GB (1192.375 MB free)
  Uptime: 79277.0 sec
  Load Avg:  1.00830078125  1.01806640625  1.01318359375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - MultiPoly                     0.1.0
6 additional packages:
 - Combinatorics                 0.5.0
 - Compat                        0.53.0
 - DataStructures                0.7.4
 - IterTools                     0.2.1
 - Nullables                     0.0.3
 - Polynomials                   0.2.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing MultiPoly
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/MultiPoly/test/runtests.jl:1
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:49 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:49
WARNING: importing deprecated binding Base.Void into Combinatorics.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:44
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:58 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:58
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:58 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:58
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:77 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:77
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:77 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:77
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:86 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing numbers.jl:86
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/numbers.jl:81
┌ Warning: Deprecated syntax `parametric method syntax factorial{T <: Integer}(n::T, k::T)` around /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:18.
│ Use `factorial(n::T, k::T) where T <: Integer` instead.
└ @ nothing factorials.jl:18
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:43 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing factorials.jl:43
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:38
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:56 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing factorials.jl:56
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:51
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:66 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing factorials.jl:66
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/factorials.jl:61
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:8.
│ Use `struct` instead.
└ @ nothing combinations.jl:8
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:76.
│ Use `struct` instead.
└ @ nothing combinations.jl:76
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:81.
│ Use `struct` instead.
└ @ nothing combinations.jl:81
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:140.
│ Use `struct` instead.
└ @ nothing combinations.jl:140
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:216.
│ Use `struct` instead.
└ @ nothing combinations.jl:216
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{Combinations{T}})` around /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:37.
│ Use `eltype(#unused#::Type{Combinations{T}}) where T` instead.
└ @ nothing combinations.jl:37
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{MultiSetCombinations{T}})` around /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:147.
│ Use `eltype(#unused#::Type{MultiSetCombinations{T}}) where T` instead.
└ @ nothing combinations.jl:147
┌ Warning: Deprecated syntax `parametric method syntax multiset_combinations{T <: Integer}(m, f::Vector{T}, t::Integer)` around /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:171.
│ Use `multiset_combinations(m, f::Vector{T}, t::Integer) where T <: Integer` instead.
└ @ nothing combinations.jl:171
┌ Warning: Deprecated syntax `parametric method syntax multiset_combinations{T}(a::T, t::Integer)` around /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:181.
│ Use `multiset_combinations(a::T, t::Integer) where T` instead.
└ @ nothing combinations.jl:181
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{WithReplacementCombinations{T}})` around /home/vagrant/.julia/v0.7/Combinatorics/src/combinations.jl:221.
│ Use `eltype(#unused#::Type{WithReplacementCombinations{T}}) where T` instead.
└ @ nothing combinations.jl:221
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:12.
│ Use `struct` instead.
└ @ nothing permutations.jl:12
┌ Warning: Deprecated syntax `0 <= p.t <= length(p.a)?` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:19.
│ Use `0 <= p.t <= length(p.a) ?` instead.
└ @ nothing permutations.jl:19
┌ Warning: Deprecated syntax `0 <= p.t <= length(p.a) ?factorial` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:19.
│ Use `0 <= p.t <= length(p.a) ? factorial` instead.
└ @ nothing permutations.jl:19
┌ Warning: Deprecated syntax `0 <= p.t <= length(p.a) ? factorial(length(p.a), (length(p.a) - p.t)):` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:19.
│ Use `0 <= p.t <= length(p.a) ? factorial(length(p.a), (length(p.a) - p.t)) :` instead.
└ @ nothing permutations.jl:19
┌ Warning: Deprecated syntax `0 <= p.t <= length(p.a) ? factorial(length(p.a), (length(p.a) - p.t)) :0` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:19.
│ Use `0 <= p.t <= length(p.a) ? factorial(length(p.a), (length(p.a) - p.t)) : 0` instead.
└ @ nothing permutations.jl:19
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:72.
│ Use `struct` instead.
└ @ nothing permutations.jl:72
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{Permutations{T}})` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:17.
│ Use `eltype(#unused#::Type{Permutations{T}}) where T` instead.
└ @ nothing permutations.jl:17
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{MultiSetPermutations{T}})` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:79.
│ Use `eltype(#unused#::Type{MultiSetPermutations{T}}) where T` instead.
└ @ nothing permutations.jl:79
┌ Warning: Deprecated syntax `parametric method syntax multiset_permutations{T <: Integer}(m, f::Vector{T}, t::Integer)` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:113.
│ Use `multiset_permutations(m, f::Vector{T}, t::Integer) where T <: Integer` instead.
└ @ nothing permutations.jl:113
┌ Warning: Deprecated syntax `parametric method syntax multiset_permutations{T}(a::T, t::Integer)` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:122.
│ Use `multiset_permutations(a::T, t::Integer) where T` instead.
└ @ nothing permutations.jl:122
┌ Warning: Deprecated syntax `parametric method syntax nthperm{T <: Integer}(p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:161.
│ Use `nthperm(p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing permutations.jl:161
┌ Warning: Deprecated syntax `parametric method syntax levicivita{T <: Integer}(p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:188.
│ Use `levicivita(p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing permutations.jl:188
┌ Warning: Deprecated syntax `parametric method syntax parity{T <: Integer}(p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/Combinatorics/src/permutations.jl:221.
│ Use `parity(p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing permutations.jl:221
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:13.
│ Use `struct` instead.
└ @ nothing partitions.jl:13
┌ Warning: Deprecated syntax `call to `*` inside call to bitshift operator` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:71.
│ Use `parenthesized call to `*`` instead.
└ @ nothing partitions.jl:71
┌ Warning: Deprecated syntax `call to `*` inside call to bitshift operator` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:71.
│ Use `parenthesized call to `*`` instead.
└ @ nothing partitions.jl:71
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:83.
│ Use `struct` instead.
└ @ nothing partitions.jl:83
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:149.
│ Use `struct` instead.
└ @ nothing partitions.jl:149
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:218.
│ Use `struct` instead.
└ @ nothing partitions.jl:218
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:353.
│ Use `@doc doc" "` instead.
└ @ nothing partitions.jl:353
┌ Warning: Use of final value of loop variable `j` around /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:120 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing partitions.jl:120
┌ Warning: Use of final value of loop variable `j` around /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:186 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing partitions.jl:186
┌ Warning: Use of final value of loop variable `j` around /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:268 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing partitions.jl:268
┌ Warning: Use of final value of loop variable `k` around /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:281 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing partitions.jl:281
WARNING: importing deprecated binding Base.@doc_str into Combinatorics.
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/partitions.jl:346
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Combinatorics/src/multinomials.jl:6.
│ Use `struct` instead.
└ @ nothing multinomials.jl:6
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/Combinatorics/src/youngdiagrams.jl:159.
│ Use `@doc doc" "` instead.
└ @ nothing youngdiagrams.jl:159
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/Combinatorics/src/youngdiagrams.jl:149
WARNING: importing deprecated binding Base.diff into MultiPoly.
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:1.
│ Use `struct` instead.
└ @ nothing mpoly.jl:1
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:8.
│ Use `eltype(#unused#::MPoly{T}) where T` instead.
└ @ nothing mpoly.jl:8
┌ Warning: Deprecated syntax `parametric method syntax zero{T}(::Type{MPoly{T}},; vars::Vector{Symbol} = Symbol[])` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:14.
│ Use `zero(#s1::Type{MPoly{T}},; vars::Vector{Symbol} = Symbol[]) where T` instead.
└ @ nothing mpoly.jl:14
┌ Warning: Deprecated syntax `parametric method syntax zero{T}(p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:15.
│ Use `zero(p::MPoly{T}) where T` instead.
└ @ nothing mpoly.jl:15
┌ Warning: Deprecated syntax `parametric method syntax one{T}(::Type{MPoly{T}},; vars::Vector{Symbol} = Symbol[])` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:17.
│ Use `one(#s3::Type{MPoly{T}},; vars::Vector{Symbol} = Symbol[]) where T` instead.
└ @ nothing mpoly.jl:17
┌ Warning: Deprecated syntax `parametric method syntax one{T}(p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:18.
│ Use `one(p::MPoly{T}) where T` instead.
└ @ nothing mpoly.jl:18
┌ Warning: Deprecated syntax `parametric method syntax generators{T}(::Type{MPoly{T}}, vars::Symbol...)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:21.
│ Use `generators(#unused#::Type{MPoly{T}}, vars::Symbol...) where T` instead.
└ @ nothing mpoly.jl:21
┌ Warning: Deprecated syntax `parametric method syntax generator{T}(::Type{MPoly{T}}, var::Symbol)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:25.
│ Use `generator(#unused#::Type{MPoly{T}}, var::Symbol) where T` instead.
└ @ nothing mpoly.jl:25
┌ Warning: Deprecated syntax `parametric method syntax call{T}(::Type{MPoly{T}}, var::Symbol)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:28.
│ Use `call(#unused#::Type{MPoly{T}}, var::Symbol) where T` instead.
└ @ nothing mpoly.jl:28
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, U}(::Type{MPoly{T}}, ::Type{MPoly{U}})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:34.
│ Use `promote_rule(#unused#::Type{MPoly{T}}, #unused#::Type{MPoly{U}}) where {T, U}` instead.
└ @ nothing mpoly.jl:34
┌ Warning: Deprecated syntax `parametric method syntax promote_rule{T, U}(::Type{MPoly{T}}, ::Type{U})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:35.
│ Use `promote_rule(#unused#::Type{MPoly{T}}, #unused#::Type{U}) where {T, U}` instead.
└ @ nothing mpoly.jl:35
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(P::Type{MPoly{T}}, p::MPoly)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:38.
│ Use `convert(P::Type{MPoly{T}}, p::MPoly) where T` instead.
└ @ nothing mpoly.jl:38
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{MPoly{T}}, c::T)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:45.
│ Use `convert(#unused#::Type{MPoly{T}}, c::T) where T` instead.
└ @ nothing mpoly.jl:45
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(p::MPoly{T}, m::Vector{Int})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:50.
│ Use `getindex(p::MPoly{T}, m::Vector{Int}) where T` instead.
└ @ nothing mpoly.jl:50
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(p::MPoly{T}, v, m::Int...)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:56.
│ Use `setindex!(p::MPoly{T}, v, m::Int...) where T` instead.
└ @ nothing mpoly.jl:56
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(p::MPoly{T}, v, m::Vector{Int})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:64.
│ Use `setindex!(p::MPoly{T}, v, m::Vector{Int}) where T` instead.
└ @ nothing mpoly.jl:64
┌ Warning: Deprecated syntax `parametric method syntax copy{T}(p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpoly.jl:70.
│ Use `copy(p::MPoly{T}) where T` instead.
└ @ nothing mpoly.jl:70
┌ Warning: Deprecated syntax `parametric method syntax +{T, U}(p::MPoly{T}, s::U)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:25.
│ Use `(p::MPoly{T} + s::U) where {T, U}` instead.
└ @ nothing mpolyarithmetic.jl:25
┌ Warning: Deprecated syntax `parametric method syntax -{T, U}(p::MPoly{T}, s::U)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:46.
│ Use `(p::MPoly{T} - s::U) where {T, U}` instead.
└ @ nothing mpolyarithmetic.jl:46
┌ Warning: Deprecated syntax `parametric method syntax *{T, U}(s::T, p::MPoly{U})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:74.
│ Use `(s::T * p::MPoly{U}) where {T, U}` instead.
└ @ nothing mpolyarithmetic.jl:74
┌ Warning: Deprecated syntax `parametric method syntax /{T, U}(p::MPoly{T}, s::U)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:98.
│ Use `(p::MPoly{T} / s::U) where {T, U}` instead.
└ @ nothing mpolyarithmetic.jl:98
┌ Warning: Deprecated syntax `parametric method syntax real{T <: Real}(p::MPoly{Complex{T}})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:116.
│ Use `real(p::MPoly{Complex{T}}) where T <: Real` instead.
└ @ nothing mpolyarithmetic.jl:116
┌ Warning: Deprecated syntax `parametric method syntax real{T <: Real}(p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:123.
│ Use `real(p::MPoly{T}) where T <: Real` instead.
└ @ nothing mpolyarithmetic.jl:123
┌ Warning: Deprecated syntax `parametric method syntax imag{T <: Real}(p::MPoly{Complex{T}})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:126.
│ Use `imag(p::MPoly{Complex{T}}) where T <: Real` instead.
└ @ nothing mpolyarithmetic.jl:126
┌ Warning: Deprecated syntax `parametric method syntax imag{T <: Real}(p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:133.
│ Use `imag(p::MPoly{T}) where T <: Real` instead.
└ @ nothing mpolyarithmetic.jl:133
┌ Warning: Deprecated syntax `parametric method syntax print{T}(io::IO, p::MPoly{T})` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyprinting.jl:27.
│ Use `print(io::IO, p::MPoly{T}) where T` instead.
└ @ nothing mpolyprinting.jl:27
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultiPoly/src/polyunion.jl:1.
│ Use `struct` instead.
└ @ nothing polyunion.jl:1
┌ Warning: Deprecated syntax `parametric method syntax evaluate{T}(p::MPoly{T}, es...)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyevaluation.jl:2.
│ Use `evaluate(p::MPoly{T}, es...) where T` instead.
└ @ nothing mpolyevaluation.jl:2
┌ Warning: Deprecated syntax `parametric method syntax evaluate_basis{T}(p::MPoly{T}, es...)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyevaluation.jl:14.
│ Use `evaluate_basis(p::MPoly{T}, es...) where T` instead.
└ @ nothing mpolyevaluation.jl:14
┌ Warning: Deprecated syntax `parametric method syntax diff{T}(p::MPoly{T}, symbol::Symbol, n::Int = 1)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolycalculus.jl:2.
│ Use `diff(p::MPoly{T}, symbol::Symbol, n::Int = 1) where T` instead.
└ @ nothing mpolycalculus.jl:2
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/src/mpolycalculus.jl:1
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/src/mpolycalculus.jl:1
WARNING: Base.diff is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/src/mpolycalculus.jl:1
┌ Warning: Deprecated syntax `parametric method syntax integrate{T}(p::MPoly{T}, symbol::Symbol, n::Int = 1)` around /home/vagrant/.julia/v0.7/MultiPoly/src/mpolycalculus.jl:21.
│ Use `integrate(p::MPoly{T}, symbol::Symbol, n::Int = 1) where T` instead.
└ @ nothing mpolycalculus.jl:21
WARNING: importing deprecated binding Base.eye into MultiPoly.
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/test/mpolycalculus.jl:1
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/test/mpolycalculus.jl:1
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultiPoly/test/mpolycalculus.jl:1
┌ Warning: `eye(T::Type, m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, m)`. If `T` element type is not necessary, consider the shorter `Matrix(I, m, m)`(with default `eltype(I)` `Bool`)
│   caller = generators(::Type{MPoly{Float64}}, ::Symbol, ::Vararg{Symbol,N} where N) at mpoly.jl:21
└ @ MultiPoly mpoly.jl:21
┌ Warning: `method_exists(f, t)` is deprecated, use `hasmethod(f, t)` instead.
│   caller = setindex!(::MPoly{Float64}, ::Float64, ::Int64, ::Int64) at mpoly.jl:57
└ @ MultiPoly mpoly.jl:57
ERROR: LoadError: LoadError: MethodError: no method matching Array(::Type{Int64}, ::Int64, ::Int64)
Closest candidates are:
  Array(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/LinearAlgebra/src/uniformscaling.jl:387
  Array(::Any) where T<:AbstractArray at abstractarray.jl:21
Stacktrace:
 [1] PolyUnion(::Array{MPoly{Float64},1}) at /home/vagrant/.julia/v0.7/MultiPoly/src/polyunion.jl:9
 [2] * at /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:63 [inlined]
 [3] ^(::MPoly{Float64}, ::Int64) at /home/vagrant/.julia/v0.7/MultiPoly/src/mpolyarithmetic.jl:92 (repeats 2 times)
 [4] @generated body at ./none:0 [inlined]
 [5] literal_pow(::typeof(^), ::MPoly{Float64}, ::Val{3}) at ./<missing>:0
 [6] top-level scope
 [7] include at ./boot.jl:295 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1067
 [9] include(::Module, ::String) at ./sysimg.jl:27
 [10] include(::String) at ./sysimg.jl:66
 [11] top-level scope
 [12] include at ./boot.jl:295 [inlined]
 [13] include_relative(::Module, ::String) at ./loading.jl:1067
 [14] include(::Module, ::String) at ./sysimg.jl:27
 [15] exec_options(::Base.JLOptions) at ./client.jl:332
 [16] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/MultiPoly/test/mpolycalculus.jl:3
in expression starting at /home/vagrant/.julia/v0.7/MultiPoly/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for MultiPoly
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/MultiPoly/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:72
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:734
ERROR: MultiPoly had test errors

>>> End of log
