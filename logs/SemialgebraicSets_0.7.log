>>> 'Pkg.add("SemialgebraicSets")' log
[ Info: Installing MultivariatePolynomials v0.1.2  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SemialgebraicSets v0.0.2        @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("SemialgebraicSets")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2379783 s       5917 s     123447 s     652032 s         21 s
       #2  3500 MHz     465094 s        696 s      44946 s    3145580 s          0 s
       
  Memory: 2.93927001953125 GB (674.16796875 MB free)
  Uptime: 37099.0 sec
  Load Avg:  0.87841796875  0.94677734375  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - SemialgebraicSets             0.0.2
4 additional packages:
 - Compat                        0.45.0
 - MultivariatePolynomials       0.1.2
 - Nullables                     0.0.3
 - tmpFvnkhC                     0.0.0-             non-repo (unregistered)
┌ Info: Computing test dependencies for SemialgebraicSets...
└                                                  @ Base.Pkg.Entry entry.jl:713
[ Info: Installing DynamicPolynomials v0.0.2       @ Base.Pkg.Entry entry.jl:543
[ Info: Testing SemialgebraicSets                  @ Base.Pkg.Entry entry.jl:723
WARNING: importing deprecated binding Base.Void into MultivariatePolynomials.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:11
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:14
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/src/comparison.jl:15
┌ Warning: Use of final value of loop variable `i` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/groebner.jl:131 is deprecated. In the future the variable will be local to the loop instead.
└                                                      @ nothing groebner.jl:131
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
WARNING: importing deprecated binding Base.Void into SemialgebraicSets.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:19
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:37 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└                                                          @ nothing schur.jl:37
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/src/schur.jl:19
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/SemialgebraicSets/src/variety.jl:4.
│ Use `mutable struct` instead.
└                                                         @ nothing variety.jl:4
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/runtests.jl:2
WARNING: importing deprecated binding Base.IntSet into DynamicPolynomials.
WARNING: Base.IntSet is deprecated, use BitSet instead.
 in module DynamicPolynomials
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/macro.jl:1
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Polynomial{true,Int64}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = polynomial at DynamicPolynomials.jl:30 [inlined]
└                                                @ Core DynamicPolynomials.jl:30
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Polynomial{true,Int64}}, ::DynamicPolynomials.PolyVar{true}) at poly.jl:51
└                                                @ DynamicPolynomials poly.jl:51
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Term{true,Int64}}, ::DynamicPolynomials.PolyVar{true}) at term.jl:24
└                                                @ DynamicPolynomials term.jl:24
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Term{true,Int64}}, ::DynamicPolynomials.PolyVar{true}) at term.jl:24
└                                                @ DynamicPolynomials term.jl:24
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = insertvar(::Array{DynamicPolynomials.PolyVar{true},1}, ::DynamicPolynomials.PolyVar{true}, ::Int64) at mult.jl:14
└                                                @ DynamicPolynomials mult.jl:14
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = insertvar(::Array{DynamicPolynomials.PolyVar{true},1}, ::DynamicPolynomials.PolyVar{true}, ::Int64) at mult.jl:15
└                                                @ DynamicPolynomials mult.jl:15
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = (::getfield(DynamicPolynomials, Symbol("##43#44")){Int64,Int64,UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}})(::Array{Int64,1}) at mult.jl:20
└                                                @ DynamicPolynomials mult.jl:20
┌ Warning: Constructors no longer fall back to `convert`. A constructor `AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,S} where S<:SemialgebraicSets.AbstractAlgebraicSolver(::AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,MersenneTwister}}})` should be defined instead.
│   caller = BasicSemialgebraicSet(::AlgebraicSet{Float64,DynamicPolynomials.Polynomial{true,Float64},Buchberger,SemialgebraicSets.SolverUsingMultiplicationMatrices{SemialgebraicSets.GröbnerBasisMultiplicationMatricesAlgorithm,ReorderedSchurMultiplicationMatricesSolver{Int64,MersenneTwister}}}, ::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at basic.jl:12
└                                                @ SemialgebraicSets basic.jl:12
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = DynamicPolynomials.Term{true,T} where T(::DynamicPolynomials.PolyVar{true}) at term.jl:11
└                                                @ DynamicPolynomials term.jl:11
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = DynamicPolynomials.Term{true,T} where T(::DynamicPolynomials.Monomial{true}) at term.jl:10
└                                                @ DynamicPolynomials term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Polynomial{true,Int64}(::DynamicPolynomials.Term{true,Int32})` should be defined instead.
│   caller = polynomial at DynamicPolynomials.jl:30 [inlined]
└                                                @ Core DynamicPolynomials.jl:30
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = Type at mono.jl:25 [inlined]
└                                                              @ Core mono.jl:25
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Polynomial{true,Float64}(::DynamicPolynomials.Term{true,Float64})` should be defined instead.
│   caller = polynomial at DynamicPolynomials.jl:30 [inlined]
└                                                @ Core DynamicPolynomials.jl:30
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = Type at mono.jl:25 [inlined]
└                                                              @ Core mono.jl:25
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Float64}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = +(::DynamicPolynomials.Term{true,Float64}, ::DynamicPolynomials.PolyVar{true}) at operators.jl:80
└                                           @ DynamicPolynomials operators.jl:80
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Monomial{true}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Term{true,Float64}}, ::DynamicPolynomials.PolyVar{true}) at term.jl:24
└                                                @ DynamicPolynomials term.jl:24
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Float64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Term{true,Float64}}, ::DynamicPolynomials.PolyVar{true}) at term.jl:24
└                                                @ DynamicPolynomials term.jl:24
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Polynomial{true,Float64}(::DynamicPolynomials.Polynomial{true,Float64})` should be defined instead.
│   caller = polynomial at DynamicPolynomials.jl:30 [inlined]
└                                                @ Core DynamicPolynomials.jl:30
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
Test Summary:           | Pass  Total
Basic semialgebraic set |   12     12
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.PolyVar{true})` should be defined instead.
│   caller = +(::DynamicPolynomials.Polynomial{true,Int64}, ::DynamicPolynomials.PolyVar{true}) at operators.jl:80
└                                           @ DynamicPolynomials operators.jl:80
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = +(::DynamicPolynomials.Term{true,Int64}, ::DynamicPolynomials.Monomial{true}) at operators.jl:80
└                                           @ DynamicPolynomials operators.jl:80
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
Test Summary: | Pass  Total
S-polynomial  |    3      3
WARNING: importing deprecated binding Base.IntSet into MultivariatePolynomials.
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gröbnerbasis(::Array{DynamicPolynomials.Polynomial{true,Int64},1}) at groebner.jl:139
└                                            @ SemialgebraicSets groebner.jl:139
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
┌ Warning: `rtoldefault(x, y)` is deprecated, use `rtoldefault(x, y, 0)` instead.
│   caller = isapproxzero at comparison.jl:104 [inlined]
└                                                       @ Core comparison.jl:104
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = #reducebasis!#1(::Base.Iterators.IndexValue{Symbol,Float64,Tuple{Symbol},NamedTuple{(:ztol,),Tuple{Float64}}}, ::Function, ::Array{DynamicPolynomials.Polynomial{true,Float64},1}) at groebner.jl:28
└                                             @ SemialgebraicSets groebner.jl:28
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Float64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = convert(::Type{DynamicPolynomials.Polynomial{true,Float64}}, ::DynamicPolynomials.Monomial{true}) at poly.jl:51
└                                                @ DynamicPolynomials poly.jl:51
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Float64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = +(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.Term{true,Float64}) at operators.jl:81
└                                           @ DynamicPolynomials operators.jl:81
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = +(::DynamicPolynomials.Monomial{true}, ::DynamicPolynomials.Term{true,Int64}) at operators.jl:81
└                                           @ DynamicPolynomials operators.jl:81
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:21
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gröbnerbasis(::Array{DynamicPolynomials.Polynomial{true,Int64},1}, ::Buchberger, ::Vararg{Buchberger,N} where N) at groebner.jl:139
└                                            @ SemialgebraicSets groebner.jl:139
Test Summary:  | Pass  Total
Groebner basis |    7      7
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/SemialgebraicSets/test/groebner.jl:51
┌ Warning: Constructors no longer fall back to `convert`. A constructor `DynamicPolynomials.Term{true,Int64}(::DynamicPolynomials.Monomial{true})` should be defined instead.
│   caller = Type at term.jl:10 [inlined]
└                                                              @ Core term.jl:10
Test Summary: | Pass  Total
Reduce        |    2      2
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at solve.jl:12 [inlined]
└                                                             @ Core solve.jl:12

signal (11): Segmentation fault
in expression starting at /home/vagrant/.julia/v0.7/SemialgebraicSets/test/solve.jl:10
_ZN4llvm5Value16DoPHITranslationEPKNS_10BasicBlockES3_ at /home/vagrant/julia/bin/../lib/julia/libLLVM-3.9.so (unknown line)
Allocations: 27772686 (Pool: 27755191; Big: 17495); GC: 72
┌ Error: ------------------------------------------------------------
│ # Testing failed for SemialgebraicSets
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/SemialgebraicSets/test/runtests.jl`, ProcessSignaled(11)) [0]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: Removing DynamicPolynomials v0.0.2         @ Base.Pkg.Entry entry.jl:546
ERROR: SemialgebraicSets had test errors

>>> End of log
