>>> 'Pkg.add("IPython")' log
INFO: Cloning cache of IPython from https://github.com/tkf/IPython.jl.git
INFO: Installing Conda v1.0.0
INFO: Installing IPython v0.0.2
INFO: Installing MacroTools v0.4.2
INFO: Installing PyCall v1.17.1
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Info: Running `conda install -y numpy` in root environment
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 3.7.0) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython3.7m
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of IPython
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IPython")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1340.65234375 MB free)
Uptime: 31305.0 sec
Load Avg:  1.0078125  1.0146484375  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1781332 s         36 s     147086 s     752360 s         20 s
#2  3499 MHz     326499 s       5652 s      56141 s    2697310 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - IPython                       0.0.2
 - JSON                          0.17.2
6 additional packages:
 - Compat                        1.0.0
 - Conda                         1.0.0
 - MacroTools                    0.4.2
 - Nullables                     0.0.6
 - PyCall                        1.17.1
 - VersionParsing                1.1.1
INFO: Testing IPython
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)

PyCall.pyprogramname = /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python
PyCall.pyversion = 3.7.0
PyCall.libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython3.7m
PyCall.conda = true
pyversion("IPython") = 6.5.0
pyversion("julia") = nothing
ERROR: LoadError: PyError (ccall(@pysym(:PyObject_Call), PyPtr, (PyPtr, PyPtr, PyPtr), o, arg, kw)) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'julia'")
  File "/home/vagrant/.julia/v0.6/IPython/src/replhelper.py", line 112, in ipython_options
    from julia import Julia

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:60 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:84 [inlined]
 [4] #_pycall#86(::Array{Any,1}, ::Function, ::PyCall.PyObject) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:714
 [5] (::PyCall.#kw##_pycall)(::Array{Any,1}, ::PyCall.#_pycall, ::PyCall.PyObject) at ./<missing>:0
 [6] #pycall#90(::Array{Any,1}, ::Function, ::PyCall.PyObject, ::Type{PyCall.PyAny}) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:731
 [7] (::PyCall.#kw##pycall)(::Array{Any,1}, ::PyCall.#pycall, ::PyCall.PyObject, ::Type{PyCall.PyAny}) at ./<missing>:0
 [8] #call#91 at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:734 [inlined]
 [9] (::PyCall.#kw#PyObject)(::Array{Any,1}, ::PyCall.PyObject) at ./<missing>:0
 [10] #_start_ipython#1(::Array{Any,1}, ::Function, ::Symbol) at /home/vagrant/.julia/v0.6/IPython/src/core.jl:5
 [11] _start_ipython(::Symbol) at /home/vagrant/.julia/v0.6/IPython/src/core.jl:5
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/IPython/test/runtests.jl, in expression starting on line 237
===============================[ ERROR: IPython ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/IPython/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: IPython had test errors

>>> End of log
