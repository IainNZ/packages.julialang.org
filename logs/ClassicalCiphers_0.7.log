>>> 'Pkg.add("ClassicalCiphers")' log
┌ Info: Cloning cache of ClassicalCiphers from https://github.com/Smaug123/ClassicalCiphers.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing ClassicalCiphers v0.3.1         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Iterators v0.3.1                @ Base.Pkg.Entry entry.jl:543
[ Info: Removing BinDeps v0.8.2                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing BufferedStreams v0.3.3            @ Base.Pkg.Entry entry.jl:546
[ Info: Removing CSV v0.2.1                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing CategoricalArrays v0.3.3          @ Base.Pkg.Entry entry.jl:546
[ Info: Removing CodecZlib v0.4.2                  @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Codecs v0.4.0                     @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DataFrames v0.11.4                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DataStreams v0.3.4                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DataStructures v0.7.4             @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HttpCommon v0.3.0                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HttpParser v0.3.0                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Libz v0.2.4                       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing MbedTLS v0.5.3                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Missings v0.2.4                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NamedTuples v4.0.0                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Reexport v0.1.0                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Requests v0.5.1                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SHA v0.5.2                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SortingAlgorithms v0.2.0          @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SpecialFunctions v0.3.7           @ Base.Pkg.Entry entry.jl:546
[ Info: Removing StatsBase v0.19.5                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing TranscodingStreams v0.4.1         @ Base.Pkg.Entry entry.jl:546
[ Info: Removing URIParser v0.3.0                  @ Base.Pkg.Entry entry.jl:546
[ Info: Removing WeakRefStrings v0.4.1             @ Base.Pkg.Entry entry.jl:546
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of ClassicalCiphers
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("ClassicalCiphers")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1423002 s        115 s      79151 s     411058 s          9 s
       #2  3500 MHz     279037 s         41 s      32628 s    1941287 s          0 s
       
  Memory: 2.93927001953125 GB (831.31640625 MB free)
  Uptime: 22844.0 sec
  Load Avg:  1.05810546875  1.03271484375  1.02392578125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ClassicalCiphers              0.3.1
 - JSON                          0.16.3
3 additional packages:
 - Compat                        0.44.0
 - Iterators                     0.3.1
 - Nullables                     0.0.2
[ Info: Testing ClassicalCiphers                   @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `any(x -> begin
│     # /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl, line 32
│     isa(x, Array)
│ end, a)?` at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl:32.
│ Use `any(x -> begin
│     # /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl, line 32
│     isa(x, Array)
│ end, a) ?` instead.
└                                                         @ nothing common.jl:32
┌ Warning: Deprecated syntax `any(x -> begin
│     # /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl, line 32
│     isa(x, Array)
│ end, a) ? flatten(vcat(map(flatten, a)...)):` at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl:32.
│ Use `any(x -> begin
│     # /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl, line 32
│     isa(x, Array)
│ end, a) ? flatten(vcat(map(flatten, a)...)) :` instead.
└                                                         @ nothing common.jl:32
┌ Warning: Deprecated syntax `parametric method syntax flatten{T}(a::Array{T, 1})` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl:32.
│ Use `flatten(a::Array{T, 1}) where T` instead.
└                                                         @ nothing common.jl:32
┌ Warning: Deprecated syntax `parametric method syntax flatten{T}(a::Array{T})` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/common.jl:33.
│ Use `flatten(a::Array{T}) where T` instead.
└                                                         @ nothing common.jl:33
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = get_trigram_fitnesses() at common.jl:61
└                                                @ ClassicalCiphers common.jl:61
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/solitaire.jl:69.
│ Use `mutable struct` instead.
└                                                      @ nothing solitaire.jl:69
┌ Warning: Deprecated syntax `parametric method syntax encrypt_hill{I <: Integer}(plaintext, key::Array{I, 2})` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/hill.jl:16.
│ Use `encrypt_hill(plaintext, key::Array{I, 2}) where I <: Integer` instead.
└                                                           @ nothing hill.jl:16
┌ Warning: Deprecated syntax `parametric method syntax minor{I <: Integer}(mat::Array{I, 2}, i, j)` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/hill.jl:63.
│ Use `minor(mat::Array{I, 2}, i, j) where I <: Integer` instead.
└                                                           @ nothing hill.jl:63
┌ Warning: Deprecated syntax `parametric method syntax adjugate{I <: Integer}(mat::Array{I, 2})` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/hill.jl:71.
│ Use `adjugate(mat::Array{I, 2}) where I <: Integer` instead.
└                                                           @ nothing hill.jl:71
┌ Warning: Deprecated syntax `parametric method syntax decrypt_hill{I <: Integer}(ciphertext, key::Array{I, 2})` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/hill.jl:77.
│ Use `decrypt_hill(ciphertext, key::Array{I, 2}) where I <: Integer` instead.
└                                                           @ nothing hill.jl:77
WARNING: importing deprecated binding Base.uppercase into ClassicalCiphers.
┌ Warning: Deprecated syntax `parametric method syntax encrypt_enigma{I <: Integer}(plaintext, rotors::Array{I, 1}, key::AbstractString; reflector_id = Char(0x42000000), ring::AbstractString = "AAA", stecker = Tuple{Char, Char}[], skip_stecker_check = false)` around /home/vagrant/.julia/v0.7/ClassicalCiphers/src/enigma.jl:80.
│ Use `encrypt_enigma(plaintext, rotors::Array{I, 1}, key::AbstractString; reflector_id = Char(0x42000000), ring::AbstractString = "AAA", stecker = Tuple{Char, Char}[], skip_stecker_check = false) where I <: Integer` instead.
└                                                         @ nothing enigma.jl:80
Running tests:
 * vigenere.jl
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ClassicalCiphers/test/vigenere.jl:2
Error During Test at /home/vagrant/.julia/v0.7/ClassicalCiphers/test/vigenere.jl:5
  Test threw an exception of type ErrorException
  Expression: encrypt_vigenere("ab", [0, 1]) == "AC"
  Base.uppercase has been moved to the standard library package Unicode.
  Restart Julia and then run `using Unicode` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #uppercase#918 at ./deprecated.jl:138 [inlined]
   [3] uppercase at ./deprecated.jl:138 [inlined]
   [4] encrypt_monoalphabetic at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/monoalphabetic.jl:42 [inlined]
   [5] encrypt_caesar at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/caesar.jl:12 [inlined]
   [6] #32 at ./<missing>:0 [inlined]
   [7] next at ./generator.jl:47 [inlined]
   [8] collect(::Base.Generator{Enumerate{String},getfield(ClassicalCiphers, Symbol("##32#33")){Array{Int64,1}}}) at ./array.jl:536
   [9] encrypt_vigenere(::String, ::Array{Int64,1}) at /home/vagrant/.julia/v0.7/ClassicalCiphers/src/vigenere.jl:7
   [10] top-level scope
   [11] include at ./boot.jl:293 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:521
   [13] include(::Module, ::String) at ./sysimg.jl:26
   [14] include(::String) at ./sysimg.jl:65
   [15] top-level scope at ./<missing>:12
   [16] include at ./boot.jl:293 [inlined]
   [17] include_relative(::Module, ::String) at ./loading.jl:521
   [18] include(::Module, ::String) at ./sysimg.jl:26
   [19] process_options(::Base.JLOptions) at ./client.jl:324
   [20] _start() at ./client.jl:375
ERROR: LoadError: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/ClassicalCiphers/test/vigenere.jl:5
in expression starting at /home/vagrant/.julia/v0.7/ClassicalCiphers/test/runtests.jl:9
┌ Error: ------------------------------------------------------------
│ # Testing failed for ClassicalCiphers
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ClassicalCiphers/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: ClassicalCiphers had test errors

>>> End of log
