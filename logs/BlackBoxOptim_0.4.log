>>> 'Pkg.add("BlackBoxOptim")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing BlackBoxOptim v0.2.0
INFO: Installing Distributions v0.9.0
INFO: Installing FactCheck v0.4.3
INFO: Installing PDMats v0.4.1
INFO: Installing StatsBase v0.8.1
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of BlackBoxOptim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BlackBoxOptim")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing BlackBoxOptim
Latin hypercube sampling
15 facts verified.
Assign ranks within tolerance
  > Ranks correctly if none are within tolerance of each other
  > Ranks correctly if some are within tolerance of each other
  > Ranks correctly if all are within tolerance of each other
  > Ranks in reverse if none are within tolerance of each other
  > Ranks correctly for a complex example testing many aspects
25 facts verified.
DictChain
  > Matching keys and type parameters
  > merging and chaining
    > incompatible dictionary types
    > using constructor
    > using merge()
    > using merge!()
    > using chain()
  > converting to Dict
  > show()
BlackBoxOptim.DictChain{Symbol,Int64}[Dict(:a=>1),Dict(:a=>2,:b=>4),Dict(:a=>3,:b=>5)]
  > flatten
35 facts verified.
Parameters
  > When no parameters or key type doesn't match
  > With one parameter in one set
  > With parameters in multiple sets
  > Updating parameters after construction
  > Constructing from another parameters object
  > Get key without default
  > Get key with default
  > Merge with Parameters or Dict
28 facts verified.
Fitness
  > hat_compare() Float64
  > ScalarFitnessScheme
    > is_minimizing()
    > hat_compare(..., MinimizingFitnessScheme)
    > hat_compare(..., MaximizingFitnessScheme)
    > fitness_scheme(x, y)
  > TupleFitnessScheme
    > general interface
      > ParetoFitnessScheme{1}
      > ParetoFitnessScheme{1}(is_minimizing=false)
      > ParetoFitnessScheme{3}()
    > hat_compare(..., ParetoFitnessScheme{1}())
    > hat_compare(..., ParetoFitnessScheme{1}(is_minimizing=false))
    > hat_compare(..., ParetoFitnessScheme{2}(is_minimizing=true))
    > hat_compare(..., ParetoFitnessScheme{2}(is_minimizing=false))
    > is_better/is_worse/same_fitness(..., ParetoFitnessScheme{2}(is_minimizing=true))
    > is_better/is_worse/same_fitness(..., ParetoFitnessScheme{2}(is_minimizing=false))
  > ϵ-box FitnessScheme
    > ϵ-index()
    > IndexedTupleFitness
    > hat_compare(..., EpsBoxDominanceFitnessScheme{2}(...))
Out of 167 total facts:
  Verified: 163
  Pending:  4
Evaluator
  > ProblemEvaluator
    > Basic evaluation with a single-objective function to be minimized
    > update_fitness!()
    > rank_by_fitness!()
  > ParallelEvaluator
    > Basic evaluation with a single-objective function to be minimized
    > update_fitness!()
    > rank_by_fitness!()
38 facts verified.
Population
  > FitPopulation
    > candidates pool
    > append!()
21 facts verified.
Bimodal Cauchy Distributions
  > sample bimodal cauchy with truncation on one side
  > sample bimodal cauchy with truncation on both sides
400 facts verified.
Search space
  > in()
  > Symmetric search space with default range
  > SymmetricSearchSpace with given range
  > rand_individual is within the search space
  > rand_individuals creates many individuals and all are within the search space
  > rand_individuals correctly handles column-wise generation in assymetric search spaces
  > RangePerDimSearchSpace
  > rand_individuals_lhs samples in LHS intervals
  > feasible finds feasible points in the search space
  > diameters
  > concat(ss1, ss2)
8357 facts verified.
Mutation operators
  > UniformMutation
  > MutationClock
  > FixedGeneticOperatorsMixture
  > FAGeneticOperatorsMixture
22615 facts verified.
Crossover operators
  > DiffEvoRandBin1
    > always copies from donor if length is 1
    > always copies at least one element from donor
    > unlikely to copy everything if vectors are large
    > correctly modifies the parameters vector
608 facts verified.
Selection operators
  > SimpleSelector
  > RadiusLimitedSelector
  > Tournament
    > tournament()
    > select()
801 facts verified.
Embedding operators
  > RandomBound
    > does nothing if within bounds
    > bounds if lower than min bound
    > bounds if higher than max bound
11 facts verified.
Frequency Adaptation
  > returns all indices once in the first block
  > increases the frequency of a method that has higher progress values
1226 facts verified.
TopListArchive
  > TopListIndividual
  > Constructing a small archive and adding to it
  > magnitude_class for positive fitness values
  > magnitude_class for negative fitness values
  > archive copies the individuals
  > for maximizing fitness
98 facts verified.
EpsBoxArchive
  > EpsBoxFrontierIndividual
  > Constructing a small archive and adding to it
    > noprogress_streak(since_restart=0) is reset after restart
    > updating best candidate index if old and new non-dominated
  > shaffer1() Pareto frontier
  > archive copies the individuals
62 facts verified.
Random search
  > ask()
900 facts verified.
Differential evolution optimizer
  > ask()/tell!()
1000 facts verified.
Adaptive differential evolution optimizer
  > parameters adjust!()
  > ask()
1000 facts verified.
sNES
  > assign_weights!()
    > when indices are already ordered
    > when indices are not ordered
35 facts verified.
BorgMOEA
  > Schaffer1
  > CEC09_UP8
    Failure :: (line:-1) :: CEC09_UP8 :: fact was false
      Expression: BlackBoxOptim.IGD(BlackBoxOptim.CEC09_Unconstrained_Set[8].opt_value,pareto_frontier(res),fitness_scheme(res),Val{length(best_candidate(res))}) --> less_than(0.13)
        Expected: 0.14629515730244613 < 0.13
Out of 2 total facts:
  Verified: 1
  Failed:   1
Testing methods diagnostic tracing
  > trace_state()
    > silent
    > compact
    > verbose
0 facts verified.
Top-level interface
  > run a simple optimization
    > using bboptimize() with mostly defaults
    > using bbsetup()/bboptimize() with mostly defaults
    > using non-population optimizer
    > using population optimizer
    > using population optimizer and parallel evaluator
  > continue running an optimization after it finished
  > return results after interruption
    > :RecoverResults on
WARNING: Optimization interrupted, recovering intermediate results...
    > :RecoverResults off
  > continue running an optimization after serializing to disc
49 facts verified.
bboptimize() single-objective methods smoketest
  > resampling_memetic_search
  > de_rand_2_bin_radiuslimited
  > de_rand_2_bin
  > de_rand_1_bin_radiuslimited
  > adaptive_de_rand_1_bin_radiuslimited
  > adaptive_de_rand_1_bin
  > separable_nes
  > dxnes
  > simultaneous_perturbation_stochastic_approximation
  > de_rand_1_bin
  > generating_set_search
  > resampling_inheritance_memetic_search
  > xnes
  > probabilistic_descent
  > random_search
45 facts verified.
bboptimize() multi-objective methods smoketest
  > borg_moea
4 facts verified.
Single objective functions
  > Sphere
  > Schwefel2.22
  > Schwefel1.2
  > Schwefel2.21
  > Rosenbrock
32 facts verified.
Generating set search
2 facts verified.
Random sampling on unit, n-dimensional sphere
814 facts verified.
Random direction generator
2 facts verified.
Mirrored random direction generator
10 facts verified.
ERROR: LoadError: FactCheck finished with 1 non-successful tests.
 in error at ./error.jl:21
 in exitstatus at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:568
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/BlackBoxOptim/test/runtests.jl, in expression starting on line 43
============================[ ERROR: BlackBoxOptim ]============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/BlackBoxOptim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BlackBoxOptim had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
