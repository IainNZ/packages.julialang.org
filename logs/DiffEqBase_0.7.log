>>> 'Pkg.add("DiffEqBase")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Installing DiffEqBase v3.1.0
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MacroTools v0.4.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.5
[ Info: Installing Requires v0.4.3
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing StaticArrays v0.6.6
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of DiffEqBase
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqBase")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3664
Commit 9d5aebb07a (2018-01-30 22:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3467788 s       7076 s     176756 s    1162058 s         53 s
       #2  3499 MHz    1015358 s         41 s      78870 s    4401252 s          0 s
       
  Memory: 2.93927001953125 GB (1627.6171875 MB free)
  Uptime: 56140.0 sec
  Load Avg:  0.98974609375  0.96630859375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - DiffEqBase                    3.1.0
 - JSON                          0.16.4
10 additional packages:
 - Compat                        0.49.0
 - FunctionWrappers              0.1.0
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Nullables                     0.0.3
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.5
 - Requires                      0.4.3
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.6
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Testing DiffEqBase
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl:2
┌ Warning: `tic()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = top-level scope
└ @ Core :0
Test Summary:                    | Pass  Total
Number of Parameters Calculation |    1      1
  3.754388 seconds (3.22 M allocations: 181.269 MiB, 1.86% gc time)
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/data_array_tests.jl:1
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = recursivecopy! at utils.jl:29 [inlined]
└ @ Core utils.jl:29
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = recursivecopy! at utils.jl:29 [inlined]
└ @ Core utils.jl:29
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = recursivecopy!(::MatrixType{Float64,Float64}, ::MatrixType{Int64,Float64}) at utils.jl:29
└ @ RecursiveArrayTools utils.jl:29
Test Summary: | Pass  Total
Data Arrays   |   21     21
  7.688593 seconds (3.51 M allocations: 198.737 MiB, 0.88% gc time)
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/extended_function_tests.jl:1
┌ Warning: Deprecated syntax `parametric method syntax g123{T}(::Val{:jac}, x::T)` around /home/vagrant/.julia/v0.7/DiffEqBase/test/extended_function_tests.jl:10.
│ Use `g123(#unused#::Val{:jac}, x::T) where T` instead.
└ @ nothing extended_function_tests.jl:10
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = traitfn(::Expr) at SimpleTraits.jl:317
└ @ SimpleTraits SimpleTraits.jl:317
┌ Warning: Deprecated syntax `parametric method syntax tfn{##1454}(f::##1454)` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:321.
│ Use `tfn(f::##1454) where ##1454` instead.
└ @ nothing SimpleTraits.jl:321
┌ Warning: Deprecated syntax `parametric method syntax tfn{##1454}(::Type{HasJac{##1454}}, f::##1454; )` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:313.
│ Use `tfn(#s12::Type{HasJac{##1454}}, f::##1454; ) where ##1454` instead.
└ @ nothing SimpleTraits.jl:313
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: Deprecated syntax `parametric method syntax tfn{##1456}(::Type{SimpleTraits.Not{HasJac{##1456}}}, f::##1456; )` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:313.
│ Use `tfn(#s12::Type{SimpleTraits.Not{HasJac{##1456}}}, f::##1456; ) where ##1456` instead.
└ @ nothing SimpleTraits.jl:313
┌ Warning: Deprecated syntax `parametric method syntax testing{##1458}(f::##1458)` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:321.
│ Use `testing(f::##1458) where ##1458` instead.
└ @ nothing SimpleTraits.jl:321
┌ Warning: Deprecated syntax `parametric method syntax testing{##1458}(::Type{HasJac{##1458}}, f::##1458; )` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:313.
│ Use `testing(#s12::Type{HasJac{##1458}}, f::##1458; ) where ##1458` instead.
└ @ nothing SimpleTraits.jl:313
┌ Warning: Deprecated syntax `parametric method syntax testing{##1460}(::Type{SimpleTraits.Not{HasJac{##1460}}}, f::##1460; )` around /home/vagrant/.julia/v0.7/SimpleTraits/src/SimpleTraits.jl:313.
│ Use `testing(#s12::Type{SimpleTraits.Not{HasJac{##1460}}}, f::##1460; ) where ##1460` instead.
└ @ nothing SimpleTraits.jl:313
Test Summary:      | Pass  Total
Extended Functions |   13     13
  2.277625 seconds (1.12 M allocations: 66.242 MiB, 3.62% gc time)
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
in do_ccall at /home/vagrant/.julia/v0.7/FunctionWrappers/src/FunctionWrappers.jl
DiffEqFunctions: Error During Test at /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl:8
  Got an exception of type LoadError outside of a @test
  LoadError: error compiling do_ccall: error statically evaluating llvm IR argument
  Stacktrace:
   [1] (::FunctionWrappers.FunctionWrapper{Nothing,Tuple{Float64,Array{Float64,1},Array{Float64,1}}})(::Float64, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.7/FunctionWrappers/src/FunctionWrappers.jl:106
   [2] (::DiffEqFunction{true,FunctionWrappers.FunctionWrapper{Nothing,Tuple{Float64,Array{Float64,1},Array{Float64,1}}},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing})(::Float64, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N} where N) at /home/vagrant/.julia/v0.7/DiffEqBase/src/diffeqfunction.jl:14
   [3] top-level scope
   [4] include at ./boot.jl:292 [inlined]
   [5] include_relative(::Module, ::String) at ./loading.jl:1012
   [6] include(::Module, ::String) at ./sysimg.jl:26
   [7] include(::String) at ./sysimg.jl:65
   [8] macro expansion at /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl:8 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1008 [inlined]
   [10] macro expansion at /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl:8 [inlined]
   [11] top-level scope at ./<missing>:169
   [12] include at ./boot.jl:292 [inlined]
   [13] include_relative(::Module, ::String) at ./loading.jl:1012
   [14] include(::Module, ::String) at ./sysimg.jl:26
   [15] exec_options(::Base.JLOptions) at ./client.jl:332
   [16] _start() at ./client.jl:447
  in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/test/diffeqfunction_tests.jl:10
Test Summary:   | Error  Total
DiffEqFunctions |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl:8
┌ Error: ------------------------------------------------------------
│ # Testing failed for DiffEqBase
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/DiffEqBase/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
[ Info: No packages to install, update or remove
ERROR: DiffEqBase had test errors

>>> End of log
