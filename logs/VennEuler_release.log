>>> 'Pkg.add("VennEuler")' log
INFO: Cloning cache of VennEuler from git://github.com/HarlanH/VennEuler.jl.git
INFO: Installing Cairo v0.2.20
INFO: Installing Color v0.3.13
INFO: Installing FixedPointNumbers v0.0.4
INFO: Installing Iterators v0.1.7
INFO: Installing MathProgBase v0.3.7
INFO: Installing NLopt v0.1.3
INFO: Installing VennEuler v0.0.1
INFO: Building Cairo
INFO: Building NLopt
INFO: Package database updated

>>> 'using VennEuler' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log

aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
... truncated ...
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa

aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaa

VennEuler.eval_euler_state(eo2,[0.33,0.5,0.66,0.5]) => 0.035109852128408045
eo2.evalfn([0.33,0.5,0.66,0.5],[]) => 0.035109852128408045
elapsed time: 0.000925661 seconds (85424 bytes allocated)
got 8.99944793902521e-8 at [0.5847195607654094,0.6101261767352919,0.5459224065132361,0.38629211278951103] (returned FTOL_REACHED)
got 0.001977238895444218 at [0.6433446463782236,0.7486806844743266,0.5057807495229825,0.5877436229847106,0.4054101485960653,0.692608115794422] (returned FTOL_REACHED)
got 0.0010403823329658882 at [0.5,0.5,0.5866344920784891,0.38077364467469954,0.6290361308257323,0.43382685515205766,0.7385215613260047] (returned FTOL_REACHED)
optimizing #2
preserving range: [3,4]
lb = [0.5,0.5,0.25953329536970077,0.25953329536970077,0.32897042485896844,0.4342267728392698,0.6359661113669155]
ub = [0.5,0.5,0.7404667046302993,0.7404667046302993,0.32897042485896844,0.4342267728392698,0.6359661113669155]
got 0.00836517149064096 at [0.5,0.5,0.3952861376355902,0.3775675075762279,0.32897042485896844,0.4342267728392698,0.6359661113669155] (returned FTOL_REACHED)
optimizing #1
preserving range: [1,2]
lb = [0.5,0.5,0.3952861376355902,0.3775675075762279,0.32897042485896844,0.4342267728392698,0.6359661113669155]
ub = [0.5,0.5,0.3952861376355902,0.3775675075762279,0.32897042485896844,0.4342267728392698,0.6359661113669155]
got 0.00836517149064096 at [0.5,0.5,0.3952861376355902,0.3775675075762279,0.32897042485896844,0.4342267728392698,0.6359661113669155] (returned MAXTIME_REACHED)
optimizing #3
preserving range: [5,6,7]
lb = [0.5,0.5,0.3952861376355902,0.3775675075762279,0.19364916731037085,0.19364916731037085,0.0]
ub = [0.5,0.5,0.3952861376355902,0.3775675075762279,0.8063508326896291,0.8063508326896291,1.0]
got 0.003205457278153569 at [0.5,0.5,0.3952861376355902,0.3775675075762279,0.3895050132833723,0.38497608833951963,1.0] (returned XTOL_REACHED)
got 0.003205457278153569 at [0.5,0.5,0.3952861376355902,0.3775675075762279,0.3895050132833723,0.38497608833951963,1.0] (returned XTOL_REACHED)
obj.specs[i] => EulerSpec(:circle,[0.5,0.5],[1,2])
obj.specs[i] => EulerSpec(:triangle,[NaN,NaN],[3,4])
obj.specs[i] => EulerSpec(:rectangle,[NaN,NaN,NaN],[5,6,7])

>>> end of log
