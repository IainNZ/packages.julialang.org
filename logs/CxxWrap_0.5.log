>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from https://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing CxxWrap v0.5.0
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building CxxWrap
INFO: Attempting to Create directory /home/vagrant/.julia/v0.5/CxxWrap/deps/builds/jlcxx
INFO: Changing Directory to /home/vagrant/.julia/v0.5/CxxWrap/deps/builds/jlcxx
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Julia_EXECUTABLE:     /home/vagrant/julia/bin/julia
-- Julia_VERSION_STRING: 0.5.2
-- Julia_INCLUDE_DIRS:   /home/vagrant/julia/include/julia
-- Julia_LIBRARY_DIR:    /home/vagrant/julia/lib
-- Julia_LIBRARY:        /home/vagrant/julia/lib/libjulia.so
-- JULIA_HOME:           /home/vagrant/julia/bin
-- Julia_LLVM_VERSION:   3.7.1
-- Found Julia: /home/vagrant/julia/lib/libjulia.so (found version "0.5.2") 
-- Performing Test HAS_CPP11_FLAG
-- Performing Test HAS_CPP11_FLAG - Success
-- JlCxx version: v0.1.1
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.5/CxxWrap/deps/builds/jlcxx
Scanning dependencies of target jlcxx
[  5%] Building CXX object CMakeFiles/jlcxx.dir/src/jlcxx.cpp.o
[ 10%] Building CXX object CMakeFiles/jlcxx.dir/src/c_interface.cpp.o
[ 15%] Building CXX object CMakeFiles/jlcxx.dir/src/functions.cpp.o
[ 20%] Linking CXX shared library libjlcxx.so
[ 20%] Built target jlcxx
Scanning dependencies of target extended
Scanning dependencies of target functions
[ 25%] Building CXX object examples/CMakeFiles/functions.dir/functions.cpp.o
Scanning dependencies of target except
Scanning dependencies of target parametric
[ 30%] Building CXX object examples/CMakeFiles/extended.dir/extended.cpp.o
[ 35%] Building CXX object examples/CMakeFiles/except.dir/except.cpp.o
[ 40%] Building CXX object examples/CMakeFiles/parametric.dir/parametric.cpp.o
[ 45%] Linking CXX shared library libexcept.so
[ 45%] Built target except
Scanning dependencies of target inheritance
[ 50%] Building CXX object examples/CMakeFiles/inheritance.dir/inheritance.cpp.o
[ 55%] Linking CXX shared library libextended.so
[ 55%] Built target extended
Scanning dependencies of target jlcxx_containers
[ 60%] Building CXX object examples/CMakeFiles/jlcxx_containers.dir/containers.cpp.o
[ 65%] Linking CXX shared library libinheritance.so
[ 70%] Linking CXX shared library libfunctions.so
[ 70%] Built target inheritance
Scanning dependencies of target hello
[ 70%] Built target functions
Scanning dependencies of target types
[ 75%] Building CXX object examples/CMakeFiles/hello.dir/hello.cpp.o
[ 80%] Building CXX object examples/CMakeFiles/types.dir/types.cpp.o
[ 85%] Linking CXX shared library libjlcxx_containers.so
[ 85%] Built target jlcxx_containers
[ 90%] Linking CXX shared library libhello.so
[ 90%] Built target hello
[ 95%] Linking CXX shared library libparametric.so
[ 95%] Built target parametric
[100%] Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx.so.0
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx.so.0.1.1" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/array.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/jlcxx.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/jlcxx_config.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/functions.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/smart_pointers.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/include/jlcxx/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports.cmake
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigExports-release.cmake
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfig.cmake
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/share/cmake/JlCxx/JlCxxConfigVersion.cmake
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/share/cmake/JlCxx/FindJulia.cmake
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx_containers.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libjlcxx_containers.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
-- Installing: /home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.5/CxxWrap/deps/usr/lib:/home/vagrant/julia/lib"
INFO: Package database updated

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1095.73046875 MB free)
Uptime: 27725.0 sec
Load Avg:  1.7431640625  1.82421875  1.89208984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1721785 s       7286 s     154996 s     578464 s         23 s
#2  3500 MHz     689140 s        181 s      73844 s    1933734 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CxxWrap                       0.5.0
 - JSON                          0.14.0
4 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.41.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing CxxWrap
Displaying const matrix
3×2 CxxWrap.ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
Displaying mutable matrix
3×2 Array{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
exception 1
exception 2
exception 3
methods(CppHalfFunctions.half_d) = # 1 method for generic function "half_d":
half_d(arg1::Union{Float64,Int64,Irrational})
c_func = safe_cfunction(testf,Float64,(Float64,Float64)) = CxxWrap.SafeCFunction(Ptr{Void} @0x00007fa850233100,Float64,Type[Float64,Float64])
callback result for function 0x7fa850233100 is 3
callback result for function 0x7fa850233100 is 3
---- Half test timings ----
Julia test:
  0.091772 seconds (128 allocations: 7.688 KB)
  0.095702 seconds (4 allocations: 160 bytes)
  0.086190 seconds (4 allocations: 160 bytes)
C test:
  0.130331 seconds (4 allocations: 160 bytes)
  0.127437 seconds (4 allocations: 160 bytes)
  0.124374 seconds (4 allocations: 160 bytes)
C++ test:
  0.126283 seconds (4 allocations: 160 bytes)
  0.147449 seconds (4 allocations: 160 bytes)
  0.105208 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.256872 seconds (4 allocations: 160 bytes)
  0.260376 seconds (4 allocations: 160 bytes)
  0.260254 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.121479 seconds (4 allocations: 160 bytes)
  0.093027 seconds (4 allocations: 160 bytes)
  0.087450 seconds (4 allocations: 160 bytes)
cfunction in C++ loop
  0.164219 seconds (1.83 k allocations: 80.164 KB)
  0.159058 seconds (4 allocations: 160 bytes)
  0.156096 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.033410 seconds (1.00 M allocations: 15.320 MB)
  0.047413 seconds (1.00 M allocations: 15.259 MB, 30.22% gc time)
  0.126641 seconds (1.00 M allocations: 15.259 MB, 67.19% gc time)
CppHello.greet() = "hello, world"
Dumping object p1:
TemplateTypeAllocated{P1,P2}
  cpp_object: Ptr{Void} Ptr{Void} @0x0000000004a169d0
Dumping type w...
WorldAllocated
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000052ba010
fw = CppTypes.world_factory() = WorldRef(Ptr{Void} @0x00000000052b1900)
uwf = CppTypes.unique_world_factory() = CxxWrap.SmartPointerWithDeref{World,0xef6180661ff0d2b6,Ptr{Void} @0x00007fa81edaa640,Ptr{Void} @0x00007fa81edabd50,Ptr{Void} @0x00007fa81edabd40}(Ptr{Void} @0x00000000049d0640)
Destroying World with message world by value hello
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
a: 2.0, b: 3.0
Test Summary: | Pass  Total
  CxxWrap tests |  154    154
Destroying World with message boxed world pointer
Destroying World with message boxed world
INFO: CxxWrap tests passed

>>> End of log
