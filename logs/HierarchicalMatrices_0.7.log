>>> 'Pkg.add("HierarchicalMatrices")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of HierarchicalMatrices from https://github.com/MikaelSlevinsky/HierarchicalMatrices.jl.git
[ Info: Installing HierarchicalMatrices v0.0.2
[ Info: Package database updated

>>> 'Pkg.test("HierarchicalMatrices")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4375
Commit 6239b632ba (2018-02-24 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     999420 s         67 s      58328 s     208387 s          8 s
       #2  3499 MHz     163451 s         98 s      24214 s    1273774 s          0 s
       
  Memory: 2.93927001953125 GB (553.9765625 MB free)
  Uptime: 14806.0 sec
  Load Avg:  1.0029296875  1.24853515625  1.4560546875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - HierarchicalMatrices          0.0.2
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.54.0
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing HierarchicalMatrices
┌ Warning: Deprecated syntax `parametric method syntax BLOCKRANK{R <: Real}(T::Type{R})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:6.
│ Use `BLOCKRANK(T::Type{R}) where R <: Real` instead.
└ @ nothing HierarchicalMatrices.jl:6
┌ Warning: Deprecated syntax `parametric method syntax BLOCKRANK{C <: Complex}(T::Type{C})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:7.
│ Use `BLOCKRANK(T::Type{C}) where C <: Complex` instead.
└ @ nothing HierarchicalMatrices.jl:7
WARNING: importing deprecated binding Base.rank into HierarchicalMatrices.
WARNING: importing deprecated binding Base.norm into HierarchicalMatrices.
WARNING: importing deprecated binding Base.cond into HierarchicalMatrices.
WARNING: importing deprecated binding Base.istriu into HierarchicalMatrices.
WARNING: importing deprecated binding Base.istril into HierarchicalMatrices.
WARNING: importing deprecated binding Base.issymmetric into HierarchicalMatrices.
WARNING: importing deprecated binding Base.ishermitian into HierarchicalMatrices.
WARNING: importing deprecated binding Base.scale! into HierarchicalMatrices.
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:15
WARNING: Base.BLAS is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:16
┌ Warning: Deprecated syntax `parametric method syntax half{T <: Number}(::Type{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:29.
│ Use `half(#unused#::Type{T}) where T <: Number` instead.
└ @ nothing HierarchicalMatrices.jl:29
┌ Warning: Deprecated syntax `parametric method syntax half{T <: Integer}(::Type{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:30.
│ Use `half(#unused#::Type{T}) where T <: Integer` instead.
└ @ nothing HierarchicalMatrices.jl:30
┌ Warning: Deprecated syntax `parametric method syntax two{T <: Number}(::Type{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:36.
│ Use `two(#unused#::Type{T}) where T <: Number` instead.
└ @ nothing HierarchicalMatrices.jl:36
WARNING: Base.scale! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:40
WARNING: Base.scale! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:40
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:9.
│ Use `struct` instead.
└ @ nothing LowRankMatrix.jl:9
WARNING: importing deprecated binding Base.Diagonal into HierarchicalMatrices.
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:3
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:3
┌ Warning: Deprecated syntax `parametric method syntax LowRankMatrix{T}(U::Matrix{T}, Σ::Diagonal{T}, V::Matrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:16.
│ Use `LowRankMatrix(U::Matrix{T}, Σ::Diagonal{T}, V::Matrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:16
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:16
WARNING: Base.rank is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:19
WARNING: Base.rank is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:19
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:20
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:20
WARNING: Base.cond is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:21
WARNING: Base.cond is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:21
WARNING: Base.istriu is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:23
WARNING: Base.istriu is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:23
WARNING: Base.istril is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:24
WARNING: Base.istril is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:24
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:25
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:25
WARNING: Base.ishermitian is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:26
WARNING: Base.ishermitian is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:26
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(L::LowRankMatrix{T}, i::Integer, j::Integer)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:29.
│ Use `getindex(L::LowRankMatrix{T}, i::Integer, j::Integer) where T` instead.
└ @ nothing LowRankMatrix.jl:29
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{LowRankMatrix{T}}, L::LowRankMatrix)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:39.
│ Use `convert(#unused#::Type{LowRankMatrix{T}}, L::LowRankMatrix) where T` instead.
└ @ nothing LowRankMatrix.jl:39
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{LowRankMatrix}, A::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:42.
│ Use `convert(#unused#::Type{LowRankMatrix}, A::AbstractMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:42
┌ Warning: Deprecated syntax `parametric method syntax getrank{T <: Real}(σ::Vector{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:45.
│ Use `getrank(σ::Vector{T}) where T <: Real` instead.
└ @ nothing LowRankMatrix.jl:45
┌ Warning: Deprecated syntax `parametric method syntax lrzeros{T}(::Type{T}, m::Int, n::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:63.
│ Use `lrzeros(#unused#::Type{T}, m::Int, n::Int) where T` instead.
└ @ nothing LowRankMatrix.jl:63
┌ Warning: Deprecated syntax `parametric method syntax +{T}(L1::LowRankMatrix{T}, L2::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:70.
│ Use `(L1::LowRankMatrix{T} + L2::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:70
┌ Warning: Deprecated syntax `parametric method syntax -{T}(L1::LowRankMatrix{T}, L2::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:79.
│ Use `(L1::LowRankMatrix{T} - L2::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:79
┌ Warning: Deprecated syntax `parametric method syntax *{T}(L1::LowRankMatrix{T}, L2::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:88.
│ Use `(L1::LowRankMatrix{T} * L2::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:88
┌ Warning: Deprecated syntax `parametric method syntax *{T}(A::AbstractMatrix{T}, L::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:95.
│ Use `(A::AbstractMatrix{T} * L::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:95
┌ Warning: Deprecated syntax `parametric method syntax *{T}(L::LowRankMatrix{T}, A::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:103.
│ Use `(L::LowRankMatrix{T} * A::AbstractMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:103
┌ Warning: Deprecated syntax `parametric method syntax *{T}(A::Diagonal{T}, L::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:111.
│ Use `(A::Diagonal{T} * L::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:111
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:110
┌ Warning: Deprecated syntax `parametric method syntax *{T}(L::LowRankMatrix{T}, A::Diagonal{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:119.
│ Use `(L::LowRankMatrix{T} * A::Diagonal{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:119
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:118
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Number}(B::T, L::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:126.
│ Use `(B::T * L::LowRankMatrix{T}) where T <: Number` instead.
└ @ nothing LowRankMatrix.jl:126
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Number}(L::LowRankMatrix{T}, B::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:127.
│ Use `(L::LowRankMatrix{T} * B::T) where T <: Number` instead.
└ @ nothing LowRankMatrix.jl:127
┌ Warning: Deprecated syntax `parametric method syntax /{T <: Number}(L::LowRankMatrix{T}, B::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:128.
│ Use `(L::LowRankMatrix{T} / B::T) where T <: Number` instead.
└ @ nothing LowRankMatrix.jl:128
┌ Warning: Deprecated syntax `parametric method syntax broadcast{T}(::typeof(*), B::T, L::LowRankMatrix{T})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:130.
│ Use `broadcast(#unused#::typeof(*), B::T, L::LowRankMatrix{T}) where T` instead.
└ @ nothing LowRankMatrix.jl:130
┌ Warning: Deprecated syntax `parametric method syntax broadcast{T}(::typeof(*), L::LowRankMatrix{T}, B::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:133.
│ Use `broadcast(#unused#::typeof(*), L::LowRankMatrix{T}, B::T) where T` instead.
└ @ nothing LowRankMatrix.jl:133
┌ Warning: Deprecated syntax `parametric method syntax broadcast{T}(::typeof(/), L::LowRankMatrix{T}, B::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/LowRankMatrix.jl:136.
│ Use `broadcast(#unused#::typeof(/), L::LowRankMatrix{T}, B::T) where T` instead.
└ @ nothing LowRankMatrix.jl:136
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:5.
│ Use `struct` instead.
└ @ nothing BarycentricMatrix.jl:5
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:139.
│ Use `struct` instead.
└ @ nothing BarycentricMatrix.jl:139
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:208.
│ Use `struct` instead.
└ @ nothing BarycentricMatrix.jl:208
┌ Warning: Deprecated syntax `parametric method syntax EvenBarycentricMatrix{T}(::Type{T}, f::Function, a::Int, b::Int, c::Int, d::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:19.
│ Use `EvenBarycentricMatrix(#unused#::Type{T}, f::Function, a::Int, b::Int, c::Int, d::Int) where T` instead.
└ @ nothing BarycentricMatrix.jl:19
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(B::EvenBarycentricMatrix{T}, i::Int, j::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:49.
│ Use `getindex(B::EvenBarycentricMatrix{T}, i::Int, j::Int) where T` instead.
└ @ nothing BarycentricMatrix.jl:49
┌ Warning: Deprecated syntax `parametric method syntax barycentricmatrix{T}(::Type{T}, f::Function, a::Int, b::Int, c::Int, d::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:62.
│ Use `barycentricmatrix(#unused#::Type{T}, f::Function, a::Int, b::Int, c::Int, d::Int) where T` instead.
└ @ nothing BarycentricMatrix.jl:62
┌ Warning: Deprecated syntax `parametric method syntax chebyshevpoints{T}(::Type{T}, n::Int; kind::Int = 1)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:93.
│ Use `chebyshevpoints(#s9::Type{T}, n::Int; kind::Int = 1) where T` instead.
└ @ nothing BarycentricMatrix.jl:93
┌ Warning: Deprecated syntax `parametric method syntax chebyshevbarycentricweights{T}(::Type{T}, n::Int; kind::Int = 1)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:115.
│ Use `chebyshevbarycentricweights(#s27::Type{T}, n::Int; kind::Int = 1) where T` instead.
└ @ nothing BarycentricMatrix.jl:115
┌ Warning: Deprecated syntax `parametric method syntax BarycentricPoly2D{T}(::Type{T}, f::Function, a::T, b::T, c::T, d::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:148.
│ Use `BarycentricPoly2D(#unused#::Type{T}, f::Function, a::T, b::T, c::T, d::T) where T` instead.
└ @ nothing BarycentricMatrix.jl:148
┌ Warning: Deprecated syntax `parametric method syntax evaluate{T}(B::BarycentricPoly2D{T}, x::T, y::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:181.
│ Use `evaluate(B::BarycentricPoly2D{T}, x::T, y::T) where T` instead.
└ @ nothing BarycentricMatrix.jl:181
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(B::BarycentricMatrix2D{T}, i::Int, j::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:223.
│ Use `getindex(B::BarycentricMatrix2D{T}, i::Int, j::Int) where T` instead.
└ @ nothing BarycentricMatrix.jl:223
┌ Warning: Deprecated syntax `parametric method syntax BarycentricMatrix2D{T}(::Type{T}, f::Function, a::T, b::T, c::T, d::T, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:237.
│ Use `BarycentricMatrix2D(#unused#::Type{T}, f::Function, a::T, b::T, c::T, d::T, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int}) where T` instead.
└ @ nothing BarycentricMatrix.jl:237
┌ Warning: Deprecated syntax `parametric method syntax BarycentricMatrix2D{T}(B::BarycentricPoly2D{T}, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:241.
│ Use `BarycentricMatrix2D(B::BarycentricPoly2D{T}, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int}) where T` instead.
└ @ nothing BarycentricMatrix.jl:241
┌ Warning: Deprecated syntax `parametric method syntax update!{T}(B::BarycentricMatrix2D{T}, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int})` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:249.
│ Use `update!(B::BarycentricMatrix2D{T}, x::Vector{T}, y::Vector{T}, ir::UnitRange{Int}, jr::UnitRange{Int}) where T` instead.
└ @ nothing BarycentricMatrix.jl:249
┌ Warning: Deprecated syntax `parametric method syntax indsplit{T}(x::Vector{T}, ir::UnitRange{Int}, a::T, b::T)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/BarycentricMatrix.jl:300.
│ Use `indsplit(x::Vector{T}, ir::UnitRange{Int}, a::T, b::T) where T` instead.
└ @ nothing BarycentricMatrix.jl:300
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/block.jl:8.
│ Use `@doc doc" "` instead.
└ @ nothing block.jl:8
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/block.jl:8.
│ Use `struct` instead.
└ @ nothing block.jl:8
WARNING: importing deprecated binding Base.@doc_str into HierarchicalMatrices.
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/block.jl:1
┌ Warning: Deprecated syntax `parametric method syntax convert{T <: Integer}(::Type{T}, B::Block)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/block.jl:12.
│ Use `convert(#unused#::Type{T}, B::Block) where T <: Integer` instead.
└ @ nothing block.jl:12
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:41.
│ Use `struct` instead.
└ @ nothing hierarchical.jl:41
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:59.
│ Use `struct` instead.
└ @ nothing hierarchical.jl:59
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = @hierarchical(::LineNumberNode, ::Module, ::Any, ::Vararg{Any,N} where N) at hierarchical.jl:7
└ @ HierarchicalMatrices hierarchical.jl:7
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = @hierarchical(::LineNumberNode, ::Module, ::Any, ::Vararg{Any,N} where N) at hierarchical.jl:8
└ @ HierarchicalMatrices hierarchical.jl:8
┌ Warning: Deprecated syntax `parametric method syntax HierarchicalMatrix{T}(::Type{T}, M::Int, N::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:47.
│ Use `HierarchicalMatrix(#unused#::Type{T}, M::Int, N::Int) where T` instead.
└ @ nothing hierarchical.jl:47
┌ Warning: Deprecated syntax `parametric method syntax blockgetindex{S}(H::HierarchicalMatrix{S}, m::Int, n::Int, i::Int, j::Int)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:88.
│ Use `blockgetindex(H::HierarchicalMatrix{S}, m::Int, n::Int, i::Int, j::Int) where S` instead.
└ @ nothing hierarchical.jl:88
┌ Warning: Deprecated syntax `parametric method syntax setindex!{S}(H::HierarchicalMatrix{S}, A::AbstractMatrix{S}, B1::Block, B2::Block)` around /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:138.
│ Use `setindex!(H::HierarchicalMatrix{S}, A::AbstractMatrix{S}, B1::Block, B2::Block) where S` instead.
└ @ nothing hierarchical.jl:138
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrix.jl:12
ERROR: LoadError: LoadError: importing Compat into HierarchicalMatrices conflicts with an existing identifier
Stacktrace:
 [1] top-level scope at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/hierarchical.jl:13
 [2] include at ./boot.jl:295 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1076
 [4] include at ./sysimg.jl:29 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:2
 [6] top-level scope
 [7] include at ./boot.jl:295 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1076
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] top-level scope
 [11] eval at ./boot.jl:298 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrix.jl:13
in expression starting at /home/vagrant/.julia/v0.7/HierarchicalMatrices/src/HierarchicalMatrices.jl:48
ERROR: LoadError: Failed to precompile HierarchicalMatrices to /home/vagrant/.julia/compiled/v0.7/HierarchicalMatrices.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1210
 [3] _require(::Base.PkgId) at ./loading.jl:1012
 [4] require(::Base.PkgId) at ./loading.jl:883
 [5] require(::Module, ::Symbol) at ./loading.jl:878
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1076
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:332
 [10] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/HierarchicalMatrices/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for HierarchicalMatrices
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/HierarchicalMatrices/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: HierarchicalMatrices had test errors

>>> End of log
