>>> 'Pkg.add("CodecBase")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of CodecBase from https://github.com/bicycle1885/CodecBase.jl.git
[ Info: Installing CodecBase v0.1.0
[ Info: Installing TranscodingStreams v0.5.0
[ Info: Package database updated

>>> 'Pkg.test("CodecBase")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4449
Commit d1f26785f2 (2018-03-02 17:11 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1861346 s       4380 s     103348 s     663015 s         23 s
       #2  3499 MHz     561997 s       1474 s      47133 s    2410647 s          0 s
       
  Memory: 2.93927001953125 GB (981.234375 MB free)
  Uptime: 30796.0 sec
  Load Avg:  1.00732421875  1.271484375  1.212890625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CodecBase                     0.1.0
 - JSON                          0.17.1
3 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.3
 - TranscodingStreams            0.5.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing CodecBase
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable16#1(::Bool, ::Type, ::String) at codetable.jl:23
└ @ CodecBase codetable.jl:23
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable16#1(::Bool, ::Type, ::String) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable32#6(::Bool, ::Type, ::String, ::Char) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable32#6(::Bool, ::Type, ::String, ::Char) at codetable.jl:25
└ @ CodecBase codetable.jl:25
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = CodecBase.CodeTable{64}(::String, ::Char) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = CodecBase.CodeTable{64}(::String, ::Char) at codetable.jl:25
└ @ CodecBase codetable.jl:25
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:2
Test Summary: | Pass  Total
DecodeError   |    4      4
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 =# @b_str("")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 =# @b_str("")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 =# @b_str("f")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 =# @b_str("66")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66, 0x6f]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 =# @b_str("fo")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 =# @b_str("666F")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66, 0x6f, 0x6f]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 =# @b_str("foo")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 =# @b_str("666F6F")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66, 0x6f, 0x6f, 0x62]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 =# @b_str("foob")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 =# @b_str("666F6F62")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66, 0x6f, 0x6f, 0x62, 0x61]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 =# @b_str("fooba")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 =# @b_str("666F6F6261")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 =# @b_str("foobar")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 =# @b_str("666F6F626172")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0xe8, 0x87, 0xaa, 0xe5, 0x95, 0x8f, 0xe8, 0x87, 0xaa, 0xe7, 0xad, 0x94]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(lowercase=false), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 =# @b_str("自問自答")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 =# @b_str("E887AAE5958FE887AAE7AD94")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39
  Test threw exception MethodError(transcode, (Base16Encoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init)), UInt8[0xe8, 0x87, 0xaa, 0xe5, 0x95, 0x8f, 0xe8, 0x87, 0xaa, 0xe7, 0xad, 0x94]), 0x00000000000069f0)
  Expression: transcode(Base16Encoder(lowercase=true), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 =# @b_str("自問自答")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 =# @b_str("e887aae5958fe887aae7ad94")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = Type at buffer.jl:9 [inlined]
└ @ Core buffer.jl:9
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x00], 0)), UInt8[]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 =# @b_str("")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 =# @b_str("")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0xf0], 0)), UInt8[0x36, 0x36]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 =# @b_str("66")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 =# @b_str("f")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0xe0], 0)), UInt8[0x36, 0x36, 0x36, 0x46]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 =# @b_str("666F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 =# @b_str("fo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x00], 0)), UInt8[0x36, 0x36, 0x36, 0x46, 0x36, 0x46]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 =# @b_str("666F6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x20], 0)), UInt8[0x36, 0x36, 0x36, 0x46, 0x36, 0x46, 0x36, 0x32]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 =# @b_str("666F6F62")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 =# @b_str("foob")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x40], 0)), UInt8[0x36, 0x36, 0x36, 0x46, 0x36, 0x46, 0x36, 0x32, 0x36, 0x31]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 =# @b_str("666F6F6261")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 =# @b_str("fooba")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x00], 0)), UInt8[0x36, 0x36, 0x36, 0x46, 0x36, 0x46, 0x36, 0x32, 0x36, 0x31, 0x37, 0x32]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 =# @b_str("666F6F626172")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 =# @b_str("foobar")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x40], 0)), UInt8[0x36, 0x36, 0x36, 0x66, 0x36, 0x46, 0x36, 0x32, 0x36, 0x31, 0x37, 0x32]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 =# @b_str("666f6F626172")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 =# @b_str("foobar")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x50], 0)), UInt8[0x20, 0x20, 0x20]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 =# @b_str("   ")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 =# @b_str("")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x40], 0)), UInt8[0x36, 0x36, 0x36, 0x0a, 0x46, 0x36, 0x46]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 =# @b_str("666\\nF6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0xb0], 0)), UInt8[0x36, 0x36, 0x36, 0x0d, 0x0a, 0x46, 0x36, 0x46]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 =# @b_str("666\\r\\nF6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0x80], 0)), UInt8[0x36, 0x20, 0x20, 0x36, 0x36, 0x0d, 0x0a, 0x46, 0x36, 0x46, 0x20, 0x20, 0x20]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 =# @b_str("6  66\\r\\nF6F   ")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54
  Test threw exception MethodError(transcode, (Base16Decoder(CodecBase.CodeTable{16}(UInt8[0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46], UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x10, 0x10, 0x10, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff], 0x00), CodecBase.State(:init), CodecBase.Buffer(UInt8[0xc0], 0)), UInt8[0x20, 0x20, 0x36, 0x36, 0x09, 0x36, 0x46, 0x09, 0x36, 0x46, 0x0a]), 0x00000000000069f0)
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 =# @b_str("  66\\t6F\\t6F\\n")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57 =# @b_str("a"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58 =# @b_str("aaa"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59 =# @b_str("aaaaa"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60 =# @b_str("\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61 =# @b_str("a\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62 =# @b_str("aa\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63 =# @b_str("aaa\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = Type at buffer.jl:9 [inlined]
└ @ Core buffer.jl:9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = Type at buffer.jl:9 [inlined]
└ @ Core buffer.jl:9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = Type at buffer.jl:9 [inlined]
└ @ Core buffer.jl:9
Test Summary: | Pass  Fail  Error  Total
Base16        |  492     7     22    521
ERROR: LoadError: Some tests did not pass: 492 passed, 7 failed, 22 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:23
┌ Error: ------------------------------------------------------------
│ # Testing failed for CodecBase
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#534(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [17] top-level scope
│     [18] eval at ./boot.jl:308 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:309
│     [21] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: CodecBase had test errors

>>> End of log
