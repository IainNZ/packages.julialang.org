>>> 'Pkg.add("CodecBase")' log
[ Info: Cloning cache of CodecBase from https://github.com/bicycle1885/CodecBase.jl.git
[ Info: Installing CodecBase v0.1.0
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CodecBase
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CodecBase")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1784136 s       7869 s      94381 s     688966 s         15 s
       #2  3500 MHz     404154 s         46 s      40862 s    2498044 s          0 s
       
  Memory: 2.93927001953125 GB (867.22265625 MB free)
  Uptime: 29867.0 sec
  Load Avg:  1.03271484375  0.9990234375  0.9755859375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CodecBase                     0.1.0
 - JSON                          0.16.4
3 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - TranscodingStreams            0.4.1
[ Info: Testing CodecBase
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable16#1(::Bool, ::Type, ::String) at codetable.jl:23
└ @ CodecBase codetable.jl:23
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable16#1(::Bool, ::Type, ::String) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable32#6(::Bool, ::Type, ::String, ::Char) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #CodeTable32#6(::Bool, ::Type, ::String, ::Char) at codetable.jl:25
└ @ CodecBase codetable.jl:25
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = CodecBase.CodeTable{64}(::String, ::Char) at codetable.jl:24
└ @ CodecBase codetable.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = CodecBase.CodeTable{64}(::String, ::Char) at codetable.jl:25
└ @ CodecBase codetable.jl:25
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:2
Test Summary: | Pass  Total
DecodeError   |    4      4
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 =# @b_str("")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 =# @b_str("")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:30 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 =# @b_str("f")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 =# @b_str("66")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:31 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 =# @b_str("fo")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 =# @b_str("666F")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:32 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 =# @b_str("foo")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 =# @b_str("666F6F")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:33 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 =# @b_str("foob")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 =# @b_str("666F6F62")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:34 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 =# @b_str("fooba")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 =# @b_str("666F6F6261")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:35 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 =# @b_str("foobar")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 =# @b_str("666F6F626172")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:36 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(lowercase=false), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 =# @b_str("自問自答")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 =# @b_str("E887AAE5958FE887AAE7AD94")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:38 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39
  Test threw an exception of type MethodError
  Expression: transcode(Base16Encoder(lowercase=true), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 =# @b_str("自問自答")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 =# @b_str("e887aae5958fe887aae7ad94")
  MethodError: no method matching transcode(::Base16Encoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:39 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = Type at buffer.jl:9 [inlined]
└ @ Core buffer.jl:9
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 =# @b_str("")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 =# @b_str("")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:41 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 =# @b_str("66")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 =# @b_str("f")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:42 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 =# @b_str("666F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 =# @b_str("fo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:43 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 =# @b_str("666F6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:44 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 =# @b_str("666F6F62")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 =# @b_str("foob")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:45 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 =# @b_str("666F6F6261")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 =# @b_str("fooba")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:46 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 =# @b_str("666F6F626172")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 =# @b_str("foobar")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:47 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 =# @b_str("666f6F626172")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 =# @b_str("foobar")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:48 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 =# @b_str("   ")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 =# @b_str("")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:50 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 =# @b_str("666\\nF6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:51 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 =# @b_str("666\\r\\nF6F")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:52 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 =# @b_str("6  66\\r\\nF6F   ")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:53 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54
  Test threw an exception of type MethodError
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 =# @b_str("  66\\t6F\\t6F\\n")) == #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 =# @b_str("foo")
  MethodError: no method matching transcode(::Base16Decoder, ::Base.CodeUnits{UInt8,String})
  Closest candidates are:
    transcode(!Matched::Type{T<:Union{Int32, UInt16, UInt32, UInt8}}, ::AbstractArray{T<:Union{Int32, UInt16, UInt32, UInt8},1}) where T<:Union{Int32, UInt16, UInt32, UInt8} at c.jl:205
    transcode(!Matched::Type{T<:Union{Int32, UInt32}}, ::Union{Base.CodeUnits{UInt8,String}, Array{UInt8,1}}) where T<:Union{Int32, UInt32} at c.jl:207
    transcode(::Any, !Matched::String) at c.jl:215
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:54 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57 =# @b_str("a"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:57 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58 =# @b_str("aaa"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:58 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59 =# @b_str("aaaaa"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:59 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60 =# @b_str("\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:60 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61 =# @b_str("a\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:61 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62 =# @b_str("aa\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:62 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
Base16: Test Failed at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63
  Expression: transcode(Base16Decoder(), #= /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63 =# @b_str("aaa\\0"))
    Expected: CodecBase.DecodeError
      Thrown: MethodError
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:63 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
WARNING: importing deprecated binding Base.srand into TranscodingStreams.
Base16: Error During Test at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:23
  Got an exception of type ErrorException outside of a @test
  Base.srand has been moved to the standard library package Random.
  Restart Julia and then run `using Random` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #srand#941 at ./deprecated.jl:138 [inlined]
   [3] srand at ./deprecated.jl:138 [inlined]
   [4] test_roundtrip_read(::Type, ::Type) at /home/vagrant/.julia/v0.7/TranscodingStreams/src/testtools.jl:9
   [5] macro expansion at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:65 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:24
   [8] include at ./boot.jl:292 [inlined]
   [9] include_relative(::Module, ::String) at ./loading.jl:1012
   [10] include(::Module, ::String) at ./sysimg.jl:26
   [11] process_options(::Base.JLOptions) at ./client.jl:334
   [12] _start() at ./client.jl:386
Test Summary: | Pass  Fail  Error  Total
Base16        |    3     7     23     33
ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 23 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl:23
┌ Error: ------------------------------------------------------------
│ # Testing failed for CodecBase
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CodecBase/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: CodecBase had test errors

>>> End of log
