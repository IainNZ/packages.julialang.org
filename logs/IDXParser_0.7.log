>>> 'Pkg.add("IDXParser")' log
┌ Info: Cloning cache of IDXParser from https://github.com/Elzair/IDXParser.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing IDXParser v0.1.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("IDXParser")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1178407 s        109 s      63463 s     369575 s          9 s
       #2  3499 MHz     217511 s         42 s      24198 s    1625384 s          0 s
       
  Memory: 2.93927001953125 GB (964.1953125 MB free)
  Uptime: 18958.0 sec
  Load Avg:  1.04833984375  1.03759765625  1.00244140625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - IDXParser                     0.1.0
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
[ Info: Testing IDXParser                          @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/IDXParser/test/runtests.jl:2
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = parseIDX(::String) at IDXParser.jl:18
└                                                    @ IDXParser IDXParser.jl:18
┌ Warning: `read(s::IO, t::Type, d1::Integer, dims::Integer...)` is deprecated, use `read!(s, Array{t}(uninitialized, convert(Tuple{Vararg{Int}}, tuple(d1, dims...))))` instead.
│   caller = parseIDX(::String) at IDXParser.jl:40
└                                                    @ IDXParser IDXParser.jl:40
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = parseIDX(::String) at IDXParser.jl:42
└                                                    @ IDXParser IDXParser.jl:42
[ Info: IDXParser tests passed                     @ Base.Pkg.Entry entry.jl:737

>>> End of log
