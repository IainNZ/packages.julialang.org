>>> 'Pkg.add("IntArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of IntArrays from https://github.com/bicycle1885/IntArrays.jl.git
[ Info: Installing IntArrays v0.1.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of IntArrays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IntArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4880
Commit 2eb9048f7b (2018-04-13 19:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1757457 s       3546 s     140972 s     472685 s         16 s
       #2  3500 MHz     414850 s       4400 s      54903 s    2266875 s          0 s
       
  Memory: 2.939197540283203 GB (2009.359375 MB free)
  Uptime: 27920.0 sec
  Load Avg:  0.9970703125  0.9755859375  1.00244140625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - IntArrays                     0.1.0
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing IntArrays
┌ Warning: Deprecated syntax `parametric method syntax bitsof{T}(::Type{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:12.
│ Use `bitsof(#unused#::Type{T}) where T` instead.
└ @ nothing buffer.jl:12
┌ Warning: Deprecated syntax `parametric method syntax resize!{w, T}(buffer::Buffer{w, T}, len::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:15.
│ Use `resize!(buffer::Buffer{w, T}, len::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:15
┌ Warning: Deprecated syntax `parametric method syntax mask{T}(::Type{T}, w)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:21.
│ Use `mask(#unused#::Type{T}, w) where T` instead.
└ @ nothing buffer.jl:21
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt8}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:25.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt8}, i::Integer) where w` instead.
└ @ nothing buffer.jl:25
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt16}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:30.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt16}, i::Integer) where w` instead.
└ @ nothing buffer.jl:30
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt32}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:35.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt32}, i::Integer) where w` instead.
└ @ nothing buffer.jl:35
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt64}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:40.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt64}, i::Integer) where w` instead.
└ @ nothing buffer.jl:40
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(buf::Buffer{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:46.
│ Use `getindex(buf::Buffer{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:46
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{1, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{1, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{2, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{2, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{4, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{4, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{8, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{8, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{16, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{16, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{32, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{32, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{64, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{64, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax setindex!{w, T}(buf::Buffer{w, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:73.
│ Use `setindex!(buf::Buffer{w, T}, x::T, i::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:73
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{1, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{1, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{2, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{2, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{4, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{4, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{8, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{8, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{16, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{16, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{32, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{32, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{64, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{64, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax fill!{w, T}(buf::Buffer{w, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:103.
│ Use `fill!(buf::Buffer{w, T}, x::T) where {w, T}` instead.
└ @ nothing buffer.jl:103
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{1, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{1, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{2, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{2, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{4, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{4, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{8, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{8, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{16, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{16, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{32, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{32, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{64, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{64, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill0!{w, T}(buf::Buffer{w, T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:140.
│ Use `fill0!(buf::Buffer{w, T}) where {w, T}` instead.
└ @ nothing buffer.jl:140
┌ Warning: Deprecated syntax `parametric method syntax fill1!{w, T}(buf::Buffer{w, T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:145.
│ Use `fill1!(buf::Buffer{w, T}) where {w, T}` instead.
└ @ nothing buffer.jl:145
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T, n}(::Type{IntArray{w, T, n}}, array::AbstractArray{T, n})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:30.
│ Use `convert(#unused#::Type{IntArray{w, T, n}}, array::AbstractArray{T, n}) where {w, T, n}` instead.
└ @ nothing array.jl:30
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T, n}(::Type{IntArray{w}}, array::AbstractArray{T, n})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:38.
│ Use `convert(#unused#::Type{IntArray{w}}, array::AbstractArray{T, n}) where {w, T, n}` instead.
└ @ nothing array.jl:38
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(array::IntArray{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:48.
│ Use `getindex(array::IntArray{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:48
┌ Warning: Deprecated syntax `parametric method syntax unsafe_getindex{w, T}(array::IntArray{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:53.
│ Use `unsafe_getindex(array::IntArray{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:53
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(array::IntArray{w, T}, i::Integer, j::Integer...)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:58.
│ Use `getindex(array::IntArray{w, T}, i::Integer, j::Integer...) where {w, T}` instead.
└ @ nothing array.jl:58
┌ Warning: Deprecated syntax `parametric method syntax unsafe_setindex!{w, T}(array::IntArray{w, T}, x::Integer, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:68.
│ Use `unsafe_setindex!(array::IntArray{w, T}, x::Integer, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:68
┌ Warning: Deprecated syntax `parametric method syntax setindex!{w, T}(array::IntArray{w, T}, x::Integer, i::Integer, j::Integer...)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:73.
│ Use `setindex!(array::IntArray{w, T}, x::Integer, i::Integer, j::Integer...) where {w, T}` instead.
└ @ nothing array.jl:73
┌ Warning: Deprecated syntax `parametric method syntax similar{w, T <: Unsigned}(array::IntArray{w}, ::Type{T}, dims::Dims)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:79.
│ Use `similar(array::IntArray{w}, #unused#::Type{T}, dims::Dims) where {w, T <: Unsigned}` instead.
└ @ nothing array.jl:79
┌ Warning: Deprecated syntax `parametric method syntax fill!{w, T}(array::IntArray{w, T}, x::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:85.
│ Use `fill!(array::IntArray{w, T}, x::Integer) where {w, T}` instead.
└ @ nothing array.jl:85
┌ Warning: Deprecated syntax `parametric method syntax copy!{w}(a::IntArray{w}, b::IntArray{w})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:97.
│ Use `copy!(a::IntArray{w}, b::IntArray{w}) where w` instead.
└ @ nothing array.jl:97
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntVector{w, T}}){w, T}(len::Integer, mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:4.
│ Use `(::Type{IntVector{w, T}})(len::Integer, mmap::Bool = false) where {w, T}` instead.
└ @ nothing vector.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntVector{w, T}}){w, T}(mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:8.
│ Use `(::Type{IntVector{w, T}})(mmap::Bool = false) where {w, T}` instead.
└ @ nothing vector.jl:8
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T}(::Type{IntVector{w}}, vector::AbstractVector{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:12.
│ Use `convert(#unused#::Type{IntVector{w}}, vector::AbstractVector{T}) where {w, T}` instead.
└ @ nothing vector.jl:12
┌ Warning: Deprecated syntax `parametric method syntax radixsort!{w}(vector::IntVector{w})` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:59.
│ Use `radixsort!(vector::IntVector{w}) where w` instead.
└ @ nothing vector.jl:59
┌ Warning: Deprecated syntax `parametric method syntax radixsort!{w, T}(v::IntVector{w, T}, lo, hi, k)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:63.
│ Use `radixsort!(v::IntVector{w, T}, lo, hi, k) where {w, T}` instead.
└ @ nothing vector.jl:63
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntMatrix{w, T}}){w, T}(m::Integer, n::Integer, mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:4.
│ Use `(::Type{IntMatrix{w, T}})(m::Integer, n::Integer, mmap::Bool = false) where {w, T}` instead.
└ @ nothing matrix.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntMatrix{w, T}}){w, T}(mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:8.
│ Use `(::Type{IntMatrix{w, T}})(mmap::Bool = false) where {w, T}` instead.
└ @ nothing matrix.jl:8
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T}(::Type{IntMatrix{w}}, matrix::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:12.
│ Use `convert(#unused#::Type{IntMatrix{w}}, matrix::AbstractMatrix{T}) where {w, T}` instead.
└ @ nothing matrix.jl:12
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:2
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:4
IntVector: Error During Test at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:9
  Got exception MethodError(IntArray{2,T,n} where n where T<:Unsigned, (UInt8[0x00, 0x01, 0x02],), 0xffffffffffffffff) outside of a @test
  MethodError: no method matching IntArray{2,T,n} where n where T<:Unsigned(::Array{UInt8,1})
  Closest candidates are:
    IntArray{2,T,n} where n where T<:Unsigned(::Any) where T<:AbstractArray at abstractarray.jl:22
  Stacktrace:
   [1] IntArray{2,T,n} where n where T<:Unsigned(::Array{UInt8,1}) at ./abstractarray.jl:22
   [2] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:11 [inlined]
   [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:10 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:9
   [7] include at ./boot.jl:314 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1067
   [9] include(::Module, ::String) at ./sysimg.jl:29
   [10] exec_options(::Base.JLOptions) at ./client.jl:327
   [11] _start() at ./client.jl:455
IntMatrix: Error During Test at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:19
  Got exception MethodError(IntArray{3,T,n} where n where T<:Unsigned, (UInt8[0x00 0x01; 0x02 0x03; 0x04 0x05],), 0xffffffffffffffff) outside of a @test
  MethodError: no method matching IntArray{3,T,n} where n where T<:Unsigned(::Array{UInt8,2})
  Closest candidates are:
    IntArray{3,T,n} where n where T<:Unsigned(::Any) where T<:AbstractArray at abstractarray.jl:22
  Stacktrace:
   [1] IntArray{3,T,n} where n where T<:Unsigned(::Array{UInt8,2}) at ./abstractarray.jl:22
   [2] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:21 [inlined]
   [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:20 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:9
   [7] include at ./boot.jl:314 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1067
   [9] include(::Module, ::String) at ./sysimg.jl:29
   [10] exec_options(::Base.JLOptions) at ./client.jl:327
   [11] _start() at ./client.jl:455
three-dimensional array: Error During Test at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:29
  Got exception MethodError(IntArray{2,T,n} where n where T<:Unsigned, (UInt8[0x00 0x02 0x02; 0x00 0x00 0x02]

UInt8[0x03 0x00 0x02; 0x00 0x01 0x00]

UInt8[0x01 0x02 0x02; 0x00 0x01 0x02]

UInt8[0x00 0x01 0x01; 0x01 0x01 0x00],), 0xffffffffffffffff) outside of a @test
  MethodError: no method matching IntArray{2,T,n} where n where T<:Unsigned(::Array{UInt8,3})
  Closest candidates are:
    IntArray{2,T,n} where n where T<:Unsigned(::Any) where T<:AbstractArray at abstractarray.jl:22
  Stacktrace:
   [1] IntArray{2,T,n} where n where T<:Unsigned(::Array{UInt8,3}) at ./abstractarray.jl:22
   [2] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:31 [inlined]
   [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:30 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:9
   [7] include at ./boot.jl:314 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1067
   [9] include(::Module, ::String) at ./sysimg.jl:29
   [10] exec_options(::Base.JLOptions) at ./client.jl:327
   [11] _start() at ./client.jl:455
Test Summary:             | Error  Total
conversion                |     3      3
  IntVector               |     1      1
  IntMatrix               |     1      1
  three-dimensional array |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:8
┌ Error: ------------------------------------------------------------
│ # Testing failed for IntArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#542(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: IntArrays had test errors

>>> End of log
