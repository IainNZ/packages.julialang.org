>>> 'Pkg.add("IntArrays")' log
[ Info: Cloning cache of IntArrays from https://github.com/bicycle1885/IntArrays.jl.git
[ Info: Installing IntArrays v0.1.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of IntArrays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IntArrays")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1589061 s       7348 s      83681 s     422621 s         15 s
       #2  3500 MHz     301433 s         42 s      32102 s    2110897 s          0 s
       
  Memory: 2.93927001953125 GB (1034.18359375 MB free)
  Uptime: 24781.0 sec
  Load Avg:  0.9970703125  0.998046875  0.9775390625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - IntArrays                     0.1.0
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing IntArrays
┌ Warning: Deprecated syntax `parametric method syntax bitsof{T}(::Type{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:12.
│ Use `bitsof(#unused#::Type{T}) where T` instead.
└ @ nothing buffer.jl:12
┌ Warning: Deprecated syntax `parametric method syntax resize!{w, T}(buffer::Buffer{w, T}, len::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:15.
│ Use `resize!(buffer::Buffer{w, T}, len::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:15
┌ Warning: Deprecated syntax `parametric method syntax mask{T}(::Type{T}, w)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:21.
│ Use `mask(#unused#::Type{T}, w) where T` instead.
└ @ nothing buffer.jl:21
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt8}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:25.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt8}, i::Integer) where w` instead.
└ @ nothing buffer.jl:25
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt16}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:30.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt16}, i::Integer) where w` instead.
└ @ nothing buffer.jl:30
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt32}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:35.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt32}, i::Integer) where w` instead.
└ @ nothing buffer.jl:35
┌ Warning: Deprecated syntax `parametric method syntax get_chunk_id{w}(::Buffer{w, UInt64}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:40.
│ Use `get_chunk_id(#unused#::Buffer{w, UInt64}, i::Integer) where w` instead.
└ @ nothing buffer.jl:40
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(buf::Buffer{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:46.
│ Use `getindex(buf::Buffer{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:46
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{1, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{1, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{2, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{2, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{4, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{4, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{8, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{8, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{16, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{16, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{32, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{32, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(buf::Buffer{64, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:63.
│ Use `getindex(buf::Buffer{64, T}, i::Integer) where T` instead.
└ @ nothing buffer.jl:63
┌ Warning: Deprecated syntax `parametric method syntax setindex!{w, T}(buf::Buffer{w, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:73.
│ Use `setindex!(buf::Buffer{w, T}, x::T, i::Integer) where {w, T}` instead.
└ @ nothing buffer.jl:73
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{1, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{1, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{2, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{2, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{4, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{4, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{8, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{8, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{16, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{16, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{32, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{32, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(buf::Buffer{64, T}, x::T, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:91.
│ Use `setindex!(buf::Buffer{64, T}, x::T, i::Integer) where T` instead.
└ @ nothing buffer.jl:91
┌ Warning: Deprecated syntax `parametric method syntax fill!{w, T}(buf::Buffer{w, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:103.
│ Use `fill!(buf::Buffer{w, T}, x::T) where {w, T}` instead.
└ @ nothing buffer.jl:103
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{1, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{1, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{2, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{2, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{4, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{4, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{8, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{8, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{16, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{16, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{32, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{32, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill!{T}(buf::Buffer{64, T}, x::T)` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:128.
│ Use `fill!(buf::Buffer{64, T}, x::T) where T` instead.
└ @ nothing buffer.jl:128
┌ Warning: Deprecated syntax `parametric method syntax fill0!{w, T}(buf::Buffer{w, T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:140.
│ Use `fill0!(buf::Buffer{w, T}) where {w, T}` instead.
└ @ nothing buffer.jl:140
┌ Warning: Deprecated syntax `parametric method syntax fill1!{w, T}(buf::Buffer{w, T})` around /home/vagrant/.julia/v0.7/IntArrays/src/buffer.jl:145.
│ Use `fill1!(buf::Buffer{w, T}) where {w, T}` instead.
└ @ nothing buffer.jl:145
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T, n}(::Type{IntArray{w, T, n}}, array::AbstractArray{T, n})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:30.
│ Use `convert(#unused#::Type{IntArray{w, T, n}}, array::AbstractArray{T, n}) where {w, T, n}` instead.
└ @ nothing array.jl:30
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T, n}(::Type{IntArray{w}}, array::AbstractArray{T, n})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:38.
│ Use `convert(#unused#::Type{IntArray{w}}, array::AbstractArray{T, n}) where {w, T, n}` instead.
└ @ nothing array.jl:38
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(array::IntArray{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:48.
│ Use `getindex(array::IntArray{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:48
┌ Warning: Deprecated syntax `parametric method syntax unsafe_getindex{w, T}(array::IntArray{w, T}, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:53.
│ Use `unsafe_getindex(array::IntArray{w, T}, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:53
┌ Warning: Deprecated syntax `parametric method syntax getindex{w, T}(array::IntArray{w, T}, i::Integer, j::Integer...)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:58.
│ Use `getindex(array::IntArray{w, T}, i::Integer, j::Integer...) where {w, T}` instead.
└ @ nothing array.jl:58
┌ Warning: Deprecated syntax `parametric method syntax unsafe_setindex!{w, T}(array::IntArray{w, T}, x::Integer, i::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:68.
│ Use `unsafe_setindex!(array::IntArray{w, T}, x::Integer, i::Integer) where {w, T}` instead.
└ @ nothing array.jl:68
┌ Warning: Deprecated syntax `parametric method syntax setindex!{w, T}(array::IntArray{w, T}, x::Integer, i::Integer, j::Integer...)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:73.
│ Use `setindex!(array::IntArray{w, T}, x::Integer, i::Integer, j::Integer...) where {w, T}` instead.
└ @ nothing array.jl:73
┌ Warning: Deprecated syntax `parametric method syntax similar{w, T <: Unsigned}(array::IntArray{w}, ::Type{T}, dims::Dims)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:79.
│ Use `similar(array::IntArray{w}, #unused#::Type{T}, dims::Dims) where {w, T <: Unsigned}` instead.
└ @ nothing array.jl:79
┌ Warning: Deprecated syntax `parametric method syntax fill!{w, T}(array::IntArray{w, T}, x::Integer)` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:85.
│ Use `fill!(array::IntArray{w, T}, x::Integer) where {w, T}` instead.
└ @ nothing array.jl:85
┌ Warning: Deprecated syntax `parametric method syntax copy!{w}(a::IntArray{w}, b::IntArray{w})` around /home/vagrant/.julia/v0.7/IntArrays/src/array.jl:97.
│ Use `copy!(a::IntArray{w}, b::IntArray{w}) where w` instead.
└ @ nothing array.jl:97
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntVector{w, T}}){w, T}(len::Integer, mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:4.
│ Use `(::Type{IntVector{w, T}})(len::Integer, mmap::Bool = false) where {w, T}` instead.
└ @ nothing vector.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntVector{w, T}}){w, T}(mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:8.
│ Use `(::Type{IntVector{w, T}})(mmap::Bool = false) where {w, T}` instead.
└ @ nothing vector.jl:8
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T}(::Type{IntVector{w}}, vector::AbstractVector{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:12.
│ Use `convert(#unused#::Type{IntVector{w}}, vector::AbstractVector{T}) where {w, T}` instead.
└ @ nothing vector.jl:12
┌ Warning: Deprecated syntax `parametric method syntax radixsort!{w}(vector::IntVector{w})` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:59.
│ Use `radixsort!(vector::IntVector{w}) where w` instead.
└ @ nothing vector.jl:59
┌ Warning: Deprecated syntax `parametric method syntax radixsort!{w, T}(v::IntVector{w, T}, lo, hi, k)` around /home/vagrant/.julia/v0.7/IntArrays/src/vector.jl:63.
│ Use `radixsort!(v::IntVector{w, T}, lo, hi, k) where {w, T}` instead.
└ @ nothing vector.jl:63
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntMatrix{w, T}}){w, T}(m::Integer, n::Integer, mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:4.
│ Use `(::Type{IntMatrix{w, T}})(m::Integer, n::Integer, mmap::Bool = false) where {w, T}` instead.
└ @ nothing matrix.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{IntMatrix{w, T}}){w, T}(mmap::Bool = false)` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:8.
│ Use `(::Type{IntMatrix{w, T}})(mmap::Bool = false) where {w, T}` instead.
└ @ nothing matrix.jl:8
┌ Warning: Deprecated syntax `parametric method syntax convert{w, T}(::Type{IntMatrix{w}}, matrix::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/IntArrays/src/matrix.jl:12.
│ Use `convert(#unused#::Type{IntMatrix{w}}, matrix::AbstractMatrix{T}) where {w, T}` instead.
└ @ nothing matrix.jl:12
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:2
ERROR: LoadError: Base.srand has been moved to the standard library package Random.
Restart Julia and then run `using Random` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #srand#941(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
 [3] srand(::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
 [4] top-level scope
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:334
 [9] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for IntArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/IntArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: IntArrays had test errors

>>> End of log
