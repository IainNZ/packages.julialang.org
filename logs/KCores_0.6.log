>>> 'Pkg.add("KCores")' log
INFO: Cloning cache of KCores from https://github.com/johnybx/KCores.jl.git
INFO: Installing Conda v0.7.0
INFO: Installing DataStructures v0.7.2
INFO: Installing Graphs v0.8.0
INFO: Installing KCores v0.0.3
INFO: Installing MacroTools v0.4.0
INFO: Installing PyCall v1.15.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata ...............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.13.3          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KCores
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KCores")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1391.67578125 MB free)
Uptime: 95649.0 sec
Load Avg:  0.9755859375  0.98388671875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    6268128 s       6685 s     281848 s    1457412 s         53 s
#2  3499 MHz    1317593 s         94 s     156515 s    7908403 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.1
 - KCores                        0.0.3
21 additional packages:
 - BinDeps                       0.6.0
 - Cairo                         0.3.1
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.37.0
 - Conda                         0.7.0
 - DataStructures                0.7.2
 - FixedPointNumbers             0.4.3
 - Graphics                      0.2.0
 - Graphs                        0.8.0
 - Gtk                           0.13.1
 - MacroTools                    0.4.0
 - NaNMath                       0.3.0
 - NodeJS                        0.1.0
 - PyCall                        1.15.0
 - Reexport                      0.0.3
 - Requires                      0.4.3
 - Rsvg                          0.1.0
 - SHA                           0.5.2
 - URIParser                     0.2.0
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Testing KCores
WARNING: Method definition (::Type{Graphs.KeyVertex{K} where K})(Int64, K) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:13 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:17.
WARNING: Method definition (::Type{Graphs.Edge{V} where V})(Int64, V, V) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:55 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:61.
WARNING: Method definition (::Type{Graphs.ExEdge{V} where V})(Int64, V, V, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:73 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:84.
WARNING: Method definition (::Type{Graphs.TargetIterator{G, EList} where EList where G<:(Graphs.AbstractGraph{V, E} where E where V)})(G<:(Graphs.AbstractGraph{V, E} where E where V), EList) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:124 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:128.
WARNING: Method definition (::Type{Graphs.SourceIterator{G, EList} where EList where G<:(Graphs.AbstractGraph{V, E} where E where V)})(G<:(Graphs.AbstractGraph{V, E} where E where V), EList) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:142 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/common.jl:146.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor{G, DMap} where DMap where G<:(Graphs.AbstractGraph{V, E} where E where V)})(G<:(Graphs.AbstractGraph{V, E} where E where V), DMap) in module Graphs at /home/vagrant/.julia/v0.6/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.6/Graphs/src/breadth_first_visit.jl:111.
ERROR: LoadError: LoadError: PyError (ccall(@pysym(:PyImport_ImportModule), PyPtr, (Cstring,), name)

The Python package networkx could not be found by pyimport. Usually this means
that you did not install networkx in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the networkx module, you can
use `pyimport_conda("networkx", PKG)`, where PKG is the Anaconda
package the contains the module networkx, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError('No module named networkx',)

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:56 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:61 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:81 [inlined]
 [4] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:374
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion at /home/vagrant/.julia/v0.6/KCores/test/runtests.jl:3 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KCores/test/pytests.jl, in expression starting on line 467
while loading /home/vagrant/.julia/v0.6/KCores/test/runtests.jl, in expression starting on line 2
===============================[ ERROR: KCores ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/KCores/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: KCores had test errors

>>> End of log
