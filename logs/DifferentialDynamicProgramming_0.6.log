>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2343.63671875 MB free)
Uptime: 72847.0 sec
Load Avg:  1.0146484375  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4408168 s       2813 s     311020 s    1584245 s         58 s
#2  3500 MHz    1387070 s       4030 s     150982 s    5594462 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 63831.6133422917
==========
Starting box-QP, dimension 500, initial value: 63831.613   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.99191e-12  final value -32.1709      factorizations 16
  2.482874 seconds (1.13 M allocations: 133.644 MiB, 1.02% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.0438     18          18          0.0929      0.0         
2           31.0461     11          11          0.0882      -0.2        
3           20.0829     6.11        6.11        0.0981      -0.6        
4           13.9727     2.26        2.26        0.109       -1.2        
5           11.7111     1.19        1.19        0.159       -2.0        
6           10.5215     0.515       0.515       0.268       -3.1        
7           10.0066     0.0244      0.0244      0.0791      -4.3        
8           9.98221     1.7e-05    1.7e-05    0.00236     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   9.982192    

            final grad:   3.409319e-06

            final lambda: 4.4841551e-08

            time / iter:  256   ms

            total time:   2.31  seconds, of which

            derivs:     1.9 %

            back pass:  34.6%

            fwd pass:   8.1 %

            other:      55.4% (graphics etc.)
 =========== end iLQG ===========
  9.428661 seconds (5.99 M allocations: 498.437 MiB, 2.11% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
