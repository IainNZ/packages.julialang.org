>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2177.5234375 MB free)
Uptime: 54014.0 sec
Load Avg:  1.01318359375  1.02099609375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3410128 s       6476 s     152711 s     954844 s          9 s
#2  3499 MHz     983066 s        609 s      97220 s    4187735 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.16.3
3 additional packages:
 - Compat                        0.44.0
 - Nullables                     0.0.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65746.21956633615
==========
Starting box-QP, dimension 500, initial value: 65746.220   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 2.8236e-12  final value -21.4221      factorizations 12
  2.572766 seconds (1.13 M allocations: 111.378 MiB, 0.81% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.5883     23.4        23.4        0.112       0.0         
2           25.235      10.7        10.7        0.0904      -0.2        
3           14.5803     4.69        4.69        0.0864      -0.6        
4           9.88742     2.07        2.07        0.0939      -1.2        
5           7.81298     1.03        1.03        0.142       -2.0        
6           6.78193     0.294       0.294       0.168       -3.1        
7           6.48799     0.0205      0.0205      0.0579      -4.3        
8           6.46751     2.78e-05    2.78e-05    0.00237     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.467481    

            final grad:   3.906771e-06

            final lambda: 4.4841551e-08

            time / iter:  241   ms

            total time:   2.17  seconds, of which

            derivs:     3.1 %

            back pass:  33.7%

            fwd pass:   7.0 %

            other:      56.2% (graphics etc.)
 =========== end iLQG ===========
  9.738156 seconds (5.99 M allocations: 498.436 MiB, 2.00% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
