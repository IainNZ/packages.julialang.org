>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1743.77734375 MB free)
Uptime: 42969.0 sec
Load Avg:  0.93408203125  0.9931640625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2753748 s       4886 s     131784 s     785942 s         30 s
#2  3500 MHz     897682 s       1730 s      86324 s    3225029 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.1
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 63654.990500130356
==========
Starting box-QP, dimension 500, initial value: 63654.991   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 2.95779e-12  final value -22.8074      factorizations 14
  3.248788 seconds (1.16 M allocations: 125.824 MiB, 1.13% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.7772     15.6        15.6        0.0861      0.0         
2           34.2        11.8        11.8        0.0888      -0.2        
3           22.4219     8.73        8.73        0.111       -0.6        
4           13.6935     4.9         4.9         0.138       -1.2        
5           8.79812     2.46        2.46        0.164       -2.0        
6           6.34305     0.619       0.619       0.235       -3.1        
7           5.72374     0.0251      0.0251      0.0727      -4.3        
8           5.69866     1.68e-05    1.68e-05    0.00251     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.698647    

            final grad:   3.765873e-06

            final lambda: 4.4841551e-08

            time / iter:  324   ms

            total time:   2.91  seconds, of which

            derivs:     2.6 %

            back pass:  32.5%

            fwd pass:   8.7 %

            other:      56.2% (graphics etc.)
 =========== end iLQG ===========
 10.320303 seconds (5.55 M allocations: 488.807 MiB, 2.82% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
