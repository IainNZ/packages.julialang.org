>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1702.26171875 MB free)
Uptime: 46375.0 sec
Load Avg:  0.9970703125  0.9853515625  1.021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3008525 s       5288 s     159126 s     771197 s         45 s
#2  3500 MHz     959688 s         40 s      95556 s    3469619 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 57152.929576551316
==========
Starting box-QP, dimension 500, initial value: 57152.930   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.18466e-12  final value -39.4597      factorizations 18
  3.815247 seconds (1.13 M allocations: 143.977 MiB, 1.03% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.6672     21.5        21.5        0.0989      0.0         
2           28.1363     11.6        11.6        0.0842      -0.2        
3           16.5391     6.41        6.41        0.09        -0.6        
4           10.1244     3.17        3.17        0.106       -1.2        
5           6.94994     2.29        2.29        0.175       -2.0        
6           4.66267     0.966       0.966       0.238       -3.1        
7           3.69621     0.0477      0.0477      0.074       -4.3        
8           3.64851     4.25e-05    4.25e-05    0.00279     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.648466    

            final grad:   4.349185e-06

            final lambda: 4.4841551e-08

            time / iter:  311   ms

            total time:   2.80  seconds, of which

            derivs:     2.8 %

            back pass:  29.1%

            fwd pass:   5.4 %

            other:      62.8% (graphics etc.)
 =========== end iLQG ===========
 11.886348 seconds (6.07 M allocations: 502.839 MiB, 2.16% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
