>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1726.65234375 MB free)
Uptime: 43828.0 sec
Load Avg:  0.93505859375  0.998046875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2881804 s       7199 s     136626 s     715139 s         40 s
#2  3499 MHz     834594 s        129 s      81231 s    3383911 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 67982.75894034655
==========
Starting box-QP, dimension 500, initial value: 67982.759   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.93136e-12  final value -29.282       factorizations 16
  3.516358 seconds (1.15 M allocations: 133.691 MiB, 1.08% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.8251     17.2        17.2        0.0953      0.0         
2           33.5767     11.9        11.9        0.0937      -0.2        
3           21.6267     8.55        8.55        0.114       -0.6        
4           13.0758     4.57        4.57        0.146       -1.2        
5           8.5086      2.38        2.38        0.191       -2.0        
6           6.12451     0.958       0.958       0.248       -3.1        
7           5.16701     0.0726      0.0726      0.0796      -4.3        
8           5.09441     9.35e-05    9.35e-05    0.00306     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.09432     

            final grad:   4.902862e-06

            final lambda: 4.4841551e-08

            time / iter:  309   ms

            total time:   2.78  seconds, of which

            derivs:     2.5 %

            back pass:  31.8%

            fwd pass:   5.6 %

            other:      60.1% (graphics etc.)
 =========== end iLQG ===========
 11.131330 seconds (5.76 M allocations: 497.830 MiB, 2.52% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
