>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1713.76953125 MB free)
Uptime: 68391.0 sec
Load Avg:  1.0751953125  1.0283203125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4261692 s       5524 s     196205 s    1419261 s         60 s
#2  3499 MHz    1189688 s       3302 s     114318 s    5410632 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.16.4
3 additional packages:
 - Compat                        0.54.0
 - Nullables                     0.0.3
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65824.52048332697
==========
Starting box-QP, dimension 500, initial value: 65824.520   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.61615e-12  final value -28.4241      factorizations 15
  4.188061 seconds (1.13 M allocations: 128.119 MiB, 0.78% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5785     9.95        9.95        0.0694      0.0         
2           39.6294     9.15        9.15        0.0803      -0.2        
3           30.4769     9.12        9.12        0.119       -0.6        
4           21.3528     6.93        6.93        0.19        -1.2        
5           14.4259     3.34        3.34        0.279       -2.0        
6           11.0831     0.99        0.99        0.333       -3.1        
7           10.0929     0.043       0.043       0.111       -4.3        
8           10.0498     3.11e-05    3.11e-05    0.00303     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   10.04982    

            final grad:   4.090754e-06

            final lambda: 4.4841551e-08

            time / iter:  338   ms

            total time:   3.04  seconds, of which

            derivs:     2.6 %

            back pass:  37.2%

            fwd pass:   5.7 %

            other:      54.5% (graphics etc.)
 =========== end iLQG ===========
 12.255913 seconds (5.99 M allocations: 498.437 MiB, 1.86% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
