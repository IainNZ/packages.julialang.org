>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1812.58203125 MB free)
Uptime: 46207.0 sec
Load Avg:  0.9970703125  0.99560546875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    3062524 s       5687 s     149636 s     641522 s         15 s
#2  3503 MHz     734390 s        538 s      73626 s    3696174 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.32.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65049.978068114004
==========
Starting box-QP, dimension 500, initial value: 65049.978   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.58006e-12  final value -14.396       factorizations 13
  3.540141 seconds (1.12 M allocations: 117.515 MiB, 0.95% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.5315     19.8        19.8        0.0984      0.0         
2           30.76       10.4        10.4        0.084       -0.2        
3           20.39       6.68        6.68        0.1         -0.6        
4           13.713      4.51        4.51        0.137       -1.2        
5           9.20193     2.12        2.12        0.199       -2.0        
6           7.08677     0.377       0.377       0.175       -3.1        
7           6.70987     0.0162      0.0162      0.0556      -4.3        
8           6.69369     1.74e-05    1.74e-05    0.00208     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.693668    

            final grad:   3.357143e-06

            final lambda: 4.4841551e-08

            time / iter:  249   ms

            total time:   2.24  seconds, of which

            derivs:     1.9 %

            back pass:  33.5%

            fwd pass:   10.8%

            other:      53.7% (graphics etc.)
 =========== end iLQG ===========
  9.656283 seconds (6.07 M allocations: 502.840 MiB, 2.50% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
