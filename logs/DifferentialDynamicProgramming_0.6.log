>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1750.37109375 MB free)
Uptime: 48420.0 sec
Load Avg:  0.98486328125  0.9755859375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2874329 s       3669 s     139478 s    1134909 s         40 s
#2  3499 MHz     727221 s       4382 s      73178 s    3948656 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 60253.05554196
==========
Starting box-QP, dimension 500, initial value: 60253.056   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.08601e-12  final value -33.1874      factorizations 17
  3.293282 seconds (1.13 M allocations: 139.948 MiB, 0.86% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.2332     23.6        23.6        0.104       0.0         
2           24.5836     12          12          0.0874      -0.2        
3           12.5349     5.62        5.62        0.0861      -0.6        
4           6.91807     2.12        2.12        0.0857      -1.2        
5           4.80107     0.905       0.905       0.156       -2.0        
6           3.89648     0.21        0.21        0.19        -3.1        
7           3.68635     0.00889     0.00889     0.0561      -4.3        
8           3.67746     1.03e-05    1.03e-05    0.00208     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.677448    

            final grad:   3.614339e-06

            final lambda: 4.4841551e-08

            time / iter:  330   ms

            total time:   2.97  seconds, of which

            derivs:     2.4 %

            back pass:  31.5%

            fwd pass:   5.6 %

            other:      60.5% (graphics etc.)
 =========== end iLQG ===========
 10.054104 seconds (6.07 M allocations: 502.839 MiB, 2.06% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
