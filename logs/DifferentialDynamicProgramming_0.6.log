>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2012.56640625 MB free)
Uptime: 63361.0 sec
Load Avg:  0.923828125  0.98193359375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3902178 s       4300 s     284944 s    1179054 s          7 s
#2  3499 MHz     863797 s         96 s     117959 s    5232630 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.69.0
 - Nullables                     0.0.5
 - Requires                      0.4.4
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65372.38167911547
==========
Starting box-QP, dimension 500, initial value: 65372.382   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.07833e-12  final value -33.6262      factorizations 18
  2.322884 seconds (1.13 M allocations: 144.740 MiB, 1.10% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.6152     20.9        20.9        0.0969      0.0         
2           29.7198     11.5        11.5        0.0861      -0.2        
3           18.1746     5.65        5.65        0.0878      -0.6        
4           12.5269     2.3         2.3         0.0898      -1.2        
5           10.2223     1.19        1.19        0.152       -2.0        
6           9.03139     0.31        0.31        0.182       -3.1        
7           8.72094     0.00939     0.00939     0.0587      -4.3        
8           8.71155     5.45e-06    5.45e-06    0.00193     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   8.711546    

            final grad:   3.081933e-06

            final lambda: 4.4841551e-08

            time / iter:  256   ms

            total time:   2.30  seconds, of which

            derivs:     2.6 %

            back pass:  31.4%

            fwd pass:   7.9 %

            other:      58.1% (graphics etc.)
 =========== end iLQG ===========
  9.735243 seconds (5.99 M allocations: 500.604 MiB, 2.17% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
