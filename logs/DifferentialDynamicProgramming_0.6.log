>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1711.35546875 MB free)
Uptime: 46641.0 sec
Load Avg:  1.0029296875  1.01123046875  1.02685546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2950855 s       1641 s     143306 s     921484 s         41 s
#2  3499 MHz    1033366 s       5064 s     105510 s    3368259 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 62736.75689106548
==========
Starting box-QP, dimension 500, initial value: 62736.757   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.86712e-12  final value -31.7113      factorizations 14
  2.857453 seconds (1.12 M allocations: 124.659 MiB, 0.99% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.8241     27.7        27.7        0.121       0.0         
2           23.1134     11.1        11.1        0.0892      -0.2        
3           11.9904     4.71        4.71        0.0783      -0.6        
4           7.28293     2.64        2.64        0.0919      -1.2        
5           4.64518     1.61        1.61        0.156       -2.0        
6           3.03253     0.535       0.535       0.17        -3.1        
7           2.49776     0.0302      0.0302      0.0606      -4.3        
8           2.46753     3.11e-05    3.11e-05    0.00236     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.467502    

            final grad:   3.674112e-06

            final lambda: 4.4841551e-08

            time / iter:  276   ms

            total time:   2.49  seconds, of which

            derivs:     1.8 %

            back pass:  31.3%

            fwd pass:   9.3 %

            other:      57.6% (graphics etc.)
 =========== end iLQG ===========
 10.037792 seconds (4.94 M allocations: 452.871 MiB, 2.44% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
