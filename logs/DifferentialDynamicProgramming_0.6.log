>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1751.21875 MB free)
Uptime: 43573.0 sec
Load Avg:  1.0029296875  1.001953125  1.0361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz    2834498 s         72 s     136106 s     774980 s         34 s
#2  3491 MHz     858896 s       6986 s      82946 s    3323230 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 69960.55001563852
==========
Starting box-QP, dimension 500, initial value: 69960.550   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 2.55406e-12  final value -29.6259      factorizations 14
  3.125456 seconds (1.16 M allocations: 126.233 MiB, 1.11% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.7943     24.1        24.1        0.103       0.0         
2           26.7125     10.2        10.2        0.0803      -0.2        
3           16.5138     5.56        5.56        0.0862      -0.6        
4           10.9494     4.09        4.09        0.15        -1.2        
5           6.85653     1.85        1.85        0.248       -2.0        
6           5.0059      0.362       0.362       0.214       -3.1        
7           4.6436      0.0177      0.0177      0.0672      -4.3        
8           4.62585     1.87e-05    1.87e-05    0.00228     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.625833    

            final grad:   3.64549e-06

            final lambda: 4.4841551e-08

            time / iter:  319   ms

            total time:   2.87  seconds, of which

            derivs:     1.5 %

            back pass:  28.0%

            fwd pass:   8.4 %

            other:      62.1% (graphics etc.)
 =========== end iLQG ===========
 11.535081 seconds (5.55 M allocations: 488.805 MiB, 2.75% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
