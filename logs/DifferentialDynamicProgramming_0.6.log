>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1720.10546875 MB free)
Uptime: 44503.0 sec
Load Avg:  0.9931640625  0.9853515625  1.0341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2873251 s       2124 s     132488 s     814016 s         49 s
#2  3500 MHz     922688 s       4011 s      92994 s    3340455 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 69200.77609022074
==========
Starting box-QP, dimension 500, initial value: 69200.776   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.06282e-12  final value -34.5211      factorizations 15
  3.914575 seconds (1.12 M allocations: 126.054 MiB, 0.72% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.398      20.8        20.8        0.104       0.0         
2           28.5678     9.09        9.09        0.0813      -0.2        
3           19.4805     5.36        5.36        0.0901      -0.6        
4           14.1166     3.77        3.77        0.147       -1.2        
5           10.3474     1.82        1.82        0.228       -2.0        
6           8.52626     0.779       0.779       0.215       -3.1        
7           7.74681     0.0679      0.0679      0.0765      -4.3        
8           7.67893     8.14e-05    8.14e-05    0.00258     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.678844    

            final grad:   3.950199e-06

            final lambda: 4.4841551e-08

            time / iter:  317   ms

            total time:   2.85  seconds, of which

            derivs:     1.8 %

            back pass:  33.7%

            fwd pass:   8.2 %

            other:      56.2% (graphics etc.)
 =========== end iLQG ===========
  8.290498 seconds (4.94 M allocations: 452.871 MiB, 2.24% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
