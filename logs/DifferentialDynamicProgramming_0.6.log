>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1737.08984375 MB free)
Uptime: 42310.0 sec
Load Avg:  1.0068359375  0.99365234375  1.0234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2840724 s       6872 s     132338 s     626648 s         32 s
#2  3500 MHz     785799 s         58 s      82581 s    3285714 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 62977.455880891976
==========
Starting box-QP, dimension 500, initial value: 62977.456   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.15133e-12  final value -23.9562      factorizations 14
  2.886147 seconds (1.16 M allocations: 126.262 MiB, 1.12% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.3668     26.1        26.1        0.117       0.0         
2           24.3096     11.3        11.3        0.089       -0.2        
3           13.0214     4.82        4.82        0.0802      -0.6        
4           8.2049      2.09        2.09        0.0866      -1.2        
5           6.11534     0.75        0.75        0.138       -2.0        
6           5.36521     0.101       0.101       0.136       -3.1        
7           5.26415     0.00443     0.00443     0.0465      -4.3        
8           5.25972     5.46e-06    5.46e-06    0.00184     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.259716    

            final grad:   3.079821e-06

            final lambda: 4.4841551e-08

            time / iter:  302   ms

            total time:   2.72  seconds, of which

            derivs:     1.8 %

            back pass:  28.2%

            fwd pass:   9.1 %

            other:      61.0% (graphics etc.)
 =========== end iLQG ===========
  8.161690 seconds (5.54 M allocations: 488.254 MiB, 2.85% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
