>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1710.98046875 MB free)
Uptime: 44187.0 sec
Load Avg:  0.9970703125  0.98779296875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2789139 s       3713 s     127675 s     891751 s         49 s
#2  3499 MHz     950228 s       2521 s      96443 s    3249305 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 60896.548910302794
==========
Starting box-QP, dimension 500, initial value: 60896.549   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.94468e-12  final value -40.0394      factorizations 17
  3.586151 seconds (1.13 M allocations: 137.265 MiB, 1.01% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.2272     16.5        16.5        0.0863      0.0         
2           33.7381     8.45        8.45        0.0798      -0.2        
3           25.2882     5.5         5.5         0.102       -0.6        
4           19.7907     4.16        4.16        0.149       -1.2        
5           15.626      2.55        2.55        0.231       -2.0        
6           13.0802     0.694       0.694       0.234       -3.1        
7           12.3863     0.0478      0.0478      0.0639      -4.3        
8           12.3384     6.22e-05    6.22e-05    0.00237     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   12.33836    

            final grad:   3.993872e-06

            final lambda: 4.4841551e-08

            time / iter:  267   ms

            total time:   2.40  seconds, of which

            derivs:     2.0 %

            back pass:  27.5%

            fwd pass:   9.7 %

            other:      60.8% (graphics etc.)
 =========== end iLQG ===========
 10.418926 seconds (4.94 M allocations: 452.871 MiB, 2.33% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
