>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1723.984375 MB free)
Uptime: 43242.0 sec
Load Avg:  0.974609375  0.97705078125  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2821378 s       5580 s     138351 s     729415 s         39 s
#2  3499 MHz     837942 s        560 s      79268 s    3319475 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65349.392384354025
==========
Starting box-QP, dimension 500, initial value: 65349.392   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.82356e-12  final value -32.5111      factorizations 16
  4.064989 seconds (1.17 M allocations: 135.568 MiB, 0.85% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.452      23          23          0.107       0.0         
2           26.4288     11.7        11.7        0.0909      -0.2        
3           14.7649     5.38        5.38        0.0894      -0.6        
4           9.3873      2.5         2.5         0.0934      -1.2        
5           6.88462     2.18        2.18        0.21        -2.0        
6           4.70821     1.14        1.14        0.305       -3.1        
7           3.57009     0.0674      0.0674      0.0855      -4.3        
8           3.50272     5.44e-05    5.44e-05    0.00295     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.50267     

            final grad:   4.711991e-06

            final lambda: 4.4841551e-08

            time / iter:  339   ms

            total time:   3.05  seconds, of which

            derivs:     1.5 %

            back pass:  30.4%

            fwd pass:   8.3 %

            other:      59.7% (graphics etc.)
 =========== end iLQG ===========
 11.447308 seconds (5.55 M allocations: 488.805 MiB, 2.72% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
