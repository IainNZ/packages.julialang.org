>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1666.84765625 MB free)
Uptime: 64356.0 sec
Load Avg:  0.97216796875  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    4139730 s         86 s     175712 s    1168603 s         46 s
#2  3515 MHz    1123443 s       7188 s     115434 s    5076431 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.16.4
3 additional packages:
 - Compat                        0.53.0
 - Nullables                     0.0.3
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 60288.58385348281
==========
Starting box-QP, dimension 500, initial value: 60288.584   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.06083e-12  final value -28.87        factorizations 15
  4.939789 seconds (1.13 M allocations: 127.586 MiB, 0.77% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.0351     21.9        21.9        0.101       0.0         
2           28.1219     11.1        11.1        0.0845      -0.2        
3           17.0227     6.32        6.32        0.0925      -0.6        
4           10.7047     2.99        2.99        0.111       -1.2        
5           7.71929     1.49        1.49        0.158       -2.0        
6           6.23207     0.566       0.566       0.199       -3.1        
7           5.66655     0.0442      0.0442      0.065       -4.3        
8           5.62235     5.68e-05    5.68e-05    0.00258     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.622293    

            final grad:   4.248975e-06

            final lambda: 4.4841551e-08

            time / iter:  388   ms

            total time:   3.49  seconds, of which

            derivs:     2.6 %

            back pass:  34.2%

            fwd pass:   7.1 %

            other:      56.1% (graphics etc.)
 =========== end iLQG ===========
 11.668504 seconds (5.99 M allocations: 498.436 MiB, 2.22% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
