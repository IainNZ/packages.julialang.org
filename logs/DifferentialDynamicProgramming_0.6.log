>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1710.97265625 MB free)
Uptime: 43983.0 sec
Load Avg:  1.0068359375  0.9931640625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2800210 s       6066 s     126045 s     858505 s         35 s
#2  3500 MHz     939619 s         74 s      92699 s    3265937 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 66671.02940574253
==========
Starting box-QP, dimension 500, initial value: 66671.029   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 3.0791e-12  final value -30.8307      factorizations 19
  3.263934 seconds (1.13 M allocations: 149.524 MiB, 0.95% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.4401     29.9        29.9        0.128       0.0         
2           20.5184     9.84        9.84        0.0852      -0.2        
3           10.675      4.03        4.03        0.0754      -0.6        
4           6.64254     2.09        2.09        0.0822      -1.2        
5           4.55481     1.01        1.01        0.131       -2.0        
6           3.54011     0.239       0.239       0.144       -3.1        
7           3.30101     0.0147      0.0147      0.0516      -4.3        
8           3.28628     1.8e-05    1.8e-05    0.00207     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.286257    

            final grad:   3.418566e-06

            final lambda: 4.4841551e-08

            time / iter:  348   ms

            total time:   3.13  seconds, of which

            derivs:     2.3 %

            back pass:  29.9%

            fwd pass:   7.4 %

            other:      60.4% (graphics etc.)
 =========== end iLQG ===========
 10.806044 seconds (4.94 M allocations: 452.871 MiB, 2.36% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
