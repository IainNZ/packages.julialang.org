>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1739.55078125 MB free)
Uptime: 43458.0 sec
Load Avg:  0.87109375  0.953125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2831734 s       7958 s     138856 s     729504 s         33 s
#2  3500 MHz     806664 s        160 s      79108 s    3373041 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.1
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 55814.70664136508
==========
Starting box-QP, dimension 500, initial value: 55814.707   
RESULT: Gradient norm smaller than tolerance.
iterations 12  gradient 2.56726e-12  final value -29.1692      factorizations 11
  3.005726 seconds (1.16 M allocations: 109.606 MiB, 0.99% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.0184     25.2        25.2        0.108       0.0         
2           24.7697     11.9        11.9        0.0894      -0.2        
3           12.9168     5.55        5.55        0.0885      -0.6        
4           7.36756     2.62        2.62        0.0964      -1.2        
5           4.74903     1.41        1.41        0.158       -2.0        
6           3.34152     0.506       0.506       0.173       -3.1        
7           2.83592     0.0345      0.0345      0.0641      -4.3        
8           2.8014      3.99e-05    3.99e-05    0.00246     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.801362    

            final grad:   3.904891e-06

            final lambda: 4.4841551e-08

            time / iter:  337   ms

            total time:   3.03  seconds, of which

            derivs:     2.2 %

            back pass:  28.1%

            fwd pass:   7.9 %

            other:      61.7% (graphics etc.)
 =========== end iLQG ===========
 11.770456 seconds (5.54 M allocations: 488.254 MiB, 2.57% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
