>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2144.5078125 MB free)
Uptime: 58030.0 sec
Load Avg:  0.92333984375  1.01220703125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3761940 s       1290 s     167711 s     954187 s         25 s
#2  3499 MHz     844875 s       5653 s      98499 s    4733858 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.16.3
3 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 63393.04388537449
==========
Starting box-QP, dimension 500, initial value: 63393.044   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 3.02089e-12  final value -21.4766      factorizations 16
  3.988319 seconds (1.13 M allocations: 133.957 MiB, 0.82% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1929     29.2        29.2        0.12        0.0         
2           20.9985     10.5        10.5        0.0842      -0.2        
3           10.5068     4.16        4.16        0.0687      -0.6        
4           6.34927     2.64        2.64        0.0849      -1.2        
5           3.70952     1.67        1.67        0.143       -2.0        
6           2.03657     0.449       0.449       0.157       -3.1        
7           1.58767     0.0237      0.0237      0.0576      -4.3        
8           1.564       2.58e-05    2.58e-05    0.00222     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   1.563974    

            final grad:   3.478416e-06

            final lambda: 4.4841551e-08

            time / iter:  367   ms

            total time:   3.30  seconds, of which

            derivs:     2.0 %

            back pass:  32.5%

            fwd pass:   7.2 %

            other:      58.2% (graphics etc.)
 =========== end iLQG ===========
 11.996435 seconds (5.99 M allocations: 498.437 MiB, 2.05% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
