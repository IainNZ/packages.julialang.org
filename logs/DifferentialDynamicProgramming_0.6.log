>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1765.25390625 MB free)
Uptime: 47675.0 sec
Load Avg:  0.9833984375  0.98046875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3067213 s         79 s     137035 s     895511 s         41 s
#2  3499 MHz     980601 s       6182 s      97235 s    3587698 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 57662.01570487038
==========
Starting box-QP, dimension 500, initial value: 57662.016   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 3.20642e-12  final value -45.8095      factorizations 12
  4.772121 seconds (1.12 M allocations: 110.722 MiB, 0.92% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.0734     19.9        19.9        0.0934      0.0         
2           30.167      9.44        9.44        0.0751      -0.2        
3           20.7244     6.47        6.47        0.0923      -0.6        
4           14.252      4.67        4.67        0.158       -1.2        
5           9.58649     2.4         2.4         0.235       -2.0        
6           7.19144     0.768       0.768       0.241       -3.1        
7           6.42349     0.0364      0.0364      0.069       -4.3        
8           6.3871      3.23e-05    3.23e-05    0.00241     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.387065    

            final grad:   3.772351e-06

            final lambda: 4.4841551e-08

            time / iter:  425   ms

            total time:   3.83  seconds, of which

            derivs:     2.4 %

            back pass:  30.4%

            fwd pass:   7.4 %

            other:      59.8% (graphics etc.)
 =========== end iLQG ===========
 13.913185 seconds (6.07 M allocations: 502.839 MiB, 2.39% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
