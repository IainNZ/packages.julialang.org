>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1723.5 MB free)
Uptime: 44030.0 sec
Load Avg:  0.9365234375  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2895572 s       5644 s     127938 s     727390 s         31 s
#2  3499 MHz     824719 s        790 s      92708 s    3387346 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 67705.36549099945
==========
Starting box-QP, dimension 500, initial value: 67705.365   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.19398e-12  final value -24.1884      factorizations 14
  3.626197 seconds (1.12 M allocations: 122.294 MiB, 0.87% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.922      27.8        27.8        0.115       0.0         
2           22.1673     11          11          0.0842      -0.2        
3           11.18       4.47        4.47        0.0723      -0.6        
4           6.71267     2.12        2.12        0.0794      -1.2        
5           4.5929      0.841       0.841       0.13        -2.0        
6           3.75164     0.174       0.174       0.145       -3.1        
7           3.57755     0.0118      0.0118      0.0512      -4.3        
8           3.56571     1.56e-05    1.56e-05    0.00206     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.565694    

            final grad:   3.533746e-06

            final lambda: 4.4841551e-08

            time / iter:  361   ms

            total time:   3.25  seconds, of which

            derivs:     2.3 %

            back pass:  31.4%

            fwd pass:   7.4 %

            other:      58.9% (graphics etc.)
 =========== end iLQG ===========
  9.647926 seconds (4.94 M allocations: 452.872 MiB, 2.37% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
