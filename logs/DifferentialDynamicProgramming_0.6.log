>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1739.52734375 MB free)
Uptime: 44520.0 sec
Load Avg:  0.9970703125  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3513 MHz    2948505 s       1320 s     140324 s     638183 s         12 s
#2  3513 MHz     715959 s       5432 s      85490 s    3550165 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.31.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 66121.76621288394
==========
Starting box-QP, dimension 500, initial value: 66121.766   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.2332e-12  final value -34.1644      factorizations 18
  2.400753 seconds (1.13 M allocations: 144.499 MiB, 1.43% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8239     15.6        15.6        0.0873      0.0         
2           34.2172     10.3        10.3        0.0865      -0.2        
3           23.8813     7.05        7.05        0.108       -0.6        
4           16.8281     4.03        4.03        0.148       -1.2        
5           12.7993     2.55        2.55        0.218       -2.0        
6           10.2492     1.14        1.14        0.28        -3.1        
7           9.1099      0.0856      0.0856      0.0868      -4.3        
8           9.02429     0.000106    0.000106    0.00323     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   9.024188    

            final grad:   5.070637e-06

            final lambda: 4.4841551e-08

            time / iter:  221   ms

            total time:   1.99  seconds, of which

            derivs:     2.4 %

            back pass:  32.1%

            fwd pass:   7.3 %

            other:      58.2% (graphics etc.)
 =========== end iLQG ===========
  8.598455 seconds (6.07 M allocations: 502.839 MiB, 2.38% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
