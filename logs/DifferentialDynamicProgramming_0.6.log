>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1728.8828125 MB free)
Uptime: 44767.0 sec
Load Avg:  1.0029296875  0.9951171875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    2809976 s       5792 s     120567 s     911774 s         28 s
#2  3515 MHz     793297 s         55 s      84582 s    3516450 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 65804.7431541604
==========
Starting box-QP, dimension 500, initial value: 65804.743   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 3.04024e-12  final value -33.278       factorizations 20
  4.308969 seconds (1.15 M allocations: 157.753 MiB, 1.04% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.4846     22.3        22.3        0.106       0.0         
2           27.1496     11.9        11.9        0.0933      -0.2        
3           15.2088     6.48        6.48        0.099       -0.6        
4           8.72647     3.26        3.26        0.106       -1.2        
5           5.46526     1.7         1.7         0.165       -2.0        
6           3.76361     0.43        0.43        0.183       -3.1        
7           3.33373     0.0197      0.0197      0.0581      -4.3        
8           3.31403     1.91e-05    1.91e-05    0.00218     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.314013    

            final grad:   3.433673e-06

            final lambda: 4.4841551e-08

            time / iter:  378   ms

            total time:   3.40  seconds, of which

            derivs:     1.8 %

            back pass:  29.0%

            fwd pass:   6.4 %

            other:      62.9% (graphics etc.)
 =========== end iLQG ===========
 12.203971 seconds (5.78 M allocations: 498.380 MiB, 2.75% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
