>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1746.9140625 MB free)
Uptime: 46166.0 sec
Load Avg:  1.19482421875  1.0400390625  1.0537109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3010044 s       4853 s     141548 s     811838 s         42 s
#2  3500 MHz     956590 s       1641 s     108216 s    3434493 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 62194.27349119276
==========
Starting box-QP, dimension 500, initial value: 62194.273   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.92818e-12  final value -32.0416      factorizations 17
  4.731585 seconds (1.13 M allocations: 139.391 MiB, 1.03% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.2514     17.5        17.5        0.0889      0.0         
2           31.7715     9.67        9.67        0.08        -0.2        
3           22.0988     7.77        7.77        0.113       -0.6        
4           14.3335     4.68        4.68        0.163       -1.2        
5           9.64959     1.51        1.51        0.163       -2.0        
6           8.13713     0.324       0.324       0.168       -3.1        
7           7.81337     0.0184      0.0184      0.056       -4.3        
8           7.79499     2.22e-05    2.22e-05    0.00213     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.794971    

            final grad:   3.52021e-06

            final lambda: 4.4841551e-08

            time / iter:  422   ms

            total time:   3.80  seconds, of which

            derivs:     2.4 %

            back pass:  31.6%

            fwd pass:   6.9 %

            other:      59.1% (graphics etc.)
 =========== end iLQG ===========
 13.428133 seconds (4.94 M allocations: 452.871 MiB, 2.55% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
