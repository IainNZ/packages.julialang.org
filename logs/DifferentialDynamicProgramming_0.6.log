>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1760.37109375 MB free)
Uptime: 47998.0 sec
Load Avg:  1.0498046875  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    3086017 s       6658 s     153138 s     875717 s         39 s
#2  3508 MHz    1010890 s         78 s      84444 s    3607179 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 64309.30220632019
==========
Starting box-QP, dimension 500, initial value: 64309.302   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.1519e-12  final value -32.284       factorizations 14
  4.063464 seconds (1.13 M allocations: 120.963 MiB, 1.12% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.8424     25.8        25.8        0.118       0.0         
2           23.0838     8.74        8.74        0.0756      -0.2        
3           14.3464     5.59        5.59        0.0892      -0.6        
4           8.75447     3.65        3.65        0.136       -1.2        
5           5.10421     1.45        1.45        0.158       -2.0        
6           3.65483     0.279       0.279       0.165       -3.1        
7           3.37616     0.0115      0.0115      0.0528      -4.3        
8           3.36461     1.2e-05    1.2e-05    0.00193     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.364598    

            final grad:   3.186116e-06

            final lambda: 4.4841551e-08

            time / iter:  391   ms

            total time:   3.52  seconds, of which

            derivs:     2.8 %

            back pass:  29.8%

            fwd pass:   6.8 %

            other:      60.5% (graphics etc.)
 =========== end iLQG ===========
 13.949287 seconds (6.07 M allocations: 502.839 MiB, 2.42% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
