>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1731.37109375 MB free)
Uptime: 46807.0 sec
Load Avg:  0.9638671875  0.962890625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3057501 s       2780 s     143988 s     811149 s         32 s
#2  3499 MHz     960235 s       3965 s     111154 s    3500773 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 62892.22046827433
==========
Starting box-QP, dimension 500, initial value: 62892.220   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.83011e-12  final value -23.6157      factorizations 16
  3.453874 seconds (1.12 M allocations: 134.787 MiB, 0.96% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1194     15.2        15.2        0.0852      0.0         
2           34.8916     10.9        10.9        0.0881      -0.2        
3           23.9662     8.63        8.63        0.119       -0.6        
4           15.3331     5.25        5.25        0.176       -1.2        
5           10.0795     1.6         1.6         0.194       -2.0        
6           8.47792     0.22        0.22        0.18        -3.1        
7           8.25794     0.00748     0.00748     0.0553      -4.3        
8           8.25046     6.17e-06    6.17e-06    0.00196     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   8.250454    

            final grad:   3.150787e-06

            final lambda: 4.4841551e-08

            time / iter:  231   ms

            total time:   2.08  seconds, of which

            derivs:     2.2 %

            back pass:  30.6%

            fwd pass:   8.1 %

            other:      59.1% (graphics etc.)
 =========== end iLQG ===========
  9.222252 seconds (4.94 M allocations: 452.871 MiB, 2.87% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
