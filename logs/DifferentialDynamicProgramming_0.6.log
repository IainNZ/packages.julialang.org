>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2200.765625 MB free)
Uptime: 43712.0 sec
Load Avg:  1.0029296875  1.0146484375  1.04296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2898191 s         90 s     119311 s     777174 s         32 s
#2  3500 MHz     836441 s       5792 s      92550 s    3342649 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 69062.77727454348
==========
Starting box-QP, dimension 500, initial value: 69062.777   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.22229e-12  final value -30.9343      factorizations 17
  3.819503 seconds (1.17 M allocations: 140.539 MiB, 1.05% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1821     22          22          0.102       0.0         
2           28.2163     11.4        11.4        0.0854      -0.2        
3           16.7947     6.11        6.11        0.0875      -0.6        
4           10.6884     3.21        3.21        0.107       -1.2        
5           7.47408     1.62        1.62        0.175       -2.0        
6           5.85066     0.426       0.426       0.194       -3.1        
7           5.42433     0.0265      0.0265      0.0652      -4.3        
8           5.39779     2.81e-05    2.81e-05    0.00238     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.397758    

            final grad:   3.659865e-06

            final lambda: 4.4841551e-08

            time / iter:  325   ms

            total time:   2.92  seconds, of which

            derivs:     2.7 %

            back pass:  33.9%

            fwd pass:   8.7 %

            other:      54.7% (graphics etc.)
 =========== end iLQG ===========
 10.672424 seconds (5.54 M allocations: 488.254 MiB, 2.61% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
