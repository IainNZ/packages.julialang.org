>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1718.55078125 MB free)
Uptime: 43846.0 sec
Load Avg:  0.91796875  0.923828125  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2858790 s       7087 s     123051 s     768031 s         35 s
#2  3500 MHz     854236 s         97 s      94469 s    3330658 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 57164.0941918694
==========
Starting box-QP, dimension 500, initial value: 57164.094   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.74766e-12  final value -31.8422      factorizations 17
  3.697739 seconds (1.15 M allocations: 140.510 MiB, 1.01% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1137     18.1        18.1        0.0945      0.0         
2           32.0024     11.7        11.7        0.092       -0.2        
3           20.2693     7.57        7.57        0.108       -0.6        
4           12.6948     3.76        3.76        0.128       -1.2        
5           8.9379      1.41        1.41        0.163       -2.0        
6           7.53224     0.305       0.305       0.194       -3.1        
7           7.22746     0.022       0.022       0.0637      -4.3        
8           7.20543     2.96e-05    2.96e-05    0.00233     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.205399    

            final grad:   3.833149e-06

            final lambda: 4.4841551e-08

            time / iter:  244   ms

            total time:   2.19  seconds, of which

            derivs:     2.6 %

            back pass:  37.0%

            fwd pass:   6.4 %

            other:      54.0% (graphics etc.)
 =========== end iLQG ===========
  9.885975 seconds (5.76 M allocations: 497.830 MiB, 2.62% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
