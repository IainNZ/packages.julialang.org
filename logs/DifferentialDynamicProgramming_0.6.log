>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (2129.23828125 MB free)
Uptime: 60752.0 sec
Load Avg:  0.99951171875  0.982421875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3789899 s       7788 s     170542 s    1189725 s         29 s
#2  3499 MHz     939964 s        101 s     102088 s    4931192 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.16.4
3 additional packages:
 - Compat                        0.48.0
 - Nullables                     0.0.3
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 68089.29689219767
==========
Starting box-QP, dimension 500, initial value: 68089.297   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 2.88094e-12  final value -23.8191      factorizations 14
  3.754198 seconds (1.13 M allocations: 123.279 MiB, 0.92% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.1779     27.8        27.8        0.115       0.0         
2           23.333      10.7        10.7        0.083       -0.2        
3           12.6448     4.3         4.3         0.0702      -0.6        
4           8.34245     2.39        2.39        0.0799      -1.2        
5           5.94876     1.48        1.48        0.146       -2.0        
6           4.47258     0.473       0.473       0.168       -3.1        
7           3.99985     0.0285      0.0285      0.0587      -4.3        
8           3.97131     3.25e-05    3.25e-05    0.00222     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.971281    

            final grad:   3.632805e-06

            final lambda: 4.4841551e-08

            time / iter:  329   ms

            total time:   2.97  seconds, of which

            derivs:     2.7 %

            back pass:  32.0%

            fwd pass:   8.1 %

            other:      57.2% (graphics etc.)
 =========== end iLQG ===========
 12.200005 seconds (5.99 M allocations: 498.437 MiB, 1.74% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
