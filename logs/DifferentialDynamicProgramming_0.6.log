>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2000.52734375 MB free)
Uptime: 66887.0 sec
Load Avg:  0.9228515625  0.998046875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4222438 s         77 s     297766 s    1150331 s         11 s
#2  3500 MHz     996510 s       4278 s     145939 s    5417574 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.69.0
 - Nullables                     0.0.5
 - Requires                      0.4.4
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 59986.27681090796
==========
Starting box-QP, dimension 500, initial value: 59986.277   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.61943e-12  final value -21.8808      factorizations 13
  2.694143 seconds (1.13 M allocations: 119.024 MiB, 1.01% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8755     21.6        21.6        0.104       0.0         
2           28.2943     11.5        11.5        0.0906      -0.2        
3           16.8137     6.6         6.6         0.0977      -0.6        
4           10.2149     3.73        3.73        0.124       -1.2        
5           6.48795     1.63        1.63        0.169       -2.0        
6           4.86187     0.315       0.315       0.161       -3.1        
7           4.54668     0.0138      0.0138      0.0505      -4.3        
8           4.53285     1.56e-05    1.56e-05    0.00197     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.532836    

            final grad:   3.362529e-06

            final lambda: 4.4841551e-08

            time / iter:  285   ms

            total time:   2.57  seconds, of which

            derivs:     2.3 %

            back pass:  37.9%

            fwd pass:   6.7 %

            other:      53.0% (graphics etc.)
 =========== end iLQG ===========
 11.036575 seconds (5.99 M allocations: 500.604 MiB, 2.34% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
