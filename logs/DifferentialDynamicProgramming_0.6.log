>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1740.21875 MB free)
Uptime: 45069.0 sec
Load Avg:  1.0546875  0.9814453125  1.02783203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz    2804708 s       3203 s     125222 s     952846 s         31 s
#2  3506 MHz     810558 s       3574 s      92904 s    3513090 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 68725.39965429243
==========
Starting box-QP, dimension 500, initial value: 68725.400   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.1289e-12  final value -39.9567      factorizations 13
  3.555673 seconds (1.14 M allocations: 118.875 MiB, 1.16% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.3108     27          27          0.112       0.0         
2           23.3353     12.5        12.5        0.0897      -0.2        
3           10.8613     5.56        5.56        0.0834      -0.6        
4           5.299       2.32        2.32        0.0793      -1.2        
5           2.97835     0.812       0.812       0.125       -2.0        
6           2.16675     0.121       0.121       0.135       -3.1        
7           2.0461      0.00562     0.00562     0.0482      -4.3        
8           2.04048     7.1e-06    7.1e-06    0.00196     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.040469    

            final grad:   3.365733e-06

            final lambda: 4.4841551e-08

            time / iter:  332   ms

            total time:   2.99  seconds, of which

            derivs:     2.2 %

            back pass:  31.1%

            fwd pass:   8.5 %

            other:      58.2% (graphics etc.)
 =========== end iLQG ===========
 10.489246 seconds (5.76 M allocations: 497.830 MiB, 2.79% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
