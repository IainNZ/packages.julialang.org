>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.2.0
INFO: Installing Requires v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1758.47265625 MB free)
Uptime: 48410.0 sec
Load Avg:  0.91455078125  0.94921875  1.01806640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3119535 s       3747 s     155427 s     860415 s         56 s
#2  3499 MHz     978757 s       3117 s      85746 s    3662563 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.2.0
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - Requires                      0.4.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
value = (x' * g + 0.5 * x' * H * x)[1] = 59893.48811941304
==========
Starting box-QP, dimension 500, initial value: 59893.488   
RESULT: Gradient norm smaller than tolerance.
iterations 25  gradient 2.98903e-12  final value -39.5344      factorizations 24
  4.368302 seconds (1.14 M allocations: 176.740 MiB, 1.17% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.8007     19.2        19.2        0.0971      0.0         
2           29.6337     10.1        10.1        0.0838      -0.2        
3           19.5237     6.51        6.51        0.097       -0.6        
4           13.0145     3.92        3.92        0.131       -1.2        
5           9.09157     2.33        2.33        0.179       -2.0        
6           6.76382     1.1         1.1         0.243       -3.1        
7           5.66475     0.0835      0.0835      0.0804      -4.3        
8           5.58129     0.000102    0.000102    0.00314     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.581187    

            final grad:   4.976483e-06

            final lambda: 4.4841551e-08

            time / iter:  390   ms

            total time:   3.51  seconds, of which

            derivs:     2.4 %

            back pass:  32.1%

            fwd pass:   5.7 %

            other:      59.8% (graphics etc.)
 =========== end iLQG ===========
 13.864936 seconds (6.07 M allocations: 502.839 MiB, 2.33% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
