>>> 'Pkg.add("Vectorize")' log
[ Info: Cloning cache of Vectorize from https://github.com/rprechelt/Vectorize.jl.git
[ Info: Installing Vectorize v0.0.1
[ Info: Building Vectorize
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Error: ------------------------------------------------------------
│ # Build failed for Vectorize
│   exception =
│    LoadError: syntax: invalid escape sequence
│    Stacktrace:
│     [1] include at ./boot.jl:292 [inlined]
│     [2] include_relative(::Module, ::String) at ./loading.jl:1011
│     [3] include at ./sysimg.jl:26 [inlined]
│     [4] include(::String) at ./loading.jl:1045
│     [5] top-level scope
│     [6] eval at ./boot.jl:295 [inlined]
│     [7] eval at ./sysimg.jl:71 [inlined]
│     [8] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [9] #2 at ./none:14 [inlined]
│     [10] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [11] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:13
│     [12] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [13] top-level scope
│     [14] eval at ./boot.jl:295 [inlined]
│     [15] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [16] process_options(::Base.JLOptions) at ./client.jl:311
│     [17] _start() at ./client.jl:386
│    in expression starting at /home/vagrant/.julia/v0.7/Vectorize/deps/build.jl:18
└ @ Main none:17
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ Vectorize had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("Vectorize")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:649
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Vectorize
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Vectorize")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4854734 s       6740 s     240124 s    1475818 s         89 s
       #2  3500 MHz    1221644 s         94 s      98069 s    6258335 s          2 s
       
  Memory: 2.93927001953125 GB (1194.82421875 MB free)
  Uptime: 77064.0 sec
  Load Avg:  1.02099609375  1.02197265625  0.97607421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Vectorize                     0.0.1              74eee46d (dirty)
3 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - tmpoFILxC                     0.0.0-             non-repo (unregistered)
[ Info: Testing Vectorize
WARNING: importing deprecated binding Base.Libdl into Vectorize.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead.
  likely near /home/vagrant/.julia/v0.7/Vectorize/src/Vectorize.jl:49
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Libdl is deprecated, run `using Libdl` instead.
  likely near /home/vagrant/.julia/v0.7/Vectorize/src/Vectorize.jl:74
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl:3
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
Accelerate not present. Aborting Accelerate tests
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:4
===== Testing Yeppp!  =====
ERROR: LoadError: LoadError: Base.srand has been moved to the standard library package Random.
Restart Julia and then run `using Random` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #srand#915(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
 [3] srand(::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
 [4] top-level scope
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] include(::String) at ./sysimg.jl:65
 [9] top-level scope
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1011
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:334
 [14] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:14
in expression starting at /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl:17
┌ Error: ------------------------------------------------------------
│ # Testing failed for Vectorize
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: No packages to install, update or remove
ERROR: Vectorize had test errors

>>> End of log
