>>> 'Pkg.add("Vectorize")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Vectorize from https://github.com/rprechelt/Vectorize.jl.git
[ Info: Installing Vectorize v0.0.1
[ Info: Building Vectorize
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Error: ------------------------------------------------------------
│ # Build failed for Vectorize
│   exception =
│    LoadError: syntax: invalid escape sequence
│    Stacktrace:
│     [1] include at ./boot.jl:305 [inlined]
│     [2] include_relative(::Module, ::String) at ./loading.jl:1066
│     [3] include at ./sysimg.jl:29 [inlined]
│     [4] include(::String) at ./loading.jl:1100
│     [5] top-level scope
│     [6] eval at ./boot.jl:308 [inlined]
│     [7] eval at ./sysimg.jl:74 [inlined]
│     [8] evalfile(::String, ::Array{String,1}) at ./loading.jl:1095 (repeats 2 times)
│     [9] #6 at ./none:13 [inlined]
│     [10] cd(::getfield(, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [11] (::getfield(, Symbol("##5#7")))(::IOStream) at ./none:12
│     [12] #open#318(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [13] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [14] top-level scope
│     [15] eval at ./boot.jl:308 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [17] exec_options(::Base.JLOptions) at ./client.jl:309
│     [18] _start() at ./client.jl:448
│    in expression starting at /home/vagrant/.julia/v0.7/Vectorize/deps/build.jl:18
└ @ Main none:16
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ Vectorize had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("Vectorize")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Vectorize
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Vectorize")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4419
Commit 23453713d4 (2018-02-28 05:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4204625 s        140 s     230270 s    1290049 s        100 s
       #2  3500 MHz     944855 s       7068 s      87336 s    5520484 s          3 s
       
  Memory: 2.93927001953125 GB (1076.73046875 MB free)
  Uptime: 66861.0 sec
  Load Avg:  1.0625  1.03125  0.97607421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - Vectorize                     0.0.1              74eee46d (dirty)
3 additional packages:
 - Compat                        0.55.1
 - Nullables                     0.0.3
 - tmp8qwDoB                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Vectorize
WARNING: importing deprecated binding Base.Libdl into Vectorize.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Vectorize/src/Vectorize.jl:49
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Vectorize/src/Vectorize.jl:74
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl:3
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
Accelerate not present. Aborting Accelerate tests
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:4
===== Testing Yeppp!  =====
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:14
Yeppp: Integer Operations::Int8: Error During Test at /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:18
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching round(::Type{Int8}, ::Array{Float64,1})
  Closest candidates are:
    round(::Any, ::Any, !Matched::Any) at deprecated.jl:55
    round(::Type{T<:Integer}, !Matched::Integer) where T<:Integer at int.jl:524
    round(::Type{T<:Integer}, !Matched::Float16) where T<:Integer at float.jl:356
    ...
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:19 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] top-level scope at ./<missing>:19
   [4] include at ./boot.jl:305 [inlined]
   [5] include_relative(::Module, ::String) at ./loading.jl:1066
   [6] include(::Module, ::String) at ./sysimg.jl:29
   [7] include(::String) at ./sysimg.jl:68
   [8] top-level scope
   [9] include at ./boot.jl:305 [inlined]
   [10] include_relative(::Module, ::String) at ./loading.jl:1066
   [11] include(::Module, ::String) at ./sysimg.jl:29
   [12] exec_options(::Base.JLOptions) at ./client.jl:332
   [13] _start() at ./client.jl:448
Test Summary:                   | Error  Total
Yeppp: Integer Operations::Int8 |     1      1
ERROR: LoadError: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/Vectorize/test/YepppTests.jl:17
in expression starting at /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl:17
┌ Error: ------------------------------------------------------------
│ # Testing failed for Vectorize
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Vectorize/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:308 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
[ Info: No packages to install, update or remove
ERROR: Vectorize had test errors

>>> End of log
