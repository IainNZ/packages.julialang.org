>>> 'Pkg.add("CoupledFields")' log
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CoupledFields v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CoupledFields
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CoupledFields")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz    2329839 s         97 s     119465 s     663479 s         22 s
       #2  3503 MHz     496306 s         77 s      52458 s    3060015 s          0 s
       
  Memory: 2.93927001953125 GB (822.734375 MB free)
  Uptime: 36798.0 sec
  Load Avg:  0.978515625  0.9765625  0.98974609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CoupledFields                 0.0.1
 - JSON                          0.16.3
9 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.42.0
 - DataStructures                0.7.4
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
[ Info: Testing CoupledFields @ Base.Pkg.Entry entry.jl:723
[ Warning: Replacing module `Compat` @ Base loading.jl:350
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
[ Warning: Replacing module `DataStructures` @ Base loading.jl:350
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:23.
│ Use `mutable struct` instead.
└ @ nothing CoupledFields.jl:23
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:52.
│ Use `mutable struct` instead.
└ @ nothing CoupledFields.jl:52
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:78.
│ Use `mutable struct` instead.
└ @ nothing CoupledFields.jl:78
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:95.
│ Use `mutable struct` instead.
└ @ nothing CoupledFields.jl:95
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:43.
│ Use `struct` instead.
└ @ nothing MLKernels.jl:43
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:75.
│ Use `struct` instead.
└ @ nothing MLKernels.jl:75
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:91.
│ Use `struct` instead.
└ @ nothing MLKernels.jl:91
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:120.
│ Use `struct` instead.
└ @ nothing MLKernels.jl:120
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::SeparableKernel{T}, x::T, y::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:34.
│ Use `phi(κ::SeparableKernel{T}, x::T, y::T) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:34
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SquaredDistanceKernel{T, CASE}}){T, CASE}(t::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:46.
│ Use `(::Type{SquaredDistanceKernel{T, CASE}})(t::T) where {T, CASE}` instead.
└ @ nothing MLKernels.jl:46
┌ Warning: Deprecated syntax `parametric method syntax SquaredDistanceKernel{T <: AbstractFloat}(t::T = 1.0)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:52.
│ Use `SquaredDistanceKernel(t::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:52
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::SquaredDistanceKernel{T, :t1}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:65.
│ Use `phi(κ::SquaredDistanceKernel{T, :t1}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:65
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::SquaredDistanceKernel{T, :t0p5}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:66.
│ Use `phi(κ::SquaredDistanceKernel{T, :t0p5}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:66
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::SquaredDistanceKernel{T}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:67.
│ Use `phi(κ::SquaredDistanceKernel{T}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:67
┌ Warning: Deprecated syntax `parametric method syntax convert{T <: AbstractFloat}(::Type{ScalarProductKernel{T}}, κ::ScalarProductKernel)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:80.
│ Use `convert(#unused#::Type{ScalarProductKernel{T}}, κ::ScalarProductKernel) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:80
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::ScalarProductKernel{T}, x::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:82.
│ Use `phi(κ::ScalarProductKernel{T}, x::T) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:82
┌ Warning: Deprecated syntax `parametric method syntax convert{T <: AbstractFloat}(::Type{Kernel{T}}, κ::ScalarProductKernel)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:84.
│ Use `convert(#unused#::Type{Kernel{T}}, κ::ScalarProductKernel) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:84
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PolynomialKernel{T, CASE}}){T, CASE}(κ::BaseKernel{T}, α::T, c::T, d::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:97.
│ Use `(::Type{PolynomialKernel{T, CASE}})(κ::BaseKernel{T}, α::T, c::T, d::T) where {T, CASE}` instead.
└ @ nothing MLKernels.jl:97
┌ Warning: Deprecated syntax `parametric method syntax PolynomialKernel{T <: AbstractFloat}(κ::BaseKernel{T}, α::T = one(T), c::T = one(T), d::T = convert(T, 2))` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:108.
│ Use `PolynomialKernel(κ::BaseKernel{T}, α::T = one(T), c::T = one(T), d::T = convert(T, 2)) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:108
┌ Warning: Deprecated syntax `parametric method syntax PolynomialKernel{T <: AbstractFloat}(α::T = 1.0, c::T = one(T), d::T = convert(T, 2))` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:109.
│ Use `PolynomialKernel(α::T = 1.0, c::T = one(T), d::T = convert(T, 2)) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:109
┌ Warning: Deprecated syntax `parametric method syntax LinearKernel{T <: AbstractFloat}(α::T = 1.0, c::T = one(T))` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:110.
│ Use `LinearKernel(α::T = 1.0, c::T = one(T)) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:110
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::PolynomialKernel{T}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:112.
│ Use `phi(κ::PolynomialKernel{T}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:112
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::PolynomialKernel{T, :d1}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:113.
│ Use `phi(κ::PolynomialKernel{T, :d1}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:113
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ExponentialKernel{T, CASE}}){T, CASE}(κ::BaseKernel{T}, α::T, γ::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:125.
│ Use `(::Type{ExponentialKernel{T, CASE}})(κ::BaseKernel{T}, α::T, γ::T) where {T, CASE}` instead.
└ @ nothing MLKernels.jl:125
┌ Warning: Deprecated syntax `parametric method syntax ExponentialKernel{T <: AbstractFloat}(κ::BaseKernel{T}, α::T = one(T), γ::T = one(T))` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:135.
│ Use `ExponentialKernel(κ::BaseKernel{T}, α::T = one(T), γ::T = one(T)) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:135
┌ Warning: Deprecated syntax `parametric method syntax ExponentialKernel{T <: AbstractFloat}(α::T = 1.0, γ::T = one(T))` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:136.
│ Use `ExponentialKernel(α::T = 1.0, γ::T = one(T)) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:136
┌ Warning: Deprecated syntax `parametric method syntax GaussianKernel{T <: AbstractFloat}(α::T = 1.0)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:138.
│ Use `GaussianKernel(α::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:138
┌ Warning: Deprecated syntax `parametric method syntax RadialBasisKernel{T <: AbstractFloat}(α::T = 1.0)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:139.
│ Use `RadialBasisKernel(α::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:139
┌ Warning: Deprecated syntax `parametric method syntax LaplacianKernel{T <: AbstractFloat}(α::T = 1.0)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:140.
│ Use `LaplacianKernel(α::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:140
┌ Warning: Deprecated syntax `parametric method syntax convert{T <: AbstractFloat}(::Type{ExponentialKernel{T}}, κ::ExponentialKernel)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:144.
│ Use `convert(#unused#::Type{ExponentialKernel{T}}, κ::ExponentialKernel) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:144
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::ExponentialKernel{T}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:147.
│ Use `phi(κ::ExponentialKernel{T}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:147
┌ Warning: Deprecated syntax `parametric method syntax phi{T <: AbstractFloat}(κ::ExponentialKernel{T, :γ1}, x::Vector{T}, y::Vector{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:148.
│ Use `phi(κ::ExponentialKernel{T, :γ1}, x::Vector{T}, y::Vector{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:148
┌ Warning: Deprecated syntax `parametric method syntax init_pairwise{T <: AbstractFloat}(X::Matrix{T}, Y::Matrix{T}, is_trans::Bool)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:156.
│ Use `init_pairwise(X::Matrix{T}, Y::Matrix{T}, is_trans::Bool) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:156
┌ Warning: Deprecated syntax `parametric method syntax kernelmatrix{T <: AbstractFloat}(κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool = false)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:164.
│ Use `kernelmatrix(κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool = false) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:164
┌ Warning: Deprecated syntax `parametric method syntax kernelmatrix!{T <: AbstractFloat}(K::Matrix{T}, κ::BaseKernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:173.
│ Use `kernelmatrix!(K::Matrix{T}, κ::BaseKernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:173
┌ Warning: Deprecated syntax `parametric method syntax kernelmatrix!{T <: AbstractFloat}(K::Matrix{T}, κ::CompositeKernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:177.
│ Use `kernelmatrix!(K::Matrix{T}, κ::CompositeKernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:177
┌ Warning: Deprecated syntax `parametric method syntax init_pairwise{T <: AbstractFloat}(X::Matrix{T}, is_trans::Bool)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:188.
│ Use `init_pairwise(X::Matrix{T}, is_trans::Bool) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:188
┌ Warning: Deprecated syntax `parametric method syntax pairwise!{T <: AbstractFloat}(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool)` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:195.
│ Use `pairwise!(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}, is_trans::Bool) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:195
┌ Warning: Deprecated syntax `parametric method syntax pairwise_XY!{T <: AbstractFloat}(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:205.
│ Use `pairwise_XY!(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:205
┌ Warning: Deprecated syntax `parametric method syntax pairwise_XtYt!{T <: AbstractFloat}(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T})` around /home/vagrant/.julia/v0.7/CoupledFields/src/MLKernels.jl:219.
│ Use `pairwise_XtYt!(K::Matrix{T}, κ::Kernel{T}, X::Matrix{T}, Y::Matrix{T}) where T <: AbstractFloat` instead.
└ @ nothing MLKernels.jl:219
┌ Warning: Deprecated syntax `parametric method syntax Kf{T <: Float64}(par::Array{T}, X::Matrix{T}, kpars::GaussianKP)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:36.
│ Use `Kf(par::Array{T}, X::Matrix{T}, kpars::GaussianKP) where T <: Float64` instead.
└ @ nothing CoupledFields.jl:36
┌ Warning: Deprecated syntax `parametric method syntax ∇Kf{T <: Float64}(par::Array{T}, X::Matrix{T}, kpars::GaussianKP)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:41.
│ Use `∇Kf(par::Array{T}, X::Matrix{T}, kpars::GaussianKP) where T <: Float64` instead.
└ @ nothing CoupledFields.jl:41
┌ Warning: Deprecated syntax `parametric method syntax Kf{T <: Float64}(par::Array{T}, X::Matrix{T}, kpars::PolynomialKP)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:62.
│ Use `Kf(par::Array{T}, X::Matrix{T}, kpars::PolynomialKP) where T <: Float64` instead.
└ @ nothing CoupledFields.jl:62
┌ Warning: Deprecated syntax `parametric method syntax ∇Kf{T <: Float64}(par::Array{T}, X::Matrix{T}, kpars::PolynomialKP)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:66.
│ Use `∇Kf(par::Array{T}, X::Matrix{T}, kpars::PolynomialKP) where T <: Float64` instead.
└ @ nothing CoupledFields.jl:66
┌ Warning: Deprecated syntax `parametric method syntax InputSpace{T <: Matrix{Float64}}(a::T, b::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:99.
│ Use `InputSpace(a::T, b::T) where T <: Matrix{Float64}` instead.
└ @ nothing CoupledFields.jl:99
┌ Warning: Deprecated syntax `parametric method syntax InputSpace{T <: Matrix{Float64}}(a::T, b::T, d::Vector{Float64})` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:102.
│ Use `InputSpace(a::T, b::T, d::Vector{Float64}) where T <: Matrix{Float64}` instead.
└ @ nothing CoupledFields.jl:102
┌ Warning: Deprecated syntax `parametric method syntax InputSpace{T <: Matrix{Float64}, V <: Vector{Float64}}(a::T, b::T, d::V, lat::V)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:105.
│ Use `InputSpace(a::T, b::T, d::V, lat::V) where {T <: Matrix{Float64}, V <: Vector{Float64}}` instead.
└ @ nothing CoupledFields.jl:105
┌ Warning: Deprecated syntax `parametric method syntax gradvecfield{N <: Float64, T <: Matrix{Float64}}(par::Array{N}, X::T, Y::T, kpars::KernelParameters)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:116.
│ Use `gradvecfield(par::Array{N}, X::T, Y::T, kpars::KernelParameters) where {N <: Float64, T <: Matrix{Float64}}` instead.
└ @ nothing CoupledFields.jl:116
┌ Warning: Deprecated syntax `parametric method syntax cca{T <: Matrix{Float64}}(v::Array{Float64}, X::T, Y::T)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:149.
│ Use `cca(v::Array{Float64}, X::T, Y::T) where T <: Matrix{Float64}` instead.
└ @ nothing CoupledFields.jl:149
┌ Warning: Deprecated syntax `parametric method syntax cca{T <: Matrix{Float64}}(v::Array{Float64}, X::T, Y::T, kpars::KernelParameters)` around /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:171.
│ Use `cca(v::Array{Float64}, X::T, Y::T, kpars::KernelParameters) where T <: Matrix{Float64}` instead.
└ @ nothing CoupledFields.jl:171
WARNING: importing deprecated binding Base.@printf into CoupledFields.
ERROR: LoadError: LoadError: LoadError: LoadError: Base.@printf has been moved to the standard library package Printf.
Restart Julia and then run `using Printf` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #@printf#925(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::LineNumberNode, ::Vararg{Any,N} where N) at ./deprecated.jl:138
 [3] @printf(::Vararg{Any,N} where N) at ./deprecated.jl:138
 [4] #macroexpand#37 at ./expr.jl:75 [inlined]
 [5] macroexpand at ./expr.jl:74 [inlined]
 [6] docm(::LineNumberNode, ::Module, ::String, ::Expr, ::Bool) at ./docs/Docs.jl:657 (repeats 2 times)
 [7] @doc(::LineNumberNode, ::Module, ::String, ::Vararg{Any,N} where N) at ./boot.jl:411
 [8] include at ./boot.jl:295 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] _require(::Symbol) at ./loading.jl:453
 [11] require(::Symbol) at ./loading.jl:333
 [12] include at ./boot.jl:295 [inlined]
 [13] include_relative(::Module, ::String) at ./loading.jl:521
 [14] include(::Module, ::String) at ./sysimg.jl:26
 [15] process_options(::Base.JLOptions) at ./client.jl:323
 [16] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:259
in expression starting at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:221
in expression starting at /home/vagrant/.julia/v0.7/CoupledFields/src/CoupledFields.jl:221
in expression starting at /home/vagrant/.julia/v0.7/CoupledFields/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for CoupledFields
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CoupledFields/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: CoupledFields had test errors

>>> End of log
