>>> 'Pkg.add("Lens")' log
INFO: Cloning cache of Docile from https://github.com/MichaelHatherly/Docile.jl.git
INFO: Cloning cache of Lens from https://github.com/zenna/Lens.jl.git
INFO: Installing Docile v0.5.23
INFO: Installing Lens v0.0.3
INFO: Package database updated

>>> 'Pkg.test("Lens")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (595.40625 MB free)
Uptime: 2531.0 sec
Load Avg:  0.8818359375  1.00537109375  0.89013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     112785 s         48 s      14223 s     106057 s          5 s
#2  3500 MHz      29337 s         92 s       5916 s     213685 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - Lens                          0.0.3
2 additional packages:
 - Compat                        0.26.0
 - Docile                        0.5.23
INFO: Testing Lens
Running tests:
 * capture.jl

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Uncaught exception trickled down to capture:
MethodError(Lens.getindex,((:x,10),2))
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect(::Base.Generator{UnitRange{Int64},Lens.##6#7{Tuple{Int64}}}) at ./array.jl:307
 in lens(::Symbol, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/Lens/src/listener.jl:45
 in #capture#15(::Bool, ::Function, ::#f, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:81
 in capture(::Function, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:61
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/Lens/test/runtests.jl:8 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Lens/test/capture.jl, in expression starting on line 14
ERROR: LoadError: LoadError: MethodError: no method matching getindex(::Tuple{Int64}, ::Int64)
you may have intended to import Base.getindex
 in collect(::Base.Generator{UnitRange{Int64},Lens.##6#7{Tuple{Int64}}}) at ./array.jl:307
 in lens(::Symbol, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/Lens/src/listener.jl:45
 in #capture#15(::Bool, ::Function, ::#f, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:81
 in capture(::Function, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:61
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/Lens/test/runtests.jl:8 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Lens/test/capture.jl, in expression starting on line 14
while loading /home/vagrant/.julia/v0.5/Lens/test/runtests.jl, in expression starting on line 5
================================[ ERROR: Lens ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Lens/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Lens had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
