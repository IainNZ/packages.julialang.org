>>> 'Pkg.add("MultivariatePolynomials")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing MultivariatePolynomials v0.1.4
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MultivariatePolynomials
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MultivariatePolynomials")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4941
Commit 9f5351c36a (2018-04-24 14:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3496 MHz    4711626 s       2508 s     338144 s    1314813 s         74 s
       #2  3496 MHz    1105289 s       4886 s     129328 s    6097711 s          2 s
       
  Memory: 2.939197540283203 GB (794.95703125 MB free)
  Uptime: 74929.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.97802734375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - MultivariatePolynomials       0.1.4
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for MultivariatePolynomials...
[ Info: Cloning cache of TypedPolynomials from https://github.com/JuliaAlgebra/TypedPolynomials.jl.git
[ Info: Installing BenchmarkTools v0.2.5
[ Info: Installing MacroTools v0.4.0
[ Info: Installing TypedPolynomials v0.0.1
[ Info: Testing MultivariatePolynomials
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = istb(::Symbol) at types.jl:7
└ @ MacroTools types.jl:7
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = tbnew(::Symbol) at types.jl:17
└ @ MacroTools types.jl:17
Test Summary: | Pass  Total
zip tests     |    9      9
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
Test Summary: | Pass  Total
Variable      |   44     44
WARNING: importing deprecated binding Base.uninitialized into Sequences.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/monomial.jl:2
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
Test Summary: | Pass  Total
Monomial      |   57     57
Test Summary: | Pass  Total
Term          |   60     60
Test Summary:   | Pass  Total
Monomial Vector |   42     42
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
┌ Warning: `round(x::Number, digits)` is deprecated, use `round(x; digits=digits)` instead.
│   caller = round at polynomial.jl:371 [inlined]
└ @ Core polynomial.jl:371
┌ Warning: `round(x::Number, digits)` is deprecated, use `round(x; digits=digits)` instead.
│   caller = round(::TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}}, ::Int64) at polynomial.jl:371
└ @ MultivariatePolynomials polynomial.jl:371
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
Test Summary: | Pass  Total
Polynomial    |  116    116
Test Summary: | Pass  Total
RationalPoly  |   16     16
Test Summary: | Pass  Total
Promotion     |   16     16
Test Summary: | Pass  Total
Hashing       |   15     15
Test Summary:      | Pass  Total
Norm of polynomial |    4      4
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x,),1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:3 [inlined]
└ @ Core algebra.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:3 [inlined]
└ @ Core algebra.jl:3
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:6 [inlined]
└ @ Core algebra.jl:6
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Polynomial{Int64,TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x,),1}},Array{TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x,),1}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:6 [inlined]
└ @ Core algebra.jl:6
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Polynomial{Int64,TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:7 [inlined]
└ @ Core algebra.jl:7
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/algebra.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
Test Summary: | Pass  Total
Algebra       |   25     25
Test Summary: | Pass  Total
Comparison    |   71     71
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
Test Summary: | Pass  Total
Substitution  |   23     23
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at differentiation.jl:4 [inlined]
└ @ Core differentiation.jl:4
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::TypedPolynomials.Polynomial{Int64,TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x,),1}},Array{TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x,),1}},1}}, ::TypedPolynomials.Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::TypedPolynomials.Polynomial{Int64,TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},1}}, ::TypedPolynomials.Variable{:x}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::TypedPolynomials.Polynomial{Int64,TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Int64,TypedPolynomials.Monomial{(x, y),2}},1}}, ::TypedPolynomials.Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: DomainError now supports arguments, use `DomainError(value)` or `DomainError(value, msg)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::TypedPolynomials.Polynomial{Float64,TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},1}}, ::TypedPolynomials.Variable{:x}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::TypedPolynomials.Polynomial{Float64,TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},1}}, ::TypedPolynomials.Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
Test Summary:   | Pass  Total
Differentiation |   28     28
Test Summary: | Pass  Total
Division      |   41     41
Test Summary: | Pass  Total
Show          |   24     24
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::TypedPolynomials.Polynomial{Float64,TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},Array{TypedPolynomials.Term{Float64,TypedPolynomials.Monomial{(x, y),2}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at example1.jl:5 [inlined]
└ @ Core example1.jl:5
Test Summary: | Pass  Total
Example 1     |    5      5
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
in mergesorted at /home/vagrant/.julia/v0.7/TypedPolynomials/src/sequences.jl
Test Summary: | Pass  Total
Example 2     |    3      3
[ Info: MultivariatePolynomials tests passed
[ Info: Removing BenchmarkTools v0.2.5
[ Info: Removing MacroTools v0.4.0
[ Info: Removing TypedPolynomials v0.0.1

>>> End of log
