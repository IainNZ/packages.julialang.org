>>> 'Pkg.add("Typeclass")' log
INFO: Cloning cache of Typeclass from https://github.com/jasonmorton/Typeclass.jl.git
INFO: Installing Typeclass v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Typeclass
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Typeclass")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Typeclass

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:29.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:120.
Use "[]" instead.
WARNING: module Main should explicitly import == from Base
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 10
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:160
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 10
INFO: Instance delcaration omitted method x::Int == y::Int is already defined, skipping specializing Eq class method
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 16
INFO: Instance delcaration omitted method x::Float64 == y::Float64 is already defined, skipping specializing Eq class method
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:130
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 28
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:160
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 28
INFO: Instance delcaration omitted method x::Bad == y::Bad is already defined, skipping specializing Eq class method
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 46
INFO: Instance delcaration omitted method x::Foo == y::Foo is already defined, skipping specializing Eq class method
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 58
WARNING: Method definition implements_Eq(Main.Foo) in module Main overwritten.
WARNING: Method definition eq(Main.Foo, Main.Foo) in module Main at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:47 overwritten at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:59.
WARNING: Method definition noteq(Main.Foo, Main.Foo) in module Main overwritten.
WARNING: module Main should explicitly import != from Base
WARNING: module Main should explicitly import != from Base
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:130
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 86
INFO: Instance delcaration omitted method x::TestNameEq == y::TestNameEq is already defined, skipping specializing NameEq class method
INFO: Instance delcaration omitted method x::TestNameEq != y::TestNameEq is already defined, skipping specializing NameEq class method
WARNING: names(v) is deprecated, use fieldnames(v) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in names(::TestNameEq) at ./deprecated.jl:50
 in eq(::TestNameEq, ::TestNameEq) at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:67
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 89
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:130
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 90
WARNING: Method definition implements_NameEq(Main.TestNameEq) in module Main overwritten.
WARNING: Method definition eq(Main.TestNameEq, Main.TestNameEq) in module Main at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:67 overwritten at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:67.
WARNING: module Main should explicitly import != from Base
WARNING: module Main should explicitly import != from Base
WARNING: names(v) is deprecated, use fieldnames(v) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in names(::TestNameEq) at ./deprecated.jl:50
 in eq(::TestNameEq, ::TestNameEq) at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:67
 in ==(::TestNameEq, ::TestNameEq) at ./null:0
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 91
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Expr}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Expr,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 100
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Expr,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:160
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 100
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol,Symbol}, ::Tuple{Symbol,Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 116
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:160
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 116
WARNING: module Main should explicitly import + from Base
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:130
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 142
INFO: Instance delcaration omitted method x::Int + y::Int is already defined, skipping specializing Addable class method
WARNING: Dict{K,V}(ks::Tuple{Vararg{K}},vs::Tuple{Vararg{V}}) is deprecated, use Dict{K,V}(zip(ks,vs)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Dict{K,V}(::Tuple{Symbol}, ::Tuple{Symbol}) at ./deprecated.jl:50
 in _instance_code(::Bool, ::Typeclass.Class, ::Type{T}, ::Tuple{Symbol,Symbol,Expr}) at /home/vagrant/.julia/v0.5/Typeclass/src/Typeclass.jl:127
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 145
UndefVarError(:garble)Error During Test
  Test threw an exception of type ErrorException
  Expression: eq(Foo(4) + Foo(3),Foo(7))
  type UndefVarError has no field f
   in add(::Foo, ::Foo) at /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl:153
   in +(::Foo, ::Foo) at ./null:0
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
ERROR: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:321
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:219
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl, in expression starting on line 157
==============================[ ERROR: Typeclass ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Typeclass/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Typeclass had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
