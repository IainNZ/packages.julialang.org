>>> 'Pkg.add("Mayday")' log
INFO: Cloning cache of Mayday from https://github.com/rdeits/Mayday.jl.git
INFO: Cloning cache of MultiPoly from https://github.com/daviddelaat/MultiPoly.jl.git
INFO: Installing Calculus v0.3.0
INFO: Installing Combinatorics v0.6.0
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DataStructures v0.8.1
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing ForwardDiff v0.7.5
INFO: Installing IterTools v0.2.1
INFO: Installing JuMP v0.18.1
INFO: Installing MathProgBase v0.7.1
INFO: Installing Mayday v0.0.3
INFO: Installing MultiPoly v0.1.0
INFO: Installing Polynomials v0.3.0
INFO: Installing ReverseDiffSparse v0.8.1
INFO: Installing SCS v0.3.3
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Building SpecialFunctions
INFO: Building SCS
INFO: Package database updated

>>> 'Pkg.test("Mayday")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1079.0234375 MB free)
Uptime: 71896.0 sec
Load Avg:  0.98974609375  0.9697265625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    4298159 s       8210 s     305088 s    1572046 s         70 s
#2  3504 MHz     988738 s        848 s     117436 s    5955362 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - Mayday                        0.0.3
33 additional packages:
 - BinDeps                       0.8.8
 - Cairo                         0.5.1
 - Calculus                      0.3.0
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Combinatorics                 0.6.0
 - CommonSubexpressions          0.1.0
 - Compat                        0.64.0
 - DataStructures                0.8.1
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - Graphics                      0.3.0
 - Gtk                           0.13.1
 - IterTools                     0.2.1
 - JuMP                          0.18.1
 - MathProgBase                  0.7.1
 - MultiPoly                     0.1.0
 - NaNMath                       0.3.1
 - NodeJS                        0.4.0
 - Nullables                     0.0.5
 - Polynomials                   0.3.0
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - ReverseDiffSparse             0.8.1
 - Rsvg                          0.2.0
 - SCS                           0.3.3
 - SHA                           0.5.7
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - URIParser                     0.3.1
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Testing Mayday
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] MultiPoly.PolyUnion(::Array{MultiPoly.MPoly{JuMP.GenericAffExpr{Float64,JuMP.Variable}},1}) at /home/vagrant/.julia/v0.6/MultiPoly/src/polyunion.jl:9
 [4] +(::MultiPoly.MPoly{JuMP.GenericAffExpr{Float64,JuMP.Variable}}, ::MultiPoly.MPoly{JuMP.GenericAffExpr{Float64,JuMP.Variable}}) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:13
 [5] _mapreduce(::Base.#identity, ::Base.#+, ::IndexLinear, ::Array{MultiPoly.MPoly{JuMP.GenericAffExpr{Float64,JuMP.Variable}},1}) at ./reduce.jl:273
 [6] defPolynomial(::JuMP.Model, ::Array{Symbol,1}, ::Array{MultiPoly.MPoly{Float64},1}) at /home/vagrant/.julia/v0.6/Mayday/src/Mayday.jl:61
 [7] test_simple_sos_problem() at /home/vagrant/.julia/v0.6/Mayday/test/../examples/simple_sos_problem.jl:15
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/../examples/simple_sos_problem.jl, in expression starting on line 41
v = MultiPoly.MPoly{JuMP.GenericAffExpr{Float64,JuMP.Variable}}(coeff[1] + (coeff[2])x + (coeff[3])x^2 + (coeff[4])x^3 + (coeff[5])x^4)
v = MultiPoly.MPoly{Float64}(-2.1408810450542294e-13 - 1.0397639566100194x + 5.750225033662761e-11x^2 - 1.4714049489283658e-5x^3 + 9.266022790806873e-11x^4)
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] MultiPoly.PolyUnion(::Array{MultiPoly.MPoly{Float64},1}) at /home/vagrant/.julia/v0.6/MultiPoly/src/polyunion.jl:9
 [4] *(::MultiPoly.MPoly{Float64}, ::MultiPoly.MPoly{Float64}) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:63
 [5] ^(::MultiPoly.MPoly{Float64}, ::Int64) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:92
 [6] test_spotopt_van_der_pol(::Function) at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:14
 [7] test_spotopt_van_der_pol() at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:11
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl, in expression starting on line 39
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] evaluate(::Array{MultiPoly.MPoly{Float64},2}, ::Float64, ::Vararg{Float64,N} where N) at /home/vagrant/.julia/v0.6/Mayday/src/Mayday.jl:52
 [4] test_spotopt_van_der_pol(::Function) at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:18
 [5] test_spotopt_van_der_pol() at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:11
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl, in expression starting on line 39
result = 2.3045925473222924
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] MultiPoly.PolyUnion(::Array{MultiPoly.MPoly{Float64},1}) at /home/vagrant/.julia/v0.6/MultiPoly/src/polyunion.jl:9
 [4] *(::MultiPoly.MPoly{Float64}, ::MultiPoly.MPoly{Float64}) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:63
 [5] ^(::MultiPoly.MPoly{Float64}, ::Int64) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:92
 [6] test_spotopt_van_der_pol(::Function) at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:14
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/runtests.jl, in expression starting on line 8
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] evaluate(::Array{MultiPoly.MPoly{Float64},2}, ::Float64, ::Vararg{Float64,N} where N) at /home/vagrant/.julia/v0.6/Mayday/src/Mayday.jl:52
 [4] test_spotopt_van_der_pol(::Function) at /home/vagrant/.julia/v0.6/Mayday/test/../examples/spotopt_van_der_pol.jl:18
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/runtests.jl, in expression starting on line 8
----------------------------------------------------------------------------
	SCS v1.2.6 - Splitting Conic Solver
	(c) Brendan O'Donoghue, Stanford University, 2012-2016
----------------------------------------------------------------------------
Lin-sys: sparse-direct, nnz in A = 164
eps = 1.00e-04, alpha = 1.80, max_iters = 20000, normalize = 1, scale = 5.00
Variables n = 55, constraints m = 64
Cones:	primal zero / dual free vars: 32
	sd vars: 32, sd blks: 4
Setup time: 3.30e-04s
----------------------------------------------------------------------------
 Iter | pri res | dua res | rel gap | pri obj | dua obj | kap/tau | time (s)
----------------------------------------------------------------------------
     0|      inf       inf      -nan      -nan       inf       inf  1.06e-03 
    60| 4.86e-06  3.19e-09  3.19e-09  0.00e+00  3.19e-09  9.44e-21  2.48e-03 
----------------------------------------------------------------------------
Status: Solved
Timing: Solve time: 2.49e-03s
	Lin-sys: nnz in L factor: 332, avg solve time: 5.25e-06s
	Cones: avg projection time: 2.64e-05s
----------------------------------------------------------------------------
Error metrics:
dist(s, K) = 1.7143e-09, dist(y, K*) = 1.8511e-12, s'y/|s||y| = -3.0981e-13
|Ax + s - b|_2 / (1 + |b|_2) = 4.8644e-06
|A'y + c|_2 / (1 + |c|_2) = 3.1869e-09
|c'x + b'y| / (1 + |c'x| + |b'y|) = 3.1868e-09
----------------------------------------------------------------------------
c'x = 0.0000, -b'y = 0.0000
============================================================================
----------------------------------------------------------------------------
	SCS v1.2.6 - Splitting Conic Solver
	(c) Brendan O'Donoghue, Stanford University, 2012-2016
----------------------------------------------------------------------------
Lin-sys: sparse-direct, nnz in A = 739
eps = 1.00e-04, alpha = 1.80, max_iters = 20000, normalize = 1, scale = 5.00
Variables n = 241, constraints m = 270
Cones:	primal zero / dual free vars: 150
	sd vars: 120, sd blks: 1
Setup time: 2.34e-04s
----------------------------------------------------------------------------
 Iter | pri res | dua res | rel gap | pri obj | dua obj | kap/tau | time (s)
----------------------------------------------------------------------------
     0|      inf       inf      -nan      -inf       inf       inf  3.74e-04 
   100| 1.59e-05  6.94e-05  1.58e-06 -2.30e+00 -2.30e+00  0.00e+00  1.29e-02 
----------------------------------------------------------------------------
Status: Solved
Timing: Solve time: 1.29e-02s
	Lin-sys: nnz in L factor: 1492, avg solve time: 1.04e-05s
	Cones: avg projection time: 1.07e-04s
----------------------------------------------------------------------------
Error metrics:
dist(s, K) = 1.3679e-09, dist(y, K*) = 1.8807e-09, s'y/|s||y| = 1.8239e-11
|Ax + s - b|_2 / (1 + |b|_2) = 1.5858e-05
|A'y + c|_2 / (1 + |c|_2) = 6.9401e-05
|c'x + b'y| / (1 + |c'x| + |b'y|) = 1.5762e-06
----------------------------------------------------------------------------
c'x = -2.3046, -b'y = -2.3046
============================================================================
----------------------------------------------------------------------------
	SCS v1.2.6 - Splitting Conic Solver
	(c) Brendan O'Donoghue, Stanford University, 2012-2016
----------------------------------------------------------------------------
Lin-sys: sparse-direct, nnz in A = 1338
eps = 1.00e-04, alpha = 1.80, max_iters = 20000, normalize = 1, scale = 5.00
Variables n = 241, constraints m = 270
Cones:	primal zero / dual free vars: 150
	sd vars: 120, sd blks: 1
Setup time: 4.26e-04s
----------------------------------------------------------------------------
 Iter | pri res | dua res | rel gap | pri obj | dua obj | kap/tau | time (s)
----------------------------------------------------------------------------
     0|      inf       inf      -nan      -inf      -inf       inf  3.13e-02 
   100| 1.41e-02  5.96e-01  4.94e-03 -2.30e+00 -2.27e+00  9.88e-17  4.24e-02 
   200| 2.85e-03  1.67e-01  4.55e-04 -2.31e+00 -2.31e+00  0.00e+00  5result = 2.30448104070207
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Int64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] MultiPoly.PolyUnion(::Array{MultiPoly.MPoly{Float64},1}) at /home/vagrant/.julia/v0.6/MultiPoly/src/polyunion.jl:9
 [4] *(::MultiPoly.MPoly{Float64}, ::MultiPoly.MPoly{Float64}) at /home/vagrant/.julia/v0.6/MultiPoly/src/mpolyarithmetic.jl:63
 [5] chebyshev_polynomial_first_kind(::Symbol, ::Int64) at /home/vagrant/.julia/v0.6/Mayday/src/basis.jl:38
 [6] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},Mayday.##2#4{Array{Int64,1},Array{Symbol,1},Mayday.#chebyshev_polynomial_first_kind}}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:488
 [7] #1 at /home/vagrant/.julia/v0.6/Mayday/src/basis.jl:44 [inlined]
 [8] next at ./generator.jl:45 [inlined]
 [9] collect_to!(::Array{MultiPoly.MPoly{Float64},1}, ::Base.Generator{Array{Array{Int64,1},1},Mayday.##1#3{Array{Symbol,1},Mayday.#chebyshev_polynomial_first_kind}}, ::Int64, ::Int64) at ./array.jl:508
 [10] _collect(::Array{Array{Int64,1},1}, ::Base.Generator{Array{Array{Int64,1},1},Mayday.##1#3{Array{Symbol,1},Mayday.#chebyshev_polynomial_first_kind}}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:489
 [11] test_univariate_chebyshev_polynomials_range() at /home/vagrant/.julia/v0.6/Mayday/test/chebyshev.jl:2
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Mayday/test/runtests.jl, in expression starting on line 14
.35e-02 
   300| 5.77e-04  7.03e-02  6.38e-05 -2.31e+00 -2.31e+00  1.02e-16  6.49e-02 
   400| 5.44e-04  2.20e-02  4.98e-05 -2.30e+00 -2.30e+00  0.00e+00  7.56e-02 
   500| 2.57e-04  4.75e-03  3.45e-06 -2.30e+00 -2.30e+00  0.00e+00  8.61e-02 
   600| 5.04e-05  4.08e-03  4.30e-06 -2.30e+00 -2.30e+00  0.00e+00  9.69e-02 
   700| 1.93e-05  1.97e-03  1.99e-06 -2.30e+00 -2.30e+00  1.02e-16  1.08e-01 
   800| 1.83e-05  4.37e-04  1.06e-06 -2.30e+00 -2.30e+00  0.00e+00  1.18e-01 
   900| 6.34e-06  2.08e-04  2.06e-08 -2.30e+00 -2.30e+00  0.00e+00  1.29e-01 
  1000| 6.89e-07  1.37e-04  2.67e-07 -2.30e+00 -2.30e+00  1.02e-16  1.40e-01 
  1020| 2.39e-06  7.04e-05  8.10e-08 -2.30e+00 -2.30e+00  0.00e+00  1.42e-01 
----------------------------------------------------------------------------
Status: Solved
Timing: Solve time: 1.42e-01s
	Lin-sys: nnz in L factor: 2203, avg solve time: 1.02e-05s
	Cones: avg projection time: 1.19e-04s
----------------------------------------------------------------------------
Error metrics:
dist(s, K) = 1.7707e-16, dist(y, K*) = 2.2111e-09, s'y/|s||y| = 4.9536e-11
|Ax + s - b|_2 / (1 + |b|_2) = 2.3931e-06
|A'y + c|_2 / (1 + |c|_2) = 7.0399e-05
|c'x + b'y| / (1 + |c'x| + |b'y|) = 8.0968e-08
----------------------------------------------------------------------------
c'x = -2.3045, -b'y = -2.3045
============================================================================
INFO: Mayday tests passed

>>> End of log
