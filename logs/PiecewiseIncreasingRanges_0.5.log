>>> 'Pkg.add("PiecewiseIncreasingRanges")' log
INFO: Installing PiecewiseIncreasingRanges v0.0.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PiecewiseIncreasingRanges
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PiecewiseIncreasingRanges")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (725.3046875 MB free)
Uptime: 22954.0 sec
Load Avg:  1.27734375  1.05712890625  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1384659 s       3579 s     120454 s     502195 s         29 s
#2  3500 MHz     412844 s       2386 s      57022 s    1769743 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - PiecewiseIncreasingRanges     0.0.4
1 additional packages:
 - Compat                        0.25.2
INFO: Computing test dependencies for PiecewiseIncreasingRanges...
INFO: Installing Grid v0.4.2
INFO: Installing WoodburyMatrices v0.2.2
INFO: Testing PiecewiseIncreasingRanges
Error During Test
  Test threw an exception of type MethodError
  Expression: isempty(rg)
  MethodError: no method matching one(::Type{Any})
  Closest candidates are:
    one(!Matched::BitArray{2}) at bitarray.jl:427
    one(!Matched::Number) at number.jl:63
    one{T<:Number}(!Matched::Type{T<:Number}) at number.jl:64
    ...
   in _mapreduce(::Base.#identity, ::Base.#*, ::Base.LinearFast, ::Array{Any,1}) at ./reduce.jl:163
   in prod(::Array{Any,1}) at ./reduce.jl:275
   in _length(::PiecewiseIncreasingRanges.PiecewiseIncreasingRange{Int64,UnitRange{Int64},Void}) at ./abstractarray.jl:126
   in isempty(::PiecewiseIncreasingRanges.PiecewiseIncreasingRange{Int64,UnitRange{Int64},Void}) at ./abstractarray.jl:709
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:265
   in _start() at ./client.jl:321
ERROR: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:397
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/PiecewiseIncreasingRanges/test/runtests.jl, in expression starting on line 60
======================[ ERROR: PiecewiseIncreasingRanges ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/PiecewiseIncreasingRanges/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Grid v0.4.2
INFO: Removing WoodburyMatrices v0.2.2
ERROR: PiecewiseIncreasingRanges had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
