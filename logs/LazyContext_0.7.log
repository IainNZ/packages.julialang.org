>>> 'Pkg.add("LazyContext")' log
[ Info: Cloning cache of LazyContext from https://github.com/bramtayl/LazyContext.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing LazyContext v0.1.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MacroTools v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("LazyContext")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz     127375 s         96 s       8202 s     118561 s          1 s
       #2  3507 MHz      23404 s         62 s       3854 s     254288 s          0 s
       
  Memory: 2.93927001953125 GB (965.80859375 MB free)
  Uptime: 2854.0 sec
  Load Avg:  1.01318359375  0.9873046875  0.86669921875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - LazyContext                   0.1.3
3 additional packages:
 - Compat                        0.42.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.2
[ Info: Computing test dependencies for LazyContext... @ Base.Pkg.Entry entry.jl:713
[ Info: Installing DocStringExtensions v0.4.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Documenter v0.12.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Testing LazyContext @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: importing deprecated binding Base.Void into Builder.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
Documenter: setting up build directory.
Documenter: expanding markdown templates.
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = slugify(::String) at Utilities.jl:95
└ @ Documenter.Utilities Utilities.jl:95
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = slugify(::String) at Utilities.jl:96
└ @ Documenter.Utilities Utilities.jl:96
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = slugify(::String) at Utilities.jl:97
└ @ Documenter.Utilities Utilities.jl:97
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = slugify(::String) at Utilities.jl:98
└ @ Documenter.Utilities Utilities.jl:98
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = slugify(::String) at Utilities.jl:99
└ @ Documenter.Utilities Utilities.jl:99
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
┌ Warning: `parse(str::AbstractString, pos::Int; kwargs...)` is deprecated, use `Meta.parse(str, pos; kwargs...)` instead.
│   caller = #parseblock#1(::Int64, ::Bool, ::Function, ::String, ::Documenter.Documents.Document, ::Documenter.Documents.Page) at Utilities.jl:133
└ @ Documenter.Utilities Utilities.jl:133
Documenter: building cross-references.
WARNING: importing deprecated binding Base.ParseError into CrossReferences.
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
in docsxref at /home/vagrant/.julia/v0.7/Documenter/src/CrossReferences.jl
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.ParseError is deprecated, use Meta.ParseError instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
in docsxref at /home/vagrant/.julia/v0.7/Documenter/src/CrossReferences.jl
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = docsxref(::Base.Markdown.Link, ::String, ::Dict{Symbol,Any}, ::Documenter.Documents.Page, ::Documenter.Documents.Document) at CrossReferences.jl:122
└ @ Documenter.CrossReferences CrossReferences.jl:122
Documenter: running document checks.
 > checking for missing docstrings.
 !! 20 docstrings potentially missing:

    MacroTools.namify :: Tuple{Symbol}
    MacroTools.@esc :: Tuple
    MacroTools.combinedef :: Tuple{Dict}
    MacroTools.isexpr :: Tuple{Expr}
    MacroTools.@q :: Tuple{Any}
    MacroTools.splitdef :: Tuple{Any}
    MacroTools.combinearg :: NTuple{4,Any}
    MacroTools.prewalk :: Tuple{Any,Any}
    MacroTools.alias_gensyms :: Tuple{Any}
    MacroTools.unblock :: Tuple{Any}
    MacroTools.inexpr :: Tuple{Any,Any}
    MacroTools.postwalk :: Tuple{Any,Any}
    MacroTools.@expand :: Tuple{Any}
    MacroTools.isdef :: Tuple{Any}
    MacroTools.gatherwheres :: Tuple{Any}
    MacroTools.@>> :: Tuple
    MacroTools.rmlines :: Tuple{Any}
    MacroTools.prettify :: Tuple{Any}
    MacroTools.splitarg :: Tuple{Any}
    MacroTools.@> :: Tuple

 > running doctests.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = doctest(::Base.Markdown.Code, ::Dict{Symbol,Any}, ::Documenter.Documents.Document, ::Documenter.Documents.Page) at DocChecks.jl:130
└ @ Documenter.DocChecks DocChecks.jl:130
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = repl_splitter(::String) at DocChecks.jl:354
└ @ Documenter.DocChecks DocChecks.jl:354
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = takeuntil!(::Regex, ::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{SubString{String},1}) at DocChecks.jl:388
└ @ Documenter.DocChecks DocChecks.jl:388
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = remove_term_colors at DocChecks.jl:340 [inlined]
└ @ Core DocChecks.jl:340
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:261
└ @ Documenter.DocChecks DocChecks.jl:261
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:262
└ @ Documenter.DocChecks DocChecks.jl:262
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:264
└ @ Documenter.DocChecks DocChecks.jl:264
=====[Test Error]==============================

> File: src/index.md

> Code block:

```jldoctest
julia> using LazyContext

julia> with(d::WithContext, e::WithContext) = begin
            d_evaluated = evaluate!(d)
            e_copy = copy(e)
            merge!(e_copy.environment, d_evaluated)
            evaluate!(e_copy)
        end;

julia> @new_environment;

julia> @evaluate begin
            import with
            d = Dict(:a => 1, :b => 2)
            @with d a + b
        end
3
```

> Subexpression:

    with(d::WithContext, e::WithContext) = begin
         d_evaluated = evaluate!(d)
         e_copy = copy(e)
         merge!(e_copy.environment, d_evaluated)
         evaluate!(e_copy)
     end;

> Output Diff (REQUIRES COLOR):

with (generic function with 1 method)

=====[End Error]===============================
=====[Test Error]==============================

> File: src/index.md

> Code block:

```jldoctest
julia> using LazyContext

julia> with(d::WithContext, e::WithContext) = begin
            d_evaluated = evaluate!(d)
            e_copy = copy(e)
            merge!(e_copy.environment, d_evaluated)
            evaluate!(e_copy)
        end;

julia> @new_environment;

julia> @evaluate begin
            import with
            d = Dict(:a => 1, :b => 2)
            @with d a + b
        end
3
```

> Subexpression:

    @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e
ENVIRONMENT

julia> e[:a]
1
```

> Subexpression:

    e = Environment();

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e
ENVIRONMENT

julia> e[:a]
1
```

> Subexpression:

    e[:a] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e[:ENVIRONMENT][:a]
1

julia> e2 = copy(e);

julia> e2[:PARENT][:a]
1

julia> e2[:b] = 1;

julia> e2[:PARENT][:b]
ERROR: KeyError: key :b not found
[...]
```

> Subexpression:

    e = Environment();

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e[:ENVIRONMENT][:a]
1

julia> e2 = copy(e);

julia> e2[:PARENT][:a]
1

julia> e2[:b] = 1;

julia> e2[:PARENT][:b]
ERROR: KeyError: key :b not found
[...]
```

> Subexpression:

    e[:a] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e[:ENVIRONMENT][:a]
1

julia> e2 = copy(e);

julia> e2[:PARENT][:a]
1

julia> e2[:b] = 1;

julia> e2[:PARENT][:b]
ERROR: KeyError: key :b not found
[...]
```

> Subexpression:

    e2 = copy(e);

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> e[:a] = 1;

julia> e[:ENVIRONMENT][:a]
1

julia> e2 = copy(e);

julia> e2[:PARENT][:a]
1

julia> e2[:b] = 1;

julia> e2[:PARENT][:b]
ERROR: KeyError: key :b not found
[...]
```

> Subexpression:

    e2[:b] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:248
└ @ Documenter.DocChecks DocChecks.jl:248
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:249
└ @ Documenter.DocChecks DocChecks.jl:249
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:250
└ @ Documenter.DocChecks DocChecks.jl:250
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:251
└ @ Documenter.DocChecks DocChecks.jl:251
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> merge!(e, Core);

julia> e[:Symbol]
Symbol
```

> Subexpression:

    e = Environment();

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> merge!(e, Core);

julia> e[:Symbol]
Symbol
```

> Subexpression:

    merge!(e, Core);

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> merge!(e, Dict(:a => 1) );

julia> e[:a]
1
```

> Subexpression:

    e = Environment();

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> e = Environment();

julia> merge!(e, Dict(:a => 1) );

julia> e[:a]
1
```

> Subexpression:

    merge!(e, Dict(:a => 1) );

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> w = WithContext(:(a + b));

julia> evaluate(w)
ERROR: UndefVarError: a not defined
[...]

julia> blank_environment = Environment();

julia> blank_environment[:a] = 1; blank_environment[:b] = 2;

julia> x = WithContext(w, environment = blank_environment);

julia> evaluate(x)
3
```

> Subexpression:

    w = WithContext(:(a + b));

> Output Diff (REQUIRES COLOR):

WithContext(a + b)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> w = WithContext(:(a + b));

julia> evaluate(w)
ERROR: UndefVarError: a not defined
[...]

julia> blank_environment = Environment();

julia> blank_environment[:a] = 1; blank_environment[:b] = 2;

julia> x = WithContext(w, environment = blank_environment);

julia> evaluate(x)
3
```

> Subexpression:

    blank_environment = Environment();

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> w = WithContext(:(a + b));

julia> evaluate(w)
ERROR: UndefVarError: a not defined
[...]

julia> blank_environment = Environment();

julia> blank_environment[:a] = 1; blank_environment[:b] = 2;

julia> x = WithContext(w, environment = blank_environment);

julia> evaluate(x)
3
```

> Subexpression:

    blank_environment[:a] = 1; blank_environment[:b] = 2;

> Output Diff (REQUIRES COLOR):

2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> w = WithContext(:(a + b));

julia> evaluate(w)
ERROR: UndefVarError: a not defined
[...]

julia> blank_environment = Environment();

julia> blank_environment[:a] = 1; blank_environment[:b] = 2;

julia> x = WithContext(w, environment = blank_environment);

julia> evaluate(x)
3
```

> Subexpression:

    x = WithContext(w, environment = blank_environment);

> Output Diff (REQUIRES COLOR):

WithContext(a + b)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> ENVIRONMENT[:b] = 2;

julia> w = WithContext(ENVIRONMENT, :(a + b), @__MODULE__) |> evaluate!
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> ENVIRONMENT[:b] = 2;

julia> w = WithContext(ENVIRONMENT, :(a + b), @__MODULE__) |> evaluate!
3
```

> Subexpression:

    ENVIRONMENT[:a] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> ENVIRONMENT[:b] = 2;

julia> w = WithContext(ENVIRONMENT, :(a + b), @__MODULE__) |> evaluate!
3
```

> Subexpression:

    ENVIRONMENT[:b] = 2;

> Output Diff (REQUIRES COLOR):

2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> WithContext(ENVIRONMENT, :(a = 2), @__MODULE__) |> evaluate;

julia> ENVIRONMENT[:a]
1
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> WithContext(ENVIRONMENT, :(a = 2), @__MODULE__) |> evaluate;

julia> ENVIRONMENT[:a]
1
```

> Subexpression:

    ENVIRONMENT[:a] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> WithContext(ENVIRONMENT, :(a = 2), @__MODULE__) |> evaluate;

julia> ENVIRONMENT[:a]
1
```

> Subexpression:

    WithContext(ENVIRONMENT, :(a = 2), @__MODULE__) |> evaluate;

> Output Diff (REQUIRES COLOR):

2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            a = 1
            ENVIRONMENT[:a]
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
:a
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            a = 1
            ENVIRONMENT[:a]
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
:a
```

> Subexpression:

    e = quote
         a = 1
         ENVIRONMENT[:a]
     end;

> Output Diff (REQUIRES COLOR):

quote
    #= none:2 =#
    a = 1
    #= none:3 =#
    ENVIRONMENT[:a]
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> a = 1;

julia> WithContext(ENVIRONMENT, :a, @__MODULE__) |> evaluate
1
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> a = 1;

julia> WithContext(ENVIRONMENT, :a, @__MODULE__) |> evaluate
1
```

> Subexpression:

    a = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> WithContext(ENVIRONMENT, :(@fastmath a + 1), @__MODULE__) |> evaluate
2
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> ENVIRONMENT[:a] = 1;

julia> WithContext(ENVIRONMENT, :(@fastmath a + 1), @__MODULE__) |> evaluate
2
```

> Subexpression:

    ENVIRONMENT[:a] = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            function plus(a, b)
                a + b
            end
            plus(1, 2)
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            function plus(a, b)
                a + b
            end
            plus(1, 2)
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
3
```

> Subexpression:

    e = quote
         function plus(a, b)
             a + b
         end
         plus(1, 2)
     end;

> Output Diff (REQUIRES COLOR):

quote
    #= none:2 =#
    function plus(a, b)
        #= none:3 =#
        a + b
    end
    #= none:5 =#
    plus(1, 2)
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            macro A(a, b)
                :($a + $b)
            end
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
@A (macro with 1 method)
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = quote
            macro A(a, b)
                :($a + $b)
            end
        end;

julia> WithContext(ENVIRONMENT, e, @__MODULE__) |> evaluate
@A (macro with 1 method)
```

> Subexpression:

    e = quote
         macro A(a, b)
             :($a + $b)
         end
     end;

> Output Diff (REQUIRES COLOR):

quote
    #= none:2 =#
    $(Expr(:macro, :(A(a, b)), quote
    #= none:3 =#
    $(Expr(:quote, :($(Expr(:$, :a)) + $(Expr(:$, :b)))))
end))
end

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/utilities.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> d = Base.ImmutableDict{Symbol, Any}();

julia> a = Dict(:b => 2);

julia> immutable_merge(d, a)[:b]
2
```

> Subexpression:

    d = Base.ImmutableDict{Symbol, Any}();

> Output Diff (REQUIRES COLOR):

Base.ImmutableDict{Symbol,Any} with 0 entries

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/utilities.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> d = Base.ImmutableDict{Symbol, Any}();

julia> a = Dict(:b => 2);

julia> immutable_merge(d, a)[:b]
2
```

> Subexpression:

    a = Dict(:b => 2);

> Output Diff (REQUIRES COLOR):

Dict{Symbol,Int64} with 1 entry:
  :b => 2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate a = 1;

julia> @evaluate a
1

julia> ENVIRONMENT[:a] = 2;

julia> @evaluate a
2
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate a = 1;

julia> @evaluate a
1

julia> ENVIRONMENT[:a] = 2;

julia> @evaluate a
2
```

> Subexpression:

    @evaluate a = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate a = 1;

julia> @evaluate a
1

julia> ENVIRONMENT[:a] = 2;

julia> @evaluate a
2
```

> Subexpression:

    ENVIRONMENT[:a] = 2;

> Output Diff (REQUIRES COLOR):

2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> a = 1;

julia> @evaluate a
ERROR: KeyError: key :a not found
[...]
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> a = 1;

julia> @evaluate a
ERROR: KeyError: key :a not found
[...]
```

> Subexpression:

    a = 1;

> Output Diff (REQUIRES COLOR):

1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            simple = x -> x + 1
            simple(1)
        end
2

julia> @evaluate begin
           test_function = (a, b...; c = 1) -> +(a, c, b...)
           test_function(1, 2, 3; c = 4)
       end
10

julia> @evaluate begin
            minus = function (a, b)
                a - b
            end
            minus(2, 1)
        end
1
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8 at parse.jl:74 [inlined]
└ @ Core parse.jl:74
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8 at parse.jl:74 [inlined]
└ @ Core parse.jl:74
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            function plus(a, b)::Int
                a + b
            end
            plus(1, 2)
        end
3

julia> @evaluate begin
            minus(a, b)::Int = 1
            minus(2, 1)
        end
1

julia> minus(4, plus(1, 2))
1
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8 at parse.jl:74 [inlined]
└ @ Core parse.jl:74
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
           a = 1
           function test(b)
               merge!(ENVIRONMENT, Dict(:a => 2))
               a + b + PARENT[:a]
           end
           test(3)
       end
6
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8 at parse.jl:74 [inlined]
└ @ Core parse.jl:74
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
           a = 1
           test(b) = a + b
           first_result = test(2)
           a = 2
           second_result = test(2)
           first_result, second_result
       end
(3, 4)
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            a = 1
            result = let b = 2
                a = 3
                a + b
            end
            a, result
        end
(1, 5)
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8 at parse.jl:74 [inlined]
└ @ Core parse.jl:74
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            a = 1
            result = let b = 2
                a = 3
                a + b
            end
            a, result
        end
(1, 5)
```

> Subexpression:

    @evaluate begin
         a = 1
         result = let b = 2
             a = 3
             a + b
         end
         a, result
     end

> Output Diff (REQUIRES COLOR):

(1, 5)ERROR: syntax: invalid let syntax

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            c = Matrix{Int}(2, 2)
            for a in 1:2, b in 1:2
                c[a, b] = a + b
            end
            c
        end
2×2 Array{Int64,2}:
 2  3
 3  4
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = top-level scope at none:2
└ @ Core none:2
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            b = 0
            for a in 1:3
                b = a + b
            end
            a, b
        end
(3, 6)
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate sum(a for a in 0:2 if a > 0)
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #new_environment#8(::Symbol, ::Function, ::WithContext{Symbol,Symbol}, ::Array{Any,1}) at parse.jl:74
└ @ LazyContext parse.jl:74
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> e = @evaluate begin
           a = 1
           b = 2
           @identity a + b
       end
WithContext(a + b)

julia> evaluate!(e)
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            struct A
                a::Int
                b
                A(a, b) = if a > b
                    new(a, b)
                else
                    new(b, a)
                end
            end
            A(1, 2).a
        end
2

julia> @evaluate begin
            abstract type B end
            mutable struct C <: B
                a
                b
                function C(a, b)
                    new(a + b, a - b)
                end
            end
            C(1, 2).a
        end
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            primitive type D 64 end
        end;

julia> typeof(D)
DataType
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            primitive type D 64 end
        end;

julia> typeof(D)
DataType
```

> Subexpression:

    @evaluate begin
         primitive type D 64 end
     end;

> Output Diff (REQUIRES COLOR):

D

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            module F
                a = 1
            end
            F.a
        end
ERROR: syntax: module expression not at top level
[...]
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            module F
                a = 1
            end
            F.a
        end
ERROR: syntax: module expression not at top level
[...]
```

> Subexpression:

    @evaluate begin
         module F
             a = 1
         end
         F.a
     end

> Output Diff (REQUIRES COLOR):

ERROR: syntax: module "module" expression not at top level
[...]level

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> plus(a, b) = a + b;

julia> @evaluate import MacroTools, plus;

julia> MacroTools.prettify == @evaluate MacroTools.prettify
true

julia> plus(1, 2) == @evaluate plus(1, 2)
true
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> plus(a, b) = a + b;

julia> @evaluate import MacroTools, plus;

julia> MacroTools.prettify == @evaluate MacroTools.prettify
true

julia> plus(1, 2) == @evaluate plus(1, 2)
true
```

> Subexpression:

    plus(a, b) = a + b;

> Output Diff (REQUIRES COLOR):

plus (generic function with 1 method)

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> plus(a, b) = a + b;

julia> @evaluate import MacroTools, plus;

julia> MacroTools.prettify == @evaluate MacroTools.prettify
true

julia> plus(1, 2) == @evaluate plus(1, 2)
true
```

> Subexpression:

    @evaluate import MacroTools, plus;

> Output Diff (REQUIRES COLOR):

ERROR: TypeError: in import, expected Symbol, got Expr

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> plus(a, b) = a + b;

julia> @evaluate import MacroTools, plus;

julia> MacroTools.prettify == @evaluate MacroTools.prettify
true

julia> plus(1, 2) == @evaluate plus(1, 2)
true
```

> Subexpression:

    MacroTools.prettify == @evaluate MacroTools.prettify

> Output Diff (REQUIRES COLOR):

trueERROR: KeyError: key :MacroTools not found
Stacktrace:
 [1] getindex at ./dict.jl:768 [inlined]
 [2] getindex(::Environment, ::Symbol) at /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl:91
 [3] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> plus(a, b) = a + b;

julia> @evaluate import MacroTools, plus;

julia> MacroTools.prettify == @evaluate MacroTools.prettify
true

julia> plus(1, 2) == @evaluate plus(1, 2)
true
```

> Subexpression:

    plus(1, 2) == @evaluate plus(1, 2)

> Output Diff (REQUIRES COLOR):

trueERROR: KeyError: key :plus not found
Stacktrace:
 [1] getindex at ./dict.jl:768 [inlined]
 [2] getindex(::Environment, ::Symbol) at /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl:91
 [3] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> test_dict = Dict(:a => 1, :b => 2);

julia> @evaluate using MacroTools, test_dict;

julia> MacroTools.prettify == @evaluate prettify
true

julia> @evaluate a + b
3
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> test_dict = Dict(:a => 1, :b => 2);

julia> @evaluate using MacroTools, test_dict;

julia> MacroTools.prettify == @evaluate prettify
true

julia> @evaluate a + b
3
```

> Subexpression:

    test_dict = Dict(:a => 1, :b => 2);

> Output Diff (REQUIRES COLOR):

Dict{Symbol,Int64} with 2 entries:
  :a => 1
  :b => 2

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> test_dict = Dict(:a => 1, :b => 2);

julia> @evaluate using MacroTools, test_dict;

julia> MacroTools.prettify == @evaluate prettify
true

julia> @evaluate a + b
3
```

> Subexpression:

    @evaluate using MacroTools, test_dict;

> Output Diff (REQUIRES COLOR):

ERROR: TypeError: in using, expected Symbol, got Expr

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> test_dict = Dict(:a => 1, :b => 2);

julia> @evaluate using MacroTools, test_dict;

julia> MacroTools.prettify == @evaluate prettify
true

julia> @evaluate a + b
3
```

> Subexpression:

    MacroTools.prettify == @evaluate prettify

> Output Diff (REQUIRES COLOR):

trueERROR: KeyError: key :prettify not found
Stacktrace:
 [1] getindex at ./dict.jl:768 [inlined]
 [2] getindex(::Environment, ::Symbol) at /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl:91
 [3] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> import MacroTools

julia> test_dict = Dict(:a => 1, :b => 2);

julia> @evaluate using MacroTools, test_dict;

julia> MacroTools.prettify == @evaluate prettify
true

julia> @evaluate a + b
3
```

> Subexpression:

    @evaluate a + b

> Output Diff (REQUIRES COLOR):

3ERROR: KeyError: key :a not found
Stacktrace:
 [1] getindex at ./dict.jl:768 [inlined]
 [2] getindex(::Environment, ::Symbol) at /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl:91
 [3] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate begin
            b = 2
            convert(Float64, b)::Float64
        end
2.0
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate global a
ERROR: global expressions not supported
```

> Subexpression:

    using LazyContext; @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl

> Code block:

```jldoctest
julia> using LazyContext; @new_environment;

julia> @evaluate global a
ERROR: global expressions not supported
```

> Subexpression:

    @evaluate global a

> Output Diff (REQUIRES COLOR):

ERROR: LoadError: global expressions not supportedsupported
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] parse!(::WithContext{Symbol,Expr}) at /home/vagrant/.julia/v0.7/LazyContext/src/parse.jl:180
 [3] parse_barrier(::WithContext{Environment,Expr}) at /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl:5
 [4] @evaluate(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/LazyContext/src/eval.jl:439
in expression starting at none:1

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/LazyContext/src/environment.jl

> Code block:

```jldoctest
julia> using LazyContext

julia> @new_environment;

julia> Dict == ENVIRONMENT[:Dict]
true
```

> Subexpression:

    @new_environment;

> Output Diff (REQUIRES COLOR):

ENVIRONMENT

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered errors. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202 [inlined]
 [3] @generated body at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:164 [inlined]
 [4] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:164
 [5] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:188 [inlined]
 [6] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:70
 [7] #makedocs#1(::Bool, ::Base.Iterators.IndexValue{Symbol,Any,NTuple{8,Symbol},NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,String}}}, ::Function) at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:187
 [8] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,String}}, ::typeof(Documenter.makedocs)) at ./<missing>:0
 [9] top-level scope
 [10] include at ./boot.jl:295 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:323
 [14] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for LazyContext
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LazyContext/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
[ Info: Removing DocStringExtensions v0.4.1 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Documenter v0.12.5 @ Base.Pkg.Entry entry.jl:546
ERROR: LazyContext had test errors

>>> End of log
