>>> 'Pkg.add("IntervalSets")' log
[ Info: Installing IntervalSets v0.1.1
[ Info: Package database updated

>>> 'Pkg.test("IntervalSets")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1544306 s       8699 s      83135 s     331518 s         11 s
       #2  3500 MHz     270730 s        256 s      30058 s    2008199 s          0 s
       
  Memory: 2.93927001953125 GB (828.5859375 MB free)
  Uptime: 23493.0 sec
  Load Avg:  0.9970703125  1.013671875  1.0400390625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - IntervalSets                  0.1.1
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.48.0
 - Nullables                     0.0.3
[ Info: Testing IntervalSets
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:5.
│ Use `struct` instead.
└ @ nothing closed.jl:5
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(l::T, r::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:9.
│ Use `(::Type{ClosedInterval{T}})(l::T, r::T) where T` instead.
└ @ nothing closed.jl:9
┌ Warning: Deprecated syntax `parametric method syntax ClosedInterval{T}(left::T, right::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:12.
│ Use `ClosedInterval(left::T, right::T) where T` instead.
└ @ nothing closed.jl:12
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(left, right)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:13.
│ Use `(::Type{ClosedInterval{T}})(left, right) where T` instead.
└ @ nothing closed.jl:13
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(i::AbstractInterval)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:24.
│ Use `(::Type{ClosedInterval{T}})(i::AbstractInterval) where T` instead.
└ @ nothing closed.jl:24
┌ Warning: Deprecated syntax `parametric method syntax union{T <: AbstractFloat}(A::ClosedInterval{T}, B::ClosedInterval{T})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:67.
│ Use `union(A::ClosedInterval{T}, B::ClosedInterval{T}) where T <: AbstractFloat` instead.
└ @ nothing closed.jl:67
┌ Warning: Deprecated syntax `parametric method syntax width{T}(A::ClosedInterval{T})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:93.
│ Use `width(A::ClosedInterval{T}) where T` instead.
└ @ nothing closed.jl:93
┌ Warning: Deprecated syntax `parametric method syntax convert{R <: AbstractUnitRange, I <: Integer}(::Type{R}, i::ClosedInterval{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:98.
│ Use `convert(#unused#::Type{R}, i::ClosedInterval{I}) where {R <: AbstractUnitRange, I <: Integer}` instead.
└ @ nothing closed.jl:98
┌ Warning: Deprecated syntax `parametric method syntax range{I <: Integer}(i::ClosedInterval{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:101.
│ Use `range(i::ClosedInterval{I}) where I <: Integer` instead.
└ @ nothing closed.jl:101
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{T1, T2}(::Type{ClosedInterval{T1}}, ::Type{ClosedInterval{T2}})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:103.
│ Use `Base.promote_rule(#unused#::Type{ClosedInterval{T1}}, #unused#::Type{ClosedInterval{T2}}) where {T1, T2}` instead.
└ @ nothing closed.jl:103
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{AbstractInterval{T}})` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:21.
│ Use `eltype(#unused#::Type{AbstractInterval{T}}) where T` instead.
└ @ nothing IntervalSets.jl:21
┌ Warning: Deprecated syntax `parametric method syntax eltype{I <: AbstractInterval}(::Type{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:22.
│ Use `eltype(#unused#::Type{I}) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:22
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, i::I)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:24.
│ Use `convert(#unused#::Type{I}, i::I) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:24
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, i::AbstractInterval)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:26.
│ Use `convert(#unused#::Type{I}, i::AbstractInterval) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:26
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, r::Range)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:30.
│ Use `convert(#unused#::Type{I}, r::Range) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:30
WARNING: importing deprecated binding Base.Range into IntervalSets.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:29
┌ Warning: Deprecated syntax `parametric method syntax ordered{T}(a::T, b::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:34.
│ Use `ordered(a::T, b::T) where T` instead.
└ @ nothing IntervalSets.jl:34
┌ Warning: Deprecated syntax `parametric method syntax checked_conversion{T}(::Type{T}, a, b)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:37.
│ Use `checked_conversion(#unused#::Type{T}, a, b) where T` instead.
└ @ nothing IntervalSets.jl:37
┌ Warning: Deprecated syntax `parametric method syntax _checked_conversion{T}(::Type{T}, a::T, b::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:38.
│ Use `_checked_conversion(#unused#::Type{T}, a::T, b::T) where T` instead.
└ @ nothing IntervalSets.jl:38
┌ Warning: Deprecated syntax `parametric method syntax _checked_conversion{T}(::Type{T}, a, b)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:40.
│ Use `_checked_conversion(#unused#::Type{T}, a, b) where T` instead.
└ @ nothing IntervalSets.jl:40
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:2
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:4
in top-level scope at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:4
in top-level scope at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl
Closed Sets: Error During Test at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:9
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: Date not defined
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:78 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [3] macro expansion at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:10 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [5] top-level scope at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:5
   [6] include at ./boot.jl:292 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:1011
   [8] include(::Module, ::String) at ./sysimg.jl:26
   [9] process_options(::Base.JLOptions) at ./client.jl:324
   [10] _start() at ./client.jl:375
Test Summary: | Pass  Error  Total
IntervalSets  |   51      1     52
  Closed Sets |   48      1     49
ERROR: LoadError: Some tests did not pass: 51 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for IntervalSets
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/IntervalSets/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: IntervalSets had test errors

>>> End of log
