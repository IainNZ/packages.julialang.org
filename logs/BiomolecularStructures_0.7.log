>>> 'Pkg.add("BiomolecularStructures")' log
[ Info: Cloning cache of BioSeq from https://github.com/diegozea/BioSeq.jl.git
[ Info: Cloning cache of BiomolecularStructures from https://github.com/hng/BiomolecularStructures.jl.git
[ Info: Cloning cache of FastaIO from https://github.com/carlobaldassi/FastaIO.jl.git
[ Info: Installing BaseTestDeprecated v0.1.0
[ Info: Installing BinDeps v0.8.5
[ Info: Installing BioSeq v0.4.0
[ Info: Installing BiomolecularStructures v0.2.3
[ Info: Installing BufferedStreams v0.3.3
[ Info: Installing Codecs v0.4.0
[ Info: Installing ColorTypes v0.6.6
[ Info: Installing Colors v0.8.2
[ Info: Installing Conda v0.7.1
[ Info: Installing FastaIO v0.3.0
[ Info: Installing FixedPointNumbers v0.4.3
[ Info: Installing Formatting v0.3.0
[ Info: Installing GZip v0.3.0
[ Info: Installing HttpCommon v0.3.0
[ Info: Installing HttpParser v0.3.0
[ Info: Installing LaTeXStrings v0.3.0
[ Info: Installing Libz v0.2.4
[ Info: Installing LightXML v0.5.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing MbedTLS v0.5.4
[ Info: Installing PyCall v1.15.0
[ Info: Installing PyPlot v2.3.2
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requests v0.5.1
[ Info: Installing SHA v0.5.3
[ Info: Installing URIParser v0.3.0
[ Info: Building HttpParser
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope
└ @ Core :0
┌ Error: ------------------------------------------------------------
│ # Build failed for HttpParser
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] top-level scope at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:38
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:521
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:555
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:38
└ @ Main none:15
[ Info: Building MbedTLS
Using system libraries...
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MbedTLS/deps/build.jl:48
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building PyCall
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:11.
│ Use `struct` instead.
└ @ nothing build.jl:11
┌ Warning: Replacing module `URIParser`
└ @ Base loading.jl:350
┌ Warning: Replacing module `SHA`
└ @ Base loading.jl:350
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:50.
└ @ nothing build.jl:50
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:145.
└ @ nothing build.jl:145
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187.
└ @ nothing build.jl:187
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187.
└ @ nothing build.jl:187
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:188.
└ @ nothing build.jl:188
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:207.
└ @ nothing build.jl:207
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:169
└ @ Core build.jl:169
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.7/Conda/deps/usr:
#
numpy                     1.14.0          py27_blas_openblas_200  [blas_openblas]  conda-forge
┌ Warning: `readstring(cmd::AbstractCmd)` is deprecated, use `read(cmd, String)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#pyvar#2")))(::String, ::String, ::String) at build.jl:39
└ @ Main.__anon__ build.jl:39
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:58
└ @ Main.__anon__ build.jl:58
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Error: ------------------------------------------------------------
│ # Build failed for PyCall
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:85
│     [2] top-level scope at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187
│     [3] include at ./boot.jl:292 [inlined]
│     [4] include_relative(::Module, ::String) at ./loading.jl:521
│     [5] include at ./sysimg.jl:26 [inlined]
│     [6] include(::String) at ./loading.jl:555
│     [7] top-level scope
│     [8] eval at ./boot.jl:295 [inlined]
│     [9] eval at ./sysimg.jl:71 [inlined]
│     [10] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [11] #2 at ./none:12 [inlined]
│     [12] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [13] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [14] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [15] top-level scope
│     [16] eval at ./boot.jl:295 [inlined]
│     [17] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [18] process_options(::Base.JLOptions) at ./client.jl:301
│     [19] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:255
└ @ Main none:15
[ Info: Building LightXML
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building BiomolecularStructures
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.7/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    biopython: 1.70-py27_2 conda-forge

biopython-1.70   0% |                              | ETA:  --:--:--   0.00  B/sbiopython-1.70   1% |                               | ETA:  0:00:01   1.54 MB/sbiopython-1.70   2% |                               | ETA:  0:00:01   1.92 MB/sbiopython-1.70   3% |#                              | ETA:  0:00:01   2.11 MB/sbiopython-1.70   4% |#                              | ETA:  0:00:01   2.20 MB/sbiopython-1.70   6% |#                              | ETA:  0:00:01   2.28 MB/sbiopython-1.70   7% |##                             | ETA:  0:00:01   2.32 MB/sbiopython-1.70   8% |##                             | ETA:  0:00:01   2.37 MB/sbiopython-1.70   9% |###                            | ETA:  0:00:00   2.68 MB/sbiopython-1.70  11% |###                            | ETA:  0:00:00   2.99 MB/sbiopython-1.70  12% |###                            | ETA:  0:00:00   2.99 MB/sbiopython-1.70  13% |####                           | ETA:  0:00:00   3.26 MB/sbiopython-1.70  14% |####                           | ETA:  0:00:00   3.21 MB/sbiopython-1.70  16% |####                           | ETA:  0:00:00   3.45 MB/sbiopython-1.70  17% |#####                          | ETA:  0:00:00   3.41 MB/sbiopython-1.70  18% |#####                          | ETA:  0:00:00   3.61 MB/sbiopython-1.70  19% |######                         | ETA:  0:00:00   3.82 MB/sbiopython-1.70  21% |######                         | ETA:  0:00:00   3.77 MB/sbiopython-1.70  22% |######                         | ETA:  0:00:00   3.97 MB/sbiopython-1.70  23% |#######                        | ETA:  0:00:00   4.17 MB/sbiopython-1.70  24% |#######                        | ETA:  0:00:00   4.12 MB/sbiopython-1.70  25% |########                       | ETA:  0:00:00   4.28 MB/sbiopython-1.70  27% |########                       | ETA:  0:00:00   4.46 MB/sbiopython-1.70  28% |########                       | ETA:  0:00:00   4.64 MB/sbiopython-1.70  29% |#########                      | ETA:  0:00:00   4.56 MB/sbiopython-1.70  30% |#########                      | ETA:  0:00:00   4.70 MB/sbiopython-1.70  32% |#########                      | ETA:  0:00:00   4.86 MB/sbiopython-1.70  33% |##########                     | ETA:  0:00:00   5.03 MB/sbiopython-1.70  34% |##########                     | ETA:  0:00:00   5.19 MB/sbiopython-1.70  35% |###########                    | ETA:  0:00:00   5.11 MB/sbiopython-1.70  37% |###########                    | ETA:  0:00:00   5.25 MB/sbiopython-1.70  38% |###########                    | ETA:  0:00:00   5.40 MB/sbiopython-1.70  39% |############                   | ETA:  0:00:00   5.55 MB/sbiopython-1.70  40% |############                   | ETA:  0:00:00   5.70 MB/sbiopython-1.70  42% |#############                  | ETA:  0:00:00   5.59 MB/sbiopython-1.70  43% |#############                  | ETA:  0:00:00   5.73 MB/sbiopython-1.70  44% |#############                  | ETA:  0:00:00   5.87 MB/sbiopython-1.70  45% |##############                 | ETA:  0:00:00   6.01 MB/sbiopython-1.70  47% |##############                 | ETA:  0:00:00   6.15 MB/sbiopython-1.70  48% |##############                 | ETA:  0:00:00   6.28 MB/sbiopython-1.70  49% |###############                | ETA:  0:00:00   6.26 MB/sbiopython-1.70  50% |###############                | ETA:  0:00:00   6.34 MB/sbiopython-1.70  51% |################               | ETA:  0:00:00   6.46 MB/sbiopython-1.70  53% |################               | ETA:  0:00:00   6.59 MB/sbiopython-1.70  54% |################               | ETA:  0:00:00   6.72 MB/sbiopython-1.70  55% |#################              | ETA:  0:00:00   6.84 MB/sbiopython-1.70  56% |#################              | ETA:  0:00:00   6.97 MB/sbiopython-1.70  58% |##################             | ETA:  0:00:00   6.90 MB/sbiopython-1.70  59% |##################             | ETA:  0:00:00   6.98 MB/sbiopython-1.70  60% |##################             | ETA:  0:00:00   7.10 MB/sbiopython-1.70  61% |###################            | ETA:  0:00:00   7.21 MB/sbiopython-1.70  63% |###################            | ETA:  0:00:00   7.33 MB/sbiopython-1.70  64% |###################            | ETA:  0:00:00   7.45 MB/sbiopython-1.70  65% |####################           | ETA:  0:00:00   7.56 MB/sbiopython-1.70  66% |####################           | ETA:  0:00:00   7.68 MB/sbiopython-1.70  68% |#####################          | ETA:  0:00:00   7.67 MB/sbiopython-1.70  69% |#####################          | ETA:  0:00:00   7.71 MB/sbiopython-1.70  70% |#####################          | ETA:  0:00:00   7.81 MB/sbiopython-1.70  71% |######################         | ETA:  0:00:00   7.92 MB/sbiopython-1.70  73% |######################         | ETA:  0:00:00   8.03 MB/sbiopython-1.70  74% |#######################        | ETA:  0:00:00   8.14 MB/sbiopython-1.70  75% |#######################        | ETA:  0:00:00   8.25 MB/sbiopython-1.70  76% |#######################        | ETA:  0:00:00   8.35 MB/sbiopython-1.70  77% |########################       | ETA:  0:00:00   8.45 MB/sbiopython-1.70  79% |########################       | ETA:  0:00:00   8.47 MB/sbiopython-1.70  80% |########################       | ETA:  0:00:00   8.56 MB/sbiopython-1.70  81% |#########################      | ETA:  0:00:00   8.54 MB/sbiopython-1.70  82% |#########################      | ETA:  0:00:00   8.63 MB/sbiopython-1.70  84% |##########################     | ETA:  0:00:00   8.73 MB/sbiopython-1.70  85% |##########################     | ETA:  0:00:00   8.83 MB/sbiopython-1.70  86% |##########################     | ETA:  0:00:00   8.94 MB/sbiopython-1.70  87% |###########################    | ETA:  0:00:00   9.04 MB/sbiopython-1.70  89% |###########################    | ETA:  0:00:00   9.13 MB/sbiopython-1.70  90% |############################   | ETA:  0:00:00   9.17 MB/sbiopython-1.70  91% |############################   | ETA:  0:00:00   9.27 MB/sbiopython-1.70  92% |############################   | ETA:  0:00:00   9.37 MB/sbiopython-1.70  94% |#############################  | ETA:  0:00:00   9.44 MB/sbiopython-1.70  95% |#############################  | ETA:  0:00:00   9.54 MB/sbiopython-1.70  96% |#############################  | ETA:  0:00:00   9.64 MB/sbiopython-1.70  97% |############################## | ETA:  0:00:00   9.74 MB/sbiopython-1.70  98% |############################## | ETA:  0:00:00   9.83 MB/sbiopython-1.70 100% |###############################| ETA:  0:00:00   9.90 MB/sbiopython-1.70 100% |###############################| Time: 0:00:00   9.89 MB/s
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ HttpParser and PyCall had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("HttpParser", "PyCall")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:650
[ Info: Package database updated

>>> 'Pkg.test("BiomolecularStructures")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     913786 s        115 s      56378 s     309010 s         12 s
       #2  3499 MHz     217462 s         42 s      24709 s    1239900 s          0 s
       
  Memory: 2.93927001953125 GB (692.44921875 MB free)
  Uptime: 15085.0 sec
  Load Avg:  0.9970703125  0.998046875  1.0029296875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BiomolecularStructures        0.2.3
 - JSON                          0.16.4
27 additional packages:
 - BaseTestDeprecated            0.1.0
 - BinDeps                       0.8.5
 - BioSeq                        0.4.0
 - BufferedStreams               0.3.3
 - Codecs                        0.4.0
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.46.0
 - Conda                         0.7.1
 - FastaIO                       0.3.0
 - FixedPointNumbers             0.4.3
 - Formatting                    0.3.0
 - GZip                          0.3.0
 - HttpCommon                    0.3.0
 - HttpParser                    0.3.0
 - LaTeXStrings                  0.3.0
 - Libz                          0.2.4
 - LightXML                      0.5.0
 - MacroTools                    0.4.0
 - MbedTLS                       0.5.4
 - Nullables                     0.0.3
 - PyCall                        1.15.0
 - PyPlot                        2.3.2
 - Reexport                      0.1.0
 - Requests                      0.5.1
 - SHA                           0.5.3
 - URIParser                     0.3.0
[ Info: Testing BiomolecularStructures
ERROR: LoadError: LoadError: syntax: extra token "Result" after end of expression
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] _require(::Symbol) at ./loading.jl:453
 [4] require(::Symbol) at ./loading.jl:333
 [5] top-level scope at /home/vagrant/.julia/v0.7/BiomolecularStructures/test/runtests.jl:2
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/BaseTestDeprecated/src/BaseTestDeprecated.jl:8
in expression starting at /home/vagrant/.julia/v0.7/BiomolecularStructures/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for BiomolecularStructures
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BiomolecularStructures/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
ERROR: BiomolecularStructures had test errors

>>> End of log
