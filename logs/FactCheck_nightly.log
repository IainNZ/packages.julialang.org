>>> 'Pkg.add("FactCheck")' log
INFO: Installing FactCheck v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date a you may not have the latest version of FactCheck
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'using FactCheck' log

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:26.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:127.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:145.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:339.
Use "Dict{Any,Any}(a=>b, ...)" instead.
Julia Version 0.4.0-dev+1928
Commit b1c99af (2014-12-03 08:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:26.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:127.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:145.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:339.
Use "Dict{Any,Any}(a=>b, ...)" instead.
Testing Result counting and printing, not actual errors!
Test error pathways
  Success :: 1 => 1
  Failure   :: (line:-1) :: one doesn't equal two! :: got 1
    1 => 2
  Error   :: (line:-1) :: domains are tricky
    2 ^ -1 => 0.5
DomainError
Cannot raise an integer x to a negative power -n. Make x a float by adding
a zero decimal (e.g. 2.0^-n instead of 2^-n), or write 1/x^n, float(x)^-n, or (x//1)^-n
 in ^ at intfuncs.jl:104
 in anonymous at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:125
 in do_fact at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:155
 in anonymous at /home/idunning/pkgtest/.julia/v0.4/FactCheck/test/runtests.jl:125
 in facts at /home/idunning/pkgtest/.julia/v0.4/FactCheck/src/FactCheck.jl:261
 in include at ./boot.jl:242
 in include_from_node1 at loading.jl:128
 in process_options at ./client.jl:300
 in _start at ./client.jl:382
 in _start_3B_4058 at /home/idunning/julia04/usr/bin/../lib/julia/sys.so
  Pending
Out of 4 total facts:
  Verified: 1
  Failed:   1
  Errored:  1
  Pending:  1
Done, begin actual FactCheck tests
Testing core functionality
6 facts verified.
FactCheck assertion helper functions
  `not` works for values and functions
  `truthy` is anything other than nothing or false (which is 0)
  `anything` is always true
  `exactly` can be used to check object equality
  `roughly` compares numbers... roughly
  `roughly` compares matrixes... roughly
  `anyof` compares with all arguments
  less_than
  less_than_or_equal
  greater_than
  greater_than_or_equal
34 facts verified.
INFO: Testing FactCheck
INFO: FactCheck tests passed
INFO: No packages to install, update or remove

>>> end of log
