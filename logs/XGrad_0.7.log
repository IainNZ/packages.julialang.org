>>> 'Pkg.add("XGrad")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Cloning cache of XGrad from https://github.com/dfdx/XGrad.jl.git
[ Info: Installing DataStructures v0.7.4
[ Info: Installing Einsum v0.1.0
[ Info: Installing Espresso v0.4.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing Matcha v0.1.1
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing Sugar v0.4.3
[ Info: Installing XGrad v0.1.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of XGrad
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("XGrad")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3664
Commit 9d5aebb07a (2018-01-30 22:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    5352691 s       6826 s     253771 s    1562525 s         89 s
       #2  3500 MHz    1357225 s        114 s     102743 s    6755498 s          2 s
       
  Memory: 2.93927001953125 GB (1604.8359375 MB free)
  Uptime: 83691.0 sec
  Load Avg:  1.0048828125  1.0146484375  1.0029296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - XGrad                         0.1.0
10 additional packages:
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - Einsum                        0.1.0
 - Espresso                      0.4.0
 - MacroTools                    0.4.0
 - Matcha                        0.1.1
 - Nullables                     0.0.3
 - StaticArrays                  0.6.6
 - Sugar                         0.4.3
 - tmp8ZAgRW                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Computing test dependencies for XGrad...
[ Info: Installing BinDeps v0.8.6
[ Info: Installing Calculus v0.2.2
[ Info: Installing CommonSubexpressions v0.0.1
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.3
[ Info: Installing Distributions v0.15.0
[ Info: Installing ForwardDiff v0.7.3
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing PDMats v0.8.0
[ Info: Installing QuadGK v0.2.0
[ Info: Installing ReverseDiff v0.2.0
[ Info: Installing Rmath v0.3.2
[ Info: Installing SHA v0.5.6
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building Rmath
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:47
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Testing XGrad
┌ Warning: Deprecated syntax `([ val for (name, val) = inputs ]...)` at /home/vagrant/.julia/v0.7/XGrad/test/runtests.jl:6.
│ Use `([ val for (name, val) = inputs ]...,)` instead.
└ @ nothing runtests.jl:6
┌ Warning: Deprecated syntax `([ typeof(val) for (name, val) = inputs ]...)` at /home/vagrant/.julia/v0.7/XGrad/src/xdiff.jl:248.
│ Use `([ typeof(val) for (name, val) = inputs ]...,)` instead.
└ @ nothing xdiff.jl:248
┌ Warning: Deprecated syntax `(sz_arr...)` at /home/vagrant/.julia/v0.7/XGrad/src/xgrad0.jl:17.
│ Use `(sz_arr...,)` instead.
└ @ nothing xgrad0.jl:17
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:30.
│ Use `struct` instead.
└ @ nothing tape.jl:30
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:52.
│ Use `struct` instead.
└ @ nothing tape.jl:52
┌ Warning: Deprecated syntax `parametric method syntax record!{InstructionType}(tp::InstructionTape, ::Type{InstructionType}, args...)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:10.
│ Use `record!(tp::InstructionTape, #unused#::Type{InstructionType}, args...) where InstructionType` instead.
└ @ nothing tape.jl:10
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScalarInstruction{F, I, O, C}}){F, I, O, C}(func, input, output, cache)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:37.
│ Use `(::Type{ScalarInstruction{F, I, O, C}})(func, input, output, cache) where {F, I, O, C}` instead.
└ @ nothing tape.jl:37
┌ Warning: Deprecated syntax `parametric method syntax _ScalarInstruction{F, I, O, C}(func::F, input::I, output::O, cache::C)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:42.
│ Use `_ScalarInstruction(func::F, input::I, output::O, cache::C) where {F, I, O, C}` instead.
└ @ nothing tape.jl:42
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SpecialInstruction{F, I, O, C}}){F, I, O, C}(func, input, output, cache)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:59.
│ Use `(::Type{SpecialInstruction{F, I, O, C}})(func, input, output, cache) where {F, I, O, C}` instead.
└ @ nothing tape.jl:59
┌ Warning: Deprecated syntax `parametric method syntax _SpecialInstruction{F, I, O, C}(func::F, input::I, output::O, cache::C)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tape.jl:64.
│ Use `_SpecialInstruction(func::F, input::I, output::O, cache::C) where {F, I, O, C}` instead.
└ @ nothing tape.jl:64
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:47.
│ Use `mutable struct` instead.
└ @ nothing tracked.jl:47
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:66.
│ Use `struct` instead.
└ @ nothing tracked.jl:66
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TrackedReal{V, D, O}}){V, D, O}(value, deriv, tape, index, origin)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:53.
│ Use `(::Type{TrackedReal{V, D, O}})(value, deriv, tape, index, origin) where {V, D, O}` instead.
└ @ nothing tracked.jl:53
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TrackedReal{V, D, O}}){V, D, O}(value, deriv, tape)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:54.
│ Use `(::Type{TrackedReal{V, D, O}})(value, deriv, tape) where {V, D, O}` instead.
└ @ nothing tracked.jl:54
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TrackedReal{V, D, O}}){V, D, O}(value, deriv)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:55.
│ Use `(::Type{TrackedReal{V, D, O}})(value, deriv) where {V, D, O}` instead.
└ @ nothing tracked.jl:55
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TrackedReal{V, D, O}}){V, D, O}(value)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:56.
│ Use `(::Type{TrackedReal{V, D, O}})(value) where {V, D, O}` instead.
└ @ nothing tracked.jl:56
┌ Warning: Deprecated syntax `parametric method syntax TrackedReal{V, D, O}(v::V, a::D, tp::InstructionTape, i::Int, o::O)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:59.
│ Use `TrackedReal(v::V, a::D, tp::InstructionTape, i::Int, o::O) where {V, D, O}` instead.
└ @ nothing tracked.jl:59
┌ Warning: Deprecated syntax `parametric method syntax TrackedReal{V, D}(v::V, a::D, tp::InstructionTape = NULL_TAPE)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:61.
│ Use `TrackedReal(v::V, a::D, tp::InstructionTape = NULL_TAPE) where {V, D}` instead.
└ @ nothing tracked.jl:61
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TrackedArray{V, D, N, VA, DA}}){V, D, N, VA, DA}(value::AbstractArray{V, N}, deriv::AbstractArray{D, N}, tape::InstructionTape)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:73.
│ Use `(::Type{TrackedArray{V, D, N, VA, DA}})(value::AbstractArray{V, N}, deriv::AbstractArray{D, N}, tape::InstructionTape) where {V, D, N, VA, DA}` instead.
└ @ nothing tracked.jl:73
┌ Warning: Deprecated syntax `parametric method syntax TrackedArray{V, D, N}(value::AbstractArray{V, N}, deriv::AbstractArray{D, N}, tape::InstructionTape)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:82.
│ Use `TrackedArray(value::AbstractArray{V, N}, deriv::AbstractArray{D, N}, tape::InstructionTape) where {V, D, N}` instead.
└ @ nothing tracked.jl:82
┌ Warning: Deprecated syntax `parametric method syntax istracked{T}(::AbstractArray{T})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:92.
│ Use `istracked(#unused#::AbstractArray{T}) where T` instead.
└ @ nothing tracked.jl:92
┌ Warning: Deprecated syntax `parametric method syntax valtype{V}(::TrackedReal{V})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:102.
│ Use `valtype(#unused#::TrackedReal{V}) where V` instead.
└ @ nothing tracked.jl:102
┌ Warning: Deprecated syntax `parametric method syntax valtype{V, D, O}(::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:103.
│ Use `valtype(#unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:103
┌ Warning: Deprecated syntax `parametric method syntax valtype{V}(::TrackedArray{V})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:104.
│ Use `valtype(#unused#::TrackedArray{V}) where V` instead.
└ @ nothing tracked.jl:104
┌ Warning: Deprecated syntax `parametric method syntax valtype{V, D, VA, DA, N}(::Type{TrackedArray{V, D, N, VA, DA}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:105.
│ Use `valtype(#unused#::Type{TrackedArray{V, D, N, VA, DA}}) where {V, D, VA, DA, N}` instead.
└ @ nothing tracked.jl:105
┌ Warning: Deprecated syntax `parametric method syntax derivtype{V, D}(::TrackedReal{V, D})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:107.
│ Use `derivtype(#unused#::TrackedReal{V, D}) where {V, D}` instead.
└ @ nothing tracked.jl:107
┌ Warning: Deprecated syntax `parametric method syntax derivtype{V, D, O}(::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:108.
│ Use `derivtype(#unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:108
┌ Warning: Deprecated syntax `parametric method syntax derivtype{V, D}(t::TrackedArray{V, D})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:109.
│ Use `derivtype(t::TrackedArray{V, D}) where {V, D}` instead.
└ @ nothing tracked.jl:109
┌ Warning: Deprecated syntax `parametric method syntax derivtype{V, D, VA, DA, N}(::Type{TrackedArray{V, D, N, VA, DA}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:110.
│ Use `derivtype(#unused#::Type{TrackedArray{V, D, N, VA, DA}}) where {V, D, VA, DA, N}` instead.
└ @ nothing tracked.jl:110
┌ Warning: Deprecated syntax `parametric method syntax origintype{V, D, O}(::TrackedReal{V, D, O})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:112.
│ Use `origintype(#unused#::TrackedReal{V, D, O}) where {V, D, O}` instead.
└ @ nothing tracked.jl:112
┌ Warning: Deprecated syntax `parametric method syntax origintype{V, D, O}(::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:113.
│ Use `origintype(#unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:113
┌ Warning: Deprecated syntax `parametric method syntax value!{N}(t::NTuple{N, Any}, v::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:151.
│ Use `value!(t::NTuple{N, Any}, v::NTuple{N, Any}) where N` instead.
└ @ nothing tracked.jl:151
┌ Warning: Deprecated syntax `parametric method syntax deriv!{N}(t::NTuple{N, Any}, v::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:161.
│ Use `deriv!(t::NTuple{N, Any}, v::NTuple{N, Any}) where N` instead.
└ @ nothing tracked.jl:161
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T1 <: TrackedReal, T2 <: TrackedReal}(::Type{T1}, t::T2)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:225.
│ Use `Base.convert(#unused#::Type{T1}, t::T2) where {T1 <: TrackedReal, T2 <: TrackedReal}` instead.
└ @ nothing tracked.jl:225
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: TrackedReal}(::Type{Real}, t::T)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:246.
│ Use `Base.convert(#unused#::Type{Real}, t::T) where T <: TrackedReal` instead.
└ @ nothing tracked.jl:246
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{R <: Real, T <: TrackedReal}(::Type{R}, t::T)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:247.
│ Use `Base.convert(#unused#::Type{R}, t::T) where {R <: Real, T <: TrackedReal}` instead.
└ @ nothing tracked.jl:247
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: TrackedReal, R <: Real}(::Type{T}, x::R)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:248.
│ Use `Base.convert(#unused#::Type{T}, x::R) where {T <: TrackedReal, R <: Real}` instead.
└ @ nothing tracked.jl:248
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: TrackedReal}(::Type{T}, t::T)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:250.
│ Use `Base.convert(#unused#::Type{T}, t::T) where T <: TrackedReal` instead.
└ @ nothing tracked.jl:250
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: TrackedArray}(::Type{T}, t::T)` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:251.
│ Use `Base.convert(#unused#::Type{T}, t::T) where T <: TrackedArray` instead.
└ @ nothing tracked.jl:251
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Bool}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Bool}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Integer}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Integer}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Irrational{:e}}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Irrational{:e}}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Irrational{:π}}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Irrational{:π}}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Rational}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Rational}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{BigFloat}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{BigFloat}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{BigInt}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{BigInt}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{AbstractFloat}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{AbstractFloat}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Real}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Real}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V, D, O}(::Type{Dual}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:254.
│ Use `Base.promote_rule(#unused#::Type{Dual}, #unused#::Type{TrackedReal{V, D, O}}) where {V, D, O}` instead.
└ @ nothing tracked.jl:254
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{R <: Real, V, D, O}(::Type{R}, ::Type{TrackedReal{V, D, O}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:257.
│ Use `Base.promote_rule(#unused#::Type{R}, #unused#::Type{TrackedReal{V, D, O}}) where {R <: Real, V, D, O}` instead.
└ @ nothing tracked.jl:257
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{V1, V2, D1, D2, O1, O2}(::Type{TrackedReal{V1, D1, O1}}, ::Type{TrackedReal{V2, D2, O2}})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:258.
│ Use `Base.promote_rule(#unused#::Type{TrackedReal{V1, D1, O1}}, #unused#::Type{TrackedReal{V2, D2, O2}}) where {V1, V2, D1, D2, O1, O2}` instead.
└ @ nothing tracked.jl:258
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_array_type{T <: TrackedReal, F <: AbstractFloat}(_, ::Type{T}, ::Type{F})` around /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:260.
│ Use `Base.promote_array_type(_, #unused#::Type{T}, #unused#::Type{F}) where {T <: TrackedReal, F <: AbstractFloat}` instead.
└ @ nothing tracked.jl:260
ERROR: LoadError: LoadError: UndefVarError: promote_array_type not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:14
 [2] top-level scope
 [3] include at ./boot.jl:292 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1012
 [5] include at ./sysimg.jl:26 [inlined]
 [6] include(::String) at /home/vagrant/.julia/v0.7/ReverseDiff/src/ReverseDiff.jl:3
 [7] top-level scope
 [8] include at ./boot.jl:292 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:1012
 [10] include(::Module, ::String) at ./sysimg.jl:26
 [11] top-level scope
 [12] eval at ./boot.jl:295 [inlined]
 [13] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/ReverseDiff/src/tracked.jl:260
in expression starting at /home/vagrant/.julia/v0.7/ReverseDiff/src/ReverseDiff.jl:27
ERROR: LoadError: Failed to precompile ReverseDiff to /home/vagrant/.julia/lib/v0.7/ReverseDiff.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:949
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] exec_options(::Base.JLOptions) at ./client.jl:332
 [9] _start() at ./client.jl:447
in expression starting at /home/vagrant/.julia/v0.7/XGrad/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for XGrad
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/XGrad/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
[ Info: Removing BinDeps v0.8.6
[ Info: Removing Calculus v0.2.2
[ Info: Removing CommonSubexpressions v0.0.1
[ Info: Removing DiffResults v0.0.3
[ Info: Removing DiffRules v0.0.3
[ Info: Removing Distributions v0.15.0
[ Info: Removing ForwardDiff v0.7.3
[ Info: Removing FunctionWrappers v0.1.0
[ Info: Removing NaNMath v0.3.0
[ Info: Removing PDMats v0.8.0
[ Info: Removing QuadGK v0.2.0
[ Info: Removing ReverseDiff v0.2.0
[ Info: Removing Rmath v0.3.2
[ Info: Removing SHA v0.5.6
[ Info: Removing SortingAlgorithms v0.2.0
[ Info: Removing SpecialFunctions v0.3.8
[ Info: Removing StatsBase v0.19.5
[ Info: Removing StatsFuns v0.5.0
[ Info: Removing URIParser v0.3.0
ERROR: XGrad had test errors

>>> End of log
