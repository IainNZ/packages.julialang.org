>>> 'Pkg.add("AdaptiveDistanceFields")' log
INFO: Cloning cache of AdaptiveDistanceFields from https://github.com/rdeits/AdaptiveDistanceFields.jl.git
INFO: Cloning cache of RegionTrees from https://github.com/rdeits/RegionTrees.jl.git
INFO: Installing AdaptiveDistanceFields v0.0.1
INFO: Installing AxisAlgorithms v0.2.0
INFO: Installing Calculus v0.2.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing Interpolations v0.6.2
INFO: Installing IterTools v0.1.0
INFO: Installing NaNMath v0.2.6
INFO: Installing Ratios v0.1.0
INFO: Installing RegionTrees v0.1.0
INFO: Installing ShowItLikeYouBuildIt v0.1.0
INFO: Installing StaticArrays v0.6.1
INFO: Installing WoodburyMatrices v0.2.2
INFO: Package database updated

>>> 'Pkg.test("AdaptiveDistanceFields")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (890.46484375 MB free)
Uptime: 2245.0 sec
Load Avg:  1.0029296875  0.98583984375  0.86376953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     100552 s         64 s       5455 s      92803 s          1 s
#2  3499 MHz      48053 s         77 s       3131 s     167693 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AdaptiveDistanceFields        0.0.1
 - JSON                          0.13.0
12 additional packages:
 - AxisAlgorithms                0.2.0
 - Calculus                      0.2.2
 - Compat                        0.29.0
 - DualNumbers                   0.3.0
 - Interpolations                0.6.2
 - IterTools                     0.1.0
 - NaNMath                       0.2.6
 - Ratios                        0.1.0
 - RegionTrees                   0.1.0
 - ShowItLikeYouBuildIt          0.1.0
 - StaticArrays                  0.6.1
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for AdaptiveDistanceFields...
INFO: Cloning cache of CommonSubexpressions from https://github.com/rdeits/CommonSubexpressions.jl.git
INFO: Cloning cache of DiffBase from https://github.com/JuliaDiff/DiffBase.jl.git
INFO: Cloning cache of ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
INFO: Cloning cache of RealInterface from https://github.com/jrevels/RealInterface.jl.git
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DiffBase v0.2.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing RealInterface v0.0.3
INFO: Installing SpecialFunctions v0.3.0
INFO: Testing AdaptiveDistanceFields
Test Summary: | Pass  Total
coarse        | 2500   2500
Test Summary: | Pass  Total
fine          | 2500   2500
extrapolation: Error During Test
  Test threw an exception of type ErrorException
  Expression: isapprox(ForwardDiff.derivative((x->begin 
                adf(SVector(x, -1))
            end), 100), 1, atol=0.01, rtol=0.01)
  no promotion exists for Int64 and ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Float64,1}
  Stacktrace:
   [1] promote_type(::Type{Int64}, ::Type{ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Float64,1}}) at ./promotion.jl:161
   [2] promote_type(::Type{T} where T, ::Type{T} where T, ::Type{T} where T) at ./promotion.jl:127
   [3] gradient(...) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/indexing.jl:111
   [4] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/linear.jl:17 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrap_prep.jl:89 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:55 [inlined]
   [7] getindex at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:61 [inlined]
   [8] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Float64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:2
   [9] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::RegionTrees.HyperRectangle{2,Float64}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:16
   [10] (::AdaptiveDistanceFields.AdaptiveDistanceField{RegionTrees.Cell{Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear},2,Float64,4}})(::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/AdaptiveDistanceFields.jl:38
   [11] (::##11#17)(::ForwardDiff.Dual{ForwardDiff.Tag{##11#17,0x25717ab54e72bf71},Int64,1}) at ./<missing>:0
   [12] derivative(::##11#17, ::Int64) at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:19
   [13] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:39 [inlined]
   [14] macro expansion at ./test.jl:860 [inlined]
   [15] anonymous at ./<missing>:?
extrapolation: Error During Test
  Test threw an exception of type ErrorException
  Expression: isapprox(ForwardDiff.derivative((x->begin 
                adf(SVector(x, -1))
            end), -100), -1, atol=0.01, rtol=0.01)
  no promotion exists for Int64 and ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Float64,1}
  Stacktrace:
   [1] promote_type(::Type{Int64}, ::Type{ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Float64,1}}) at ./promotion.jl:161
   [2] promote_type(::Type{T} where T, ::Type{T} where T, ::Type{T} where T) at ./promotion.jl:127
   [3] gradient(...) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/indexing.jl:111
   [4] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/linear.jl:7 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrap_prep.jl:88 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:55 [inlined]
   [7] getindex at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:61 [inlined]
   [8] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Float64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:2
   [9] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::RegionTrees.HyperRectangle{2,Float64}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:16
   [10] (::AdaptiveDistanceFields.AdaptiveDistanceField{RegionTrees.Cell{Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear},2,Float64,4}})(::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/AdaptiveDistanceFields.jl:38
   [11] (::##12#18)(::ForwardDiff.Dual{ForwardDiff.Tag{##12#18,0x25717ab54e72bf71},Int64,1}) at ./<missing>:0
   [12] derivative(::##12#18, ::Int64) at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:19
   [13] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:40 [inlined]
   [14] macro expansion at ./test.jl:860 [inlined]
   [15] anonymous at ./<missing>:?
extrapolation: Error During Test
  Test threw an exception of type ErrorException
  Expression: isapprox(ForwardDiff.derivative((y->begin 
                adf(SVector(-2, y))
            end), 100), 1, atol=0.01, rtol=0.01)
  no promotion exists for ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Float64,1} and Int64
  Stacktrace:
   [1] promote_type(::Type{ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Float64,1}}, ::Type{Int64}) at ./promotion.jl:161
   [2] promote_type(::Type{T} where T, ::Type{T} where T, ::Type{T} where T) at ./promotion.jl:127
   [3] gradient(...) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/indexing.jl:111
   [4] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/linear.jl:17 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrap_prep.jl:89 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:55 [inlined]
   [7] getindex at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:61 [inlined]
   [8] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Float64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:2
   [9] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::RegionTrees.HyperRectangle{2,Float64}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:16
   [10] (::AdaptiveDistanceFields.AdaptiveDistanceField{RegionTrees.Cell{Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear},2,Float64,4}})(::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/AdaptiveDistanceFields.jl:38
   [11] (::##13#19)(::ForwardDiff.Dual{ForwardDiff.Tag{##13#19,0x25717ab54e72bf71},Int64,1}) at ./<missing>:0
   [12] derivative(::##13#19, ::Int64) at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:19
   [13] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:41 [inlined]
   [14] macro expansion at ./test.jl:860 [inlined]
   [15] anonymous at ./<missing>:?
extrapolation: Error During Test
  Test threw an exception of type ErrorException
  Expression: isapprox(ForwardDiff.derivative((y->begin 
                adf(SVector(-2, y))
            end), -100), -1, atol=0.01, rtol=0.01)
  no promotion exists for ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Float64,1} and Int64
  Stacktrace:
   [1] promote_type(::Type{ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Float64,1}}, ::Type{Int64}) at ./promotion.jl:161
   [2] promote_type(::Type{T} where T, ::Type{T} where T, ::Type{T} where T) at ./promotion.jl:127
   [3] gradient(...) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/indexing.jl:111
   [4] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/linear.jl:7 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrap_prep.jl:88 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:55 [inlined]
   [7] getindex at /home/vagrant/.julia/v0.6/Interpolations/src/extrapolation/extrapolation.jl:61 [inlined]
   [8] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Float64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:2
   [9] evaluate(::Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear}, ::RegionTrees.HyperRectangle{2,Float64}, ::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/interpolation.jl:16
   [10] (::AdaptiveDistanceFields.AdaptiveDistanceField{RegionTrees.Cell{Interpolations.Extrapolation{Float64,2,Interpolations.BSplineInterpolation{Float64,2,StaticArrays.SArray{Tuple{2,2},Float64,2,4},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,0},Interpolations.BSpline{Interpolations.Linear},Interpolations.OnGrid,Interpolations.Linear},2,Float64,4}})(::SVector{2,ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Int64,1}}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/AdaptiveDistanceFields.jl:38
   [11] (::##14#20)(::ForwardDiff.Dual{ForwardDiff.Tag{##14#20,0x25717ab54e72bf71},Int64,1}) at ./<missing>:0
   [12] derivative(::##14#20, ::Int64) at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:19
   [13] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:42 [inlined]
   [14] macro expansion at ./test.jl:860 [inlined]
   [15] anonymous at ./<missing>:?
Test Summary: | Error  Total
extrapolation |     4      4
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl, in expression starting on line 35
=======================[ ERROR: AdaptiveDistanceFields ]========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing CommonSubexpressions v0.0.1
INFO: Removing DiffBase v0.2.0
INFO: Removing ForwardDiff v0.5.0
INFO: Removing RealInterface v0.0.3
INFO: Removing SpecialFunctions v0.3.0
ERROR: AdaptiveDistanceFields had test errors

>>> End of log
