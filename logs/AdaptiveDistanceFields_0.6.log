>>> 'Pkg.add("AdaptiveDistanceFields")' log
INFO: Cloning cache of AdaptiveDistanceFields from https://github.com/rdeits/AdaptiveDistanceFields.jl.git
INFO: Cloning cache of RegionTrees from https://github.com/rdeits/RegionTrees.jl.git
INFO: Installing AdaptiveDistanceFields v0.0.1
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing Calculus v0.2.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing Interpolations v0.4.0
INFO: Installing Iterators v0.3.0
INFO: Installing NaNMath v0.2.4
INFO: Installing Ratios v0.0.4
INFO: Installing RegionTrees v0.0.3
INFO: Installing StaticArrays v0.4.0
INFO: Installing WoodburyMatrices v0.2.2
INFO: Package database updated

>>> 'Pkg.test("AdaptiveDistanceFields")' log
Julia Version 0.6.0-pre.beta.187
Commit 55c97fb (2017-04-17 23:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (905.8125 MB free)
Uptime: 1390.0 sec
Load Avg:  0.978515625  0.912109375  0.6201171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      60253 s         53 s       4314 s      56017 s          3 s
#2  3500 MHz      13368 s         92 s       2824 s     119906 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AdaptiveDistanceFields        0.0.1
 - JSON                          0.9.0
11 additional packages:
 - AxisAlgorithms                0.1.6
 - Calculus                      0.2.2
 - Compat                        0.23.0
 - DualNumbers                   0.3.0
 - Interpolations                0.4.0
 - Iterators                     0.3.0
 - NaNMath                       0.2.4
 - Ratios                        0.0.4
 - RegionTrees                   0.0.3
 - StaticArrays                  0.4.0
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for AdaptiveDistanceFields...
INFO: Cloning cache of DiffBase from https://github.com/JuliaDiff/DiffBase.jl.git
INFO: Cloning cache of ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
INFO: Installing DiffBase v0.1.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Testing AdaptiveDistanceFields

WARNING: deprecated syntax "abstract AbstractRefinery" at /home/vagrant/.julia/v0.6/RegionTrees/src/adaptivesampling.jl:2.
Use "abstract type AbstractRefinery end" instead.
coarse: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: getindex(::RegionTrees.TwosArray{2,StaticArrays.SVector{2,Float64},4}, ::Int64) is ambiguous. Candidates:
    getindex(b::RegionTrees.TwosArray, i::Integer) in RegionTrees at /home/vagrant/.julia/v0.6/RegionTrees/src/twosarray.jl:18
    getindex(a::StaticArrays.StaticArray, i::Int64) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:2
  Possible fix, define
    getindex(::RegionTrees.TwosArray, ::Int64)
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.6/StaticArrays/src/broadcast.jl:85 [inlined]
   [2] _broadcast at /home/vagrant/.julia/v0.6/StaticArrays/src/broadcast.jl:27 [inlined]
   [3] broadcast at /home/vagrant/.julia/v0.6/StaticArrays/src/broadcast.jl:8 [inlined]
   [4] refine_data(::AdaptiveDistanceFields.SignedDistanceRefinery{##1#3}, ::RegionTrees.HyperRectangle{2,Float64}) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/adaptivesampling.jl:25
   [5] AdaptiveDistanceFields.AdaptiveDistanceField(::Function, ::StaticArrays.SVector{2,Float64}, ::StaticArrays.SVector{2,Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/src/AdaptiveDistanceFields.jl:32
   [6] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:10 [inlined]
   [7] macro expansion at ./test.jl:853 [inlined]
   [8] anonymous at ./<missing>:?
   [9] include_from_node1(::String) at ./loading.jl:539
   [10] include(::String) at ./sysimg.jl:14
   [11] process_options(::Base.JLOptions) at ./client.jl:305
   [12] _start() at ./client.jl:371
Test Summary: | Error  Total
coarse        |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl, in expression starting on line 6
=======================[ ERROR: AdaptiveDistanceFields ]========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffBase v0.1.0
INFO: Removing ForwardDiff v0.4.2
INFO: Removing SpecialFunctions v0.1.1
ERROR: AdaptiveDistanceFields had test errors

>>> End of log
