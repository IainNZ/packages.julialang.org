>>> 'Pkg.add("FinancialToolbox")' log
INFO: Cloning cache of FinancialToolbox from https://github.com/rcalxrc08/FinancialToolbox.jl.git
INFO: Installing BinDeps v0.8.0
INFO: Installing FinancialToolbox v0.1.2
INFO: Installing SHA v0.5.2
INFO: Installing SpecialFunctions v0.3.5
INFO: Installing URIParser v0.2.0
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FinancialToolbox
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FinancialToolbox")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (900.984375 MB free)
Uptime: 70452.0 sec
Load Avg:  1.00634765625  0.876953125  0.83935546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4604968 s        131 s     194841 s    1220801 s         60 s
#2  3500 MHz    1277028 s       6634 s     124462 s    5508702 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FinancialToolbox              0.1.2
 - JSON                          0.16.1
5 additional packages:
 - BinDeps                       0.8.0
 - Compat                        0.37.0
 - SHA                           0.5.2
 - SpecialFunctions              0.3.5
 - URIParser                     0.2.0
INFO: Computing test dependencies for FinancialToolbox...
INFO: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing HyperDualNumbers v1.1.0
INFO: Installing NaNMath v0.3.0
INFO: Building SpecialFunctions
INFO: Testing FinancialToolbox
Running tests:

------------------------------------------------------------
  * testRealNumbers.jl *
Starting Standard Test
---  European Call: Price and Sensitivities
-----Testing Price
-----Testing Black Price
-----Testing Delta
-----Testing Theta
-----Testing Rho
-----Testing Lambda
-----Testing Implied Volatility
-----Testing Implied Volatility Black
-----Testing Implied Volatility Low X tol, High Y tol
-----Testing Implied Volatility Low Y tol, High X tol
---  European Put: Price and Sensitivities
-----Testing Price
-----Testing Price Black
-----Testing Delta
-----Testing Theta
-----Testing Rho
-----Testing Lambda
-----Testing Implied Volatility
-----Testing Implied Volatility Black
-----Testing Gamma
-----Testing Vega
Standard Test Passed

Starting Input Validation Test Real
----Testing Negative Spot Price
----Testing Negative Strike Price
----Testing Negative Time to Maturity
----Testing Negative Volatility
----Testing Negative Option Price
----Testing Negative Tollerance
Real Input Validation Test Passed
------------------------------------------------------------

------------------------------------------------------------
  * testComplexNumbers.jl *
Starting Complex Number Test
--- European Call Sensitivities: Complex Step Approximation
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
--- European Put Sensitivities: Complex Step Approximation
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vega
Complex Number Test Passed

Starting Input Validation Test Complex
----Testing Negative  Spot Price 
----Testing Negative  Strike Price 
----Testing Negative  Time to Maturity 
----Testing Negative  Volatility 
Complex Input Validation Test Passed
------------------------------------------------------------

------------------------------------------------------------
  * testDualNumbers.jl *
Starting Dual Numbers Test
--- European Call Sensitivities: DualNumbers
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vanna
--- European Put Sensitivities: DualNumbers
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vanna
-----Testing Vega
Dual Numbers Test Passed

Starting Input Validation Test Dual
----Testing Negative  Spot Price 
----Testing Negative  Strike Price 
----Testing Negative  Time to Maturity 
----Testing Negative  Volatility 
Dual Input Validation Test Passed
------------------------------------------------------------

------------------------------------------------------------
  * testHyperDualNumbers.jl *
Starting Hyper Dual Numbers Test
--- European Call Sensitivities: HyperDualNumbers
-----Testing Delta
-----Testing Gamma
-----Testing Gamma  2
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vanna
-----Testing Vanna  2
--- European Put Sensitivities: HyperDualNumbers
-----Testing Delta
-----Testing Rho
-----Testing Theta
-----Testing Lambda
-----Testing Vanna
-----Testing Vanna  2
-----Testing Vega
Hyper Dual Numbers Test Passed

Starting Input Validation Test Hyper Dual Numbers
----Testing Negative  Spot Price 
----Testing Negative  Strike Price 
----Testing Negative  Time to Maturity 
----Testing Negative  Volatility 
Hyper Dual Input Validation Test Passed
------------------------------------------------------------
INFO: FinancialToolbox tests passed
INFO: Removing Calculus v0.2.2
INFO: Removing DualNumbers v0.3.0
INFO: Removing HyperDualNumbers v1.1.0
INFO: Removing NaNMath v0.3.0

>>> End of log
