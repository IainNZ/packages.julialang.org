>>> 'Pkg.add("ReverseDiffSparse")' log
[ Info: Installing BinDeps v0.8.6
[ Info: Installing Calculus v0.2.2
[ Info: Installing CommonSubexpressions v0.0.1
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.3
[ Info: Installing ForwardDiff v0.7.2
[ Info: Installing MathProgBase v0.7.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing ReverseDiffSparse v0.8.1
[ Info: Installing SHA v0.5.6
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ReverseDiffSparse
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReverseDiffSparse")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1993063 s         86 s     104099 s     516905 s         18 s
       #2  3499 MHz     417293 s       7447 s      40523 s    2568257 s          0 s
       
  Memory: 2.93927001953125 GB (832.86328125 MB free)
  Uptime: 30794.0 sec
  Load Avg:  0.97216796875  0.97509765625  0.95654296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - ReverseDiffSparse             0.8.1
16 additional packages:
 - BinDeps                       0.8.6
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - ForwardDiff                   0.7.2
 - MathProgBase                  0.7.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
 - tmpJpLd7f                     0.0.0-             non-repo (unregistered)
[ Info: Computing test dependencies for ReverseDiffSparse...
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing Distributions v0.15.0
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing LightGraphs v0.11.1
[ Info: Installing MacroTools v0.4.0
[ Info: Installing PDMats v0.8.0
[ Info: Installing QuadGK v0.2.0
[ Info: Installing Rmath v0.3.2
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building Rmath
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:47
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Testing ReverseDiffSparse
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ReverseDiffSparse/test/runtests.jl:258.
│ Use `mutable struct` instead.
└ @ nothing runtests.jl:258
┌ Warning: Deprecated syntax `parametric method syntax forward_eval{T}(storage::Vector{T}, partials_storage::Vector{T}, nd::Vector{NodeData}, adj, const_values, parameter_values, x_values::Vector{T}, subexpression_values, user_input_buffer = [], user_output_buffer = []; user_operators::UserOperatorRegistry = UserOperatorRegistry())` around /home/vagrant/.julia/v0.7/ReverseDiffSparse/src/forward.jl:15.
│ Use `forward_eval(storage::Vector{T}, partials_storage::Vector{T}, nd::Vector{NodeData}, adj, const_values, parameter_values, x_values::Vector{T}, subexpression_values, user_input_buffer = [], user_output_buffer = []; user_operators::UserOperatorRegistry = UserOperatorRegistry()) where T` instead.
└ @ nothing forward.jl:15
┌ Warning: Deprecated syntax `parametric method syntax forward_eval_ϵ{N, T}(storage::Vector{T}, storage_ϵ::DenseVector{ForwardDiff.Partials{N, T}}, partials_storage::Vector{T}, partials_storage_ϵ::DenseVector{ForwardDiff.Partials{N, T}}, nd::Vector{NodeData}, adj, x_values_ϵ, subexpression_values_ϵ; user_operators::UserOperatorRegistry = UserOperatorRegistry())` around /home/vagrant/.julia/v0.7/ReverseDiffSparse/src/forward.jl:212.
│ Use `forward_eval_ϵ(storage::Vector{T}, storage_ϵ::DenseVector{ForwardDiff.Partials{N, T}}, partials_storage::Vector{T}, partials_storage_ϵ::DenseVector{ForwardDiff.Partials{N, T}}, nd::Vector{NodeData}, adj, x_values_ϵ, subexpression_values_ϵ; user_operators::UserOperatorRegistry = UserOperatorRegistry()) where {N, T}` instead.
└ @ nothing forward.jl:212
┌ Warning: Deprecated syntax `parametric method syntax eval_univariate{T}(operator_id, x::T)` around /home/vagrant/.julia/v0.7/ReverseDiffSparse/src/forward.jl:364.
│ Use `eval_univariate(operator_id, x::T) where T` instead.
└ @ nothing forward.jl:364
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = simplify(::Expr) at symbolic.jl:96
└ @ Calculus symbolic.jl:96
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = differentiate(::Calculus.SymbolParameter{:*}, ::Array{Any,1}, ::Symbol) at differentiate.jl:82
└ @ Calculus differentiate.jl:82
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = differentiate(::Calculus.SymbolParameter{:*}, ::Array{Any,1}, ::Symbol) at differentiate.jl:84
└ @ Calculus differentiate.jl:84
ERROR: LoadError: LoadError: LoadError: TypeError: in log, in ccall: first argument not a pointer or valid constant expression, expected Ptr, got Tuple{String,String}
Stacktrace:
 [1] log(::Float64) at /home/vagrant/.julia/v0.7/NaNMath/src/NaNMath.jl:7
 [2] log(::Int64) at /home/vagrant/.julia/v0.7/NaNMath/src/NaNMath.jl:9
 [3] top-level scope
in expression starting at /home/vagrant/.julia/v0.7/ReverseDiffSparse/src/forward.jl:384
in expression starting at /home/vagrant/.julia/v0.7/ReverseDiffSparse/src/ReverseDiffSparse.jl:22
in expression starting at /home/vagrant/.julia/v0.7/ReverseDiffSparse/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for ReverseDiffSparse
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ReverseDiffSparse/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: Removing CodecZlib v0.4.2
[ Info: Removing Distributions v0.15.0
[ Info: Removing DualNumbers v0.3.0
[ Info: Removing LightGraphs v0.11.1
[ Info: Removing MacroTools v0.4.0
[ Info: Removing PDMats v0.8.0
[ Info: Removing QuadGK v0.2.0
[ Info: Removing Rmath v0.3.2
[ Info: Removing SimpleTraits v0.5.1
[ Info: Removing SortingAlgorithms v0.2.0
[ Info: Removing StatsBase v0.19.5
[ Info: Removing StatsFuns v0.5.0
[ Info: Removing TranscodingStreams v0.4.1
ERROR: ReverseDiffSparse had test errors

>>> End of log
