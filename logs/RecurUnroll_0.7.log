>>> 'Pkg.add("RecurUnroll")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of RecurUnroll from https://github.com/bramtayl/RecurUnroll.jl.git
[ Info: Installing Missings v0.2.9
[ Info: Installing RecurUnroll v0.1.1
[ Info: Package database updated

>>> 'Pkg.test("RecurUnroll")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2016942 s       6476 s     153058 s     551009 s         18 s
       #2  3500 MHz     412042 s        100 s      50462 s    2771878 s          1 s
       
  Memory: 2.939197540283203 GB (983.9765625 MB free)
  Uptime: 32895.0 sec
  Load Avg:  1.0029296875  1.0146484375  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - RecurUnroll                   0.1.1
3 additional packages:
 - Compat                        0.64.0
 - Missings                      0.2.9
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for RecurUnroll...
[ Info: Cloning cache of TypedBools from https://github.com/bramtayl/TypedBools.jl.git
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing Documenter v0.17.0
[ Info: Installing TypedBools v0.0.3
[ Info: Testing RecurUnroll
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:162-169

> Code block:

```jldoctest
julia> using RecurUnroll

julia> import TypedBools: same_type

julia> filter_unrolled(pair -> same_type(pair[1], pair[2]), ((1, 2), (1, "a")))
((1, 2),)
```

> Subexpression:

    import TypedBools: same_type

> Output Diff (REQUIRES COLOR):

ERROR: LoadError: cannot add methods to a builtin function
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:314 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] _require(::Base.PkgId) at ./loading.jl:993
 [5] require(::Base.PkgId) at ./loading.jl:874
 [6] require(::Module, ::Symbol) at ./loading.jl:869
in expression starting at /home/vagrant/.julia/v0.7/TypedBools/src/TypedBools.jl:101

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:162-169

> Code block:

```jldoctest
julia> using RecurUnroll

julia> import TypedBools: same_type

julia> filter_unrolled(pair -> same_type(pair[1], pair[2]), ((1, 2), (1, "a")))
((1, 2),)
```

> Subexpression:

    filter_unrolled(pair -> same_type(pair[1], pair[2]), ((1, 2), (1, "a")))

> Output Diff (REQUIRES COLOR):

((1, 2),)ERROR: UndefVarError: same_type not defined
Stacktrace:
 [1] (::getfield( Symbol("##1#2")))(::Tuple{Int64,Int64}) at ./none:1
 [2] map at ./tuple.jl:152 [inlined]
 [3] filter_unrolled(::Function, ::Tuple{Tuple{Int64,Int64},Tuple{Int64,String}}) at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:171
 [4] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:102-107

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred find_unrolled((True(), False(), True()))
(1, 3)
```

> Subexpression:

    using RecurUnroll, TypedBools, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:102-107

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred find_unrolled((True(), False(), True()))
(1, 3)
```

> Subexpression:

    @inferred find_unrolled((True(), False(), True()))

> Output Diff (REQUIRES COLOR):

(1, 3)ERROR: TypeError: non-boolean (TypedBools.True) used in boolean context
Stacktrace:
 [1] find_unrolled at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:111 [inlined]
 [2] find_unrolled at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:110 [inlined] (repeats 2 times)
 [3] find_unrolled(::Tuple{TypedBools.True,TypedBools.False,TypedBools.True}) at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:98
 [4] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:43-48

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred getindex_unrolled((1, "a", 1.0), (True(), False(), True()))
(1, 1.0)
```

> Subexpression:

    using RecurUnroll, TypedBools, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:43-48

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred getindex_unrolled((1, "a", 1.0), (True(), False(), True()))
(1, 1.0)
```

> Subexpression:

    @inferred getindex_unrolled((1, "a", 1.0), (True(), False(), True()))

> Output Diff (REQUIRES COLOR):

(1, 1.0)ERROR: TypeError: non-boolean (TypedBools.True) used in boolean context
Stacktrace:
 [1] getindex_unrolled at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:52 [inlined]
 [2] getindex_unrolled at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:51 [inlined] (repeats 2 times)
 [3] top-level scope

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:20-25

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred reduce_unrolled(&, (True(), False(), True()))
TypedBools.False()
```

> Subexpression:

    using RecurUnroll, TypedBools, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:62-72

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred setindex_many_unrolled(
            (1, "a", 1.0),
            (1,),
            (True(), False(), True()),
            0
        )
(1, "a", 0)
```

> Subexpression:

    using RecurUnroll, TypedBools, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:62-72

> Code block:

```jldoctest
julia> using RecurUnroll, TypedBools, Base.Test

julia> @inferred setindex_many_unrolled(
            (1, "a", 1.0),
            (1,),
            (True(), False(), True()),
            0
        )
(1, "a", 0)
```

> Subexpression:

    @inferred setindex_many_unrolled(
         (1, "a", 1.0),
         (1,),
         (True(), False(), True()),
         0
     )

> Output Diff (REQUIRES COLOR):

(1, "a", 0)ERROR: TypeError: non-boolean (TypedBools.True) used in boolean context
Stacktrace:
 [1] setindex_many_unrolled(::Tuple{Int64,String,Float64}, ::Tuple{Int64}, ::Tuple{TypedBools.True,TypedBools.False,TypedBools.True}, ::Int64) at /home/vagrant/.julia/v0.7/RecurUnroll/src/RecurUnroll.jl:85
 [2] top-level scope

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202
 [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:168
 [4] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:205 [inlined]
 [5] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:72
 [6] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :checkdocs, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,Symbol,String}}, ::typeof(Documenter.makedocs)) at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:204
 [7] top-level scope
 [8] include at ./boot.jl:314 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:1067
 [10] include(::Module, ::String) at ./sysimg.jl:29
 [11] exec_options(::Base.JLOptions) at ./client.jl:327
 [12] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for RecurUnroll
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/RecurUnroll/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
[ Info: Removing DocStringExtensions v0.4.4
[ Info: Removing Documenter v0.17.0
[ Info: Removing TypedBools v0.0.3
ERROR: RecurUnroll had test errors

>>> End of log
