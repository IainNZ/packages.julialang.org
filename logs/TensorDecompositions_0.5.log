>>> 'Pkg.add("TensorDecompositions")' log
INFO: Cloning cache of TensorDecompositions from https://github.com/yunjhongwu/TensorDecompositions.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing Distributions v0.9.0
INFO: Installing FactCheck v0.4.3
INFO: Installing PDMats v0.4.1
INFO: Installing ProgressMeter v0.3.1
INFO: Installing StatsBase v0.8.1
INFO: Installing StatsFuns v0.2.2
INFO: Installing TensorDecompositions v0.1.0
INFO: Installing TensorOperations v0.4.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorDecompositions
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorDecompositions")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing TensorDecompositions
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorOperations/src/indexnotation/tensormacro.jl, in expression starting on line 4

WARNING: deprecated syntax "call(::Type{IndexedObject{I,C}}, ...)".
Use "(::Type{IndexedObject{I,C}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IndexedObject{I,C}}, ...)".
Use "(::Type{IndexedObject{I,C}})(...)" instead.

WARNING: deprecated syntax "call(::Type{Tucker}, ...)".
Use "(::Type{Tucker})(...)" instead.

WARNING: deprecated syntax "call(::Type{CANDECOMP}, ...)".
Use "(::Type{CANDECOMP})(...)" instead.
ERROR: LoadError: LoadError: LoadError: BoundsError: attempt to access svec()
  at index [1]
 in getindex(::SimpleVector, ::Int64) at ./essentials.jl:162
 in macro expansion; at ./docs/Docs.jl:480 [inlined]
 in anonymous at ./<missing>:480
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorDecompositions/src/candecomp.jl, in expression starting on line 210
while loading /home/vagrant/.julia/v0.5/TensorDecompositions/src/TensorDecompositions.jl, in expression starting on line 36
while loading /home/vagrant/.julia/v0.5/TensorDecompositions/test/runtests.jl, in expression starting on line 1
========================[ ERROR: TensorDecompositions ]=========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/TensorDecompositions/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: TensorDecompositions had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
