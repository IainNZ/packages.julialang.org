>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (994.85546875 MB free)
Uptime: 13969.0 sec
Load Avg:  1.04736328125  1.001953125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     808700 s       3994 s      91847 s     327710 s         20 s
#2  3496 MHz     266552 s       3012 s      42325 s    1051465 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.22073860603707796	0.8480514672945334	0.8414394912514049	0.9634830066545472
two	0.9205551391133253	0.3869462735933886	0.3971692794453301	0.1333017313275522
a	7
b	42
c	79
d	12
e	87
f	61
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │  0.0431362   0.0910243    0.726005
:b          │  0.0492997    0.607454  0.00120957 0.04313620404091667 0.04313620404091667
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │  0.0431362   0.0910243    0.726005
:b    │  0.0492997    0.607454  0.00120957
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │  0.0431362   0.0910243    0.726005
:b          │  0.0492997    0.607454  0.00120957
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │  0.0431362   0.0910243    0.726005
:b    │  0.0492997    0.607454  0.00120957
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.137059  0.467259  0.667034  0.587614
二              │ 0.734631   0.95513    0.8563  0.709797
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.322246  0.224253

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.674994  0.364153
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.99391
2     │ 0.525609

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.437505
2     │ 0.860467
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.855599  0.970964
2     │ 0.521924  0.453769
Timing named index: 0.000955683, array index: 0.000714665, named key: 0.113436501
Timing sum large sparse array: 0.011331866, named: 0.015717484
done!
INFO: NamedArrays tests passed

>>> End of log
