>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (976.59375 MB free)
Uptime: 14020.0 sec
Load Avg:  0.94580078125  0.9697265625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     816050 s        115 s      79937 s     332556 s         21 s
#2  3498 MHz     239642 s       6237 s      37684 s    1080161 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.35977854637597195	0.09599808322187009	0.43540402285721824	0.8089902142303629
two	0.4336520225364837	0.39840105685662697	0.9433435104637895	0.5784271498086351
a	92
b	79
c	70
d	50
e	13
f	39
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │       :c        :d        :e
────────────┼─────────────────────────────
:a          │ 0.177888  0.115317  0.823013
:b          │ 0.274529  0.744595  0.949497 0.17788830734770067 0.17788830734770067
2×3 Named Array{Float64,2}
A ╲ B │       :c        :d        :e
──────┼─────────────────────────────
:a    │ 0.177888  0.115317  0.823013
:b    │ 0.274529  0.744595  0.949497
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │       :c        :d        :e
────────────┼─────────────────────────────
:a          │ 0.177888  0.115317  0.823013
:b          │ 0.274529  0.744595  0.949497
2×3 Named Array{Float64,2}
A ╲ B │       :c        :d        :e
──────┼─────────────────────────────
:a    │ 0.177888  0.115317  0.823013
:b    │ 0.274529  0.744595  0.949497
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │         一          二          三          四
────────────────┼───────────────────────────────────────────
一              │   0.974468    0.765782    0.950943    0.956903
二              │ 0.00148747    0.580528    0.936239    0.694125
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.914934  0.171758

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.40417  0.519935
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.189679
2     │ 0.944856

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.35407
2     │ 0.830329
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.238077     0.814872
2     │    0.251223  0.000898336
Timing named index: 0.001509538, array index: 0.000601615, named key: 0.115545834
Timing sum large sparse array: 0.023643584, named: 0.03352313
done!
INFO: NamedArrays tests passed

>>> End of log
