>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (736.3515625 MB free)
Uptime: 8357.0 sec
Load Avg:  1.4111328125  1.1923828125  1.107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     453480 s        408 s      39699 s     245952 s         13 s
#2  3499 MHz     128882 s       5720 s      18906 s     664677 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.22.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.08816265964971093	0.835048570014836	0.19777187543893837	0.4552019462024719
two	0.6034614613938316	0.9694592208715795	0.8633291120023678	0.4369778793964598
a	100
b	53
c	34
d	17
e	75
f	9
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.908877  0.117381  0.708947
b           │ 0.630816  0.471605  0.773924 0.908877395678545 0.908877395678545
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.908877  0.117381  0.708947
b     │ 0.630816  0.471605  0.773924
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.908877  0.117381  0.708947
b           │ 0.630816  0.471605  0.773924
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.908877  0.117381  0.708947
b     │ 0.630816  0.471605  0.773924
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.273223   0.734776   0.774314   0.360427
二              │  0.918113  0.0376961   0.105676   0.711084
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140677790055408
0-element Named Array{Any,1}

[0.875867 0.717939 0.483723 0.409178; 0.339956 0.17736 0.997753 0.753438]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.875867  0.717939  0.483723  0.409178
two   │ 0.339956   0.17736  0.997753  0.7534382×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.875867  0.717939  0.483723  0.409178
two   │ 0.339956   0.17736  0.997753  0.7534382×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.98109     -0.373002  …      -1.30186     -0.609401
2     │    -0.653516     -0.667488  …       2.96555     -0.8782351000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   2.25196   0.428736
2     │   0.69474   0.186697
3     │ -0.796136   -1.40787
4     │  0.418007   -2.15966
5     │ -0.138683  -0.223666
6     │ -0.478217   0.641861
7     │   1.34103   -1.80339
8     │  -1.38922   0.961121
9     │ -0.651661   0.291672
⋮               ⋮          ⋮
992   │ -0.251264   0.677387
993   │  0.930385   -1.69158
994   │  0.758689   0.819159
995   │ -0.895572  -0.169056
996   │ -0.706033  -0.191794
997   │  0.838828   0.130522
998   │  -1.23841    1.58025
999   │  -1.36451   0.359353
1000  │ -0.210126  -0.7609981000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.272921
2    │ -0.676155
3    │ -0.175411
4    │   1.47697
5    │ 0.0297839
6    │  0.329244
7    │ -0.647091
8    │  -1.15931
9    │   1.71837
⋮              ⋮
992  │ -0.479378
993  │  0.752654
994  │   1.30979
995  │  -0.57663
996  │  -1.98234
997  │   0.56947
998  │   0.12382
999  │  -0.68185
1000 │  0.5942342×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.691237   0.60736
1           │ 0.863449  0.268241

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.815081  0.575041
1           │ 0.521736  0.996582
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.389208
2  │ 0.874912
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.835984  0.720185
2     │ 0.685008  0.836153
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.147077  0.912411
2     │ 0.514845   0.94598

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.543526  0.670735
2     │ 0.896337   0.81949
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.780874  0.614053
2     │ 0.807735  0.187017

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293818  0.567544
2     │ 0.198762    0.5172

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.965617   0.557888
2     │ 0.0845417   0.469361

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.2943  0.687117
2     │ 0.367936  0.964482
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.870276  0.571526
2     │ 0.779482   0.56855

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.731441   0.316413
2     │  0.202142  0.0759387

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.363033    0.139616
2     │ 0.00808954   0.0496769
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0988765   0.644589

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.511733  0.593411
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1
──────┼────────────
1     │    0.310865
2     │ 0.000604253

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.891905
2     │ 0.616844
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.103113  0.396647
2     │ 0.186657  0.912086
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[15518036295308090568,  4913249781191789579]  =  0.25096268179711534
	[17329041886349039120,  5312631360709731698]  =  0.41174105892989177
	[7011600752848376140 , 12419957900638875901]  =  0.20898146239150917
	[4223746066729127812 ,  4247719799217886270]  =  0.4537189864609861
	[9833052444289127168 ,  4247719799217886270]  =  0.21132868692526885
	[12072215667938940660, 14066869468942639955]  =  0.39116335367952604
	[11332520718132086690,  8629498292780771804]  =  0.12922219903394216
	[7713060533429820211 ,  4394159825732135742]  =  0.1907325480196984
	                                              ⋮
	[11104426471044518599,  6332455606016291123]  =  0.8035351372818353
	[10647878191897777347, 12169815624147734794]  =  0.8724411902172915
	[13975069277216705747, 10370911177498520402]  =  0.7586433341813261
	[10080555958650725266, 10024080200852233627]  =  0.7023790071349068
	[10408056422914801862, 17737936919457265947]  =  0.7731838402929652
	[172966917720799643  , 16836080019131185762]  =  0.5508377313124506
	[3701904739816180802 , 12020782256748308824]  =  0.28678326311432767
	[11565746237708632912,  3733926995351842633]  =  0.30679189713841826
	[10260179183825814155,  9133170895916704973]  =  0.419167336562817Timing named index: 0.001394776, array index: 0.000720856, named key: 0.112282644
Timing sum large sparse array: 0.011415426, named: 0.026384768
done!
INFO: NamedArrays tests passed

>>> End of log
