>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (972.1640625 MB free)
Uptime: 13532.0 sec
Load Avg:  0.97412109375  0.93408203125  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     845738 s       1205 s      65224 s     255281 s         23 s
#2  3508 MHz     199094 s       5885 s      33824 s    1086145 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.14196284012092608	0.17339983833626382	0.02376597300005323	0.4622181542907535
two	0.6365523440647558	0.5441030754514977	0.667478038453136	0.4976209267422258
a	85
b	74
c	90
d	65
e	53
f	66
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │   0.713871    0.215918  0.00852065
:b          │   0.766293    0.158953    0.895514 0.7138705668895715 0.7138705668895715
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │   0.713871    0.215918  0.00852065
:b    │   0.766293    0.158953    0.895514
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │   0.713871    0.215918  0.00852065
:b          │   0.766293    0.158953    0.895514
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │   0.713871    0.215918  0.00852065
:b    │   0.766293    0.158953    0.895514
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │ 0.0925877    0.35264    0.66256    0.47761
二              │  0.397685   0.582845   0.485451   0.487832
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0302367   0.105349

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.231774  0.263462
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.746965
2     │ 0.563517

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.583073
2     │ 0.578001
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.680256  0.161721
2     │ 0.716469  0.161754
Timing named index: 0.001107547, array index: 0.000736984, named key: 0.103726973
Timing sum large sparse array: 0.007966658, named: 0.016660236
done!
INFO: NamedArrays tests passed

>>> End of log
