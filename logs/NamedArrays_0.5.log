>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (971.34765625 MB free)
Uptime: 14219.0 sec
Load Avg:  1.140625  0.99560546875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     816988 s         54 s      90588 s     342822 s         27 s
#2  3500 MHz     248792 s       6442 s      39326 s    1094931 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.1
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.7894746876794889	0.7655726261779634	0.28702054254580167	0.2212035663619336
two	0.5299000528159579	0.17510645081553777	0.32720264999231086	0.13010713728161383
a	29
b	35
c	40
d	31
e	17
f	59
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │  0.057084   0.416336   0.990215
:b          │  0.749375  0.0239223   0.171861 0.05708399901965344 0.05708399901965344
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │  0.057084   0.416336   0.990215
:b    │  0.749375  0.0239223   0.171861
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │  0.057084   0.416336   0.990215
:b          │  0.749375  0.0239223   0.171861
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │  0.057084   0.416336   0.990215
:b    │  0.749375  0.0239223   0.171861
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.419942  0.414772  0.590472  0.697797
二              │ 0.527237   0.23019  0.508322  0.511801
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.372645   0.92578

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.114682  0.182054
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.800754
2     │ 0.681503

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.986692
2     │ 0.341862
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0486155   0.836489
2     │  0.574175   0.189984
Timing named index: 0.001536952, array index: 0.000614704, named key: 0.107025435
Timing sum large sparse array: 0.02841356, named: 0.029200482
done!
INFO: NamedArrays tests passed

>>> End of log
