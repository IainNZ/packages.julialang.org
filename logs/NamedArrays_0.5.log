>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (981.7109375 MB free)
Uptime: 14040.0 sec
Load Avg:  1.0478515625  0.97509765625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz     768592 s       7169 s      91234 s     378194 s         19 s
#2  3509 MHz     273443 s        558 s      39156 s    1055183 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.9551559865583872	0.3669668809531055	0.6500493145331463	0.29279837626617766
two	0.5774061599967004	0.6745565804779936	0.6979513141982077	0.20868880162670478
a	88
b	97
c	7
d	85
e	69
f	29
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │   0.586917    0.483091    0.737575
:b          │  0.0255736  0.00249007    0.443476 0.5869166864127431 0.5869166864127431
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │   0.586917    0.483091    0.737575
:b    │  0.0255736  0.00249007    0.443476
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         :c          :d          :e
────────────┼───────────────────────────────────
:a          │   0.586917    0.483091    0.737575
:b          │  0.0255736  0.00249007    0.443476
2×3 Named Array{Float64,2}
A ╲ B │         :c          :d          :e
──────┼───────────────────────────────────
:a    │   0.586917    0.483091    0.737575
:b    │  0.0255736  0.00249007    0.443476
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │   0.16008   0.275298  0.0523857   0.964156
二              │  0.103198   0.263199   0.335266   0.591558
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.85595  0.890117

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54885  0.442667
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.94594
2     │ 0.446277

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.138918
2     │ 0.250355
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.493901  0.359742
2     │ 0.853265  0.715671
Timing named index: 0.000823441, array index: 0.000429157, named key: 0.085275182
Timing sum large sparse array: 0.02332389, named: 0.027250203
done!
INFO: NamedArrays tests passed

>>> End of log
