>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (979.82421875 MB free)
Uptime: 14281.0 sec
Load Avg:  0.994140625  0.9921875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     810215 s       5438 s      96471 s     342060 s         25 s
#2  3497 MHz     268505 s       1696 s      43156 s    1079145 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.526873646052892	0.7645788483833513	0.3666293263901059	0.7025565037286117
two	0.7191840305704504	0.3011110312196206	0.12968842849047313	0.11150385519207062
a	55
b	53
c	22
d	86
e	73
f	27
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │  0.625898  0.0719392   0.616222
:b          │   0.98242    0.65884   0.279679 0.6258975318967457 0.6258975318967457
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │  0.625898  0.0719392   0.616222
:b    │   0.98242    0.65884   0.279679
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │  0.625898  0.0719392   0.616222
:b          │   0.98242    0.65884   0.279679
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │  0.625898  0.0719392   0.616222
:b    │   0.98242    0.65884   0.279679
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.706905  0.640038  0.853713   0.81307
二              │ 0.736483  0.127898  0.694839  0.758098
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.914463  0.955949

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.384323  0.243435
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.653594
2     │ 0.850383

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.414455
2     │ 0.398671
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.126532  0.533537
2     │ 0.398668   0.89338
Timing named index: 0.001748448, array index: 0.000524739, named key: 0.11242284
Timing sum large sparse array: 0.016254657, named: 0.016922948
done!
INFO: NamedArrays tests passed

>>> End of log
