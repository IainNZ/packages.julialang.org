>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.6.0
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (978.32421875 MB free)
Uptime: 14012.0 sec
Load Avg:  0.8935546875  0.94921875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     808216 s        944 s      86764 s     336015 s         23 s
#2  3499 MHz     252920 s       7026 s      37431 s    1068126 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - NamedArrays                   0.6.0
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.1432402567997193	0.12035107515682109	0.7366323344613674	0.1646724930154415
two	0.42261757534806077	0.49370811176394747	0.008918935932621608	0.07916711337677218
a	92
b	35
c	12
d	2
e	24
f	38
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │   0.16573   0.981227  0.0630363
:b          │   0.99392   0.022472   0.389374 0.16573005303537003 0.16573005303537003
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │   0.16573   0.981227  0.0630363
:b    │   0.99392   0.022472   0.389374
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        :c         :d         :e
────────────┼────────────────────────────────
:a          │   0.16573   0.981227  0.0630363
:b          │   0.99392   0.022472   0.389374
2×3 Named Array{Float64,2}
A ╲ B │        :c         :d         :e
──────┼────────────────────────────────
:a    │   0.16573   0.981227  0.0630363
:b    │   0.99392   0.022472   0.389374
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.670242   0.619456   0.269926    0.88961
二              │ 0.0502216   0.160731  0.0114977   0.363966
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.806265  0.516462

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528616  0.190113
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.95329
2     │ 0.229286

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.621806
2     │ 0.131567
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.718276  0.750354
2     │ 0.336203    0.3772
Timing named index: 0.001579823, array index: 0.000346228, named key: 0.112859823
Timing sum large sparse array: 0.022671744, named: 0.024716381
done!
INFO: NamedArrays tests passed

>>> End of log
