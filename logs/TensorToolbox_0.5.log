>>> 'Pkg.add("TensorToolbox")' log
INFO: Cloning cache of TensorToolbox from https://github.com/lanaperisa/TensorToolbox.jl.git
INFO: Installing TensorToolbox v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorToolbox
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorToolbox")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1094.7265625 MB free)
Uptime: 47207.0 sec
Load Avg:  1.0029296875  1.0048828125  1.0166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3047899 s       1846 s     277407 s     799216 s         80 s
#2  3499 MHz     956461 s       5187 s     122542 s    3506533 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TensorToolbox                 0.0.1
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TensorToolbox

...Test tensor X of size: (20,10,50,5)

...Testing matten and tenmat.
Size of 1-mode matricization: [20,2500]
Check if it folds back correctly: true
Size of 2-mode matricization: [10,5000]
Check if it folds back correctly: true
Size of 3-mode matricization: [50,1000]
Check if it folds back correctly: true
Size of 4-mode matricization: [5,10000]
Check if it folds back correctly: true

...Testing hosvd.

Creating exact decomposition with rank = size(X):
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (20,10,50,5)
Factor matrices sizes: (20,20) (10,10) (50,50) (5,5) 

...Testing function full, i.e. n-mode multiplication (ttm): vecnorm(full(T)-X) = 2.3853500657638193e-13

...Testing ttm for ttensor T and array of matrices A : vecnorm(full(ttm(T,A))-ttm(full(T),A)) = 3.006388183322249e-11

...Testing hosvd with smaller multilinear rank: [5,5,5,5]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (5,5,5,5)
Factor matrices sizes: (20,5) (10,5) (50,5) (5,5) 

...Testing size of ttensor T : (20,10,50,5)

...Testing ndims of ttensor T : 4


...Testing hosvd for tensor with noise.
For ttensor T, X=full(T) tensor of size (60,50,40) and rank [5,5,5] , N noise tensor and S=hosvd(X+N,[5,5,5]).
Error( vecnorm(T-S) ): 0.013610570424149987. Noise vecnorm: 0.1728806856892757.


...Testing hosvd with eps_abs=1e-5 on function defined tensor X of size (20,20,20)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (7,7,7)
Factor matrices sizes: (20,7) (20,7) (20,7) 

...Testing hosvd with eps_rel=1e-5 on function defined tensor X of size (20,20,20)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (6,6,6)
Factor matrices sizes: (20,6) (20,6) (20,6) 

...Testing if factor matrices of ttensor T are orthogonal: true


...Recompress Tucer tensor T to smaller rank: [3,3,3]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (3,3,3)
Factor matrices sizes: (20,3) (20,3) (20,3) 

...Testing orthogonal flag and reorthogonalization for random ttensor S of size (4,5,2).
Has orthogonal factor matrices: false
After reorthogonalization: true


...Testing vecnorm of ttensor T.
|vecnorm(T) - vecnorm(full(T))| = 2.1316282072803006e-14


...Testing scalar multiplication 3*T.
vecnorm(full(3*T) - 3*full(T)) = 3.923079530336531e-14


...Creating two random ttensors X and Y of size (6,8,2,5,4).

...Testing addition.
vecnorm(full(X+Y) - (full(X)+full(Y))) = 1.4641169583125897e-13


...Testing inner product.
|innerprod(X,Y) - innerprod(full(X),full(Y))| = 5.4569682106375694e-12


...Testing Hadamard product.
vecnorm(full(X.*Y) - full(X).*full(Y)) = 2.419868635308742e-12


...Testing singular values of matricizations of Tucker Tensor.

Singular values of matricizations of random Tucker tensor of size (10,9,8), rank [3,3,3] and vecnorm 176.6162616638085.
Mode-1 singular values error: 6.394884621840902e-14
Mode-2 singular values error: 4.507888299247583e-14
Mode-3 singular values error: 3.256115871121665e-14

Singular values of matricizations of random Tucker tensor of size (20,20,20,20), rank [5,5,5,5] and vecnorm 11777.8995877378.
Mode-1 singular values error: 4.981507640924666e-12
Mode-2 singular values error: 5.550898829703193e-12
Mode-3 singular values error: 8.397448851892199e-12
Mode-4 singular values error: 8.348051665364355e-12



INFO: TensorToolbox tests passed

>>> End of log
