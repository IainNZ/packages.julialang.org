>>> 'Pkg.add("KernelDensity")' log
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.7.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.6.0
INFO: Installing DiffBase v0.2.0
INFO: Installing Distributions v0.14.2
INFO: Installing DualNumbers v0.3.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Interpolations v0.6.2
INFO: Installing KernelDensity v0.3.2
INFO: Installing LineSearches v2.2.1
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.6
INFO: Installing Optim v0.9.2
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ratios v0.1.0
INFO: Installing RealInterface v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing ShowItLikeYouBuildIt v0.0.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StaticArrays v0.6.1
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KernelDensity
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KernelDensity")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1046.453125 MB free)
Uptime: 81229.0 sec
Load Avg:  1.02001953125  0.89501953125  0.7978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    5247838 s       3000 s     235338 s    1385039 s         60 s
#2  3499 MHz    1345174 s       4878 s     146104 s    6462291 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - KernelDensity                 0.3.2
31 additional packages:
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.7.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.27.0
 - DataStructures                0.6.0
 - DiffBase                      0.2.0
 - Distributions                 0.14.2
 - DualNumbers                   0.3.0
 - ForwardDiff                   0.5.0
 - Interpolations                0.6.2
 - LineSearches                  2.2.1
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.6
 - Optim                         0.9.2
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ratios                        0.1.0
 - RealInterface                 0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - ShowItLikeYouBuildIt          0.0.1
 - SpecialFunctions              0.2.0
 - StaticArrays                  0.6.1
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.2
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Testing KernelDensity
Running tests:
 * univariate.jl
 * bivariate.jl
 * interp.jl
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:77
 [5] A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:11 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:15 [inlined]
 [11] pdf(::KernelDensity.UnivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:29
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 8
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::Array{Float64,2}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:78
 [5] A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:11 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:15 [inlined]
 [11] pdf(::KernelDensity.UnivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:29
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 8
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:79
 [5] A_ldiv_B_md!(::Array{Float64,1}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,1}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:11 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:15 [inlined]
 [11] pdf(::KernelDensity.UnivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:29
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 8
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:77
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:78
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{0}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:79
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{1}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:77
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{1}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:78
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
WARNING: @functorize is deprecated as functor objects are no longer supported in julia
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] macro expansion at /home/vagrant/.julia/v0.6/Compat/src/deprecated.jl:4 [inlined]
 [3] alloc_matmul(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/AxisAlgorithms/src/AxisAlgorithms.jl:41
 [4] _A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::CartesianRange{CartesianIndex{1}}, ::CartesianRange{CartesianIndex{0}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:79
 [5] A_ldiv_B_md!(::Array{Float64,2}, ::WoodburyMatrices.Woodbury{Float64,Base.LinAlg.LU{Float64,Tridiagonal{Float64}},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64},Array{Float64,2},Array{Float64,2}}, ::Array{Float64,2}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/../filter1d.jl:15
 [6] prefilter!(::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:58
 [7] prefilter(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Type{Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}}, ::Type{Interpolations.OnGrid}) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/prefiltering.jl:40
 [8] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,2}, ::Interpolations.BSpline{Interpolations.Quadratic{Interpolations.Line}}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.6/Interpolations/src/b-splines/b-splines.jl:73
 [9] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:19 [inlined]
 [10] Type at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:23 [inlined]
 [11] pdf(::KernelDensity.BivariateKDE{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/KernelDensity/src/interp.jl:30
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/KernelDensity/test/runtests.jl:12 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KernelDensity/test/interp.jl, in expression starting on line 11
INFO: KernelDensity tests passed

>>> End of log
