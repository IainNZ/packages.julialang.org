>>> 'Pkg.add("COBRA")' log
INFO: Cloning cache of COBRA from https://github.com/opencobra/COBRA.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.3.0
INFO: Installing BufferedStreams v0.3.3
INFO: Installing COBRA v0.1.2
INFO: Installing Codecs v0.3.0
INFO: Installing HDF5 v0.8.4
INFO: Installing HttpCommon v0.2.7
INFO: Installing HttpParser v0.3.0
INFO: Installing Libz v0.2.4
INFO: Installing MAT v0.3.2
INFO: Installing MathProgBase v0.6.4
INFO: Installing MbedTLS v0.4.5
INFO: Installing Requests v0.5.0
INFO: Installing SHA v0.5.0
INFO: Installing URIParser v0.2.0
INFO: Building Blosc
INFO: Building HDF5
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/HDF5/deps/build.jl:39
INFO: Building HttpParser
INFO: Building MbedTLS
INFO: Package database updated

>>> 'Pkg.test("COBRA")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (906.2578125 MB free)
Uptime: 24430.0 sec
Load Avg:  0.90966796875  0.9677734375  0.95654296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1390459 s       4824 s      70954 s     630055 s         26 s
#2  3500 MHz     398412 s       1602 s      37174 s    1945883 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - COBRA                         0.1.2
 - JSON                          0.13.0
15 additional packages:
 - BinDeps                       0.6.0
 - Blosc                         0.3.0
 - BufferedStreams               0.3.3
 - Codecs                        0.3.0
 - Compat                        0.30.0
 - HDF5                          0.8.4
 - HttpCommon                    0.2.7
 - HttpParser                    0.3.0
 - Libz                          0.2.4
 - MAT                           0.3.2
 - MathProgBase                  0.6.4
 - MbedTLS                       0.4.5
 - Requests                      0.5.0
 - SHA                           0.5.0
 - URIParser                     0.2.0
INFO: Computing test dependencies for COBRA...
INFO: Cloning cache of GLPK from https://github.com/JuliaOpt/GLPK.jl.git
INFO: Cloning cache of GLPKMathProgInterface from https://github.com/JuliaOpt/GLPKMathProgInterface.jl.git
INFO: Installing Cbc v0.3.2
INFO: Installing Clp v0.3.1
INFO: Installing GLPK v0.4.2
INFO: Installing GLPKMathProgInterface v0.3.4
INFO: Building Cbc
INFO: Building GLPK
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/downloads
INFO: Downloading file http://ftp.gnu.org/gnu/glpk/glpk-4.61.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0 4019k    0  6844    0     0  20968      0  0:03:16 --:--:--  0:03:16 20929100 4019k  100 4019k    0     0  6690k      0 --:--:-- --:--:-- --:--:-- 6688k
INFO: Done downloading file http://ftp.gnu.org/gnu/glpk/glpk-4.61.tar.gz
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/src
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps
INFO: Directory /home/vagrant/.julia/v0.6/GLPK/deps already created
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Testing COBRA

 >> Checking the system's configuration ...

Clp is installed.
GLPKMathProgInterface is installed.
Package Gurobi is not installed. In order to use Gurobi, you must first run `Pkg.add("Gurobi")`
Package CPLEX is not installed. In order to use CPLEX, you must first run `Pkg.add("CPLEX")`
Package Mosek is not installed. In order to use Mosek, you must first run `Pkg.add("Mosek")`

 >> Done. 2 solvers are installed and ready to use.
INFO: Parallel version - Connecting the 4 workers ...
4 local workers are connected. (+1) on host: vagrant-ubuntu-trusty-64
WARNING: using COBRA.@isdefined in module Main conflicts with an existing identifier.
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
Downloading the ecoli_core model ...WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/runtests.jl:32
Done.


 -- Running 12 tests using the Clp solver. -- 


Running p_all.jl ...

INFO: The ecoli_core model already exists.
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/COBRA/test/p_all.jl:49
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 1.6655879020690918 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           9.12940502166748
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0032041072845458984 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 1.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.9156198501586914
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0013079643249511719 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 2.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [26/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [26/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [26/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [26/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [26/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [26/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.11885905265808105
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (75, 95)

The value of optPercentage is higher than 90%. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0015978813171386719 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.3560481071472168
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (76, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.001260995864868164 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].

 Saving the minimum and maximum fluxes for reactions 1:24 from worker 1 ... Done.
 Saving the minimum and maximum fluxes for reactions 25:48 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 49:72 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 73:95 from worker 4 ... Done.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.3560481071472168
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     true

Directory `results` created.


 >> Size of stoichiometric matrix: (77, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 0.0, objValue = optPercentage * FBAobj = 0.0, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0017158985137939453 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` already exists.
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.3560481071472168
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     true

Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
All available variables saved to testFile.mat.
WARNING: No variables saved.
Original FBA. No additional constraints have been added.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results/logs` created.
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].

 Saving the minimum and maximum fluxes for reactions 1:3 from worker 1 ... Done.
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
 Saving the minimum and maximum fluxes for reactions 4:6 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 7:9 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 10:10 from worker 4 ... Done.
Original FBA. No additional constraints have been added.
WARNING: `saveChunks` has been set to `false`.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
Original FBA. No additional constraints have been added.
 >> Only 2 reactions of 95 will be solved (~ 2.1052631578947367 %).

WARNING: 
The parallel pool of workers is larger than the number of reactions being solved.
INFO:  >> Consider reducing the size of the parallel pool to free system resources.
Average load per worker: 1 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [1/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [1/95].
Original FBA. No additional constraints have been added.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results/logs` created.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].

Running p_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0019061565399169922 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.002032041549682617 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0015859603881835938 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Solution time [s]:           0.02290797233581543
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running p_range.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0019829273223876953 s.

 >> Only 30 reactions of 95 will be solved (~ 31.57894736842105 %).

Average load per worker: 8 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [8/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [8/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [8/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [6/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [8/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [8/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [8/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [6/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_range.jl
 Original FBA obj.val         0.8739215069685174
 Solution time [s]:           0.058522939682006836
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.001455068588256836 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.13619709014892578
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_core.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0015418529510498047 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_core.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.15124893188476562
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.001641988754272461 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0017278194427490234 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0013141632080078125 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          26.528869396061772
 Minimum of maxFlux:          -9.04660613349818
 Maximum of minFlux:          15.206494614374979
 Minimum of minFlux:          -10.0
 Norm of maxFlux:             37.02464689379309
 Norm of minFlux:             22.00443371346725
 Solution time [s]:           0.02620720863342285
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_fba.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.5307650566101074
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.0017428398132324219
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.0019099712371826172
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.002501964569091797
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Int64) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.0017669200897216797
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_tools.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: Some reaction names are not in the model; their indices in the `rxnsList` are reported in `rxnIDsNE`.

Running z_all.jl ...

INFO: The ecoli_core model already exists.

>> The following tests throw warning messages for testing purposes. <<

INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: Sequential version - Depending on the model size, expect long execution times.
Loading SSH connection details from /home/vagrant/.julia/v0.6/COBRA/test/../src/../config/sshCfg.jl ...Done.
INFO: Parallel version - Connecting the 56 workers ...
INFO: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
INFO: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
INFO: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
WARNING: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865298, norm(fbaSol) = 106.8373155300231.


 >> Size of stoichiometric matrix: (73, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
 -- Maximization (iRound = 1). Block 1 [1/2].

 >> Note: Warnings above are thrown for testing purposes and can be safely ignored.


 -- Running 12 tests using the GLPKMathProgInterface solver. -- 


Running p_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0017349720001220703 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.10695004463195801
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.002134084701538086 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 1.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.09694123268127441
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0015859603881835938 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 2.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [26/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [26/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [26/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [26/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [26/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [26/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.11943507194519043
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (75, 95)

The value of optPercentage is higher than 90%. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0012090206146240234 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.10197901725769043
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (76, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0012481212615966797 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

 Saving the minimum and maximum fluxes for reactions 1:24 from worker 1 ... Done.
 Saving the minimum and maximum fluxes for reactions 25:48 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 49:72 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 73:95 from worker 4 ... Done.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.10197901725769043
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     true

Directory `results` created.


 >> Size of stoichiometric matrix: (77, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 0.0, objValue = optPercentage * FBAobj = 0.0, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0015118122100830078 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` already exists.
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.10197901725769043
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     true

Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Original FBA. No additional constraints have been added.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
All available variables saved to testFile.mat.
WARNING: No variables saved.
Original FBA. No additional constraints have been added.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results/logs` created.
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].

 Saving the minimum and maximum fluxes for reactions 1:3 from worker 1 ... Done.
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
 Saving the minimum and maximum fluxes for reactions 4:6 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 7:9 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 10:10 from worker 4 ... Done.
Original FBA. No additional constraints have been added.
WARNING: `saveChunks` has been set to `false`.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
Original FBA. No additional constraints have been added.
 >> Only 2 reactions of 95 will be solved (~ 2.1052631578947367 %).

WARNING: 
The parallel pool of workers is larger than the number of reactions being solved.
INFO:  >> Consider reducing the size of the parallel pool to free system resources.
Average load per worker: 1 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [1/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [1/95].
Original FBA. No additional constraints have been added.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results/logs` created.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].

Running p_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.001965045928955078 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.00410914421081543 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0042951107025146484 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Solution time [s]:           0.032195091247558594
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running p_range.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.001363992691040039 s.

 >> Only 30 reactions of 95 will be solved (~ 31.57894736842105 %).

Average load per worker: 8 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [8/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [8/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [8/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [8/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [6/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [8/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [8/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [6/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_range.jl
 Original FBA obj.val         0.8739215069685174
 Solution time [s]:           0.040316104888916016
 Number of workers:           4
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.005558013916015625 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.186812162399292
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_core.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0013599395751953125 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_core.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.11962509155273438
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.001814126968383789 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0021409988403320312 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0019030570983886719 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          26.528869396061772
 Minimum of maxFlux:          -9.04660613349818
 Maximum of minFlux:          15.206494614374979
 Minimum of minFlux:          -10.0
 Norm of maxFlux:             37.02464689379309
 Norm of minFlux:             22.00443371346725
 Solution time [s]:           0.02801203727722168
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_fba.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.001920938491821289
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.001961946487426758
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.0019638538360595703
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.002805948257446289
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Int64) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.013312101364135742
 Number of workers:           1
 Solver:                      GLPK
 Distribution strategy:       0
 Saving individual files:     false


Running s_tools.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: Some reaction names are not in the model; their indices in the `rxnsList` are reported in `rxnIDsNE`.

Running z_all.jl ...

INFO: The ecoli_core model already exists.

>> The following tests throw warning messages for testing purposes. <<

INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: Sequential version - Depending on the model size, expect long execution times.
Loading SSH connection details from /home/vagrant/.julia/v0.6/COBRA/test/../src/../config/sshCfg.jl ...Done.
INFO: Parallel version - Connecting the 56 workers ...
INFO: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
INFO: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
INFO: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.

Original FBA. No additional constraints have been added.
WARNING: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865298, norm(fbaSol) = 106.8373155300231.


 >> Size of stoichiometric matrix: (73, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
 -- Maximization (iRound = 1). Block 1 [1/2].

 >> Note: Warnings above are thrown for testing purposes and can be safely ignored.

 -- All tests passed. -- 

INFO: COBRA tests passed
INFO: Removing Cbc v0.3.2
INFO: Removing Clp v0.3.1
INFO: Removing GLPK v0.4.2
INFO: Removing GLPKMathProgInterface v0.3.4

>>> End of log
