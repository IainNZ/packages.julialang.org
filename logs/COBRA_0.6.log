>>> 'Pkg.add("COBRA")' log
INFO: Cloning cache of COBRA from https://github.com/opencobra/COBRA.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.2.1
INFO: Installing BufferedStreams v0.3.2
INFO: Installing COBRA v0.1.1
INFO: Installing Codecs v0.3.0
INFO: Installing HDF5 v0.8.1
INFO: Installing HttpCommon v0.2.7
INFO: Installing HttpParser v0.2.0
INFO: Installing Libz v0.2.4
INFO: Installing MAT v0.3.2
INFO: Installing MathProgBase v0.6.4
INFO: Installing MbedTLS v0.4.5
INFO: Installing Requests v0.4.1
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
INFO: Building HttpParser
WARNING: BinDeps.shlib_ext is deprecated.
  likely near /home/vagrant/.julia/v0.6/HttpParser/deps/build.jl:38
INFO: Building MbedTLS
INFO: Package database updated

>>> 'Pkg.test("COBRA")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (973.61328125 MB free)
Uptime: 22046.0 sec
Load Avg:  0.97998046875  0.96142578125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    1284143 s       5792 s      60181 s     530532 s         14 s
#2  3515 MHz     222909 s         52 s      30330 s    1923741 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - COBRA                         0.1.1
 - JSON                          0.12.0
15 additional packages:
 - BinDeps                       0.6.0
 - Blosc                         0.2.1
 - BufferedStreams               0.3.2
 - Codecs                        0.3.0
 - Compat                        0.25.2
 - HDF5                          0.8.1
 - HttpCommon                    0.2.7
 - HttpParser                    0.2.0
 - Libz                          0.2.4
 - MAT                           0.3.2
 - MathProgBase                  0.6.4
 - MbedTLS                       0.4.5
 - Requests                      0.4.1
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Computing test dependencies for COBRA...
INFO: Cloning cache of GLPK from https://github.com/JuliaOpt/GLPK.jl.git
INFO: Cloning cache of GLPKMathProgInterface from https://github.com/JuliaOpt/GLPKMathProgInterface.jl.git
INFO: Installing Cbc v0.3.2
INFO: Installing Clp v0.3.1
INFO: Installing GLPK v0.4.2
INFO: Installing GLPKMathProgInterface v0.3.4
INFO: Building Cbc
INFO: Building GLPK
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/downloads
INFO: Downloading file http://ftp.gnu.org/gnu/glpk/glpk-4.61.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0 4019k    0 12524    0     0   5290      0  0:12:58  0:00:02  0:12:56  5288100 4019k  100 4019k    0     0  1637k      0  0:00:02  0:00:02 --:--:-- 1637k
INFO: Done downloading file http://ftp.gnu.org/gnu/glpk/glpk-4.61.tar.gz
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/src
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps
INFO: Directory /home/vagrant/.julia/v0.6/GLPK/deps already created
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Changing Directory to /home/vagrant/.julia/v0.6/GLPK/deps/builds/libglpk
INFO: Testing COBRA

 >> Checking the system's configuration ...

Clp is installed.
GLPKMathProgInterface is installed.
Package Gurobi is not installed. In order to use Gurobi, you must first run `Pkg.add("Gurobi")`
Package CPLEX is not installed. In order to use CPLEX, you must first run `Pkg.add("CPLEX")`
Package Mosek is not installed. In order to use Mosek, you must first run `Pkg.add("Mosek")`

 >> Done. 2 solvers are installed and ready to use.
INFO: Parallel version - Connecting the 4 workers ...
4 local workers are connected. (+1) on host: vagrant-ubuntu-trusty-64
Downloading the ecoli_core model ...Done.


 -- Running 12 tests using the Clp solver. -- 


Running p_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 1.409693956375122 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          35.9848248054978
 Minimum of minFlux:          -32.25826051520999
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           7.4067771434783936
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0014488697052001953 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 1.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          35.984824805497794
 Minimum of minFlux:          -32.25826051521
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.918349027633667
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0019159317016601562 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 2.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [26/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [26/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [26/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [26/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [26/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [26/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          35.984824805497794
 Minimum of minFlux:          -32.25826051521
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.13516521453857422
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (75, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0017809867858886719 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -29.175778648733363
 Maximum of minFlux:          45.51380110984009
 Minimum of minFlux:          -29.175845016899988
 Norm of maxFlux:             1414.6680343082185
 Norm of minFlux:             106.83702877970775
 Solution time [s]:           0.09131193161010742
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (76, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0030450820922851562 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].

 Saving the minimum and maximum fluxes for reactions 1:24 from worker 1 ... Done.
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
 Saving the minimum and maximum fluxes for reactions 25:48 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 49:72 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 73:95 from worker 4 ... Done.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -29.175778648733363
 Maximum of minFlux:          45.51380110984009
 Minimum of minFlux:          -29.175845016899988
 Norm of maxFlux:             1414.6680343082185
 Norm of minFlux:             106.83702877970775
 Solution time [s]:           0.09131193161010742
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     true

Directory `results` created.


 >> Size of stoichiometric matrix: (77, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0018689632415771484 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` already exists.
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -29.1757786487326
 Maximum of minFlux:          45.51380110984009
 Minimum of minFlux:          -29.175845016899988
 Norm of maxFlux:             1414.6680343082185
 Norm of minFlux:             106.8370287797078
 Solution time [s]:           0.09131193161010742
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     true


 >> Size of stoichiometric matrix: (78, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.002569913864135742 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (79, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0018820762634277344 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (80, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0018131732940673828 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
All available variables saved to testFile.mat.
WARNING: No variables saved.

 >> Size of stoichiometric matrix: (81, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0021409988403320312 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results/logs` created.
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].

 Saving the minimum and maximum fluxes for reactions 1:3 from worker 1 ... Done.
 Saving the minimum and maximum fluxes for reactions 4:6 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 7:9 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 10:10 from worker 4 ... Done.

 >> Size of stoichiometric matrix: (82, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.001817941665649414 s.

WARNING: `saveChunks` has been set to `false`.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].

 >> Size of stoichiometric matrix: (83, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0017361640930175781 s.

 >> Only 2 reactions of 95 will be solved (~ 2.1052631578947367 %).

WARNING: 
The parallel pool of workers is larger than the number of reactions being solved.
INFO:  >> Consider reducing the size of the parallel pool to free system resources.
Average load per worker: 1 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [1/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [1/95].

 >> Size of stoichiometric matrix: (84, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0025298595428466797 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results/logs` created.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].

Running p_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.006047964096069336 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0018391609191894531 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0023119449615478516 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_distinct.jl
 Original FBA obj.val         0.8739215069684304
 Solution time [s]:           0.038970947265625
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running p_range.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0017731189727783203 s.

 >> Only 30 reactions of 95 will be solved (~ 31.57894736842105 %).

Average load per worker: 8 reactions (4 workers).
Splitting strategy is 0.

	From worker 5:	 -- Minimization (iRound = 0). Block 5 [6/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [6/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [8/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [8/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [8/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [8/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [8/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [8/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_range.jl
 Original FBA obj.val         0.8739215069684304
 Solution time [s]:           0.05594301223754883
 Number of workers:           4
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running s_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0032269954681396484 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_all.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.935885733541852
 Maximum of minFlux:          35.9848248054978
 Minimum of minFlux:          -32.25826051521001
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.13559293746948242
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running s_core.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.00238800048828125 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_core.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.935885733541852
 Maximum of minFlux:          35.9848248054978
 Minimum of minFlux:          -32.25826051521001
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.11390113830566406
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running s_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0019009113311767578 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.002012014389038086 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.001959085464477539 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_distinct.jl
 Original FBA obj.val         0.8739215069684304
 Maximum of maxFlux:          26.528869396049977
 Minimum of maxFlux:          -9.046606133498623
 Maximum of minFlux:          15.206494614382432
 Minimum of minFlux:          -10.0
 Norm of maxFlux:             37.02464689377639
 Norm of minFlux:             22.004433713470988
 Solution time [s]:           0.025382041931152344
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running s_fba.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.48343801498413086
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.0019102096557617188
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.001756906509399414
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.006066083908081055
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Int64) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.001486063003540039
 Number of workers:           1
 Solver:                      Clp
 Distribution strategy:       0
 Saving individual files:     false


Running s_tools.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: Some reaction names are not in the model; their indices in the `rxnsList` are reported in `rxnIDsNE`.

Running z_all.jl ...

INFO: The ecoli_core model already exists.

>> The following tests throw warning messages for testing purposes. <<

INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: Sequential version - Depending on the model size, expect long execution times.
Loading SSH connection details from /home/vagrant/.julia/v0.6/COBRA/test/../src/../config/sshCfg.jl ...Done.
INFO: Parallel version - Connecting the 56 workers ...
INFO: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
INFO: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
INFO: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: FBAobj = 0.8739215069684304, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865298, norm(fbaSol) = 106.83731553000719.

Original FBA solved. Solution time: 0.0020270347595214844 s.

WARNING: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = min]: FBAobj = 0.7865298, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.707877, norm(fbaSol) = 100.12976651459746.


 >> Size of stoichiometric matrix: (74, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
 -- Maximization (iRound = 1). Block 1 [1/2].

 >> Note: Warnings above are thrown for testing purposes and can be safely ignored.


 -- Running 12 tests using the GLPKMathProgInterface solver. -- 


Running p_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.9819850921630859 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           3.7321019172668457
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0016319751739501953 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 1.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.3261101245880127
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0014450550079345703 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 2.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [26/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [26/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [26/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [26/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [26/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [26/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.10583710670471191
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (75, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0017468929290771484 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.1379399299621582
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


 >> Size of stoichiometric matrix: (76, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0016150474548339844 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].

 Saving the minimum and maximum fluxes for reactions 1:24 from worker 1 ... Done.
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
 Saving the minimum and maximum fluxes for reactions 25:48 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 49:72 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 73:95 from worker 4 ... Done.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.1379399299621582
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     true

Directory `results` created.


 >> Size of stoichiometric matrix: (77, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0016889572143554688 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` already exists.
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_all.jl
 Original FBA obj.val         0.8739215069685793
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -29.175778648722524
 Maximum of minFlux:          45.51380110978607
 Minimum of minFlux:          -29.175845016907505
 Norm of maxFlux:             1414.668034308237
 Norm of minFlux:             106.8370287796367
 Solution time [s]:           0.1379399299621582
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     true


 >> Size of stoichiometric matrix: (78, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0015909671783447266 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (79, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0019309520721435547 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (80, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.001783132553100586 s.

INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
All available variables saved to testFile.mat.
WARNING: No variables saved.

 >> Size of stoichiometric matrix: (81, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0014548301696777344 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/test/../results/logs` created.
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].

 Saving the minimum and maximum fluxes for reactions 1:3 from worker 1 ... Done.
 Saving the minimum and maximum fluxes for reactions 4:6 from worker 2 ... Done.
 Saving the minimum and maximum fluxes for reactions 7:9 from worker 3 ... Done.
 Saving the minimum and maximum fluxes for reactions 10:10 from worker 4 ... Done.

 >> Size of stoichiometric matrix: (82, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0017898082733154297 s.

WARNING: `saveChunks` has been set to `false`.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].

 >> Size of stoichiometric matrix: (83, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.0023729801177978516 s.

 >> Only 2 reactions of 95 will be solved (~ 2.1052631578947367 %).

WARNING: 
The parallel pool of workers is larger than the number of reactions being solved.
INFO:  >> Consider reducing the size of the parallel pool to free system resources.
Average load per worker: 1 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [1/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [1/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [1/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [1/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [1/95].

 >> Size of stoichiometric matrix: (84, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685793, optPercentage = 100.0, objValue = optPercentage * FBAobj = 0.873921, norm(fbaSol) = 106.83731553001968.

Original FBA solved. Solution time: 0.002743959426879883 s.

Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results` created.
Directory `/home/vagrant/.julia/v0.6/COBRA/src/../results/logs` created.
INFO: Only the `minFlux` and `maxFlux` vectors will be calculated (solver solution status available in `statussolmin` and `statussolmax`).
 >> Only 10 reactions of 95 will be solved (~ 10.526315789473685 %).

Average load per worker: 3 reactions (4 workers).
Splitting strategy is 0.

	From worker 4:	 -- Minimization (iRound = 0). Block 4 [3/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [3/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [3/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [3/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [3/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [3/95].

Running p_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0015330314636230469 s.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.001786947250366211 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0016829967498779297 s.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Splitting strategy is 0.

	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Solution time [s]:           0.020175933837890625
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running p_range.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0013849735260009766 s.

 >> Only 30 reactions of 95 will be solved (~ 31.57894736842105 %).

Average load per worker: 8 reactions (4 workers).
Splitting strategy is 0.

	From worker 3:	 -- Minimization (iRound = 0). Block 3 [8/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [8/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [8/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [6/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [6/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [8/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [8/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [8/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/p_range.jl
 Original FBA obj.val         0.8739215069685174
 Solution time [s]:           0.05596494674682617
 Number of workers:           4
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_all.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0013799667358398438 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.18790411949157715
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_core.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0017919540405273438 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_core.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.17461609840393066
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_distinct.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0016989707946777344 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0016319751739501953 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0017788410186767578 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          26.528869396061772
 Minimum of maxFlux:          -9.04660613349818
 Maximum of minFlux:          15.206494614374979
 Minimum of minFlux:          -10.0
 Norm of maxFlux:             37.02464689379309
 Norm of minFlux:             22.00443371346725
 Solution time [s]:           0.03565406799316406
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_fba.jl ...

INFO: The ecoli_core model already exists.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.10441303253173828
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.002382040023803711
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.0023860931396484375
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.0034580230712890625
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Int64) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.6/COBRA/test/s_fba.jl
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.0023169517517089844
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_tools.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
WARNING: Some reaction names are not in the model; their indices in the `rxnsList` are reported in `rxnIDsNE`.

Running z_all.jl ...

INFO: The ecoli_core model already exists.

>> The following tests throw warning messages for testing purposes. <<

INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: Sequential version - Depending on the model size, expect long execution times.
Loading SSH connection details from /home/vagrant/.julia/v0.6/COBRA/test/../src/../config/sshCfg.jl ...Done.
INFO: Parallel version - Connecting the 56 workers ...
INFO: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
INFO: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
INFO: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865298, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.005861043930053711 s.

WARNING: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = min]: FBAobj = 0.7865298, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.707877, norm(fbaSol) = 125.36322828175349.


 >> Size of stoichiometric matrix: (74, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
 -- Maximization (iRound = 1). Block 1 [1/2].

 >> Note: Warnings above are thrown for testing purposes and can be safely ignored.

 -- All tests passed. -- 

INFO: COBRA tests passed
INFO: Removing Cbc v0.3.2
INFO: Removing Clp v0.3.1
INFO: Removing GLPK v0.4.2
INFO: Removing GLPKMathProgInterface v0.3.4

>>> End of log
