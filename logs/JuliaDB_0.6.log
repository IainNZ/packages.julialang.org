>>> 'Pkg.add("JuliaDB")' log
INFO: Installing BinaryProvider v0.3.0
INFO: Installing CodecZlib v0.4.3
INFO: Installing Dagger v0.6.0
INFO: Installing DataStructures v0.8.2
INFO: Installing DataValues v0.3.3
INFO: Installing Glob v1.1.1
INFO: Installing IndexedTables v0.7.2
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing JuliaDB v0.8.2
INFO: Installing LearnBase v0.1.6
INFO: Installing Logging v0.3.1
INFO: Installing LossFunctions v0.2.0
INFO: Installing MemPool v0.0.10
INFO: Installing Missings v0.2.9
INFO: Installing NamedTuples v4.0.2
INFO: Installing OnlineStats v0.17.3
INFO: Installing OnlineStatsBase v0.7.0
INFO: Installing PenaltyFunctions v0.0.2
INFO: Installing PooledArrays v0.2.1
INFO: Installing RecipesBase v0.3.1
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing StatsBase v0.22.0
INFO: Installing SweepOperator v0.1.0
INFO: Installing TableTraits v0.2.0
INFO: Installing TableTraitsUtils v0.1.3
INFO: Installing TextParse v0.5.0
INFO: Installing TranscodingStreams v0.5.2
INFO: Installing WeakRefStrings v0.4.6
INFO: Building CodecZlib
INFO: Package database updated

>>> 'Pkg.test("JuliaDB")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (944.02734375 MB free)
Uptime: 41419.0 sec
Load Avg:  0.990234375  0.96142578125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2443936 s       1381 s     188532 s     904154 s         31 s
#2  3504 MHz     488803 s       5622 s      69914 s    3499789 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - JuliaDB                       0.8.2
44 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - Cairo                         0.5.1
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.64.0
 - Dagger                        0.6.0
 - DataStructures                0.8.2
 - DataValues                    0.3.3
 - FixedPointNumbers             0.4.6
 - Glob                          1.1.1
 - Graphics                      0.3.0
 - Gtk                           0.13.1
 - IndexedTables                 0.7.2
 - IteratorInterfaceExtensions   0.0.2
 - LearnBase                     0.1.6
 - Logging                       0.3.1
 - LossFunctions                 0.2.0
 - MemPool                       0.0.10
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.2
 - NodeJS                        0.4.0
 - Nullables                     0.0.5
 - OnlineStats                   0.17.3
 - OnlineStatsBase               0.7.0
 - PenaltyFunctions              0.0.2
 - PooledArrays                  0.2.1
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.2.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - StatsBase                     0.22.0
 - SweepOperator                 0.1.0
 - TableTraits                   0.2.0
 - TableTraitsUtils              0.1.3
 - TextParse                     0.5.0
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - VegaLite                      0.1.0              ecb31725 (dirty)
 - WeakRefStrings                0.4.6
INFO: Testing JuliaDB
Test Summary: | Pass  Total
iteration     |   20     20
Test Summary: | Pass  Total
Utilities     |    3      3
Test Summary: | Pass  Total
Interval      |   10     10
Test Summary:                   | Pass  Total
vcat PooledArray DataValueArray |    2      2
Test Summary: | Pass  Total
table         |  116    116
Test Summary: | Pass  Total
map & reduce  |    2      2
Test Summary: | Pass  Total
getindex      |   30     30
Test Summary: | Pass  Total
select        |    6      6
Test Summary: | Pass  Total
convertdim    |    9      9
Test Summary: | Pass  Total
reducedim     |   20     20
Test Summary: | Pass  Total
select        |    1      1
Test Summary: | Pass  Total
permutedims   |    5      5
Test Summary: | Pass  Total
mapslices     |   11     11
Test Summary: | Pass  Total
flatten       |    3      3
Test Summary: | Pass  Total
join          |  175    175
Test Summary: | Pass  Total
broadcast     |   32     32
Test Summary: | Pass  Total
setindex!     |    4      4
Test Summary: | Pass  Total
extractarray  |    9      9
Test Summary: | Pass  Total
printing      |    1      1
Test Summary: | Pass  Total
has_overlaps  |    6      6
Test Summary: | Pass  Total
with_overlaps |    5      5
Test Summary: | Pass  Total
subtable      |    7      7
Test Summary:       | Pass  Total
Iterators.partition |    1      1
Test Summary: | Pass  Total
rechunk       |    1      1
Test Summary: | Pass  Total
rechunk by    |    2      2
Test Summary:              | Pass  Total
PooledArray/DataValueArray |    2      2
Test Summary: | Pass  Total
Columns       |    2      2
Test Summary: | Pass  Total
ndsparse      |    1      1
Test Summary: | Pass  Total
table         |    2      2
Test Summary: | Pass  Total
Load          |   24     24
Test Summary: | Pass  Total
save          |    4      4
Test Summary: | Pass  Total
online stats  |    3      3
Test Summary:      | Pass  Total
feature extraction |   15     15
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Int64,1,JuliaDB.##59#62}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Any,1,Base.#cat}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Any,1,Base.#cat}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Any,1,Base.#cat}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Int64,1,JuliaDB.##59#62}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Union{Dagger.Chunk, Dagger.Thunk},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::Dagger.##85#86{Dagger.DArray{Float64,1,JuliaDB.##59#62}})() at ./event.jl:73
ERROR (unhandled task failure): ProcessExitedException()
Stacktrace:
 [1] try_yieldto(::Base.##296#297{Task}, ::Task) at ./event.jl:189
 [2] wait() at ./event.jl:234
 [3] wait(::Condition) at ./event.jl:27
 [4] wait_impl(::Channel{Any}) at ./channels.jl:364
 [5] wait(::Channel{Any}) at ./channels.jl:360
 [6] take_buffered at ./channels.jl:319 [inlined]
 [7] take!(::Channel{Any}) at ./channels.jl:317
 [8] #remotecall_fetch#141(::Array{Any,1}, ::Function, ::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:350
 [9] remotecall_fetch(::Function, ::Base.Distributed.Worker, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:346
 [10] #remotecall_fetch#144(::Array{Any,1}, ::Function, ::Function, ::Int64, ::MemPool.DRef, ::Vararg{Any,N} where N) at ./distributed/remotecall.jl:367
 [11] addrefcount(::MemPool.DRef, ::Int64) at /home/vagrant/.julia/v0.6/Dagger/src/chunks.jl:121
 [12] macro expansion at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:146 [inlined]
 [13] macro expansion at ./task.jl:302 [inlined]
 [14] free_chunks(::Array{Dagger.Chunk{Any,MemPool.DRef},1}) at /home/vagrant/.julia/v0.6/Dagger/src/array/darray.jl:143
 [15] (::JuliaDB.##35#36{JuliaDB.DNextTable{NamedTuples._NT_x1_x2_x3{Float64,Int64,Int64},Tuple{Int64}}})() at ./event.jl:73
INFO: JuliaDB tests passed

>>> End of log
