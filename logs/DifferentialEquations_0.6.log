>>> 'Pkg.add("DifferentialEquations")' log
INFO: Installing AlgebraicDiffEq v0.1.0
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DataStructures v0.5.3
INFO: Installing DelayDiffEq v0.4.0
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.7.0
INFO: Installing DiffEqBiological v0.0.1
INFO: Installing DiffEqCallbacks v0.1.1
INFO: Installing DiffEqDevTools v0.8.1
INFO: Installing DiffEqFinancial v0.2.0
INFO: Installing DiffEqJump v0.3.2
INFO: Installing DiffEqMonteCarlo v0.6.0
INFO: Installing DiffEqNoiseProcess v0.1.1
INFO: Installing DiffEqPDEBase v0.3.2
INFO: Installing DiffEqParamEstim v0.4.0
INFO: Installing DiffEqSensitivity v0.2.2
INFO: Installing DiffEqUncertainty v0.0.1
INFO: Installing DifferentialEquations v2.2.1
INFO: Installing DimensionalPlotRecipes v0.0.2
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.12.5
INFO: Installing EllipsisNotation v0.1.0
INFO: Installing FiniteElementDiffEq v0.3.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing IterativeSolvers v0.3.0
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing MultiScaleArrays v0.2.0
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing OrdinaryDiffEq v2.3.2
INFO: Installing PDMats v0.6.0
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing Parameters v0.7.2
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.3
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Reexport v0.0.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Rmath v0.1.6
INFO: Installing Roots v0.3.1
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing SteadyStateDiffEq v0.1.0
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SugarBLAS v0.0.3
INFO: Installing Sundials v0.12.0
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Installing UnicodePlots v0.2.3
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Conda
INFO: Building Rmath
INFO: Building Sundials
INFO: Building SymEngine
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialEquations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialEquations")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1723.703125 MB free)
Uptime: 43362.0 sec
Load Avg:  0.9970703125  0.9853515625  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2830067 s       5580 s     138622 s     729914 s         39 s
#2  3499 MHz     838457 s        560 s      79390 s    3330717 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialEquations         2.2.1
 - JSON                          0.12.0
74 additional packages:
 - AlgebraicDiffEq               0.1.0
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - ChunkedArrays                 0.1.1
 - Combinatorics                 0.4.0
 - Compat                        0.25.2
 - Conda                         0.5.3
 - DataStructures                0.5.3
 - DelayDiffEq                   0.4.0
 - DiffBase                      0.2.0
 - DiffEqBase                    1.7.0
 - DiffEqBiological              0.0.1
 - DiffEqCallbacks               0.1.1
 - DiffEqDevTools                0.8.1
 - DiffEqFinancial               0.2.0
 - DiffEqJump                    0.3.2
 - DiffEqMonteCarlo              0.6.0
 - DiffEqNoiseProcess            0.1.1
 - DiffEqPDEBase                 0.3.2
 - DiffEqParamEstim              0.4.0
 - DiffEqSensitivity             0.2.2
 - DiffEqUncertainty             0.0.1
 - DimensionalPlotRecipes        0.0.2
 - Distances                     0.4.1
 - Distributions                 0.12.5
 - EllipsisNotation              0.1.0
 - FiniteElementDiffEq           0.3.0
 - ForwardDiff                   0.4.2
 - GenericSVD                    0.0.2
 - Hiccup                        0.1.1
 - IterativeSolvers              0.3.0
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - MultiScaleArrays              0.2.0
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - OrdinaryDiffEq                2.3.2
 - PDMats                        0.6.0
 - ParameterizedFunctions        2.0.0
 - Parameters                    0.7.2
 - PolynomialFactors             0.0.5
 - Polynomials                   0.1.5
 - PositiveFactorizations        0.0.4
 - Primes                        0.1.3
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Reexport                      0.0.3
 - ResettableStacks              0.1.0
 - Rmath                         0.1.6
 - Roots                         0.3.1
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - SteadyStateDiffEq             0.1.0
 - StochasticDiffEq              2.2.1
 - SugarBLAS                     0.0.3
 - Sundials                      0.12.0
 - SymEngine                     0.2.0
 - URIParser                     0.1.8
 - UnicodePlots                  0.2.3
 - VectorizedRoutines            0.0.2
INFO: Computing test dependencies for DifferentialEquations...
INFO: Installing Blosc v0.2.1
INFO: Installing DiffEqProblemLibrary v0.7.0
INFO: Installing FileIO v0.3.1
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Building Blosc
INFO: Building Conda
INFO: Building SymEngine
INFO: Building HDF5
INFO: Building Rmath
INFO: Testing DifferentialEquations
Test Summary:              | Pass  Total
Default Discrete Algorithm |    1      1
  7.350473 seconds (3.61 M allocations: 415.045 MiB, 2.62% gc time)
Test Summary:         | Pass  Total
Default ODE Algorithm |   16     16
 85.193037 seconds (18.96 M allocations: 1.963 GiB, 1.25% gc time)
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [8] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [9] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at ./<missing>:0
 [10] #solve#2(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:14
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at ./<missing>:0
 [12] #solve#1(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:5
 [13] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:2
 [14] include_from_node1(::String) at ./loading.jl:552
 [15] include(::String) at ./sysimg.jl:14
 [16] macro expansion at /home/vagrant/.julia/v0.6/DifferentialEquations/test/runtests.jl:6 [inlined]
 [17] macro expansion at ./test.jl:856 [inlined]
 [18] macro expansion at ./util.jl:237 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:552
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialEquations/test/default_steady_state_alg_test.jl, in expression starting on line 10
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at ./<missing>:0
 [11] #solve#2(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:14
 [12] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at ./<missing>:0
 [13] #solve#1(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:5
 [14] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:2
 [15] include_from_node1(::String) at ./loading.jl:552
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DifferentialEquations/test/runtests.jl:6 [inlined]
 [18] macro expansion at ./test.jl:856 [inlined]
 [19] macro expansion at ./util.jl:237 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:552
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialEquations/test/default_steady_state_alg_test.jl, in expression starting on line 10
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] #2 at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/algorithms.jl:6 [inlined]
 [9] #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at /home/vagrant/.julia/v0.6/SteadyStateDiffEq/src/solve.jl:30
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{SteadyStateDiffEq.##2#4}) at ./<missing>:0
 [11] #solve#2(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:14
 [12] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}, ::Void) at ./<missing>:0
 [13] #solve#1(::Bool, ::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:5
 [14] solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,##3#4,UniformScaling{Int64}}) at /home/vagrant/.julia/v0.6/DifferentialEquations/src/default_solve.jl:2
 [15] include_from_node1(::String) at ./loading.jl:552
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DifferentialEquations/test/runtests.jl:6 [inlined]
 [18] macro expansion at ./test.jl:856 [inlined]
 [19] macro expansion at ./util.jl:237 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:552
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialEquations/test/default_steady_state_alg_test.jl, in expression starting on line 10
Test Summary:                  | Pass  Total
Default Steady State Algorithm |    1      1
  7.774798 seconds (2.65 M allocations: 136.797 MiB, 1.73% gc time)
Test Summary:         | Pass  Total
Default SDE Algorithm |    4      4
  9.428451 seconds (3.94 M allocations: 678.828 MiB, 2.54% gc time)
Test Summary:          | Pass  Total
Default RODE Algorithm |    1      1
  2.004796 seconds (631.93 k allocations: 112.544 MiB, 2.08% gc time)
Test Summary:         | Pass  Total
Default DDE Algorithm |    1      1
  5.340446 seconds (1.31 M allocations: 145.968 MiB, 5.83% gc time)
Test Summary:         | Pass  Total
Default DAE Algorithm |    1      1
  1.998782 seconds (407.15 k allocations: 20.962 MiB, 0.72% gc time)
Test Summary:         |
Default FEM Algorithm | No tests
 32.465700 seconds (13.76 M allocations: 709.746 MiB, 2.27% gc time)
INFO: DifferentialEquations tests passed
INFO: Removing Blosc v0.2.1
INFO: Removing DiffEqProblemLibrary v0.7.0
INFO: Removing FileIO v0.3.1
INFO: Removing HDF5 v0.8.1
INFO: Removing JLD v0.6.10
INFO: Removing LegacyStrings v0.2.1

>>> End of log
