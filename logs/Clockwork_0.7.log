>>> 'Pkg.add("Clockwork")' log
[ Info: Cloning cache of Clockwork from https://github.com/malmaud/Clockwork.jl.git
[ Info: Installing Clockwork v0.2.0
[ Info: Package database updated

>>> 'Pkg.test("Clockwork")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1673587 s       5034 s      93612 s     572373 s         16 s
       #2  3500 MHz     392272 s       2786 s      40822 s    2257796 s          0 s
       
  Memory: 2.93927001953125 GB (673.03125 MB free)
  Uptime: 27485.0 sec
  Load Avg:  0.9970703125  0.9853515625  1.0185546875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Clockwork                     0.2.0
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing Clockwork
â”Œ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:6.
â”‚ Use `struct` instead.
â”” @ nothing Clockwork.jl:6
WARNING: importing deprecated binding Base.Dates into Clockwork.
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:62
WARNING: importing deprecated binding Base.DateTime into Clockwork.
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:80
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:81
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:82
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:83
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:87
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:87
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:90
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Clockwork/test/runtests.jl:2
â”Œ Warning: Constructors no longer fall back to `convert`. A constructor `Clock(::String)` should be defined instead.
â”‚   caller = top-level scope
â”” @ Core :0
Error During Test at /home/vagrant/.julia/v0.7/Clockwork/test/runtests.jl:7
  Test threw an exception of type ErrorException
  Expression: Clock("3:30") == ðŸ•ž
  Base.DateTime has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #DateTime#888 at ./deprecated.jl:138 [inlined]
   [3] DateTime at ./deprecated.jl:138 [inlined]
   [4] convert at /home/vagrant/.julia/v0.7/Clockwork/src/Clockwork.jl:94 [inlined]
   [5] Clock(::String) at ./deprecated.jl:560
   [6] top-level scope
   [7] include at ./boot.jl:292 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1011
   [9] include(::Module, ::String) at ./sysimg.jl:26
   [10] process_options(::Base.JLOptions) at ./client.jl:334
   [11] _start() at ./client.jl:386
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Clockwork/test/runtests.jl:7
â”Œ Error: ------------------------------------------------------------
â”‚ # Testing failed for Clockwork
â”‚   exception =
â”‚    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Clockwork/test/runtests.jl`, ProcessExited(1)) [1]
â”‚    Stacktrace:
â”‚     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
â”‚     [2] pipeline_error(::Base.Process) at ./process.jl:698
â”‚     [3] run(::Cmd) at ./process.jl:660
â”‚     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
â”‚     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
â”‚     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
â”‚     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
â”‚     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
â”‚     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
â”‚     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
â”‚     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
â”‚     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
â”‚     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
â”‚     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
â”‚     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
â”‚     [16] top-level scope
â”‚     [17] eval at ./boot.jl:295 [inlined]
â”‚     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
â”‚     [19] process_options(::Base.JLOptions) at ./client.jl:311
â”‚     [20] _start() at ./client.jl:386
â”” @ Base.Pkg.Entry entry.jl:732
ERROR: Clockwork had test errors

>>> End of log
