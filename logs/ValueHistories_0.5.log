>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing RecipesBase v0.1.0
INFO: Installing ValueHistories v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1334.5859375 MB free)
Uptime: 45491.0 sec
Load Avg:  0.9541015625  0.998046875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2677892 s       7020 s     213422 s    1088395 s         90 s
#2  3500 MHz     870210 s         41 s     107648 s    3466362 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - ValueHistories                0.2.0
3 additional packages:
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - RecipesBase                   0.1.0
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
Test Summary:       | Pass  Total
  [->] tst_history.jl | 1028   1028
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:         | Pass  Total
  [->] tst_mvhistory.jl |  538    538
   --> Baseline: 100 loops that accumulates a Float64
  0.004898 seconds (1.67 k allocations: 79.959 KB)
  0.000008 seconds (5 allocations: 176 bytes)
   --> ValueHistories.History{I,V}: 100 loops tracking accumulator as Float64
  0.012966 seconds (1.69 k allocations: 83.390 KB)
  0.000015 seconds (13 allocations: 4.391 KB)
   --> ValueHistories.History{I,V}: Converting result into arrays
  0.000028 seconds (3 allocations: 96 bytes)
  0.000026 seconds (3 allocations: 96 bytes)
   --> ValueHistories.QHistory{I,V}: 100 loops tracking accumulator as Float64
  0.011923 seconds (1.71 k allocations: 80.515 KB)
  0.000008 seconds (1 allocation: 16 bytes)
   --> ValueHistories.QHistory{I,V}: Converting result into arrays
  0.000359 seconds (1.11 k allocations: 30.016 KB)
  0.000161 seconds (1.11 k allocations: 30.016 KB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.013003 seconds (2.54 k allocations: 122.326 KB)
  0.000163 seconds (633 allocations: 32.703 KB)
   --> MVHistory: Converting result into arrays
  0.014957 seconds (3.05 k allocations: 169.905 KB)
  0.000310 seconds (423 allocations: 15.313 KB)
Test Summary:      | 
  [->] bm_history.jl | No tests
INFO: ValueHistories tests passed

>>> End of log
