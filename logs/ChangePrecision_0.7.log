>>> 'Pkg.add("ChangePrecision")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ChangePrecision from https://github.com/stevengj/ChangePrecision.jl.git
[ Info: Installing ChangePrecision v0.2.1
[ Info: Package database updated

>>> 'Pkg.test("ChangePrecision")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4922
Commit 23b08c5c5c (2018-04-20 18:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1848835 s       7073 s     146564 s     559939 s         24 s
       #2  3499 MHz     465782 s         47 s      55565 s    2428485 s          0 s
       
  Memory: 2.939197540283203 GB (1154.41015625 MB free)
  Uptime: 30018.0 sec
  Load Avg:  0.884765625  0.95654296875  1.0234375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ChangePrecision               0.2.1
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ChangePrecision
┌ Warning: Deprecated syntax `(arrayfuncs...)` at /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:238.
│ Use `(arrayfuncs...,)` instead.
└ @ nothing ChangePrecision.jl:238
┌ Warning: Deprecated syntax `(arrayfuncs...)` at /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:238.
│ Use `(arrayfuncs...,)` instead.
└ @ nothing ChangePrecision.jl:238
WARNING: importing deprecated binding Base.AbstractRNG into ChangePrecision.
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:163
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:164
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:163
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:164
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:163
WARNING: Base.AbstractRNG is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/src/ChangePrecision.jl:164
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:2
Test Summary: | Pass  Total
basic tests   |   34     34
Test Summary: | Pass  Total
rationals     |    6      6
Test Summary: | Pass  Total
complex       |    2      2
Test Summary: | Pass  Total
irrational    |   10     10
Test Summary: | Pass  Total
powers        |    4      4
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:63
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:63
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
Test Summary: | Pass  Total
arrays        |    6      6
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eigvals is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = eye(::Type, ::Type, ::Int64, ::Vararg{Int64,N} where N) at ChangePrecision.jl:175
└ @ ChangePrecision ChangePrecision.jl:175
WARNING: Base.lufact is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `F[:U]` is deprecated, use `F.U` instead.
│   caller = macro expansion at runtests.jl:73 [inlined]
└ @ Core runtests.jl:73
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:73 [inlined]
└ @ Core runtests.jl:73
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
WARNING: Base.lufact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
WARNING: Base.lufact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `F[:U]` is deprecated, use `F.U` instead.
│   caller = macro expansion at runtests.jl:74 [inlined]
└ @ Core runtests.jl:74
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:74 [inlined]
└ @ Core runtests.jl:74
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:75 [inlined]
└ @ Core runtests.jl:75
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
WARNING: Base.eigvals is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
WARNING: Base.eigvals is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
WARNING: Base.eigvals is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
WARNING: Base.eigvals is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:78 [inlined]
└ @ Core runtests.jl:78
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ChangePrecision/test/runtests.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = tofloat at ChangePrecision.jl:150 [inlined]
└ @ Core ChangePrecision.jl:150
┌ Warning: `eye(T::Type, m::Integer, n::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, n)`.If `T` element type is not necessary, consider the shorter `Matrix(I, m, n)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:79 [inlined]
└ @ Core runtests.jl:79
Test Summary: | Pass  Total
matrices      |    7      7
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = include(::Type, ::String) at ChangePrecision.jl:111
└ @ ChangePrecision ChangePrecision.jl:111
Test Summary: | Pass  Total
include       |    2      2
Test Summary: | Pass  Total
bigfloat      |    3      3
┌ Warning: `linspace(start, stop)` is deprecated, use `range(start, stop=stop, length=50)` instead.
│   caller = linspace(::Type, ::Int64, ::Int64) at ChangePrecision.jl:278
└ @ ChangePrecision ChangePrecision.jl:278
┌ Warning: `linspace(start, stop)` is deprecated, use `range(start, stop=stop, length=50)` instead.
│   caller = linspace(::Type, ::Rational{Int64}, ::Rational{Int64}) at ChangePrecision.jl:281
└ @ ChangePrecision ChangePrecision.jl:281
┌ Warning: `logspace(start, stop)` is deprecated, use `exp10.(range(start, stop=stop, length=50))` instead.
│   caller = logspace(::Type, ::Int64, ::Int64) at ChangePrecision.jl:279
└ @ ChangePrecision ChangePrecision.jl:279
┌ Warning: `logspace(start, stop)` is deprecated, use `exp10.(range(start, stop=stop, length=50))` instead.
│   caller = logspace(::Type, ::Int64, ::Float64) at ChangePrecision.jl:281
└ @ ChangePrecision ChangePrecision.jl:281
Test Summary: | Pass  Total
ranges        |    4      4
[ Info: ChangePrecision tests passed

>>> End of log
