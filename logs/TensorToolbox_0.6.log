>>> 'Pkg.add("TensorToolbox")' log
INFO: Cloning cache of TensorToolbox from https://github.com/lanaperisa/TensorToolbox.jl.git
INFO: Installing TensorToolbox v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorToolbox
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorToolbox")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (755.5859375 MB free)
Uptime: 90813.0 sec
Load Avg:  0.9970703125  0.9853515625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    6086926 s       7050 s     250373 s    1294315 s         61 s
#2  3500 MHz    1308862 s         83 s     123074 s    7501656 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.1
 - TensorToolbox                 0.1.0
1 additional packages:
 - Compat                        0.37.0
INFO: Testing TensorToolbox

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

...Test tensor X of size: (20, 10, 50, 5)

...Testing matten and tenmat.
Size of 1-mode matricization: [20, 2500]
Check if it folds back correctly: true
Size of 2-mode matricization: [10, 5000]
Check if it folds back correctly: true
Size of 3-mode matricization: [50, 1000]
Check if it folds back correctly: true
Size of 4-mode matricization: [5, 10000]
Check if it folds back correctly: true

...Testing hosvd.

Creating exact decomposition with rank = size(X):
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (20, 10, 50, 5)
Factor matrices sizes: (20, 20) (10, 10) (50, 50) (5, 5) 

...Testing function full, i.e. n-mode multiplication (ttm): vecnorm(full(T)-X) = 2.4443818936213616e-13

...Testing ttm for ttensor T and array of matrices A : vecnorm(full(ttm(T,A))-ttm(full(T),A)) = 1.5020436480803022e-11

...Testing hosvd with smaller multilinear rank: [5, 5, 5, 5]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (5, 5, 5, 5)
Factor matrices sizes: (20, 5) (10, 5) (50, 5) (5, 5) 

...Testing size of ttensor T : (20, 10, 50, 5)

...Testing ndims of ttensor T : 4

...Testing nrank of ttensor T for mode 1: 5

...Testing mrank of ttensor T: (5, 5, 5, 5)


...Testing hosvd for tensor with noise.
For ttensor T, X=full(T) tensor of size (60, 50, 40) and rank [5, 5, 5] , N noise tensor and S=hosvd(X+N,[5, 5, 5]).
Error( vecnorm(T-S) ): 0.014138594268649772. Noise vecnorm: 0.17354234291106724.


...Testing hosvd with eps_abs=1e-5 on function defined tensor X of size (20, 20, 20) and multlinear rank(12, 12, 12)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (7, 7, 7)
Factor matrices sizes: (20, 7) (20, 7) (20, 7) 

...Testing hosvd with eps_rel=1e-5 on function defined tensor X of size (20, 20, 20)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (6, 6, 6)
Factor matrices sizes: (20, 6) (20, 6) (20, 6) 

...Testing if factor matrices of ttensor T are orthogonal: true


...Recompress Tucer tensor T to smaller rank: [3, 3, 3]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (3, 3, 3)
Factor matrices sizes: (20, 3) (20, 3) (20, 3) 

...Testing orthogonal flag and reorthogonalization for random ttensor S of size (4, 5, 2).
Has orthogonal factor matrices: false
After reorthogonalization: true


...Testing vecnorm of ttensor T.
|vecnorm(T) - vecnorm(full(T))| = 2.1316282072803006e-14


...Testing scalar multiplication 3*T.
vecnorm(full(3*T) - 3*full(T)) = 3.923079530336531e-14


...Creating two random ttensors X and Y of size (6, 8, 2, 5, 4).

...Testing addition.
vecnorm(full(X+Y) - (full(X)+full(Y))) = 1.4514139612518708e-13


...Testing inner product.
|innerprod(X,Y) - innerprod(full(X),full(Y))| = 1.1368683772161603e-13


...Testing Hadamard product.
vecnorm(full(X.*Y) - full(X).*full(Y)) = 8.299499536990314e-13


...Testing singular values of matricizations of Tucker Tensor.

Singular values of matricizations of random Tucker tensor of size (10, 9, 8), rank [3, 3, 3] and vecnorm 136.08331915624274.
Mode-1 singular values error: 5.728578676879116e-14
Mode-2 singular values error: 1.464821375527116e-14
Mode-3 singular values error: 6.07087979554246e-14

Singular values of matricizations of random Tucker tensor of size (20, 20, 20, 20), rank [5, 5, 5, 5] and vecnorm 9919.031713343093.
Mode-1 singular values error: 5.39982560760014e-12
Mode-2 singular values error: 7.73070496506989e-12
Mode-3 singular values error: 7.346668290394296e-12
Mode-4 singular values error: 4.570154315443183e-12



INFO: TensorToolbox tests passed

>>> End of log
