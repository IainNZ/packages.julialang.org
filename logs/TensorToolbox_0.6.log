>>> 'Pkg.add("TensorToolbox")' log
INFO: Cloning cache of TensorToolbox from https://github.com/lanaperisa/TensorToolbox.jl.git
INFO: Installing TensorToolbox v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorToolbox
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorToolbox")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (794.46484375 MB free)
Uptime: 74316.0 sec
Load Avg:  0.9970703125  0.9853515625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4611372 s       5882 s     252812 s    1448624 s         64 s
#2  3499 MHz    1115613 s       1988 s     110597 s    6076486 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - TensorToolbox                 0.2.0
2 additional packages:
 - Compat                        0.54.0
 - Nullables                     0.0.3
INFO: Testing TensorToolbox


**** Testing tensor.jl

**Test tensor X of size: (20, 10, 50, 5)

...Testing functions matten and tenmat (by mode).
Size of 1-mode matricization: [20, 2500]
Check if it folds back correctly: true
Size of 2-mode matricization: [10, 5000]
Check if it folds back correctly: true
Size of 3-mode matricization: [50, 1000]
Check if it folds back correctly: true
Size of 4-mode matricization: [5, 10000]
Check if it folds back correctly: true

...Testing functions matten and tenmat (by rows and columns).
Size of R=[2, 1] and C=[4, 3] matricization: [200, 250]
Check if it folds back correctly: true

...Testing function ttm.
Created 4 matrices with 5 rows and appropriate number of columns.
Size of tensor Y=ttm(X,M): (5, 5, 5, 5)
Multiplication error: 9.688093214385705e-12

...Testing function ttv.
Multiplying a tensor X by a vector v in mode 2.
Size of tensor Y=ttv(X,v): (3, 2)

...Testing function krontm.
Created two tensors X and Y of order 3 and sizes (5, 4, 3) and (2, 5, 4).
Multiplying tkron(X,Y) by random matrix in mode 3.
Multiplication error: 1.3381526912477053e-14
Multiplying tkron(X,Y) by random matrices in modes [3, 2].
Multiplication error: 1.0223701381680906e-13
Multiplying tkron(X,Y) by random matrices in all modes.
Multiplication error: 5.876278638054726e-13

...Testing function mkrontv.
Multiplying mode-1 matricized tkron(X,Y) by a random vector.
Multiplication error: 1.464821375527116e-14
Multiplication error: 2.4129797777585066e-15

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 0.0


****Testing ttensor.jl

...Test tensor X of size: (20, 10, 50, 5)

...Testing hosvd.

Creating exact decomposition with rank = size(X):
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (20, 10, 50, 5)
Factor matrices sizes: (20, 20) (10, 10) (50, 50) (5, 5) 

...Testing function full, i.e. n-mode multiplication (ttm): vecnorm(full(T)-X) = 2.150866554730118e-13

...Testing ttm for ttensor T and array of matrices A : vecnorm(full(ttm(T,A))-ttm(full(T),A)) = 3.27954507740338e-11

...Testing hosvd with smaller multilinear rank: [5, 5, 5, 5]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (5, 5, 5, 5)
Factor matrices sizes: (20, 5) (10, 5) (50, 5) (5, 5) 

...Testing size of ttensor T : (20, 10, 50, 5)

...Testing ndims of ttensor T : 4

...Testing nrank of ttensor T for mode 1: 5

...Testing mrank of ttensor T: (5, 5, 5, 5)

...Testing functions matten and tenmat (by mode).


...Testing hosvd for tensor with noise.
For ttensor T, X=full(T) tensor of size (60, 50, 40) and rank [5, 5, 5] , N noise tensor and S=hosvd(X+N,[5, 5, 5]).
Error( vecnorm(T-S) ): 0.014565939999828447. Noise vecnorm: 0.1731433202322958.


...Testing hosvd with eps_abs=1e-5 on function defined tensor X of size (20, 20, 20) and multlinear rank(12, 12, 12)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (7, 7, 7)
Factor matrices sizes: (20, 7) (20, 7) (20, 7) 

...Testing hosvd with eps_rel=1e-5 on function defined tensor X of size (20, 20, 20)
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (6, 6, 6)
Factor matrices sizes: (20, 6) (20, 6) (20, 6) 

...Testing if factor matrices of ttensor T are orthogonal: true


...Recompress Tucker tensor T to smaller rank: [3, 3, 3]
Results:
Type of output T: TensorToolbox.ttensor{Float64}
Core tensor size: (3, 3, 3)
Factor matrices sizes: (20, 3) (20, 3) (20, 3) 

...Testing orthogonal flag and reorthogonalization for random ttensor S of size (4, 5, 2).
Has orthogonal factor matrices: false
After reorthogonalization: true


...Testing vecnorm of ttensor T.
|vecnorm(T) - vecnorm(full(T))| = 2.1316282072803006e-14


...Testing scalar multiplication 3*T.
vecnorm(full(3*T) - 3*full(T)) = 3.923079530336531e-14


...Creating two random ttensors X and Y of size (6, 8, 2, 5, 4).

...Testing addition.
vecnorm(full(X+Y) - (full(X)+full(Y))) = 3.4810055643885736e-13


...Testing inner product.
|innerprod(X,Y) - innerprod(full(X),full(Y))| = 9.094947017729282e-13


...Testing Hadamard product.
vecnorm(full(X.*Y) - full(X).*full(Y)) = 1.452502810220187e-12


...Testing singular values of matricizations of Tucker Tensor.

Singular values of matricizations of random Tucker tensor of size (10, 9, 8), rank [3, 3, 3] and vecnorm 269.3992626200435.
Mode-1 singular values error: 3.552713678800501e-14
Mode-2 singular values error: 4.263256414560601e-14
Mode-3 singular values error: 5.859285502108464e-14

Singular values of matricizations of random Tucker tensor of size (20, 20, 20, 20), rank [5, 5, 5, 5] and vecnorm 8213.951786672467.
Mode-1 singular values error: 5.224649291029008e-12
Mode-2 singular values error: 4.855373050318718e-12
Mode-3 singular values error: 1.5916157281026244e-12
Mode-4 singular values error: 4.1179124028246485e-12

...Testing function mhadtv.


...Creating two random ttensors X and Y of size (5, 4, 3).
Multiplying mode-1 matricized had(X,Y) by a random vector.
Multiplication error: 6.71294862268067e-15
Multiplication error: 5.030425302625293e-15
Multiplication error: 2.640505297231079e-13

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 1.2773717797743836e-14


****Testing ktensor.jl

**Test ktensors X and Y of size: (4, 3, 2)


...Testing function ndims.
X is of order: 3

...Testing function ttensor and full.
...Testing scalar multiplication.
vecnorm(full(3*X) - 3*full(X)) = 2.5965281649869636e-16
...Testing functions plus and minus.
vecnorm(full(Z)-(full(X)+full(Y))) = 4.710277376051325e-16
vecnorm(full(Z)-(full(X)-full(Y))) = 2.4827765763866867e-16
...Testing function innerprod.
vecnorm(innerprod(X,Y)-innerprod(full(X),full(Y))) = 0.0
...Testing function vecnorm.
...Testing functions arrange and arrange!.
vecnorm(full(X)-full(Z)) = 3.288479380767702e-16
...Testing functions normalize and normalize!.
vecnorm(full(X)-full(Z)) = 2.954547800353482e-16
...Testing functions redistribute and redistribute!.
vecnorm(full(X)-full(Z)) = 3.3922605173709367e-16
...Testing functions fixsigns, fixsigns! and isequal.
vecnorm(full(X)-full(Z)) = 0.0
...Testing functions ttm and ttv.

...Testing function tocell.
Is the output MatrixCell: true

...Testing function tenmat by mode 2.

...Testing function mttkrp.
Multiplying mode-1 matricized tensor X by Khatri-Rao product of matrices.
Multiplication error: 6.906639820044629e-16



INFO: TensorToolbox tests passed

>>> End of log
