>>> 'Pkg.add("IntervalTrees")' log
INFO: Installing Docile v0.5.23
INFO: Installing IntervalTrees v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of IntervalTrees
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IntervalTrees")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for IntervalTrees...
INFO: Installing FactCheck v0.4.3
INFO: Testing IntervalTrees
Getters
5 facts verified.
Search
  > true positives
  > true negatives
7 facts verified.
Iteration
  > from
    Error :: (line:272) :: from
      Expression: length(collect(from(t,startpos))) --> expected_count
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect at ./array.jl:225 [inlined]
       in #63 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##63#75{Int64}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##61#73)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:202
       in context(::TestIntervalTrees.##61#73, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##58#70)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##58#70, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: from
      Expression: length(collect(from(t,0))) --> n
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #65 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##65#77, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##61#73)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:203
       in context(::TestIntervalTrees.##61#73, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##58#70)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##58#70, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: from
      Expression: length(collect(from(t,maxend + 1))) --> 0
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect at ./array.jl:225 [inlined]
       in #67 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##67#79{Int64}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##61#73)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:204
       in context(::TestIntervalTrees.##61#73, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##58#70)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##58#70, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: from
      Expression: length(collect(from(IntervalTree{Int,Int}(),0))) --> 0
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,Int64,64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect at ./array.jl:225 [inlined]
       in (::TestIntervalTrees.##69#81)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##69#81, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##61#73)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:205
       in context(::TestIntervalTrees.##61#73, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##58#70)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##58#70, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
Out of 5 total facts:
  Verified: 1
  Errored:  4
Interval Intersection
  Error :: (line:272)
    Expression: length(collect(intersect(t,(x,x)))) --> 1
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in do_fact(::TestIntervalTrees.##84#111, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##82#109)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:224
     in facts(::TestIntervalTrees.##82#109, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: length(collect(intersect(t,(a,a)))) --> 0
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in do_fact(::TestIntervalTrees.##88#115, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##82#109)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:228
     in facts(::TestIntervalTrees.##82#109, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: length(collect(intersect(t,((intervals[1])[1],(intervals[end])[2])))) --> length(t)
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in do_fact(::TestIntervalTrees.##92#119, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##82#109)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:232
     in facts(::TestIntervalTrees.##82#109, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: all(Bool[random_intersection_query() for _ = 1:1000]) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in (::TestIntervalTrees.#random_intersection_query#124)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:241
     in (::TestIntervalTrees.##98#126)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##98#126, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##82#109)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:244
     in facts(::TestIntervalTrees.##82#109, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 13 total facts:
  Verified: 9
  Errored:  4
Nonunique
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect at ./array.jl:225 [inlined]
     in #141 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##141#152{IntervalTrees.IntervalBTree{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##137#148)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:283
     in facts(::TestIntervalTrees.##137#148, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 5 total facts:
  Verified: 4
  Errored:  1
Tree Intersection
  Error :: (line:272)
    Expression: collect(a) == collect(b) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in do_fact(::TestIntervalTrees.##161#168, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##159#166)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:311
     in facts(::TestIntervalTrees.##159#166, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: isempty(collect(intersect(t1,t2,method=:iterative))) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect at ./array.jl:225 [inlined]
     in (::TestIntervalTrees.##163#170)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##163#170, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##159#166)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:318
     in facts(::TestIntervalTrees.##159#166, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: isempty(collect(intersect(t1,t2,method=:successive))) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
     in (::TestIntervalTrees.##165#172)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##165#172, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##159#166)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:319
     in facts(::TestIntervalTrees.##159#166, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 3 total facts:
  Errored:  3
Insertion
  > random insertions
    Error :: (line:272) :: random insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #176 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##176#227, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##174#225{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:332
       in context(::TestIntervalTrees.##174#225{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:327
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
  > ordered insertions
    Error :: (line:272) :: ordered insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #185 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##185#236, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##183#234{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:343
       in context(::TestIntervalTrees.##183#234{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:338
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
  > reverse ordered insertions
    Error :: (line:272) :: reverse ordered insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #194 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##194#245, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##192#243{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:354
       in context(::TestIntervalTrees.##192#243{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:349
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
  > bulk insertion
    Error :: (line:272) :: bulk insertion
      Expression: collect(keys(t)) == [Interval{Int}(interval.first,interval.last) for interval = intervals] --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in (::TestIntervalTrees.##203#254{Array{IntervalTrees.IntervalValue{Int64,Int64},1}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##203#254{Array{IntervalTrees.IntervalValue{Int64,Int64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##201#252{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:369
       in context(::TestIntervalTrees.##201#252{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: bulk insertion
      Expression: collect(values(t)) == [interval.value for interval = intervals] --> true
      MethodError: no method matching length(::IntervalTrees.IntervalValueIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalValueIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in (::TestIntervalTrees.##205#256{Array{IntervalTrees.IntervalValue{Int64,Int64},1}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##205#256{Array{IntervalTrees.IntervalValue{Int64,Int64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##201#252{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:371
       in context(::TestIntervalTrees.##201#252{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: bulk insertion
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #207 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##207#258, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##201#252{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:372
       in context(::TestIntervalTrees.##201#252{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
    Error :: (line:272) :: bulk insertion
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
       in _similar_for at ./array.jl:209 [inlined]
       in _collect at ./array.jl:229 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:225
       in #215 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in do_fact(::TestIntervalTrees.##215#266, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##201#252{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:379
       in context(::TestIntervalTrees.##201#252{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##173#224)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##173#224, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:266
       in _start() at ./client.jl:322
Out of 24 total facts:
  Verified: 17
  Errored:  7
Updates
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect at ./array.jl:225 [inlined]
     in #277 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##277#286{IntervalTrees.IntervalBTree{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##275#284)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:404
     in facts(::TestIntervalTrees.##275#284, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
Out of 4 total facts:
  Verified: 3
  Errored:  1
Deletion
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8}) at ./array.jl:225
     in #303 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##303#376, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##293#366)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:433
     in facts(::TestIntervalTrees.##293#366, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8})
     in _similar_for at ./array.jl:209 [inlined]
     in _collect at ./array.jl:229 [inlined]
     in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8}) at ./array.jl:225
     in #316 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##316#389, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##293#366)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:445
     in facts(::TestIntervalTrees.##293#366, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:266
     in _start() at ./client.jl:322
ERROR: LoadError: MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},4})
 in _similar_for at ./array.jl:209 [inlined]
 in _collect at ./array.jl:229 [inlined]
 in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},4}) at ./array.jl:225
 in (::TestIntervalTrees.##293#366)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:512
 in facts(::TestIntervalTrees.##293#366, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl, in expression starting on line 411
============================[ ERROR: IntervalTrees ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: IntervalTrees had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
