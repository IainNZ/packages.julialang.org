>>> 'Pkg.add("RandomCorrelationMatrices")' log
INFO: Cloning cache of RandomCorrelationMatrices from https://github.com/IainNZ/RandomCorrelationMatrices.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.6.1
INFO: Installing Distributions v0.13.0
INFO: Installing PDMats v0.7.1
INFO: Installing QuadGK v0.1.3
INFO: Installing RandomCorrelationMatrices v0.3.0
INFO: Installing Rmath v0.2.0
INFO: Installing SHA v0.3.3
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.2.0
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("RandomCorrelationMatrices")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (604.828125 MB free)
Uptime: 36396.0 sec
Load Avg:  1.02392578125  0.9853515625  1.005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2153148 s       5750 s     256578 s     816130 s         54 s
#2  3500 MHz     600385 s       1720 s     107909 s    2847881 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - RandomCorrelationMatrices     0.3.0
13 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - Compat                        0.41.0
 - DataStructures                0.6.1
 - Distributions                 0.13.0
 - PDMats                        0.7.1
 - QuadGK                        0.1.3
 - Rmath                         0.2.0
 - SHA                           0.3.3
 - SpecialFunctions              0.2.0
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.2.0
INFO: Testing RandomCorrelationMatrices
Random correlation matrix
WARNING: chol(A::AbstractMatrix,::Type{Val{:L}}) is deprecated, use ctranspose(chol(A)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in chol(::Array{Float64,2}, ::Type{Val{:L}}) at ./deprecated.jl:50
 in randcormatrix(::Int64, ::Int64) at /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/src/RandomCorrelationMatrices.jl:37
 in macro expansion; at /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl, in expression starting on line 8
η = 2
 1.00  0.07  0.59  0.78 
 0.07  1.00  0.28 -0.03 
 0.59  0.28  1.00  0.69 
 0.78 -0.03  0.69  1.00 
mean(ranges) = 0.9609607012737854
median(ranges) = 0.9522641114303307
η = 8
 1.00 -0.24  0.15  0.18 
-0.24  1.00 -0.10 -0.06 
 0.15 -0.10  1.00  0.02 
 0.18 -0.06  0.02  1.00 
mean(ranges) = 0.5846747844778039
median(ranges) = 0.5787807331445632
η = 32
 1.00 -0.06  0.08 -0.11 
-0.06  1.00 -0.05  0.12 
 0.08 -0.05  1.00 -0.14 
-0.11  0.12 -0.14  1.00 
mean(ranges) = 0.30945257660853404
median(ranges) = 0.3050648782864559
η = 128
 1.00  0.05 -0.00 -0.02 
 0.05  1.00 -0.05  0.07 
-0.00 -0.05  1.00  0.03 
-0.02  0.07  0.03  1.00 
mean(ranges) = 0.1572165385498064
median(ranges) = 0.15120529987720227

Random covariance matrix
σ = [100,200,300,400,500]
ERROR: LoadError: ArgumentError: matrix is not symmetric/Hermitian. This error can be avoided by calling chol(Hermitian(A)) which will ignore either the upper or lower triangle of the matrix.
 in chol(::Array{Float64,2}) at ./linalg/cholesky.jl:166
 in chol(::Array{Float64,2}, ::Type{Val{:L}}) at ./deprecated.jl:52
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl, in expression starting on line 33
======================[ ERROR: RandomCorrelationMatrices ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: RandomCorrelationMatrices had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
