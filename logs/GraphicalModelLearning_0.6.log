>>> 'Pkg.add("GraphicalModelLearning")' log
INFO: Cloning cache of GraphicalModelLearning from https://github.com/lanl-ansi/GraphicalModelLearning.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.0
INFO: Installing Calculus v0.3.1
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DataStructures v0.8.2
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing ForwardDiff v0.7.5
INFO: Installing GraphicalModelLearning v0.0.1
INFO: Installing Ipopt v0.3.0
INFO: Installing JuMP v0.18.1
INFO: Installing MathProgBase v0.7.1
INFO: Installing Missings v0.2.9
INFO: Installing NaNMath v0.3.1
INFO: Installing ReverseDiffSparse v0.8.1
INFO: Installing SHA v0.5.7
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.22.0
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Ipopt
WARNING: imported binding for srcdir overwritten in module __anon__
INFO: Package database updated

>>> 'Pkg.test("GraphicalModelLearning")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (793.51171875 MB free)
Uptime: 14146.0 sec
Load Avg:  1.013671875  1.03564453125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     780179 s        110 s      65813 s     380991 s         11 s
#2  3504 MHz     160388 s         40 s      28835 s    1199436 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GraphicalModelLearning        0.0.1
 - JSON                          0.17.2
22 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - Calculus                      0.3.1
 - CommonSubexpressions          0.1.0
 - Compat                        0.64.0
 - DataStructures                0.8.2
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - ForwardDiff                   0.7.5
 - Ipopt                         0.3.0
 - JuMP                          0.18.1
 - MathProgBase                  0.7.1
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - ReverseDiffSparse             0.8.1
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.22.0
 - URIParser                     0.3.1
INFO: Testing GraphicalModelLearning
WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 3)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 3)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :*, 1, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :+, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :log, 10)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :log, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :log, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :log, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, -3.14159, 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, Base.Irrational{:π}(), 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, Base.Irrational{:π}(), 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, Base.Irrational{:π}(), 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, Base.Irrational{:π}(), 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, -3.14159, 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, -3.14159, 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, -3.14159, 180)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, -1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 1, 2)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :sqrt, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :sqrt, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :sqrt, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :sqrt, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :+, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :-, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :+, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :sqrt, Base.Irrational{:π}())::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :/, 2, 1.77245)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :*, 2, 1)::Any
  ** incremental compilation may be broken for this module **

WARNING: eval from module Calculus to ReverseDiffSparse:    
Expr(:call, :+, 2)::Any
  ** incremental compilation may be broken for this module **


WARNING: deprecated syntax "inner constructor FactorGraph(...) around /home/vagrant/.julia/v0.6/GraphicalModelLearning/src/models.jl:13".
Use "FactorGraph{T}(...) where T" instead.
INFO: assuming spin alphabet
INFO: assuming spin alphabet
INFO: assuming spin alphabet
INFO: assuming spin alphabet
INFO: assuming spin alphabet
INFO: assuming spin alphabet

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

INFO: assuming spin alphabet
Test Summary:          | Pass  Total
GraphicalModelLearning |  225    225
INFO: GraphicalModelLearning tests passed
INFO: No packages to install, update or remove

>>> End of log
