>>> 'Pkg.add("Instruments")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Instruments from https://github.com/BBN-Q/Instruments.jl.git
[ Info: Installing BinDeps v0.8.7
[ Info: Installing Instruments v0.1.0
[ Info: Installing SHA v0.5.6
[ Info: Installing URIParser v0.3.1
[ Info: Building Instruments
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Instruments/deps/build.jl:6
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
┌ Error: ------------------------------------------------------------
│ # Build failed for Instruments
│   exception =
│    LoadError: None of the selected providers can install dependency visa.
│    Use BinDeps.debug(package_name) to see available providers
│    
│    Stacktrace:
│     [1] error at ./error.jl:33 [inlined]
│     [2] satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:948
│     [3] satisfy!(::BinDeps.LibraryDependency) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:921
│     [4] top-level scope at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:976
│     [5] include at ./boot.jl:306 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:1067
│     [7] include at ./sysimg.jl:29 [inlined]
│     [8] include(::String) at ./loading.jl:1101
│     [9] top-level scope
│     [10] eval at ./boot.jl:309 [inlined]
│     [11] eval at ./sysimg.jl:74 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:1096 (repeats 2 times)
│     [13] #6 at ./none:13 [inlined]
│     [14] cd(::getfield(Main, Symbol("##6#8")){String}, ::String) at ./file.jl:72
│     [15] (::getfield(Main, Symbol("##5#7")))(::IOStream) at ./none:12
│     [16] #open#321(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##5#7")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [17] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [18] top-level scope
│     [19] eval at ./boot.jl:309 [inlined]
│     [20] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [21] exec_options(::Base.JLOptions) at ./client.jl:304
│     [22] _start() at ./client.jl:455
│    in expression starting at /home/vagrant/.julia/v0.7/Instruments/deps/build.jl:976
└ @ Main none:16
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ Instruments had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("Instruments")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated

>>> 'Pkg.test("Instruments")' log
Package was unable to be tested.

>>> End of log
