>>> 'Pkg.add("ShiftedArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ShiftedArrays from https://github.com/piever/ShiftedArrays.jl.git
[ Info: Installing Missings v0.2.7
[ Info: Installing ShiftedArrays v0.3.1
[ Info: Building ShiftedArrays
WARNING: importing deprecated binding Base.STDERR into __anon__.
WARNING: Base.STDERR is deprecated, use stderr instead.
  likely near /home/vagrant/.julia/v0.7/ShiftedArrays/deps/build.jl:2
┌ Warning: `print_with_color(color, args...; kwargs...)` is deprecated, use `printstyled(args...; kwargs..., color=color)` instead.
│   caller = top-level scope at build.jl:2
└ @ Core build.jl:2
The shift index convention has changed to be in agreement with Julia's function
`circshift`. Now a positive shift shits to the right, i.e. `ShiftedVector(v, 1)[2] == v[2-1] == v[1]`.
Similarly `copy(CircShiftedVector(v, 1)) == circshift(v, 1)`.
In agreement with the Base function `circshift`, the `dim` keyword argument is no longer
supported. If the shift vector is too short (or if you input an integer) only the first
few dimensions will be shifted.
For more details see https://github.com/piever/ShiftedArrays.jl
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ShiftedArrays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ShiftedArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4390
Commit 79c7bdd9ec (2018-02-26 07:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2256147 s       7874 s     128790 s     672168 s         25 s
       #2  3499 MHz     515958 s         91 s      50130 s    2973363 s          0 s
       
  Memory: 2.93927001953125 GB (706.50390625 MB free)
  Uptime: 35994.0 sec
  Load Avg:  0.974609375  0.91943359375  0.93505859375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - ShiftedArrays                 0.3.1
4 additional packages:
 - Compat                        0.55.0
 - Missings                      0.2.7
 - Nullables                     0.0.3
 - tmpdaTwg0                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ShiftedArrays
Test Summary: | Pass  Total
ShiftedVector |    8      8
Test Summary: | Pass  Total
ShiftedArray  |    8      8
Test Summary:     | Pass  Total
CircShiftedVector |    9      9
Test Summary:    | Pass  Total
CircShiftedArray |    6      6
Test Summary: | Pass  Total
circshift     |    3      3
Test Summary: | Pass  Total
laglead       |    6      6
reduce: Error During Test at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:99
  Test threw an exception of type MethodError
  Expression: reduce(+, ss, -1:2) == [10, 14, 18, 23]
  MethodError: reduce(::typeof(+), ::Array{ShiftedArray{Int64,Missing,1,Array{Int64,1}},1}, ::UnitRange{Int64}) is ambiguous. Candidates:
    reduce(op, v0, A::AbstractArray) in Base at reducedim.jl:316
    reduce(op, ss::AbstractArray{#s8,N} where N where #s8<:ShiftedArray, args...) in ShiftedArrays at /home/vagrant/.julia/v0.7/ShiftedArrays/src/reduce.jl:166
  Possible fix, define
    reduce(::Any, ::AbstractArray{#s8,N} where N where #s8<:ShiftedArray, ::AbstractArray)
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:99 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:97
reduce: Error During Test at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:100
  Test threw an exception of type MethodError
  Expression: mapreduce((t->begin
                t ^ 2
            end), +, ss, -1:2) == [58, 90, 126, 195]
  MethodError: mapreduce(::getfield(, Symbol("##13#14")), ::typeof(+), ::Array{ShiftedArray{Int64,Missing,1,Array{Int64,1}},1}, ::UnitRange{Int64}) is ambiguous. Candidates:
    mapreduce(f, op, v0, A::AbstractArray) in Base at reducedim.jl:270
    mapreduce(g, f, ss::AbstractArray{#s1,N} where N where #s1<:ShiftedArray, args...) in ShiftedArrays at /home/vagrant/.julia/v0.7/ShiftedArrays/src/reduce.jl:161
  Possible fix, define
    mapreduce(::Any, ::Any, ::AbstractArray{#s1,N} where N where #s1<:ShiftedArray, ::AbstractArray)
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:100 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:97
reduce: Error During Test at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:101
  Test threw an exception of type MethodError
  Expression: isequal(reduce(+, ss, -10:2), [missing, missing, missing, missing, missing, 1, 3, 5, 7, 10, 14, 18, 23])
  MethodError: reduce(::typeof(+), ::Array{ShiftedArray{Int64,Missing,1,Array{Int64,1}},1}, ::UnitRange{Int64}) is ambiguous. Candidates:
    reduce(op, v0, A::AbstractArray) in Base at reducedim.jl:316
    reduce(op, ss::AbstractArray{#s8,N} where N where #s8<:ShiftedArray, args...) in ShiftedArrays at /home/vagrant/.julia/v0.7/ShiftedArrays/src/reduce.jl:166
  Possible fix, define
    reduce(::Any, ::AbstractArray{#s8,N} where N where #s8<:ShiftedArray, ::AbstractArray)
  Stacktrace:
   [1] macro expansion at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:101 [inlined]
   [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1012 [inlined]
   [3] top-level scope at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:97
Test Summary: | Error  Total
reduce        |     3      3
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl:96
┌ Error: ------------------------------------------------------------
│ # Testing failed for ShiftedArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ShiftedArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:298 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: ShiftedArrays had test errors

>>> End of log
