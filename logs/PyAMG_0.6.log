>>> 'Pkg.add("PyAMG")' log
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing Conda v0.8.1
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.17.1
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.15) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of PyAMG
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (983.50390625 MB free)
Uptime: 20899.0 sec
Load Avg:  0.9404296875  0.998046875  0.9716796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz    1194793 s         90 s      91493 s     504030 s          6 s
#2  3506 MHz     223996 s         64 s      36998 s    1789700 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
3 required packages:
 - JSON                          0.17.2
 - POMDPModels                   0.2.2
 - PyAMG                         0.2.1
62 additional packages:
 - AMG                           0.1.2              master
 - AbstractTrees                 0.1.0
 - AssetRegistry                 0.0.2
 - AutoHashEquals                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blink                         0.6.2
 - CPUTime                       0.1.0
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.11
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        1.0.0
 - Conda                         0.8.1
 - D3Trees                       0.2.0
 - DataFrames                    0.11.7
 - DataStreams                   0.3.6
 - DataStructures                0.8.4
 - DiscreteValueIteration        0.0.0-             master (unregistered)
 - Distributions                 0.15.0
 - FixedPointNumbers             0.4.6
 - Hiccup                        0.1.1
 - HttpCommon                    0.4.0
 - HttpParser                    0.4.0
 - HttpServer                    0.3.1
 - IncompleteSelectedInversion   0.0.0-             master (unregistered)
 - IterativeSolvers              0.6.0
 - Iterators                     0.3.1
 - LaTeXStrings                  1.0.0
 - Lazy                          0.12.1
 - MCTS                          0.0.0-             master (unregistered)
 - MacroTools                    0.4.2
 - MbedTLS                       0.5.12
 - Missings                      0.2.10
 - Mustache                      0.3.3
 - Mux                           0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.6
 - PDMats                        0.8.0
 - POMDPToolbox                  0.2.7
 - POMDPs                        0.6.7
 - Pidfile                       1.0.0
 - ProgressMeter                 0.5.6
 - PyCall                        1.17.1
 - QuadGK                        0.3.0
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - Rmath                         0.4.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - StatsBase                     0.23.1
 - StatsFuns                     0.6.1
 - TikzPictures                  1.2.0
 - TranscodingStreams            0.5.3
 - URIParser                     0.3.1
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
 - WebSockets                    0.5.0
INFO: Computing test dependencies for PyAMG...
INFO: No packages to install, update or remove
INFO: Testing PyAMG
Info: Installing scipy.sparse via the Conda scipy package...
Solving environment: ...working... done
scipy-1.1.0          | 18.0 MB |            |   0% scipy-1.1.0          | 18.0 MB | #5         |  15% scipy-1.1.0          | 18.0 MB | ###4       |  35% scipy-1.1.0          | 18.0 MB | #####3     |  54% scipy-1.1.0          | 18.0 MB | #######1   |  71% scipy-1.1.0          | 18.0 MB | ########4  |  85% scipy-1.1.0          | 18.0 MB | #########4 |  95% scipy-1.1.0          | 18.0 MB | ########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - scipy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    scipy-1.1.0                |   py27hc49cb51_0        18.0 MB

The following NEW packages will be INSTALLED:

    scipy: 1.1.0-py27hc49cb51_0


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
Info: Installing pyamg via the Conda pyamg package...
Solving environment: ...working... done
pyamg-3.3.2          |  1.0 MB |            |   0% pyamg-3.3.2          |  1.0 MB | 1          |   1% pyamg-3.3.2          |  1.0 MB | ########   |  80% pyamg-3.3.2          |  1.0 MB | ########## | 100% 
atomicwrites-1.1.5   |   10 KB |            |   0% atomicwrites-1.1.5   |   10 KB | ########## | 100% 
attrs-18.1.0         |   43 KB |            |   0% attrs-18.1.0         |   43 KB | ########## | 100% 
more-itertools-4.2.0 |   75 KB |            |   0% more-itertools-4.2.0 |   75 KB | ########## | 100% 
pluggy-0.6.0         |   22 KB |            |   0% pluggy-0.6.0         |   22 KB | ########## | 100% 
funcsigs-1.0.2       |   20 KB |            |   0% funcsigs-1.0.2       |   20 KB | ########## | 100% 
py-1.5.4             |  134 KB |            |   0% py-1.5.4             |  134 KB | ########## | 100% 
pytest-3.6.3         |  293 KB |            |   0% pytest-3.6.3         |  293 KB | ########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - pyamg


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    pyamg-3.3.2                |   py27h54d9346_0         1.0 MB
    atomicwrites-1.1.5         |           py27_0          10 KB
    attrs-18.1.0               |           py27_0          43 KB
    more-itertools-4.2.0       |           py27_0          75 KB
    pluggy-0.6.0               |           py27_0          22 KB
    funcsigs-1.0.2             |           py27_0          20 KB
    py-1.5.4                   |           py27_0         134 KB
    pytest-3.6.3               |           py27_0         293 KB
    ------------------------------------------------------------
                                           Total:         1.6 MB

The following NEW packages will be INSTALLED:

    atomicwrites:   1.1.5-py27_0        
    attrs:          18.1.0-py27_0       
    funcsigs:       1.0.2-py27_0        
    more-itertools: 4.2.0-py27_0        
    pluggy:         0.6.0-py27_0        
    py:             1.5.4-py27_0        
    pyamg:          3.3.2-py27h54d9346_0
    pytest:         3.6.3-py27_0        


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   0.143633 seconds (14.49 k allocations: 9.365 MiB)
PyAMG-Warmup:   1.602928 seconds (617.81 k allocations: 33.311 MiB, 0.86% gc time)
PyAMG:   0.214232 seconds (15.23 k allocations: 1.697 MiB)
|x_\ - x_amg|_∞ = 1.4702752904049987e-12
|A x_amg - b|_∞ = 3.10676568915369e-8
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.524195 seconds (64 allocations: 93.885 MiB, 3.17% gc time)
PyAMG-Warmup:   0.851102 seconds (261 allocations: 3.223 MiB)
PyAMG:   0.803092 seconds (261 allocations: 3.223 MiB)
|x_\ - x_amg|_∞ = 1.9244675297791503e-12
|A x_amg - b|_∞ = 1.71407066318352e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.286124 seconds (14.43 k allocations: 14.831 MiB)
First solve:   0.260820 seconds (34.16 k allocations: 2.691 MiB)
Second solve: (tol 1e-9)  0.253706 seconds (4.83 k allocations: 1.210 MiB)
Third solve: (tol 1e-6)  0.144243 seconds (152 allocations: 982.469 KiB)
|A x_amg - b|_∞ = 3.804971598242446e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.020957 seconds (1.16 k allocations: 423.016 KiB)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.020284 seconds (718 allocations: 885.219 KiB)
PyAMG solver
  0.015430 seconds (186 allocations: 85.281 KiB)
|x_cg-x| = 2.525211412460893e-8 
|x_pcg-x| = 9.158169074363943e-9
|x_pyamg-x| = 9.158169183208691e-9
Test Summary: | Pass  Total
PyAMG         |    8      8
INFO: PyAMG tests passed
INFO: No packages to install, update or remove

>>> End of log
