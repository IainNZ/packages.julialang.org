>>> 'Pkg.add("PyAMG")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Conda v0.5.3
INFO: Installing MacroTools v0.3.6
INFO: Installing PyAMG v0.0.9
INFO: Installing PyCall v1.12.0
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of PyAMG
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (748.2734375 MB free)
Uptime: 45037.0 sec
Load Avg:  0.99658203125  1.00634765625  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2943924 s       7124 s     119703 s     719264 s         49 s
#2  3499 MHz     619690 s         38 s      63037 s    3746432 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - PyAMG                         0.0.9
7 additional packages:
 - BinDeps                       0.5.0
 - Compat                        0.25.2
 - Conda                         0.5.3
 - MacroTools                    0.3.6
 - PyCall                        1.12.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Computing test dependencies for PyAMG...
INFO: Cloning cache of IterativeSolvers from https://github.com/JuliaMath/IterativeSolvers.jl.git
INFO: Cloning cache of SugarBLAS from https://github.com/lopezm94/SugarBLAS.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing IterativeSolvers v0.3.0
INFO: Installing LinearMaps v0.3.0
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.1
INFO: Installing SugarBLAS v0.0.3
INFO: Installing UnicodePlots v0.2.3
INFO: Testing PyAMG

WARNING: deprecated syntax "typealias RugeStubenSolver AMGSolver{RugeStuben}" at /home/vagrant/.julia/v0.6/PyAMG/src/PyAMG.jl:74.
Use "const RugeStubenSolver = AMGSolver{RugeStuben}" instead.

WARNING: deprecated syntax "typealias SmoothedAggregationSolver AMGSolver{SmoothedAggregation}" at /home/vagrant/.julia/v0.6/PyAMG/src/PyAMG.jl:75.
Use "const SmoothedAggregationSolver = AMGSolver{SmoothedAggregation}" instead.
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   1.001761 seconds (263.81 k allocations: 22.812 MiB, 0.95% gc time)
PyAMG-Warmup: /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/pyamg/strength.py:533: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  if B == 'ones':
  2.338143 seconds (746.95 k allocations: 41.350 MiB, 0.71% gc time)
PyAMG:   0.264384 seconds (276 allocations: 942.813 KiB)
|x_\ - x_amg|_∞ = 1.5499407313157576e-12
|A x_amg - b|_∞ = 2.250055786134908e-8
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.737027 seconds (67 allocations: 93.885 MiB, 1.64% gc time)
PyAMG-Warmup:   1.469633 seconds (275 allocations: 3.225 MiB)
PyAMG:   1.430415 seconds (275 allocations: 3.225 MiB)
|x_\ - x_amg|_∞ = 1.947511596434026e-12
|A x_amg - b|_∞ = 1.7159891285700724e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.602866 seconds (17.62 k allocations: 15.040 MiB)
First solve:   0.436643 seconds (44.86 k allocations: 3.267 MiB)
Second solve: (tol 1e-9)  0.431059 seconds (6.22 k allocations: 1.323 MiB)
Third solve: (tol 1e-6)  0.247295 seconds (167 allocations: 983.453 KiB)
|A x_amg - b|_∞ = 2.532215134465332e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)

WARNING: deprecated syntax "abstract AbstractLinearMap{T}" at /home/vagrant/.julia/v0.6/LinearMaps/src/LinearMaps.jl:8.
Use "abstract type AbstractLinearMap{T} end" instead.

WARNING: deprecated syntax "inner constructor LinearCombination(...) around /home/vagrant/.julia/v0.6/LinearMaps/src/linearcombination.jl:5".
Use "LinearCombination{T,As,Ts}(...) where {T,As,Ts}" instead.

WARNING: deprecated syntax "inner constructor CompositeMap(...) around /home/vagrant/.julia/v0.6/LinearMaps/src/composition.jl:4".
Use "CompositeMap{T,As}(...) where {T,As}" instead.
Plain CG:
ERROR: LoadError: MethodError: no method matching cg(::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Int64; tol=0.0001)
Closest candidates are:
  cg(::Any, ::Any; kwargs...) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/cg.jl:7
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:552
 [2] include(::String) at ./sysimg.jl:14
 [3] process_options(::Base.JLOptions) at ./client.jl:305
 [4] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/PyAMG/test/runtests.jl, in expression starting on line 237
================================[ ERROR: PyAMG ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PyAMG/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DataStructures v0.5.3
INFO: Removing IterativeSolvers v0.3.0
INFO: Removing LinearMaps v0.3.0
INFO: Removing RecipesBase v0.1.0
INFO: Removing SpecialFunctions v0.1.1
INFO: Removing StatsBase v0.14.1
INFO: Removing SugarBLAS v0.0.3
INFO: Removing UnicodePlots v0.2.3
ERROR: PyAMG had test errors

>>> End of log
