>>> 'Pkg.add("PyAMG")' log
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing BinDeps v0.8.5
INFO: Installing Conda v0.7.1
INFO: Installing MacroTools v0.4.0
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.15.0
INFO: Installing SHA v0.5.3
INFO: Installing URIParser v0.3.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.14.0          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (706.98046875 MB free)
Uptime: 21607.0 sec
Load Avg:  0.9970703125  0.99951171875  1.03564453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1263175 s       2516 s      61233 s     514285 s         11 s
#2  3499 MHz     275877 s       4533 s      30882 s    1806272 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - PyAMG                         0.2.1
8 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.48.0
 - Conda                         0.7.1
 - MacroTools                    0.4.0
 - Nullables                     0.0.3
 - PyCall                        1.15.0
 - SHA                           0.5.3
 - URIParser                     0.3.0
INFO: Computing test dependencies for PyAMG...
INFO: Installing Combinatorics v0.5.0
INFO: Installing DataStructures v0.7.4
INFO: Installing IterTools v0.2.1
INFO: Installing IterativeSolvers v0.4.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StatsBase v0.19.5
INFO: Installing SugarBLAS v0.0.4
INFO: Installing UnicodePlots v0.2.6
INFO: Building SpecialFunctions
INFO: Testing PyAMG
INFO: Installing scipy.sparse via the Conda scipy package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    scipy: 1.0.0-py27_blas_openblas_201 conda-forge [blas_openblas]

scipy-1.0.0-py   0% |                              | ETA:  --:--:--   0.00  B/sscipy-1.0.0-py   1% |                               | ETA:  0:00:12   3.27 MB/sscipy-1.0.0-py   2% |                               | ETA:  0:00:08   4.70 MB/sscipy-1.0.0-py   3% |                               | ETA:  0:00:06   6.11 MB/sscipy-1.0.0-py   4% |#                              | ETA:  0:00:05   7.24 MB/sscipy-1.0.0-py   5% |#                              | ETA:  0:00:04   8.22 MB/sscipy-1.0.0-py   6% |#                              | ETA:  0:00:04   9.31 MB/sscipy-1.0.0-py   7% |##                             | ETA:  0:00:03  10.12 MB/sscipy-1.0.0-py   8% |##                             | ETA:  0:00:03  10.97 MB/sscipy-1.0.0-py   9% |##                             | ETA:  0:00:03  11.79 MB/sscipy-1.0.0-py  10% |###                            | ETA:  0:00:02  12.50 MB/sscipy-1.0.0-py  11% |###                            | ETA:  0:00:02  13.14 MB/sscipy-1.0.0-py  12% |###                            | ETA:  0:00:02  13.55 MB/sscipy-1.0.0-py  13% |####                           | ETA:  0:00:02  13.97 MB/sscipy-1.0.0-py  14% |####                           | ETA:  0:00:02  14.49 MB/sscipy-1.0.0-py  15% |####                           | ETA:  0:00:02  14.84 MB/sscipy-1.0.0-py  16% |#####                          | ETA:  0:00:02  15.27 MB/sscipy-1.0.0-py  17% |#####                          | ETA:  0:00:02  15.62 MB/sscipy-1.0.0-py  18% |#####                          | ETA:  0:00:02  16.04 MB/sscipy-1.0.0-py  19% |######                         | ETA:  0:00:02  16.45 MB/sscipy-1.0.0-py  20% |######                         | ETA:  0:00:01  16.81 MB/sscipy-1.0.0-py  21% |######                         | ETA:  0:00:01  17.19 MB/sscipy-1.0.0-py  22% |#######                        | ETA:  0:00:01  17.55 MB/sscipy-1.0.0-py  23% |#######                        | ETA:  0:00:01  17.89 MB/sscipy-1.0.0-py  24% |#######                        | ETA:  0:00:01  18.21 MB/sscipy-1.0.0-py  25% |########                       | ETA:  0:00:01  18.53 MB/sscipy-1.0.0-py  26% |########                       | ETA:  0:00:01  18.78 MB/sscipy-1.0.0-py  27% |########                       | ETA:  0:00:01  19.03 MB/sscipy-1.0.0-py  28% |########                       | ETA:  0:00:01  19.31 MB/sscipy-1.0.0-py  30% |#########                      | ETA:  0:00:01  19.67 MB/sscipy-1.0.0-py  31% |#########                      | ETA:  0:00:01  20.00 MB/sscipy-1.0.0-py  32% |#########                      | ETA:  0:00:01  20.31 MB/sscipy-1.0.0-py  33% |##########                     | ETA:  0:00:01  20.62 MB/sscipy-1.0.0-py  34% |##########                     | ETA:  0:00:01  20.92 MB/sscipy-1.0.0-py  35% |##########                     | ETA:  0:00:01  21.20 MB/sscipy-1.0.0-py  36% |###########                    | ETA:  0:00:01  21.48 MB/sscipy-1.0.0-py  37% |###########                    | ETA:  0:00:01  21.68 MB/sscipy-1.0.0-py  38% |###########                    | ETA:  0:00:01  21.97 MB/sscipy-1.0.0-py  39% |############                   | ETA:  0:00:01  22.02 MB/sscipy-1.0.0-py  40% |############                   | ETA:  0:00:01  22.09 MB/sscipy-1.0.0-py  41% |############                   | ETA:  0:00:01  22.17 MB/sscipy-1.0.0-py  42% |#############                  | ETA:  0:00:01  22.21 MB/sscipy-1.0.0-py  43% |#############                  | ETA:  0:00:01  22.35 MB/sscipy-1.0.0-py  44% |#############                  | ETA:  0:00:01  22.58 MB/sscipy-1.0.0-py  45% |##############                 | ETA:  0:00:00  22.77 MB/sscipy-1.0.0-py  46% |##############                 | ETA:  0:00:00  22.93 MB/sscipy-1.0.0-py  47% |##############                 | ETA:  0:00:00  23.03 MB/sscipy-1.0.0-py  48% |###############                | ETA:  0:00:00  23.08 MB/sscipy-1.0.0-py  49% |###############                | ETA:  0:00:00  23.19 MB/sscipy-1.0.0-py  50% |###############                | ETA:  0:00:00  23.29 MB/sscipy-1.0.0-py  51% |################               | ETA:  0:00:00  23.39 MB/sscipy-1.0.0-py  52% |################               | ETA:  0:00:00  23.51 MB/sscipy-1.0.0-py  53% |################               | ETA:  0:00:00  23.59 MB/sscipy-1.0.0-py  54% |#################              | ETA:  0:00:00  23.67 MB/sscipy-1.0.0-py  55% |#################              | ETA:  0:00:00  23.78 MB/sscipy-1.0.0-py  56% |#################              | ETA:  0:00:00  23.89 MB/sscipy-1.0.0-py  57% |#################              | ETA:  0:00:00  23.97 MB/sscipy-1.0.0-py  58% |##################             | ETA:  0:00:00  24.03 MB/sscipy-1.0.0-py  60% |##################             | ETA:  0:00:00  24.08 MB/sscipy-1.0.0-py  61% |##################             | ETA:  0:00:00  24.16 MB/sscipy-1.0.0-py  62% |###################            | ETA:  0:00:00  24.22 MB/sscipy-1.0.0-py  63% |###################            | ETA:  0:00:00  24.26 MB/sscipy-1.0.0-py  64% |###################            | ETA:  0:00:00  24.31 MB/sscipy-1.0.0-py  65% |####################           | ETA:  0:00:00  24.35 MB/sscipy-1.0.0-py  66% |####################           | ETA:  0:00:00  24.41 MB/sscipy-1.0.0-py  67% |####################           | ETA:  0:00:00  24.46 MB/sscipy-1.0.0-py  68% |#####################          | ETA:  0:00:00  24.51 MB/sscipy-1.0.0-py  69% |#####################          | ETA:  0:00:00  24.55 MB/sscipy-1.0.0-py  70% |#####################          | ETA:  0:00:00  24.59 MB/sscipy-1.0.0-py  71% |######################         | ETA:  0:00:00  24.62 MB/sscipy-1.0.0-py  72% |######################         | ETA:  0:00:00  24.64 MB/sscipy-1.0.0-py  73% |######################         | ETA:  0:00:00  24.70 MB/sscipy-1.0.0-py  74% |#######################        | ETA:  0:00:00  24.74 MB/sscipy-1.0.0-py  75% |#######################        | ETA:  0:00:00  24.80 MB/sscipy-1.0.0-py  76% |#######################        | ETA:  0:00:00  24.86 MB/sscipy-1.0.0-py  77% |########################       | ETA:  0:00:00  24.99 MB/sscipy-1.0.0-py  78% |########################       | ETA:  0:00:00  25.15 MB/sscipy-1.0.0-py  79% |########################       | ETA:  0:00:00  25.22 MB/sscipy-1.0.0-py  80% |#########################      | ETA:  0:00:00  25.14 MB/sscipy-1.0.0-py  81% |#########################      | ETA:  0:00:00  25.17 MB/sscipy-1.0.0-py  82% |#########################      | ETA:  0:00:00  25.19 MB/sscipy-1.0.0-py  83% |#########################      | ETA:  0:00:00  25.21 MB/sscipy-1.0.0-py  84% |##########################     | ETA:  0:00:00  25.23 MB/sscipy-1.0.0-py  85% |##########################     | ETA:  0:00:00  25.22 MB/sscipy-1.0.0-py  86% |##########################     | ETA:  0:00:00  25.25 MB/sscipy-1.0.0-py  87% |###########################    | ETA:  0:00:00  25.25 MB/sscipy-1.0.0-py  88% |###########################    | ETA:  0:00:00  25.29 MB/sscipy-1.0.0-py  90% |###########################    | ETA:  0:00:00  25.33 MB/sscipy-1.0.0-py  91% |############################   | ETA:  0:00:00  25.36 MB/sscipy-1.0.0-py  92% |############################   | ETA:  0:00:00  25.39 MB/sscipy-1.0.0-py  93% |############################   | ETA:  0:00:00  25.41 MB/sscipy-1.0.0-py  94% |#############################  | ETA:  0:00:00  25.43 MB/sscipy-1.0.0-py  95% |#############################  | ETA:  0:00:00  25.50 MB/sscipy-1.0.0-py  96% |#############################  | ETA:  0:00:00  25.52 MB/sscipy-1.0.0-py  97% |############################## | ETA:  0:00:00  25.53 MB/sscipy-1.0.0-py  98% |############################## | ETA:  0:00:00  25.64 MB/sscipy-1.0.0-py  99% |############################## | ETA:  0:00:00  25.79 MB/sscipy-1.0.0-py 100% |###############################| Time: 0:00:01  25.86 MB/s
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pyamg: 3.3.2-py27_0 conda-forge

pyamg-3.3.2-py   0% |                              | ETA:  --:--:--   0.00  B/spyamg-3.3.2-py   1% |                               | ETA:  0:00:01   1.31 MB/spyamg-3.3.2-py   3% |#                              | ETA:  0:00:00   1.72 MB/spyamg-3.3.2-py   5% |#                              | ETA:  0:00:01   1.55 MB/spyamg-3.3.2-py   7% |##                             | ETA:  0:00:00   1.72 MB/spyamg-3.3.2-py   9% |##                             | ETA:  0:00:00   2.12 MB/spyamg-3.3.2-py  11% |###                            | ETA:  0:00:00   2.20 MB/spyamg-3.3.2-py  13% |####                           | ETA:  0:00:00   2.24 MB/spyamg-3.3.2-py  14% |####                           | ETA:  0:00:00   2.53 MB/spyamg-3.3.2-py  16% |#####                          | ETA:  0:00:00   2.56 MB/spyamg-3.3.2-py  18% |#####                          | ETA:  0:00:00   2.82 MB/spyamg-3.3.2-py  20% |######                         | ETA:  0:00:00   2.80 MB/spyamg-3.3.2-py  22% |######                         | ETA:  0:00:00   3.04 MB/spyamg-3.3.2-py  24% |#######                        | ETA:  0:00:00   3.03 MB/spyamg-3.3.2-py  26% |########                       | ETA:  0:00:00   3.24 MB/spyamg-3.3.2-py  28% |########                       | ETA:  0:00:00   3.45 MB/spyamg-3.3.2-py  29% |#########                      | ETA:  0:00:00   3.41 MB/spyamg-3.3.2-py  31% |#########                      | ETA:  0:00:00   3.60 MB/spyamg-3.3.2-py  33% |##########                     | ETA:  0:00:00   3.79 MB/spyamg-3.3.2-py  35% |###########                    | ETA:  0:00:00   3.76 MB/spyamg-3.3.2-py  37% |###########                    | ETA:  0:00:00   3.92 MB/spyamg-3.3.2-py  39% |############                   | ETA:  0:00:00   4.10 MB/spyamg-3.3.2-py  41% |############                   | ETA:  0:00:00   4.04 MB/spyamg-3.3.2-py  42% |#############                  | ETA:  0:00:00   4.18 MB/spyamg-3.3.2-py  44% |#############                  | ETA:  0:00:00   4.34 MB/spyamg-3.3.2-py  46% |##############                 | ETA:  0:00:00   4.50 MB/spyamg-3.3.2-py  48% |###############                | ETA:  0:00:00   4.43 MB/spyamg-3.3.2-py  50% |###############                | ETA:  0:00:00   4.50 MB/spyamg-3.3.2-py  52% |################               | ETA:  0:00:00   4.65 MB/spyamg-3.3.2-py  54% |################               | ETA:  0:00:00   4.80 MB/spyamg-3.3.2-py  56% |#################              | ETA:  0:00:00   4.82 MB/spyamg-3.3.2-py  57% |#################              | ETA:  0:00:00   4.93 MB/spyamg-3.3.2-py  59% |##################             | ETA:  0:00:00   5.06 MB/spyamg-3.3.2-py  61% |###################            | ETA:  0:00:00   5.20 MB/spyamg-3.3.2-py  63% |###################            | ETA:  0:00:00   5.34 MB/spyamg-3.3.2-py  65% |####################           | ETA:  0:00:00   5.29 MB/spyamg-3.3.2-py  67% |####################           | ETA:  0:00:00   5.38 MB/spyamg-3.3.2-py  69% |#####################          | ETA:  0:00:00   5.51 MB/spyamg-3.3.2-py  71% |######################         | ETA:  0:00:00   5.64 MB/spyamg-3.3.2-py  72% |######################         | ETA:  0:00:00   5.77 MB/spyamg-3.3.2-py  74% |#######################        | ETA:  0:00:00   5.90 MB/spyamg-3.3.2-py  76% |#######################        | ETA:  0:00:00   5.79 MB/spyamg-3.3.2-py  78% |########################       | ETA:  0:00:00   5.92 MB/spyamg-3.3.2-py  80% |########################       | ETA:  0:00:00   6.04 MB/spyamg-3.3.2-py  82% |#########################      | ETA:  0:00:00   6.17 MB/spyamg-3.3.2-py  84% |##########################     | ETA:  0:00:00   6.29 MB/spyamg-3.3.2-py  85% |##########################     | ETA:  0:00:00   6.40 MB/spyamg-3.3.2-py  87% |###########################    | ETA:  0:00:00   6.30 MB/spyamg-3.3.2-py  89% |###########################    | ETA:  0:00:00   6.41 MB/spyamg-3.3.2-py  91% |############################   | ETA:  0:00:00   6.52 MB/spyamg-3.3.2-py  93% |############################   | ETA:  0:00:00   6.63 MB/spyamg-3.3.2-py  95% |#############################  | ETA:  0:00:00   6.73 MB/spyamg-3.3.2-py  97% |############################## | ETA:  0:00:00   6.84 MB/spyamg-3.3.2-py  99% |############################## | ETA:  0:00:00   6.95 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00   7.00 MB/s
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   0.270694 seconds (14.47 k allocations: 9.363 MiB, 3.92% gc time)
PyAMG-Warmup:   2.619957 seconds (617.94 k allocations: 33.896 MiB, 0.34% gc time)
PyAMG:   0.234432 seconds (15.22 k allocations: 1.697 MiB)
|x_\ - x_amg|_∞ = 9.055440425287387e-12
|A x_amg - b|_∞ = 2.135664090019418e-8
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.765503 seconds (64 allocations: 93.885 MiB, 2.15% gc time)
PyAMG-Warmup:   0.990438 seconds (253 allocations: 3.224 MiB)
PyAMG:   1.327749 seconds (248 allocations: 3.223 MiB)
|x_\ - x_amg|_∞ = 1.5097090244609035e-12
|A x_amg - b|_∞ = 1.1478533679110114e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.496868 seconds (14.38 k allocations: 14.828 MiB)
First solve:   0.519032 seconds (34.10 k allocations: 2.687 MiB)
Second solve: (tol 1e-9)  0.303340 seconds (4.83 k allocations: 1.210 MiB)
Third solve: (tol 1e-6)  0.213148 seconds (148 allocations: 982.406 KiB)
|A x_amg - b|_∞ = 3.804971740350993e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.026858 seconds (42 allocations: 314.844 KiB)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.022833 seconds (651 allocations: 805.453 KiB)
PyAMG solver
  0.021849 seconds (181 allocations: 85.203 KiB)
|x_cg-x| = 2.525211412460893e-8 
|x_pcg-x| = 9.158169077400953e-9
|x_pyamg-x| = 9.158169179538598e-9
Test Summary: | Pass  Total
PyAMG         |    8      8
INFO: PyAMG tests passed
INFO: Removing Combinatorics v0.5.0
INFO: Removing DataStructures v0.7.4
INFO: Removing IterTools v0.2.1
INFO: Removing IterativeSolvers v0.4.2
INFO: Removing LinearMaps v1.0.4
INFO: Removing Polynomials v0.2.0
INFO: Removing RecipesBase v0.2.3
INFO: Removing SortingAlgorithms v0.2.0
INFO: Removing SpecialFunctions v0.3.8
INFO: Removing StatsBase v0.19.5
INFO: Removing SugarBLAS v0.0.4
INFO: Removing UnicodePlots v0.2.6

>>> End of log
