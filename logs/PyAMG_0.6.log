>>> 'Pkg.add("PyAMG")' log
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing BinDeps v0.8.5
INFO: Installing Conda v0.7.1
INFO: Installing MacroTools v0.4.0
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.15.0
INFO: Installing SHA v0.5.3
INFO: Installing URIParser v0.3.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.14.0          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (718.42578125 MB free)
Uptime: 21192.0 sec
Load Avg:  1.0029296875  1.052734375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1299166 s       7266 s      65212 s     435370 s         16 s
#2  3500 MHz     290019 s        357 s      30919 s    1762469 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - PyAMG                         0.2.1
8 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.46.0
 - Conda                         0.7.1
 - MacroTools                    0.4.0
 - Nullables                     0.0.3
 - PyCall                        1.15.0
 - SHA                           0.5.3
 - URIParser                     0.3.0
INFO: Computing test dependencies for PyAMG...
INFO: Installing Combinatorics v0.5.0
INFO: Installing DataStructures v0.7.4
INFO: Installing IterTools v0.2.0
INFO: Installing IterativeSolvers v0.4.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StatsBase v0.19.5
INFO: Installing SugarBLAS v0.0.4
INFO: Installing UnicodePlots v0.2.6
INFO: Building SpecialFunctions
INFO: Testing PyAMG
INFO: Installing scipy.sparse via the Conda scipy package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    scipy: 1.0.0-py27_blas_openblas_201 conda-forge [blas_openblas]

scipy-1.0.0-py   0% |                              | ETA:  --:--:--   0.00  B/sscipy-1.0.0-py   1% |                               | ETA:  0:00:12   3.26 MB/sscipy-1.0.0-py   2% |                               | ETA:  0:00:08   5.00 MB/sscipy-1.0.0-py   3% |                               | ETA:  0:00:06   6.13 MB/sscipy-1.0.0-py   4% |#                              | ETA:  0:00:05   7.24 MB/sscipy-1.0.0-py   5% |#                              | ETA:  0:00:04   8.50 MB/sscipy-1.0.0-py   6% |#                              | ETA:  0:00:04   9.25 MB/sscipy-1.0.0-py   7% |##                             | ETA:  0:00:03  10.34 MB/sscipy-1.0.0-py   8% |##                             | ETA:  0:00:03  11.43 MB/sscipy-1.0.0-py   9% |##                             | ETA:  0:00:02  12.48 MB/sscipy-1.0.0-py  10% |###                            | ETA:  0:00:02  13.32 MB/sscipy-1.0.0-py  11% |###                            | ETA:  0:00:02  14.15 MB/sscipy-1.0.0-py  12% |###                            | ETA:  0:00:02  14.87 MB/sscipy-1.0.0-py  13% |####                           | ETA:  0:00:02  15.54 MB/sscipy-1.0.0-py  14% |####                           | ETA:  0:00:02  16.20 MB/sscipy-1.0.0-py  15% |####                           | ETA:  0:00:02  16.95 MB/sscipy-1.0.0-py  16% |#####                          | ETA:  0:00:01  17.57 MB/sscipy-1.0.0-py  17% |#####                          | ETA:  0:00:01  18.37 MB/sscipy-1.0.0-py  18% |#####                          | ETA:  0:00:01  18.93 MB/sscipy-1.0.0-py  19% |######                         | ETA:  0:00:01  19.54 MB/sscipy-1.0.0-py  20% |######                         | ETA:  0:00:01  20.29 MB/sscipy-1.0.0-py  21% |######                         | ETA:  0:00:01  20.79 MB/sscipy-1.0.0-py  22% |#######                        | ETA:  0:00:01  21.36 MB/sscipy-1.0.0-py  23% |#######                        | ETA:  0:00:01  21.22 MB/sscipy-1.0.0-py  24% |#######                        | ETA:  0:00:01  21.76 MB/sscipy-1.0.0-py  25% |#######                        | ETA:  0:00:04   6.41 MB/sscipy-1.0.0-py  26% |########                       | ETA:  0:00:04   6.64 MB/sscipy-1.0.0-py  27% |########                       | ETA:  0:00:04   6.87 MB/sscipy-1.0.0-py  28% |########                       | ETA:  0:00:04   7.10 MB/sscipy-1.0.0-py  28% |########                       | ETA:  0:00:07   3.74 MB/sscipy-1.0.0-py  29% |#########                      | ETA:  0:00:12   2.35 MB/sscipy-1.0.0-py  29% |#########                      | ETA:  0:00:16   1.71 MB/sscipy-1.0.0-py  30% |#########                      | ETA:  0:00:17   1.65 MB/sscipy-1.0.0-py  31% |#########                      | ETA:  0:00:16   1.71 MB/sscipy-1.0.0-py  32% |##########                     | ETA:  0:00:15   1.76 MB/sscipy-1.0.0-py  33% |##########                     | ETA:  0:00:15   1.81 MB/sscipy-1.0.0-py  34% |##########                     | ETA:  0:00:14   1.87 MB/sscipy-1.0.0-py  35% |###########                    | ETA:  0:00:13   1.92 MB/sscipy-1.0.0-py  36% |###########                    | ETA:  0:00:13   1.97 MB/sscipy-1.0.0-py  37% |###########                    | ETA:  0:00:12   2.02 MB/sscipy-1.0.0-py  39% |############                   | ETA:  0:00:12   2.08 MB/sscipy-1.0.0-py  40% |############                   | ETA:  0:00:11   2.13 MB/sscipy-1.0.0-py  41% |############                   | ETA:  0:00:11   2.18 MB/sscipy-1.0.0-py  42% |#############                  | ETA:  0:00:10   2.23 MB/sscipy-1.0.0-py  43% |#############                  | ETA:  0:00:10   2.27 MB/sscipy-1.0.0-py  44% |#############                  | ETA:  0:00:09   2.32 MB/sscipy-1.0.0-py  45% |##############                 | ETA:  0:00:09   2.37 MB/sscipy-1.0.0-py  46% |##############                 | ETA:  0:00:09   2.41 MB/sscipy-1.0.0-py  47% |##############                 | ETA:  0:00:08   2.46 MB/sscipy-1.0.0-py  48% |##############                 | ETA:  0:00:08   2.51 MB/sscipy-1.0.0-py  49% |###############                | ETA:  0:00:08   2.56 MB/sscipy-1.0.0-py  50% |###############                | ETA:  0:00:07   2.61 MB/sscipy-1.0.0-py  51% |###############                | ETA:  0:00:07   2.66 MB/sscipy-1.0.0-py  52% |################               | ETA:  0:00:07   2.71 MB/sscipy-1.0.0-py  53% |################               | ETA:  0:00:06   2.75 MB/sscipy-1.0.0-py  54% |################               | ETA:  0:00:06   2.80 MB/sscipy-1.0.0-py  55% |#################              | ETA:  0:00:06   2.85 MB/sscipy-1.0.0-py  56% |#################              | ETA:  0:00:06   2.90 MB/sscipy-1.0.0-py  57% |#################              | ETA:  0:00:05   2.95 MB/sscipy-1.0.0-py  58% |##################             | ETA:  0:00:05   3.00 MB/sscipy-1.0.0-py  59% |##################             | ETA:  0:00:05   3.05 MB/sscipy-1.0.0-py  60% |##################             | ETA:  0:00:05   3.10 MB/sscipy-1.0.0-py  61% |###################            | ETA:  0:00:05   3.15 MB/sscipy-1.0.0-py  62% |###################            | ETA:  0:00:04   3.19 MB/sscipy-1.0.0-py  63% |###################            | ETA:  0:00:04   3.24 MB/sscipy-1.0.0-py  64% |####################           | ETA:  0:00:04   3.29 MB/sscipy-1.0.0-py  65% |####################           | ETA:  0:00:04   3.34 MB/sscipy-1.0.0-py  66% |####################           | ETA:  0:00:04   3.38 MB/sscipy-1.0.0-py  67% |#####################          | ETA:  0:00:03   3.43 MB/sscipy-1.0.0-py  69% |#####################          | ETA:  0:00:03   3.48 MB/sscipy-1.0.0-py  70% |#####################          | ETA:  0:00:03   3.53 MB/sscipy-1.0.0-py  71% |######################         | ETA:  0:00:03   3.57 MB/sscipy-1.0.0-py  72% |######################         | ETA:  0:00:03   3.62 MB/sscipy-1.0.0-py  73% |######################         | ETA:  0:00:03   3.67 MB/sscipy-1.0.0-py  74% |######################         | ETA:  0:00:02   3.72 MB/sscipy-1.0.0-py  75% |#######################        | ETA:  0:00:02   3.76 MB/sscipy-1.0.0-py  76% |#######################        | ETA:  0:00:02   3.81 MB/sscipy-1.0.0-py  77% |#######################        | ETA:  0:00:02   3.86 MB/sscipy-1.0.0-py  78% |########################       | ETA:  0:00:02   3.90 MB/sscipy-1.0.0-py  79% |########################       | ETA:  0:00:02   3.95 MB/sscipy-1.0.0-py  80% |########################       | ETA:  0:00:02   4.00 MB/sscipy-1.0.0-py  81% |#########################      | ETA:  0:00:01   4.04 MB/sscipy-1.0.0-py  82% |#########################      | ETA:  0:00:01   4.08 MB/sscipy-1.0.0-py  83% |#########################      | ETA:  0:00:01   4.13 MB/sscipy-1.0.0-py  84% |##########################     | ETA:  0:00:01   4.18 MB/sscipy-1.0.0-py  85% |##########################     | ETA:  0:00:01   4.22 MB/sscipy-1.0.0-py  86% |##########################     | ETA:  0:00:01   4.27 MB/sscipy-1.0.0-py  87% |###########################    | ETA:  0:00:01   4.31 MB/sscipy-1.0.0-py  88% |###########################    | ETA:  0:00:01   4.35 MB/sscipy-1.0.0-py  89% |###########################    | ETA:  0:00:00   4.40 MB/sscipy-1.0.0-py  90% |############################   | ETA:  0:00:00   4.44 MB/sscipy-1.0.0-py  91% |############################   | ETA:  0:00:00   4.49 MB/sscipy-1.0.0-py  92% |############################   | ETA:  0:00:00   4.54 MB/sscipy-1.0.0-py  93% |#############################  | ETA:  0:00:00   4.59 MB/sscipy-1.0.0-py  94% |#############################  | ETA:  0:00:00   4.63 MB/sscipy-1.0.0-py  95% |#############################  | ETA:  0:00:00   4.68 MB/sscipy-1.0.0-py  96% |############################## | ETA:  0:00:00   4.73 MB/sscipy-1.0.0-py  97% |############################## | ETA:  0:00:00   4.77 MB/sscipy-1.0.0-py  99% |############################## | ETA:  0:00:00   4.82 MB/sscipy-1.0.0-py 100% |###############################| Time: 0:00:08   4.86 MB/s
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pyamg: 3.3.2-py27_0 conda-forge

pyamg-3.3.2-py   0% |                              | ETA:  --:--:--   0.00  B/spyamg-3.3.2-py   1% |                               | ETA:  0:00:01   1.30 MB/spyamg-3.3.2-py   3% |#                              | ETA:  0:00:01   1.35 MB/spyamg-3.3.2-py   5% |#                              | ETA:  0:00:01   1.53 MB/spyamg-3.3.2-py   7% |##                             | ETA:  0:00:00   1.66 MB/spyamg-3.3.2-py   9% |##                             | ETA:  0:00:00   1.81 MB/spyamg-3.3.2-py  11% |###                            | ETA:  0:00:00   1.91 MB/spyamg-3.3.2-py  13% |####                           | ETA:  0:00:00   1.98 MB/spyamg-3.3.2-py  14% |####                           | ETA:  0:00:00   2.24 MB/spyamg-3.3.2-py  16% |#####                          | ETA:  0:00:00   2.51 MB/spyamg-3.3.2-py  18% |#####                          | ETA:  0:00:00   2.54 MB/spyamg-3.3.2-py  20% |######                         | ETA:  0:00:00   2.77 MB/spyamg-3.3.2-py  22% |######                         | ETA:  0:00:00   2.76 MB/spyamg-3.3.2-py  24% |#######                        | ETA:  0:00:00   2.97 MB/spyamg-3.3.2-py  26% |########                       | ETA:  0:00:00   2.95 MB/spyamg-3.3.2-py  28% |########                       | ETA:  0:00:00   3.14 MB/spyamg-3.3.2-py  29% |#########                      | ETA:  0:00:00   3.33 MB/spyamg-3.3.2-py  31% |#########                      | ETA:  0:00:00   3.31 MB/spyamg-3.3.2-py  33% |##########                     | ETA:  0:00:00   3.49 MB/spyamg-3.3.2-py  35% |###########                    | ETA:  0:00:00   3.66 MB/spyamg-3.3.2-py  37% |###########                    | ETA:  0:00:00   3.63 MB/spyamg-3.3.2-py  39% |############                   | ETA:  0:00:00   3.78 MB/spyamg-3.3.2-py  41% |############                   | ETA:  0:00:00   3.94 MB/spyamg-3.3.2-py  42% |#############                  | ETA:  0:00:00   4.10 MB/spyamg-3.3.2-py  44% |#############                  | ETA:  0:00:00   4.08 MB/spyamg-3.3.2-py  46% |##############                 | ETA:  0:00:00   4.20 MB/spyamg-3.3.2-py  48% |###############                | ETA:  0:00:00   4.36 MB/spyamg-3.3.2-py  50% |###############                | ETA:  0:00:00   4.51 MB/spyamg-3.3.2-py  52% |################               | ETA:  0:00:00   4.65 MB/spyamg-3.3.2-py  54% |################               | ETA:  0:00:00   4.59 MB/spyamg-3.3.2-py  56% |#################              | ETA:  0:00:00   4.72 MB/spyamg-3.3.2-py  57% |#################              | ETA:  0:00:00   4.86 MB/spyamg-3.3.2-py  59% |##################             | ETA:  0:00:00   5.00 MB/spyamg-3.3.2-py  61% |###################            | ETA:  0:00:00   5.13 MB/spyamg-3.3.2-py  63% |###################            | ETA:  0:00:00   5.07 MB/spyamg-3.3.2-py  65% |####################           | ETA:  0:00:00   5.19 MB/spyamg-3.3.2-py  67% |####################           | ETA:  0:00:00   5.32 MB/spyamg-3.3.2-py  69% |#####################          | ETA:  0:00:00   5.45 MB/spyamg-3.3.2-py  71% |######################         | ETA:  0:00:00   5.58 MB/spyamg-3.3.2-py  72% |######################         | ETA:  0:00:00   5.71 MB/spyamg-3.3.2-py  74% |#######################        | ETA:  0:00:00   5.67 MB/spyamg-3.3.2-py  76% |#######################        | ETA:  0:00:00   5.75 MB/spyamg-3.3.2-py  78% |########################       | ETA:  0:00:00   5.86 MB/spyamg-3.3.2-py  80% |########################       | ETA:  0:00:00   5.98 MB/spyamg-3.3.2-py  82% |#########################      | ETA:  0:00:00   6.10 MB/spyamg-3.3.2-py  84% |##########################     | ETA:  0:00:00   6.22 MB/spyamg-3.3.2-py  85% |##########################     | ETA:  0:00:00   6.34 MB/spyamg-3.3.2-py  87% |###########################    | ETA:  0:00:00   6.31 MB/spyamg-3.3.2-py  89% |###########################    | ETA:  0:00:00   6.40 MB/spyamg-3.3.2-py  91% |############################   | ETA:  0:00:00   6.51 MB/spyamg-3.3.2-py  93% |############################   | ETA:  0:00:00   6.61 MB/spyamg-3.3.2-py  95% |#############################  | ETA:  0:00:00   6.72 MB/spyamg-3.3.2-py  97% |############################## | ETA:  0:00:00   6.83 MB/spyamg-3.3.2-py  99% |############################## | ETA:  0:00:00   6.94 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00   6.99 MB/s
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   0.251707 seconds (14.47 k allocations: 9.363 MiB)
PyAMG-Warmup:   2.263475 seconds (617.94 k allocations: 33.786 MiB, 0.77% gc time)
PyAMG:   0.402439 seconds (15.22 k allocations: 1.697 MiB)
|x_\ - x_amg|_∞ = 1.245351044509846e-12
|A x_amg - b|_∞ = 2.6076918402395677e-9
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.739236 seconds (64 allocations: 93.885 MiB, 2.40% gc time)
PyAMG-Warmup:   1.243765 seconds (253 allocations: 3.224 MiB)
PyAMG:   1.163278 seconds (248 allocations: 3.223 MiB)
|x_\ - x_amg|_∞ = 1.353271661397315e-12
|A x_amg - b|_∞ = 1.8843451243810705e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.483668 seconds (14.38 k allocations: 14.828 MiB)
First solve:   0.477359 seconds (34.10 k allocations: 2.687 MiB)
Second solve: (tol 1e-9)  0.312487 seconds (4.83 k allocations: 1.210 MiB)
Third solve: (tol 1e-6)  0.222882 seconds (148 allocations: 982.406 KiB)
|A x_amg - b|_∞ = 3.804971740350993e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.018328 seconds (42 allocations: 314.844 KiB)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.018504 seconds (651 allocations: 805.453 KiB)
PyAMG solver
  0.016346 seconds (181 allocations: 85.203 KiB)
|x_cg-x| = 2.525211412460893e-8 
|x_pcg-x| = 9.158169077400953e-9
|x_pyamg-x| = 9.158169179538598e-9
Test Summary: | Pass  Total
PyAMG         |    8      8
INFO: PyAMG tests passed
INFO: Removing Combinatorics v0.5.0
INFO: Removing DataStructures v0.7.4
INFO: Removing IterTools v0.2.0
INFO: Removing IterativeSolvers v0.4.2
INFO: Removing LinearMaps v1.0.4
INFO: Removing Polynomials v0.2.0
INFO: Removing RecipesBase v0.2.3
INFO: Removing SortingAlgorithms v0.2.0
INFO: Removing SpecialFunctions v0.3.8
INFO: Removing StatsBase v0.19.5
INFO: Removing SugarBLAS v0.0.4
INFO: Removing UnicodePlots v0.2.6

>>> End of log
