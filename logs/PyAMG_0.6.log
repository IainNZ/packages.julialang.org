>>> 'Pkg.add("PyAMG")' log
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing BinDeps v0.8.0
INFO: Installing Conda v0.7.0
INFO: Installing MacroTools v0.4.0
INFO: Installing PyAMG v0.2.0
INFO: Installing PyCall v1.15.0
INFO: Installing SHA v0.5.2
INFO: Installing URIParser v0.2.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata ...........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.13.3           py27hbcc08e0_0  
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyAMG
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (908.6328125 MB free)
Uptime: 62664.0 sec
Load Avg:  1.07470703125  1.001953125  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4165996 s       7048 s     171461 s     969036 s         54 s
#2  3500 MHz    1060069 s         82 s      90196 s    5002954 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.1
 - PyAMG                         0.2.0
7 additional packages:
 - BinDeps                       0.8.0
 - Compat                        0.37.0
 - Conda                         0.7.0
 - MacroTools                    0.4.0
 - PyCall                        1.15.0
 - SHA                           0.5.2
 - URIParser                     0.2.0
INFO: Computing test dependencies for PyAMG...
INFO: Installing Combinatorics v0.5.0
INFO: Installing DataStructures v0.7.2
INFO: Installing IterTools v0.1.0
INFO: Installing IterativeSolvers v0.4.1
INFO: Installing LinearMaps v1.0.3
INFO: Installing Polynomials v0.1.6
INFO: Installing RecipesBase v0.2.3
INFO: Installing SpecialFunctions v0.3.5
INFO: Installing StatsBase v0.19.2
INFO: Installing SugarBLAS v0.0.4
INFO: Installing UnicodePlots v0.2.5
INFO: Building SpecialFunctions
INFO: Testing PyAMG
INFO: Installing scipy.sparse via the Conda scipy package...
Fetching package metadata ...........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    scipy: 1.0.0-py27hf5f0f52_0

scipy-1.0.0-py   0% |                              | ETA:  --:--:--   0.00  B/sscipy-1.0.0-py   1% |                               | ETA:  0:00:00  29.57 MB/sscipy-1.0.0-py   2% |                               | ETA:  0:00:00  32.57 MB/sscipy-1.0.0-py   3% |                               | ETA:  0:00:00  33.72 MB/sscipy-1.0.0-py   4% |#                              | ETA:  0:00:00  32.66 MB/sscipy-1.0.0-py   5% |#                              | ETA:  0:00:00  32.46 MB/sscipy-1.0.0-py   6% |#                              | ETA:  0:00:00  33.74 MB/sscipy-1.0.0-py   7% |##                             | ETA:  0:00:00  34.87 MB/sscipy-1.0.0-py   8% |##                             | ETA:  0:00:00  36.00 MB/sscipy-1.0.0-py   9% |##                             | ETA:  0:00:00  36.67 MB/sscipy-1.0.0-py  10% |###                            | ETA:  0:00:00  37.35 MB/sscipy-1.0.0-py  11% |###                            | ETA:  0:00:00  37.41 MB/sscipy-1.0.0-py  12% |###                            | ETA:  0:00:00  37.80 MB/sscipy-1.0.0-py  13% |####                           | ETA:  0:00:00  38.25 MB/sscipy-1.0.0-py  14% |####                           | ETA:  0:00:00  38.51 MB/sscipy-1.0.0-py  15% |####                           | ETA:  0:00:00  38.81 MB/sscipy-1.0.0-py  16% |#####                          | ETA:  0:00:00  39.03 MB/sscipy-1.0.0-py  17% |#####                          | ETA:  0:00:00  39.17 MB/sscipy-1.0.0-py  18% |#####                          | ETA:  0:00:00  39.34 MB/sscipy-1.0.0-py  20% |######                         | ETA:  0:00:00  39.40 MB/sscipy-1.0.0-py  21% |######                         | ETA:  0:00:00  39.51 MB/sscipy-1.0.0-py  22% |######                         | ETA:  0:00:00  39.70 MB/sscipy-1.0.0-py  23% |#######                        | ETA:  0:00:00  39.80 MB/sscipy-1.0.0-py  24% |#######                        | ETA:  0:00:00  39.93 MB/sscipy-1.0.0-py  25% |#######                        | ETA:  0:00:00  40.07 MB/sscipy-1.0.0-py  26% |########                       | ETA:  0:00:00  40.08 MB/sscipy-1.0.0-py  27% |########                       | ETA:  0:00:00  40.19 MB/sscipy-1.0.0-py  28% |########                       | ETA:  0:00:00  40.25 MB/sscipy-1.0.0-py  29% |#########                      | ETA:  0:00:00  40.11 MB/sscipy-1.0.0-py  30% |#########                      | ETA:  0:00:00  40.26 MB/sscipy-1.0.0-py  31% |#########                      | ETA:  0:00:00  40.28 MB/sscipy-1.0.0-py  32% |##########                     | ETA:  0:00:00  40.30 MB/sscipy-1.0.0-py  33% |##########                     | ETA:  0:00:00  40.30 MB/sscipy-1.0.0-py  34% |##########                     | ETA:  0:00:00  40.42 MB/sscipy-1.0.0-py  35% |###########                    | ETA:  0:00:00  40.51 MB/sscipy-1.0.0-py  36% |###########                    | ETA:  0:00:00  40.57 MB/sscipy-1.0.0-py  37% |###########                    | ETA:  0:00:00  40.62 MB/sscipy-1.0.0-py  38% |############                   | ETA:  0:00:00  40.59 MB/sscipy-1.0.0-py  40% |############                   | ETA:  0:00:00  40.69 MB/sscipy-1.0.0-py  41% |############                   | ETA:  0:00:00  40.77 MB/sscipy-1.0.0-py  42% |#############                  | ETA:  0:00:00  40.77 MB/sscipy-1.0.0-py  43% |#############                  | ETA:  0:00:00  40.80 MB/sscipy-1.0.0-py  44% |#############                  | ETA:  0:00:00  40.84 MB/sscipy-1.0.0-py  45% |##############                 | ETA:  0:00:00  40.88 MB/sscipy-1.0.0-py  46% |##############                 | ETA:  0:00:00  40.82 MB/sscipy-1.0.0-py  47% |##############                 | ETA:  0:00:00  40.81 MB/sscipy-1.0.0-py  48% |###############                | ETA:  0:00:00  40.84 MB/sscipy-1.0.0-py  49% |###############                | ETA:  0:00:00  40.87 MB/sscipy-1.0.0-py  50% |###############                | ETA:  0:00:00  40.90 MB/sscipy-1.0.0-py  51% |###############                | ETA:  0:00:00  40.91 MB/sscipy-1.0.0-py  52% |################               | ETA:  0:00:00  40.82 MB/sscipy-1.0.0-py  53% |################               | ETA:  0:00:00  40.87 MB/sscipy-1.0.0-py  54% |################               | ETA:  0:00:00  40.89 MB/sscipy-1.0.0-py  55% |#################              | ETA:  0:00:00  40.92 MB/sscipy-1.0.0-py  56% |#################              | ETA:  0:00:00  40.95 MB/sscipy-1.0.0-py  57% |#################              | ETA:  0:00:00  40.95 MB/sscipy-1.0.0-py  58% |##################             | ETA:  0:00:00  40.99 MB/sscipy-1.0.0-py  60% |##################             | ETA:  0:00:00  41.00 MB/sscipy-1.0.0-py  61% |##################             | ETA:  0:00:00  41.03 MB/sscipy-1.0.0-py  62% |###################            | ETA:  0:00:00  41.08 MB/sscipy-1.0.0-py  63% |###################            | ETA:  0:00:00  41.13 MB/sscipy-1.0.0-py  64% |###################            | ETA:  0:00:00  41.13 MB/sscipy-1.0.0-py  65% |####################           | ETA:  0:00:00  41.14 MB/sscipy-1.0.0-py  66% |####################           | ETA:  0:00:00  41.14 MB/sscipy-1.0.0-py  67% |####################           | ETA:  0:00:00  41.06 MB/sscipy-1.0.0-py  68% |#####################          | ETA:  0:00:00  41.05 MB/sscipy-1.0.0-py  69% |#####################          | ETA:  0:00:00  41.07 MB/sscipy-1.0.0-py  70% |#####################          | ETA:  0:00:00  41.09 MB/sscipy-1.0.0-py  71% |######################         | ETA:  0:00:00  41.12 MB/sscipy-1.0.0-py  72% |######################         | ETA:  0:00:00  41.14 MB/sscipy-1.0.0-py  73% |######################         | ETA:  0:00:00  41.13 MB/sscipy-1.0.0-py  74% |#######################        | ETA:  0:00:00  41.12 MB/sscipy-1.0.0-py  75% |#######################        | ETA:  0:00:00  41.16 MB/sscipy-1.0.0-py  76% |#######################        | ETA:  0:00:00  41.17 MB/sscipy-1.0.0-py  77% |########################       | ETA:  0:00:00  41.20 MB/sscipy-1.0.0-py  78% |########################       | ETA:  0:00:00  41.25 MB/sscipy-1.0.0-py  80% |########################       | ETA:  0:00:00  41.29 MB/sscipy-1.0.0-py  81% |#########################      | ETA:  0:00:00  41.20 MB/sscipy-1.0.0-py  82% |#########################      | ETA:  0:00:00  41.21 MB/sscipy-1.0.0-py  83% |#########################      | ETA:  0:00:00  41.23 MB/sscipy-1.0.0-py  84% |##########################     | ETA:  0:00:00  41.26 MB/sscipy-1.0.0-py  85% |##########################     | ETA:  0:00:00  41.26 MB/sscipy-1.0.0-py  86% |##########################     | ETA:  0:00:00  41.26 MB/sscipy-1.0.0-py  87% |###########################    | ETA:  0:00:00  41.26 MB/sscipy-1.0.0-py  88% |###########################    | ETA:  0:00:00  41.29 MB/sscipy-1.0.0-py  89% |###########################    | ETA:  0:00:00  41.02 MB/sscipy-1.0.0-py  90% |############################   | ETA:  0:00:00  41.04 MB/sscipy-1.0.0-py  91% |############################   | ETA:  0:00:00  41.05 MB/sscipy-1.0.0-py  92% |############################   | ETA:  0:00:00  41.05 MB/sscipy-1.0.0-py  93% |#############################  | ETA:  0:00:00  41.08 MB/sscipy-1.0.0-py  94% |#############################  | ETA:  0:00:00  41.11 MB/sscipy-1.0.0-py  95% |#############################  | ETA:  0:00:00  41.32 MB/sscipy-1.0.0-py  96% |############################## | ETA:  0:00:00  41.55 MB/sscipy-1.0.0-py  97% |############################## | ETA:  0:00:00  41.80 MB/sscipy-1.0.0-py  98% |############################## | ETA:  0:00:00  42.04 MB/sscipy-1.0.0-py 100% |###############################| ETA:  0:00:00  42.28 MB/sscipy-1.0.0-py 100% |###############################| Time: 0:00:00  42.26 MB/s
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata ...........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.6/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    attrs:          17.3.0-py27hf19f258_0
    coverage:       4.4.2-py27h86fff8b_0 
    funcsigs:       1.0.2-py27h83f16ab_0 
    hypothesis:     3.38.5-py27h2236425_0
    pluggy:         0.6.0-py27h1f4f128_0 
    py:             1.5.2-py27h203d672_0 
    pyamg:          3.3.2-py27h41dcbd8_0 
    pympler:        0.5-py27h8aa4898_0   
    pytest:         3.3.0-py27h0742b9d_0 
    zope:           1.0-py27_0           
    zope.interface: 4.4.3-py27hb02d991_0 

coverage-4.4.2   0% |                              | ETA:  --:--:--   0.00  B/scoverage-4.4.2   7% |##                             | ETA:  0:00:00  11.92 MB/scoverage-4.4.2  15% |####                           | ETA:  0:00:00  16.20 MB/scoverage-4.4.2  23% |#######                        | ETA:  0:00:00  17.57 MB/scoverage-4.4.2  30% |#########                      | ETA:  0:00:00  19.24 MB/scoverage-4.4.2  38% |###########                    | ETA:  0:00:00  20.91 MB/scoverage-4.4.2  46% |##############                 | ETA:  0:00:00  23.57 MB/scoverage-4.4.2  54% |################               | ETA:  0:00:00  25.95 MB/scoverage-4.4.2  61% |###################            | ETA:  0:00:00  28.15 MB/scoverage-4.4.2  69% |#####################          | ETA:  0:00:00  30.07 MB/scoverage-4.4.2  77% |#######################        | ETA:  0:00:00  31.88 MB/scoverage-4.4.2  85% |##########################     | ETA:  0:00:00  33.54 MB/scoverage-4.4.2  92% |############################   | ETA:  0:00:00  35.05 MB/scoverage-4.4.2 100% |###############################| ETA:  0:00:00  36.24 MB/scoverage-4.4.2 100% |###############################| Time: 0:00:00  35.15 MB/s
funcsigs-1.0.2   0% |                              | ETA:  --:--:--   0.00  B/sfuncsigs-1.0.2  78% |########################       | Time: 0:00:00  50.72 MB/sfuncsigs-1.0.2 100% |###############################| Time: 0:00:00  42.30 MB/sfuncsigs-1.0.2 100% |###############################| Time: 0:00:00  33.65 MB/s
pluggy-0.6.0-p   0% |                              | ETA:  --:--:--   0.00  B/spluggy-0.6.0-p  72% |######################         | Time: 0:00:00  47.49 MB/spluggy-0.6.0-p 100% |###############################| Time: 0:00:00  43.68 MB/spluggy-0.6.0-p 100% |###############################| Time: 0:00:00  32.42 MB/s
py-1.5.2-py27h   0% |                              | ETA:  --:--:--   0.00  B/spy-1.5.2-py27h  12% |###                            | Time: 0:00:00  30.62 MB/spy-1.5.2-py27h  24% |#######                        | Time: 0:00:00  41.59 MB/spy-1.5.2-py27h  36% |###########                    | Time: 0:00:00  48.34 MB/spy-1.5.2-py27h  48% |###############                | Time: 0:00:00  52.77 MB/spy-1.5.2-py27h  60% |##################             | Time: 0:00:00  55.84 MB/spy-1.5.2-py27h  72% |######################         | Time: 0:00:00  58.24 MB/spy-1.5.2-py27h  85% |##########################     | Time: 0:00:00  60.08 MB/spy-1.5.2-py27h  97% |############################## | Time: 0:00:00  62.63 MB/spy-1.5.2-py27h 100% |###############################| Time: 0:00:00  55.76 MB/spy-1.5.2-py27h 100% |###############################| Time: 0:00:00  51.53 MB/s
pympler-0.5-py   0% |                              | ETA:  --:--:--   0.00  B/spympler-0.5-py   6% |##                             | Time: 0:00:00  21.84 MB/spympler-0.5-py  13% |####                           | Time: 0:00:00  23.16 MB/spympler-0.5-py  19% |######                         | Time: 0:00:00  24.21 MB/spympler-0.5-py  26% |########                       | Time: 0:00:00  27.95 MB/spympler-0.5-py  32% |##########                     | Time: 0:00:00  31.75 MB/spympler-0.5-py  39% |############                   | Time: 0:00:00  35.05 MB/spympler-0.5-py  45% |##############                 | Time: 0:00:00  37.89 MB/spympler-0.5-py  52% |################               | Time: 0:00:00  40.37 MB/spympler-0.5-py  58% |##################             | Time: 0:00:00  42.50 MB/spympler-0.5-py  65% |####################           | Time: 0:00:00  41.36 MB/spympler-0.5-py  71% |######################         | Time: 0:00:00  42.93 MB/spympler-0.5-py  78% |########################       | Time: 0:00:00  44.08 MB/spympler-0.5-py  84% |##########################     | Time: 0:00:00  43.43 MB/spympler-0.5-py  91% |############################   | Time: 0:00:00  44.68 MB/spympler-0.5-py  97% |############################## | Time: 0:00:00  46.18 MB/spympler-0.5-py 100% |###############################| Time: 0:00:00  45.71 MB/spympler-0.5-py 100% |###############################| Time: 0:00:00  43.91 MB/s
zope-1.0-py27_   0% |                              | ETA:  --:--:--   0.00  B/szope-1.0-py27_ 100% |###############################| Time: 0:00:00   3.02 MB/szope-1.0-py27_ 100% |###############################| Time: 0:00:00   1.97 MB/s
zope.interface   0% |                              | ETA:  --:--:--   0.00  B/szope.interface   8% |##                             | Time: 0:00:00  24.34 MB/szope.interface  16% |#####                          | Time: 0:00:00  27.17 MB/szope.interface  25% |#######                        | Time: 0:00:00  29.48 MB/szope.interface  33% |##########                     | Time: 0:00:00  31.69 MB/szope.interface  42% |#############                  | Time: 0:00:00  35.32 MB/szope.interface  50% |###############                | Time: 0:00:00  38.69 MB/szope.interface  58% |##################             | Time: 0:00:00  41.49 MB/szope.interface  67% |####################           | Time: 0:00:00  43.97 MB/szope.interface  75% |#######################        | Time: 0:00:00  46.09 MB/szope.interface  84% |##########################     | Time: 0:00:00  47.88 MB/szope.interface  92% |############################   | Time: 0:00:00  49.62 MB/szope.interface 100% |###############################| Time: 0:00:00  51.40 MB/szope.interface 100% |###############################| Time: 0:00:00  49.15 MB/s
attrs-17.3.0-p   0% |                              | ETA:  --:--:--   0.00  B/sattrs-17.3.0-p  41% |############                   | Time: 0:00:00  45.75 MB/sattrs-17.3.0-p  83% |#########################      | Time: 0:00:00  57.89 MB/sattrs-17.3.0-p 100% |###############################| Time: 0:00:00  52.94 MB/sattrs-17.3.0-p 100% |###############################| Time: 0:00:00  43.23 MB/s
hypothesis-3.3   0% |                              | ETA:  --:--:--   0.00  B/shypothesis-3.3   7% |##                             | Time: 0:00:00  23.24 MB/shypothesis-3.3  14% |####                           | Time: 0:00:00  23.42 MB/shypothesis-3.3  21% |######                         | Time: 0:00:00  25.90 MB/shypothesis-3.3  28% |########                       | Time: 0:00:00  29.72 MB/shypothesis-3.3  36% |###########                    | Time: 0:00:00  33.64 MB/shypothesis-3.3  43% |#############                  | Time: 0:00:00  37.00 MB/shypothesis-3.3  50% |###############                | Time: 0:00:00  39.85 MB/shypothesis-3.3  57% |#################              | Time: 0:00:00  42.36 MB/shypothesis-3.3  64% |####################           | Time: 0:00:00  44.53 MB/shypothesis-3.3  72% |######################         | Time: 0:00:00  45.84 MB/shypothesis-3.3  79% |########################       | Time: 0:00:00  44.84 MB/shypothesis-3.3  86% |##########################     | Time: 0:00:00  46.35 MB/shypothesis-3.3  93% |#############################  | Time: 0:00:00  47.76 MB/shypothesis-3.3 100% |###############################| Time: 0:00:00  48.95 MB/shypothesis-3.3 100% |###############################| Time: 0:00:00  46.97 MB/s
pytest-3.3.0-p   0% |                              | ETA:  --:--:--   0.00  B/spytest-3.3.0-p   5% |#                              | Time: 0:00:00  26.17 MB/spytest-3.3.0-p  11% |###                            | Time: 0:00:00  29.65 MB/spytest-3.3.0-p  17% |#####                          | Time: 0:00:00  30.97 MB/spytest-3.3.0-p  23% |#######                        | Time: 0:00:00  26.53 MB/spytest-3.3.0-p  29% |#########                      | Time: 0:00:00  26.74 MB/spytest-3.3.0-p  35% |##########                     | Time: 0:00:00  29.76 MB/spytest-3.3.0-p  41% |############                   | Time: 0:00:00  32.44 MB/spytest-3.3.0-p  46% |##############                 | Time: 0:00:00  34.82 MB/spytest-3.3.0-p  52% |################               | Time: 0:00:00  36.97 MB/spytest-3.3.0-p  58% |##################             | Time: 0:00:00  38.87 MB/spytest-3.3.0-p  64% |####################           | Time: 0:00:00  40.57 MB/spytest-3.3.0-p  70% |#####################          | Time: 0:00:00  42.15 MB/spytest-3.3.0-p  76% |#######################        | Time: 0:00:00  43.57 MB/spytest-3.3.0-p  82% |#########################      | Time: 0:00:00  44.81 MB/spytest-3.3.0-p  88% |###########################    | Time: 0:00:00  45.98 MB/spytest-3.3.0-p  93% |#############################  | Time: 0:00:00  47.17 MB/spytest-3.3.0-p  99% |############################## | Time: 0:00:00  48.71 MB/spytest-3.3.0-p 100% |###############################| Time: 0:00:00  47.69 MB/spytest-3.3.0-p 100% |###############################| Time: 0:00:00  46.58 MB/s
pyamg-3.3.2-py   0% |                              | ETA:  --:--:--   0.00  B/spyamg-3.3.2-py   1% |                               | Time: 0:00:00  22.60 MB/spyamg-3.3.2-py   3% |                               | Time: 0:00:00  21.56 MB/spyamg-3.3.2-py   4% |#                              | Time: 0:00:00  20.75 MB/spyamg-3.3.2-py   6% |#                              | Time: 0:00:00  20.53 MB/spyamg-3.3.2-py   7% |##                             | Time: 0:00:00  22.01 MB/spyamg-3.3.2-py   9% |##                             | Time: 0:00:00  24.21 MB/spyamg-3.3.2-py  10% |###                            | Time: 0:00:00  23.69 MB/spyamg-3.3.2-py  12% |###                            | Time: 0:00:00  23.65 MB/spyamg-3.3.2-py  13% |####                           | Time: 0:00:00  23.35 MB/spyamg-3.3.2-py  15% |####                           | Time: 0:00:00  24.15 MB/spyamg-3.3.2-py  16% |#####                          | Time: 0:00:00  24.81 MB/spyamg-3.3.2-py  18% |#####                          | Time: 0:00:00  24.43 MB/spyamg-3.3.2-py  20% |######                         | Time: 0:00:00  25.43 MB/spyamg-3.3.2-py  21% |######                         | Time: 0:00:00  26.65 MB/spyamg-3.3.2-py  23% |#######                        | Time: 0:00:00  27.83 MB/spyamg-3.3.2-py  24% |#######                        | Time: 0:00:00  28.96 MB/spyamg-3.3.2-py  26% |########                       | Time: 0:00:00  29.19 MB/spyamg-3.3.2-py  27% |########                       | Time: 0:00:00  29.05 MB/spyamg-3.3.2-py  29% |#########                      | Time: 0:00:00  27.96 MB/spyamg-3.3.2-py  30% |#########                      | Time: 0:00:00  28.21 MB/spyamg-3.3.2-py  32% |##########                     | Time: 0:00:00  29.01 MB/spyamg-3.3.2-py  33% |##########                     | Time: 0:00:00  29.81 MB/spyamg-3.3.2-py  35% |###########                    | Time: 0:00:00  30.59 MB/spyamg-3.3.2-py  37% |###########                    | Time: 0:00:00  31.37 MB/spyamg-3.3.2-py  38% |###########                    | Time: 0:00:00  32.11 MB/spyamg-3.3.2-py  40% |############                   | Time: 0:00:00  32.83 MB/spyamg-3.3.2-py  41% |############                   | Time: 0:00:00  33.52 MB/spyamg-3.3.2-py  43% |#############                  | Time: 0:00:00  34.19 MB/spyamg-3.3.2-py  44% |#############                  | Time: 0:00:00  34.84 MB/spyamg-3.3.2-py  46% |##############                 | Time: 0:00:00  35.21 MB/spyamg-3.3.2-py  47% |##############                 | Time: 0:00:00  35.80 MB/spyamg-3.3.2-py  49% |###############                | Time: 0:00:00  36.40 MB/spyamg-3.3.2-py  50% |###############                | Time: 0:00:00  36.92 MB/spyamg-3.3.2-py  52% |################               | Time: 0:00:00  35.97 MB/spyamg-3.3.2-py  54% |################               | Time: 0:00:00  36.46 MB/spyamg-3.3.2-py  55% |#################              | Time: 0:00:00  36.36 MB/spyamg-3.3.2-py  57% |#################              | Time: 0:00:00  36.82 MB/spyamg-3.3.2-py  58% |##################             | Time: 0:00:00  37.31 MB/spyamg-3.3.2-py  60% |##################             | Time: 0:00:00  37.78 MB/spyamg-3.3.2-py  61% |###################            | Time: 0:00:00  38.24 MB/spyamg-3.3.2-py  63% |###################            | Time: 0:00:00  38.68 MB/spyamg-3.3.2-py  64% |####################           | Time: 0:00:00  39.12 MB/spyamg-3.3.2-py  66% |####################           | Time: 0:00:00  39.56 MB/spyamg-3.3.2-py  67% |#####################          | Time: 0:00:00  39.98 MB/spyamg-3.3.2-py  69% |#####################          | Time: 0:00:00  40.40 MB/spyamg-3.3.2-py  71% |######################         | Time: 0:00:00  40.78 MB/spyamg-3.3.2-py  72% |######################         | Time: 0:00:00  41.07 MB/spyamg-3.3.2-py  74% |######################         | Time: 0:00:00  41.41 MB/spyamg-3.3.2-py  75% |#######################        | Time: 0:00:00  41.78 MB/spyamg-3.3.2-py  77% |#######################        | Time: 0:00:00  42.15 MB/spyamg-3.3.2-py  78% |########################       | Time: 0:00:00  42.28 MB/spyamg-3.3.2-py  80% |########################       | Time: 0:00:00  42.63 MB/spyamg-3.3.2-py  81% |#########################      | Time: 0:00:00  42.99 MB/spyamg-3.3.2-py  83% |#########################      | Time: 0:00:00  43.35 MB/spyamg-3.3.2-py  84% |##########################     | Time: 0:00:00  43.71 MB/spyamg-3.3.2-py  86% |##########################     | Time: 0:00:00  44.05 MB/spyamg-3.3.2-py  88% |###########################    | Time: 0:00:00  44.39 MB/spyamg-3.3.2-py  89% |###########################    | Time: 0:00:00  44.72 MB/spyamg-3.3.2-py  91% |############################   | Time: 0:00:00  45.04 MB/spyamg-3.3.2-py  92% |############################   | Time: 0:00:00  45.36 MB/spyamg-3.3.2-py  94% |#############################  | Time: 0:00:00  45.67 MB/spyamg-3.3.2-py  95% |#############################  | Time: 0:00:00  45.99 MB/spyamg-3.3.2-py  97% |############################## | Time: 0:00:00  46.25 MB/spyamg-3.3.2-py  98% |############################## | Time: 0:00:00  46.53 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00  46.70 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00  45.86 MB/s
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   0.562053 seconds (259.19 k allocations: 22.253 MiB, 1.15% gc time)
PyAMG-Warmup:   1.723382 seconds (741.82 k allocations: 40.192 MiB, 0.68% gc time)
PyAMG:   0.140747 seconds (253 allocations: 941.484 KiB)
|x_\ - x_amg|_âˆž = 1.6070270114632024e-12
|A x_amg - b|_âˆž = 2.7456394491309766e-8
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.556460 seconds (68 allocations: 93.885 MiB, 4.20% gc time)
PyAMG-Warmup:   1.109225 seconds (252 allocations: 3.223 MiB)
PyAMG:   1.240616 seconds (252 allocations: 3.223 MiB)
|x_\ - x_amg|_âˆž = 6.239106453698184e-13
|A x_amg - b|_âˆž = 1.8089849618263543e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.423138 seconds (17.52 k allocations: 15.009 MiB)
First solve:   0.392036 seconds (46.27 k allocations: 3.278 MiB)
Second solve: (tol 1e-9)  0.400333 seconds (6.49 k allocations: 1.295 MiB)
Third solve: (tol 1e-6)  0.195696 seconds (152 allocations: 982.563 KiB)
|A x_amg - b|_âˆž = 3.804971598242446e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.309450 seconds (159.57 k allocations: 8.828 MiB)
  0.002629 seconds (39 allocations: 314.766 KiB)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.115450 seconds (40.31 k allocations: 2.956 MiB)
  0.014418 seconds (548 allocations: 723.703 KiB)
PyAMG solver
  0.013363 seconds (200 allocations: 86.953 KiB)
  0.014207 seconds (185 allocations: 85.359 KiB)
|x_cg-x| = 1.733112091038722 
|x_pcg-x| = 3.479425060990846e-7
|x_pyamg-x| = 3.479425087571646e-7
Test Failed
  Expression: norm(x_cg - x) < 1.0e-5
   Evaluated: 1.733112091038722 < 1.0e-5
ERROR: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/PyAMG/test/runtests.jl, in expression starting on line 94
================================[ ERROR: PyAMG ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PyAMG/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.5.0
INFO: Removing DataStructures v0.7.2
INFO: Removing IterTools v0.1.0
INFO: Removing IterativeSolvers v0.4.1
INFO: Removing LinearMaps v1.0.3
INFO: Removing Polynomials v0.1.6
INFO: Removing RecipesBase v0.2.3
INFO: Removing SpecialFunctions v0.3.5
INFO: Removing StatsBase v0.19.2
INFO: Removing SugarBLAS v0.0.4
INFO: Removing UnicodePlots v0.2.5
ERROR: PyAMG had test errors

>>> End of log
