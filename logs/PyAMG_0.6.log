>>> 'Pkg.add("PyAMG")' log
INFO: Cloning cache of PyAMG from https://github.com/cortner/PyAMG.jl.git
INFO: Installing Conda v1.0.0
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.17.1
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Info: Running `conda install -y numpy` in root environment
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 3.6.5) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython3.6m
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of PyAMG
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (853.68359375 MB free)
Uptime: 21003.0 sec
Load Avg:  1.08447265625  1.0224609375  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz    1201535 s         57 s      92549 s     508421 s         11 s
#2  3506 MHz     225609 s        104 s      35684 s    1808906 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
3 required packages:
 - JSON                          0.17.2
 - POMDPModels                   0.2.2
 - PyAMG                         0.2.1
66 additional packages:
 - AMG                           0.1.2              master
 - AbstractTrees                 0.1.0
 - AssetRegistry                 0.0.2
 - AutoHashEquals                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blink                         0.7.0
 - CPUTime                       0.1.0
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.11
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        1.0.0
 - Conda                         1.0.0
 - D3Trees                       0.2.0
 - DataFrames                    0.11.7
 - DataStreams                   0.3.6
 - DataStructures                0.8.4
 - DiscreteValueIteration        0.0.0-             master (unregistered)
 - Distributions                 0.15.0
 - FixedPointNumbers             0.4.6
 - FunctionalCollections         0.3.2
 - Hiccup                        0.1.1
 - HttpCommon                    0.4.0
 - HttpParser                    0.4.0
 - HttpServer                    0.3.1
 - IncompleteSelectedInversion   0.0.0-             master (unregistered)
 - IterativeSolvers              0.6.0
 - Iterators                     0.3.1
 - JSExpr                        0.2.0
 - LaTeXStrings                  1.0.0
 - Lazy                          0.12.1
 - MCTS                          0.0.0-             master (unregistered)
 - MacroTools                    0.4.2
 - MbedTLS                       0.5.12
 - Missings                      0.2.10
 - Mustache                      0.3.3
 - Mux                           0.3.1
 - NamedTuples                   4.0.2
 - Nullables                     0.0.6
 - Observables                   0.1.2
 - PDMats                        0.8.0
 - POMDPToolbox                  0.2.7
 - POMDPs                        0.6.7
 - Pidfile                       1.0.0
 - ProgressMeter                 0.5.6
 - PyCall                        1.17.1
 - QuadGK                        0.3.0
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - Rmath                         0.4.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - StatsBase                     0.23.1
 - StatsFuns                     0.6.1
 - TikzPictures                  1.2.0
 - TranscodingStreams            0.5.3
 - URIParser                     0.3.1
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
 - WebIO                         0.2.5
 - WebSockets                    0.5.0
INFO: Computing test dependencies for PyAMG...
INFO: No packages to install, update or remove
INFO: Testing PyAMG
Info: Installing scipy.sparse via the Conda scipy package...
Info: Running `conda install -y scipy` in root environment
Solving environment: ...working... done
scipy-1.1.0          | 18.1 MB |            |   0% scipy-1.1.0          | 18.1 MB |            |   0% scipy-1.1.0          | 18.1 MB | #8         |  18% scipy-1.1.0          | 18.1 MB | ###8       |  39% scipy-1.1.0          | 18.1 MB | #####8     |  58% scipy-1.1.0          | 18.1 MB | #######5   |  75% scipy-1.1.0          | 18.1 MB | ########7  |  87% scipy-1.1.0          | 18.1 MB | #########6 |  96% scipy-1.1.0          | 18.1 MB | ########## | 100% 
## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - scipy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    scipy-1.1.0                |   py36hc49cb51_0        18.1 MB

The following NEW packages will be INSTALLED:

    scipy: 1.1.0-py36hc49cb51_0


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done

Info: Installing pyamg via the Conda pyamg package...
Info: Running `conda install -y pyamg` in root environment
Solving environment: ...working... done
py-1.5.4             |  137 KB |            |   0% py-1.5.4             |  137 KB | ########## | 100% 
pytest-3.6.4         |  300 KB |            |   0% pytest-3.6.4         |  300 KB | ########## | 100% 
atomicwrites-1.1.5   |   10 KB |            |   0% atomicwrites-1.1.5   |   10 KB | ########## | 100% 
more-itertools-4.2.0 |   78 KB |            |   0% more-itertools-4.2.0 |   78 KB | ########## | 100% 
pluggy-0.6.0         |   22 KB |            |   0% pluggy-0.6.0         |   22 KB | ########## | 100% 
attrs-18.1.0         |   43 KB |            |   0% attrs-18.1.0         |   43 KB | ########## | 100% 
pyamg-3.3.2          |  1.0 MB |            |   0% pyamg-3.3.2          |  1.0 MB | ########4  |  85% pyamg-3.3.2          |  1.0 MB | ########## | 100% 
## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - pyamg


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    py-1.5.4                   |           py36_0         137 KB
    pytest-3.6.4               |           py36_0         300 KB
    atomicwrites-1.1.5         |           py36_0          10 KB
    more-itertools-4.2.0       |           py36_0          78 KB
    pluggy-0.6.0               |           py36_0          22 KB
    attrs-18.1.0               |           py36_0          43 KB
    pyamg-3.3.2                |   py36h54d9346_0         1.0 MB
    ------------------------------------------------------------
                                           Total:         1.6 MB

The following NEW packages will be INSTALLED:

    atomicwrites:   1.1.5-py36_0        
    attrs:          18.1.0-py36_0       
    more-itertools: 4.2.0-py36_0        
    pluggy:         0.6.0-py36_0        
    py:             1.5.4-py36_0        
    pyamg:          3.3.2-py36h54d9346_0
    pytest:         3.6.4-py36_0        


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done

=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   0.139106 seconds (14.49 k allocations: 9.362 MiB)
PyAMG-Warmup:   1.474416 seconds (616.62 k allocations: 34.084 MiB, 0.81% gc time)
PyAMG:   0.140331 seconds (256 allocations: 941.406 KiB)
|x_\ - x_amg|_∞ = 1.3952478061796114e-11
|A x_amg - b|_∞ = 2.8564841159095522e-8
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.487270 seconds (64 allocations: 93.885 MiB, 3.64% gc time)
PyAMG-Warmup:   0.837924 seconds (256 allocations: 3.223 MiB)
PyAMG:   0.826355 seconds (256 allocations: 3.223 MiB)
|x_\ - x_amg|_∞ = 1.6721346529635639e-12
|A x_amg - b|_∞ = 1.3421441735772532e-9
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.277609 seconds (14.43 k allocations: 14.831 MiB)
First solve:   0.256312 seconds (34.16 k allocations: 2.690 MiB)
Second solve: (tol 1e-9)  0.261787 seconds (4.83 k allocations: 1.210 MiB)
Third solve: (tol 1e-6)  0.158981 seconds (148 allocations: 982.406 KiB)
|A x_amg - b|_∞ = 3.804971598242446e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.013988 seconds (1.16 k allocations: 423.016 KiB)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.014147 seconds (700 allocations: 884.938 KiB)
PyAMG solver
  0.022032 seconds (181 allocations: 85.203 KiB)
|x_cg-x| = 2.525211412460893e-8 
|x_pcg-x| = 9.158169074363943e-9
|x_pyamg-x| = 9.158169183208691e-9
Test Summary: | Pass  Total
PyAMG         |    8      8
INFO: PyAMG tests passed
INFO: No packages to install, update or remove

>>> End of log
