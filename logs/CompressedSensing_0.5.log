>>> 'Pkg.add("CompressedSensing")' log
INFO: Cloning cache of CompressedSensing from https://github.com/dahlend/CompressedSensing.jl.git
INFO: Installing CompressedSensing v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CompressedSensing
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CompressedSensing")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing CompressedSensing
WARNING: Method definition FindSol(Any, Any, Any, Any) in module CompressedSensing at /home/vagrant/.julia/v0.5/CompressedSensing/src/SupportFunctions.jl:2 overwritten at /home/vagrant/.julia/v0.5/CompressedSensing/src/SupportFunctions.jl:2.
WARNING: Method definition InitSolution(Any, Any, Any) in module CompressedSensing at /home/vagrant/.julia/v0.5/CompressedSensing/src/SupportFunctions.jl:8 overwritten at /home/vagrant/.julia/v0.5/CompressedSensing/src/SupportFunctions.jl:8.

WARNING: deprecated syntax "{a,b, ...}" at /home/vagrant/.julia/v0.5/CompressedSensing/src/nGMCA.jl:54.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/vagrant/.julia/v0.5/CompressedSensing/src/nGMCA.jl:88.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/vagrant/.julia/v0.5/CompressedSensing/src/nGMCA.jl:176.
Use "Any[a,b, ...]" instead.
WARNING: int(a::AbstractArray) is deprecated, use round(Int64,a) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in int(::Array{Float64,1}) at ./deprecated.jl:267
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CompressedSensing/test/runtests.jl, in expression starting on line 9
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in copy!(::Base.LinearFast, ::Array{Float64,1}, ::Base.LinearFast, ::Array{Array{Float64,1},1}) at ./abstractarray.jl:254
 in #IRLS#6(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Array{Float64,1},1}) at /home/vagrant/.julia/v0.5/CompressedSensing/src/IRLS.jl:103
 in (::CompressedSensing.#kw##IRLS)(::Array{Any,1}, ::CompressedSensing.#IRLS, ::Array{Float64,2}, ::Array{Array{Float64,1},1}) at ./null:0
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CompressedSensing/test/runtests.jl, in expression starting on line 14
==========================[ ERROR: CompressedSensing ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CompressedSensing/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CompressedSensing had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
