>>> 'Pkg.add("Dtree")' log
┌ Info: Cloning cache of Dtree from https://github.com/kpamnany/Dtree.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Dtree v0.0.1                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building Dtree                                            @ Main none:10
┌ Error: ------------------------------------------------------------
│ # Build failed for Dtree
│   exception =
│    LoadError: UndefVarError: OS_NAME not defined
│    Stacktrace:
│     [1] top-level scope at /home/vagrant/.julia/v0.7/Dtree/deps/build.jl:7
│     [2] include at ./boot.jl:293 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:521
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:555
│     [6] top-level scope
│     [7] eval at ./boot.jl:296 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:296 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Dtree/deps/build.jl:7
└                                                                 @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ Dtree had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("Dtree")`
│  - build a single package by running its `deps/build.jl` script
└                                                  @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Dtree
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Dtree")' log
Julia Version 0.7.0-DEV.3351
Commit 09f7213c94 (2018-01-09 01:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3678714 s        115 s     189800 s    1056371 s         34 s
       #2  3499 MHz     857076 s       6438 s      76107 s    4754226 s          0 s
       
  Memory: 2.93927001953125 GB (536.01171875 MB free)
  Uptime: 57998.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.95458984375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Dtree                         0.0.1
 - JSON                          0.16.3
5 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.43.0
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - URIParser                     0.3.0
[ Info: Testing Dtree                              @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33.
│ Use `mutable struct` instead.
└                                                          @ nothing Dtree.jl:33
WARNING: importing deprecated binding Base.Void into Dtree.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:62
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:73
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:84
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:92
ERROR: LoadError: LoadError: InitError: error compiling __init__: could not load library "/home/vagrant/.julia/v0.7/Dtree/src/../deps/libdtree.so"
/home/vagrant/.julia/v0.7/Dtree/src/../deps/libdtree.so: cannot open shared object file: No such file or directory
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] _require(::Symbol) at ./loading.jl:453
 [4] require(::Symbol) at ./loading.jl:333
 [5] include at ./boot.jl:293 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:521
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
during initialization of module Dtree
in expression starting at /home/vagrant/.julia/v0.7/Dtree/src/Dtree.jl:94
in expression starting at /home/vagrant/.julia/v0.7/Dtree/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Dtree
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Dtree/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Dtree had test errors

>>> End of log
