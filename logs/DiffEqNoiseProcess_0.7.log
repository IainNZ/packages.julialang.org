>>> 'Pkg.add("DiffEqNoiseProcess")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing DataStructures v0.8.1
[ Info: Installing DiffEqBase v3.11.0
[ Info: Installing DiffEqNoiseProcess v1.0.1
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing IteratorInterfaceExtensions v0.0.2
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MacroTools v0.4.0
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing RandomNumbers v0.1.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing Requires v0.4.3
[ Info: Installing ResettableStacks v0.3.1
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing TableTraits v0.2.0
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building RandomNumbers
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#871(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1029
└ @ Base deprecated.jl:1029
WARNING: AES-NI will not be compiled.
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of DiffEqNoiseProcess
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqNoiseProcess")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4956
Commit 14297447f2 (2018-04-26 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3825933 s       6438 s     287252 s    1076721 s         63 s
       #2  3499 MHz     893446 s       1539 s     111154 s    4962770 s          0 s
       
  Memory: 2.939197540283203 GB (1671.15234375 MB free)
  Uptime: 60730.0 sec
  Load Avg:  0.94580078125  0.947265625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - DiffEqNoiseProcess            1.0.1
 - JSON                          0.17.2
17 additional packages:
 - Compat                        0.63.0
 - DataStructures                0.8.1
 - DiffEqBase                    3.11.0
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - RandomNumbers                 0.1.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Requires                      0.4.3
 - ResettableStacks              0.3.1
 - SimpleTraits                  0.7.1
 - StaticArrays                  0.7.0
 - TableTraits                   0.2.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for DiffEqNoiseProcess...
[ Info: Installing BinDeps v0.8.8
[ Info: Installing Calculus v0.3.0
[ Info: Installing Combinatorics v0.6.0
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing Conda v0.7.1
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffEqBiological v2.2.0
[ Info: Installing DiffEqDiffTools v0.4.1
[ Info: Installing DiffEqJump v4.2.2
[ Info: Installing DiffEqMonteCarlo v0.10.0
[ Info: Installing DiffEqOperators v1.2.0
[ Info: Installing DiffEqProblemLibrary v2.2.0
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing Distances v0.6.0
[ Info: Installing DistributedArrays v0.4.0
[ Info: Installing Distributions v0.15.0
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing HypothesisTests v0.6.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing Juno v0.4.0
[ Info: Installing LineSearches v3.2.5
[ Info: Installing Media v0.3.0
[ Info: Installing Missings v0.2.9
[ Info: Installing MuladdMacro v0.0.2
[ Info: Installing NLSolversBase v4.4.1
[ Info: Installing NLsolve v1.0.1
[ Info: Installing NaNMath v0.3.1
[ Info: Installing PDMats v0.9.0
[ Info: Installing ParameterizedFunctions v3.0.0
[ Info: Installing Parameters v0.8.1
[ Info: Installing Polynomials v0.3.0
[ Info: Installing Primes v0.3.0
[ Info: Installing QuadGK v0.2.1
[ Info: Installing Reexport v0.1.0
[ Info: Installing Rmath v0.3.2
[ Info: Installing Roots v0.5.0
[ Info: Installing SHA v0.5.7
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing StatsBase v0.21.0
[ Info: Installing StatsFuns v0.6.0
[ Info: Installing StochasticDiffEq v4.4.2
[ Info: Installing SymEngine v0.4.0
[ Info: Installing URIParser v0.3.1
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building SymEngine
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope at build.jl:20
└ @ Core build.jl:20
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building SpecialFunctions
[ Info: Building Rmath
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building RandomNumbers
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#871(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1029
└ @ Base deprecated.jl:1029
WARNING: AES-NI will not be compiled.
[ Info: Testing DiffEqNoiseProcess
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl:2
┌ Warning: `tic()` is deprecated, use `@time`, `@elapsed`, or calls to `time_ns()` instead.
│   caller = top-level scope
└ @ Core :0
Interpolation Test: Error During Test at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl:5
  Got exception LoadError("/home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/interpolation_test.jl", 6, MethodError(Random.rng_native_52, (RandomNumbers.Xorshifts.Xoroshiro128Plus(0xb2d4ed69d8189eb4, 0x49e4f0c380000a8c),), 0x0000000000006b06)) outside of a @test
  LoadError: MethodError: no method matching rng_native_52(::RandomNumbers.Xorshifts.Xoroshiro128Plus)
  Closest candidates are:
    rng_native_52(!Matched::Random.MersenneTwister) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/RNGs.jl:292
    rng_native_52(!Matched::Random.RandomDevice) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/RNGs.jl:56
  Stacktrace:
   [1] rand(::RandomNumbers.Xorshifts.Xoroshiro128Plus, ::Random.SamplerTrivial{Random.UInt52Raw{UInt64},Any}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/generation.jl:108
   [2] rand at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/Random.jl:201 [inlined]
   [3] rand at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/generation.jl:119 [inlined]
   [4] rand at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/Random.jl:201 [inlined]
   [5] randn at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/normal.jl:38 [inlined]
   [6] randn at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Random/src/normal.jl:165 [inlined]
   [7] wiener_randn at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:2 [inlined]
   [8] WHITE_NOISE_DIST at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:17 [inlined]
   [9] calculate_step!(::NoiseProcess{Float64,1,Float64,Float64,Float64,Array{Float64,1},typeof(DiffEqNoiseProcess.WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.WHITE_NOISE_BRIDGE),false,DataStructures.Stack{Tuple{Float64,Float64,Float64}},ResettableStacks.ResettableStack{Tuple{Float64,Float64,Float64}},RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus}, ::Float64) at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/noise_interfaces/noise_process_interface.jl:195
   [10] top-level scope
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl:5 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [17] macro expansion at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl:5 [inlined]
   [18] top-level scope at ./<missing>:156
   [19] include at ./boot.jl:314 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:1067
   [21] include(::Module, ::String) at ./sysimg.jl:29
   [22] exec_options(::Base.JLOptions) at ./client.jl:327
   [23] _start() at ./client.jl:455
  in expression starting at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/interpolation_test.jl:6
Test Summary:      | Error  Total
Interpolation Test |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for DiffEqNoiseProcess
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing BinDeps v0.8.8
[ Info: Removing Calculus v0.3.0
[ Info: Removing Combinatorics v0.6.0
[ Info: Removing CommonSubexpressions v0.1.0
[ Info: Removing Conda v0.7.1
[ Info: Removing DiffBase v0.3.2
[ Info: Removing DiffEqBiological v2.2.0
[ Info: Removing DiffEqDiffTools v0.4.1
[ Info: Removing DiffEqJump v4.2.2
[ Info: Removing DiffEqMonteCarlo v0.10.0
[ Info: Removing DiffEqOperators v1.2.0
[ Info: Removing DiffEqProblemLibrary v2.2.0
[ Info: Removing DiffResults v0.0.3
[ Info: Removing DiffRules v0.0.4
[ Info: Removing Distances v0.6.0
[ Info: Removing DistributedArrays v0.4.0
[ Info: Removing Distributions v0.15.0
[ Info: Removing ForwardDiff v0.7.5
[ Info: Removing HypothesisTests v0.6.0
[ Info: Removing IterTools v0.2.1
[ Info: Removing Juno v0.4.0
[ Info: Removing LineSearches v3.2.5
[ Info: Removing Media v0.3.0
[ Info: Removing Missings v0.2.9
[ Info: Removing MuladdMacro v0.0.2
[ Info: Removing NLSolversBase v4.4.1
[ Info: Removing NLsolve v1.0.1
[ Info: Removing NaNMath v0.3.1
[ Info: Removing PDMats v0.9.0
[ Info: Removing ParameterizedFunctions v3.0.0
[ Info: Removing Parameters v0.8.1
[ Info: Removing Polynomials v0.3.0
[ Info: Removing Primes v0.3.0
[ Info: Removing QuadGK v0.2.1
[ Info: Removing Reexport v0.1.0
[ Info: Removing Rmath v0.3.2
[ Info: Removing Roots v0.5.0
[ Info: Removing SHA v0.5.7
[ Info: Removing SortingAlgorithms v0.2.1
[ Info: Removing SpecialFunctions v0.4.0
[ Info: Removing StatsBase v0.21.0
[ Info: Removing StatsFuns v0.6.0
[ Info: Removing StochasticDiffEq v4.4.2
[ Info: Removing SymEngine v0.4.0
[ Info: Removing URIParser v0.3.1
ERROR: DiffEqNoiseProcess had test errors

>>> End of log
