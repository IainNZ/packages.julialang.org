>>> 'Pkg.add("Parts")' log
[ Info: Cloning cache of Parts from https://github.com/bramtayl/Parts.jl.git
[ Info: Installing Parts v0.0.1
[ Info: Package database updated

>>> 'Pkg.test("Parts")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     183868 s         48 s      13398 s     235113 s          2 s
       #2  3499 MHz      37830 s         91 s       6192 s     425558 s          0 s
       
  Memory: 2.93927001953125 GB (1018.23828125 MB free)
  Uptime: 4763.0 sec
  Load Avg:  0.83154296875  0.896484375  0.79931640625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Parts                         0.0.1
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for Parts...
[ Info: Installing DocStringExtensions v0.4.3
[ Info: Installing Documenter v0.13.1
[ Info: Testing Parts
┌ Warning: Deprecated syntax `implicit assignment to global variable `binding``.
│ Use `global binding` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `binding``.
│ Use `global binding` instead.
└ @ nothing none:0
┌ Warning: `names(m, all)` is deprecated, use `names(m, all=all)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `names(m, all)` is deprecated, use `names(m, all=all)` instead.
│   caller = submodules(::Module, ::Set{Module}) at Utilities.jl:178
└ @ Documenter.Utilities Utilities.jl:178
Documenter: setting up build directory.
Documenter: expanding markdown templates.
┌ Warning: `module_name(m::Module)` is deprecated, use `nameof(m)` instead.
│   caller = Documenter.Utilities.Object(::Base.Docs.Binding, ::Type) at Utilities.jl:204
└ @ Documenter.Utilities Utilities.jl:204
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
┌ Warning: `nb_available` is deprecated, use `bytesavailable` instead.
│   caller = savebuffer!(::Array{String,1}, ::Base.GenericIOBuffer{Array{UInt8,1}}) at DocChecks.jl:382
└ @ Documenter.DocChecks DocChecks.jl:382
┌ Warning: `module_name(m::Module)` is deprecated, use `nameof(m)` instead.
│   caller = checkresult(::Module, ::Documenter.DocChecks.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at DocChecks.jl:243
└ @ Documenter.DocChecks DocChecks.jl:243
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/Parts/src/Parts.jl

> Code block:

```jldoctest
julia> using Parts, Base.Test

julia> a = @inferred Arrays([1, 3, 2, 4], [(1:2,), (3:4,)]);

julia> @inferred a[1]
2-element Array{Int64,1}:
 1
 3

julia> a[1] = [3, 5];

julia> @inferred map(sum, a)
2-element Array{Int64,1}:
 8
 6
```

> Subexpression:

    using Parts, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Parts/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/Parts/src/Parts.jl

> Code block:

```jldoctest
julia> using Parts, Base.Test

julia> a = @inferred Swaps([1, 3, 2, 4], [(1:2,), (3:4,)]);

julia> @inferred a[1]
2-element Array{Int64,1}:
 1
 3

julia> @inferred map(sum, a)
2-element Array{Int64,1}:
 4
 6

julia> b = @inferred Swaps([1, 3, 2, 4], [(1:3,), (4:4,)]);

julia> @inferred b[2]
ERROR: Swaps must all be the same size
[...]
```

> Subexpression:

    using Parts, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Parts/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/Parts/src/Parts.jl

> Code block:

```jldoctest
julia> using Parts, Base.Test

julia> a = @inferred Views([1, 3, 2, 4], [(1:2,), (3:4,)]);

julia> @inferred a[1]
2-element SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}:
 1
 3

julia> @inferred map(sum, a)
2-element Array{Int64,1}:
 4
 6
```

> Subexpression:

    using Parts, Base.Test

> Output Diff (REQUIRES COLOR):

WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Parts/test/runtests.jl:4

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.7/Parts/src/Parts.jl

> Code block:

```jldoctest
julia> using Parts, Base.Test

julia> a = @inferred Views([1, 3, 2, 4], [(1:2,), (3:4,)]);

julia> @inferred a[1]
2-element SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}:
 1
 3

julia> @inferred map(sum, a)
2-element Array{Int64,1}:
 4
 6
```

> Subexpression:

    @inferred a[1]

> Output Diff (REQUIRES COLOR):

2-element SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}:
 view(::Array{Int64,1}, 1:2) with eltype Int64:
 1
 3

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.7/Documenter/src/Builder.jl:202
 [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Any, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.7/Documenter/src/Selectors.jl:167
 [4] #2 at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:203 [inlined]
 [5] cd(::getfield(Documenter, Symbol("##2#3")){Documenter.Documents.Document}, ::String) at ./file.jl:70
 [6] #makedocs#1(::Bool, ::Base.Iterators.IndexValue{Symbol,Any,NTuple{9,Symbol},NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :checkdocs, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,Symbol,String}}}, ::Function) at /home/vagrant/.julia/v0.7/Documenter/src/Documenter.jl:202
 [7] (::getfield(Documenter, Symbol("#kw##makedocs")))(::NamedTuple{(:modules, :format, :sitename, :root, :pages, :strict, :linkcheck, :checkdocs, :authors),Tuple{Array{Module,1},Symbol,String,String,Array{Any,1},Bool,Bool,Symbol,String}}, ::typeof(Documenter.makedocs)) at ./<missing>:0
 [8] top-level scope
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1012
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] process_options(::Base.JLOptions) at ./client.jl:334
 [13] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/Parts/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for Parts
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Parts/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: Removing DocStringExtensions v0.4.3
[ Info: Removing Documenter v0.13.1
ERROR: Parts had test errors

>>> End of log
