>>> 'Pkg.add("ParameterizedFunctions")' log
INFO: Cloning cache of DiffEqBase from https://github.com/JuliaDiffEq/DiffEqBase.jl.git
INFO: Cloning cache of FunctionWrappers from https://github.com/yuyichao/FunctionWrappers.jl.git
INFO: Cloning cache of LinearMaps from https://github.com/Jutho/LinearMaps.jl.git
INFO: Cloning cache of ParameterizedFunctions from https://github.com/JuliaDiffEq/ParameterizedFunctions.jl.git
INFO: Cloning cache of RecursiveArrayTools from https://github.com/JuliaDiffEq/RecursiveArrayTools.jl.git
INFO: Cloning cache of SymEngine from https://github.com/symengine/SymEngine.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing Conda v0.7.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffEqBase v3.9.0
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing NamedTuples v4.0.0
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.6.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing SymEngine v0.3.0
INFO: Installing TableTraits v0.2.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building SymEngine
Solving environment: ...working... done
openssl 1.0.2n:            |   0% openssl 1.0.2n:            |   0% openssl 1.0.2n: 7          |   7% openssl 1.0.2n: ##         |  21% openssl 1.0.2n: ###8       |  39% openssl 1.0.2n: ####9      |  49% openssl 1.0.2n: #####8     |  59% openssl 1.0.2n: ######8    |  68% openssl 1.0.2n: #######7   |  77% openssl 1.0.2n: ########4  |  84% openssl 1.0.2n: #########  |  90% openssl 1.0.2n: #########6 |  96% openssl 1.0.2n: ########## | 100% 
mpfr 3.1.5:            |   0% mpfr 3.1.5: 2          |   3% mpfr 3.1.5: #######5   |  75% mpfr 3.1.5: ########## | 100% 
symengine 0.3.0:            |   0% symengine 0.3.0: 1          |   1% symengine 0.3.0: ####5      |  45% symengine 0.3.0: #######5   |  75% symengine 0.3.0: ########## | 100% 
mpc 1.0.3:            |   0% mpc 1.0.3: #3         |  14% mpc 1.0.3: ########## | 100% 
gmp 6.1.2:            |   0% gmp 6.1.2: 1          |   2% gmp 6.1.2: #####9     |  59% gmp 6.1.2: #######7   |  77% gmp 6.1.2: ########## | 100% 
conda 4.3.34:            |   0% conda 4.3.34: 2          |   2% conda 4.3.34: #######5   |  75% conda 4.3.34: #########2 |  93% conda 4.3.34: ########## | 100% 
ca-certificates 2018.1.18:            |   0% ca-certificates 2018.1.18: 8          |   9% ca-certificates 2018.1.18: ########## | 100% 
certifi 2018.1.18:            |   0% certifi 2018.1.18: 8          |   8% certifi 2018.1.18: ########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - symengine=0.3.0


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    openssl-1.0.2n             |                0         3.5 MB  conda-forge
    mpfr-3.1.5                 |                0         406 KB  conda-forge
    symengine-0.3.0            |                1         851 KB  conda-forge
    mpc-1.0.3                  |                4          87 KB  conda-forge
    gmp-6.1.2                  |                0         670 KB  conda-forge
    conda-4.3.34               |           py27_0         507 KB  conda-forge
    ca-certificates-2018.1.18  |                0         140 KB  conda-forge
    certifi-2018.1.18          |           py27_0         143 KB  conda-forge
    ------------------------------------------------------------
                                           Total:         6.3 MB

The following NEW packages will be INSTALLED:

    gmp:             6.1.2-0           conda-forge
    mpc:             1.0.3-4           conda-forge
    mpfr:            3.1.5-0           conda-forge
    symengine:       0.3.0-1           conda-forge

The following packages will be UPDATED:

    certifi:         2018.1.18-py27_0              --> 2018.1.18-py27_0 conda-forge

The following packages will be DOWNGRADED:

    ca-certificates: 2018.03.07-0                  --> 2018.1.18-0      conda-forge
    conda:           4.5.0-py27_0                  --> 4.3.34-py27_0    conda-forge
    openssl:         1.0.2o-h20670df_0             --> 1.0.2n-0         conda-forge


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
INFO: Package database updated

>>> 'Pkg.test("ParameterizedFunctions")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (753.96875 MB free)
Uptime: 6555.0 sec
Load Avg:  0.875  0.96826171875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz     242894 s         86 s      27552 s     312290 s         11 s
#2  3491 MHz      94039 s         62 s      15358 s     527432 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - ParameterizedFunctions        3.0.0
20 additional packages:
 - BinDeps                       0.8.7
 - Compat                        0.63.0
 - Conda                         0.7.1
 - DataStructures                0.7.4
 - DiffEqBase                    3.9.0
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Requires                      0.4.3
 - SHA                           0.5.6
 - SimpleTraits                  0.6.0
 - StaticArrays                  0.7.0
 - SymEngine                     0.3.0
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for ParameterizedFunctions...
INFO: Cloning cache of DiffEqBiological from https://github.com/JuliaDiffEq/DiffEqBiological.jl.git
INFO: Cloning cache of DiffEqJump from https://github.com/JuliaDiffEq/DiffEqJump.jl.git
INFO: Cloning cache of DiffEqOperators from https://github.com/JuliaDiffEq/DiffEqOperators.jl.git
INFO: Cloning cache of DiffEqProblemLibrary from https://github.com/JuliaDiffEq/DiffEqProblemLibrary.jl.git
INFO: Installing DiffEqBiological v2.1.0
INFO: Installing DiffEqJump v1.2.0
INFO: Installing DiffEqOperators v1.2.0
INFO: Installing DiffEqProblemLibrary v2.1.0
INFO: Installing Reexport v0.1.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Building Conda
INFO: Building SymEngine
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building SpecialFunctions
INFO: Testing ParameterizedFunctions
Build some examples
Test Values
Error During Test
  Test threw an exception of type UndefVarError
  Expression: num_params(f_t) == 4
  UndefVarError: num_params not defined
  Stacktrace:
   [1] include_from_node1(::String) at ./loading.jl:576
   [2] include(::String) at ./sysimg.jl:14
   [3] process_options(::Base.JLOptions) at ./client.jl:305
   [4] _start() at ./client.jl:371
ERROR: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/ParameterizedFunctions/test/runtests.jl, in expression starting on line 37
=======================[ ERROR: ParameterizedFunctions ]========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ParameterizedFunctions/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffEqBiological v2.1.0
INFO: Removing DiffEqJump v1.2.0
INFO: Removing DiffEqOperators v1.2.0
INFO: Removing DiffEqProblemLibrary v2.1.0
INFO: Removing Reexport v0.1.0
INFO: Removing SpecialFunctions v0.4.0
ERROR: ParameterizedFunctions had test errors

>>> End of log
