>>> 'Pkg.add("LearningStrategies")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of LearningStrategies from https://github.com/JuliaML/LearningStrategies.jl.git
[ Info: Installing BinDeps v0.8.7
[ Info: Installing DataStructures v0.7.4
[ Info: Installing LearnBase v0.1.6
[ Info: Installing LearningStrategies v0.2.0
[ Info: Installing Missings v0.2.9
[ Info: Installing SHA v0.5.6
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing StatsBase v0.20.1
[ Info: Installing URIParser v0.3.1
[ Info: Building SpecialFunctions
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:402
└ @ BinDeps dependencies.jl:402
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = read_sonames() at dependencies.jl:405
└ @ BinDeps dependencies.jl:405
[ Info: Package database updated

>>> 'Pkg.test("LearningStrategies")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4854
Commit 18ac6e6aa4 (2018-04-10 22:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3494 MHz    2899760 s       6796 s     235004 s     820842 s         31 s
       #2  3494 MHz     679224 s        170 s      82250 s    3796052 s          0 s
       
  Memory: 2.939197540283203 GB (484.53125 MB free)
  Uptime: 46395.0 sec
  Load Avg:  0.9970703125  1.00048828125  0.966796875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - LearningStrategies            0.2.0
11 additional packages:
 - BinDeps                       0.8.7
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - LearnBase                     0.1.6
 - Missings                      0.2.9
 - Nullables                     0.0.5
 - SHA                           0.5.6
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing LearningStrategies
┌ Warning: Deprecated syntax `parametric method syntax Tracer{S}(::Type{S}, f::Function, every::Int = 1)` around /home/vagrant/.julia/v0.7/LearningStrategies/src/LearningStrategies.jl:298.
│ Use `Tracer(#s3::Type{S}, f::Function, every::Int = 1) where S` instead.
└ @ nothing LearningStrategies.jl:298
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:3
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Verbose
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = finished at LearningStrategies.jl:162 [inlined]
└ @ Core LearningStrategies.jl:162
INFO: MaxIter(5) finished
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = finished at LearningStrategies.jl:162 [inlined]
└ @ Core LearningStrategies.jl:162
INFO: TimeLimit(0.5) finished
WARNING: importing deprecated binding Base.norm into LearningStrategies.
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:14
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:14
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:14
┌ Warning: `copy!(dest::Union{AbstractArray, IndexStyle}, args...)` is deprecated, use `copyto!(dest, args...)` instead.
│   caller = finished at LearningStrategies.jl:228 [inlined]
└ @ Core LearningStrategies.jl:228
┌ Warning: `a::Number - b::AbstractArray` is deprecated, use `broadcast(-, a, b)` instead.
│   caller = finished at LearningStrategies.jl:225 [inlined]
└ @ Core LearningStrategies.jl:225
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = finished(::LearningStrategies.Verbose{LearningStrategies.Converged{getfield(Main.LearningStrategiesTest, Symbol("##1#2"))}}, ::Main.LearningStrategiesTest.Model, ::LearningStrategies.InfiniteNothing, ::Int64) at LearningStrategies.jl:234
└ @ LearningStrategies LearningStrategies.jl:234
INFO: Converged after 2 iterations: true
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Type Stability and Printing
MetaStrategy
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Base.PipeEndpoint` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = show(::Base.PipeEndpoint, ::LearningStrategies.MetaStrategy{Tuple{LearningStrategies.MaxIter,LearningStrategies.TimeLimit,LearningStrategies.Converged{getfield(Main.LearningStrategiesTest, Symbol("##3#8"))},LearningStrategies.ConvergedTo{Array{Float64,1}},LearningStrategies.IterFunction{getfield(Main.LearningStrategiesTest, Symbol("##5#10"))},LearningStrategies.Breaker{getfield(Main.LearningStrategiesTest, Symbol("##6#11"))},LearningStrategies.Tracer{Float64}}}) at LearningStrategies.jl:55
└ @ LearningStrategies LearningStrategies.jl:55
  > MaxIter(20)
  > TimeLimit(2.0)
  > Converged(getfield(Main.LearningStrategiesTest, Symbol("##3#8"))(), 1.0e-6, 1)
  > ConvergedTo(getfield(Main.LearningStrategiesTest, Symbol("##4#9"))(), 1.0e-6, [1.0, 1.0], 1)
  > IterFunction(getfield(Main.LearningStrategiesTest, Symbol("##5#10"))(), 1)
  > Breaker(getfield(Main.LearningStrategiesTest, Symbol("##6#11"))())
  > Tracer(1, getfield(Main.LearningStrategiesTest, Symbol("##7#12"))(), 0-element Array{Float64,1})
  > MaxIter(20)
  > TimeLimit(2.0)
  > Converged(getfield(Main.LearningStrategiesTest, Symbol("##3#8"))(), 1.0e-6, 1)
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = setup!(::LearningStrategies.Converged{getfield(Main.LearningStrategiesTest, Symbol("##3#8"))}, ::Array{Float64,1}, ::Nothing) at LearningStrategies.jl:221
└ @ LearningStrategies LearningStrategies.jl:221
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = finished(::LearningStrategies.Converged{getfield(Main.LearningStrategiesTest, Symbol("##3#8"))}, ::Array{Float64,1}, ::Nothing, ::Int64) at LearningStrategies.jl:228
└ @ LearningStrategies LearningStrategies.jl:228
  > ConvergedTo(getfield(Main.LearningStrategiesTest, Symbol("##4#9"))(), 1.0e-6, [1.0, 1.0], 1)
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:30
in finished at /home/vagrant/.julia/v0.7/LearningStrategies/src/LearningStrategies.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = finished(::LearningStrategies.ConvergedTo{Array{Float64,1}}, ::Array{Float64,1}, ::Nothing, ::Int64) at LearningStrategies.jl:257
└ @ LearningStrategies LearningStrategies.jl:257
INFO: Converged after 5 iterations: [1.0, 1.0]
  > IterFunction(getfield(Main.LearningStrategiesTest, Symbol("##5#10"))(), 1)
  > Breaker(getfield(Main.LearningStrategiesTest, Symbol("##6#11"))())
  > Tracer(1, getfield(Main.LearningStrategiesTest, Symbol("##7#12"))(), 0-element Array{Float64,1})
┌ Warning: Deprecated syntax `implicit assignment to global variable `m``.
│ Use `global m` instead.
└ @ nothing none:0
Test Summary: | Pass  Total
MaxIter       |   10     10
Test Summary: | Pass  Total
TimeLimit     |    1      1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:53
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:53
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:53
┌ Warning: `copy!(dest::Union{AbstractArray, IndexStyle}, args...)` is deprecated, use `copyto!(dest, args...)` instead.
│   caller = finished at LearningStrategies.jl:228 [inlined]
└ @ Core LearningStrategies.jl:228
┌ Warning: `a::Number - b::AbstractArray` is deprecated, use `broadcast(-, a, b)` instead.
│   caller = finished at LearningStrategies.jl:225 [inlined]
└ @ Core LearningStrategies.jl:225
Test Summary: |
Converged     | No tests
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:56
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:56
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:56
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:56
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LearningStrategies/test/runtests.jl:56
in finished at /home/vagrant/.julia/v0.7/LearningStrategies/src/LearningStrategies.jl
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = finished(::LearningStrategies.ConvergedTo{Array{Float64,1}}, ::Array{Float64,1}, ::LearningStrategies.InfiniteNothing, ::Int64) at LearningStrategies.jl:257
└ @ LearningStrategies LearningStrategies.jl:257
INFO: Converged after 1 iterations: [1.0, 1.0, 1.0, 1.0, 1.0]
Test Summary: |
ConvergedTo   | No tests
Print twice:  > 1
Print twice:  > 2
Test Summary: |
IterFunction  | No tests
Test Summary: | Pass  Total
Tracer        |    1      1
┌ Warning: Deprecated syntax `implicit assignment to global variable `m``.
│ Use `global m` instead.
└ @ nothing none:0
Test Summary: | Pass  Total
Breaker       |    1      1
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = macro expansion at runtests.jl:90 [inlined]
└ @ Core runtests.jl:90
Test Summary: | Pass  Total
LinRegModel   |    1      1
[ Info: LearningStrategies tests passed

>>> End of log
