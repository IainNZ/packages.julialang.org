>>> 'Pkg.add("Ensemble")' log
INFO: Cloning cache of Ensemble from https://github.com/farr/Ensemble.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Distributions v0.12.4
INFO: Installing Ensemble v0.0.1
INFO: Installing PDMats v0.5.6
INFO: Installing QuadGK v0.1.2
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of Ensemble
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Ensemble")' log
Julia Version 0.6.0-pre.beta.187
Commit 55c97fb (2017-04-17 23:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1149.66015625 MB free)
Uptime: 45700.0 sec
Load Avg:  0.9970703125  0.98095703125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3042970 s       6686 s     132304 s     702458 s         36 s
#2  3500 MHz     809388 s        191 s      74787 s    3586856 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Ensemble                      0.0.1
 - JSON                          0.9.0
13 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - Distributions                 0.12.4
 - PDMats                        0.5.6
 - QuadGK                        0.1.2
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Testing Ensemble
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:324
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] require(::Symbol) at ./loading.jl:453
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/src/Stats.jl, in expression starting on line 25
WARNING: @test_approx_eq_eps is deprecated, use `@test logsumexp(x, y) ≈ log(exp(x) + exp(y)) atol=1.0e-12` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestStats.jl, in expression starting on line 7
WARNING: @test_approx_eq_eps is deprecated, use `@test chain_mean[i] ≈ mu[i] atol=0.1 * sigma[i, i]` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl, in expression starting on line 7
WARNING: @test_approx_eq_eps is deprecated, use `@test mean(as) ≈ a atol=3 * std(as)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl, in expression starting on line 129
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleGibbs.jl, in expression starting on line 22
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleGibbs.jl, in expression starting on line 29
WARNING: @test_approx_eq_eps is deprecated, use `@test logZ(ns) ≈ 0.0 atol=0.2` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleNest.jl, in expression starting on line 8
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] propose(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Ensemble/src/EnsembleSampler.jl:16
 [4] update_half(::Array{Float64,2}, ::Array{Float64,1}, ::Function, ::Int64) at /home/vagrant/.julia/v0.6/Ensemble/src/EnsembleSampler.jl:64
 [5] update(::Array{Float64,2}, ::Array{Float64,1}, ::Function) at /home/vagrant/.julia/v0.6/Ensemble/src/EnsembleSampler.jl:107
 [6] testgaussian() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:26
 [7] testall() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:174
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/runtests.jl, in expression starting on line 15
WARNING: log{T <: Number}(x::AbstractArray{T}) is deprecated, use log.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Array{Float64,1}) at ./deprecated.jl:51
 [3] update_half(::Array{Float64,2}, ::Array{Float64,1}, ::Function, ::Int64) at /home/vagrant/.julia/v0.6/Ensemble/src/EnsembleSampler.jl:67
 [4] update(::Array{Float64,2}, ::Array{Float64,1}, ::Function) at /home/vagrant/.julia/v0.6/Ensemble/src/EnsembleSampler.jl:107
 [5] testgaussian() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:26
 [6] testall() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:174
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/runtests.jl, in expression starting on line 15
ERROR: LoadError: assertion failed: |chain_evals[i] - evals[i]| <= 2.6562681617974775
  chain_evals[i] = 0.010863920212260243
  evals[i] = 26.562681617974775
  difference = 26.551817697762516 > 2.6562681617974775
Stacktrace:
 [1] test_approx_eq(::Float64, ::Float64, ::Float64, ::String, ::String) at ./deprecated.jl:1011
 [2] testgaussian() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:65
 [3] testall() at /home/vagrant/.julia/v0.6/Ensemble/test/TestEnsembleSampler.jl:174
 [4] include_from_node1(::String) at ./loading.jl:539
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Ensemble/test/runtests.jl, in expression starting on line 15
==============================[ ERROR: Ensemble ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Ensemble/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Ensemble had test errors

>>> End of log
