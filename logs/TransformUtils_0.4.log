>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.06640625 MB free)
Uptime: 44549.0 sec
Load Avg:  1.0517578125  0.99072265625  0.97412109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2208380 s        400 s     164442 s    1620856 s         93 s
#2  3496 MHz    1428801 s       6405 s     137778 s    2733745 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.06667459730701572 -0.10768887904699301
 0.06667459730701572 0.0 0.1730328333920795
 0.10768887904699301 -0.1730328333920795 0.0])
dAA = TransformUtils.so3([0.0 0.04333433608637216 -0.08808133071796015
 -0.04333433608637216 0.0 0.015039670865106054
 0.08808133071796015 -0.015039670865106054 0.0])
dAA = TransformUtils.so3([0.0 0.05574571215416259 -0.025765701808973168
 -0.05574571215416259 0.0 0.09306864157572145
 0.025765701808973168 -0.09306864157572145 0.0])
dAA = TransformUtils.Quaternion(0.9855852263155072,[-0.032971829220585544,0.06562610828276788,-0.15240680450070998])
dAA = TransformUtils.SO3([0.999279166553328 -0.032460251437385 -0.019684495652868287
 0.03424613179854205 0.9945520747309466 0.0984549293088278
 0.01638138423097794 -0.09905807753530824 0.9949468063799622])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9729075439764086 0.11837703059546692 -0.19858949997719558
 -0.1695920314537634 0.9492078527817034 -0.265033950815615
 0.15712878075380843 0.29153272688490395 0.943567281869117]),[-1.596481684862605,1.0211695543563886,-0.07883869810488597])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9480692634704196 0.23737885786286778 -0.21169777869022705
 -0.23078419473463405 0.971409096045405 0.055704789569079496
 0.21886828715769316 -0.003955497436397062 0.9757463947751425]),[-0.29773612002154937,1.6051716053496168,0.2680944374339174])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9959134061617588 0.06558291713482751 -0.06209161301955232
 -0.04302527714784635 0.9490161895960049 0.3122772764884284
 0.0794060007407155 -0.30832961723578495 0.9479596690691011]),[1.2190304441289672,0.8092233393586666,-0.08534284748786448])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
