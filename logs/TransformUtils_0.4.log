>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (462.125 MB free)
Uptime: 46041.0 sec
Load Avg:  1.23046875  1.0283203125  1.02587890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2262378 s        628 s     172316 s    1706738 s         98 s
#2  3500 MHz    1537164 s       6216 s     149994 s    2744729 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.03670510231913241 0.039366843801196844
 -0.03670510231913241 0.0 0.017806404448984514
 -0.039366843801196844 -0.017806404448984514 0.0])
dAA = TransformUtils.so3([0.0 -0.08997669069695863 0.031679096103373154
 0.08997669069695863 0.0 -0.03703873659838609
 -0.031679096103373154 0.03703873659838609 0.0])
dAA = TransformUtils.so3([0.0 0.007499599308600962 -0.06710747949837974
 -0.007499599308600962 0.0 0.007626058080324268
 0.06710747949837974 -0.007626058080324268 0.0])
dAA = TransformUtils.Quaternion(0.996942715356801,[0.06792197871998257,0.0004585543636600334,0.03862145558709772])
dAA = TransformUtils.SO3([0.9848273615481196 -0.11249663952120358 0.1321346814526992
 0.12452984810968949 0.988427613635098 -0.08662083775514857
 -0.12086101470675964 0.10176128291281751 0.9874397482499833])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9550620046502661 -0.2817103892564719 -0.09217279348257904
 0.2218367034178131 0.8855912363021026 -0.4080645037265932
 0.19658342832022313 0.3692795943047498 0.9082882455145982]),[0.45423882792838133,-0.2064919631837698,-1.1171551284025825])
xj = TransformUtils.SE3(TransformUtils.SO3([0.997810561022058 0.04981196482863767 0.04350692442308948
 -0.048327795893854865 0.9982346902387482 -0.034524300832778736
 -0.04514984448353906 0.0323461182193608 0.998456418768116]),[-0.4484872497789442,-0.41888207347676326,1.0847683542246673])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9333743645296927 0.2753773187170861 0.23017303920090357
 -0.34056519031694094 0.8819401068600532 0.3258788103821166
 -0.11325920175940717 -0.3825558524553847 0.916964215751605]),[-0.4764136322175036,0.8793419047448794,2.1698568660779016])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
