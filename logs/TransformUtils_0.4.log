>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.796875 MB free)
Uptime: 44741.0 sec
Load Avg:  0.9609375  0.9853515625  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2206136 s         60 s     175021 s    1628354 s         80 s
#2  3503 MHz    1409256 s       5971 s     152454 s    2749296 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.010745667501592077 0.04118984499747297
 0.010745667501592077 0.0 -0.023813367513567794
 -0.04118984499747297 0.023813367513567794 0.0])
dAA = TransformUtils.so3([0.0 0.08079682345032803 0.12534004352804803
 -0.08079682345032803 0.0 -0.09224312851316682
 -0.12534004352804803 0.09224312851316682 0.0])
dAA = TransformUtils.so3([0.0 -0.04959807985120831 0.08679485115002983
 0.04959807985120831 0.0 -0.1439428974604814
 -0.08679485115002983 0.1439428974604814 0.0])
dAA = TransformUtils.Quaternion(0.9927060381966476,[0.05350930819004529,0.10465358424141706,0.026816095360118985])
dAA = TransformUtils.SO3([0.9966242071471448 -0.015108047976727126 -0.08069657126953055
 0.0033668547052413756 0.9896163164204538 -0.14369485225228734
 0.08202959232934968 0.1429380745663863 0.9863264433348299])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9686019644498054 -0.2104476995883931 0.1323706923829118
 0.17630277573655845 0.9568188401610234 0.23111693659379176
 -0.17529279999920927 -0.20052299830909032 0.9638791217873587]),[-0.832624329768781,0.7444386607100858,-0.06748847854794171])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9049409463701368 0.36102961461608185 -0.22525430285098808
 -0.33123818633510493 0.9299282283598727 0.15973338415277777
 0.26713881690265745 -0.06993645308157961 0.9611169257869807]),[-0.8065409871046617,-0.8295622364995157,0.8904773584228507])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7713018554810152 0.5259022785200023 -0.3584971982861418
 -0.5609451542231988 0.8278188642760717 0.007514113533012845
 0.30072243295945694 0.1953016164708966 0.933500560749055]),[-0.4201608641121991,-1.7036170742488015,0.5630376742108467])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
