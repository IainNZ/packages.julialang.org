>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.52734375 MB free)
Uptime: 45172.0 sec
Load Avg:  1.3876953125  1.11962890625  1.01416015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2240081 s       5460 s     157662 s    1654929 s        116 s
#2  3500 MHz    1471531 s       2110 s     132958 s    2766381 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.16345089332542542 0.03432947013577594
 -0.16345089332542542 0.0 -0.016689028945857977
 -0.03432947013577594 0.016689028945857977 0.0])
dAA = TransformUtils.so3([0.0 0.049849316901273866 0.045259083187449776
 -0.049849316901273866 0.0 0.006137819414001633
 -0.045259083187449776 -0.006137819414001633 0.0])
dAA = TransformUtils.so3([0.0 0.005784570903517218 0.08300280068933205
 -0.005784570903517218 0.0 -0.010732670343734005
 -0.08300280068933205 0.010732670343734005 0.0])
dAA = TransformUtils.Quaternion(0.9984605085273526,[-0.027836561368886854,0.012149237667687622,-0.04641265761137579])
dAA = TransformUtils.SO3([0.9826730401275632 0.18506945156202692 0.010148610987868423
 -0.18487789808003413 0.9748176613278055 0.12470240560990248
 0.013185560585770516 -0.12441794589977243 0.9921422860306481])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9962656472018178 -0.038751401348364196 -0.07715626415969853
 0.05739013621559335 0.9648533047057688 0.25644584742887255
 0.06450684049539879 -0.2599161966709557 0.9634741502694332]),[-0.24488080115713856,-1.1833152104383824,-1.1142043768983967])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9076350992110653 0.23102499569364024 0.3504653735319271
 -0.2723396616052015 0.9594396069764666 0.07284743840113825
 -0.31942078109741706 -0.16156451321251467 0.9337383320146598]),[-0.35432625144305874,-2.2436585133299762,1.3795542627986974])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8680112338850003 0.27480262030602004 0.4135698462441199
 -0.21491731994911328 0.9587591669184105 -0.18598764861088435
 -0.447623774430414 0.07255604539155042 0.891273570146568]),[-0.009025498145674327,-1.6670028363932072,2.1391957515569886])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
