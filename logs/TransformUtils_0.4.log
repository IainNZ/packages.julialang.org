>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (513.84375 MB free)
Uptime: 46381.0 sec
Load Avg:  0.92626953125  0.99169921875  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2247278 s       2820 s     164917 s    1740251 s         37 s
#2  3500 MHz    1550240 s       3636 s     134684 s    2800335 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.03992762264828535 0.0940985462894033
 -0.03992762264828535 0.0 0.12264397758738249
 -0.0940985462894033 -0.12264397758738249 0.0])
dAA = TransformUtils.so3([0.0 0.08134426558682845 -0.12342843978424221
 -0.08134426558682845 0.0 -0.012325396306630581
 0.12342843978424221 0.012325396306630581 0.0])
dAA = TransformUtils.so3([0.0 -0.007127009380580258 -0.04292064638300466
 0.007127009380580258 0.0 -0.005155687135471809
 0.04292064638300466 0.005155687135471809 0.0])
dAA = TransformUtils.Quaternion(0.9976669291770476,[-0.028060699345980634,0.05300668311032218,0.03261268348812051])
dAA = TransformUtils.SO3([0.9940656904399513 0.054401216593167656 -0.09420143694937053
 -0.05498053268335068 0.9984810680663564 -0.003563388685424095
 0.09386449869891161 0.008721487616895477 0.9955467801855172])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9958371299925952 -0.0653904322505261 -0.06350198341942055
 0.08707363352208505 0.8884732588563018 0.4505923330933678
 0.026955386722743058 -0.454245924216555 0.8904684427082608]),[-1.010883816343208,-0.15062361988729187,0.6266117346964183])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9692036934495326 0.21936987152135848 -0.11189754274552727
 -0.22341783435337578 0.9744056036930079 -0.02486344273249906
 0.10357930245291265 0.04909764719787906 0.993408651634865]),[0.9354547158902449,0.9730871645131641,1.239052914688286])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.948507241986312 0.3046251457679006 -0.08681896374298007
 -0.308927895800462 0.829086225311186 -0.46602530638962975
 -0.0699826199553755 0.46884917784414915 0.8805014942287415]),[2.0525903478106757,0.5929161548659609,0.9280986506604798])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
