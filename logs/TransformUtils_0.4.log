>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.88671875 MB free)
Uptime: 42804.0 sec
Load Avg:  0.99169921875  0.94873046875  0.95556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2057396 s       6458 s     157830 s    1630514 s        106 s
#2  3500 MHz    1478532 s         79 s     134855 s    2507256 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.13980166385014245 0.11461879500029987
 -0.13980166385014245 0.0 -0.05731066396034972
 -0.11461879500029987 0.05731066396034972 0.0])
dAA = TransformUtils.so3([0.0 0.019453496728865028 -0.07242884087310021
 -0.019453496728865028 0.0 0.0393105907493742
 0.07242884087310021 -0.0393105907493742 0.0])
dAA = TransformUtils.so3([0.0 0.01249509144306036 -0.09180089934137294
 -0.01249509144306036 0.0 0.10598843956969717
 0.09180089934137294 -0.10598843956969717 0.0])
dAA = TransformUtils.Quaternion(0.9933191910722649,[0.027937071565101675,0.023702467277930066,0.10942896200205088])
dAA = TransformUtils.SO3([0.9920225524432708 0.034484490820835816 -0.12125211477234586
 -0.0015462350097348657 0.9651126019298407 0.2618306222608575
 0.12605103966740264 -0.25955439793816026 0.9574667878886068])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9217925612731038 -0.3654105805445374 -0.12951286271129692
 0.37800101790417073 0.9213304028812767 0.09091490081408735
 0.08610287129348199 -0.13276067321586113 0.9874010832495017]),[0.09386916388837008,-0.8323737040863469,0.7245973919242399])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9475208055923032 -0.2662745688499125 -0.17692421245693266
 0.23787458580834092 0.9569544575861824 -0.16629446031797246
 0.2135883994888835 0.11548168724836282 0.9700742113436727]),[-0.16635252916570437,-0.42362485866790023,0.46932271454467855])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.981725040286542 0.1262231470873581 -0.14242072325947078
 -0.1554291793787382 0.9636393541914076 -0.21734986830274067
 0.10980762938903485 0.23551414435852863 0.9656476439856468]),[-0.1073428239947089,0.5055709363796782,-0.1811950758246415])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
