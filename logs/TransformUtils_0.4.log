>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (444.4765625 MB free)
Uptime: 44333.0 sec
Load Avg:  1.064453125  1.03759765625  0.98046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2147524 s       6691 s     159671 s    1658998 s        118 s
#2  3499 MHz    1462673 s       1130 s     135599 s    2689902 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.1
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.06311006472691864 -0.010565938066525095
 0.06311006472691864 0.0 0.04763577179122808
 0.010565938066525095 -0.04763577179122808 0.0])
dAA = TransformUtils.so3([0.0 0.03004524903746333 -0.0953889005628529
 -0.03004524903746333 0.0 -0.07063947966093284
 0.0953889005628529 0.07063947966093284 0.0])
dAA = TransformUtils.so3([0.0 0.09051246159661014 0.11249726283746515
 -0.09051246159661014 0.0 0.11342524628006201
 -0.11249726283746515 -0.11342524628006201 0.0])
dAA = TransformUtils.Quaternion(0.9981368112347975,[-0.058387098738638676,0.011007283578285993,-0.013881371227000939])
dAA = TransformUtils.SO3([0.9866480036126585 0.09029798921976463 0.13554331451614546
 -0.08161388682325409 0.9943193676509535 -0.06832399718846163
 -0.14094286234058298 0.056349518694263134 0.9884127889187636])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9483540818722545 0.3035265757214425 -0.0921745801566169
 -0.3094221692684863 0.9491525826913914 -0.05802840628042082
 0.06987457736127882 0.08355233450405106 0.9940505776053379]),[-1.2299430107313678,0.05777448383014521,0.9691307332130428])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9100975358462183 0.22751249458707035 0.3463532013038274
 -0.17473220666793624 0.9685594659262112 -0.1770909848571801
 -0.3757540834104068 0.10065100978877786 0.9212373434836998]),[-1.1070891394717517,-0.4198874828422445,-1.2141442589238693])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8909050736798272 -0.07689842132385069 0.44763241894375955
 0.07899613252131837 0.9967764338279571 0.014012566213729039
 -0.44726699044107443 0.0228773635526337 0.8941078601033906]),[0.11175275484867142,-0.5985023969203465,-2.1538918083421867])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
