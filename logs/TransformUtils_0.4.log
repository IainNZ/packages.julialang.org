>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.6484375 MB free)
Uptime: 42371.0 sec
Load Avg:  1.01611328125  1.005859375  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2054358 s       3524 s     156753 s    1557989 s         38 s
#2  3500 MHz    1380202 s       3112 s     127952 s    2578831 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.060342540447656245 -0.05239452987317446
 0.060342540447656245 0.0 -0.1183187299229695
 0.05239452987317446 0.1183187299229695 0.0])
dAA = TransformUtils.so3([0.0 -0.0659647983439544 -0.004203371370807128
 0.0659647983439544 0.0 -0.10360437363521145
 0.004203371370807128 0.10360437363521145 0.0])
dAA = TransformUtils.so3([0.0 0.17159032969247792 0.014023639770135885
 -0.17159032969247792 0.0 -0.08519581642953176
 -0.014023639770135885 0.08519581642953176 0.0])
dAA = TransformUtils.Quaternion(0.9997559775362223,[0.0121770108207227,-0.013274560202986632,0.012786392747053512])
dAA = TransformUtils.SO3([0.9967995929026927 0.03855560321308729 -0.07002883013375054
 -0.04273105254259858 0.9973347510540838 -0.05913925505526073
 0.06756203621582459 0.061942390983594386 0.9957903953451288])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9370040653859688 -0.34873204993146906 -0.02023212299197603
 0.3414880617400991 0.926656925781902 -0.1571395735943849
 0.0735478425187126 0.1403313908255391 0.9873691384734549]),[0.700794575018385,1.039596485857381,-0.4637428934289366])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9242075876977432 -0.20511499851314585 0.32213067569989434
 0.2760336676859747 0.9417094165833522 -0.1923246968594298
 -0.26390481076658534 0.26666685602675644 0.9269536335497359]),[-1.2214838086523885,-0.4702420193096966,-0.009190601559438743])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9408388396242473 0.14900170784500988 0.30433660462351575
 -0.10354642585028914 0.9815934576474854 -0.1604756105995072
 -0.3226459600678899 0.11946871960025537 0.9389498439687529]),[-2.28334314459422,-0.6649542710278231,0.7249580563959024])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
