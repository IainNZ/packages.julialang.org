>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.94140625 MB free)
Uptime: 44442.0 sec
Load Avg:  1.0927734375  1.01318359375  0.994140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2234787 s       1569 s     158821 s    1578037 s        109 s
#2  3499 MHz    1414756 s       5009 s     132063 s    2708642 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1420379583780888 0.07469573370976805
 0.1420379583780888 0.0 -0.06219774165556914
 -0.07469573370976805 0.06219774165556914 0.0])
dAA = TransformUtils.so3([0.0 -0.05144250683611715 0.026582262010281493
 0.05144250683611715 0.0 -0.06497023849388298
 -0.026582262010281493 0.06497023849388298 0.0])
dAA = TransformUtils.so3([0.0 0.05601429475982226 -0.018845892033528766
 -0.05601429475982226 0.0 -0.01469040015545686
 0.018845892033528766 0.01469040015545686 0.0])
dAA = TransformUtils.Quaternion(0.9979271101144757,[-0.055500425205116236,0.008580232078518648,0.03142555199357739])
dAA = TransformUtils.SO3([0.9754951992349813 -0.21823380760982541 -0.02798430784604553
 0.2200172137027115 0.9682750823264462 0.11847274209796065
 0.001241750377463536 -0.12172662059645052 0.9925628886343517])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9305770436216902 0.018764454507194977 -0.3656149082454957
 0.04079727870979898 0.9871497490163504 0.15450228175283118
 0.3638158159483859 -0.1586923698985041 0.9178533563711615]),[0.7436623744357013,0.5466583305803641,-0.2436828930964799])
xj = TransformUtils.SE3(TransformUtils.SO3([0.7233657548861481 0.6536241015153866 -0.22252532120232185
 -0.6830531283239913 0.7245139699585093 -0.09229263904434348
 0.10089801060874373 0.21875795129129327 0.97054858209264]),[-0.09074549895933463,-0.036769094399209,-0.97339547665149])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.6819891488464789 0.7173933849338513 0.14225868025820415
 -0.6767139048117834 0.692753465596517 -0.24930087632899417
 -0.27739699329669026 0.07375206544339183 0.9579204251673462]),[-1.0657640422563168,-0.475787625489503,-0.45483805432811514])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
