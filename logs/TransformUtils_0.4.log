>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.58203125 MB free)
Uptime: 42145.0 sec
Load Avg:  1.0078125  0.9423828125  0.953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2008231 s       6295 s     169035 s    1585325 s         34 s
#2  3500 MHz    1393662 s        448 s     142251 s    2547209 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.010214768758428375 -0.04323122549065368
 -0.010214768758428375 0.0 0.05750336805360654
 0.04323122549065368 -0.05750336805360654 0.0])
dAA = TransformUtils.so3([0.0 0.1733926877128098 -0.03998412704780652
 -0.1733926877128098 0.0 0.17121779404722434
 0.03998412704780652 -0.17121779404722434 0.0])
dAA = TransformUtils.so3([0.0 0.08796486573295519 0.0033343450209045544
 -0.08796486573295519 0.0 0.016775322695597405
 -0.0033343450209045544 -0.016775322695597405 0.0])
dAA = TransformUtils.Quaternion(0.9988055975057071,[0.037669674324480706,0.011048692805449005,-0.029091242923699755])
dAA = TransformUtils.SO3([0.9991966227779145 -0.02117713474690617 0.03402407960726146
 0.01930670412873093 0.9983329897812334 0.05439202781795604
 -0.035119228421130355 -0.05369143766351427 0.9979398124720396])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992676596806204 0.07231316531070602 -0.0967676613130619
 -0.055770039637385305 0.9849002269741307 0.1638940071666756
 0.10715818602466835 -0.1572970089641006 0.9817203136020208]),[-0.8662218849933226,2.3176173676477503,1.2648386901793858])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9579894922936809 -0.09230981271232011 -0.27154195096137884
 0.16852194551609112 0.9472782532010506 0.2725147058267458
 0.2320700035212804 -0.3068270025427726 0.9230388420734257]),[-0.0767933486752462,-0.21146671512602186,0.11874364008431802])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9664434740130715 -0.17734256147960958 -0.18584032776928816
 0.19874863748688676 0.974562321608305 0.1035724886180519
 0.16274517084894274 -0.13703246764647203 0.9771059881998817]),[0.8018808858164659,-2.2535320875442766,-1.6160376700175973])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
