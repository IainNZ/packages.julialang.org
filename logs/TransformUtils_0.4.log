>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (634.16015625 MB free)
Uptime: 48550.0 sec
Load Avg:  1.00390625  0.9853515625  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2373108 s       8605 s     167894 s    1795126 s        128 s
#2  3500 MHz    1614414 s        106 s     142524 s    2917081 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.018325486029600897 -0.10290166759716082
 0.018325486029600897 0.0 0.0029893276667073525
 0.10290166759716082 -0.0029893276667073525 0.0])
dAA = TransformUtils.so3([0.0 -0.042573378479532964 -0.1450215172064302
 0.042573378479532964 0.0 0.15219375139046185
 0.1450215172064302 -0.15219375139046185 0.0])
dAA = TransformUtils.so3([0.0 -0.02744257210043905 0.02921784011293792
 0.02744257210043905 0.0 -0.10054076840109434
 -0.02921784011293792 0.10054076840109434 0.0])
dAA = TransformUtils.Quaternion(0.9888006773293084,[0.11292738598346576,-0.03589893839989454,0.09072977587210668])
dAA = TransformUtils.SO3([0.9842804234186717 -0.05117716878537151 -0.169035337932263
 0.04146099607058594 0.997305524827544 -0.06052004587979101
 0.17167712101382526 0.052560322902078405 0.9837501606489496])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8745645743957594 -0.3055081487904355 0.3765655005900108
 0.3077435021774646 0.9498276361250614 0.05586947754030717
 -0.3747408999288884 0.0670241201040278 0.9247037499895671]),[-1.3282222070413086,-0.5007767206445799,-0.24710044240899462])
xj = TransformUtils.SE3(TransformUtils.SO3([0.914399205911971 -0.36130861709397516 0.1825655373864302
 0.39908244832988027 0.8801939899942005 -0.25688857392480063
 -0.06787703339558424 0.3077574096455332 0.9490406130117331]),[0.523772595698299,0.0990890523453809,-1.1187855834765756])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9479524832319819 -0.1604430245082921 -0.275034771294377
 0.09515373142395084 0.9670424731850767 -0.2361665142482922
 0.3038615752779828 0.19770404887791698 0.9319770663094994]),[2.1309499144757504,-0.05445434419090818,-0.0751389814403769])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
