>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.01953125 MB free)
Uptime: 51100.0 sec
Load Avg:  0.9755859375  0.9951171875  1.02490234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2385954 s        111 s     194747 s    2026922 s        113 s
#2  3499 MHz    1692848 s       6376 s     169968 s    3057954 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.22804333021250578 -0.09917663828921476
 -0.22804333021250578 0.0 -0.030046814543771984
 0.09917663828921476 0.030046814543771984 0.0])
dAA = TransformUtils.so3([0.0 0.08737343123201297 -0.05701649099964681
 -0.08737343123201297 0.0 -0.0009239861848243137
 0.05701649099964681 0.0009239861848243137 0.0])
dAA = TransformUtils.so3([0.0 0.14196960742916356 0.07660424090534418
 -0.14196960742916356 0.0 -0.10145964159737358
 -0.07660424090534418 0.10145964159737358 0.0])
dAA = TransformUtils.Quaternion(0.9999634982433802,[-0.002135163129093298,0.003021328302961136,-0.007701612464902845])
dAA = TransformUtils.SO3([0.9953262164233645 -0.07922645615429386 0.05521676869920964
 0.07454380982507902 0.9938201864727303 0.08224753720367904
 -0.061391720265136056 -0.07774706171000849 0.9950811278877456])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.7724923433276892 0.6013060298932258 -0.20417305873729413
 -0.5116609836808915 0.7798037847367827 0.36070638348786116
 0.37610984735685665 -0.1741755313591336 0.9100572877555376]),[-0.6486921305131789,-1.772689590584669,-2.4115851083262623])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9607997912440993 -0.16973872024639772 -0.21920886842098858
 0.1928119501268983 0.977245971052177 0.08839606298105188
 0.19921674887809412 -0.12719700826435634 0.9716653786438207]),[-1.4751480229491694,-0.9529622639876634,-0.1626658178116651])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7184835111510185 -0.6789805439658835 0.15088692826052608
 0.6933915133551835 0.6821497973564781 -0.23212036354771712
 0.05467772317052841 0.271398369343496 0.9609127284548679]),[-0.21201264820825083,-0.2494331522392248,2.5110662967999176])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
