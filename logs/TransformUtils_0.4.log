>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (452.18359375 MB free)
Uptime: 45873.0 sec
Load Avg:  0.9658203125  0.978515625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2145136 s       3555 s     163012 s    1823038 s         82 s
#2  3500 MHz    1472225 s       3600 s     135578 s    2836478 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.09854523701662454 0.025542773081626603
 0.09854523701662454 0.0 0.07085426162661089
 -0.025542773081626603 -0.07085426162661089 0.0])
dAA = TransformUtils.so3([0.0 0.016138873331643013 -0.026243436705796038
 -0.016138873331643013 0.0 -0.01696322111987122
 0.026243436705796038 0.01696322111987122 0.0])
dAA = TransformUtils.so3([0.0 -0.0309836951641939 0.06239590330528814
 0.0309836951641939 0.0 0.17394564611411384
 -0.06239590330528814 -0.17394564611411384 0.0])
dAA = TransformUtils.Quaternion(0.9874011777418817,[-0.09631940652286174,-0.07257082751604835,0.1024449174662404])
dAA = TransformUtils.SO3([0.9820540561066992 -0.17804448928501004 -0.06220924946999559
 0.1721225657086956 0.9809307299596127 -0.0902702907647755
 0.07709509230966624 0.07794268956189093 0.9939724764225731])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9895177304010654 -0.1044146995785462 0.09976087276004789
 0.14206663356350047 0.8278214455641442 -0.542705008169286
 -0.025917809511195045 0.5511889193153402 0.8339778428556294]),[-1.493011156549819,0.8981359983707313,1.7377168734149568])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9924940293088986 -0.10059129590634872 0.06954849368655211
 0.0995056928400966 0.9948572864903443 0.018910224998166594
 -0.07109302974694028 -0.011847814353302769 0.9973993234489636]),[-0.8546120990305537,0.36178670926802114,1.1919459574661677])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9980694537231007 0.04210622413998295 0.045655573959202694
 -0.06044370965210799 0.8275370229850911 0.5581478599371895
 -0.014280178863106986 -0.5598299219206189 0.8284844808528349]),[0.5696550352059548,-0.811482570989964,-0.10039415870492119])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
