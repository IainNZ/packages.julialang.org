>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (438.75390625 MB free)
Uptime: 47168.0 sec
Load Avg:  1.05908203125  1.0126953125  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2312737 s        634 s     190494 s    1722444 s        144 s
#2  3500 MHz    1504114 s       5901 s     167118 s    2839847 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.10590301482317582 -0.22196768045064555
 -0.10590301482317582 0.0 0.04020119507974679
 0.22196768045064555 -0.04020119507974679 0.0])
dAA = TransformUtils.so3([0.0 0.14698791410845133 0.15068232207672566
 -0.14698791410845133 0.0 0.018731130613553124
 -0.15068232207672566 -0.018731130613553124 0.0])
dAA = TransformUtils.so3([0.0 0.1261503730806757 0.1075903916555055
 -0.1261503730806757 0.0 -0.025688774933115072
 -0.1075903916555055 0.025688774933115072 0.0])
dAA = TransformUtils.Quaternion(0.9906803983250639,[0.09664957428500426,0.05985026138449317,-0.07502769073633941])
dAA = TransformUtils.SO3([0.9996534137563572 0.0003035758225804103 0.02632413734544018
 -0.0015022358221416184 0.9989619868953964 0.045526827536486
 -0.02628299170178936 -0.045550593626452446 0.9986162164552915])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9961742772882255 -0.05136548171792775 -0.07069933915650736
 0.054751055557836235 0.9974021211412124 0.04681165088215807
 0.06811116784040894 -0.050503425932262765 0.9963986515368837]),[0.5183103598009523,-1.045173258803534,-0.37016374590903295])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9651260856190529 0.14793594043236505 0.21597823127814594
 -0.08995046043680627 0.9621885339077471 -0.25710336420137875
 -0.24584660568096342 0.22870982214337013 0.9419401593149624]),[-0.4653735965780575,0.8788935387288165,0.5087176410377074])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9397639987542145 0.21562850950501844 0.26523192216272284
 -0.1268748505029531 0.9405394542510382 -0.3151004717657718
 -0.3174057323920628 0.2624688188829348 0.9112429534206863]),[-0.8147143285390598,1.9252091843248418,1.035330777669489])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
