>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.04296875 MB free)
Uptime: 47333.0 sec
Load Avg:  0.9970703125  1.01123046875  1.0009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2355748 s        254 s     171538 s    1722200 s        128 s
#2  3500 MHz    1511868 s       6932 s     140743 s    2883266 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0492396673765222 -0.002646600872247527
 0.0492396673765222 0.0 -0.0572338869890136
 0.002646600872247527 0.0572338869890136 0.0])
dAA = TransformUtils.so3([0.0 0.05705008040695974 0.18719621206599701
 -0.05705008040695974 0.0 0.057904447861925605
 -0.18719621206599701 -0.057904447861925605 0.0])
dAA = TransformUtils.so3([0.0 0.03711928598823536 -0.21116016539639548
 -0.03711928598823536 0.0 -0.028282673509337122
 0.21116016539639548 0.028282673509337122 0.0])
dAA = TransformUtils.Quaternion(0.9977483680708695,[0.04771975080111922,-0.029748161445046908,-0.03655224050636532])
dAA = TransformUtils.SO3([0.9987440603303482 -0.008927152596524775 -0.049301195739742246
 0.00012855258764358102 0.9844519238419905 -0.17565418616712825
 0.050102748717832116 0.17542723731029425 0.9832166592265389])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8728574587407567 0.403437544897562 0.27451412365788375
 -0.40026370639539405 0.9137123320734557 -0.07013372626282365
 -0.2791215184525372 -0.04866129451539996 0.9590220312134834]),[0.7826460252114738,-0.8438190875478607,-0.01753251883330957])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9921263198668256 -0.007606004948715441 -0.1250100560604193
 0.012501579273146407 0.9991833303186651 0.03842372872299845
 0.12461571306695753 -0.03968401569928952 0.9914111674551545]),[0.764528366266279,0.48413960121175914,1.440583914271057])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8261980027988162 -0.39549911859226755 -0.4012197743930209
 0.4056198919527954 0.911828658526898 -0.06356886613146517
 0.39098511918415724 -0.11022225130062027 0.9137733263204684]),[-0.9543394733368157,1.1351090533705839,1.300257538987631])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
