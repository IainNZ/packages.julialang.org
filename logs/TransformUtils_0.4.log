>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (461.06640625 MB free)
Uptime: 49957.0 sec
Load Avg:  0.9541015625  0.96435546875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2415348 s       2137 s     186882 s    1884155 s        123 s
#2  3500 MHz    1629680 s       4643 s     159437 s    2988472 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.19907297634586596 -0.09732286204895903
 0.19907297634586596 0.0 -0.2909601234983189
 0.09732286204895903 0.2909601234983189 0.0])
dAA = TransformUtils.so3([0.0 -0.12673076600757627 0.1340877329908232
 0.12673076600757627 0.0 0.08395488323810263
 -0.1340877329908232 -0.08395488323810263 0.0])
dAA = TransformUtils.so3([0.0 -0.20270962480610014 0.10516549486067278
 0.20270962480610014 0.0 0.07138446979164102
 -0.10516549486067278 -0.07138446979164102 0.0])
dAA = TransformUtils.Quaternion(0.9900931523120582,[-0.050584904754672894,-0.047321550097377194,0.12213675962671375])
dAA = TransformUtils.SO3([0.9925109674890829 0.06360517746940778 0.10428979246776604
 -0.07680303091008045 0.9888144408324848 0.12785654478424432
 -0.09499091460192283 -0.13490879511812928 0.9862942477490502])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9584592489791105 0.25705373697800704 0.12360924056089462
 -0.22106999038531683 0.943320993996086 -0.2475349705340077
 -0.18023298088151196 0.20992588833175796 0.9609615986139545]),[-0.12553332478835397,-0.9065444036027274,-0.8301627772884644])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9868671244894144 -0.16126355940530473 -0.009345748227207313
 0.15504682618028975 0.9618787858894084 -0.2252769028270244
 0.0453184321597032 0.22086934070587824 0.9742499546023787]),[-0.3232302635618185,2.002073104748803,-1.2036842912652324])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9034278464903279 -0.40701502364447295 -0.13474752952665714
 0.4094503205680015 0.912273244378368 -0.010390504228728392
 0.12715565725758732 -0.04578534830112732 0.9908254844867159]),[-0.7651716081807127,2.6145293865991572,-1.103361548875316])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
