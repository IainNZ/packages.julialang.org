>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.2109375 MB free)
Uptime: 44663.0 sec
Load Avg:  1.2783203125  1.064453125  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2161650 s        112 s     161334 s    1683761 s        104 s
#2  3499 MHz    1431569 s       7129 s     137242 s    2723466 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.16307830353070116 0.15649975624138032
 -0.16307830353070116 0.0 -0.03413788239186629
 -0.15649975624138032 0.03413788239186629 0.0])
dAA = TransformUtils.so3([0.0 -0.049985701000091295 -0.0021120922764703534
 0.049985701000091295 0.0 0.0699675413996906
 0.0021120922764703534 -0.0699675413996906 0.0])
dAA = TransformUtils.so3([0.0 0.15537166137342343 0.16192409239882025
 -0.15537166137342343 0.0 0.054229307771011585
 -0.16192409239882025 -0.054229307771011585 0.0])
dAA = TransformUtils.Quaternion(0.9943244916397839,[-0.10387484863452671,0.02276969602727198,0.003219019923063321])
dAA = TransformUtils.SO3([0.9930275548587344 0.01070406227291895 0.11739547837178844
 -0.01944740627845669 0.9970991573297987 0.07358715133259408
 -0.11626725110848805 -0.07535710651997549 0.9903551044027659])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9830625756939179 -0.14753152964303173 -0.10873095249848207
 0.1506346120156141 0.9883695070525369 0.02085500399497751
 0.10438958728218697 -0.03688041878710657 0.993852428068243]),[0.8417448323094396,1.17074904225955,0.5469194727052469])
xj = TransformUtils.SE3(TransformUtils.SO3([0.847997054040257 -0.3165490476764455 0.4250855169894414
 0.3223017665222773 0.9446994369472701 0.06053548651931577
 -0.4207404991626842 0.08567189881545903 0.9031266567418377]),[-0.4107884024550114,-0.6735694941514964,0.6216397251242756])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.838263042617206 -0.15993983482731508 0.5212814217076563
 0.2089640213942574 0.977253466512533 -0.03618977689870803
 -0.5036358894527718 0.13926561465289647 0.8526171353136567]),[-1.5013367387636158,-1.6408357728280005,0.17198676549960396])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
