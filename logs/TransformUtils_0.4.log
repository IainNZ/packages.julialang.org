>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (462.828125 MB free)
Uptime: 47238.0 sec
Load Avg:  1.01123046875  1.0126953125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2307837 s       1698 s     174637 s    1773939 s         99 s
#2  3500 MHz    1537802 s       4776 s     145838 s    2865540 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.027590046032221288 -0.1844458613044115
 0.027590046032221288 0.0 -0.08116188934613114
 0.1844458613044115 0.08116188934613114 0.0])
dAA = TransformUtils.so3([0.0 -0.01216131854956986 0.035034099243171385
 0.01216131854956986 0.0 -0.028293095971253436
 -0.035034099243171385 0.028293095971253436 0.0])
dAA = TransformUtils.so3([0.0 0.05533760725619389 0.0701348123298473
 -0.05533760725619389 0.0 0.11557183816076842
 -0.0701348123298473 -0.11557183816076842 0.0])
dAA = TransformUtils.Quaternion(0.9925151397448838,[0.06779070626511012,0.03244553061653516,0.09625697410724401])
dAA = TransformUtils.SO3([0.9900269254647551 0.13037862643246612 -0.05336759901277428
 -0.13578845982283028 0.9840437918258926 -0.114975257981286
 0.037525738283855664 0.1210753052381166 0.9919337626211484])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8679753431400239 -0.08022227523843883 0.4900848806651008
 0.04444971751365828 0.9954550278576976 0.08422297860908616
 -0.4946140175064935 -0.05131933425521778 0.8675962768578985]),[-1.2997602638667414,1.3862098655323516,0.4475569527384008])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8518233188912531 0.4317528627844422 -0.29662518246185593
 -0.416721250258691 0.9016435016512485 0.11568230423408996
 0.3173963342194174 0.02506913256404678 0.9479615528155992]),[0.17505249453138094,-1.1948355627949052,-0.5416805655818037])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.5638498196432722 0.4024290938005314 -0.7211963708665847
 -0.4994510370949615 0.8616228288671355 0.09030372262405681
 0.6577401024971923 0.30928453766374775 0.6868195049131214]),[1.6546651130633392,-2.6368604729263914,-0.3528586870189311])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
