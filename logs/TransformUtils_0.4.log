>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.01171875 MB free)
Uptime: 49173.0 sec
Load Avg:  0.98779296875  1.03857421875  1.01123046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2399354 s       3584 s     196282 s    1826212 s        122 s
#2  3500 MHz    1636291 s       2962 s     171356 s    2923831 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.04286550830527203 0.04272786636005947
 -0.04286550830527203 0.0 0.08514557800779066
 -0.04272786636005947 -0.08514557800779066 0.0])
dAA = TransformUtils.so3([0.0 -0.05772137733189232 0.012855914943736547
 0.05772137733189232 0.0 0.1805208416472764
 -0.012855914943736547 -0.1805208416472764 0.0])
dAA = TransformUtils.so3([0.0 0.15359441520168823 -0.14195044181278096
 -0.15359441520168823 0.0 0.0026693433660350857
 0.14195044181278096 -0.0026693433660350857 0.0])
dAA = TransformUtils.Quaternion(0.9955847760122047,[0.021929063144608824,0.0102503812088082,0.0906917837921477])
dAA = TransformUtils.SO3([0.9964974220572498 -0.04699313694122771 0.06917031815510298
 0.04026352755960265 0.9945994064904438 0.09566017435335453
 -0.07329212905702949 -0.09254007612532036 0.9930078540117433])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9466337601601233 -0.10950455192264431 -0.3031390394411893
 -0.02302540039176804 0.9151377515314615 -0.4024832004677213
 0.3214877214792266 0.38798408321754907 0.863778904643968]),[-0.3808329298855737,-0.08004155695755251,-0.6854748182129158])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9469329096992538 -0.12094103818620286 0.2978108960581332
 0.0375380156296936 0.9617842349113146 0.27122312375356583
 -0.3192318309803859 -0.24565087168276167 0.9152850306491469]),[1.8032219510580432,-1.07328501770454,-2.138909036908291])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7929052191226591 -0.21560607585187452 0.5699257263396729
 -0.19319787803389654 0.798100028149359 0.5707108944038061
 -0.5779064746230547 -0.5626280877486907 0.5911630413557705]),[1.623108657425615,-1.7120278813610608,-1.5177543091677588])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
