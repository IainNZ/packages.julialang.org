>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.20703125 MB free)
Uptime: 46054.0 sec
Load Avg:  0.99072265625  0.9853515625  0.9619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2244697 s        466 s     166279 s    1725982 s        128 s
#2  3500 MHz    1493912 s       5953 s     139324 s    2773472 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03657288665514213 -0.021408967202629636
 0.03657288665514213 0.0 -0.08880958084474375
 0.021408967202629636 0.08880958084474375 0.0])
dAA = TransformUtils.so3([0.0 0.02262688951017733 -0.012127412292584244
 -0.02262688951017733 0.0 -0.031883436303275954
 0.012127412292584244 0.031883436303275954 0.0])
dAA = TransformUtils.so3([0.0 0.025653074909259485 -0.08987159061109445
 -0.025653074909259485 0.0 -0.04465438603951024
 0.08987159061109445 0.04465438603951024 0.0])
dAA = TransformUtils.Quaternion(0.9971341911910275,[-0.04603128285337074,0.023833931641095932,-0.05510416916364675])
dAA = TransformUtils.SO3([0.9997995167756801 0.011827116894708209 0.016156904439767843
 -0.012226646771801315 0.9996162375871176 0.024857326101038864
 -0.015856713525648453 -0.02504988738766494 0.9995604372813238])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.6574334870884109 -0.735716210218387 -0.16279701495011173
 0.7282157067615328 0.5648447422868992 0.3881395387443127
 -0.19360551252630612 -0.3737272737341243 0.9071079485853297]),[0.3153477491208398,-1.0799792029688848,2.0135707005015417])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9476003357694849 -0.26368691712275216 -0.18034082562708428
 0.21036106181783434 0.9399025195184187 -0.26894511981778313
 0.2404201058988888 0.21691579827487725 0.9461214029596519]),[0.8662541742063032,-0.3168769854668084,-0.420806955853643])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7296257645936788 0.4690990738143864 -0.49758647749670026
 -0.6681951388127642 0.6438303858427783 -0.37282394066439706
 0.14546992853535107 0.6045068181683511 0.7832049582835235]),[1.3891962865941474,0.9355168128835747,-2.0017391007430474])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
