>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.49609375 MB free)
Uptime: 48504.0 sec
Load Avg:  1.0322265625  1.00732421875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    2269992 s       6483 s     165550 s    1941876 s        114 s
#2  3502 MHz    1474102 s        793 s     141638 s    3057904 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.04958158289941883 0.013627877798244536
 -0.04958158289941883 0.0 -0.107439531662975
 -0.013627877798244536 0.107439531662975 0.0])
dAA = TransformUtils.so3([0.0 0.0839017739578639 0.11332579244402573
 -0.0839017739578639 0.0 -0.05399072828890794
 -0.11332579244402573 0.05399072828890794 0.0])
dAA = TransformUtils.so3([0.0 0.06377087383265229 0.010304543431765279
 -0.06377087383265229 0.0 0.06516283445096813
 -0.010304543431765279 -0.06516283445096813 0.0])
dAA = TransformUtils.Quaternion(0.9991038681813427,[-0.018872255788957955,-0.03613824528262175,0.011372149067226188])
dAA = TransformUtils.SO3([0.9881764035984649 -0.10728701196557063 0.10953032655253056
 0.1012799298870707 0.9931055213542977 0.059023717755484276
 -0.11510765036814241 -0.047232621344877046 0.9922294635353345])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9820996475478825 -0.1577267495526404 -0.1029687076828868
 0.1493889202033518 0.9851828580138815 -0.08424777027362101
 0.11473113268333811 0.06735732143693716 0.9911103664285019]),[0.5456954502659583,-0.42565465737299446,-1.2150167387363524])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9648891028433244 0.02596005045895096 0.2613715650073153
 -0.035274017390129836 0.9988965743547331 0.03100608713688218
 -0.26027824133293453 -0.03913706072954168 0.9647401347337463]),[1.7178547047031136,0.4791345823700851,-0.938547870188048])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9124856830151206 0.1702291977363447 0.37201061615291153
 -0.20447182430078353 0.977365020026302 0.0543036895256256
 -0.35434608980421656 -0.12561702857107587 0.9266386624641968]),[1.3180622646297766,0.7251241823959897,0.07708896196913417])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
