>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.28125 MB free)
Uptime: 43613.0 sec
Load Avg:  0.921875  0.95947265625  0.95166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2141874 s        677 s     154704 s    1608170 s         95 s
#2  3500 MHz    1449424 s       6508 s     129882 s    2631574 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.022160304020923276 0.07402152052431442
 0.022160304020923276 0.0 0.041373055906230465
 -0.07402152052431442 -0.041373055906230465 0.0])
dAA = TransformUtils.so3([0.0 0.10187656519442752 0.06747163990837067
 -0.10187656519442752 0.0 -0.2864522748769478
 -0.06747163990837067 0.2864522748769478 0.0])
dAA = TransformUtils.so3([0.0 -0.09910021617614322 -0.052241439211944886
 0.09910021617614322 0.0 0.022468442802942065
 0.052241439211944886 -0.022468442802942065 0.0])
dAA = TransformUtils.Quaternion(0.9990180193037442,[-0.01619981221251291,0.0380333707048992,-0.01593819009571446])
dAA = TransformUtils.SO3([0.9864044838052136 0.06148822933004078 0.15239879258979414
 -0.051720037317259104 0.9963943710323365 -0.06725544673092829
 -0.15598471742088102 0.05845900297586096 0.9860280487400938])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9179624871602605 -0.06557861844740243 0.39120878948341475
 -0.02394505271882265 0.9752795760654797 0.21967335514311048
 -0.395943817500465 -0.21101941453825604 0.8936997818457215]),[-1.619495778708509,1.937130181595022,0.011442933908561874])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9581987557001547 0.27274703498025027 -0.08639559875455133
 -0.27883107697789977 0.9578996586358269 -0.06842130148360676
 0.06409660744547903 0.08965098379185919 0.9939086104965245]),[-1.6949391310129558,-0.6740159086256011,0.24352828719647568])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.860888482373471 0.19193783600545908 -0.47120153652788904
 -0.348301233722757 0.8974155011354497 -0.270798206990029
 0.37088714119514504 0.39724713394982547 0.839426853909703]),[-0.09862289730097817,-2.590624496473957,-0.3956986953341771])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
