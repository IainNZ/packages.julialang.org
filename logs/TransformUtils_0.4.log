>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.96484375 MB free)
Uptime: 44165.0 sec
Load Avg:  0.93603515625  0.986328125  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2174712 s       2556 s     157580 s    1644808 s         92 s
#2  3500 MHz    1506849 s       4760 s     130498 s    2637438 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.19310938440710954 -0.03769708138449615
 -0.19310938440710954 0.0 -0.07428620580617959
 0.03769708138449615 0.07428620580617959 0.0])
dAA = TransformUtils.so3([0.0 0.03236861047092755 -0.06501853821853107
 -0.03236861047092755 0.0 0.07102589280031743
 0.06501853821853107 -0.07102589280031743 0.0])
dAA = TransformUtils.so3([0.0 -0.049179191935257896 -0.10123336927866955
 0.049179191935257896 0.0 0.05345681736083531
 0.10123336927866955 -0.05345681736083531 0.0])
dAA = TransformUtils.Quaternion(0.9916178014548875,[0.06668842136170151,-0.09073263375551538,0.06335913087982532])
dAA = TransformUtils.SO3([0.9988870740900644 -0.033263931753051285 0.03343836210281176
 0.026074533204969927 0.9802183777144475 0.1961939109885928
 -0.03930307791933517 -0.19510367201871237 0.9799948087775168])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9130352963871674 0.22083631944600696 0.3429254548218001
 -0.2258091923531855 0.9738269716890495 -0.025908258523823325
 -0.33967154163986035 -0.05378056549048511 0.939005268662282]),[-0.1961018837555211,-1.6976273979063543,-0.4524244470165695])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9671787462982849 -0.23222277615354464 0.10313997743076327
 0.23435885580917615 0.9721091426257719 -0.008929811151442183
 -0.09818960949454596 0.03280849065299026 0.99462676594207]),[0.9227704690888457,1.6643553812426068,0.5272913863624041])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.863500165364765 -0.44268288222765373 -0.24165953363697512
 0.4470938621439838 0.8936184201570039 -0.03941062787214695
 0.23339782100139558 -0.07401341053294103 0.9695604530987653]),[-0.07037825325909752,3.468387489482308,1.2165450208265733])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
