>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.671875 MB free)
Uptime: 42695.0 sec
Load Avg:  1.017578125  0.99169921875  1.0068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2139128 s       1810 s     161701 s    1527203 s         96 s
#2  3503 MHz    1392648 s       4928 s     138716 s    2600925 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.02021034727447466 -0.03386941118138203
 0.02021034727447466 0.0 -0.01818379529215664
 0.03386941118138203 0.01818379529215664 0.0])
dAA = TransformUtils.so3([0.0 0.06866092149315199 0.07118656722454776
 -0.06866092149315199 0.0 -0.11083917054258158
 -0.07118656722454776 0.11083917054258158 0.0])
dAA = TransformUtils.so3([0.0 -0.09039766081014126 0.09316115469436914
 0.09039766081014126 0.0 0.03966708564200208
 -0.09316115469436914 -0.03966708564200208 0.0])
dAA = TransformUtils.Quaternion(0.9960070324574289,[0.07518841036359417,-0.005972064059041714,0.04776011613487277])
dAA = TransformUtils.SO3([0.9961866267555528 0.07890250241935748 -0.037237075413575536
 -0.0726984123140409 0.986645544807446 0.14575839515662697
 0.04824049668495061 -0.14249548773059795 0.9886191837386165])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8559136807930547 -0.5091623855366226 -0.09036280311024292
 0.43784299685215416 0.6205733011616195 0.6505246252009945
 -0.2751459269893148 -0.5963576469200554 0.7540903631668854]),[0.41556476785331,0.544371174022086,-0.6241299708944282])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9764181266978819 0.2152531222477179 0.01654494540360201
 -0.21385170771033563 0.9748648569843267 -0.062497661766673165
 -0.02958190266315419 0.057485684996678284 0.9979079652228908]),[1.7867312170433658,0.8945790780243745,-0.9951490569136869])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7502355002595602 0.5952588905860791 -0.28777343054652865
 -0.6122246490199298 0.4610942814311529 -0.6423184901308017
 -0.24965510866535706 0.6580721212828571 0.7103614642613785]),[1.429020591069375,-0.2595566360569225,-0.17586549570412593])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
