>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.83203125 MB free)
Uptime: 44303.0 sec
Load Avg:  0.93115234375  0.97216796875  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2149604 s       1589 s     165126 s    1662069 s        119 s
#2  3499 MHz    1411123 s       5756 s     138896 s    2700834 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.11955919605187003 0.09787601522870998
 -0.11955919605187003 0.0 -0.0005812680051022755
 -0.09787601522870998 0.0005812680051022755 0.0])
dAA = TransformUtils.so3([0.0 0.09058336980142877 -0.04213857829733522
 -0.09058336980142877 0.0 -0.07299269994644256
 0.04213857829733522 0.07299269994644256 0.0])
dAA = TransformUtils.so3([0.0 0.02923341293897526 0.11660145509205502
 -0.02923341293897526 0.0 0.059550019987266604
 -0.11660145509205502 -0.059550019987266604 0.0])
dAA = TransformUtils.Quaternion(0.9989538321629737,[-0.036425825796683395,0.026128372328884705,-0.009039279915028238])
dAA = TransformUtils.SO3([0.9579387946913858 0.2814910342796635 -0.0558217094451709
 -0.2739671785588068 0.9549521829681875 0.11405399298937627
 0.08541223974198683 -0.09396342833495985 0.9919050475916527])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.7272439426755195 -0.6237424505892816 0.2864639648797794
 0.6323543555933819 0.7711598945409157 0.07375897242859698
 -0.2669161231620236 0.12750596999561026 0.9552476175377953]),[-0.25250662157927767,0.4118481011792932,-0.8271488672156547])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8435160177992893 -0.36628852205944024 0.3928275019948832
 0.39929615664827983 0.9168185177395078 -0.0025268193136845163
 -0.3592259831943416 0.15898592433747888 0.91960870421099]),[0.38727892392723934,-0.5865032779677991,1.1696515479324519])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9618217850958456 0.27093716748045915 0.03862518598927886
 -0.2640190234367817 0.9557550263235378 -0.12971617062179072
 -0.07206114749661474 0.11456605489829465 0.9907985719037509]),[-0.6990099059750082,-0.9143459744425881,2.0170769714587165])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
