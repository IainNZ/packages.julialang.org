>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (455.765625 MB free)
Uptime: 46047.0 sec
Load Avg:  1.03564453125  1.001953125  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2233578 s         98 s     164698 s    1762534 s        104 s
#2  3500 MHz    1573535 s       7046 s     139364 s    2741682 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1436282042546167 -0.23802803258485825
 0.1436282042546167 0.0 -0.00990727584837221
 0.23802803258485825 0.00990727584837221 0.0])
dAA = TransformUtils.so3([0.0 -0.17963258788270908 -0.15632292639024256
 0.17963258788270908 0.0 -0.022953402534860706
 0.15632292639024256 0.022953402534860706 0.0])
dAA = TransformUtils.so3([0.0 -0.028746057008261362 0.0067873153205923525
 0.028746057008261362 0.0 -0.08636084604716494
 -0.0067873153205923525 0.08636084604716494 0.0])
dAA = TransformUtils.Quaternion(0.9997198899235175,[-0.015457811684668688,0.010916665045240189,0.014213520799630492])
dAA = TransformUtils.SO3([0.9765247694522229 -0.006435329696998222 -0.21530899000732534
 -0.01952186729629564 0.9927962146704873 -0.11821409743858088
 0.21451869695564862 0.11964222777783523 0.969364464991784])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8572090444043585 -0.5080136574251901 -0.08434914380625429
 0.49061730010529686 0.8554171411062773 -0.1660005407790961
 0.15648424530525634 0.10091401573143778 0.9825115991173842]),[-0.8752134401744228,0.7840157264889269,-1.7503715274394398])
xj = TransformUtils.SE3(TransformUtils.SO3([0.997062573009742 -0.05244052184016845 0.05582308816541622
 0.05027532077658131 0.9979535850296286 0.03950992593417177
 -0.05778077209595653 -0.03658734474709395 0.9976586332911436]),[0.9965872318789184,-0.7707036020393174,0.19125820224973195])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.870315217047775 0.43893546087248925 0.22335416755399834
 -0.46934592297381134 0.8766149280767349 0.10611631571479516
 -0.14921738358162323 -0.19718501226431118 0.9689438804055571]),[1.145586728934892,-2.0848962155265682,2.007873195842494])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
