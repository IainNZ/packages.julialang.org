>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.71875 MB free)
Uptime: 46822.0 sec
Load Avg:  0.935546875  0.95068359375  0.96484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2303086 s       6253 s     168056 s    1715601 s        125 s
#2  3500 MHz    1531320 s        620 s     136104 s    2859677 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11833888312667612 0.02394105324058181
 0.11833888312667612 0.0 0.08842629975806932
 -0.02394105324058181 -0.08842629975806932 0.0])
dAA = TransformUtils.so3([0.0 -0.1206967917087422 0.020423555747169066
 0.1206967917087422 0.0 0.10505222572538671
 -0.020423555747169066 -0.10505222572538671 0.0])
dAA = TransformUtils.so3([0.0 -0.0527199020745695 0.06630426319068194
 0.0527199020745695 0.0 0.09705627696954211
 -0.06630426319068194 -0.09705627696954211 0.0])
dAA = TransformUtils.Quaternion(0.9979700394864183,[0.004431846559852963,0.002052498341287546,-0.0634976084124872])
dAA = TransformUtils.SO3([0.9890971119017331 0.11293894772652427 -0.09450765743618648
 -0.11136514805413397 0.9935408267243886 0.021781401027007125
 0.09635718461293365 -0.011019061586355912 0.9952858249041956])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9456679629335885 0.31284489803786397 0.08854475508304083
 -0.31650899886271355 0.8234757061066101 0.47086071729455475
 0.07439191837800663 -0.47330310713526735 0.8777528189964083]),[-0.3114719629815141,2.3109480173959436,-1.4306308804535934])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9416997200498302 -0.16619332423865893 0.29254301604477845
 0.1594015265504065 0.9860905181896709 0.04708124116701378
 -0.2962984822631928 0.0022954117126223273 0.9550926345091338]),[1.13358818628288,-0.044906278162185606,-1.8410571866892098])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8180410258609452 -0.4690994650053918 0.33279809485636697
 0.5661082298264749 0.7589424266795166 -0.32175746317458115
 -0.10163833986792303 0.451610545622511 0.8864071090370559]),[2.0816637719512268,-1.2936530384724536,-1.3415795937396766])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
