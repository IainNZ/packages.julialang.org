>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.45703125 MB free)
Uptime: 46348.0 sec
Load Avg:  0.86328125  0.96728515625  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2222134 s       3080 s     173826 s    1780482 s        123 s
#2  3500 MHz    1618014 s       3496 s     147107 s    2706145 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.12288891317263712 0.19591339407156205
 -0.12288891317263712 0.0 0.09028301480337458
 -0.19591339407156205 -0.09028301480337458 0.0])
dAA = TransformUtils.so3([0.0 0.29987056627588915 -0.16182066027463526
 -0.29987056627588915 0.0 -0.05178837554395971
 0.16182066027463526 0.05178837554395971 0.0])
dAA = TransformUtils.so3([0.0 0.065823826490797 0.027492838342581063
 -0.065823826490797 0.0 0.20743421611806545
 -0.027492838342581063 -0.20743421611806545 0.0])
dAA = TransformUtils.Quaternion(0.9946446983789379,[-0.012998359880539267,-0.08762325572781565,-0.053245954613898513])
dAA = TransformUtils.SO3([0.9647007516236201 0.2022019467942347 0.16872116799454623
 -0.21582874965760757 0.9741586708793735 0.06657953718498358
 -0.15089867672731977 -0.1006442082941405 0.983412595352932])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8573615946104891 -0.4253323951555302 -0.28986798670812064
 0.4576928380403203 0.8876290608861126 0.05130220538178717
 0.23547475893088085 -0.1766550421066375 0.95569065811315]),[1.4974613876410994,0.23086006978784507,0.7454211626554406])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9866293490904737 -0.118860167588115 0.11151138091797357
 0.11320894026772282 0.9920068521387636 0.05573276552621773
 -0.1172444598126809 -0.04236349691263006 0.9921991084316526]),[1.2169062728290123,0.08844711968863404,1.2512961226911707])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8701049222780164 0.3421527544688482 0.35475190885596003
 -0.2984460538606629 0.9385729156562451 -0.17323635568648152
 -0.39223382970183174 0.044859498502713945 0.9187710532181123]),[-0.1865977836524395,-0.09644605656422911,0.5574778213557398])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
