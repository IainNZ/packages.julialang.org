>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.61328125 MB free)
Uptime: 43839.0 sec
Load Avg:  1.0205078125  1.001953125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2113526 s       2474 s     152108 s    1675155 s         79 s
#2  3496 MHz    1391476 s       4369 s     124852 s    2723900 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.05120133300177948 0.012130160811754399
 -0.05120133300177948 0.0 -0.08232287889428033
 -0.012130160811754399 0.08232287889428033 0.0])
dAA = TransformUtils.so3([0.0 0.042186215772025165 -0.23035047232716319
 -0.042186215772025165 0.0 -0.010537584057821632
 0.23035047232716319 0.010537584057821632 0.0])
dAA = TransformUtils.so3([0.0 -0.11045822153455867 0.08740689215935117
 0.11045822153455867 0.0 -0.0035620397273480064
 -0.08740689215935117 0.0035620397273480064 0.0])
dAA = TransformUtils.Quaternion(0.9971427108029461,[-0.031319126909467934,0.061068749521664384,-0.03156159714021501])
dAA = TransformUtils.SO3([0.9873109462945553 0.03756424655050389 -0.15429200467957885
 -0.029559157926787028 0.9981112266370722 0.05385383406684254
 0.1560235607516041 -0.04860973814096003 0.986556507174454])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9730950555646123 -0.10223450595150646 0.20648031051060417
 0.12849112715365174 0.9846638247578364 -0.1180134842128341
 -0.19124864203044217 0.14136922581000483 0.9713077261688963]),[0.8253036123378988,-0.3133934398195194,0.822151035285823])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9944125135370891 -0.10492829918680423 0.011567408984427255
 0.1040514496699104 0.9927450441598145 0.06025423734243224
 -0.017805862586199313 -0.058713961933193975 0.9981160363062347]),[-0.8262630707756253,-0.8740259048816406,-0.07261838222602296])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.984432935204369 0.03668268606076326 -0.17189001317202235
 -0.0017247746385789008 0.9799470776767512 0.19925047077796693
 0.17575215855674903 -0.19585225425346225 0.9647554473888608]),[-1.5080442345982692,-0.5096802632695216,-1.1439502593623374])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
