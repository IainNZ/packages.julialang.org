>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.63671875 MB free)
Uptime: 47314.0 sec
Load Avg:  1.0361328125  0.96875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2375828 s       6779 s     171203 s    1667668 s        138 s
#2  3500 MHz    1491632 s         43 s     146237 s    2907237 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.19171608584095623 0.03889880737280683
 -0.19171608584095623 0.0 0.12907455016887137
 -0.03889880737280683 -0.12907455016887137 0.0])
dAA = TransformUtils.so3([0.0 -0.1638313741161197 0.0502906364707498
 0.1638313741161197 0.0 0.0066393211848015075
 -0.0502906364707498 -0.0066393211848015075 0.0])
dAA = TransformUtils.so3([0.0 -0.09811639496703761 -0.1265347053925617
 0.09811639496703761 0.0 -0.08359802754335176
 0.1265347053925617 0.08359802754335176 0.0])
dAA = TransformUtils.Quaternion(0.9976385723709749,[-0.053389217146061596,0.03566259316455944,0.02439364382196853])
dAA = TransformUtils.SO3([0.9854331634389258 0.03955194803107367 -0.16539989057341864
 -0.04103167947548559 0.999142499573559 -0.005537763566795004
 0.16503903075991638 0.012243731165292534 0.9862110369352898])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9777279615754454 0.06548078331838099 -0.19939984997370377
 -0.050456480288269205 0.9955551811186272 0.07952373824699699
 0.203720830428417 -0.06769156789341363 0.9766860677237531]),[0.8863862511989055,-0.3280890615769311,-0.9951311840895283])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9568691586466569 -0.11357384403216046 0.267399317842431
 0.16535643561966135 0.9696960458909786 -0.17985223874770648
 -0.23886955107338345 0.21631125845678884 0.9466524056034721]),[0.06101648518207122,-0.6747882607771046,2.092903082199545])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8785517249348926 -0.11590466323512959 0.4633713150965175
 0.24344745268799906 0.9433065700873668 -0.22562369691531117
 -0.4109503673117342 0.3110286544200692 0.8569603093119259]),[-0.16039697244342166,-0.6082379240531974,3.1530478356870293])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
