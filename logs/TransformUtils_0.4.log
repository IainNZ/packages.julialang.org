>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (452.8359375 MB free)
Uptime: 47577.0 sec
Load Avg:  0.93798828125  0.94970703125  0.95947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2335198 s       5648 s     183301 s    1754399 s        121 s
#2  3503 MHz    1556695 s       1503 s     153954 s    2874156 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.003790741426933284 -0.13963416378735644
 -0.003790741426933284 0.0 0.11378341754061468
 0.13963416378735644 -0.11378341754061468 0.0])
dAA = TransformUtils.so3([0.0 -0.149259806002237 -0.033836509193391484
 0.149259806002237 0.0 -0.04784192479370129
 0.033836509193391484 0.04784192479370129 0.0])
dAA = TransformUtils.so3([0.0 0.05910284014342962 0.01299247744935894
 -0.05910284014342962 0.0 0.16750593394688473
 -0.01299247744935894 -0.16750593394688473 0.0])
dAA = TransformUtils.Quaternion(0.991824906837065,[-0.04313005518553237,-0.002147779549013562,-0.12007722332044932])
dAA = TransformUtils.SO3([0.9974375223496614 0.026951875733734237 0.06627205597687444
 -0.02504911114840955 0.9992544955164102 -0.02937678030212361
 -0.06701440919416701 0.027641446862962167 0.9973690487355613])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.6325269193844424 0.7682428578411435 -0.0985525627779389
 -0.7545843851319514 0.6399184876118849 0.14528157119040555
 0.1746771363661027 -0.017528279681429695 0.9844697341423694]),[0.34134660824036817,-1.1032060829735997,0.2515642289367696])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9682989563405969 -0.030693328541199185 -0.247901292317674
 -0.04714100223249037 0.9521357555821115 -0.30201859024006783
 0.24530564008645864 0.3041306010995008 0.9205051441554409]),[-0.05014945865321773,0.6759275432683756,0.04609513170316037])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.6908963068261526 -0.6847564677545306 0.23188547406493892
 0.7094225727437055 0.5803784560424027 -0.39985054838469175
 0.13921891572514367 0.4407600567544382 0.886763026898472]),[-1.6260290080852005,0.8413379619025187,0.09478016175992027])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
