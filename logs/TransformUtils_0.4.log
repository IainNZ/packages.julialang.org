>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.7265625 MB free)
Uptime: 47011.0 sec
Load Avg:  0.92236328125  0.92138671875  0.943359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2286372 s       2364 s     167332 s    1758572 s        134 s
#2  3499 MHz    1575214 s       4742 s     137776 s    2788089 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1496817351965959 -0.16601084656592058
 -0.1496817351965959 0.0 0.028228616512315605
 0.16601084656592058 -0.028228616512315605 0.0])
dAA = TransformUtils.so3([0.0 -0.14102209797207552 0.04113818796500476
 0.14102209797207552 0.0 0.14441218903314623
 -0.04113818796500476 -0.14441218903314623 0.0])
dAA = TransformUtils.so3([0.0 0.10674857946611518 0.0066994651542421416
 -0.10674857946611518 0.0 -0.0943034157025131
 -0.0066994651542421416 0.0943034157025131 0.0])
dAA = TransformUtils.Quaternion(0.9970724108650931,[-0.024386446629498054,0.04248814844701477,0.058708312477895555])
dAA = TransformUtils.SO3([0.9981060011090849 0.05054578273358663 0.03506471727935092
 -0.05212616784777964 0.9975931746306067 0.04572439781925373
 -0.03266914715043629 -0.04746558519893467 0.99833849221904])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9254015222136934 -0.10099819753883908 0.3652826122038726
 -0.01881741651733173 0.9504028566926772 0.3104517914685172
 -0.37852070949974775 -0.2941662354593132 0.8776037251490582]),[-0.18618082460311922,1.1232902591502447,0.5598967599666046])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9805998784116874 0.19519154973831432 -0.01800381542170837
 -0.19575378743972963 0.9703424149996276 -0.14183106978265259
 -0.010214360576410956 0.14260384484103392 0.9897271393038434]),[0.006453797732794098,-0.7371454441535379,1.7863538938209604])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.914998547730306 0.10839271133698414 -0.3886240828621507
 -0.2820790590191286 0.860552972288424 -0.4241226076837238
 0.2884598102237358 0.4976942856961251 0.8179800339073748]),[-0.25096645820408114,-2.148401434770622,0.5691338304513383])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
