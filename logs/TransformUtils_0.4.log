>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.26953125 MB free)
Uptime: 47498.0 sec
Load Avg:  0.9970703125  0.98486328125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2318163 s       4323 s     176331 s    1775088 s        110 s
#2  3501 MHz    1598948 s       2238 s     149357 s    2844192 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.21646387760460586 -0.07303663800787458
 0.21646387760460586 0.0 -0.09448630990326662
 0.07303663800787458 0.09448630990326662 0.0])
dAA = TransformUtils.so3([0.0 -0.1570509252713413 -0.0011944211150604917
 0.1570509252713413 0.0 0.11327351059504415
 0.0011944211150604917 -0.11327351059504415 0.0])
dAA = TransformUtils.so3([0.0 0.011393167762070236 -0.1861263956145457
 -0.011393167762070236 0.0 -0.03754127922762335
 0.1861263956145457 0.03754127922762335 0.0])
dAA = TransformUtils.Quaternion(0.995235263146766,[0.029857423021928283,-0.03909741043502385,0.08418252655362739])
dAA = TransformUtils.SO3([0.9952487430923792 0.09436857711777187 0.02396895963129632
 -0.0927500667300414 0.9937905593425326 -0.06146339791477039
 -0.029620339204884855 0.058948246915609584 0.9978214969076203])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.7198151934540077 -0.691585431512118 -0.05979697478106273
 0.6485000949518634 0.7006903635831343 -0.29745695693521673
 0.24761606191883767 0.17533569317721007 0.9528607876168866]),[0.4687117718450327,-1.343280183764402,1.549535475103423])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9890841495163744 0.04173630480634582 -0.1413174654336198
 -0.06802714061600192 0.9800637992007263 -0.1866742018487002
 0.13070904067845207 0.19424991726471946 0.9722047707800906]),[-2.659679681817997,-1.3768816077191552,1.3119808289498722])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.700207849187628 0.71371329269994 0.017952820375795875
 -0.708784189984941 0.691915983320632 0.13739448334206955
 0.08563842574117812 -0.10892937091919946 0.9903537005472944]),[-2.332476572014558,2.0983539509018017,-0.02929318505767209])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
