>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.671875 MB free)
Uptime: 47525.0 sec
Load Avg:  0.9169921875  0.95556640625  0.9501953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    2302251 s       4778 s     176643 s    1790032 s        123 s
#2  3505 MHz    1607047 s       1995 s     149298 s    2812805 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1628655679725861 -0.19744484369789103
 -0.1628655679725861 0.0 -0.07266978067261422
 0.19744484369789103 0.07266978067261422 0.0])
dAA = TransformUtils.so3([0.0 0.19668633982138906 0.1929408629019751
 -0.19668633982138906 0.0 0.13111599911394428
 -0.1929408629019751 -0.13111599911394428 0.0])
dAA = TransformUtils.so3([0.0 0.06654732105594932 0.09680053052812654
 -0.06654732105594932 0.0 0.013795041662476746
 -0.09680053052812654 -0.013795041662476746 0.0])
dAA = TransformUtils.Quaternion(0.9961331029483576,[0.06228830935267191,0.031414782703395046,0.05340523528795026])
dAA = TransformUtils.SO3([0.9997761651182924 -0.018159364727238666 0.01085620256187703
 0.017416376591546403 0.9977328821421338 0.06500588987755228
 -0.012012055934885569 -0.06480226357970946 0.9978258250552365])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9682201799906544 -0.11849464446990673 -0.2202469121027924
 0.09538371975842556 0.9890296847526171 -0.11279285741209434
 0.2311960835825531 0.08820035096352684 0.9689009593482709]),[2.3868303961099735,-0.7920332988513507,2.08434737915971])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9790275366097385 0.12477163880232867 -0.16105005653661908
 -0.13762122753908085 0.987920890934598 -0.0712229667005432
 0.1502181090631336 0.09189315211467818 0.984372982311037]),[0.4322729914327447,-0.5887158334141377,-1.8042827405677178])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9695172316102634 0.23628332486028886 0.06485775207127095
 -0.23887170922461914 0.9704033246094198 0.03546398340702773
 -0.05455863032445224 -0.04987562510838488 0.9972641464913737]),[-2.772084800195533,0.08971305218201908,-3.3601449785351276])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
