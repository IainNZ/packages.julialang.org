>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (446.86328125 MB free)
Uptime: 43124.0 sec
Load Avg:  1.03125  1.03662109375  1.0087890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2075154 s       1207 s     164094 s    1645274 s        102 s
#2  3501 MHz    1440040 s       5332 s     143528 s    2564476 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.09121755613210822 -0.09388172161065562
 0.09121755613210822 0.0 0.03575411963865517
 0.09388172161065562 -0.03575411963865517 0.0])
dAA = TransformUtils.so3([0.0 0.029182814008770465 0.01367556502307222
 -0.029182814008770465 0.0 -0.05010527486809692
 -0.01367556502307222 0.05010527486809692 0.0])
dAA = TransformUtils.so3([0.0 -0.004035015786175078 0.07394498856331864
 0.004035015786175078 0.0 0.0775817055803043
 -0.07394498856331864 -0.0775817055803043 0.0])
dAA = TransformUtils.Quaternion(0.9973988872002257,[0.030808800786669463,0.028882494185942496,-0.05841300484855657])
dAA = TransformUtils.SO3([0.9907149490638448 0.08925818891291351 0.10255176943090992
 -0.1096597953085702 0.9705089290592476 0.21467917437225964
 -0.0803655336217358 -0.22393167334760666 0.9712857389447426])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9943515486871642 -0.005387725841012652 0.10599985864943465
 0.04952213928797378 0.9068855700820763 -0.41845683229844616
 -0.0938752115511894 0.4213425390192277 0.9020298828026985]),[0.6145437869394733,-1.7349447739233181,0.9586245375722586])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9291962158711286 -0.3577737145647453 -0.09269499219116
 0.3601413857408293 0.9328479298045251 0.009639612859803519
 0.08302153146895225 -0.042340394730751824 0.9956478877025723]),[-1.4180273156396563,-0.07772989997675558,0.5753500090846538])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9339890043237788 -0.30558150853022603 -0.1851606908786731
 0.35658127431649406 0.8300741038889261 0.42875024998222705
 0.022678946384288537 -0.46647285419131107 0.8842447295254355]),[-1.9030414204046946,1.3523653285862214,-1.2546502141707943])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
