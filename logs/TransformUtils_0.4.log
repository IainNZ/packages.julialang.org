>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.375 MB free)
Uptime: 43650.0 sec
Load Avg:  1.15185546875  1.1044921875  1.0498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2164952 s       2183 s     164218 s    1575559 s        102 s
#2  3500 MHz    1451458 s       4702 s     138644 s    2638184 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.1
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.026708883205146874 -0.044970333397638604
 0.026708883205146874 0.0 -0.015876704553095238
 0.044970333397638604 0.015876704553095238 0.0])
dAA = TransformUtils.so3([0.0 0.027736275771727992 0.022722366936874
 -0.027736275771727992 0.0 -0.1617462235871504
 -0.022722366936874 0.1617462235871504 0.0])
dAA = TransformUtils.so3([0.0 -0.07733796467542424 0.01740901345636361
 0.07733796467542424 0.0 -0.13988545946205344
 -0.01740901345636361 0.13988545946205344 0.0])
dAA = TransformUtils.Quaternion(0.9971454121504366,[0.01861526558398303,-0.05900567334461936,-0.04327619932158845])
dAA = TransformUtils.SO3([0.9994250894558216 0.031131916677317652 0.013427372424245137
 -0.03060278873496228 0.9988105756396153 -0.03795923223806433
 -0.014593145235558153 0.03752649403363692 0.9991890723770338])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9767651579038596 0.14239699745606 0.16016529405756744
 -0.17143997651565004 0.9676217361178416 0.18524715988270238
 -0.1286007805472485 -0.2084017056259209 0.9695517357701163]),[0.8266774801971395,0.3408755100979414,-0.2868296555398683])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9847575282709484 0.16589450598072936 0.0522649346991082
 -0.15939229397432195 0.9810014724603305 -0.11059026924764545
 -0.06961829598098213 0.10057397235902105 0.9924908911162013]),[1.5779101669518663,0.4223068903309869,2.2422618159490058])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9981560209378444 -0.019076787418874794 -0.05762494292669261
 0.0005036386540022801 0.951901440081142 -0.30640397308056266
 0.06069846961526887 0.3058099484209482 0.9501557615639349]),[0.3945741826768725,-0.3412989238419579,2.5874913621966624])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
