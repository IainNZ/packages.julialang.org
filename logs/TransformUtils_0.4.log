>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.0625 MB free)
Uptime: 46197.0 sec
Load Avg:  1.04443359375  0.97607421875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2232910 s       5465 s     164331 s    1753040 s        114 s
#2  3500 MHz    1565748 s        841 s     136146 s    2762488 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11602516184548764 0.007785931958383905
 0.11602516184548764 0.0 -0.13145265295434552
 -0.007785931958383905 0.13145265295434552 0.0])
dAA = TransformUtils.so3([0.0 -0.08483639560410337 -0.022566999266061462
 0.08483639560410337 0.0 0.014201778445135989
 0.022566999266061462 -0.014201778445135989 0.0])
dAA = TransformUtils.so3([0.0 0.15129896527542946 -0.014685151398476835
 -0.15129896527542946 0.0 -0.05026221282440285
 0.014685151398476835 0.05026221282440285 0.0])
dAA = TransformUtils.Quaternion(0.9981232180442181,[-0.04358708532133365,0.024885036588472232,-0.03508479083926985])
dAA = TransformUtils.SO3([0.996443352164147 -0.06691805122235239 0.05121152554338681
 0.06267071787952266 0.9947845185429075 0.08047448532187984
 -0.05632962851238784 -0.0769788028483088 0.9954402226470952])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9587268904943973 -0.12374466438985116 -0.2559882955878787
 0.07780434677131405 0.9801399372786183 -0.18240665277054827
 0.27347620201113143 0.15496116089688203 0.9493143870957911]),[0.3558954480308893,-1.3833979731846973,0.35045090492239717])
xj = TransformUtils.SE3(TransformUtils.SO3([0.950363248494204 0.2546990062283825 0.1787123726489534
 -0.2960052101142476 0.9170852827401532 0.2670870640196443
 -0.09586767701766931 -0.3067295232084577 0.9469563813056798]),[0.4856753843370265,1.8362741469720385,0.7839407093211319])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8618907818487356 0.23165678255879946 0.45108692649940574
 -0.4225846758320321 0.8198231054601879 0.3864094557662242
 -0.28029711364213405 -0.5236651705509145 0.8044925837046417]),[0.4934771462274647,3.2068437385719895,-0.2089936511778971])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
