>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.5390625 MB free)
Uptime: 49787.0 sec
Load Avg:  1.1220703125  1.001953125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2345651 s       4628 s     174571 s    1951691 s         90 s
#2  3499 MHz    1587115 s       2147 s     146615 s    3048421 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.045645857808707835 -0.06946204640029476
 0.045645857808707835 0.0 -0.011037740913846471
 0.06946204640029476 0.011037740913846471 0.0])
dAA = TransformUtils.so3([0.0 0.20493806026639666 -0.06724118292799733
 -0.20493806026639666 0.0 0.0471522450471988
 0.06724118292799733 -0.0471522450471988 0.0])
dAA = TransformUtils.so3([0.0 -0.08280542965483391 0.09440505255595456
 0.08280542965483391 0.0 0.05378159498961053
 -0.09440505255595456 -0.05378159498961053 0.0])
dAA = TransformUtils.Quaternion(0.9851215201356094,[-0.0356508667979722,-0.10462007634770676,-0.1316026059288316])
dAA = TransformUtils.SO3([0.9877615648616588 -0.14503863937655057 0.057366227606898176
 0.14093643682492 0.9875362860880551 0.07006428786840628
 -0.06681326033911887 -0.06112181891281112 0.9958916163396733])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9895338305659945 -0.09366507930978109 0.10977090271689521
 0.10289100564994473 0.9913376101449393 -0.0816283263852901
 -0.10117430069801665 0.09206842906237094 0.9905993969553255]),[-0.7686355371685607,-2.4992355839142495,-1.5423805537308852])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9865368978980897 -0.09502349003628131 0.13309953203125413
 0.0570715496532181 0.9627460828493746 0.2643157546919317
 -0.15325725857457573 -0.2531610481482289 0.955207671867587]),[-0.3920319143229765,0.9106548515773668,-1.6698666546461525])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9975894806727884 0.03064234657094013 0.0622597353642215
 -0.049937038182527246 0.9399986436760505 0.3375038401333269
 -0.04818215715960947 -0.33979934738579437 0.9392629468086321]),[0.7364073986921017,3.333340581935607,-0.3632911844470248])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
