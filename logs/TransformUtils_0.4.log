>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.7
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (454.81640625 MB free)
Uptime: 56935.0 sec
Load Avg:  0.998046875  1.01513671875  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2749112 s         54 s     192154 s    2204195 s        114 s
#2  3499 MHz    1940033 s       6518 s     162302 s    3377919 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.7
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.024459219912725712 0.08782691104175089
 -0.024459219912725712 0.0 -0.00010300401812296438
 -0.08782691104175089 0.00010300401812296438 0.0])
dAA = TransformUtils.so3([0.0 0.0007323667908155545 -0.024728173137629747
 -0.0007323667908155545 0.0 0.12475542511134041
 0.024728173137629747 -0.12475542511134041 0.0])
dAA = TransformUtils.so3([0.0 0.010740466198656871 -0.015114864236916251
 -0.010740466198656871 0.0 0.039277875032484366
 0.015114864236916251 -0.039277875032484366 0.0])
dAA = TransformUtils.Quaternion(0.9871720570601079,[-0.09381108112384955,0.05040217504069173,-0.11895558654076276])
dAA = TransformUtils.SO3([0.9928098545152092 -0.019961278326672542 0.11802601469614607
 0.03798514651910549 0.987573446632806 -0.15249857753344112
 -0.11351529157524048 0.15588532603605118 0.9812308819565468])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9754805354913022 0.204910321345602 0.0803086862278579
 -0.1977775176394555 0.9762373229327492 -0.08857055283486788
 -0.09654935729448053 0.07051559770108597 0.9928271612354697]),[1.5539703693288531,-1.0548607097196394,0.9616141117186161])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9438704121841714 0.32987092585480865 0.01714109911801288
 -0.3260925948892809 0.92227498789764 0.20753907163901317
 0.05265229873099116 -0.20147957458288282 0.9780765391646213]),[-1.6645871423668728,-0.01741042132318942,-0.7121254278695884])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9801374534470679 0.15883013314244895 -0.11875841509656646
 -0.12122216407828874 0.9537457699862332 0.27508942758590993
 0.1569578264581696 -0.25522929894375196 0.9540556826905903]),[-3.1832260709062856,0.23525729419908414,-2.012099746631973])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
