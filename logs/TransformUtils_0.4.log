>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.82421875 MB free)
Uptime: 46133.0 sec
Load Avg:  1.115234375  1.03271484375  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2276153 s       7021 s     166955 s    1694237 s        126 s
#2  3500 MHz    1556404 s         90 s     139861 s    2751790 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.05126151284016315 0.1062755668542444
 -0.05126151284016315 0.0 -0.04484927410734969
 -0.1062755668542444 0.04484927410734969 0.0])
dAA = TransformUtils.so3([0.0 -0.16280811213210317 0.037304187989846006
 0.16280811213210317 0.0 -0.011625258098747312
 -0.037304187989846006 0.011625258098747312 0.0])
dAA = TransformUtils.so3([0.0 0.3097092117744042 -0.13070920455529053
 -0.3097092117744042 0.0 0.002444937281749514
 0.13070920455529053 -0.002444937281749514 0.0])
dAA = TransformUtils.Quaternion(0.9926936288603276,[-0.010556035404525007,-0.057443801123511634,-0.10558474818426643])
dAA = TransformUtils.SO3([0.9959043111142395 0.04932340719781533 -0.07577469634693894
 -0.05618035761188893 0.994246641955188 -0.09119968409722022
 0.07084045823307876 0.09508320810338168 0.9929455236890373])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9695704591100427 -0.13759750524457887 -0.20248469416627304
 0.12721567870239112 0.9898411949494285 -0.06348684803467164
 0.20916332353792583 0.035795744601217525 0.9772253418505955]),[0.7451312092723406,-0.8941787196427613,-0.4939362826038272])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8935142329703044 -0.09652511241329945 0.4385375903535392
 0.13950452223212897 0.9879670478994595 -0.06678024065254964
 -0.42681471829855405 0.1208470725273348 0.8962283086944415]),[0.10283957112600735,-1.5732592138541364,-0.5364040340012839])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7947981825459597 0.05737377630556245 0.6041556908728734
 -0.00013615701839331945 0.9955379088689763 -0.09436235195273883
 -0.606873817595475 0.07491676579528442 0.7912595324669832]),[-0.7180193804702115,-0.585324285591458,0.13166634317791648])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
