>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.2421875 MB free)
Uptime: 46830.0 sec
Load Avg:  1.09423828125  1.0302734375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    2290103 s       2024 s     177396 s    1734353 s        128 s
#2  3502 MHz    1539298 s       4414 s     157036 s    2814862 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05891853578299099 0.04783635126454514
 0.05891853578299099 0.0 -0.027079641078479568
 -0.04783635126454514 0.027079641078479568 0.0])
dAA = TransformUtils.so3([0.0 -0.054136879733863386 0.008202631511637474
 0.054136879733863386 0.0 0.09616016060895334
 -0.008202631511637474 -0.09616016060895334 0.0])
dAA = TransformUtils.so3([0.0 -0.031231649667926256 -0.11762906850649107
 0.031231649667926256 0.0 -0.017329288149988797
 0.11762906850649107 0.017329288149988797 0.0])
dAA = TransformUtils.Quaternion(0.9961658497187522,[-0.08161657736760541,0.02486283882420828,0.01934356219819147])
dAA = TransformUtils.SO3([0.994362131569845 0.10435367303394773 -0.018821854961686556
 -0.10027850724969593 0.9831259642164161 0.15299529230442194
 0.03446987501641852 -0.15024529745674825 0.9880476599377614])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9851009107172806 0.1177153015181701 0.12537664651948005
 -0.04460634762112646 0.8789718490495094 -0.47478285808397686
 -0.166091750113868 0.46211643161326 0.8711268186533689]),[-0.15529478977321323,-1.3609693193433885,-0.9397287089794202])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9837371990957742 -0.10645218423271528 0.1446687788960881
 0.17319601231590948 0.7755841521089917 -0.6070192454241
 -0.047584287670075574 0.622203467902149 0.7814080752701952]),[1.893837472116187,-0.8720619574772079,0.796951274209917])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9692581268208023 -0.24280498284468766 0.03980482254225873
 0.24604585898056158 0.9567160316328511 -0.15542158825339247
 -0.00034477579292058885 0.16043744925197595 0.9870459492886703]),[1.7083454678338386,1.4734983866179876,1.5376570054401615])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
