>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (490.953125 MB free)
Uptime: 49900.0 sec
Load Avg:  0.974609375  0.935546875  0.9501953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2392678 s        338 s     175480 s    1919755 s        113 s
#2  3500 MHz    1718424 s       5956 s     145450 s    2946224 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.15111301542194863 -0.08069395430189169
 -0.15111301542194863 0.0 0.03352444952154839
 0.08069395430189169 -0.03352444952154839 0.0])
dAA = TransformUtils.so3([0.0 -0.03990783810714702 -0.0977049422980054
 0.03990783810714702 0.0 -0.012717366390639376
 0.0977049422980054 0.012717366390639376 0.0])
dAA = TransformUtils.so3([0.0 0.1610654286884262 0.05071008426390147
 -0.1610654286884262 0.0 0.03975756236838522
 -0.05071008426390147 -0.03975756236838522 0.0])
dAA = TransformUtils.Quaternion(0.9967129745514781,[-0.053703761926456706,0.059547065105531545,-0.011545533898801908])
dAA = TransformUtils.SO3([0.9952054171536859 0.08400182057355284 0.05009862082220328
 -0.08049251587417326 0.9944073418251467 -0.06837392348324244
 -0.05556197041326227 0.0640135350107691 0.996401091317759])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9983867389435872 0.034219279416465076 0.045309606242023806
 -0.030966607562545368 0.9970210595635347 -0.07064047000745238
 -0.04759189760512456 0.06912342369287246 0.9964722593124803]),[-0.5317766210108953,0.018291874317945427,-0.73770794405445])
xj = TransformUtils.SE3(TransformUtils.SO3([0.7107580160320028 -0.1810799109187978 0.6797301733098888
 0.22138939597611768 0.9747780879148743 0.028185362696821564
 -0.6676898816034138 0.1304520800242828 0.7329205119395671]),[-1.9450495233897656,-1.0487345065492804,0.5170195900395098])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7345323277377512 -0.21718181429433325 0.6428797080698556
 0.19889850671881465 0.9746951523829006 0.10202325198845655
 -0.6487693299880829 0.05292843716846561 0.7591422376641397]),[-1.4376656013731108,-1.0254778902144166,1.261641587055688])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
