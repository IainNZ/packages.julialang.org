>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (478.609375 MB free)
Uptime: 42675.0 sec
Load Avg:  1.0  0.9853515625  0.9619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2135349 s       5061 s     164186 s    1511415 s         97 s
#2  3500 MHz    1370757 s       3226 s     143002 s    2613458 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.2810064318649525 -0.09998524830726643
 -0.2810064318649525 0.0 0.21710997974741503
 0.09998524830726643 -0.21710997974741503 0.0])
dAA = TransformUtils.so3([0.0 0.04774599987627554 -0.09433550883924219
 -0.04774599987627554 0.0 0.03645532018643507
 0.09433550883924219 -0.03645532018643507 0.0])
dAA = TransformUtils.so3([0.0 0.019510230364688335 -0.11776708649027119
 -0.019510230364688335 0.0 0.30872044017455186
 0.11776708649027119 -0.30872044017455186 0.0])
dAA = TransformUtils.Quaternion(0.9941868209520445,[0.04323534199943821,0.05929831882652105,-0.07878438697995525])
dAA = TransformUtils.SO3([0.9547329550215667 0.14949951660514696 0.2571670257451651
 -0.07855717533429266 0.9605563377106573 -0.2667588654335352
 -0.286903737862169 0.23448116474189806 0.9288190505055324])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.904706864960205 0.40680845970967566 0.12653997630203032
 -0.33925769091403113 0.8675807692305914 -0.3636039438962882
 -0.2577008103393486 0.2860253240010341 0.9229191765157697]),[0.7300624490152585,0.9328230381182756,-2.1756810335472947])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9944933269933948 -0.1027378731700413 0.02068700031675333
 0.10062278727937199 0.9912415046188133 0.08552972700272791
 -0.029292955565103 -0.08297715913145869 0.9961208329398263]),[-1.2456644807274375,-0.5567888319860674,0.2685229422875007])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8731367040086666 -0.4078506819956418 -0.2670020923299525
 0.48348816662924105 0.7944538623070656 0.36753537706577505
 0.062221289301796746 -0.450000979844573 0.8908578053183045]),[-1.9119647784225196,-1.3969968071029355,2.54742303258976])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
