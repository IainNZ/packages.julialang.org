>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.40234375 MB free)
Uptime: 47698.0 sec
Load Avg:  1.064453125  0.986328125  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2352837 s        515 s     191523 s    1747176 s         98 s
#2  3500 MHz    1556755 s       6416 s     163477 s    2885577 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.12475927810927726 -0.025111708145168596
 -0.12475927810927726 0.0 0.061982132076630315
 0.025111708145168596 -0.061982132076630315 0.0])
dAA = TransformUtils.so3([0.0 0.056010570338393684 0.1676585770550454
 -0.056010570338393684 0.0 0.05379388436183104
 -0.1676585770550454 -0.05379388436183104 0.0])
dAA = TransformUtils.so3([0.0 -0.12420226075428054 -0.054831876705178466
 0.12420226075428054 0.0 -0.17033257472482827
 0.054831876705178466 0.17033257472482827 0.0])
dAA = TransformUtils.Quaternion(0.9966316265807903,[-0.007616341191724028,-0.0006099697601748237,0.08165182289864098])
dAA = TransformUtils.SO3([0.992812983578034 -0.11194727583163679 -0.04231060236817877
 0.11289108209225386 0.9933935914134181 0.020610097592960386
 0.03972383696123408 -0.025238462168420236 0.9988919044643675])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9722305352684137 0.17564897174378472 0.15464548172204917
 -0.18897287674017316 0.9790339708208453 0.07603772639493772
 -0.1380472315848342 -0.10315000098942906 0.9850396129839875]),[0.712440135425196,0.579502691808554,-0.6951192815664373])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9914807253614761 -0.09858284753448597 0.08513162402229485
 0.0954337850247775 0.9946192785841157 0.04030984178408281
 -0.08864741345648858 -0.03184199806553489 0.9955539780678238]),[-2.0724398968607063,-0.03203250694629506,-0.0476574665913871])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9581509694469921 -0.27940562128093704 -0.06228337293694612
 0.2767294682025431 0.9597345880981301 -0.048273407135300817
 0.07326336858298856 0.02901756717449612 0.9968903949879079]),[-2.6813621498252607,-1.1546607348897857,0.16060667539016926])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
