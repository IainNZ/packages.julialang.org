>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (464.85546875 MB free)
Uptime: 47551.0 sec
Load Avg:  0.9169921875  0.9462890625  0.94921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2341254 s       6740 s     180693 s    1740276 s        102 s
#2  3499 MHz    1577427 s        102 s     154318 s    2865643 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.04078501962209441 -0.0334971080821943
 -0.04078501962209441 0.0 -0.02025078746614702
 0.0334971080821943 0.02025078746614702 0.0])
dAA = TransformUtils.so3([0.0 0.1102829680444346 -0.12819674893499827
 -0.1102829680444346 0.0 0.05287052697454774
 0.12819674893499827 -0.05287052697454774 0.0])
dAA = TransformUtils.so3([0.0 -0.029832600647840386 -0.1297628576136104
 0.029832600647840386 0.0 -0.052335302614051143
 0.1297628576136104 0.052335302614051143 0.0])
dAA = TransformUtils.Quaternion(0.9970810023270278,[0.026491172233556234,-0.06884996537768928,-0.019681840861891866])
dAA = TransformUtils.SO3([0.9946038381502833 0.06631341807492976 -0.0797855608487199
 -0.07044840333349318 0.9962526666605356 -0.05017615608566637
 0.0761592253406419 0.05552616279729105 0.9955484004509887])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9312001041059823 -0.3118267730619778 -0.18876024399952873
 0.3613592551261377 0.8576569240274742 0.3658470847258651
 0.04781061438311276 -0.40888710455269334 0.911331707383664]),[1.1002797539408211,0.4146487144542895,1.5400524874751904])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9665364008219921 -0.25170971971059364 0.04949346309649258
 0.22738821202381274 0.9299555488315071 0.2889243468974257
 -0.11875178701258803 -0.2680016682797045 0.9560717122060521]),[1.9403620343898456,-1.306665427117771,0.9545665802418147])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9765300360928852 0.08884260281102783 0.19620418072556514
 -0.057814778078774325 0.985655071296981 -0.15856081439701708
 -0.20747660119668987 0.14349589663925996 0.9676581977142367]),[0.13227947003767349,-1.4988595011995902,-1.3218837683168476])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
