>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (464.87890625 MB free)
Uptime: 47745.0 sec
Load Avg:  0.97607421875  0.9658203125  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2344597 s       6177 s     200663 s    1720044 s        176 s
#2  3500 MHz    1547072 s        625 s     174202 s    2888929 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.012266407660950574 0.1598608752032305
 0.012266407660950574 0.0 -0.12178177428364134
 -0.1598608752032305 0.12178177428364134 0.0])
dAA = TransformUtils.so3([0.0 -0.1400291483054205 0.08312425729869957
 0.1400291483054205 0.0 -0.0560211659151944
 -0.08312425729869957 0.0560211659151944 0.0])
dAA = TransformUtils.so3([0.0 -0.03803695046775607 0.03566246545750703
 0.03803695046775607 0.0 0.10541056190320677
 -0.03566246545750703 -0.10541056190320677 0.0])
dAA = TransformUtils.Quaternion(0.9975520527971693,[-0.03640728015499174,0.05391241970233497,0.02564883844755354])
dAA = TransformUtils.SO3([0.9832628461994837 -0.15243347428270967 -0.09979083726371228
 0.13716709977117073 0.9798471797177459 -0.14520568563091807
 0.11991397760084481 0.12908733600660371 0.9843561843452107])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9942378096694512 -0.09755169092264597 0.04443923291219994
 0.09767456857645226 0.9952182284813277 -0.0005969521688002181
 -0.04416850096048234 0.004934095319352951 0.9990119109531594]),[-0.6274231407610446,-0.5955475517193287,0.6339610989162311])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9256495092669104 -0.3487395749259862 -0.1468117668116916
 0.29873377794388656 0.9116848343830244 -0.28211503446532216
 0.23223073851086268 0.21728200946336945 0.948080910288916]),[0.4096185826543746,0.6341004553284072,-0.7075358874467614])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9392371498980476 -0.26727866888709007 -0.21539658634560077
 0.2081524750420409 0.9424175911795138 -0.26176636714688045
 0.27295809822253875 0.2010253640547585 0.9407883288080199]),[1.210423341144319,1.115983863551794,-1.2948201702425388])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
