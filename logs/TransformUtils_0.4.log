>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.28125 MB free)
Uptime: 47800.0 sec
Load Avg:  1.05908203125  1.01611328125  1.02880859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2305521 s       5061 s     177972 s    1806809 s        130 s
#2  3500 MHz    1536560 s       1763 s     152294 s    2904804 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.07318635533592216 -0.1239599351729265
 -0.07318635533592216 0.0 0.140036803017058
 0.1239599351729265 -0.140036803017058 0.0])
dAA = TransformUtils.so3([0.0 0.1424805641159121 -0.11638336587626621
 -0.1424805641159121 0.0 -0.10106760471380682
 0.11638336587626621 0.10106760471380682 0.0])
dAA = TransformUtils.so3([0.0 0.007642941145193542 0.16442938016556413
 -0.007642941145193542 0.0 0.010918976711984503
 -0.16442938016556413 -0.010918976711984503 0.0])
dAA = TransformUtils.Quaternion(0.998716253643032,[0.009761194458231984,0.028760582076502346,0.040538780329415])
dAA = TransformUtils.SO3([0.9858975116104951 -0.16524457669560663 0.026463682149763003
 0.16731114683897644 0.9766824079305856 -0.13453049536198167
 -0.0036161780459992507 0.13706094962316398 0.9905560152483739])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.854071329206805 -0.4022547449699055 -0.32977762928391274
 0.4234745076081039 0.9058706559038601 -0.008227768736677372
 0.3020455363566816 -0.1326253177998325 0.9440227852364041]),[-0.64715126585067,-0.9774460916368369,-0.8859308563107774])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9170235957336106 -0.19838856540146438 -0.34599089870363414
 0.21574218952543237 0.9763770922092552 0.011961666596761197
 0.3354445297311793 -0.08561396455572268 0.9381616153661796]),[-0.228333806617565,-1.3561090009269297,1.0105054556333717])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9758844017023539 0.2181735067674317 -0.007067917574505533
 -0.2179310112614839 0.9756286779669197 0.025588221100106334
 0.012478335008544783 -0.023430827414380018 0.9996475816416963]),[0.770156018048618,-0.7630063968165719,1.6552780112631609])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
