>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.42578125 MB free)
Uptime: 47311.0 sec
Load Avg:  1.03564453125  0.98486328125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2369771 s       3627 s     167019 s    1692147 s        135 s
#2  3499 MHz    1460708 s       2996 s     139570 s    2932543 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03376737686707687 -0.23903843730030472
 0.03376737686707687 0.0 -0.003407268746877104
 0.23903843730030472 0.003407268746877104 0.0])
dAA = TransformUtils.so3([0.0 0.05431059690792156 0.10317549715001453
 -0.05431059690792156 0.0 -0.009520093637016218
 -0.10317549715001453 0.009520093637016218 0.0])
dAA = TransformUtils.so3([0.0 0.1598867676481727 -0.019692265072845723
 -0.1598867676481727 0.0 0.06898711171355977
 0.019692265072845723 -0.06898711171355977 0.0])
dAA = TransformUtils.Quaternion(0.9996143039793891,[-0.010526037758712584,0.0185285061362822,-0.01780843253240605])
dAA = TransformUtils.SO3([0.9990559320531681 -0.025159031437584845 0.035415642963219945
 0.02414627044469957 0.9992952526052604 0.028739445787978053
 -0.0361137405011871 -0.027857158105437076 0.9989593467650731])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9961912909384711 0.016703014642367387 0.08557991096162143
 -0.023495642588520032 0.9965984837635258 0.07898997999489457
 -0.0839694387125144 -0.08069988514302968 0.9931951781498977]),[1.1989284897423222,1.5768698027106747,0.08233742066301344])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9919269200123179 0.014877224507022644 -0.12593511641255747
 0.023859870554806803 0.9534617772858591 0.3005683713100873
 0.12454594305710892 -0.30114665438264177 0.9454094354416805]),[2.023528730158221,1.0631425266052994,1.6679447221704593])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9771303030405025 0.01770547988497064 -0.2119030128667808
 0.030296037387099434 0.9747695564882293 0.2211480541681981
 0.21047213829534683 -0.2225102867864399 0.9519404662454479]),[0.7003873753493894,-0.6261648416584171,1.6048074341877954])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
