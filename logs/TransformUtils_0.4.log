>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.66796875 MB free)
Uptime: 46144.0 sec
Load Avg:  0.98583984375  0.978515625  0.998046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2272842 s       4968 s     187274 s    1667901 s        134 s
#2  3499 MHz    1487814 s       1471 s     162314 s    2771028 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03293617051643816 0.16154263855121534
 0.03293617051643816 0.0 -0.07675759334451021
 -0.16154263855121534 0.07675759334451021 0.0])
dAA = TransformUtils.so3([0.0 0.1944457182045039 -0.10830716100941878
 -0.1944457182045039 0.0 0.08297015745059921
 0.10830716100941878 -0.08297015745059921 0.0])
dAA = TransformUtils.so3([0.0 -0.24300112508134075 0.012373511655867413
 0.24300112508134075 0.0 0.0779779659259725
 -0.012373511655867413 -0.0779779659259725 0.0])
dAA = TransformUtils.Quaternion(0.9975042293095872,[0.035085122392390665,0.045471550091265626,-0.04106926866277781])
dAA = TransformUtils.SO3([0.9760236217502615 0.21631495695433817 -0.024201842560971548
 -0.21313084379483715 0.9723434263088518 0.0955170389891986
 0.04419426669607679 -0.08806872720668886 0.9951335418321455])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9997281799044839 -0.013528742869766486 -0.018987875637666234
 0.01731670396665457 0.9761938565176057 0.21620750741131844
 0.01561083177152923 -0.21647754528737573 0.9761627806456017]),[0.21660996702862728,-0.7664193105053467,-0.9616632116383])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9890202748403409 -0.10623213614736204 -0.10273085809193308
 0.11708099246583326 0.9874408403680762 0.10607840485415888
 0.09017170929926999 -0.11694152394575538 0.9890367752613106]),[0.48113783590578924,-0.22637636463229033,0.917971183965323])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9921865515258417 -0.09092959385815247 -0.0854263187316996
 0.08139339428535697 0.9906860833422836 -0.10916134681577683
 0.09455666204962457 0.10135528221418631 0.9903464769611271]),[0.3031503850512891,0.11670923649902892,1.9465676551548907])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
