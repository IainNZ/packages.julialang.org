>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (440.71875 MB free)
Uptime: 39820.0 sec
Load Avg:  1.25  1.0576171875  1.02734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1964073 s       4429 s     158340 s    1424624 s        222 s
#2  3499 MHz    1268996 s       3234 s     137578 s    2382253 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.22.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.06356013566564776 -0.08385796486302519
 -0.06356013566564776 0.0 0.03321725747002509
 0.08385796486302519 -0.03321725747002509 0.0])
dAA = TransformUtils.so3([0.0 0.12464503052218923 0.1299084866586022
 -0.12464503052218923 0.0 0.028320756580016537
 -0.1299084866586022 -0.028320756580016537 0.0])
dAA = TransformUtils.so3([0.0 0.0177870664998034 0.13863402897510269
 -0.0177870664998034 0.0 0.16474589212658652
 -0.13863402897510269 -0.16474589212658652 0.0])
dAA = TransformUtils.Quaternion(0.9984471374781169,[-0.027580687372426683,0.025652589193353146,-0.04104344056601209])
dAA = TransformUtils.SO3([0.9939583893843884 0.10215519169236831 0.04013772518078276
 -0.10510571665874927 0.9912390652687553 0.0799868977444136
 -0.031615004318254855 -0.08372235242406921 0.9959874794426569])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9872454653296394 -0.1566519888535565 -0.028399746025078276
 0.15073562045903097 0.9771395347011466 -0.14992365540119987
 0.05123635341136891 0.14373059560250903 0.9882896093640029]),[0.5042976331096524,-0.25534022026978376,0.6042779569706442])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8399307582856026 -0.5141236591932408 -0.17376186101537097
 0.5022909339029987 0.8577019224797864 -0.10977809386818434
 0.2054753975653191 0.004926990179718402 0.978649879049266]),[-0.46238875131473617,-1.1354761480116369,0.2859474983803576])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9154587779681596 -0.37802757869321113 -0.1379506273577329
 0.38876460692759085 0.9193411104065253 0.060613555554291085
 0.1039100872941598 -0.10911953291618008 0.9885826325071034]),[-1.10333467645327,-0.7543360926013039,-0.15519584122831942])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
