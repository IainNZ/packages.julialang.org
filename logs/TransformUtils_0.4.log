>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.89453125 MB free)
Uptime: 40379.0 sec
Load Avg:  1.111328125  1.03564453125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1956341 s       5481 s     155515 s    1499818 s        178 s
#2  3499 MHz    1334815 s       1143 s     133169 s    2396929 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.22.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04229407794955308 -0.0007493620701995935
 0.04229407794955308 0.0 0.03143836934158064
 0.0007493620701995935 -0.03143836934158064 0.0])
dAA = TransformUtils.so3([0.0 -0.015747381146672165 0.008327664864910694
 0.015747381146672165 0.0 -0.01978439105848781
 -0.008327664864910694 0.01978439105848781 0.0])
dAA = TransformUtils.so3([0.0 -0.028029625280777338 -0.0903134434718975
 0.028029625280777338 0.0 0.030079852536478574
 0.0903134434718975 -0.030079852536478574 0.0])
dAA = TransformUtils.Quaternion(0.9889757378681535,[0.08330847199219184,-0.060269173124413995,0.10655662895083992])
dAA = TransformUtils.SO3([0.9957083186761131 0.006175225937745681 0.09234073155333744
 0.0005131626764538527 0.9973876480229524 -0.0722330688487666
 -0.09254556058101993 0.07197045335317093 0.993104009185787])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9710187495004552 -0.01778533467005244 0.23834065953849873
 -0.08752515847165498 0.9014911238682322 0.42385504623786574
 -0.22240039287978788 -0.4324320009636959 0.873808119548823]),[-1.0080355138865027,-1.8472210069534412,-1.1628812695871995])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9786106161453428 -0.03871579397809155 -0.20204541386598818
 -0.02492109629858644 0.9525882706287142 -0.30324004620081435
 0.20420627053768223 0.3017891216681632 0.9312481544227884]),[0.5808077270099525,0.6162347898003857,0.12121526642753555])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.907014924844045 -0.18808722042538728 -0.376758707427981
 -0.12817639060799582 0.7289351702736524 -0.6724762675580661
 0.4011168645181321 0.6582375825268361 0.6370467376483213]),[1.0415986438234788,1.6372409915383224,2.544888096030772])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
