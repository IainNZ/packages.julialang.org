>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.09765625 MB free)
Uptime: 46706.0 sec
Load Avg:  1.11572265625  1.04541015625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2241131 s       2362 s     183598 s    1769961 s        128 s
#2  3499 MHz    1573573 s       3932 s     158466 s    2769894 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1147998020445801 -0.07532429569759833
 -0.1147998020445801 0.0 0.12442938844180024
 0.07532429569759833 -0.12442938844180024 0.0])
dAA = TransformUtils.so3([0.0 0.11188194342420424 -0.014365004798855809
 -0.11188194342420424 0.0 0.01586097449041614
 0.014365004798855809 -0.01586097449041614 0.0])
dAA = TransformUtils.so3([0.0 -0.015465322739059824 0.07482240282871054
 0.015465322739059824 0.0 -0.22272139599316337
 -0.07482240282871054 0.22272139599316337 0.0])
dAA = TransformUtils.Quaternion(0.9965911120977454,[0.05888771750698641,0.05256540956898985,0.023984781246462708])
dAA = TransformUtils.SO3([0.9954007987508535 0.016318243520919457 0.09439790662167546
 -0.010380389393539323 0.9979560801684721 -0.06305481401777899
 -0.09523390867858511 0.06178492520971577 0.9935356690399337])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9508210737220754 -0.16074023522700076 0.26476756324211653
 0.14923723660097132 0.9867833456541723 0.06314171324302227
 -0.27141763571607763 -0.020523292102555435 0.9622428287618296]),[0.9940164942346343,-0.8391694927604113,0.196984075299325])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8298693423847584 -0.0797487834935352 0.5522291246404792
 0.1181403745856853 0.9924070620297097 -0.0342209749468613
 -0.5453070020297214 0.0936394936170684 0.8329897470992643]),[1.5019288120417056,0.9374626995544073,0.07484378484689194])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9546941394398093 0.046861853604054836 0.29387593776298593
 -0.005622944323877976 0.9901878084584843 -0.1396298194416747
 -0.29753568292964905 0.13165132227583687 0.9455899992737925]),[0.7812244430716511,1.6740158341487703,0.12912968856115725])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
