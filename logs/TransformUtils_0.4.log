>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.55078125 MB free)
Uptime: 46430.0 sec
Load Avg:  1.26171875  1.06103515625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2270609 s        984 s     186173 s    1693189 s        122 s
#2  3500 MHz    1503225 s       6047 s     159984 s    2786743 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.056579597408571394 0.053349669382827015
 -0.056579597408571394 0.0 0.016076564240344367
 -0.053349669382827015 -0.016076564240344367 0.0])
dAA = TransformUtils.so3([0.0 -0.07473086639633454 0.07773680743668529
 0.07473086639633454 0.0 -0.09725690334780773
 -0.07773680743668529 0.09725690334780773 0.0])
dAA = TransformUtils.so3([0.0 -0.15727568171341552 0.09719447070676814
 0.15727568171341552 0.0 0.12794299622332375
 -0.09719447070676814 -0.12794299622332375 0.0])
dAA = TransformUtils.Quaternion(0.9993521721029871,[-0.0033804645525829175,-0.035373073169394684,0.005705634671358784])
dAA = TransformUtils.SO3([0.9975916697915229 0.06158778230502834 -0.03190306307095927
 -0.06357926397630587 0.9958111806888249 -0.06570973753835778
 0.02772250989344907 0.0675798600610943 0.9973286444093193])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9293428055963153 -0.27299483475084785 0.24858754973997899
 0.30264411494026755 0.9489052932355178 -0.0893604171970904
 -0.21149110945472707 0.15828001980342693 0.9644785876071253]),[-0.1421280225290186,3.0169578374859807,-0.1750971560816558])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9775972165340087 -0.0854845409482918 -0.1923436390521363
 0.0376123329447307 0.9700537331502568 -0.23996055344932235
 0.2070965828675437 0.22735027613818762 0.9515371024318896]),[-2.0620056530885678,1.534604233960142,0.05582022615485453])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8761070050968212 0.16605404825845949 -0.45261746395522096
 -0.19840919752090203 0.9798109664485511 -0.024581707960756816
 0.43939766266946645 0.11133967434896441 0.8913659018363203]),[-2.281687031314992,-0.8459468965026087,-0.12207906886331132])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
