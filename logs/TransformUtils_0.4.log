>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.5859375 MB free)
Uptime: 48965.0 sec
Load Avg:  0.9599609375  0.9697265625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    2344529 s       4811 s     193617 s    1858055 s        136 s
#2  3507 MHz    1668093 s       1792 s     168034 s    2891717 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0063814323985855355 0.00714125800745966
 -0.0063814323985855355 0.0 -0.02990185224537255
 -0.00714125800745966 0.02990185224537255 0.0])
dAA = TransformUtils.so3([0.0 -0.23638937756582137 -0.10311161160727143
 0.23638937756582137 0.0 0.06356256178801001
 0.10311161160727143 -0.06356256178801001 0.0])
dAA = TransformUtils.so3([0.0 -0.016869136425382153 -0.1178835553814031
 0.016869136425382153 0.0 0.008789575293579929
 0.1178835553814031 -0.008789575293579929 0.0])
dAA = TransformUtils.Quaternion(0.9912829058712371,[-0.07060170282959796,-0.1024340010197689,0.04336906178509347])
dAA = TransformUtils.SO3([0.9984044508545541 0.04136175546592705 0.038441614151766695
 -0.043366028447196295 0.9976600870335887 0.05285582576073518
 -0.036165454380298015 -0.05443855182597246 0.9978619663984382])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9943231305840229 -0.0014809112865485296 -0.10639228772495458
 -0.007891164169877708 0.9961231748499006 -0.08761478217172192
 0.10610957314791246 0.08795696350327026 0.9904566275499661]),[-0.46082141886561534,-0.025271867342390994,0.14952279380298797])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9370780004021066 -0.3091999139110853 0.16211179599204645
 0.2779026899033165 0.9416902917358564 0.18970895971181448
 -0.21131709847262847 -0.13272078845386354 0.9683647433716772]),[-0.6822122102428939,0.8730678289365119,-1.314873066442117])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9071425880941751 -0.32895860527634224 0.26244725352048387
 0.25685077006067336 0.9268237032253994 0.27390784044783356
 -0.3333466765771644 -0.1810636881160891 0.9252545239342304]),[-0.382609350438563,0.7663810372388061,-1.5055741491663184])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
