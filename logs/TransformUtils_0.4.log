>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.078125 MB free)
Uptime: 42548.0 sec
Load Avg:  1.0830078125  1.01171875  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2000394 s       6299 s     156325 s    1633618 s         37 s
#2  3499 MHz    1395833 s         86 s     130636 s    2565542 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.05098272246602518 -0.11371175500930251
 -0.05098272246602518 0.0 0.024455212667161923
 0.11371175500930251 -0.024455212667161923 0.0])
dAA = TransformUtils.so3([0.0 -0.09816205281810143 0.05465978946402664
 0.09816205281810143 0.0 -0.06647550793382843
 -0.05465978946402664 0.06647550793382843 0.0])
dAA = TransformUtils.so3([0.0 -0.0305386322769061 -0.04937250187365015
 0.0305386322769061 0.0 0.032631990814456224
 0.04937250187365015 -0.032631990814456224 0.0])
dAA = TransformUtils.Quaternion(0.9962000446230447,[-0.03595947194191189,0.07227615614604811,0.03268860234783384])
dAA = TransformUtils.SO3([0.9724729668273607 -0.11863979021410537 0.2005515618686243
 0.11821684528067447 0.9928873030030047 0.014127314936159678
 -0.20080116105709314 0.009970141090949082 0.9795812830004208])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9627146259397741 -0.26853651556238295 -0.03269080621910436
 0.26544766028354466 0.9144541190536408 0.3054688262258879
 -0.05213529180538659 -0.3027570047999615 0.9516407449205416]),[0.31490580074084046,1.0880290856307229,0.285164849048721])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9404340121437416 0.2811915723545709 0.19108942524375652
 -0.17699894899849294 0.8848382928494345 -0.43096701446946883
 -0.29026753324589016 0.3714734110862614 0.8819026386168053]),[0.005188266118835369,-0.25684789317523016,0.1495224117221609])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8735188038851109 0.48621861927799137 0.023587147486056795
 -0.3265177617610702 0.6211676392436515 -0.7124162513664394
 -0.3610416188109983 0.614607369158451 0.7013606285374601]),[-0.6480922898326412,-1.105591127284799,-0.5297759463273716])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
