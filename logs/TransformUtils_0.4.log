>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.921875 MB free)
Uptime: 47283.0 sec
Load Avg:  0.9921875  0.96142578125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2272021 s       6150 s     183183 s    1776835 s        145 s
#2  3500 MHz    1582810 s        449 s     154262 s    2808592 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1188263398258111 -0.05172625927604433
 -0.1188263398258111 0.0 -0.00973816875543857
 0.05172625927604433 0.00973816875543857 0.0])
dAA = TransformUtils.so3([0.0 -0.016037301324162836 0.09919313479718012
 0.016037301324162836 0.0 0.013232171316682717
 -0.09919313479718012 -0.013232171316682717 0.0])
dAA = TransformUtils.so3([0.0 0.0480268591935412 0.07021991448302647
 -0.0480268591935412 0.0 0.1280289425534937
 -0.07021991448302647 -0.1280289425534937 0.0])
dAA = TransformUtils.Quaternion(0.9978350428352524,[0.054417737551030375,0.007512663618232651,-0.036159328190065405])
dAA = TransformUtils.SO3([0.9531769963641143 -0.30024747681737146 -0.03612570092174469
 0.28885363442513384 0.9392890758805212 -0.1852015383599914
 0.08953877082960471 0.16609480604858853 0.9820363149710938])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8077660036714358 0.45897264581594843 0.3699435006935325
 -0.49923118254535537 0.86633478695796 0.015240186379180244
 -0.31350009519463284 -0.19699783577291907 0.9289292454292426]),[-0.3736470581960727,-0.9377597074338107,0.2455076896004652])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9544736573457672 -0.26094541387123155 -0.14452518262422925
 0.2857554758382467 0.9388648054903181 0.19203303111726444
 0.08557946869110808 -0.224589331873085 0.9706883055581482]),[0.635912241131398,-0.41352140607529136,-1.583587118914626])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.6015041561009427 -0.6090846443123891 -0.5169222826074955
 0.6687782390372653 0.7378480465454481 -0.09119170575924619
 0.43695356410436514 -0.29085418386524337 0.8511612224159274]),[1.127192970153794,1.277853698544015,-1.3176302695217454])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
