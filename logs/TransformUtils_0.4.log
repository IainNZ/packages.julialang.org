>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.640625 MB free)
Uptime: 37498.0 sec
Load Avg:  1.09521484375  1.0087890625  0.96630859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1855624 s       1282 s     135514 s    1366561 s         70 s
#2  3500 MHz    1171971 s       5761 s     113942 s    2345013 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04622046435825437 0.00787805360299066
 0.04622046435825437 0.0 0.09772569826195475
 -0.00787805360299066 -0.09772569826195475 0.0])
dAA = TransformUtils.so3([0.0 0.13464198943560243 0.0932855793984857
 -0.13464198943560243 0.0 0.20010506164409914
 -0.0932855793984857 -0.20010506164409914 0.0])
dAA = TransformUtils.so3([0.0 -0.2134606809378473 0.006219743935842459
 0.2134606809378473 0.0 0.0902887008706057
 -0.006219743935842459 -0.0902887008706057 0.0])
dAA = TransformUtils.Quaternion(0.999289518835244,[0.023565898323723893,-0.015864221604874777,-0.024767568614901286])
dAA = TransformUtils.SO3([0.983787204208664 0.17865853979141627 -0.015616113309647963
 -0.17780305136344737 0.983027407523928 0.04520167013100814
 0.023426731764122334 -0.04169223208685401 0.9988558184355076])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.986465148356388 0.0635753919860707 0.15114456858262187
 -0.06689907383781368 0.997614868573935 0.017002585681395097
 -0.149703122872745 -0.026883889860432903 0.9883654341730694]),[0.013082899648885439,-0.4054920909686547,-0.9240842717751522])
xj = TransformUtils.SE3(TransformUtils.SO3([0.911126251446188 0.3593732272519302 0.2017420071778565
 -0.36852916010713416 0.9295774850615133 0.008482771801846494
 -0.18448634658518243 -0.08207668853727275 0.9794019629970155]),[-0.834599747254705,0.18061460242882332,1.2103478080551102])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9510667345088435 0.3046084277143733 0.051824437054948796
 -0.304765250419101 0.9524141550355164 -0.005041768039672882
 -0.05089409246334567 -0.01099922967123769 0.9986434840817675]),[-1.1949505309056792,0.4734351583986114,1.991441590606076])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
