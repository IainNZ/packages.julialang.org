>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.703125 MB free)
Uptime: 42995.0 sec
Load Avg:  0.888671875  0.947265625  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2133307 s       6692 s     157336 s    1548264 s         82 s
#2  3499 MHz    1345970 s       2547 s     133503 s    2672413 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.14278876389361436 0.2553120332536862
 0.14278876389361436 0.0 0.14139242866607513
 -0.2553120332536862 -0.14139242866607513 0.0])
dAA = TransformUtils.so3([0.0 0.0416152334968247 -0.030058734258805966
 -0.0416152334968247 0.0 -0.04345517116132991
 0.030058734258805966 0.04345517116132991 0.0])
dAA = TransformUtils.so3([0.0 -0.10982561344847004 0.10078201693298183
 0.10982561344847004 0.0 0.010313398630868902
 -0.10078201693298183 -0.010313398630868902 0.0])
dAA = TransformUtils.Quaternion(0.9993019315180723,[0.002553556311585793,0.02791895615648295,-0.024691312268606005])
dAA = TransformUtils.SO3([0.9751633219078082 0.036687714378703475 0.21842734998025135
 -0.029512716696054743 0.9989151184402472 -0.0360220169441563
 -0.21951194764510415 0.028680965206445655 0.9751881393228077])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9524205977969659 -0.28825288579285596 0.09902160736001468
 0.29689489898002086 0.9508841580467033 -0.08759416039585839
 -0.06890880823025032 0.1128254927217376 0.9912224696506752]),[1.8875343013339305,-0.8036573331539588,0.6229222078024652])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8351727823441666 0.3151177769153184 0.4507629202845449
 -0.20610532064012344 0.9391837663962117 -0.2746897335934818
 -0.5099088354160334 0.13650875286872155 0.8493281697641325]),[-1.4730755683673613,-2.326193473474257,-0.9693437104153915])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7693813524278859 0.5695568754408358 0.28923571732120057
 -0.49425396453116566 0.8176230237035672 -0.29530595939645643
 -0.4046793212921344 0.08424699845044106 0.9105696514658441]),[-3.5430261278270754,-0.6586981896857538,-1.7776974719205478])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
