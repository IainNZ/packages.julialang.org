>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (463.05078125 MB free)
Uptime: 49532.0 sec
Load Avg:  1.07568359375  1.060546875  1.015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2378498 s       3968 s     204441 s    1878316 s        121 s
#2  3500 MHz    1661128 s       3228 s     175438 s    2916803 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.07307703875200035 -0.019764489944238274
 0.07307703875200035 0.0 0.04631499198311461
 0.019764489944238274 -0.04631499198311461 0.0])
dAA = TransformUtils.so3([0.0 -0.054400453796366446 0.011004599331043837
 0.054400453796366446 0.0 0.013596515831265364
 -0.011004599331043837 -0.013596515831265364 0.0])
dAA = TransformUtils.so3([0.0 -0.15245064823519483 -0.07164167928715358
 0.15245064823519483 0.0 0.25114984787940237
 0.07164167928715358 -0.25114984787940237 0.0])
dAA = TransformUtils.Quaternion(0.9970833261536785,[0.04900625866797653,-0.010276951771006083,-0.05759871161737287])
dAA = TransformUtils.SO3([0.9991800185153241 0.010226416382615358 0.03917538777965718
 -0.01258766724841126 0.9980882536972184 0.06050940806916653
 -0.03848169997492849 -0.0609529182205989 0.9973985665356819])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8167671361613126 -0.26245804126049 -0.5138163308659571
 0.4425541346643681 0.8563644163796991 0.2660560547142832
 0.37018547132257923 -0.4446973835501669 0.8156022032126419]),[0.6094287947840016,0.2222589684528244,-0.004911657403700614])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8556581973786221 -0.17171873914334337 0.4882230267877453
 0.08244026885634105 0.9765294029065148 0.19898222867869336
 -0.510933118254886 -0.1300115375113532 0.8497319276008597]),[-0.7772351528152326,-0.11784210889257375,-1.3720558294550982])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.5462177600556042 0.24378451979125124 0.8013833455406891
 0.07323515910994677 0.9391497866835697 -0.33561032409976044
 -0.8344355997139501 0.24200575630004045 0.49512669474354354]),[-1.7891915889785428,0.6806560792095506,-0.4930411679774947])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
