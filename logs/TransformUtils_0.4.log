>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.6328125 MB free)
Uptime: 46490.0 sec
Load Avg:  1.13916015625  1.04443359375  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2262975 s       4967 s     168414 s    1735720 s        116 s
#2  3499 MHz    1583615 s       1983 s     135203 s    2768243 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.021516212429145587 -0.05625662534019175
 -0.021516212429145587 0.0 -0.06719870384941329
 0.05625662534019175 0.06719870384941329 0.0])
dAA = TransformUtils.so3([0.0 0.021479173966189216 -0.08776452133545415
 -0.021479173966189216 0.0 0.10349644862049763
 0.08776452133545415 -0.10349644862049763 0.0])
dAA = TransformUtils.so3([0.0 0.0832173169600736 -0.017248870861320743
 -0.0832173169600736 0.0 0.025302868177081817
 0.017248870861320743 -0.025302868177081817 0.0])
dAA = TransformUtils.Quaternion(0.9972444219007403,[0.025839548028168374,-0.009934149759601834,0.0688272723134676])
dAA = TransformUtils.SO3([0.9989364826549036 0.005917771393940151 0.04572618071497392
 -0.002176231580811052 0.9966754411565995 -0.08144525161975176
 -0.04605613571671065 0.08125912242343662 0.9956283379784931])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9824579895469743 -0.1422675799000735 0.12056630741916909
 0.15558729658685053 0.9817481934348651 -0.10937585578259044
 -0.10280511619619319 0.1262157692079513 0.9866613845119978]),[1.3137562630052055,-0.42866745445911103,-0.28803066786528403])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9002845218211147 -0.08942990495321547 -0.4260165159584609
 -0.1232682351829125 0.8862332814074868 -0.44653724718169746
 0.4174837984451814 0.4545248761352639 0.7868382394177382]),[-0.6668559406496117,0.5291999193314169,0.6739724453393706])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8223932794523051 0.003298033068625257 -0.5689098495276392
 -0.19640662858709737 0.9401491059976014 -0.27846740336879816
 0.5339416917217953 0.34074738659275006 0.7738200620114976]),[-1.8957351303322039,1.343581431617141,0.6056086600207906])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
