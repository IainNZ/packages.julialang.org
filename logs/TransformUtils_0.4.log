>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (457.33984375 MB free)
Uptime: 46695.0 sec
Load Avg:  0.9716796875  0.9853515625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2348352 s       1211 s     179293 s    1666661 s        110 s
#2  3500 MHz    1489440 s       5606 s     152932 s    2870878 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.016938039765493386 -0.05289527781903372
 0.016938039765493386 0.0 0.028573340727049642
 0.05289527781903372 -0.028573340727049642 0.0])
dAA = TransformUtils.so3([0.0 -0.03270171799360558 0.13606221991708847
 0.03270171799360558 0.0 -0.12131394594321457
 -0.13606221991708847 0.12131394594321457 0.0])
dAA = TransformUtils.so3([0.0 0.028414639651146423 -0.10361019536481242
 -0.028414639651146423 0.0 -0.04451688962823634
 0.10361019536481242 0.04451688962823634 0.0])
dAA = TransformUtils.Quaternion(0.998531731120849,[-0.029474258765000975,0.039558955184487425,-0.022377199998348817])
dAA = TransformUtils.SO3([0.9839313114888153 -0.16862229906600135 0.05870003858257474
 0.16913330354173095 0.9855858098853412 -0.003812739922534337
 -0.057211012095229226 0.013679605635842907 0.9982683849970846])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8930027765703271 -0.4243756327888106 0.14983779006907147
 0.44084925574623507 0.8918206731509978 -0.1015274379096207
 -0.09054266809453525 0.15672016218597354 0.9834840191984439]),[-0.8448408869380735,0.49624046579107456,2.068002481414508])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9154707885813533 0.3115694621511826 0.25463249107106856
 -0.371694695532002 0.8971854208586184 0.23854008868975463
 -0.15413075153131278 -0.31302202934229173 0.9371557611084863]),[0.4322952280694144,1.5352525780284738,0.26706653400712127])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.6676120356611299 0.7020977695564411 0.24769515906507525
 -0.7441439051577217 0.6188491551070102 0.25154636081636117
 0.023324198957688613 -0.3522562209631081 0.9356129202484176]),[1.7615953588967326,0.10238406061961625,-1.6853167084975784])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
