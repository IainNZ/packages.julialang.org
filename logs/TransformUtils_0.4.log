>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (499.19140625 MB free)
Uptime: 43697.0 sec
Load Avg:  1.01318359375  0.982421875  0.99560546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2129895 s       4551 s     153408 s    1645808 s        108 s
#2  3500 MHz    1419767 s       2780 s     131555 s    2638180 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.06203083077622628 0.03373330300413893
 -0.06203083077622628 0.0 0.050111843826931214
 -0.03373330300413893 -0.050111843826931214 0.0])
dAA = TransformUtils.so3([0.0 -0.005695003291366533 0.2261147403625263
 0.005695003291366533 0.0 -0.047879273892923416
 -0.2261147403625263 0.047879273892923416 0.0])
dAA = TransformUtils.so3([0.0 0.14331060287540096 -0.12121030103506898
 -0.14331060287540096 0.0 0.24218242055918915
 0.12121030103506898 -0.24218242055918915 0.0])
dAA = TransformUtils.Quaternion(0.9962186621226227,[0.08306394549671739,0.011886060848776086,0.02252731130493428])
dAA = TransformUtils.SO3([0.9605540929764076 0.18983429133061785 0.2032210035928213
 -0.18875507055033142 0.9817094080344337 -0.024862854184940785
 -0.20422379344192682 -0.01447687852005167 0.9788171750539043])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9022318670947613 -0.4286105036849596 -0.04765180090643251
 0.4292044426347201 0.9032038994881451 0.0025024731822946562
 0.04196670610520116 -0.022710175700202284 0.9988608729439479]),[2.43326767450042,-0.186605641700085,-1.1816990974685173])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9687885092639889 0.15764059862602262 0.19130673271708837
 -0.09869970555895978 0.9532340049610635 -0.2856629130784496
 -0.2273921556268661 0.25786502952265633 0.939041231314497]),[1.0710237397138185,0.6370069879890639,1.2943306076428134])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8221666136547338 0.5621823873368538 0.08940370663313232
 -0.4992147740518897 0.7875420938998388 -0.3613337234526804
 -0.2735446376002063 0.2524448726040857 0.9281405699225085]),[-0.771650878106227,1.2715311281915926,2.5401836379674925])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
