>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.58203125 MB free)
Uptime: 48874.0 sec
Load Avg:  0.9814453125  0.98095703125  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    2391809 s       2989 s     196326 s    1787198 s        121 s
#2  3497 MHz    1548936 s       3415 s     168168 s    2969433 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.053071872693463945 -0.10226019947833427
 -0.053071872693463945 0.0 0.12348119699357846
 0.10226019947833427 -0.12348119699357846 0.0])
dAA = TransformUtils.so3([0.0 0.0015332878801793846 0.047054967667182694
 -0.0015332878801793846 0.0 0.04237458352937107
 -0.047054967667182694 -0.04237458352937107 0.0])
dAA = TransformUtils.so3([0.0 -0.017007119066829248 -0.05718707047199324
 0.017007119066829248 0.0 -0.00959630622284781
 0.05718707047199324 0.00959630622284781 0.0])
dAA = TransformUtils.Quaternion(0.9973988045064609,[-0.060808681532635876,-0.009724137544239992,-0.03746158256621899])
dAA = TransformUtils.SO3([0.999103920784744 -0.010445594469793673 -0.0410151804668067
 0.00790673616833854 0.9980707183057317 -0.06158185433912396
 0.04157930970706937 0.06120237590856591 0.9972589584392965])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9550951959275518 -0.23048350680063534 0.18620021430973943
 0.18879384954557435 0.9577201526190933 0.21709212708208395
 -0.22836385241511944 -0.17219019240404526 0.9582277853151533]),[2.2674060674813536,1.4272460689826745,1.2310500899872816])
xj = TransformUtils.SE3(TransformUtils.SO3([0.796836503090952 0.4716320004655341 -0.37764380503148964
 -0.5357936077356258 0.8404647960981244 -0.08089583691007005
 0.27924325820228085 0.26679989253486724 0.9224104401468782]),[0.6509758862789872,-0.7505563193071996,0.44833344280562415])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.5961311120715351 0.5482005908700316 -0.586603622039707
 -0.7448809577094391 0.6502863505744183 -0.14926493593095955
 0.299633202536407 0.5259313400305721 0.7960001064770175]),[-1.7762562081536242,-1.5783886089492376,-1.5237842383530844])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
