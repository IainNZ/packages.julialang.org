>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (610.734375 MB free)
Uptime: 45264.0 sec
Load Avg:  1.041015625  1.017578125  0.97265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2164638 s       2239 s     169059 s    1723638 s         95 s
#2  3499 MHz    1521688 s       4744 s     147105 s    2716938 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04504671236606575 -0.07135047609621988
 0.04504671236606575 0.0 -0.05772581431643922
 0.07135047609621988 0.05772581431643922 0.0])
dAA = TransformUtils.so3([0.0 -0.06464544417319758 0.0014671533548100855
 0.06464544417319758 0.0 0.09489482088368673
 -0.0014671533548100855 -0.09489482088368673 0.0])
dAA = TransformUtils.so3([0.0 0.04685267281859954 0.07856423054332032
 -0.04685267281859954 0.0 -0.02952981025712255
 -0.07856423054332032 0.02952981025712255 0.0])
dAA = TransformUtils.Quaternion(0.9919442012747909,[0.11667012526248151,0.049280053140329405,0.0025019574417412356])
dAA = TransformUtils.SO3([0.999535954188557 -0.029121064698158675 -0.008935316178883013
 0.03011378247700493 0.9888394655455387 0.14590980599171932
 0.004586544374426444 -0.14611117332517454 0.9892575441411818])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.801974934641448 -0.44639482729023816 0.39694818600840537
 0.45032376613693875 0.8883938604123426 0.08924603315497548
 -0.3924852989082381 0.10718212047806122 0.9134918079494405]),[1.114252892080152,1.3676405171825876,-0.36672995577710665])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9823295190092207 0.09153815708094938 -0.1632466902615069
 -0.10009889423702185 0.9939597054666519 -0.04499239136978598
 0.15814211158207814 0.06053816735638695 0.9855588276899008]),[-2.5848163963196953,-0.45958694782736337,-0.26126541112950535])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.6806582868305543 0.4972546447860694 -0.5379982479595772
 -0.5104840521982131 0.8486541491603299 0.13853579885447703
 0.5254620148214206 0.1803439861809535 0.8314840453238879]),[-3.830798087761022,0.03925164816880844,-1.5350706493089803])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
