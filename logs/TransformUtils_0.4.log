>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.140625 MB free)
Uptime: 44570.0 sec
Load Avg:  0.97509765625  1.00927734375  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2219258 s       6153 s     160763 s    1612472 s         93 s
#2  3499 MHz    1428365 s        970 s     135303 s    2714251 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11117882275002267 -0.019789016054639643
 0.11117882275002267 0.0 -0.17206774494871802
 0.019789016054639643 0.17206774494871802 0.0])
dAA = TransformUtils.so3([0.0 0.11984510144938727 0.039049482357225634
 -0.11984510144938727 0.0 -0.08190260932533204
 -0.039049482357225634 0.08190260932533204 0.0])
dAA = TransformUtils.so3([0.0 -0.0151322006819347 0.11864697556908588
 0.0151322006819347 0.0 -0.07916585505040134
 -0.11864697556908588 0.07916585505040134 0.0])
dAA = TransformUtils.Quaternion(0.9958165156195823,[0.019533625306052516,0.02070525579458267,0.08682854993697692])
dAA = TransformUtils.SO3([0.9993584347893509 0.01619129627338684 -0.03194621637011578
 -0.018641358046869446 0.9967830189150393 -0.07794942573739097
 0.03058134374986259 0.07849493695524587 0.9964453453586126])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9292256219991324 0.3035210869733362 0.21074793755301638
 -0.3555424608442548 0.8897603494278561 0.2862098515474806
 -0.10064443331420339 -0.3408833676619378 0.934702748307888]),[0.8829594445791076,2.0548878502811103,0.3139717067661302])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8996174621761899 0.3825331127478139 -0.21061063458225432
 -0.36962770606746725 0.9238717591122424 0.0991782820084766
 0.232516194392936 -0.01137498862940801 0.97252600426863]),[0.22305485148953152,2.9947862168526553,-0.8454524038308815])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.943964479442343 0.02812876017363658 -0.32884621694986926
 -0.13508811030949708 0.942008869829856 -0.30719780535493196
 0.3011349597840735 0.3344070304478832 0.8930227734962153]),[-0.8306844515862278,1.0312177350428797,-0.9537822626386845])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
