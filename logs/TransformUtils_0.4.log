>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.23046875 MB free)
Uptime: 46003.0 sec
Load Avg:  0.98583984375  0.958984375  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2247165 s       1656 s     169088 s    1700670 s        123 s
#2  3500 MHz    1559253 s       4446 s     141528 s    2737156 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.033842591409100856 0.023207286426859583
 -0.033842591409100856 0.0 -0.05753349037379523
 -0.023207286426859583 0.05753349037379523 0.0])
dAA = TransformUtils.so3([0.0 0.11724092416491956 -0.06792141683025568
 -0.11724092416491956 0.0 0.013412018899440352
 0.06792141683025568 -0.013412018899440352 0.0])
dAA = TransformUtils.so3([0.0 -0.09606035589167487 -0.2052377991351585
 0.09606035589167487 0.0 0.011706647224809989
 0.2052377991351585 -0.011706647224809989 0.0])
dAA = TransformUtils.Quaternion(0.9952459172448129,[-0.07827921545294939,-0.05622530925330696,-0.014022953860428657])
dAA = TransformUtils.SO3([0.9931365498351576 0.01412728330511964 -0.11610432053949012
 -0.0006756785787739739 0.9933549193980069 0.11508930257081976
 0.11695869715407216 -0.1142209436758268 0.9865466229154229])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8590949621673205 -0.281858106873537 -0.4272140605930426
 0.09643445059612396 0.9088926069016608 -0.405727280149766
 0.5026492243274169 0.30736010917028384 0.8080058914227528]),[0.23597570674098953,-1.6036831586198783,-0.7264274820590884])
xj = TransformUtils.SE3(TransformUtils.SO3([0.998116065938428 -0.060897747784205154 0.007468817202665898
 0.0613510741488542 0.9894468950429481 -0.13126647550174825
 0.0006038347268058751 0.13147739807541303 0.9913189845750671]),[0.18337319006663821,0.10711186482124482,-0.8009746695368314])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8636963580920464 0.10918683154795401 0.4920435314431582
 -0.22537997235854673 0.9568763991555413 0.18327963552666265
 -0.45081311990468537 -0.2691947112326769 0.8510591861710672]),[0.08231793513439195,1.5468425628149103,-0.7318782436796721])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
