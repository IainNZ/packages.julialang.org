>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (444.57421875 MB free)
Uptime: 43199.0 sec
Load Avg:  0.90087890625  0.9580078125  0.95263671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    2072988 s       3916 s     163856 s    1648259 s        100 s
#2  3495 MHz    1451032 s       2878 s     143519 s    2581749 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0734760728553174 0.030197564650398023
 -0.0734760728553174 0.0 0.13015916527577784
 -0.030197564650398023 -0.13015916527577784 0.0])
dAA = TransformUtils.so3([0.0 -0.015840245977657492 0.10259752246243736
 0.015840245977657492 0.0 -0.11187852419757555
 -0.10259752246243736 0.11187852419757555 0.0])
dAA = TransformUtils.so3([0.0 0.06727518824650912 0.061730683068209426
 -0.06727518824650912 0.0 0.055195412269919975
 -0.061730683068209426 -0.055195412269919975 0.0])
dAA = TransformUtils.Quaternion(0.9945124535723897,[0.04548079306863834,-0.05066005563417191,0.07943573449283053])
dAA = TransformUtils.SO3([0.9904942770004838 0.04852641721147201 0.12871003869903525
 -0.043548184648807026 0.9982007903437863 -0.0412157466368608
 -0.13047851487153894 0.03521887263469187 0.9908254075099502])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9937448419927046 0.10432417908188941 0.03984538457317754
 -0.06912934957553649 0.8548844829415359 -0.5141922343375541
 -0.08770588372599537 0.5082213951465175 0.8567489080676843]),[-0.9811710997998461,1.338640531389612,1.5770490806731972])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9561451607571275 0.23852764321277517 0.16997351259559756
 -0.16989048276957028 0.9243869281738378 -0.3415348165058115
 -0.2385867880354004 0.29767997991919953 0.9243716644998676]),[1.2039997778143463,0.8961920099487886,0.305508546704422])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9828342053616067 0.14702506230823578 0.11144754741347383
 -0.16674258881892118 0.9664155763980394 0.19554498911812934
 -0.07895463156258387 -0.21077135656560264 0.9743416245887846]),[2.3136100532347927,-0.7965003216783921,-0.7748183962458988])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
