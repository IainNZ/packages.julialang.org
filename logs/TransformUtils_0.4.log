>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (463.90234375 MB free)
Uptime: 48710.0 sec
Load Avg:  0.955078125  0.9814453125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2398527 s       5397 s     176227 s    1777912 s        127 s
#2  3499 MHz    1645787 s       2119 s     148636 s    2909074 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.020358123077081177 -0.19990488498885312
 0.020358123077081177 0.0 0.09965533580630498
 0.19990488498885312 -0.09965533580630498 0.0])
dAA = TransformUtils.so3([0.0 -0.06029780433073816 0.08962193141384794
 0.06029780433073816 0.0 0.17218263332986106
 -0.08962193141384794 -0.17218263332986106 0.0])
dAA = TransformUtils.so3([0.0 0.028374558987552947 0.037743358512507215
 -0.028374558987552947 0.0 -0.0025806866067309615
 -0.037743358512507215 0.0025806866067309615 0.0])
dAA = TransformUtils.Quaternion(0.9978391182857116,[-0.004686845005720077,-0.056154086414801935,-0.033791213082769216])
dAA = TransformUtils.SO3([0.9895033912246276 0.037211919413658895 -0.13963635561168658
 -0.02479494526490081 0.9956662137235808 0.08963259194433525
 0.14236660227831743 -0.08522947789879094 0.9861377625123315])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9854955455690618 0.06493203777441174 -0.15678762749018035
 -0.010544826724062237 0.9455487514295947 0.3253096452601642
 0.1693733635873619 -0.31893790797018273 0.9325187797394251]),[-1.489973885357589,-0.6504472293006686,-0.2778970821222638])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9983036489939703 -0.04300250899054106 0.0392505875859472
 0.03827620310062014 0.9927311621500012 0.11410421540200862
 -0.043872048977951265 -0.11240829113916079 0.9926931144123293]),[-0.28598756214245885,-1.519736941462454,-0.48815676721260465])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9759894267766819 -0.07188592951226758 0.2056138418450502
 0.11500636581745972 0.971734735552443 -0.20616774612505218
 -0.18498155216557302 0.22486444107279524 0.9566701670374356]),[1.160077277751769,-0.6767187324531053,-0.6676295920080267])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
