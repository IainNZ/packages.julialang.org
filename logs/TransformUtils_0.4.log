>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.15234375 MB free)
Uptime: 46727.0 sec
Load Avg:  1.01318359375  1.0146484375  0.97412109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2288190 s       2388 s     165966 s    1744816 s        117 s
#2  3501 MHz    1561957 s       3940 s     140193 s    2792754 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.035981400917546924 0.10639911179745609
 -0.035981400917546924 0.0 -0.08388197686687023
 -0.10639911179745609 0.08388197686687023 0.0])
dAA = TransformUtils.so3([0.0 -0.1734827436084608 0.08379475837025202
 0.1734827436084608 0.0 -0.054793929987277196
 -0.08379475837025202 0.054793929987277196 0.0])
dAA = TransformUtils.so3([0.0 -0.10621589922601966 0.2134755614833412
 0.10621589922601966 0.0 -0.09101561057884439
 -0.2134755614833412 0.09101561057884439 0.0])
dAA = TransformUtils.Quaternion(0.9914535393274972,[0.06751850399415785,0.0862463816031579,-0.07087095761828066])
dAA = TransformUtils.SO3([0.9875152854783661 0.14172827800968146 -0.06875068115292769
 -0.1507213092910879 0.9769986769049811 -0.15085314796681162
 0.04578916762905068 0.15933198215777958 0.9861625989609989])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9274785986501486 0.36033079521586253 0.09972545846001844
 -0.3562689445307634 0.9326713157282923 -0.05653897753401617
 -0.11338380928903641 0.01690960782396432 0.9934073570063527]),[-0.5770218369102151,-0.7895047109677857,-0.7594106730183444])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9707660946685858 0.16724982157670987 -0.17216470783659765
 -0.12194276999271049 0.9614592296901672 0.24642668380290175
 0.20674416627418346 -0.21822842808889298 0.953746928113241]),[-0.6790212008374783,1.3646691155092536,-0.49751218630792154])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9203677579383049 -0.16267386435874512 -0.3556127163111718
 0.2395603578994638 0.953300548847662 0.1839263398478499
 0.30908578917623847 -0.25447058262466926 0.9163572979509486]),[-0.8917625106834968,1.9768112258323303,0.12820516457713693])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
