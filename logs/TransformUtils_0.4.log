>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (587.12109375 MB free)
Uptime: 44761.0 sec
Load Avg:  0.98046875  0.9609375  0.96484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2223349 s       3628 s     160024 s    1628451 s        110 s
#2  3500 MHz    1441246 s       3242 s     133580 s    2758079 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.02380406433853338 0.060485150276554926
 0.02380406433853338 0.0 0.16352487655596726
 -0.060485150276554926 -0.16352487655596726 0.0])
dAA = TransformUtils.so3([0.0 0.004657346305424716 0.17744365505021154
 -0.004657346305424716 0.0 0.06245276577752162
 -0.17744365505021154 -0.06245276577752162 0.0])
dAA = TransformUtils.so3([0.0 -0.13018400377623132 0.07831400105495534
 0.13018400377623132 0.0 0.16405737229325618
 -0.07831400105495534 -0.16405737229325618 0.0])
dAA = TransformUtils.Quaternion(0.9987480739617638,[0.029591025868073714,0.04012784154406389,-0.0040512070740205885])
dAA = TransformUtils.SO3([0.9909183585117507 0.09805803418739165 -0.09200776432281324
 -0.10166246762921055 0.9941913498875055 -0.035331324407664455
 0.08800880319557658 0.04436419434819304 0.9951312822034681])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9291537845670853 0.26198015772122735 -0.2608440944031956
 -0.22003622297667258 0.9588789036735779 0.17926323847325035
 0.29708131075990357 -0.1091679671429227 0.9485910866896544]),[1.1460593710049778,0.5488780887203897,0.17750161497375877])
xj = TransformUtils.SE3(TransformUtils.SO3([0.969683364809769 -0.1907445130031256 -0.15274391238411092
 0.21361968616455537 0.9652057198856612 0.15081295694654145
 0.11866255388352877 -0.17886992217587325 0.976690713197702]),[-1.8948844929915598,-0.6937636871682937,0.2530488218545995])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8892333263934681 -0.44275011807691134 0.11504965960005786
 0.4459190615416241 0.8950709906893644 -0.0020278511278410127
 -0.10207978147040404 0.05310606904338194 0.9933576715593]),[-2.5296346337644584,-1.9964572718328473,0.6421156663986399])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
