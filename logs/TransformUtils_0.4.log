>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.9375 MB free)
Uptime: 42961.0 sec
Load Avg:  1.044921875  1.0537109375  1.015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2138486 s         59 s     162436 s    1556843 s         96 s
#2  3500 MHz    1379385 s       6913 s     137102 s    2640913 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.008015191149616293 0.1473527547364667
 -0.008015191149616293 0.0 -0.10486385657154065
 -0.1473527547364667 0.10486385657154065 0.0])
dAA = TransformUtils.so3([0.0 -0.07389950208445702 -0.01738928108260088
 0.07389950208445702 0.0 -0.13117879402418645
 0.01738928108260088 0.13117879402418645 0.0])
dAA = TransformUtils.so3([0.0 -0.003251659904255447 -0.035481603859730065
 0.003251659904255447 0.0 -0.005264467233394011
 0.035481603859730065 0.005264467233394011 0.0])
dAA = TransformUtils.Quaternion(0.9981296253183922,[0.06020965790071295,0.009696111710840808,0.004246595687848378])
dAA = TransformUtils.SO3([0.9969382673510907 0.03399191250835985 0.07041761835669619
 -0.0382345597396455 0.9974775587094864 0.05980500240346802
 -0.06820710763931268 -0.062314282110823876 0.9957232149108968])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.993644321095063 -0.0888238567936893 -0.06914684099671882
 0.06762628891288887 0.9621180621420462 -0.2641127023600043
 0.0899869335148266 0.25775794258243123 0.9620099764723182]),[0.455540401018275,0.3087253666523085,-0.36500240045830434])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9666095141382655 0.25403157155164097 -0.03367503277489187
 -0.25296632796681434 0.966915922718181 0.0328882244737354
 0.0409155727367057 -0.023271421294201067 0.9988915641142312]),[0.06694812057563067,0.21061134235475412,2.8206918112436234])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9470407473832081 0.3157118401545577 0.05865029225909983
 -0.3186951444616606 0.9017248162135639 0.2921057355157136
 0.03933481527115788 -0.29532759744195564 0.9545859743871927]),[-0.10608674680977692,0.7612569758480988,3.1174527023723337])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
