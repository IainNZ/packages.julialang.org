>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (452.8984375 MB free)
Uptime: 50038.0 sec
Load Avg:  1.005859375  1.02099609375  1.0390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2465700 s       6050 s     185917 s    1847610 s        119 s
#2  3499 MHz    1616695 s         84 s     160296 s    3033357 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.15330004601634548 0.10319282478320012
 0.15330004601634548 0.0 0.19452513678813127
 -0.10319282478320012 -0.19452513678813127 0.0])
dAA = TransformUtils.so3([0.0 -0.05536785526654482 0.07283056968663047
 0.05536785526654482 0.0 0.09218442908095059
 -0.07283056968663047 -0.09218442908095059 0.0])
dAA = TransformUtils.so3([0.0 -0.01603036141383343 -0.000196960163160373
 0.01603036141383343 0.0 0.23031545446705098
 0.000196960163160373 -0.23031545446705098 0.0])
dAA = TransformUtils.Quaternion(0.9930282775765743,[0.035308713699027244,-0.11233448810608095,-0.00539420542497867])
dAA = TransformUtils.SO3([0.9994675081105636 0.029666285221013316 -0.013587190748865649
 -0.028308809881928482 0.9954423458712108 0.09106671911016438
 0.016226876296114474 -0.0906335896211015 0.9957520981238576])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9788501769261824 0.03595571289963054 -0.2013939369530792
 -0.06718604685972951 0.9863311641413356 -0.15045554077853038
 0.19323138005754584 0.16080429519598388 0.9678861567393033]),[-1.9815767613861588,0.26417398944034176,-1.4301914151534214])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9556775089838476 0.06291401906159601 0.2876148901360026
 0.04085624531082445 0.9391095422878063 -0.341180355242046
 -0.29156691520391925 0.3378092565183851 0.8949154374403016]),[1.2747929227732389,-0.920571542883679,-0.19154937458821583])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8763802517372722 0.06376368980827388 0.47738019044253377
 0.02777464183569337 0.9828563059128276 -0.18226917237505944
 -0.48081828546324495 0.17299616697899528 0.8595848431509021]),[3.5064409212237693,-0.8522873863164986,0.7213029031016274])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
