>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.34375 MB free)
Uptime: 49032.0 sec
Load Avg:  0.85888671875  0.93212890625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2217982 s         62 s     165844 s    2060401 s        119 s
#2  3496 MHz    1581218 s       6508 s     137294 s    3014407 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.17114838588900746 -0.11762556277136318
 -0.17114838588900746 0.0 0.24272650092063355
 0.11762556277136318 -0.24272650092063355 0.0])
dAA = TransformUtils.so3([0.0 0.03966019870468318 0.10330297009193246
 -0.03966019870468318 0.0 0.11922564556793121
 -0.10330297009193246 -0.11922564556793121 0.0])
dAA = TransformUtils.so3([0.0 -0.012901116984141757 -0.18727614822089872
 0.012901116984141757 0.0 0.07780739256228625
 0.18727614822089872 -0.07780739256228625 0.0])
dAA = TransformUtils.Quaternion(0.9968570828748357,[0.054415972216904876,0.03089230897441664,0.048585219318133116])
dAA = TransformUtils.SO3([0.9967735764564116 0.029271051571806234 0.07473715821580994
 -0.031083784780316925 0.999247317846542 0.023207673304813718
 -0.07400159188845389 -0.025455909262343885 0.9969331778417259])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8150102603691951 -0.4608322902382465 -0.3512717975680791
 0.41577683901682155 0.8873342714889264 -0.19941792993208077
 0.40359372595484805 0.0164769813676183 0.9147899285928405]),[-0.17712169686494775,1.9227223241769023,0.5250997086540489])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8475617420080495 -0.5091973881825015 -0.1495229525939065
 0.4621606494475562 0.8466925775089118 -0.2636649640993823
 0.26085748520311597 0.15436871140044633 0.9529552315581629]),[1.5592689347397413,-2.4232745905346476,2.48070887689259])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9882076543745523 -0.0006636890213192609 0.15311822671526848
 0.023805308423804718 0.9884974703999153 -0.1493521285546864
 -0.15125785641213133 0.15123594324713632 0.9768565659009291]),[0.39748291191199536,-4.624314341891908,2.045696221147275])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
