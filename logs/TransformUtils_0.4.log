>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.33203125 MB free)
Uptime: 43142.0 sec
Load Avg:  1.0107421875  1.02685546875  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    2145304 s       5669 s     152686 s    1574128 s         89 s
#2  3495 MHz    1396198 s       1166 s     128811 s    2653621 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.018462594346157223 -0.11757069926483024
 0.018462594346157223 0.0 -0.0020096750090430483
 0.11757069926483024 0.0020096750090430483 0.0])
dAA = TransformUtils.so3([0.0 -0.03306097098256208 -0.18146810951577722
 0.03306097098256208 0.0 0.05377087132340293
 0.18146810951577722 -0.05377087132340293 0.0])
dAA = TransformUtils.so3([0.0 0.018759537184338437 0.04431980280783849
 -0.018759537184338437 0.0 -0.006670733520752689
 -0.04431980280783849 0.006670733520752689 0.0])
dAA = TransformUtils.Quaternion(0.9984661343472054,[-0.04676541029141257,0.02870703391079254,-0.007367575318171421])
dAA = TransformUtils.SO3([0.9945989880087117 -0.079357776452431 -0.0668969085128233
 0.08010610058703047 0.9967494599595353 0.008574772248623127
 0.0659989825738823 -0.01388731028317534 0.997723046196845])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9315686432067105 -0.0865558089458586 0.35311181647140694
 0.10982106267880686 0.9928700275728468 -0.04635129490739054
 -0.3465821651298666 0.0819585278370856 0.9344322353861042]),[0.032195332327319484,-0.3466071446583387,0.028261408612934046])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9487988138746156 0.22567326657184578 -0.2210257621747184
 -0.15188684137140737 0.939447370159577 0.30719542008055967
 0.27696786493804565 -0.2578957453217234 0.9256233501465989]),[0.3642601462589542,-0.45708466837492034,0.6664955306014654])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7711987270893522 0.4027833130614793 -0.4929686866880908
 -0.21022806277366732 0.8920790485459809 0.3999989159581917
 0.6008799255743145 -0.20484280281356188 0.7726465823242152]),[0.07600784525575902,-0.08612323155739599,0.7187633232254955])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
