>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.9453125 MB free)
Uptime: 49667.0 sec
Load Avg:  1.021484375  0.97412109375  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2274750 s         60 s     170692 s    2015577 s        126 s
#2  3500 MHz    1554939 s       6140 s     141094 s    3063203 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.125660000440986 -0.08281669222552929
 -0.125660000440986 0.0 0.05668261415407693
 0.08281669222552929 -0.05668261415407693 0.0])
dAA = TransformUtils.so3([0.0 0.08933134619533885 0.12485634068391434
 -0.08933134619533885 0.0 -0.0172037060187787
 -0.12485634068391434 0.0172037060187787 0.0])
dAA = TransformUtils.so3([0.0 0.18066795435058688 0.04863265748449713
 -0.18066795435058688 0.0 0.1603758033879018
 -0.04863265748449713 -0.1603758033879018 0.0])
dAA = TransformUtils.Quaternion(0.9988106739367755,[0.03223269819647258,0.02435895108509388,-0.027293447912888017])
dAA = TransformUtils.SO3([0.9906528384170051 -0.08785169017126855 0.1043505355538854
 0.08185502462460105 0.9948105361685521 0.06042972837721581
 -0.10911786599836537 -0.051323266284303885 0.9927029836048008])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9284839047412461 -0.2317439420226366 0.29019370077976797
 0.2335641004126441 0.9719130707927321 0.028858167313152126
 -0.2887307563022702 0.040984486797450856 0.9565327083832882]),[0.01741793853710387,0.052877266421329484,1.385056656917719])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9526038504180099 -0.3030673032842897 0.026383969541563378
 0.281795546531699 0.8464035008014972 -0.451876513868414
 0.11461751229058684 0.43789419214115893 0.891690250235674]),[0.18386420068988402,-0.04411375469270968,-0.6362717769056087])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9172010650244795 -0.21013716217927095 -0.3385034407346598
 0.057818143402758364 0.9108115058914629 -0.4087535480325323
 0.39420713921924155 0.3553375491092497 0.8475470238173296]),[0.715508742251687,-0.21568286260583114,-1.8879640876572856])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
