>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.4921875 MB free)
Uptime: 41859.0 sec
Load Avg:  1.06201171875  1.05322265625  1.00634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2062796 s         62 s     168921 s    1531206 s         86 s
#2  3499 MHz    1382498 s       6192 s     149537 s    2516569 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.02379272633731268 -0.06308124366937151
 0.02379272633731268 0.0 -0.12689783934824558
 0.06308124366937151 0.12689783934824558 0.0])
dAA = TransformUtils.so3([0.0 -0.04291729365804207 0.022010630494129983
 0.04291729365804207 0.0 -0.14053397805548598
 -0.022010630494129983 0.14053397805548598 0.0])
dAA = TransformUtils.so3([0.0 -0.10985677181883975 0.02370565675275122
 0.10985677181883975 0.0 0.1620856207909084
 -0.02370565675275122 -0.1620856207909084 0.0])
dAA = TransformUtils.Quaternion(0.9965390300789655,[0.0793325803981987,0.008324520874298118,-0.023388150180192892])
dAA = TransformUtils.SO3([0.9792317018391772 -0.17016428685897517 -0.11022426951867652
 0.16735813102916752 0.9852994247373092 -0.03429722424267398
 0.11444007205333902 0.015138001522812583 0.9933148095233064])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9844573836585025 -0.1319730317972982 0.1158739773999543
 0.13193867466708314 0.9912255943349297 0.008000453890804593
 -0.11591309627194586 0.007412153101131583 0.9932317021214415]),[-0.5658437751504131,-1.3465618269408102,0.339954557656172])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9654599138973761 0.17788020150961453 0.1903832675635393
 -0.22950916597486642 0.9264913306407307 0.29822702255343886
 -0.12333976402925566 -0.33162094047039165 0.935315376998978]),[0.6180287156874016,1.6728270615314802,-0.5558203992054934])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9344696996219849 0.3357947260366205 0.11835659024485572
 -0.35582424457898854 0.8924285051882723 0.27741750142559146
 -0.012469461022427103 -0.3013523935418747 0.9534313019029705]),[1.6676782319777257,2.8300166825025252,-0.7283755892930743])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
