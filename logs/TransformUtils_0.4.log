>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.890625 MB free)
Uptime: 42756.0 sec
Load Avg:  1.048828125  1.00244140625  1.01416015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2082070 s        638 s     157630 s    1590626 s         84 s
#2  3499 MHz    1436488 s       6080 s     132430 s    2548570 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.09183289462226084 0.08025987305778513
 -0.09183289462226084 0.0 -0.16122489602747547
 -0.08025987305778513 0.16122489602747547 0.0])
dAA = TransformUtils.so3([0.0 0.11236800848069084 -0.08124669935104754
 -0.11236800848069084 0.0 -0.11475763075774355
 0.08124669935104754 0.11475763075774355 0.0])
dAA = TransformUtils.so3([0.0 -0.14272440921756988 -0.13601693278154098
 0.14272440921756988 0.0 0.08790619674124049
 0.13601693278154098 -0.08790619674124049 0.0])
dAA = TransformUtils.Quaternion(0.985802671865844,[0.055362018792856245,-0.15056313432525037,0.04958711122357302])
dAA = TransformUtils.SO3([0.9939534919824677 0.012647441285009975 -0.1090710685965871
 -0.0032985908603455506 0.9963351736461774 0.0854712878911873
 0.10975233516511268 -0.08459470423368357 0.9903525437648055])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9677214983081244 -0.24855554557158985 -0.04165624176384926
 0.24553689457825878 0.9671065394085034 -0.06645731588150203
 0.05680435822315044 0.05408402905588673 0.9969193461298351]),[-0.5087643665270956,-0.22191760490064485,-0.3095081013169076])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8544815165377262 -0.027176780280488682 -0.5187704314135239
 -0.13802815974186117 0.9508570547179886 -0.27716256711776077
 0.5008089106771791 0.30843521865477364 0.8087386171561979]),[1.3592209858143651,-1.5815371461620562,-0.22525088971699025])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8214572565165704 0.22469139852016065 -0.5241390570710446
 -0.31878829175623796 0.9430164344375558 -0.09536262066354381
 0.4728445841451597 0.24542571139090866 0.846276680189675]),[1.4786390008468695,-1.774638098352133,0.09654106017872027])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
