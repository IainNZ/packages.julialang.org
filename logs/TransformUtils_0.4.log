>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.125 MB free)
Uptime: 42721.0 sec
Load Avg:  0.96240234375  0.912109375  0.9462890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2121834 s       1235 s     160964 s    1524777 s        103 s
#2  3500 MHz    1322391 s       5995 s     137760 s    2638064 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.016099740241707867 0.0479233284882003
 -0.016099740241707867 0.0 -0.07810423795485993
 -0.0479233284882003 0.07810423795485993 0.0])
dAA = TransformUtils.so3([0.0 0.06991835499337509 -0.005446831482217863
 -0.06991835499337509 0.0 -0.059834905007366795
 0.005446831482217863 0.059834905007366795 0.0])
dAA = TransformUtils.so3([0.0 0.10722052629422524 0.08207093533521308
 -0.10722052629422524 0.0 -0.06571276476872497
 -0.08207093533521308 0.06571276476872497 0.0])
dAA = TransformUtils.Quaternion(0.9989647234350532,[0.0037453668648249703,-0.04513874974144632,0.004236370044582959])
dAA = TransformUtils.SO3([0.9883028453942772 -0.12846043748081656 0.0821912512851136
 0.13418167606140916 0.9885979037435012 -0.0683334656175593
 -0.07247595183870666 0.07856271836050686 0.9942711580292779])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9991938142974496 0.04002837583169225 0.0030741824914329507
 -0.040094670574583005 0.9910995973618091 0.12694095281183118
 0.0020344191381091847 -0.12696187316488633 0.9919055115792198]),[1.1125286636797591,-0.35881335801132813,0.3096761078004778])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9579048077094057 -0.10936616194703509 -0.2654381698026521
 0.2076456959348466 0.902415505323585 0.3775308208760073
 0.19824642323870534 -0.4167556818719495 0.88713756391019]),[0.4392055779477083,0.5241696451824615,0.27242601141575684])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9492103890917868 -0.1463079006533916 -0.27855634160186704
 0.21897120204629117 0.9429179761681452 0.2509129388719753
 0.22594523653890347 -0.2991649852930094 0.9270647559151478]),[-0.708258957232129,0.8529014114234255,0.07306820978997497])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
