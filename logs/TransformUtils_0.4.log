>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.28125 MB free)
Uptime: 49387.0 sec
Load Avg:  0.896484375  0.966796875  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3493 MHz    2382548 s       4706 s     176447 s    1870153 s        123 s
#2  3493 MHz    1693559 s       1768 s     147946 s    2928175 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0054663881381462704 0.14527571832746083
 -0.0054663881381462704 0.0 -0.017371210988725887
 -0.14527571832746083 0.017371210988725887 0.0])
dAA = TransformUtils.so3([0.0 -0.031573459264471804 0.009958116275320053
 0.031573459264471804 0.0 0.0903535445481488
 -0.009958116275320053 -0.0903535445481488 0.0])
dAA = TransformUtils.so3([0.0 -0.05313370373490879 0.172815159394913
 0.05313370373490879 0.0 -0.08830034933721348
 -0.172815159394913 0.08830034933721348 0.0])
dAA = TransformUtils.Quaternion(0.9983137470890778,[0.026353051832304807,0.046714434598941534,0.022202266375073082])
dAA = TransformUtils.SO3([0.9840732840542078 0.15354744934777143 -0.0895709350713753
 -0.16614753922412218 0.9736295800586051 -0.15633437256302155
 0.06320416774656352 0.16872646986675924 0.9836343891638631])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9943930346104972 0.0846775639001127 -0.06334195205445421
 -0.09094519361810523 0.990444856777837 -0.10367235620017262
 0.0539579880637872 0.10885171498085111 0.9925924841896778]),[1.2421656700099424,-0.5818612887355423,-0.7562737368240825])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8371801286036358 -0.11343563246100694 -0.5350343816610025
 0.04600887117812797 0.9893942499753333 -0.13777591185930171
 0.5449886384541557 0.09072692766714298 0.8335202508349553]),[-1.409473134206398,-0.7604161294626597,0.5517659753327127])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8577082933489395 -0.19788481194438065 -0.4745293296754027
 0.17578257160108368 0.9802107748688799 -0.09103474255612465
 0.48315315485026045 -0.005332732197206952 0.8755196119594085]),[-2.549953261478744,-0.2590006720036806,1.4848215663599929])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
