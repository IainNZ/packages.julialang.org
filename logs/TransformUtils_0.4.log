>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (465.59375 MB free)
Uptime: 44361.0 sec
Load Avg:  1.0107421875  0.96044921875  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2133772 s       2330 s     163188 s    1653363 s         34 s
#2  3500 MHz    1392434 s       6286 s     135747 s    2728084 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.15251747242669506 -0.021200251290529878
 -0.15251747242669506 0.0 -0.1804739754065448
 0.021200251290529878 0.1804739754065448 0.0])
dAA = TransformUtils.so3([0.0 -0.09122984562117692 -0.014633398923882879
 0.09122984562117692 0.0 0.005782511523506781
 0.014633398923882879 -0.005782511523506781 0.0])
dAA = TransformUtils.so3([0.0 -0.06265683515560498 0.06456813506523315
 0.06265683515560498 0.0 -0.07440059307598797
 -0.06456813506523315 0.07440059307598797 0.0])
dAA = TransformUtils.Quaternion(0.997609885269131,[-0.0010098874288723106,-0.06909048875363276,3.6117537020830535e-5])
dAA = TransformUtils.SO3([0.9916480541995594 0.09455275340865257 0.08771495553821139
 -0.10475700311023109 0.9872141845332978 0.12014209984688529
 -0.07523368196220957 -0.12832743541074315 0.9888740882535607])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9205629150087052 0.38723986031556357 0.05108042769454985
 -0.3189305678934737 0.8207067081040772 -0.47405041096503153
 -0.2254932645863767 0.4201021183661798 0.87901478814092]),[1.9841032798055236,-1.297232631996072,0.8211616998073198])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9875034603725319 0.12471332842325299 0.09635092872343956
 -0.12311527882985261 0.9921399958612703 -0.02237982866436366
 -0.09838467294717777 0.010237886793301997 0.9950957952896216]),[-0.2603875094963816,0.33282258743353577,0.8097993658184781])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.970509370943412 -0.20392588167160328 -0.12855269618130394
 0.24002755733015788 0.8668508797892647 0.43698549624752486
 0.022323365184065774 -0.45495470872718424 0.8902347333000561]),[-2.5835072907558927,0.4638676128588075,-0.8973655557443075])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
