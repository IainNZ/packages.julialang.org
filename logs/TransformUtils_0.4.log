>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.2734375 MB free)
Uptime: 44268.0 sec
Load Avg:  1.15771484375  1.04248046875  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2166386 s       7109 s     162173 s    1644309 s         91 s
#2  3499 MHz    1494798 s        222 s     137102 s    2635981 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.09225949150484693 0.12750768962569767
 -0.09225949150484693 0.0 0.024213627634696044
 -0.12750768962569767 -0.024213627634696044 0.0])
dAA = TransformUtils.so3([0.0 -0.11311234582456951 -0.04736240959840012
 0.11311234582456951 0.0 0.11319533389406443
 0.04736240959840012 -0.11319533389406443 0.0])
dAA = TransformUtils.so3([0.0 0.01186832236373194 0.1275034357614854
 -0.01186832236373194 0.0 0.016676522432435874
 -0.1275034357614854 -0.016676522432435874 0.0])
dAA = TransformUtils.Quaternion(0.9951379575505074,[0.06650378827491679,0.051720804682667175,-0.051016173418505055])
dAA = TransformUtils.SO3([0.9799211903258928 0.12157168577480734 -0.15803412912455805
 -0.1318337933301962 0.98968176206132 -0.056123620511975024
 0.1495804522203924 0.07583096373561776 0.985837386820195])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9961235171537407 0.08092896364487066 0.034473778682187345
 -0.08558761984944874 0.9821738010314439 0.1673600427101754
 -0.02031496743210489 -0.16966180304008524 0.9852929385149474]),[1.162599526700977,1.38514630015929,0.5209924298295782])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9502942963185935 0.18697466865639953 -0.248960285317114
 -0.23924645242637008 0.9502268402883525 -0.19957476543143074
 0.19925331963544754 0.24921762633578623 0.9477281727045]),[-0.14723152723052704,-1.0167877058467683,0.6488440406620064])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9630392065014809 0.09985936302080782 -0.25016713284937453
 -0.19188094247527349 0.906136861896816 -0.3769584744061234
 0.189042827570365 0.41102809530355666 0.8918064331542644]),[-1.1017750030201343,-2.4868114570656084,-0.3211713143655348])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
