>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (455.0546875 MB free)
Uptime: 45730.0 sec
Load Avg:  1.15966796875  1.056640625  1.03125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2254468 s       5673 s     181096 s    1655770 s        119 s
#2  3500 MHz    1497889 s       1359 s     156515 s    2763322 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.22106946245198433 -0.04863029226622981
 -0.22106946245198433 0.0 0.16240468223281174
 0.04863029226622981 -0.16240468223281174 0.0])
dAA = TransformUtils.so3([0.0 -0.12354687937422074 -0.047137813121109144
 0.12354687937422074 0.0 0.04757756661345108
 0.047137813121109144 -0.04757756661345108 0.0])
dAA = TransformUtils.so3([0.0 0.05909530717591169 -0.13871299418343983
 -0.05909530717591169 0.0 -0.1253826939087222
 0.13871299418343983 0.1253826939087222 0.0])
dAA = TransformUtils.Quaternion(0.996679169933754,[-0.07034501041096895,0.040425795282015946,0.006925807264154789])
dAA = TransformUtils.SO3([0.9931387915859959 -0.10902665637078086 0.042291001971054815
 0.10348337802605607 0.9877963621093089 0.11640248054028632
 -0.05446587114353785 -0.11122740311732099 0.9923013320944163])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9815729250018542 0.15752581911902624 -0.10816750535250476
 -0.17390354598362273 0.9710099565584701 -0.1640037223926337
 0.07919690396490472 0.17979232624113262 0.9805113817937943]),[-0.06233928610254077,-1.07223616559426,0.1816118437813974])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9740999678212399 -0.01424095860740049 -0.22566888972253515
 -0.01606537879258984 0.9911338626641395 -0.13189226620508596
 0.22554635065748688 0.13210170846134034 0.965234677333282]),[-0.7896597268765089,-1.1506216317852402,-1.0114605469580618])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9768065536707637 -0.1758781863382226 -0.12213034134162963
 0.17839775563127766 0.9839084037241559 0.009924407624937598
 0.11841958238217384 -0.03148200519916766 0.992464450676734]),[-0.7947741814925232,-0.4051900768209662,-1.0782931125167656])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
