>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.97265625 MB free)
Uptime: 46197.0 sec
Load Avg:  1.0224609375  0.9814453125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2315200 s       6478 s     174422 s    1623549 s        173 s
#2  3501 MHz    1495001 s        214 s     148008 s    2801187 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.016362985873897454 0.07310932209995209
 0.016362985873897454 0.0 0.004380130635849378
 -0.07310932209995209 -0.004380130635849378 0.0])
dAA = TransformUtils.so3([0.0 0.14378822968921887 0.05099713735190484
 -0.14378822968921887 0.0 -0.09697018099051175
 -0.05099713735190484 0.09697018099051175 0.0])
dAA = TransformUtils.so3([0.0 0.16096922403289138 0.04533644040613643
 -0.16096922403289138 0.0 -0.10555486601458056
 -0.04533644040613643 0.10555486601458056 0.0])
dAA = TransformUtils.Quaternion(0.989434926710484,[0.07885233480677638,-0.012820538784142273,0.12098127494047829])
dAA = TransformUtils.SO3([0.9841431217286808 0.15672267133025589 0.08306816625660982
 -0.15734584387148012 0.9875430865063634 0.0009683542003362062
 -0.08188163023840564 -0.014023429844160634 0.9965433969702008])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9705079504586203 0.08550914620836433 0.22539410820011402
 -0.06309835995228484 0.9924858929241251 -0.10483486689996727
 -0.23266481269831077 0.08752107324135443 0.9686109366875543]),[-0.11281149855469816,0.07029724711574112,0.35301589634796615])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8140158243897698 -0.5759697909315905 -0.07508020762666721
 0.5778989216674957 0.7900985075765282 0.20439467865110528
 -0.058404400335841065 -0.20976927386908426 0.9760050090864534]),[-0.7389367968214421,0.6952119551155692,2.3281636821895155])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7671330040588826 -0.5600312525373137 -0.3128449300613364
 0.6380507096353101 0.716551705743657 0.2818597965828631
 0.06631927334849241 -0.415834882107482 0.9070188006900325]),[-1.1066380627803076,0.739546646323519,1.7065119434789757])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
