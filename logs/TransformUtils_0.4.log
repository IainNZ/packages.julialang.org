>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (457.8671875 MB free)
Uptime: 50023.0 sec
Load Avg:  1.10791015625  1.0498046875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2425671 s       3250 s     190845 s    1885648 s        118 s
#2  3500 MHz    1685678 s       4863 s     167032 s    2969324 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08014723117973822 -0.10141324972315613
 0.08014723117973822 0.0 -0.20298277119412755
 0.10141324972315613 0.20298277119412755 0.0])
dAA = TransformUtils.so3([0.0 -0.0843496385517668 -0.08744033375529413
 0.0843496385517668 0.0 0.07525445418663614
 0.08744033375529413 -0.07525445418663614 0.0])
dAA = TransformUtils.so3([0.0 0.01153857335085555 0.08443124092686381
 -0.01153857335085555 0.0 -0.0035138628172890693
 -0.08443124092686381 0.0035138628172890693 0.0])
dAA = TransformUtils.Quaternion(0.9983642875544296,[-0.030411493175933082,-0.042046136757794596,-0.02400026671708724])
dAA = TransformUtils.SO3([0.9953340087066734 -0.07104616895167166 0.06528899592729777
 0.06624848341764346 0.9951347683997825 0.07292414666469527
 -0.0701523310857622 -0.06825858626724032 0.9951981791804242])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9083351300693968 -0.1705062756550591 0.3819095461546527
 0.10208402850174951 0.9758940751005213 0.19289791421514133
 -0.4055935682511075 -0.13622908700398392 0.903844839144084]),[0.8050425354541311,-0.5367007478807558,-0.6335003208601893])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9989839325571986 -0.0022889477941333424 0.04500959020642326
 0.0024455197594573635 0.9999911482019296 -0.0034238795090692814
 -0.04500135470916986 0.0035304724587869266 0.998980687420211]),[-0.34172367257052283,-0.644411246924301,1.1548103191760637])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9259141088580327 0.09857205626006524 -0.3646458730635764
 -0.16181596806980436 0.9757947636070238 -0.1471059883034841
 0.34131899375110575 0.1952130350201422 0.9194526716818857]),[-1.7779708480132879,-0.15320312843700656,1.1576172501264617])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
