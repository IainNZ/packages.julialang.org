>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.265625 MB free)
Uptime: 44655.0 sec
Load Avg:  1.158203125  1.06884765625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2156638 s       4966 s     159419 s    1697558 s        108 s
#2  3499 MHz    1466903 s       1489 s     135926 s    2680708 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11940024879198151 0.00031802638304751315
 0.11940024879198151 0.0 -0.04518743333739497
 -0.00031802638304751315 0.04518743333739497 0.0])
dAA = TransformUtils.so3([0.0 0.0035678116214453975 -0.0103485243854359
 -0.0035678116214453975 0.0 0.11213188272325976
 0.0103485243854359 -0.11213188272325976 0.0])
dAA = TransformUtils.so3([0.0 -0.04693027577506653 -0.11204983098365227
 0.04693027577506653 0.0 -0.013512991345684964
 0.11204983098365227 0.013512991345684964 0.0])
dAA = TransformUtils.Quaternion(0.9996256638376682,[-0.0015472120346693564,0.003830083675336542,-0.027045679711571145])
dAA = TransformUtils.SO3([0.9646053609289171 -0.172705393067514 -0.19927203735745022
 0.16095227795620579 0.9841938999564268 -0.07386969276548458
 0.2088800179239312 0.039181813306102715 0.977156038521046])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9705197001855165 -0.21596235284441187 -0.10701296045676444
 0.2409209228961236 0.8564041197739362 0.4566498577084084
 -0.006972837492395408 -0.46896934418801334 0.8831869189187356]),[-0.38655574597828135,-1.4808097577098867,-0.0837683020609798])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9369414543820787 0.18767190486391921 0.29482192453266304
 -0.18363883381057008 0.9821143120659624 -0.04157230751227436
 -0.29735078573477663 -0.015189936140396819 0.9546474616647559]),[-1.7114888255099667,2.4296901746374115,0.003065428688856623])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.867151080784231 0.4188570842504256 0.2694582455000625
 -0.22016473181184368 0.8076802911950504 -0.5469735259418844
 -0.4467398504285902 0.4149834818258555 0.7925983950593966]),[-0.34435787992000155,3.59438155989183,2.004204664042085])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
