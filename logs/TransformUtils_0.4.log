>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (452.76953125 MB free)
Uptime: 48938.0 sec
Load Avg:  0.9619140625  0.96044921875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2382989 s       1280 s     186360 s    1836537 s        127 s
#2  3500 MHz    1649692 s       5122 s     162867 s    2911632 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.026111500152835816 0.1177560383385806
 -0.026111500152835816 0.0 -0.0668524888351984
 -0.1177560383385806 0.0668524888351984 0.0])
dAA = TransformUtils.so3([0.0 -0.07896665739954117 0.05594622472967495
 0.07896665739954117 0.0 0.08456081953458289
 -0.05594622472967495 -0.08456081953458289 0.0])
dAA = TransformUtils.so3([0.0 -0.013184993069411339 0.0055026875768259655
 0.013184993069411339 0.0 -0.06383434575028128
 -0.0055026875768259655 0.06383434575028128 0.0])
dAA = TransformUtils.Quaternion(0.9961344747818945,[0.06870839121211417,-0.05064779097987502,0.02073804226297866])
dAA = TransformUtils.SO3([0.9823758143813087 -0.022437498881650704 -0.18556486187475607
 0.05051734179208559 0.9876946799311203 0.14801086924285056
 0.17996043314274107 -0.15477654176165884 0.9714208483573837])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9611043617091962 -0.2621781181143203 -0.08683916331697385
 0.2711015753878756 0.955616503790684 0.11533010667246263
 0.05274790731176468 -0.13438650253988735 0.9895240907675398]),[0.6131974655502075,-0.5365592074848091,0.4544984598141083])
xj = TransformUtils.SE3(TransformUtils.SO3([0.957219483165805 -0.1415817152100765 -0.2523598204270287
 0.09020798396891637 0.9746687999891873 -0.2046539761546338
 0.27494250430963396 0.17313390264708553 0.9457437660794474]),[0.6717715697305221,0.8750618578506836,-1.2686875124420012])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9589459886836043 0.1372918941811577 -0.24814013496364276
 -0.20170632601812066 0.9452623590048809 -0.2565026913948453
 0.19934178897535926 0.29602366196079233 0.9341481909886815]),[0.34809406772857415,1.565184474766251,-1.5474181505729279])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
