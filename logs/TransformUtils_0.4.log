>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.25 MB free)
Uptime: 46245.0 sec
Load Avg:  1.59326171875  1.1298828125  1.01416015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2104892 s       1350 s     165313 s    1916150 s         80 s
#2  3500 MHz    1428741 s       5646 s     139650 s    2897408 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04914361173203346 -0.16257083707646042
 0.04914361173203346 0.0 0.054714917589302726
 0.16257083707646042 -0.054714917589302726 0.0])
dAA = TransformUtils.so3([0.0 -0.01192138337041574 0.0455459019812792
 0.01192138337041574 0.0 0.08311155318965179
 -0.0455459019812792 -0.08311155318965179 0.0])
dAA = TransformUtils.so3([0.0 0.008296479182044961 -0.049051956161417776
 -0.008296479182044961 0.0 0.08996108892005399
 0.049051956161417776 -0.08996108892005399 0.0])
dAA = TransformUtils.Quaternion(0.9979648507452175,[0.017751757147326904,0.010104435093423065,-0.060406391935796895])
dAA = TransformUtils.SO3([0.990089929834087 0.11701793154328168 -0.07764492603167779
 -0.11047954364320885 0.9903429973752437 0.08375570420100432
 0.08669602803774336 -0.07434750330138644 0.9934567164579083])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8961622231566178 -0.1849406661774622 0.4033487570091481
 0.31417606408857457 0.9063737016343232 -0.2824537373438465
 -0.3133475235912998 0.37984689412910994 0.8703618020568622]),[-0.7835480307726969,0.29418253604057415,0.756981179643059])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9989550578294867 -0.03484180254925162 0.029577715124836174
 0.0299799743535733 0.9880283245860442 0.1513315266342535
 -0.03449628349034265 -0.15028665479946532 0.9880404484708813]),[0.8372869760759664,1.094012602469434,0.5550972969468884])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.915454100806705 0.3262828941053838 -0.23554885338375658
 -0.17067765968938425 0.8448806369942632 0.5069968892558643
 0.36443507761896676 -0.4239294543274664 0.8291386445911653]),[1.767078380013734,0.34850166624034296,0.2521347738768385])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
