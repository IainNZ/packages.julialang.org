>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.95703125 MB free)
Uptime: 43636.0 sec
Load Avg:  0.98388671875  0.9541015625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2110317 s       7183 s     159305 s    1655420 s         86 s
#2  3504 MHz    1463110 s         82 s     134467 s    2635750 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.12006695742207518 -0.019155601017970567
 0.12006695742207518 0.0 -0.015628071193967447
 0.019155601017970567 0.015628071193967447 0.0])
dAA = TransformUtils.so3([0.0 0.027703342051471028 -0.010022751311952691
 -0.027703342051471028 0.0 -0.011867180918501285
 0.010022751311952691 0.011867180918501285 0.0])
dAA = TransformUtils.so3([0.0 -0.07429698753750881 0.04066873526580418
 0.07429698753750881 0.0 -0.13361350155287263
 -0.04066873526580418 0.13361350155287263 0.0])
dAA = TransformUtils.Quaternion(0.9962065704964507,[0.07466489628540181,-0.029852284350737026,0.03326354282743878])
dAA = TransformUtils.SO3([0.9987096269534825 -0.00571798000187333 0.05046172544745761
 0.007761777064966846 0.9991534645242992 -0.04039937061247375
 -0.05018800501345086 0.04073891301677587 0.9979085655103788])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9806291590818654 -0.18493548968737075 -0.064539267213734
 0.1938171689570239 0.9637676357427842 0.18326715284591585
 0.02830825631998253 -0.19222593204054497 0.9809423192396513]),[-0.2872344960832197,0.8886589846563142,0.08916787188518871])
xj = TransformUtils.SE3(TransformUtils.SO3([0.870411888115363 0.3507267503247931 0.3455052700525119
 -0.4653427510352415 0.8152254022320351 0.34476610566378185
 -0.1607459768902545 -0.46086688985240304 0.8727900324541813]),[0.5936149867431183,1.2762451395660173,1.1047225987218974])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7588094249808881 0.4888912197136464 0.43034129693427875
 -0.5785527865041045 0.8094166026373585 0.10060535076889887
 -0.29914031789197243 -0.3253154448560659 0.8970423242799583]),[0.9676561224074884,0.01542670781223765,1.0103830400035805])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
