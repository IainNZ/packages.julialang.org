>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.515625 MB free)
Uptime: 45515.0 sec
Load Avg:  0.98193359375  1.0048828125  1.02490234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2218610 s       1185 s     168850 s    1676243 s        194 s
#2  3500 MHz    1471682 s       5194 s     141259 s    2740720 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.013160906505901519 0.06440948087812139
 0.013160906505901519 0.0 0.06378041185347713
 -0.06440948087812139 -0.06378041185347713 0.0])
dAA = TransformUtils.so3([0.0 -0.029208991779589934 -0.0857242139279824
 0.029208991779589934 0.0 -0.25004243402152543
 0.0857242139279824 0.25004243402152543 0.0])
dAA = TransformUtils.so3([0.0 0.1432735512949051 -0.09297976931324657
 -0.1432735512949051 0.0 -0.0736870544223321
 0.09297976931324657 0.0736870544223321 0.0])
dAA = TransformUtils.Quaternion(0.9986901302306722,[0.04838522313473695,-0.012108663782324905,0.01141377340984749])
dAA = TransformUtils.SO3([0.9848609145335511 -0.07263070026663446 0.15739682462780494
 0.05010865591943679 0.9885099683016964 0.14260843302598655
 -0.16594608047822393 -0.13256252844208313 0.9771842581759885])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9965191619301318 -0.057020996752117845 -0.0608125466944337
 0.07232967756469537 0.9540953406545548 0.2906380888401524
 0.04144849393470068 -0.2940249766102602 0.9548985995800188]),[-0.7460075052264333,2.2512914255425507,-0.22262952294497795])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9989779329427069 0.039161599118323544 0.02257119066448276
 -0.041207622009584145 0.994259558217545 0.09874139345465752
 -0.01857475119165663 -0.09957057822242457 0.9948571146504507]),[-0.3961026156107265,0.8673291404078294,0.27455459850176955])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9917502230474947 0.10681270668720029 0.07086988623808269
 -0.09081727684389357 0.9756616154134005 -0.19959116823039375
 -0.09046390060076034 0.19150837553242375 0.9773130638587757]),[0.26919291455182104,-1.4865684431423682,0.0512496602861498])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
