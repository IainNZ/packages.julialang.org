>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (452.21484375 MB free)
Uptime: 46488.0 sec
Load Avg:  0.9775390625  0.96142578125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2335602 s       4266 s     173867 s    1643950 s        142 s
#2  3500 MHz    1486680 s       2630 s     144478 s    2814496 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.11340373847927998 -0.027885332985512323
 -0.11340373847927998 0.0 -0.1018375242280965
 0.027885332985512323 0.1018375242280965 0.0])
dAA = TransformUtils.so3([0.0 -0.24856494007653912 -0.030630026631939585
 0.24856494007653912 0.0 0.06952772867809445
 0.030630026631939585 -0.06952772867809445 0.0])
dAA = TransformUtils.so3([0.0 -0.017971371908331434 -0.004760602781210138
 0.017971371908331434 0.0 -0.06052832797115784
 0.004760602781210138 0.06052832797115784 0.0])
dAA = TransformUtils.Quaternion(0.9988787151827317,[-0.019783316974678035,0.00897140057236983,-0.04206479164508513])
dAA = TransformUtils.SO3([0.994223626156758 0.028080519320908878 0.10358989152603455
 -0.0346125807579581 0.9974877214017795 0.06180788708538758
 -0.10159404729107592 -0.06503637510927447 0.9926977986616395])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9598173340826932 0.27000930823222014 0.0764569072245908
 -0.18216828693239137 0.8067383190209527 -0.5621280991547795
 -0.21346053600258216 0.5256122697304597 0.8235085558015076]),[0.02818431817147485,0.7888210231617099,-0.06048638539091088])
xj = TransformUtils.SE3(TransformUtils.SO3([0.892984361792508 0.43642350457938023 0.11006113866701107
 -0.43768558362483106 0.8990236023925813 -0.013707378599024095
 -0.1049297835746282 -0.03593169898178637 0.9938302941283608]),[1.5027203991652682,-0.029129038527912404,-0.8224629438437691])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9592326703416347 0.26278325486089843 -0.10400790890104966
 -0.16713602391040136 0.8242290564650235 0.5410286609692677
 0.22789961312094992 -0.5015888988439529 0.8345479871737947]),[1.7269417763911974,-0.6622374189877983,-0.05496303348114023])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
