>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (455.8359375 MB free)
Uptime: 47684.0 sec
Load Avg:  0.9716796875  0.97021484375  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2323039 s       3722 s     166513 s    1798851 s        100 s
#2  3500 MHz    1576785 s       4275 s     137182 s    2858747 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04403532239749542 0.20328301443664085
 0.04403532239749542 0.0 -0.08951510870948282
 -0.20328301443664085 0.08951510870948282 0.0])
dAA = TransformUtils.so3([0.0 0.05309352728209134 0.0008806572986576237
 -0.05309352728209134 0.0 -0.1352465231010513
 -0.0008806572986576237 0.1352465231010513 0.0])
dAA = TransformUtils.so3([0.0 0.06812636244112126 0.12449826656758951
 -0.06812636244112126 0.0 0.047352495673002065
 -0.12449826656758951 -0.047352495673002065 0.0])
dAA = TransformUtils.Quaternion(0.9992524677049789,[-0.01091966397440356,-0.03687427306380527,-0.00394394602044332])
dAA = TransformUtils.SO3([0.9963736488703773 0.02718951191740927 0.08062432808045
 -0.0212780850033184 0.9970833564672917 -0.07329408812797733
 -0.08238200613800647 0.0713127667224685 0.9940461228570155])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9963599282031352 0.01775919524296504 -0.08337568263807718
 -0.007825373023155467 0.9929836560434195 0.11799246741929036
 0.0848861414371721 -0.11691052054869175 0.9895080965696755]),[0.2847420348992994,-0.4292957244057354,-0.27099793026305913])
xj = TransformUtils.SE3(TransformUtils.SO3([0.871957509372025 0.46583926937230075 0.15061167604278244
 -0.42260662233912527 0.8714851401471921 -0.24883185740122743
 -0.2471714882522881 0.1533213149347143 0.9567647724398297]),[-0.4289317199560638,-0.020541818549573293,1.6746262176656184])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8511091419849349 0.4703387395050793 0.233226710628181
 -0.37525925790958814 0.8557185564472664 -0.35626709293022274
 -0.36714263955963133 0.2157016974262835 0.904808852711227]),[-0.5491180563314968,0.16574774438037665,2.0329437656680893])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
