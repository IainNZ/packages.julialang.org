>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.83984375 MB free)
Uptime: 49569.0 sec
Load Avg:  1.0185546875  1.0078125  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    2401751 s       6771 s     171746 s    1869175 s        113 s
#2  3505 MHz    1690640 s         92 s     143962 s    2963307 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.06573026812305509 -0.029391709059733973
 -0.06573026812305509 0.0 -0.03612031155360278
 0.029391709059733973 0.03612031155360278 0.0])
dAA = TransformUtils.so3([0.0 -0.06863665191423234 -0.05834660324373329
 0.06863665191423234 0.0 0.01611596298001905
 0.05834660324373329 -0.01611596298001905 0.0])
dAA = TransformUtils.so3([0.0 0.06488885933245922 0.01653122403637644
 -0.06488885933245922 0.0 0.11137436710742153
 -0.01653122403637644 -0.11137436710742153 0.0])
dAA = TransformUtils.Quaternion(0.9918137787602503,[-0.041780863173898834,0.08088985459215077,-0.0895355748170391])
dAA = TransformUtils.SO3([0.9937206471819505 -0.08390823634705379 -0.0740181277621405
 0.07514417180737555 0.9906182563429525 -0.11414387256192238
 0.08290131969799527 0.10786509200466901 0.9907030297314908])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9778464126210207 0.16971956014912756 0.12252209689271286
 -0.18950343017567406 0.9663795226438416 0.17377879089898787
 -0.0889091855538789 -0.19314732490367914 0.9771331882638612]),[0.08869381837727777,2.272006903078968,0.6128728578349861])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9160309747301738 0.3848573487072509 -0.113013603079068
 -0.4008525121094451 0.8683151896655993 -0.29214036854146264
 -0.0143009394948328 0.3129114132498524 0.9496746445954769]),[-0.8154979391777964,-2.4711636012705465,1.6554856324775344])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9729720134120539 0.18396197198639283 -0.13958314360900312
 -0.22914509698169233 0.844001836035154 -0.4849262060340108
 0.02860044835566071 0.5038044200204745 0.8633441496423595]),[-0.078011438605949,-4.938539743526958,0.08372563920874754])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
