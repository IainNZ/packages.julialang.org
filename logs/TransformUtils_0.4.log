>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.9375 MB free)
Uptime: 44996.0 sec
Load Avg:  0.8232421875  0.93896484375  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2135600 s       2043 s     164431 s    1749710 s         86 s
#2  3500 MHz    1554079 s       5202 s     137493 s    2639423 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.015065174088611947 0.012232469059516662
 -0.015065174088611947 0.0 -0.11842071973930397
 -0.012232469059516662 0.11842071973930397 0.0])
dAA = TransformUtils.so3([0.0 0.024232515902060228 0.09004115198178406
 -0.024232515902060228 0.0 0.013522267269194364
 -0.09004115198178406 -0.013522267269194364 0.0])
dAA = TransformUtils.so3([0.0 -0.006487414212108561 0.0870716571675082
 0.006487414212108561 0.0 0.16096973072904638
 -0.0870716571675082 -0.16096973072904638 0.0])
dAA = TransformUtils.Quaternion(0.9922531918332936,[0.001675578580276716,-0.09664621190696925,-0.0780404091294745])
dAA = TransformUtils.SO3([0.9965394747433707 -0.06434729857783492 -0.05261654154295909
 0.05999722352555225 0.994951562232983 -0.08044701348944966
 0.057527458204164515 0.07701177816335458 0.9953691664787927])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9606485210805535 0.030564887527994477 -0.27608007279799535
 -0.0012123014144599833 0.9943792795885662 0.10586963044331708
 0.2777641972447598 -0.10136881164996007 0.9552860381862853]),[0.308638419046568,1.154420541359164,0.2905426083581])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9785357498196087 -0.206047118207726 0.0035173005654328877
 0.19368839371450242 0.9254037520420411 0.3257494464259431
 -0.07037465783413883 -0.3180762185150029 0.9454495897454945]),[-0.38690246642781695,-0.3461843556276645,1.5517689610492653])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9202465518353187 -0.2874109131551777 0.26559602940276195
 0.22964235597677074 0.9461475175756133 0.22818690437214512
 -0.3168764304530144 -0.14899611399231624 0.9366907098068951]),[-0.31602761214366587,-1.6412785619424002,1.237988418128805])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
