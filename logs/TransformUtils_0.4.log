>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.25 MB free)
Uptime: 45958.0 sec
Load Avg:  0.98681640625  0.9697265625  0.97021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2283296 s       4188 s     170336 s    1668420 s        119 s
#2  3499 MHz    1505300 s       2769 s     138504 s    2786926 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08535690522262063 -0.030073445678058593
 0.08535690522262063 0.0 -0.07438678429195388
 0.030073445678058593 0.07438678429195388 0.0])
dAA = TransformUtils.so3([0.0 -0.04274411086183287 0.11068054034663617
 0.04274411086183287 0.0 0.05607715691131803
 -0.11068054034663617 -0.05607715691131803 0.0])
dAA = TransformUtils.so3([0.0 0.025395311681406147 -0.03326101676638449
 -0.025395311681406147 0.0 -0.08329879610181272
 0.03326101676638449 0.08329879610181272 0.0])
dAA = TransformUtils.Quaternion(0.9947187047850765,[0.022488558009779773,0.08912421457284352,0.045670969839872184])
dAA = TransformUtils.SO3([0.996765639842645 -0.04138924082000731 -0.06888533932141185
 0.04642197994534276 0.9962407993577511 0.0731387002412781
 0.06559923023204466 -0.07609993718376369 0.9949399683164761])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9919431379330368 -0.11261532562337027 -0.058022405519786976
 0.08307548208499109 0.9240272874779847 -0.3731916883753228
 0.09564138949171871 0.36536469510725855 0.9259380995429842]),[-0.5561436313939286,1.5936513696561905,-0.9350295235285389])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8736287102560577 -0.4624795817710939 -0.15127958573836497
 0.4759448377167586 0.8768488126109117 0.0679166494580118
 0.10123926149032064 -0.1313346727550202 0.9861550667441841]),[0.6031408318955381,0.3831778449161845,0.5667777087891782])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9158120147190181 -0.39846984033940414 -0.05010129774948956
 0.3783912876124502 0.8143294658723148 0.44009948247084135
 -0.13456740747775897 -0.42200628828490255 0.8965502247463409]),[1.1930185271010547,-0.7003564234072419,1.7750547197617568])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
