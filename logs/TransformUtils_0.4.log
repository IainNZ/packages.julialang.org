>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.10546875 MB free)
Uptime: 44273.0 sec
Load Avg:  1.15576171875  1.03271484375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2155713 s       5318 s     159336 s    1665762 s         88 s
#2  3500 MHz    1474990 s       2255 s     132266 s    2681612 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.07185655514299019 -0.1593985271094007
 0.07185655514299019 0.0 0.09093344721218966
 0.1593985271094007 -0.09093344721218966 0.0])
dAA = TransformUtils.so3([0.0 0.06621060027857006 -0.04964724617959894
 -0.06621060027857006 0.0 -0.09679447279499866
 0.04964724617959894 0.09679447279499866 0.0])
dAA = TransformUtils.so3([0.0 -0.11025824834164721 0.009908137569405076
 0.11025824834164721 0.0 -0.06923642350905604
 -0.009908137569405076 0.06923642350905604 0.0])
dAA = TransformUtils.Quaternion(0.9914349616423693,[0.0626321740554698,0.05039124318469763,-0.10293031728591788])
dAA = TransformUtils.SO3([0.997665855165109 0.044198359641229555 0.052051382716467746
 -0.044782634791776015 0.99894557440909 0.010112120924884897
 -0.05154955924911559 -0.012419515832656821 0.9985932097544548])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.857557129806805 0.04158136977954969 -0.5127053333102467
 0.14282458616082777 0.9382879598038557 0.3149870506466995
 0.49416283420093726 -0.34334631813137956 0.7986966878109127]),[-0.6451116584676772,0.5284221973940156,0.19596347714791215])
xj = TransformUtils.SE3(TransformUtils.SO3([0.6942949814885748 0.56116143111583 -0.4506132786634377
 -0.5889977267382055 0.8028471696486941 0.09229355386107514
 0.4135651781485061 0.20133124550132445 0.8879355680497768]),[1.2732674007762628,0.41982705697052786,0.4526633834984055])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7156427955542396 0.695384719871576 0.0655399156273655
 -0.6657758202135753 0.7075093519495371 -0.23700859504011013
 -0.21118225870146745 0.12597860244134942 0.9692943027464211]),[1.7564611371979248,-0.11026165142291233,-0.8127438730181096])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
