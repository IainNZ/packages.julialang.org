>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (455.3828125 MB free)
Uptime: 47785.0 sec
Load Avg:  0.94091796875  0.935546875  0.97021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2308180 s       2099 s     183084 s    1783870 s        145 s
#2  3500 MHz    1569304 s       4179 s     154174 s    2846277 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.04669735466622992 0.12554029238763847
 -0.04669735466622992 0.0 0.03293107331656156
 -0.12554029238763847 -0.03293107331656156 0.0])
dAA = TransformUtils.so3([0.0 0.0753955460654638 -0.04075024381419781
 -0.0753955460654638 0.0 0.02801354571268469
 0.04075024381419781 -0.02801354571268469 0.0])
dAA = TransformUtils.so3([0.0 -0.15297324411828594 -0.043850945404477676
 0.15297324411828594 0.0 0.1329403494582456
 0.043850945404477676 -0.1329403494582456 0.0])
dAA = TransformUtils.Quaternion(0.9993734782061977,[-0.033653061560353324,0.006989965768583873,0.008441734668640661])
dAA = TransformUtils.SO3([0.9965357374361874 0.039683332669202105 0.07308732530869916
 -0.031174208276659614 0.9929811037353979 -0.11409073740998571
 -0.07710183364121523 0.11141705763794116 0.9907782529488958])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9370224263708827 0.013957550249631927 -0.348990199388253
 -0.047884739479748265 0.9948997376779286 -0.08877817126605789
 0.3459711320370245 0.09989844222718322 0.9329117198522066]),[-0.5437354268468979,0.3219737529807142,1.0280516142946123])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9859437920246519 -0.13102662646309654 -0.10366707348888678
 0.12994998035879038 0.9913730539398752 -0.017101769694255947
 0.10501353042727433 0.003389849498952867 0.9944650156478981]),[-1.1729084192430845,0.2854290340059731,-0.9439543800969312])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9539604733144978 -0.1690737377942075 0.24773672828604737
 0.15353924949317083 0.9848266212671802 0.08088402134255948
 -0.2576530888979466 -0.03912284795059458 0.9654451245666847]),[-1.2700564158580785,-0.24214037188094734,-1.6168879224006172])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
