>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1341
Commit 899c7c6 (2014-10-29 07:40 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.7089498268580887 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0056827531586978175
 0.0 0.769543824380478 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6735620622798864
 0.0 0.0 0.6314014619785215 0.0 0.0 0.0 0.0 0.0 0.0 0.05318404497738949
 0.0 0.0 0.0 0.7174125840552275 0.0 0.0 0.0 0.0 0.0 0.9958665012524806
 0.0 0.0 0.0 0.0 0.008248560777417202 0.0 0.0 0.0 0.0 0.996670745460204
 0.0 0.0 0.0 0.0 0.0 0.519313436661591 0.0 0.0 0.0 0.2327633693829101
 0.0 0.0 0.0 0.0 0.0 0.0 0.22128485118939167 0.0 0.0 0.08382974836332902
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5851621678672689 0.0 0.4510194716493441
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.1761716024575073 0.7254786696044495
 0.0056827531586978175 0.6735620622798864 0.05318404497738949 0.9958665012524806 0.996670745460204 0.2327633693829101 0.08382974836332902 0.4510194716493441 0.7254786696044495 0.535987304702626]
(U,Lambda) = eig(full(A)) = ([-1.36109472694916,0.10675236809328403,0.22075348567288344,0.3789838277910116,0.5268954775440071,0.60869316425558,0.6317856869373848,0.7089500949253857,0.7545271519152528,2.2972290907424977],
[-0.0018702649687026747 -0.0006390776863521967 -7.33494120784502e-5 -0.002705547766885915 0.0009648207904407306 0.0025666615583324645 0.0005284271760551423 0.9999844324610047 0.00237999466658197 0.002537895750229546
 -0.215373307398149 -0.06882314223242714 -0.007733988575582069 -0.2709289815110173 0.08580037800305942 0.18961724309698874 0.03508344466961247 -0.0005243583840496427 -0.8561895724041364 0.31274154708225665
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [11.738875287200216 0.0 0.0 0.0 0.0 0.0 0.0 0.0 30.05397846070083
 0.0 0.8696804434272484 0.0 0.0 0.0 0.0 0.0 0.0 8.871973595478616
 0.0 0.0 0.20721164316507817 0.0 0.0 0.0 0.0 0.0 1.830785556656389
 0.0 0.0 0.0 0.1417580966925502 0.0 0.0 0.0 0.0 0.004747187861486431
 0.0 0.0 0.0 0.0 0.005507736627917656 0.0 0.0 0.0 3.2406768866524285
 0.0 0.0 0.0 0.0 0.0 0.0008545620689478994 0.0 0.0 0.0020243717826413823
 0.0 0.0 0.0 0.0 0.0 0.0 0.0003209826717723451 0.0 0.15568846292101107
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0002238311753994226 0.008065124802859943]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.9627087569758316 0.2704779342373772 0.005654034585657172 0.001252281985270528 3.931201674808288e-6 1.3963379381110111e-9 9.746010824452503e-8 2.1824474242177622e-9
 -0.2494668222760236 -0.8957972623256367 0.3611192577943386 0.0700457268592937 0.00021717440174139532 7.510049400974331e-8 5.241780452612624e-6 1.173804196407176e-7
 -0.05144626734879212 -0.1737981472736551 -0.6154503069968716 0.7670504013131048 0.0014445344118216802 2.7299713997574444e-7 1.9054116257926694e-5 4.26682147812859e-7
 -0.00013339635787680337 -0.00044979363300576703 -0.001230941928701948 -0.0029817419659568796 0.9999946869298382 1.5125091013384691e-9 1.0556557060858077e-7 2.363940561964572e-9
 -0.0910616511613565 -0.3065378621797624 -0.6997482004957083 -0.6370082712659797 -0.002910790303116242 0.0007008322275845685 0.0480116915793327 0.0010707873054714432
 -5.688399018993926e-5 -0.0001914862498449326 -0.0004370077760529815 -0.00039752055613555677 -1.8156208182245497e-6 -0.9999984889176005 0.0016224582705420727 2.978621818138559e-5
 -0.0043747799038082015 -0.01472664191555484 -0.033608803407529336 -0.03057147754775723 -0.0001396296834503538 -0.0015890983785843624 -0.9984128649212006 0.02947926122684413
 -0.00022662659291262802 -0.0007628837887052046 -0.0017410350728602388 -0.0015836904726615727 -7.233213276879127e-6 -7.591421349934909e-5 -0.029393806662896108 -0.9995648181507046],

[33.500910139770674,3.46004791275652,0.34639168004317633,0.1709823424937048,0.1417577949237662,0.000854569652225228,0.0004155868685453997,0.00022401146450574757],
[-0.33733764213822603 0.9176481996813151 0.19160970281466716 0.0859760243958493 0.0003255403783208133 1.918092559405722e-5 0.0027529071362718763 0.00011436681685149344
 -0.006476134997891849 -0.22515796889633888 0.9066567540235179 0.3562788876717916 0.0013323593958912447 7.64284464840616e-5 0.010969244443002485 0.0004557063881888803
 -0.0003182082381516485 -0.010408237279850213 -0.3681626226801339 0.929580047438951 0.0021115195058094634 6.619493894551721e-5 0.009500383764969962 0.0003946829647874509
 -5.644626883102159e-7 -1.8428036526386632e-5 -0.0005037533953762826 -0.002472103608815118 0.9999968156817762 2.5089869606016796e-7 3.6008775778007146e-5 1.4959400202922082e-6
 -1.4971043753962226e-5 -0.0004879498359391239 -0.011126216408284666 -0.02051950942283597 -0.00011309336729794931 0.004516892590137661 0.6362947732331654 0.026327288543319182
 -1.451032229987626e-9 -4.729324274362294e-8 -1.0781155863893932e-6 -1.98678988687401e-6 -1.0945152495361823e-8 -0.9999896151343459 0.0033362249902383545 0.00011362888185825559
 -4.191613111648828e-8 -1.3661651478471977e-6 -3.1143483329263565e-5 -5.739139141615554e-5 -3.161639815060875e-7 -0.0005968770853714763 -0.7711341555039514 0.04224039180916363
 -1.5141707033260686e-9 -4.935110132131477e-8 -1.1250210360749784e-6 -2.073192440779422e-6 -1.1421020131903378e-8 -1.988365441346572e-5 -0.015831227579079975 -0.9987603475037408
 -0.9413613936162752 -0.32728748956282616 -0.07477625291967155 -0.03357451364664763 -0.0001271352685825437 -7.491936301972909e-6 -0.0010752664094603312 -4.467088446477677e-5],

[1,2,3,4,4,6,7,8],[1.0,21.866571718542247,224.70751860298884,375.27032986967856,375.27032986967856,8626.640818374894,174020.6975649671,49469.23454682423],[1.0,45.72445258407658,929.9868921373798,524256.9149490521,524256.9149490521,2.039363172261074e8,7.059768187390605e6,1.9543250198323056e8],[9.745990248806638,22.40399421426261,7.734853682371578,107253.36343455016,1.0040036381119168,1.0052824962310607,1.3640747941756368,1.0672329419022375],[0.0,0.0,0.0,626.2974040844672,0.0,0.0,0.0,0.0],[0,0,0,0,0,1,1,1])
N1 = norm(Ua' * Ua - eye(8)) = 1.2059956537119097e-14
N2 = norm(Va' * Va - eye(8)) = 5.082946748007345e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
