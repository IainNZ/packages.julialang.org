>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1330
Commit 7fdc860 (2014-10-28 03:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.664906140548192 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.030505752281912324
 0.0 0.9396001310211457 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7717820357671261
 0.0 0.0 0.6937617688771645 0.0 0.0 0.0 0.0 0.0 0.0 0.8916152082092521
 0.0 0.0 0.0 0.6462253322253269 0.0 0.0 0.0 0.0 0.0 0.8051014933940754
 0.0 0.0 0.0 0.0 0.5741574614544889 0.0 0.0 0.0 0.0 0.135868324327151
 0.0 0.0 0.0 0.0 0.0 0.5138774435585347 0.0 0.0 0.0 0.49310931376551403
 0.0 0.0 0.0 0.0 0.0 0.0 0.540520934266284 0.0 0.0 0.27935269090167303
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8215107075756753 0.0 0.4900675199808804
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11832359152116534 0.15286610432084458
 0.030505752281912324 0.7717820357671261 0.8916152082092521 0.8051014933940754 0.135868324327151 0.49310931376551403 0.27935269090167303 0.4900675199808804 0.15286610432084458 0.8076007725791803]
(U,Lambda) = eig(full(A)) = ([-0.8687865239374197,0.12433936920478228,0.5271222447365649,0.5498555454149945,0.5756820283065285,0.6647625857553889,0.6672784064522848,0.7956926164326954,0.8871311675934033,2.397406843667947],
[-0.013811672278608472 -0.002204879060878854 0.005064794243407131 0.0075564557823200994 -0.003760554069276326 0.96967757310653 -0.24311546646192445 -0.010427730870984139 0.007819265629425675 0.012564950483459342
 -0.29635089153777777 -0.03698711904223939 0.04280283383623031 0.05643387222794213 -0.023326164795233126 0.012813917197515142 0.05358047914962075 0.23976296755655135 -0.8378559853720005 0.3777871498232257
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [174.25103206126803 0.0 0.0 0.0 0.0 0.0 0.0 0.0 6.796917140402794
 0.0 101.84174773424735 0.0 0.0 0.0 0.0 0.0 0.0 4.869801388899986e-5
 0.0 0.0 56.97784845668326 0.0 0.0 0.0 0.0 0.0 14599.656192423783
 0.0 0.0 0.0 4.912191852253969 0.0 0.0 0.0 0.0 14.775555937444803
 0.0 0.0 0.0 0.0 2.4215478673465936 0.0 0.0 0.0 0.0006204656507370586
 0.0 0.0 0.0 0.0 0.0 0.007889075723966207 0.0 0.0 0.00011405961118998777
 0.0 0.0 0.0 0.0 0.0 0.0 0.0031398961168725096 0.0 195.41232650402685
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0001893634015403163 0.5849899287121856]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.00046557046775773316 0.9999998916218407 5.53414537192926e-13 5.126774424792228e-8 2.343624534127397e-12 6.659857642981804e-7 3.502504472854375e-17 3.3685317623585726e-14
 -3.3353696201078422e-9 -2.1062737183142875e-12 1.0 1.0769831092326797e-12 4.9175418745376484e-17 1.396944913349237e-11 7.346441158937351e-22 7.065435741269827e-19
 -0.9999098182434956 -0.00046553749727122477 -3.3352578595266173e-9 0.0010368325050023838 4.71583478415688e-8 0.013381466042747764 7.03635893911238e-13 6.767214247942861e-10
 -0.0010119416476616027 -4.2110577874197437e-7 -2.324296822761207e-12 -0.9999977456441865 8.467390364038448e-9 0.0018667298863944194 9.581020070103212e-14 9.214517081152043e-11
 -4.249416954514166e-8 -1.767273342825933e-11 -9.743153744313097e-17 -7.772090428528203e-9 -0.9999999999999384 3.4944307365165444e-7 1.655593363593644e-17 1.592249125732179e-14
 -7.811662607091326e-9 -3.2481343925441017e-12 -1.7900620846698468e-17 -1.081581243646995e-9 -2.0360726836745544e-13 -5.836835696697365e-7 0.9999999999998296 2.7593699765650665e-10
 -0.01338331025320775 -5.564857627759186e-6 -3.066819105693698e-11 -0.0018530121766422093 -3.4882649689010386e-7 -0.9999042413917826 -5.837350530815985e-7 0.0029935543811608883
 -4.006452331345316e-5 -1.6659059968952632e-8 -9.180885977921155e-14 -5.547209018394283e-6 -1.0442516568004815e-9 -0.002993281125308995 -1.4715122213285734e-9 -0.9999955193060454],

[14601.084126460244,174.2510151973134,101.84174773424735,4.912536013459699,2.4215478673479347,0.7625145594747431,0.007889075723965076,0.00018959569521694928],
[-5.556171980203488e-6 0.9999999884014938 9.468911954969116e-13 1.8185021590024178e-6 1.6864378331825491e-10 0.00015219211925213635 7.736204348249506e-13 3.095904342398118e-8
 -2.3264017144858697e-11 -1.2310206424733995e-12 1.0 2.2326928866069617e-11 2.068144370847174e-15 1.8657651804308315e-9 9.48367633207296e-18 3.7952144618661706e-13
 -0.0039019506771405437 -0.00015222479444603208 -1.8659913160559807e-9 0.012025659493004704 1.1096130838525317e-6 0.9999115883598939 5.081920967011225e-9 0.00020337028615126823
 -3.404440022088189e-7 -1.1871106592584615e-8 -1.121091513941875e-13 -0.9999276880550053 1.7176388093305102e-8 0.012025652788350955 5.965693621329358e-11 2.3873683248291217e-6
 -7.047535973731076e-12 -2.4559610108972297e-13 -2.3166838448548474e-18 -3.8311147135535875e-9 -0.9999999999993845 1.109740291835347e-6 5.081835590225994e-15 2.033647161814119e-10
 -4.220700141418814e-15 -1.4705669378960656e-16 -1.3866548493857304e-21 -1.7369188356837042e-12 -6.63324966547098e-16 -6.038866829154597e-9 0.999999999999973 1.1481736792943068e-8
 -2.878019435474244e-9 -1.0027531166210867e-10 -9.45534971203156e-16 -1.184371111380165e-6 -4.52305311745508e-10 -0.00411742360297109 -2.3232980523757405e-7 0.049576282659256704
 -5.196021302266176e-13 -1.8103861596518405e-14 -1.7070836239668266e-19 -2.138281258193728e-10 -8.165977161228583e-14 -7.433535381218013e-7 -3.532106540598329e-11 -0.9987703193587032
 -0.9999923873459868 -4.962236047738346e-6 -1.5983137962655766e-11 -4.658347554213455e-5 -4.322647678060285e-9 -0.0039016403289364064 -1.9833132599823145e-11 -7.936900151665307e-7],

[1,1,2,4,5,6,6,8],[1.0,1.0,1.0000004522518122,274.7162012156261,1227.6837589102097,9397.131892871945,9397.131892871945,3.0662386670496757e6],[702.3625386292333,702.3625386292333,1.677303223137314e8,11461.185025089204,5.53653274028905e8,9.24465403282503e11,9.24465403282503e11,7.509382720714338e9],[3.627536949015677e10,1.0001571757751921,1.0000000018830344,1.0119314712787633,1.0000011317319215,3.257621081172154e16,1.0000002375272623,1.0473798412370325],[1.0,0.0,0.0,0.0,0.0,22329.60802738556,0.0,0.0],[0,0,0,0,1,3,1,1])
N1 = norm(Ua' * Ua - eye(8)) = 6.67402112161655e-16
N2 = norm(Va' * Va - eye(8)) = 6.180278392208501e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
