>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1249
Commit 23a9373 (2014-10-23 04:46 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.9720475534869124 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.07703121151968362
 0.0 0.6726758639609336 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.4306557216521736
 0.0 0.0 0.3237676831581082 0.0 0.0 0.0 0.0 0.0 0.0 0.0399193768557915
 0.0 0.0 0.0 0.49842335435497076 0.0 0.0 0.0 0.0 0.0 0.6042033873559993
 0.0 0.0 0.0 0.0 0.9950848800832977 0.0 0.0 0.0 0.0 0.7920022253149301
 0.0 0.0 0.0 0.0 0.0 0.3764295733079688 0.0 0.0 0.0 0.41953089622607975
 0.0 0.0 0.0 0.0 0.0 0.0 0.9938293888146885 0.0 0.0 0.5355056883666836
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9842526103670108 0.0 0.6010238455915307
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6574965094620147 0.03591557588518879
 0.07703121151968362 0.4306557216521736 0.0399193768557915 0.6042033873559993 0.7920022253149301 0.41953089622607975 0.5355056883666836 0.6010238455915307 0.03591557588518879 0.2094072051730922]
(U,Lambda) = eig(full(A)) = ([-0.950908070905476,0.32396646286896935,0.40219655420309275,0.5782788000558714,0.6575909770566937,0.7289748122126549,0.9721330265301515,0.9872171302196129,0.9942373800232316,1.9897275499041986],
[-0.030859560468450502 0.0005912730582049942 0.007652667133769206 -0.020494475201811503 -0.0006424532966353355 -0.03404447688636563 0.9973851371077308 0.02111698021856831 -0.0021530243586075455 -0.04670800629715734
 -0.20433734501443415 0.006143520018983934 0.09013709999559164 -0.4779506532899476 -0.07487273171385694 0.8217621533887911 0.001591552053567506 0.005693654876322607 -0.0008306197938961133 -0.20177308901044022
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [8835.667332864177 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00017104828854722583
 0.0 531.4915365806302 0.0 0.0 0.0 0.0 0.0 0.0 12725.145045846393
 0.0 0.0 231.6712727682065 0.0 0.0 0.0 0.0 0.0 0.426386695182557
 0.0 0.0 0.0 34.196834972119085 0.0 0.0 0.0 0.0 0.05041061366010167
 0.0 0.0 0.0 0.0 0.013291056440127097 0.0 0.0 0.0 0.003063854699976351
 0.0 0.0 0.0 0.0 0.0 0.011651850815440007 0.0 0.0 0.0021349629623522255
 0.0 0.0 0.0 0.0 0.0 0.0 0.007237646122687063 0.0 8869.595887685842
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.000122957953218651 0.00014997559629166223]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-1.6305123449673674e-8 0.9999999999999998 1.8732491815644864e-11 1.2348364162851743e-15 1.656041486099808e-18 1.0603814835465761e-26 4.957874854590732e-27 2.1873701422643384e-28
 -0.8206960574407733 -1.3392253621737446e-8 0.5713650149598555 3.132241888891108e-5 3.418978294510338e-8 2.180178987372162e-16 1.0193552741310113e-16 4.497304501063855e-18
 -2.7473264716868874e-5 -4.4742366640983605e-13 -9.428231929779867e-5 0.9999999951780322 6.138343670627075e-12 3.8448676188912894e-20 1.7976900547775744e-20 7.931248077563212e-22
 -3.247385933666956e-6 -5.286218644204515e-14 -4.724312003850904e-6 -5.407737324810822e-10 0.9999999999835677 2.0862787727410022e-19 9.754516526268612e-20 4.3036051434872405e-21
 -1.9736856213443736e-7 -3.2128081873137753e-15 -2.834958315198401e-7 -3.21510034547233e-11 -1.9802548783611545e-12 0.9999999999999404 1.69567726478769e-13 1.7316837843506078e-15
 -1.3753085944086012e-7 -2.2387571072173407e-15 -1.9754628051148823e-7 -2.2403543329431453e-11 -1.379886152412986e-12 -2.5271554223602e-13 0.999999999999971 1.5701138266140048e-15
 -0.5713650151486238 -9.300803424619405e-9 -0.8206960526092042 -9.30743900384464e-5 -5.732666976464152e-6 -3.4543340435706875e-7 -2.4070577630444007e-7 1.6908954831024985e-8
 -9.661185236867464e-9 -1.5726686505915144e-16 -1.3877112481000742e-8 -1.5737906561513921e-12 -9.693340266258761e-14 -4.1092340470507575e-15 -2.4999692724843293e-15 -1.0],

[15517.385064748383,8835.667332864175,303.79571938505603,231.67127224991725,34.19683497156199,0.013291056440126538,0.011651850815439799,0.00012295795321871187],
[-9.284209035315023e-9 1.0 5.448202704556628e-10 4.7095195182560586e-14 4.278826292774769e-16 7.049235007580282e-21 3.7595858020331685e-21 1.5718279627272046e-20
 -0.028109955821472982 -8.055836857075754e-10 0.9996048343410806 7.185871766927914e-5 5.313819330930089e-7 8.718243619227312e-12 4.64972225915863e-12 1.9439810253588844e-11
 -4.1017002397614205e-7 -1.173145234635981e-14 -7.18986592552163e-5 0.9999999974152075 4.1585073356801463e-11 6.701840285656994e-16 3.5743089199288526e-16 1.4943663981630399e-15
 -7.156509966145539e-9 -2.0459342774260124e-16 -5.317932664736477e-7 -7.98232336159627e-11 0.9999999999998586 5.36782995532746e-16 2.862837820062025e-16 1.196910578165021e-15
 -1.6905146633209976e-13 -4.832868117392966e-21 -1.2402936765857228e-11 -1.8445135530765025e-15 -7.696524949172198e-16 0.9999999999999823 1.9342285262242997e-13 1.8718518250964366e-13
 -1.0327056073156327e-13 -2.952313938787297e-21 -7.576735427096182e-12 -1.1267808135062144e-15 -4.701671252201626e-16 -2.215477610934815e-13 0.9999999999999888 1.4878852153975112e-13
 -2.6649707855248915e-7 -7.618657573683234e-15 -1.9552308423223205e-5 -2.907738588565832e-9 -1.2132998550703821e-9 -1.8810579512276364e-7 -1.4951643787523493e-7 9.953079745380357e-7
 -7.655410737277683e-17 -2.1885400511699302e-24 -5.616607602973294e-15 -8.352786946594844e-19 -3.48533213667952e-19 -3.8015263120569864e-17 -2.6381311409074252e-17 -0.9999999999995048
 -0.9996048371148849 -9.265225386687489e-9 -0.028109955708751813 -2.431076072246242e-6 -2.210236635829202e-8 -3.64135157428495e-13 -1.9420509692439962e-13 -8.119431712008474e-13],

[1,1,3,3,4,5,6,8],[1.0,1.0,10.839946283610507,10.839946283610507,5.169538403728546,3.895945760999405,3.528313025087679,21188.13876340539],[4.475082079225447e6,4.475082079225447e6,68467.30999478468,68467.30999478468,3.923297104486438e6,1.660853885360372e11,2.7187785434157593e11,3.667599222549013e14],[1.162057063403451e16,1.0000000100708288,1.6083222902322194e8,1.0000742876120354,1.0000005547389035,1.0000001881150649,1.0000001495214537,1.0000009953275744],[1.0,0.0,20.681470813938695,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm(Ua' * Ua - eye(8)) = 2.2204462098339973e-16
N2 = norm(Va' * Va - eye(8)) = 4.440892135930275e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
