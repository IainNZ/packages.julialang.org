>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1380
Commit 2414a86 (2014-11-02 22:18 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.6159008147265348 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.175330494456309
 0.0 0.8620629064511791 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.39321445395256927
 0.0 0.0 0.588731370386498 0.0 0.0 0.0 0.0 0.0 0.0 0.7755267260135046
 0.0 0.0 0.0 0.969085525827668 0.0 0.0 0.0 0.0 0.0 0.04844500445045985
 0.0 0.0 0.0 0.0 0.41189933096983866 0.0 0.0 0.0 0.0 0.8495938783734676
 0.0 0.0 0.0 0.0 0.0 0.7689843880106038 0.0 0.0 0.0 0.17169348219536573
 0.0 0.0 0.0 0.0 0.0 0.0 0.988059258478843 0.0 0.0 0.8554602187553721
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5196204313223887 0.0 0.44693237671802666
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7146359059786234 0.6894395903469372
 0.175330494456309 0.39321445395256927 0.7755267260135046 0.04844500445045985 0.8495938783734676 0.17169348219536573 0.8554602187553721 0.44693237671802666 0.6894395903469372 0.6997194234082948]
(U,Lambda) = eig(full(A)) = ([-1.0418736696760154,0.4685845320612918,0.5375349585032478,0.6144768829406524,0.6645784506810126,0.7662202532669562,0.830042511225999,0.9108424068748939,0.969158588127188,2.4191344415552534],
[-0.07396306707170693 0.06296316410264828 -0.07358710447715948 0.9684309184319609 0.1945634582610527 0.018217851718019946 -0.05262886266009518 -0.040676637167403884 0.0007467680900293565 -0.06840925291786984
 -0.14443082823732242 0.05286745976624472 -0.039851852092752084 0.012491187353755843 -0.10755481406085451 -0.06408044161089466 0.7893517052640293 -0.5515891687859937 0.005524303566552393 -0.17767662478771382
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [1354.1440007959482 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00012408596446329554
 0.0 164.35446198822518 0.0 0.0 0.0 0.0 0.0 0.0 787.3144360998951
 0.0 0.0 5.845898917768799 0.0 0.0 0.0 0.0 0.0 0.0004459009576997936
 0.0 0.0 0.0 2.3318904736980786 0.0 0.0 0.0 0.0 0.011681309372571457
 0.0 0.0 0.0 0.0 0.05896850560352782 0.0 0.0 0.0 14.33047319929469
 0.0 0.0 0.0 0.0 0.0 0.007667867804440959 0.0 0.0 0.19748770612314845
 0.0 0.0 0.0 0.0 0.0 0.0 0.0015346640385076132 0.0 3.364081537250265
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.6750787832273416e-5 6.100044642351254]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.999999999999997 8.234938332529818e-8 1.823726939458516e-15 4.5003707166906126e-11 3.47154577974254e-14 5.805356987376929e-15 1.725721718567986e-17 9.680641449708864e-18
 -8.233302645031034e-8 -0.9998119695592695 7.864910193542719e-7 0.01939137167580833 1.4955512460386743e-5 2.5004674038097098e-6 7.432980985026357e-9 4.1696191741046565e-9
 -4.5943826876992196e-14 -5.426423559509357e-7 -0.9999999999207199 1.2580367126767353e-5 7.96027809922045e-9 1.119386919800087e-9 3.327471563247231e-12 1.8665816812494877e-12
 -1.203575896403721e-12 -1.4215021607582546e-5 -1.0954979328542181e-8 -0.0015041661431194355 0.9999988686404162 1.8431655516796996e-7 5.478450295859245e-10 3.073169740766923e-10
 -1.4765263432611839e-9 -0.017438650841683733 -1.13021451042028e-5 -0.8991857383020713 -0.0013528547522785245 0.4372157137303279 0.0010690495043913426 0.0005898709170426243
 -2.03479533412613e-11 -0.00024032138272888387 -1.5573885163493892e-7 -0.012387649071447617 -1.8631919183423737e-5 -0.027930963355434702 0.9995329427221132 0.0004957300203912632
 -3.466148627569503e-10 -0.004093726857458377 -2.6529111124163668e-6 -0.21101485508762569 -0.0003173799826591738 -0.43528463461005945 -0.01521379224539398 0.8750723964299036
 -6.285121549834309e-10 -0.007423100869430522 -4.810488367925478e-6 -0.38263036621192126 -0.000575500683800634 -0.7865046521282748 -0.026481957479458536 -0.4839914330961586],

[1354.1440007959568,804.4375302163405,5.845898918796616,3.2561409735007754,2.3318891887586917,0.02579494208585372,0.007664581489204606,0.0013435886343434096],
[-0.9999999999999906 1.386222288375939e-7 4.224481005337109e-13 1.8715866594720408e-8 2.0159503778261728e-11 3.047608833844423e-10 3.048928001526959e-12 9.756693535433188e-12
 -9.992881302246413e-9 -0.20427137244841043 2.211179326568841e-5 0.9787839300964553 0.0010540831940189675 0.01593192082015243 0.00015938816652721 0.0005100486105188377
 -1.9834151143489498e-16 -3.943416663486555e-9 -0.9999999997449014 2.258610888472514e-5 1.995591443611561e-8 2.536862754428355e-7 2.537915793300814e-9 8.121420166430548e-9
 -2.0726061375649547e-15 -4.1206274228925517e-8 -4.3698689099204466e-9 -0.0010772109464991372 0.9999994196691441 1.6662414581529403e-5 1.6667767279317344e-7 5.333697427452292e-7
 -6.429785303126939e-14 -1.278323227409889e-6 -1.1400652254970242e-7 -0.016284196439649443 -3.4210812171122753e-5 0.9994966136867746 0.008224878524540489 0.02588873230085366
 -1.15220697518147e-16 -2.290734238679744e-9 -2.042773819630086e-10 -2.9171604135291136e-5 -6.126667336091197e-8 -0.008302826730423717 0.9999615088928209 0.0028291339818534637
 -3.9282185998880044e-16 -7.809798965899286e-9 -6.964416145636526e-10 -9.945420432632791e-5 -2.088742673868141e-7 -0.02589715739727646 -0.003046227622632411 0.999518828579497
 -2.169890232527998e-17 -4.3140181899641223e-10 -3.8470408774156145e-11 -5.493702887724296e-6 -1.1537902613637403e-8 -0.0014254620924661805 -0.00016152902506799902 -0.01684070572119264
 -1.3952290745368983e-7 -0.9789142998221997 -4.610069334886257e-6 -0.20424414671024085 -0.00021999901653527135 -0.0033258404650966015 -3.327280067372569e-5 -0.00010647431460716523],

[1,2,3,4,4,6,6,7],[1.0153908614114007,1.0000000000000526,2194.3004592036764,10015.647798996608,10015.647798996608,27252.950078961225,27252.950078961225,25612.448088370315],[770091.2752407272,1.0,4.964094117438646e7,4.750398459136647e6,4.750398459136647e6,8.54505832545788e7,8.54505832545788e7,2.5063971251250427e7],[1.0000001495158362,26.75779830522267,1.0000268406684134,862969.2296472561,1.0013074347365414,12177.414376982591,1.0115461967010861,1.0413946391777062],[0.0,0.0,0.0,20033.62066297458,0.0,50065.42141368504,0.0,0.0],[0,0,1,3,1,3,1,1])
N1 = norm(Ua' * Ua - eye(8)) = 8.881784197001252e-16
N2 = norm(Va' * Va - eye(8)) = 6.661338147750946e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
