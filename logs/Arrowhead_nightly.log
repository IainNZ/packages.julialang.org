>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1365
Commit 449050f (2014-10-31 04:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.6662056232241049 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.005779101048368096
 0.0 0.7024662621940958 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.30760676994415403
 0.0 0.0 0.03741282664665313 0.0 0.0 0.0 0.0 0.0 0.0 0.39072452621310405
 0.0 0.0 0.0 0.732511673128674 0.0 0.0 0.0 0.0 0.0 0.5048377910916142
 0.0 0.0 0.0 0.0 0.5568715127487633 0.0 0.0 0.0 0.0 0.09099902743474964
 0.0 0.0 0.0 0.0 0.0 0.3429009214183596 0.0 0.0 0.0 0.9239180321612794
 0.0 0.0 0.0 0.0 0.0 0.0 0.8850203351648895 0.0 0.0 0.9139690913032461
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.5950143893395614 0.0 0.9582505340139571
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.10369378698933351 0.3928445811395034
 0.005779101048368096 0.30760676994415403 0.39072452621310405 0.5048377910916142 0.09099902743474964 0.9239180321612794 0.9139690913032461 0.9582505340139571 0.3928445811395034 0.9018821843632363]
(U,Lambda) = eig(full(A)) = ([-1.1049768901257613,0.055259328712335076,0.13236770692222644,0.44720891382948524,0.5572167489919377,0.6662001465545273,0.6821711110885487,0.714186234488648,0.808535397773366,2.565810816982368],
[-0.002167564940005899 0.0003991522142042101 0.0007111915329406134 0.00228532848949246 0.0002001842101256681 0.9998476818899203 0.016498127574711047 -0.0030599799342057974 0.002730805158977566 0.0022310934962166684
 -0.11305932492591136 0.020055524199331883 0.03544717708830779 0.10436228290988685 0.007995265703575664 0.00803683297596981 -0.6908124620849535 -0.6667965916070386 0.19504420331774658 0.12106637841383816
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [17109.294594712297 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.011190775957095883
 0.0 0.38959332997315327 0.0 0.0 0.0 0.0 0.0 0.0 12.779011453859926
 0.0 0.0 0.06651358561601955 0.0 0.0 0.0 0.0 0.0 590.5193905953256
 0.0 0.0 0.0 0.0038518553073178426 0.0 0.0 0.0 0.0 0.07030725624606185
 0.0 0.0 0.0 0.0 0.0011959512996189913 0.0 0.0 0.0 1502.9757842404833
 0.0 0.0 0.0 0.0 0.0 0.0002831533674592434 0.0 0.0 0.02756940202177126
 0.0 0.0 0.0 0.0 0.0 0.0 0.0002110564767088771 0.0 0.00926387926347386
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00010764566133992051 149.35803410704258]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.9999999999999981 6.256097762640362e-8 2.8080076561681005e-17 3.535698747379543e-17 1.5817876058667896e-23 7.81886020748615e-25 3.7149261752054575e-25 3.533395786148241e-21
 -4.929614563671463e-10 -0.007879695988656071 0.9999689515226047 7.988685056626919e-5 3.483925532210317e-11 1.7219554795801989e-12 8.18141751124684e-13 7.781630417608966e-9
 -2.277979792923983e-8 -0.3641215151419345 -0.002943660600947617 0.9313467973428595 5.5414643298953925e-8 2.7300384804072844e-9 1.2970956710144257e-9 1.2337075869053126e-5
 -2.7121634204184724e-12 -4.335231837359686e-5 -3.4028964562816527e-7 -1.7009704279305393e-5 0.9999999989154692 9.744530152281088e-11 4.618705474414799e-11 4.38735131968584e-7
 -5.797859511862186e-8 -0.9267533421846116 -0.0072738142071399866 -0.3623499470302514 -4.638623009105703e-5 2.276805251132725e-5 1.0539495580512285e-5 0.09888299895611756
 -1.0635136069677527e-12 -1.699963215216145e-5 -1.3342392227787093e-7 -6.644323141139217e-6 -7.730237211432236e-10 -0.999999998749011 7.518887986014826e-9 4.6570652835839556e-5
 -3.5736218153120006e-13 -5.712221819563861e-6 -4.4833138407980526e-8 -2.2326068524963315e-6 -2.591259975001937e-10 -5.317560106371163e-9 -0.9999999989747679 4.4864779389276156e-5
 -5.761615774522634e-9 -0.09209599964426485 -0.0007228276374246719 -0.035995169759317304 -4.168503340121271e-6 -4.453755535551566e-5 -4.40384315588796e-5 -0.9950990645073359],

[17109.29459471599,1621.7646224262967,0.38958128299162176,0.06194873863520719,0.0038518553035416653,0.0002831533684549309,0.00021105647692214153,0.00015956256073655235],
[-0.9999999999997823 6.600058858985186e-7 1.2331965705503575e-12 9.765059434590622e-12 7.02603498894564e-17 4.724477883301136e-17 3.01150513152198e-17 3.7887277031570367e-13
 -1.1225155676132063e-14 -1.8929238910168247e-6 0.9999998734585831 0.0005024054535872699 3.5237931918789836e-9 2.3692544186065296e-9 1.5102240587874317e-9 1.8999891284159902e-5
 -8.855806599706689e-14 -1.493375008747824e-5 -0.0005025739940638873 0.9999754039877025 9.568964384661981e-7 6.412943246709084e-7 4.0877439642855826e-7 0.005142704831758294
 -6.105956623412516e-19 -1.0296614891132935e-10 -3.364500644057751e-9 -1.0576312148979458e-6 0.999999999895822 1.3255897462634977e-9 8.429300751156547e-10 1.0591107580494317e-5
 -4.052743133174752e-15 -6.834233825829435e-7 -2.232942888686783e-5 -0.006995346468949981 -1.4402325058996117e-5 9.616513530916845e-5 5.972204037828296e-5 0.7411466108709892
 -1.7600810920904262e-20 -2.9680651698096193e-12 -9.697445576052479e-11 -3.036966552264417e-8 -5.682567295981274e-11 -0.9999999952325862 1.0087340051517732e-8 8.264242635849449e-5
 -4.408340888949738e-21 -7.433886488490779e-13 -2.428844671265508e-11 -7.606387903048793e-9 -1.4198409791192874e-11 -3.963595795672178e-9 -0.9999999979643065 5.934350904442791e-5
 -3.6250059112697314e-17 -6.112930724580852e-9 -1.9972535248061293e-7 -6.25472598659548e-5 -1.1649484819235968e-7 -1.6931723704607453e-5 -2.2461031088267445e-5 -0.6713235009714277
 -6.600058859721048e-7 -0.9999999998862488 -1.8854030755943154e-6 -1.4929552627953109e-5 -1.0741927362275315e-10 -7.223134858700069e-11 -4.604214101527641e-11 -5.792490052609676e-7],

[1,2,2,3,4,6,7,8],[1.000000000000037,1.000000000094852,1.000000000094852,1.0001278801025653,1.2776975283715815,49.74209151067604,125.24037973335741,1362.9456592342258],[1.0,38.45771998849976,38.45771998849976,4.874698749823528,707004.5207018236,2.4526932056491207e7,9.792661331574471e7,11908.777645136523],[1.0000006600055542,2.803440004469919e11,1.0005267056310405,1.0065998087377843,1.0000154792101963,1.0001137363498231,1.0000826002612377,1.3080421642705857],[0.0,1.00000000019132,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,1])
N1 = norm(Ua' * Ua - eye(8)) = 6.671338704941426e-16
N2 = norm(Va' * Va - eye(8)) = 3.3306690846021566e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
