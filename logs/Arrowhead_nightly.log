>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1173
Commit 61b6a13 (2014-10-22 02:35 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.29791155742273556 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8162796293191048
 0.0 0.8451521509298938 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2850897120604552
 0.0 0.0 0.0634685612629251 0.0 0.0 0.0 0.0 0.0 0.0 0.37368422454523453
 0.0 0.0 0.0 0.5520263784072585 0.0 0.0 0.0 0.0 0.0 0.3456749419788261
 0.0 0.0 0.0 0.0 0.27302918645458285 0.0 0.0 0.0 0.0 0.1461928746584018
 0.0 0.0 0.0 0.0 0.0 0.4470074166150517 0.0 0.0 0.0 0.22379625702334027
 0.0 0.0 0.0 0.0 0.0 0.0 0.6823437315117225 0.0 0.0 0.7077864232185278
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7947588900545952 0.0 0.9331744246277895
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6514002016272815 0.7779645499689245
 0.8162796293191048 0.2850897120604552 0.37368422454523453 0.3456749419788261 0.1461928746584018 0.22379625702334027 0.7077864232185278 0.9331744246277895 0.7779645499689245 0.2920239370038824]
(U,Lambda) = eig(full(A)) = ([-1.3268494423395385,0.08443904104857314,0.2736931293398197,0.3881661978240085,0.4572206106703751,0.5620466783957934,0.6673969381316522,0.74178788536406,0.8420449804337482,2.2091759924214465],
[-0.3671750620312345 -0.20742544716876465 -0.1512826539069221 0.8094871064413286 -0.21723142656533637 0.08465243416857011 -0.03229314541420336 -0.07895575581770677 -0.01594681974062489 -0.28655654563404953
 -0.09592793816713252 -0.020329452865919945 -0.0022391984227751937 -0.05583663167756296 0.031156639328264374 -0.02758417023279164 0.0234437914237747 0.11841806040728424 0.9753421442430779 -0.14023348827299112
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [333.5160919833305 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00014671108300582904
 0.0 88.99917036292037 0.0 0.0 0.0 0.0 0.0 0.0 0.5489627739605498
 0.0 0.0 57.58493034360287 0.0 0.0 0.0 0.0 0.0 0.0011118505457370026
 0.0 0.0 0.0 0.16490300596852892 0.0 0.0 0.0 0.0 8.364421062667009e-5
 0.0 0.0 0.0 0.0 0.0011959394690795877 0.0 0.0 0.0 1772.062718257941
 0.0 0.0 0.0 0.0 0.0 0.0001499978510743736 0.0 0.0 10090.42185191462
 0.0 0.0 0.0 0.0 0.0 0.0 8.002420283144094e-5 0.0 1532.5852887374447
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 4.768187802754883e-5 0.024021026097030353]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-1.4177579025404205e-8 0.9999999999999998 5.754875511110445e-14 4.6711973119365784e-17 2.7957538096993453e-23 3.0218949515449893e-20 3.0870277197926425e-22 5.652686797234409e-27
 -5.299851303951222e-5 -8.089393618768821e-13 0.9999999985955789 4.096231193093283e-12 1.4690681813609201e-18 1.5878921636728366e-15 1.6221169839139777e-17 2.9702743515213135e-22
 -1.0733678063736238e-7 -1.5684876623749377e-15 -9.784920975063926e-12 0.9999999999999942 7.10725284490656e-21 7.68207864057023e-18 7.847655222876572e-20 1.4369918605889112e-24
 -8.07466693935707e-9 -1.1447925656946387e-16 -4.2794681074442955e-13 -8.667158654298087e-16 1.0 7.047757524479007e-14 7.199296216082903e-16 1.3182699878260445e-20
 -0.17106762243024062 -2.4253247352007635e-9 -9.066329632304824e-6 -1.8361847959232162e-8 -1.3813835180042727e-9 0.9852592468901927 0.0002913610067913251 5.318353267408993e-9
 -0.9740876876085262 -1.3810205165767096e-8 -5.162519908558571e-5 -1.0455543695025327e-7 -7.865421854475429e-9 -0.16917232983240427 0.15011294747225093 2.138106498344859e-6
 -0.14794945958437167 -2.097565154570957e-9 -7.841101373926892e-6 -1.5880418765275992e-8 -1.1946401117611885e-9 -0.02539565388583433 -0.9886688111336329 1.59025740798121e-6
 -2.318890737001304e-6 -3.287625666802315e-14 -1.2289776113381947e-10 -2.489022675574831e-13 -1.8724228369790446e-14 -3.9685412774374395e-7 -1.2512788829127954e-6 -0.99999999999645],

[10358.843439122484,333.51609198333045,88.99917023793728,57.58493034360254,0.1649030059685289,0.0011785853778002366,8.225987997004765e-5,4.768187802862837e-5],
[-4.5646512355612954e-10 1.0 2.156585938031563e-13 2.705429116722384e-16 5.654408052066584e-20 8.55135837935252e-15 1.2516106531207447e-15 3.9538333802361373e-20
 -4.5534269522511243e-7 -2.1586644186437372e-13 0.9999999999998963 6.330843427694082e-12 7.92865166888701e-16 1.1990738036851678e-10 1.755011870337197e-11 5.544075945937791e-16
 -5.966864035192617e-10 -2.708152768447996e-16 -6.331115124560224e-12 1.0 2.48188720153728e-18 3.7534146591651976e-13 5.493646228690174e-14 1.7354407925512895e-18
 -1.2854107297981125e-13 -5.660288658662563e-20 -7.929255441116477e-16 -2.481969686811799e-18 1.0000000000000002 9.860943661910015e-12 1.44321337123541e-12 4.559104898093381e-17
 -1.9749938566815547e-8 -8.69685645125203e-15 -1.218301408650354e-10 -3.8134384410389165e-13 -1.0018319929429368e-11 0.9997667057696419 0.00423596688810376 1.3339299637451315e-7
 -1.4104958797568428e-8 -6.211097897683491e-15 -8.700832719475978e-11 -2.723471360840585e-13 -7.1544867786696885e-12 -0.02153046051145459 0.2737254120414068 6.726064353575299e-6
 -1.1429401006165587e-9 -5.032919952478295e-16 -7.050379066360594e-12 -2.206858365092821e-14 -5.797354757280624e-13 -0.0017243273129607204 -0.9617985523937738 2.6689192337198435e-6
 -1.0673881300620902e-14 -4.7002279593915944e-21 -6.584326618523571e-17 -2.0609780183184223e-19 -5.4141303734554496e-18 -1.6055476735274567e-8 -7.253028705514766e-7 -0.9999999999738096
 -0.9999999999998961 -4.5646512345762385e-10 -4.553426952214675e-7 -5.966864063906291e-10 -1.2854077390330418e-13 -1.94396740134597e-8 -2.845267618240703e-9 -8.988189783025313e-14],

[1,1,2,3,4,5,7,8],[1.0,1.0,1.0000000000000007,1.000000009661959,1.0000000056168852,1.0000000055324367,6.621797392551414,17.841464750420037],[998.5024554916668,998.5024554916668,1.0,763.0861902068891,3.542129167717857e6,23.053696202437138,398.36653162360824,4.2656375025424995e7],[4.79937626039824e18,1.000000000456697,1.0000004555649245,1.0000000006036935,1.000000000017882,1.0221268664921992,1.203396793476234,1.0000095283242934],[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 4.44089209858678e-16
N2 = norm(Va' * Va - eye(8)) = 4.440892098500627e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
