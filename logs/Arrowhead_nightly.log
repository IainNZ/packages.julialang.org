>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1349
Commit da6087e (2014-10-30 05:12 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.6833085964004948 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.18229951113513954
 0.0 0.9930625360906851 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7138345335129792
 0.0 0.0 0.3129337167196866 0.0 0.0 0.0 0.0 0.0 0.0 0.07463196543547257
 0.0 0.0 0.0 0.21492433372444109 0.0 0.0 0.0 0.0 0.0 0.21279585942919166
 0.0 0.0 0.0 0.0 0.5142720402450496 0.0 0.0 0.0 0.0 0.20136528795229847
 0.0 0.0 0.0 0.0 0.0 0.39373844022763516 0.0 0.0 0.0 0.40909793900222047
 0.0 0.0 0.0 0.0 0.0 0.0 0.46038472188525326 0.0 0.0 0.21813264010404154
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8828391543822347 0.0 0.7649355251134355
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2587042319855746 0.3835462756269472
 0.18229951113513954 0.7138345335129792 0.07463196543547257 0.21279585942919166 0.20136528795229847 0.40909793900222047 0.21813264010404154 0.7649355251134355 0.3835462756269472 0.3820219419851727]
(U,Lambda) = eig(full(A)) = ([-0.7264481899535924,0.22159157379796968,0.2976791499153224,0.3165760361675871,0.43681683392026427,0.48818101700039973,0.5513363018550357,0.6924457132933315,0.9427236574242861,1.8752876202256303],
[-0.09595002098178337 0.011712093398058572 -0.03832153434946428 0.022146853984862637 -0.0530079671943053 -0.07599814352726514 -0.18614825862927395 -0.9667689572261153 -0.036675366129943744 -0.09733119475428392
 -0.3080324207493922 0.027447505418683155 -0.08321484682634778 0.04701261715751903 -0.09197905465410508 -0.1150122810347412 -0.21777127949860303 0.11506166323114375 0.7400791305700039 -0.5149360717604885
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [105.65574827998906 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.009637327412976751
 0.0 32.3624913644867 0.0 0.0 0.0 0.0 0.0 0.0 8.28468994989834
 0.0 0.0 5.555665244251955 0.0 0.0 0.0 0.0 0.0 116.43589633040209
 0.0 0.0 0.0 0.25415521937588587 0.0 0.0 0.0 0.0 0.0002535036679561713
 0.0 0.0 0.0 0.0 0.010380849669079423 0.0 0.0 0.0 0.14588236727567447
 0.0 0.0 0.0 0.0 0.0 0.0007393714100030675 0.0 0.0 3.429875511755059
 0.0 0.0 0.0 0.0 0.0 0.0 0.00024136344413471132 0.0 5197.807146758365
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 7.164057855738365e-5 15267.456711988505]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-5.975624657265095e-7 0.9999999999998215 3.1778498559509404e-11 1.1960153461603502e-11 5.434930861198683e-20 5.217168911200419e-20 6.095893173464343e-21 8.675725862509969e-19
 -0.0005136722061190044 -3.387297257774337e-10 0.9999998680704174 1.1260222156392676e-7 4.980125741246578e-16 4.780319776809518e-16 5.585465314080262e-17 7.949280684535075e-15
 -0.007219298536069268 -4.325941554392156e-9 -3.820952796960876e-6 0.9999739405174753 2.3798289819083515e-13 2.279716319109086e-13 2.6636781833657892e-14 3.790968883220501e-12
 -1.5717819847168076e-8 -9.392431916419916e-15 -8.074293469798774e-12 -1.1371261085438208e-10 0.9999999999999998 2.375613855995714e-16 2.7711296905437094e-17 3.943864665120302e-15
 -9.045047693532594e-6 -5.404980125876989e-12 -4.646183341170906e-9 -6.530084700338556e-8 -1.424134545914488e-13 0.9999999999590916 9.607552106175404e-12 1.3610844123886923e-9
 -0.00021266029723843334 -1.2707778975224358e-10 -1.092375256259676e-7 -1.535298625676397e-6 -3.342759444288233e-12 -1.9332403448468442e-9 0.9999999773622663 6.978257646652496e-6
 -0.322276190208452 -1.9258012177869966e-7 -0.00016554408146362377 -0.002326669296105366 -5.065748740450037e-9 -2.9164446737212544e-6 -7.514485975657062e-5 0.9466428105545285
 -0.9466179957024191 -5.656632864236707e-7 -0.00048625064881828537 -0.006834097860366507 -1.4879550898729685e-8 -8.562214792113974e-6 -0.00019906962910486305 -0.32228463999503193],

[16128.424328764502,105.6557482799702,32.362487094940874,5.555520466509033,0.2541552193758858,0.0103808496686548,0.0007393713936253749,0.00022964857341643095],
[-3.914573933162764e-9 1.0 1.0374916596086956e-10 2.2746005007938974e-10 2.259373969970239e-17 5.310007396411958e-16 8.710996398159112e-16 3.991491408977158e-13
 -1.0307090138405696e-6 -1.0375334994854516e-10 0.9999999999992537 6.559400590732523e-7 6.341371886476474e-14 1.4902735559653876e-12 2.4447736895424148e-12 1.1202269784652662e-9
 -2.486790100951633e-6 -2.2746971682711514e-10 -6.559426224482397e-7 0.9999999999966838 5.202148983805681e-12 1.220067829232863e-10 2.001498087806142e-10 9.171123405307373e-8
 -2.476848246262423e-13 -2.2593523145236382e-17 -6.341057231175512e-14 -5.202150497280186e-12 1.0 5.816235471997014e-15 9.525619742546069e-15 4.364729004150384e-12
 -5.821726812380323e-12 -5.310481167802944e-16 -1.4903468530765729e-12 -1.2201886035561037e-10 -5.8168101626968456e-15 0.9999999999999961 1.3489101006873391e-10 6.152536661446292e-8
 -9.748933969974281e-12 -8.892813322396565e-16 -2.4957013690070796e-12 -2.0432935428558262e-10 -9.724532786277928e-15 -1.376941854731101e-10 0.9999999995130993 2.246704222374668e-5
 -4.8228946390378095e-9 -4.399363235895128e-13 -1.2346482994634765e-9 -1.0108376308860143e-7 -4.810786755112001e-12 -6.78097798875951e-8 -2.453059763501687e-5 0.9949331089746554
 -4.204766659319857e-9 -3.8355173067043867e-13 -1.0764091679063453e-9 -8.812832705521243e-8 -4.1942071371845e-12 -5.908977020366785e-8 -1.9288632918765824e-5 -0.10053908772833788
 -0.9999999999963767 -3.914573260564261e-9 -1.03070738264184e-6 -2.4867907761785406e-6 -2.4769778580320783e-13 -5.821456254239961e-12 -9.550021528037293e-12 -4.3759435940588844e-9],

[1,1,2,3,4,5,6,7],[1.0,1.0,1.000000000000788,1.0000005437392159,1.0001049883617323,1.0001047597278718,1.0001026268380193,1.0000965151828414],[635.2917512479875,635.2917512479875,2.4127079369131947,1.0,1.004013794648159e7,427156.73304916016,255083.25459369336,515.6218395797626],[6.525759687760315e16,1.0000000042466215,1.00000168906719,1.000003332486463,1.0000000000145337,1.0000001271665613,1.0000438186017409,1.081427482451521],[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 4.440892121437316e-16
N2 = norm(Va' * Va - eye(8)) = 2.220446226205031e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
