>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1374
Commit 53254c2 (2014-11-01 17:48 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.6194280281846269 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.020004604854889196
 0.0 0.03882907566306848 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.02116396547371946
 0.0 0.0 0.48661334592178074 0.0 0.0 0.0 0.0 0.0 0.0 0.14452215548378988
 0.0 0.0 0.0 0.24575405650893845 0.0 0.0 0.0 0.0 0.0 0.1253201059988891
 0.0 0.0 0.0 0.0 0.3605645583145898 0.0 0.0 0.0 0.0 0.2695292368784674
 0.0 0.0 0.0 0.0 0.0 0.1375468659944843 0.0 0.0 0.0 0.1820803782126239
 0.0 0.0 0.0 0.0 0.0 0.0 0.8416180276091803 0.0 0.0 0.9366520484159679
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9948491652571441 0.0 0.8228989678046874
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9870247509176515 0.43090238318589824
 0.020004604854889196 0.02116396547371946 0.14452215548378988 0.1253201059988891 0.2695292368784674 0.1820803782126239 0.9366520484159679 0.8228989678046874 0.43090238318589824 0.7815191312388898]
(U,Lambda) = eig(full(A)) = ([-0.5634641676034141,0.039059843712395015,0.15230804571479217,0.25182342526265034,0.38553981141633553,0.4930386262001921,0.619500162743185,0.9183086356311964,0.9887823235657044,2.208850298967311],
[-0.011965891834943962 -0.00037566527787070704 0.0033865124556153067 0.0025928287115071407 -0.0075771748584672225 0.006925765883346839 0.9998213532786415 0.0038292614754067977 -0.00019325040235290691 -0.0086986325274753
 -0.024862758707941454 0.9995304760012805 -0.014747988994615671 -0.004734277957479015 0.005407735353552618 -0.0020388687571360046 0.00013140220444798526 0.0013767468019564135 -7.949291007226973e-5 -0.006740519419062986
... truncated ...
 2.0e-7 9.999999999999998e-15 1.99999990000001 2.0e-7
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [310.23586051760327 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.01283034063688916
 0.0 92.05957500483942 0.0 0.0 0.0 0.0 0.0 0.0 0.004839005124909563
 0.0 0.0 1.8048611169555144 0.0 0.0 0.0 0.0 0.0 1.3217029991801363
 0.0 0.0 0.0 0.6748526151412196 0.0 0.0 0.0 0.0 0.10613888401516246
 0.0 0.0 0.0 0.0 0.420617978771696 0.0 0.0 0.0 5.570744921724545e-5
 0.0 0.0 0.0 0.0 0.0 0.09235836061818521 0.0 0.0 0.010969788726653825
 0.0 0.0 0.0 0.0 0.0 0.0 0.004022865497251988 0.0 31.831276532142056
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0006067378851119929 0.001083465687980153]
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.9999999999907881 8.036040319230392e-10 4.292289843922233e-6 5.668177761680706e-10 6.364067712326905e-12 1.2969341952336326e-15 1.2287900996724884e-14 2.2544421989767377e-18
 -7.149009885685363e-10 -0.9999999997864653 2.0665669150543023e-5 2.428619174553796e-9 2.7259634795667716e-11 5.5550780724718324e-15 5.263105313386444e-14 9.656129088992618e-18
 -1.780766778629429e-7 -8.576685271370964e-7 -0.041619510904030384 0.9991335325191941 2.2517925403998834e-5 4.174081522614529e-9 3.749803359703142e-8 6.861692618384244e-12
 -1.429996723189637e-8 -6.885198917450945e-8 -0.0033330087804503794 -0.00016137582228102965 0.9999944324896556 3.7076781299330425e-9 2.1892307268620396e-8 3.941321930987995e-12
 -7.505377511865215e-12 -3.613607470931026e-11 -1.748863885851593e-6 -7.702746789217339e-8 -9.549140356453297e-9 0.9999999999984678 3.049453031886397e-11 5.325046747839177e-15
 -1.477939893670567e-9 -7.115695195977399e-9 -0.00034432530675997726 -1.4380582816501114e-5 -1.171858779952329e-6 -6.337915128796043e-10 0.9999999406159527 2.174951053555805e-11
 -4.288570223550549e-6 -2.0647748065509044e-5 -0.9991279133322019 -0.0416192016351404 -0.0033368370126223503 -1.7505764008875033e-6 -0.0003446274645486725 3.40377697269174e-5
 -1.4597336937634243e-10 -7.028033104076377e-10 -3.4008086167642795e-5 -1.4166179474972896e-6 -1.135745484886745e-7 -5.958039138108073e-11 -1.1708600777074075e-8 -0.9999999994207149],

[310.23586078574147,92.0595751493214,31.858971927604816,1.8033022870157993,0.6748488609381881,0.4206179787710517,0.09235835514404946,0.0006067379002117152],
[-0.9999999991264839 2.708102747103513e-9 4.1797401257834474e-5 9.75139896468367e-8 2.925635853309785e-9 9.565817829960593e-13 4.127561100160706e-11 1.1527363221296943e-12
 -2.121401472140316e-10 -0.9999999982170251 5.971544604492331e-5 1.2398234653604005e-7 3.7186258128783563e-9 1.2158256476925837e-12 5.246079118671758e-11 1.4651122664569678e-12
 -1.0359978079175373e-9 -1.68149002790359e-8 -0.002357811077773779 0.9999972142632247 6.0223452018102794e-5 1.7910878325222752e-8 7.327841936554237e-7 2.0411453115259458e-8
 -3.110655956547802e-11 -5.047269105546719e-10 -7.060145245385792e-5 -6.0391924565869196e-5 0.9999999954865684 5.948714530457977e-9 1.599647458928948e-7 4.3837897901426216e-9
 -1.0175795638079179e-14 -1.6510485389835218e-13 -2.3089370067724415e-8 -1.7966559510287928e-8 -5.9517624585670125e-9 0.9999999999999994 1.3887804396589196e-10 3.691561709198236e-12
 -4.399881603819481e-13 -7.138789657601554e-12 -9.981904288678683e-7 -7.365193640740117e-7 -1.6037806693777176e-7 -1.3916653128881494e-10 0.9999999998865559 3.310736211815935e-9
 -5.5610402811487854e-11 -9.022756530644287e-10 -0.00012616092003906883 -9.284547104869997e-5 -1.9891337549818242e-5 -1.6742825458887822e-8 -1.5010985572187412e-5 0.00022568125279473077
 -2.8548464124603983e-16 -4.6319722148922035e-15 -6.476666706304886e-10 -4.766343300648557e-10 -1.0211172507095567e-10 -8.594421181501258e-14 -7.691834335965074e-11 -0.999999974533985
 -4.1797515512019547e-5 -5.971557279997459e-5 -0.9999972072520126 -0.0023577951048175507 -7.074113520566134e-5 -2.3129972577357814e-8 -9.980384718521265e-7 -2.7873004697647952e-8],

[1,2,3,3,4,5,6,8],[1.000000001293938,1.0000001807658028,1.0000003717330486,1.0000003717330486,1.0040117222260803,1.0036836370754507,1.00347370538646,87.07137130476303],[1.0,8.935217654682011,1.6686010764664865,1.6686010764664865,55.570810572013194,169874.84699553126,3928.76185861927,6.054996661159266e6],[1.0000417971038214,1.0000597329442704,180330.65591566142,1.0025061616415492,1.000151019860449,1.0000000638738147,1.000016901853848,1.0002256863115433],[0.0,0.0,1.000000752774787,0.0,0.0,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 4.440899532598413e-16
N2 = norm(Va' * Va - eye(8)) = 2.2204460963049535e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
