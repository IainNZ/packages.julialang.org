>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1425
Commit 0470ecb (2014-11-06 06:36 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0805083777041955 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7638727343155516
 0.0 0.30860379481402345 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.10888348032561823
 0.0 0.0 0.7419879199776951 0.0 0.0 0.0 0.0 0.0 0.0 0.3830933643113026
 0.0 0.0 0.0 0.0022690786558783316 0.0 0.0 0.0 0.0 0.0 0.10133577046188025
 0.0 0.0 0.0 0.0 0.4824869002489858 0.0 0.0 0.0 0.0 0.6851633533203181
 0.0 0.0 0.0 0.0 0.0 0.44244550435878605 0.0 0.0 0.0 0.5266961464503508
 0.0 0.0 0.0 0.0 0.0 0.0 0.2816906807766979 0.0 0.0 0.4521575231105617
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.03712289626735332 0.0 0.5259128531355817
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.8345252307318554 0.15520099210055616
 0.7638727343155516 0.10888348032561823 0.3830933643113026 0.10133577046188025 0.6851633533203181 0.5266961464503508 0.4521575231105617 0.5259128531355817 0.15520099210055616 0.9016863316706176]
(U,Lambda) = eig(full(A)) = ([-0.873830995881459,0.002862708692670246,0.05019944469476778,0.21640282093808216,0.3069607272123065,0.34952473160600017,0.45904322498191563,0.7121449448518637,0.830015182772011,2.060003925337938],
[-0.4936808889670439 -0.057297835189852445 0.5293512259378239 -0.5526860644761294 -0.0488966292320852 -0.2557894008911106 -0.04658016729388506 -0.0893062055740874 -0.029273663242467884 0.297489791465154
 -0.05679537136169234 -0.002074161800361755 0.00885025401995279 0.1161142951412387 0.9605971761299896 -0.2396937141904633 -0.016706528497647748 -0.01992517113760976 -0.005998092046473502 0.047927216208702085
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [6007.395975380807 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00010245003431060745
 0.0 5170.169053710567 0.0 0.0 0.0 0.0 0.0 0.0 0.018713010140253433
 0.0 0.0 443.6692514171281 0.0 0.0 0.0 0.0 0.0 0.00019438864680861642
 0.0 0.0 0.0 0.04846560450061341 0.0 0.0 0.0 0.0 1234.2734361126236
 0.0 0.0 0.0 0.0 0.02897619301590366 0.0 0.0 0.0 12.411652311198262
 0.0 0.0 0.0 0.0 0.0 0.004014555488109392 0.0 0.0 22.65205355507846
 0.0 0.0 0.0 0.0 0.0 0.0 0.0013216059418801396 0.0 0.00019462425326259396
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0002755440168013542 27.587388481004922]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-1.0 2.172573930464634e-13 3.6601900709016493e-9 8.22433681588452e-17 3.495529408496366e-20 1.0548100581001939e-19 2.4083684171023136e-24 1.143482806999897e-19
 -2.1390185736727394e-13 -0.9999999999995799 9.16765417669056e-7 2.0320299867016074e-14 8.620005359455834e-18 2.6011706071928666e-17 5.939057074541252e-22 2.8198383628946585e-17
 -5.793419355634498e-16 -1.4538653926238882e-13 -1.807516251547376e-7 0.9999999999999837 1.2159776909710889e-17 3.669331147413468e-17 8.377907642023742e-22 3.9777939617671213e-17
 -3.6584755478317e-9 -9.163359821455135e-7 -0.9995315753469124 -1.80666956639252e-7 0.010070582301724617 0.019666448153593228 4.4611878166346714e-7 0.02117649811878745
 -3.67890332549175e-11 -9.214525142669076e-9 -0.010051126445744015 -1.8167574275904915e-9 -0.99994915122923 0.0005605883170475909 1.2567088606159527e-8 0.0005962833661248064
 -6.714232163585993e-11 -1.6817093468015076e-8 -0.018343943957363384 -3.315697647852162e-9 -0.0003386375509509777 -0.9979614727053456 1.3373150656152617e-6 0.061125150623027334
 -5.768803335608074e-16 -1.4449084054563037e-13 -1.5760939227334043e-7 -2.848815349749959e-14 -2.8596498563004375e-9 -4.753409679193746e-7 -0.9999999999008875 1.407032846693495e-5
 -8.177101056115751e-11 -2.0481131633172003e-8 -0.02234064593701205 -4.0381080181973366e-9 -0.0004045400546013986 -0.06071091790866872 -1.4008474207334728e-5 -0.9979052641092293],

[6007.395975380807,5170.169053746481,1234.851872114839,443.6692514171218,0.02897883016067436,0.004118257620046926,0.0013216059419426064,0.0010906322103808423],
[-1.0 2.5243878392395956e-13 1.7806355237900547e-8 1.1135963948394144e-15 7.246334370295939e-15 1.538675401698181e-13 1.0947304545913572e-17 6.298506450941506e-13
 -1.8409120491202316e-13 -0.9999999999926334 3.838381184803193e-6 2.367966344275511e-13 1.5379118033811162e-12 3.265578071479861e-11 2.3233800727227257e-15 1.3367513724184724e-10
 -4.278662567264719e-17 -1.2476098241686988e-14 -6.494215220121065e-8 0.9999999999999979 1.861675950691712e-13 3.953053824145986e-12 2.8125024971626e-16 1.6181668325131575e-11
 -2.951532239642926e-14 -8.589811443044408e-12 -3.922972715235389e-5 -1.9735722588030468e-11 0.016842531469355364 0.23144406836136866 1.6359957038794897e-5 0.9410429774256781
 -1.7744895339538764e-16 -5.1642771504811374e-14 -2.3585288769926834e-7 -1.1865305904520735e-13 -0.9998581533987273 0.003944317421562009 2.7553325355422475e-7 0.015842207615500148
 -4.486912081578924e-17 -1.305821031657489e-14 -5.963693504507693e-8 -3.000219678641134e-14 -4.6912840549893856e-5 -0.9728317353602869 4.062274060379693e-6 0.2249982226451012
 -1.2691164020354615e-22 -3.693495346617047e-20 -1.6868218288225034e-13 -8.486076692317733e-20 -1.3041693611607812e-10 -1.52543503971989e-7 -0.9999999998536218 1.7050138010881865e-5
 -3.750628858204912e-18 -1.0915413442336194e-15 -4.985076719265543e-9 -2.507896366624136e-15 -3.846552500010047e-6 -0.004062040728783071 -2.9206521625300048e-6 -0.25211691186330953
 -1.7806355251282708e-8 -3.8383811874199e-6 -0.9999999992231159 -6.49421514764973e-8 -4.249056647398244e-7 -9.022380985789196e-6 -6.419206563757773e-10 -3.693275708388628e-5],

[1,2,3,3,5,6,7,7],[1.0000000000636158,1.0000000000106226,1.000000000531296,1.000000000531296,4.604699304138686,330.69310664484124,7612.179841682818,7612.179841682818],[157.19909060933566,1.0,1121.807061199577,1121.807061199577,269.0156028521873,1063.9062300338712,3.761399434715347e8,3.761399434715347e8],[1.0000000178065687,1.0000038383753747,2.371082572050517e14,1.0000000649622722,1.016610691354721,1.1896620323207392,1.000023618765686,3.374525677321084e9],[0.0,0.0,1.0000000010898662,0.0,0.0,0.0,0.0,15109.878041635735],[0,0,0,0,0,0,1,3])
N1 = norm(Ua' * Ua - eye(8)) = 7.240350881702124e-16
N2 = norm(Va' * Va - eye(8)) = 1.3726184671433646e-15
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
