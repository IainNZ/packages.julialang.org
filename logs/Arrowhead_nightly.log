>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1318
Commit 7a7110b (2014-10-27 03:52 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.4504701302452545 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7474369049275515
 0.0 0.3080217042801976 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2888679471724549
 0.0 0.0 0.5420406712515602 0.0 0.0 0.0 0.0 0.0 0.0 0.393325283503432
 0.0 0.0 0.0 0.7342321771871949 0.0 0.0 0.0 0.0 0.0 0.017547703323186337
 0.0 0.0 0.0 0.0 0.45107788423169515 0.0 0.0 0.0 0.0 0.9970887132284498
 0.0 0.0 0.0 0.0 0.0 0.39291091287597113 0.0 0.0 0.0 0.6719395664950756
 0.0 0.0 0.0 0.0 0.0 0.0 0.9980625365381688 0.0 0.0 0.1755400806911358
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6493899249226163 0.0 0.8771318134538282
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9732123934458548 0.5390547172333966
 0.7474369049275515 0.2888679471724549 0.393325283503432 0.017547703323186337 0.9970887132284498 0.6719395664950756 0.1755400806911358 0.8771318134538282 0.5390547172333966 0.8701697660915007]
(U,Lambda) = eig(full(A)) = ([-1.1364410146483448,0.31226069922304456,0.40499216837494734,0.4506889241701071,0.5322156254888095,0.5985925144875772,0.7342125362402634,0.9306526683314944,0.9964123469846131,2.546001632417514],
[-0.31628255612103634 0.07801328395824474 0.2644099814900104 0.7998446657140967 0.20862336065717643 -0.24260445292473765 0.002948179933337298 0.11368031250115157 0.012565924817498866 -0.2621921237645164
 -0.13429082149840804 -0.9830331380690879 -0.04792522743209187 0.00047406897151313813 0.02939867458555396 -0.047796081751634925 0.0007585757365265388 0.03388330183217697 0.0038515096927812416 -0.09488170186189056
... truncated ...
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [74.64367064557588 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0006955775850434188
 0.0 50.11407066830121 0.0 0.0 0.0 0.0 0.0 0.0 0.00010870522439794913
 0.0 0.0 1.2636626984564305 0.0 0.0 0.0 0.0 0.0 80.6166943063713
 0.0 0.0 0.0 0.541685009773011 0.0 0.0 0.0 0.0 0.09521346822643525
 0.0 0.0 0.0 0.0 0.0364133936761999 0.0 0.0 0.0 29.691181595698872
 0.0 0.0 0.0 0.0 0.0 0.018896781081981086 0.0 0.0 0.00017862718651530482
 0.0 0.0 0.0 0.0 0.0 0.0 0.0013346204754880312 0.0 1.626284929548245
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0001898601063855863 29.305025359896195]
Remedy 3 
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-2.3636641913056735e-5 0.9999999997206549 1.0820349269273618e-11 8.961815698433109e-10 1.2292263819628153e-11 1.9821842787014e-12 1.4879984118528153e-17 4.1123631897768806e-16
 -1.721749428785576e-6 -5.151672427439795e-11 0.9999999999985177 3.107417338245516e-10 4.2621742001721834e-12 6.87251255076984e-13 5.1591000928336125e-18 1.425814133704311e-16
 -0.8880245799248764 -2.099033111188582e-5 -1.5290987058747466e-6 0.4597549554773818 0.006089569972311302 0.000801908866416635 6.0186989351229805e-9 1.6630105235139422e-7
 -0.0010486479401789568 -2.478512272894667e-8 -1.8050258970765924e-9 -0.01526919046852922 0.9998828692068232 5.1636718790600576e-6 3.8723663304877685e-11 1.0689053211156572e-9
 -0.3269967340885205 -7.72853897435662e-6 -5.628102766034355e-7 -0.6326915095984709 -0.010008388331303556 0.7019076977862007 3.652709741168119e-6 7.386166207848376e-5
 -1.967267606262218e-6 -4.649619377243994e-11 -3.3859608161493834e-12 -3.795463203763536e-6 -6.001310037966702e-8 -9.542505297386357e-6 0.9999999999453304 1.6560328429797316e-9
 -0.01791069760973519 -4.233177259663228e-7 -3.082697754872151e-8 -0.034518930961445815 -0.0005457187994890247 -0.03957184669422139 -5.455512563087366e-7 0.9984595241952148
 -0.3227438427418765 -7.628021674096841e-6 -5.55490210720593e-7 -0.6220145736309618 -0.00983358318626651 -0.7111673569295286 -9.78257346410096e-6 -0.055484890630625734],

[90.7927055890079,74.6436706388185,50.114070668249575,0.5815349438396873,0.5416763556052001,0.025579337612847062,0.018896781081417742,0.0013326088938194433],
[-1.9432461040562108e-5 0.9999999998111833 1.6116643017735692e-11 1.1503054570777456e-7 1.6938891324058452e-9 5.784258869311572e-9 5.877702815994546e-14 2.3034656675065384e-11
 -9.503392589471837e-7 -3.4587162431746026e-11 0.9999999999995481 2.6778327550969887e-8 3.943219910889322e-10 1.3464366624767063e-9 1.368188081997432e-14 5.361914556305056e-12
 -0.012359622171005837 -3.553509390325375e-7 -3.8557334718692685e-8 0.9990374504948456 0.014206199595056273 0.03961565922423407 4.0248152872096117e-7 0.00015769700888622478
 -6.256415270799655e-6 -1.7986427158195907e-10 -1.9510597675673185e-11 -0.014222862573932142 0.9998988439748776 0.00010934933869704475 1.1100318009386452e-9 4.344935652165991e-7
 -0.00013114556650725603 -3.77021025100483e-9 -4.089436737765545e-10 -0.039616613341380516 -0.0006727991366078063 0.9991987169756616 7.038635692342263e-6 0.002018261915642509
 -4.094494711226098e-10 -1.1770969826961302e-14 -1.2767623831340178e-15 -1.233322915948553e-7 -2.0936014802759403e-9 -7.049542732794961e-6 0.9999999999751421 2.348302659804908e-8
 -2.632808836916204e-7 -7.568873554536498e-12 -8.209733291532394e-13 -7.922081474402927e-5 -1.344580534335968e-6 -0.0020646897761909216 -3.8530576925286185e-8 0.9999667052481204
 -6.74902019063569e-7 -1.940227475633302e-11 -2.1045073588560537e-12 -0.00020307593614789753 -3.4467170859066183e-6 -0.005278569448834453 -9.828766235988352e-8 -0.007905070487508345
 -0.9999236081433618 -1.942955279754062e-5 -9.499352187310884e-7 -0.012343383673809962 -0.00018176468994880306 -0.0006207190578743741 -6.307467268427062e-9 -2.471890070511908e-6],

[1,1,2,4,4,6,6,7],[1.0,1.0,1.0000000003072083,57.137594713585386,57.137594713585386,29.802816105894436,29.802816105894436,17.815565134013298],[1962.0839509694003,1962.0839509694003,18700.191495884592,1975.1994203527847,1975.1994203527847,3.0180106091831483e7,3.0180106091831483e7,46935.53049438919],[2.6484074790615883e9,1.000019788537751,1.0000009889391475,4845.091228710728,1.0148648192837209,1.3959903653596878e10,1.0000075853033166,1.009993598303223],[1.0,0.0,0.0,113.20092214083071,0.0,51.17591134414081,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 7.047174873791436e-16
N2 = norm(Va' * Va - eye(8)) = 4.500950543053173e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
