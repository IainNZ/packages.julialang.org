>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1368
Commit a25f17d (2014-10-31 22:45 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.2357421163055866 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.07480113086868401
 0.0 0.3828470420865129 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.061883668738375475
 0.0 0.0 0.05636677826801839 0.0 0.0 0.0 0.0 0.0 0.0 0.15221481237210077
 0.0 0.0 0.0 0.32356780274465646 0.0 0.0 0.0 0.0 0.0 0.7899769953398454
 0.0 0.0 0.0 0.0 0.2234626662851753 0.0 0.0 0.0 0.0 0.17197032055029782
 0.0 0.0 0.0 0.0 0.0 0.5665233149921751 0.0 0.0 0.0 0.3060019974065238
 0.0 0.0 0.0 0.0 0.0 0.0 0.7858431748386607 0.0 0.0 0.018495657208421612
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6411606919285096 0.0 0.5327515511059859
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9060545245446792 0.9173515241594048
 0.07480113086868401 0.061883668738375475 0.15221481237210077 0.7899769953398454 0.17197032055029782 0.3060019974065238 0.018495657208421612 0.5327515511059859 0.9173515241594048 0.956813406314831]
(U,Lambda) = eig(full(A)) = ([-0.6282922190285695,0.06316583860080804,0.22695981199781545,0.23662309314942875,0.38238380644024494,0.47781875971588184,0.5858340758619416,0.7424412774377955,0.7859573674182503,2.2054897067152033],
[-0.056003911321586525 0.019096049803230916 0.16821274668421884 0.9824625365343378 0.00379786417704549 -0.041489588467642925 -0.011221146496490022 -0.018024380152069724 -0.0008381072521921505 0.027989898217275818
 -0.03959189376219131 0.008528554392069775 0.007840156509311592 -0.004896997391618435 -0.994632862711455 -0.08749144963572601 -0.016011018543899934 -0.021011917736186856 -0.0009464031768049617 0.02502524016023666
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [12432.492357537041 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00666188211395017
 0.0 326.5272687147615 0.0 0.0 0.0 0.0 0.0 0.0 1425.1855520662489
 0.0 0.0 241.47410599317524 0.0 0.0 0.0 0.0 0.0 0.053414983702359135
 0.0 0.0 0.0 61.475080202380454 0.0 0.0 0.0 0.0 0.00034701140151777437
 0.0 0.0 0.0 0.0 19.824022040521122 0.0 0.0 0.0 3736.0968569837937
 0.0 0.0 0.0 0.0 0.0 0.39011745806764253 0.0 0.0 0.6304648311872179
 0.0 0.0 0.0 0.0 0.0 0.0 0.1231171201609982 0.0 1.997316681713841
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00018919550458820615 47.37251670738476]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.9999999999999816 1.9226648409643895e-7 3.8336216401933756e-10 1.163150061448275e-14 3.6461887912978495e-18 1.307648090303464e-15 5.747485652957927e-14 7.616142370071059e-16
 -6.856263710813038e-8 -0.35846352929416164 0.9335437310510323 7.95834745537736e-6 1.1723401889053453e-9 4.055491185272168e-7 1.7825023526506985e-5 2.3620390524303322e-7
 -2.5688774720366057e-12 -1.339426982740797e-5 -1.3668031058379432e-5 0.9999999998168893 8.286500234237816e-14 2.7792872954509014e-11 1.2215740320568527e-9 1.6187381100300048e-11
 -1.6682870791392576e-14 -8.671958699209814e-8 -3.455451576455869e-8 -1.7167028945100215e-12 0.9999999999999956 2.7859503373885213e-12 1.2244756756310095e-10 1.6225638149855627e-12
 -1.796121262194454e-7 -0.9334685523138366 -0.35843490417023605 -1.740224457056213e-5 -9.333710555283382e-8 0.0002885447423121433 0.012679492461758179 0.00016799865598669247
 -3.030939650864826e-11 -0.00015751857390252478 -6.02303830802883e-5 -2.916837301550872e-9 -1.411328588750422e-11 -0.9999552782848391 0.009455494926052738 8.127849352116351e-5
 -9.602036499281784e-11 -0.0004990198613446284 -0.00019080996394522785 -9.24053780751904e-9 -4.470936016112163e-11 -0.0004421492897221768 -0.05535125205874502 0.9984667034860356
 -2.2774186918231895e-9 -0.011835792948063296 -0.004525645239537931 -2.1916775736461517e-7 -1.0604159248335292e-9 -0.009442599009971192 -0.9983416562802604 -0.05535528159021373],

[12432.492357539031,4000.7231606949017,305.039841376724,241.47410596333833,61.47508020238021,0.39014197418000135,0.2515489057375853,0.12297348101061412],
[-0.9999999999998215 5.974798800435631e-7 1.5624671035850322e-8 5.988573471235848e-13 7.373917062444531e-16 4.1670278936828814e-11 2.8406234265234826e-9 7.69984154564591e-11
 -1.8007306971898843e-9 -0.02925673995746957 0.9993038396234272 1.0761474600850059e-5 6.226930304565727e-9 0.00033942219695970145 0.023138070228611772 0.0006271841327490027
 -4.989485399441155e-14 -8.084461738769524e-7 -1.081981804610579e-5 0.9999999999404507 3.2549371701305065e-13 1.720209460614346e-8 1.1726486999833232e-6 3.1785986274783874e-8
 -8.249197268035313e-17 -1.3325324825851142e-9 -6.96381698335998e-9 -4.3704250483770276e-13 0.9999999999999996 4.389851176376893e-10 2.9924495256523425e-8 8.111280565531723e-10
 -2.8639750152430113e-10 -0.004625439054870424 -0.023294076630427426 -1.4286520641419809e-6 -3.009864861642235e-8 0.01466163014962677 0.9992432178843651 0.027082335408319964
 -9.51074360753414e-16 -1.5359909491617867e-8 -7.70290327967478e-8 -4.7123444111670936e-12 -8.956213147326487e-14 -0.9998924421442066 0.014664160969045426 0.00025784550479876923
 -9.508753735573365e-16 -1.5356695718286062e-8 -7.701280315690887e-8 -4.711347409536716e-12 -8.954014617235153e-14 -0.00013952907104199412 -0.027090901989004317 0.9996329623232816
 -3.465736122466367e-17 -5.597185131453628e-10 -2.8069504980634526e-9 -1.7171843034117862e-13 -3.2635325616782345e-15 -4.579095310291715e-6 -0.0007508748760307069 -8.516446266312312e-5
 -5.976881206438954e-7 -0.9995612279793568 -0.02914141367077174 -1.117173879371449e-6 -1.3760964913279095e-9 -7.776562464585629e-5 -0.0053012089410113365 -0.00014369545951686165],

[1,2,2,3,4,6,7,7],[1.0000207477424519,1.0000000000055733,1.0000000000055733,1.776531326290186,1.2716764661275515,10116.78360714374,18709.446148551007,18709.446148551007],[5618.698421624926,1.0,1.0,36079.22495355852,2.1814638388438214e7,1.892058740231511e6,1.8924546847250122e6,1.8924546847250122e6],[1.0000005997749435,1228.0196314594466,1.048177659495705,1.0000133071920811,1.0000000377021832,1.0150094502696465,1398.681966689889,1.0274720010589296],[0.0,1.0000000000117486,0.0,0.0,0.0,0.0,37307.504368141,0.0],[0,0,0,0,0,1,3,1])
N1 = norm(Ua' * Ua - eye(8)) = 6.662422414870394e-16
N2 = norm(Va' * Va - eye(8)) = 4.461905521189442e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
