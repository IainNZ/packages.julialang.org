>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1307
Commit 528a137 (2014-10-26 06:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.6876874695805051 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6631120642274932
 0.0 0.08992089960796923 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6836206131855436
 0.0 0.0 0.2502672735787628 0.0 0.0 0.0 0.0 0.0 0.0 0.5026868065096075
 0.0 0.0 0.0 0.9932134995848363 0.0 0.0 0.0 0.0 0.0 0.7565998370940277
 0.0 0.0 0.0 0.0 0.4045000087247712 0.0 0.0 0.0 0.0 0.04284924541910695
 0.0 0.0 0.0 0.0 0.0 0.027267829988404158 0.0 0.0 0.0 0.403238527338321
 0.0 0.0 0.0 0.0 0.0 0.0 0.8510972344417225 0.0 0.0 0.742341889755437
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.2178557665399734 0.0 0.07967960776905847
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9065507803185702 0.31609750185568664
 0.6631120642274932 0.6836206131855436 0.5026868065096075 0.7565998370940277 0.04284924541910695 0.403238527338321 0.742341889755437 0.07967960776905847 0.31609750185568664 0.2228160573675808]
(U,Lambda) = eig(full(A)) = ([-1.23274350694623,0.040232872766055916,0.17995778873531432,0.21886756727616086,0.38296965953936013,0.40740736446074166,0.7475607885832014,0.8956070444519129,0.941508949608024,2.0698082912585614],
[-0.2523923644306129 -0.029990795818686133 -0.11673072376715374 0.01754916734034443 0.3656379131289272 0.1511966572002164 -0.8014588450818354 -0.09263701814573455 -0.1353586178167283 0.30931092095794144
 -0.37779261855735896 -0.40287820934624624 0.6786181477045277 -0.06577799814349801 -0.3919560680176046 -0.13760603029026025 -0.07522368985667655 -0.02464576316434952 -0.04159230076097126 0.22260196516559394
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [11746.382993276062 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0014948250559477076
 0.0 1838.9875449686601 0.0 0.0 0.0 0.0 0.0 0.0 0.47649038551268796
 0.0 0.0 63.65918935495674 0.0 0.0 0.0 0.0 0.0 6.9719965523859715
 0.0 0.0 0.0 5.6829834652478635 0.0 0.0 0.0 0.0 2.953583773198022
 0.0 0.0 0.0 0.0 0.07606863068845227 0.0 0.0 0.0 0.004632167335818591
 0.0 0.0 0.0 0.0 0.0 0.0566240788617455 0.0 0.0 7804.993025225092
 0.0 0.0 0.0 0.0 0.0 0.0 0.0017779560490708073 0.0 159.26505762135847
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0004213789302468759 4643.041579416711]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.9999999999999701 2.4474432935384763e-7 2.2619795198284045e-13 3.710521949772261e-15 1.2525430824762158e-17 1.8355364046073072e-24 1.6807399634906562e-18 2.390054478615926e-22
 -1.3161762298755115e-11 -5.4701820000263244e-5 0.9999999985038555 4.8312274757412536e-11 1.628963037944937e-13 2.3871379359600072e-20 2.1858232348517382e-14 3.108295586552673e-18
 -1.8786786190302604e-10 -0.0007676238011739429 -4.2038731323157205e-8 0.9999997053768058 2.0050280051805547e-9 2.914852099836453e-16 2.6690303818759597e-10 3.795427514521231e-14
 -7.958513703064783e-11 -0.00032517668442505726 -1.7787919370455465e-8 -2.5161846533489636e-7 0.9999999471300285 1.549727266698342e-14 1.4188166020382911e-8 2.017540662362585e-12
 -1.2481500922395403e-13 -5.099812099744685e-7 -2.789690040138554e-11 -3.9147416135841416e-10 -1.658516648516965e-10 0.9999999999998596 1.4525016665720701e-7 1.766997128826199e-11
 -2.1030766071105112e-7 -0.8592953358880947 -4.700501884041234e-5 -0.0006596158843347674 -0.0002794302467995556 -5.125172260196385e-7 0.5114792346196895 5.3755620191992715e-5
 -4.291440311647826e-9 -0.017534380970791665 -9.591625518210941e-7 -1.3459804313925784e-5 -5.701358141979102e-6 -4.665815625160132e-9 -0.029563167251661575 0.9994091076288176
 -1.2510801867121744e-7 -0.511178416236594 -2.7962389717075103e-5 -0.0003923926061856936 -0.00016621122587862268 -1.359520153875278e-7 -0.8587869419680795 -0.03437197548736068],

[11746.382993276298,9083.015697691028,1838.9875423300534,63.65917060041527,5.682983164810836,0.0760686306884471,0.028964348897118984,0.001776967102727694],
[-0.99999999999995 3.165094858036635e-7 1.4448209762849193e-12 6.846650924901949e-13 2.588930907528727e-14 2.834402750711394e-19 6.816177844491379e-13 1.5799108063127487e-15
 -2.0605761749045163e-12 -1.107517249950079e-5 0.9999999999386704 1.3956460743993085e-9 5.2712504174640875e-11 5.770995077238016e-16 1.3878101381368472e-9 3.2167826072733836e-12
 -1.018144547256913e-12 -5.3799652602963005e-6 -1.4552309332950942e-9 0.9999999999853558 2.2459763427440785e-8 2.4393382671125623e-13 5.866118761291216e-7 1.3596978720598478e-9
 -3.8503854172262685e-14 -2.03453762756514e-7 -5.496962286942871e-11 -2.246249149278e-8 0.999999999996103 1.1577800668400902e-12 2.7838054700427892e-6 6.452370562781776e-9
 -8.082919522092405e-19 -4.271001351396927e-12 -1.1539387652929902e-15 -4.677865439272707e-13 -2.219980013452776e-12 0.9999999999999274 3.814683121008199e-7 7.564183479475104e-10
 -1.0137995306426038e-12 -5.356900008135679e-6 -1.447326766740895e-9 -5.867205227582437e-7 -2.7841856771824018e-6 -3.815083242788881e-7 0.9999203027184677 0.0017129537583115751
 -6.495609981121864e-16 -3.4322696064101386e-9 -9.273302955015002e-13 -3.759229074702645e-10 -1.7837047730878252e-9 -1.0905435051905621e-10 -0.0018147140897757901 0.999965314876969
 -4.4880098923353534e-15 -2.371457028900925e-8 -6.407200481194251e-12 -2.597363036178681e-9 -1.2324145000012007e-8 -7.531003817267841e-10 -0.012493797951470268 -0.008150756555427005
 -3.165094857984659e-7 -0.9999999999097791 -1.1075172484226693e-5 -5.379962128523567e-6 -2.0343896928795382e-7 -2.2272827267099036e-12 -5.356174302311981e-6 -1.2414989534945237e-8],

[1,1,2,3,4,5,7,7],[1.0000000003082434,1.0000000003082434,1.000000000000058,1.0000000055109217,1.000001193261134,1.0000007276865914,6.347537347324505,6.347537347324505],[49.90435008743081,49.90435008743081,1.0,1.9743068949704863,52.20441627387655,2.48681278522171e6,3094.5065462725674,3094.5065462725674],[1.0000003165135218,9.982209416560785e12,1.0000110780161333,1.0000059934855778,1.0000030242391287,1.0000003823739634,240056.8257398192,1.0097851751289184],[0.0,1.000000000774882,0.0,0.0,0.0,0.0,12.325860207668653,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 4.440892564890643e-16
N2 = norm(Va' * Va - eye(8)) = 5.551147329080803e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
