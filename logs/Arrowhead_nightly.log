>>> 'Pkg.add("Arrowhead")' log
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'using Arrowhead' log
Julia Version 0.4.0-dev+1290
Commit df1fcba (2014-10-24 22:27 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.35215537577607225 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11907767375516154
 0.0 0.38732948820101787 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.38224398378897884
 0.0 0.0 0.3187328353363865 0.0 0.0 0.0 0.0 0.0 0.0 0.3558519905145374
 0.0 0.0 0.0 0.23748974062941852 0.0 0.0 0.0 0.0 0.0 0.7731038245650721
 0.0 0.0 0.0 0.0 0.49243941616556786 0.0 0.0 0.0 0.0 0.09049734369456508
 0.0 0.0 0.0 0.0 0.0 0.035153365171082473 0.0 0.0 0.0 0.8428086518292865
 0.0 0.0 0.0 0.0 0.0 0.0 0.24884536395756385 0.0 0.0 0.8791375917776503
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.07678789442459122 0.0 0.5049478240513618
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.721183806742413 0.2342892269541086
 0.11907767375516154 0.38224398378897884 0.3558519905145374 0.7731038245650721 0.09049734369456508 0.8428086518292865 0.8791375917776503 0.5049478240513618 0.2342892269541086 0.6045089028293558]
(U,Lambda) = eig(full(A)) = ([-1.2583128849114131,0.06250582733456223,0.12746894091283667,0.24249698406913534,0.31282699684995663,0.3512615988694101,0.3780952470746972,0.49160507272287024,0.7105011186514356,2.0561772876599873],
[-0.04873318639822832 -0.008674914918816824 0.03103667158464911 -0.005232225505354209 -0.0480204072528881 0.9898973873746894 0.10649969778030319 0.007856751590360152 -0.014966036466803154 0.05223483285597026
 -0.15309176639869376 -0.024831373360354028 0.08614339069476212 -0.01271664661438318 -0.08137132833189847 0.07874244496822219 -0.9603406190880315 0.03372782072188651 -0.05327042185476705 0.17120993831192624
... truncated ...
 4.0 2.0e-7 2.0e-7 5.0]
(Ua,Lambdaa,Sind,Kb,Kz,Knu,Krho,Qout) = dpr1eigall(A,tols) = (
[-0.7999999999999988 0.20889321381638568 0.5222329678004558 0.20889316064388422
 -3.360000040319997e-8 -0.9351941398441738 0.34815531248360626 0.06480585768707446
 -3.359999959679996e-8 -0.06480586264549802 -0.348155311616842 0.9351941398232515
 -0.5999999999999995 -0.2785242290885133 -0.6963106237339411 -0.2785242701918447],

[10.33333333333335,2.0000001148912534,2.0,1.9999998851087477],[1,2,2,3],[3.7999999999999416,1.3913043861207293e7,1.3913043861207293e7,1.3913043298649127e7],[1.0000000999999998,4.000000099999999e7,4.000000099999999e7,4.000000099999999e7],[6.000000000000014,1.4518971715911815,9.74999965042207,1.4518971502576907],[0.0,0.0,0.0,0.0],[0,1,1,1])

 There is one test for SVD of HalfArrow matrices

HalfArrow with entries varying in magnitude

A = HalfArrow(sort(exp(20 * (rand(8) - 0.5)),rev=true),exp(20 * (rand(8) - 0.5))) = [4285.366284676395 0.0 0.0 0.0 0.0 0.0 0.0 0.0 5206.771351465515
 0.0 3366.729588252857 0.0 0.0 0.0 0.0 0.0 0.0 10082.267807951095
 0.0 0.0 200.3395430905863 0.0 0.0 0.0 0.0 0.0 0.00016960044254939565
 0.0 0.0 0.0 42.71189721144547 0.0 0.0 0.0 0.0 3754.5209574245323
 0.0 0.0 0.0 0.0 0.061619107401905716 0.0 0.0 0.0 0.0003511790798857525
 0.0 0.0 0.0 0.0 0.0 0.05847659923054378 0.0 0.0 397.6946929724938
 0.0 0.0 0.0 0.0 0.0 0.0 0.013117468909393633 0.0 0.0007520500685280552
 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00023783544574791556 2459.905134289963]
Remedy 3 
Remedy 3 
(Ua,Lambdaa,Va,Sind,Kb,Kz,Knu,Krho,Qout) = ahsvdall(A,tols) = (
[-0.4476038589938196 0.8885633024482197 0.10052880264541915 9.427700563999237e-11 5.286618039691585e-5 4.9467762420416786e-17 6.129939406048459e-11 6.0696229506217786e-18
 -0.8258322438136751 -0.453867384977966 0.3346721894962358 2.9617285931671463e-10 0.00016585755446825069 1.5519274477930853e-16 1.9231153284344713e-10 1.9041925473839464e-17
 -1.291286269267166e-8 -2.51923466691854e-9 -3.6165425689057636e-8 0.9999999999999993 7.989876430220317e-10 7.372644968661587e-22 9.136023985523143e-16 9.046128000616851e-23
 -0.2857895085145611 -0.05564296388642307 -0.7809443890794359 -3.2515236040168585e-8 0.552588525539652 3.590768179319841e-13 4.449602059908822e-7 4.4058119033848414e-14
 -2.673101459868512e-8 -5.204002153756111e-9 -7.296028723907152e-8 -2.903075205291502e-15 -1.1746057940438428e-7 0.999999999999977 1.6345764374942038e-7 2.073997033877843e-15
 -0.03027168545205132 -0.0058933010457038115 -0.08262428113643414 -3.2876035553252304e-9 -0.13301879329580618 -1.838550463472323e-7 0.9871819097103929 2.621664656323106e-9
 -5.724447301032586e-8 -1.1144371631664584e-8 -1.5624446908525502e-7 -6.216935560661967e-15 -2.51540218214874e-7 -3.619818560341748e-14 -5.1448867940738714e-8 0.9999999999999531
 -0.1872428166162976 -0.03645248919203492 -0.5110651374810051 -2.033517750967383e-8 -0.8227708622504868 -1.1303779562850825e-7 -0.15959911384564293 -3.0614711348537384e-7],

[12661.365367904293,4110.610942556429,1249.6070896670294,200.33954309058615,23.610533377713182,0.061619107401905224,0.05772705651459038,0.01311746890939302],
[-0.15149602199187248 0.9263389971282942 0.34475055804169463 2.016633836522181e-9 0.009595333720262871 3.4402880890851973e-12 4.550558653748415e-6 1.9828945456594344e-12
 -0.2195935248206925 -0.3717327607749616 0.9016840349734078 4.977219740628873e-9 0.023650356691670954 8.479382901845103e-12 1.1215900599793275e-5 4.887300618198883e-12
 -2.04318960607446e-10 -1.227803674834151e-10 -5.798114397824808e-9 1.0 6.7795511764741796e-9 2.397036222477159e-18 3.1706222028863318e-12 1.3815905819184432e-18
 -0.0009640833952020996 -0.0005781662597771983 -0.02669288350717015 -6.932168248609858e-9 0.9996429951621798 2.488976680316148e-10 0.000329223343938603 1.4345799974840107e-10
 -1.3009191439129306e-13 -7.800932078301265e-14 -3.5977290883138134e-12 -8.929086096087451e-19 -3.0655029863242564e-10 0.999999999999985 1.7447822068170534e-7 9.74256900203061e-15
 -1.3980997836931455e-7 -8.383673575788317e-8 -3.866484925285166e-6 -9.59610232547735e-13 -0.0003294498494062735 -1.7447863682341713e-7 0.9999997295408111 1.1687165754584698e-8
 -5.930660502468872e-14 -3.5563070900155325e-14 -1.6401411151057619e-12 -4.0706122051907103e-19 -1.3974995562829094e-10 -7.705865830419473e-15 -1.1690859821781573e-8 1.0
 -3.517233525692296e-9 -2.1091010890505077e-9 -9.727009856466379e-8 -2.4141145241553287e-14 -8.287998904609858e-6 -4.3629964215997055e-10 -0.0006575482741417263 -5.550814391341357e-9
 -0.963756561441036 -0.0609137315368258 -0.2596159543616844 -1.6561371063295889e-9 -0.007897076449255434 -2.8314849238274585e-12 -3.745278851583999e-6 -1.6319958873489474e-12],

[1,1,3,3,5,5,6,7],[1.0,1.0,13.59327371373715,13.59327371373715,38.38591072571851,38.38591072571851,47.014037717675215,48.32230833892734],[1.5212829917474417,1.5212829917474417,9.990168302444634e8,9.990168302444634e8,1.5686368939927683e12,1.5686368939927683e12,1.45960237533832e6,3.4408811031210747e12],[121.13385188995962,1.2521162915909283,2.7036366007235924e16,1.0000000155831428,9.098094035486776e18,1.0000001751785625,1.000989230941003,1.00000001738995],[0.0,0.0,27.052321756644098,0.0,80.3702709726919,0.0,0.0,0.0],[0,0,0,0,0,0,0,0])
N1 = norm(Ua' * Ua - eye(8)) = 9.721790657876489e-15
N2 = norm(Va' * Va - eye(8)) = 4.440892098508248e-16
INFO: Testing Arrowhead
INFO: Arrowhead tests passed
INFO: No packages to install, update or remove

>>> end of log
