>>> 'Pkg.add("ZipFile")' log
[ Info: Installing ZipFile v0.5.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ZipFile
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ZipFile")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    5447211 s        115 s     256718 s    1460362 s         91 s
       #2  3499 MHz    1282178 s       7456 s     100559 s    6870987 s          0 s
       
  Memory: 2.93927001953125 GB (1424.84765625 MB free)
  Uptime: 84010.0 sec
  Load Avg:  1.021484375  1.0146484375  1.029296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - ZipFile                       0.5.0
3 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - tmpJpLd7f                     0.0.0-             non-repo (unregistered)
[ Info: Testing ZipFile
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/test/runtests.jl:1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:68.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:68
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:104.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:104
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:128.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:128
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:165.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:165
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:68.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:68
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:104.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:104
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:128.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:128
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:165.
│ Use `mutable struct` instead.
└ @ nothing ZipFile.jl:165
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:59.
│ Use `mutable struct` instead.
└ @ nothing Zlib.jl:59
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:103.
│ Use `mutable struct` instead.
└ @ nothing Zlib.jl:103
┌ Warning: Deprecated syntax `raw?` at /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:120.
│ Use `raw ?` instead.
└ @ nothing Zlib.jl:120
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:233.
│ Use `mutable struct` instead.
└ @ nothing Zlib.jl:233
┌ Warning: Deprecated syntax `raw?` at /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:249.
│ Use `raw ?` instead.
└ @ nothing Zlib.jl:249
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Void into Zlib.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:59
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:59
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:59
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:59
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:118 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:118
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:140 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:140
┌ Warning: Deprecated syntax `parametric method syntax write{T}(w::Writer, a::Array{T})` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:163.
│ Use `write(w::Writer, a::Array{T}) where T` instead.
└ @ nothing Zlib.jl:163
┌ Warning: Deprecated syntax `parametric method syntax write{T, N, A <: Array}(w::Writer, a::SubArray{T, N, A})` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:172.
│ Use `write(w::Writer, a::SubArray{T, N, A}) where {T, N, A <: Array}` instead.
└ @ nothing Zlib.jl:172
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:214 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:214
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:226 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:226
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:247 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:247
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:272 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:272
┌ Warning: Deprecated syntax `parametric method syntax read!{T}(r::Reader, a::Array{T})` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:310.
│ Use `read!(r::Reader, a::Array{T}) where T` instead.
└ @ nothing Zlib.jl:310
┌ Warning: Syntax `&argument` around /home/vagrant/.julia/v0.7/ZipFile/src/Zlib.jl:357 is deprecated. Remove the `&` and use a `Ref` argument type instead.
└ @ nothing Zlib.jl:357
WARNING: importing deprecated binding Base.Void into ZipFile.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:157
WARNING: importing deprecated binding Base.@printf into ZipFile.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:193
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:193
┌ Warning: Deprecated syntax `parametric method syntax write{T}(w::WritableFile, a::Array{T})` around /home/vagrant/.julia/v0.7/ZipFile/src/iojunk.jl:6.
│ Use `write(w::WritableFile, a::Array{T}) where T` instead.
└ @ nothing iojunk.jl:6
┌ Warning: Deprecated syntax `parametric method syntax write{T, N, A <: Array}(w::WritableFile, a::SubArray{T, N, A})` around /home/vagrant/.julia/v0.7/ZipFile/src/iojunk.jl:16.
│ Use `write(w::WritableFile, a::SubArray{T, N, A}) where {T, N, A <: Array}` instead.
└ @ nothing iojunk.jl:16
┌ Warning: Deprecated syntax `parametric method syntax write{T, N, A <: Array}(w::WritableFile, a::SubArray{T, N, A})` around /home/vagrant/.julia/v0.7/ZipFile/src/iojunk.jl:33.
│ Use `write(w::WritableFile, a::SubArray{T, N, A}) where {T, N, A <: Array}` instead.
└ @ nothing iojunk.jl:33
┌ Warning: Deprecated syntax `parametric method syntax read{T}(f::ReadableFile, a::Array{T})` around /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:432.
│ Use `read(f::ReadableFile, a::Array{T}) where T` instead.
└ @ nothing ZipFile.jl:432
┌ Warning: `read(s::IO, t::Type, d1::Int, dims::Int...)` is deprecated, use `read!(s, Array{t}(uninitialized, tuple(d1, dims...)))` instead.
│   caller = _find_enddiroffset(::IOStream) at ZipFile.jl:283
└ @ ZipFile ZipFile.jl:283
┌ Warning: `read(s::IO, t::Type, d1::Integer, dims::Integer...)` is deprecated, use `read!(s, Array{t}(uninitialized, convert(Tuple{Vararg{Int}}, tuple(d1, dims...))))` instead.
│   caller = _find_diroffset at ZipFile.jl:307 [inlined]
└ @ Core ZipFile.jl:307
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(uninitialized, m)` instead.
│   caller = _getfiles(::IOStream, ::UInt32, ::UInt16) at ZipFile.jl:313
└ @ ZipFile ZipFile.jl:313
┌ Warning: `read(s::IO, t::Type, d1::Integer, dims::Integer...)` is deprecated, use `read!(s, Array{t}(uninitialized, convert(Tuple{Vararg{Int}}, tuple(d1, dims...))))` instead.
│   caller = _getfiles(::IOStream, ::UInt32, ::UInt16) at ZipFile.jl:334
└ @ ZipFile ZipFile.jl:334
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = ZipFile.Reader(::IOStream, ::Bool) at ZipFile.jl:115
└ @ ZipFile ZipFile.jl:115
┌ Warning: `readstring(s::IO)` is deprecated, use `read(s, String)` instead.
│   caller = fileequals(::ZipFile.ReadableFile, ::String) at runtests.jl:17
└ @ Main runtests.jl:17
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = read at iojunk.jl:60 [inlined]
└ @ Core iojunk.jl:60
Error During Test at /home/vagrant/.julia/v0.7/ZipFile/test/runtests.jl:31
  Test threw an exception of type MethodError
  Expression: fileequals(f, "hello world!\n")
  MethodError: no method matching read!(::IOStream, ::Base.ReinterpretArray{UInt8,1,UInt8,Array{UInt8,1}})
  Closest candidates are:
    read!(::IO, !Matched::BitArray) at bitarray.jl:1822
    read!(!Matched::AbstractString, ::Any) at io.jl:299
    read!(::IO, !Matched::Ref{T}) where T at io.jl:589
    ...
  Stacktrace:
   [1] read(::ZipFile.ReadableFile, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:459
   [2] read at /home/vagrant/.julia/v0.7/ZipFile/src/iojunk.jl:61 [inlined]
   [3] readbytes! at ./io.jl:784 [inlined]
   [4] read(::ZipFile.ReadableFile, ::Int64) at ./io.jl:807
   [5] read at ./io.jl:806 [inlined]
   [6] read at ./io.jl:811 [inlined]
   [7] readstring(::ZipFile.ReadableFile) at ./deprecated.jl:57
   [8] fileequals(::ZipFile.ReadableFile, ::String) at /home/vagrant/.julia/v0.7/ZipFile/test/runtests.jl:17
   [9] top-level scope
   [10] include at ./boot.jl:292 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1012
   [12] include(::Module, ::String) at ./sysimg.jl:26
   [13] process_options(::Base.JLOptions) at ./client.jl:334
   [14] _start() at ./client.jl:386
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/ZipFile/test/runtests.jl:31
┌ Error: ------------------------------------------------------------
│ # Testing failed for ZipFile
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ZipFile/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: ZipFile had test errors

>>> End of log
