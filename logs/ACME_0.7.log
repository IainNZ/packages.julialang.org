>>> 'Pkg.add("ACME")' log
[ Info: Cloning cache of ACME from https://github.com/HSU-ANT/ACME.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of IterTools from https://github.com/JuliaCollections/IterTools.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of ProgressMeter from https://github.com/timholy/ProgressMeter.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing ACME v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ProgressMeter v0.5.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("ACME")' log
Julia Version 0.7.0-DEV.3309
Commit b96097b66f (2018-01-07 00:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz      76216 s         96 s       5343 s      83075 s          2 s
       #2  3500 MHz      12088 s         67 s       2520 s     167131 s          0 s
       
  Memory: 2.93927001953125 GB (602.9140625 MB free)
  Uptime: 1839.0 sec
  Load Avg:  0.92919921875  0.9560546875  0.70263671875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ACME                          0.5.0
 - JSON                          0.16.3
5 additional packages:
 - Compat                        0.43.0
 - DataStructures                0.7.4
 - IterTools                     0.2.0
 - Nullables                     0.0.2
 - ProgressMeter                 0.5.3
[ Info: Testing ACME @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `([ eval(:($Solver(ParametricNonLinEq($nonlinear_eq_funcs[$idx], $nonlinear_eq_set_ps[$idx], $nonlinear_eq_calc_Jps[$idx], (zeros($model_nqs[$idx]), zeros($model_nns[$idx], $model_nqs[$idx])), $model_nns[$idx], $model_nps[$idx]), zeros($model_nps[$idx]), $init_zs[$idx]))) for idx = eachindex(model_nonlinear_eqs) ]...)` at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:357.
│ Use `([ eval(:($Solver(ParametricNonLinEq($nonlinear_eq_funcs[$idx], $nonlinear_eq_set_ps[$idx], $nonlinear_eq_calc_Jps[$idx], (zeros($model_nqs[$idx]), zeros($model_nns[$idx], $model_nqs[$idx])), $model_nns[$idx], $model_nps[$idx]), zeros($model_nps[$idx]), $init_zs[$idx]))) for idx = eachindex(model_nonlinear_eqs) ]...,)` instead.
└ @ nothing ACME.jl:357
┌ Warning: Deprecated syntax `([ eval(:($Solver(ParametricNonLinEq($nonlinear_eq_funcs[$idx], $nonlinear_eq_set_ps[$idx], $nonlinear_eq_calc_Jps[$idx], (zeros($model_nqs[$idx]), zeros($model_nns[$idx], $model_nqs[$idx])), $model_nns[$idx], $model_nps[$idx]), zeros($model_nps[$idx]), $init_zs[$idx]))) for idx = eachindex(model_nonlinear_eqs) ]...)` at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:357.
│ Use `([ eval(:($Solver(ParametricNonLinEq($nonlinear_eq_funcs[$idx], $nonlinear_eq_set_ps[$idx], $nonlinear_eq_calc_Jps[$idx], (zeros($model_nqs[$idx]), zeros($model_nns[$idx], $model_nqs[$idx])), $model_nns[$idx], $model_nps[$idx]), zeros($model_nps[$idx]), $init_zs[$idx]))) for idx = eachindex(model_nonlinear_eqs) ]...,)` instead.
└ @ nothing ACME.jl:357
WARNING: importing deprecated binding Base.iteratorsize into IterTools.
WARNING: importing deprecated binding Base.iteratoreltype into IterTools.
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:73
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:73
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:74
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:74
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:126
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:126
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:157
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:157
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:194
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:194
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:197
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:197
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:237
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:237
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:308
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:308
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:364
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:364
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:479
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:479
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:548
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:548
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:551
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:551
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:594
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:594
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:669
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:669
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:750
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:750
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:751
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:751
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:806
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:806
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:882
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:882
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:883
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:883
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:949
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:949
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:950
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/IterTools/src/IterTools.jl:950
[ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub. @ nothing none:0
[ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub. @ nothing none:0
┌ Warning: `speye(T, n::Integer)` has been deprecated in favor of `I`, `sparse`, and `SparseMatrixCSC` constructor methods. For a direct replacement, consider `sparse(T(1)I, n, n)` if `T` is concrete or `SparseMatrixCSC{T}(I, n, n)` if `T` is either concrete or abstract. If element type `T` is not necessary, consider the shorter `sparse(I, n, n)` or `SparseMatrixCSC(I, n, n)` (with default `eltype(I)` of `Bool`).
│   caller = topomat!(::SparseMatrixCSC{Int64,Int64}) at circuit.jl:291
└ @ ACME circuit.jl:291
┌ Warning: `speye(n::Integer)` has been deprecated in favor of `I`, `sparse`, and `SparseMatrixCSC` constructor methods. For a direct replacement, consider `sparse(1.0I, n, n)`, `SparseMatrixCSC(1.0I, n, n)`, or `SparseMatrixCSC{Float64}(I, n, n)`. If `Float64` element type is not necessary, consider the shorter `sparse(I, n, n)` or `SparseMatrixCSC(I, n, n)` (with default `eltype(I)` of `Bool`).
│   caller = top-level scope
└ @ Core :0
┌ Warning: `speye(n::Integer)` has been deprecated in favor of `I`, `sparse`, and `SparseMatrixCSC` constructor methods. For a direct replacement, consider `sparse(1.0I, n, n)`, `SparseMatrixCSC(1.0I, n, n)`, or `SparseMatrixCSC{Float64}(I, n, n)`. If `Float64` element type is not necessary, consider the shorter `sparse(I, n, n)` or `SparseMatrixCSC(I, n, n)` (with default `eltype(I)` of `Bool`).
│   caller = top-level scope
└ @ Core :0
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = setlhs!(::ACME.LinearSolver, ::Array{Float64,2}) at solvers.jl:60
└ @ ACME solvers.jl:60
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = solve!(::ACME.LinearSolver, ::Array{Float64,1}, ::Array{Float64,1}) at solvers.jl:116
└ @ ACME solvers.jl:116
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = top-level scope at runtests.jl:29
└ @ Core runtests.jl:29
WARNING: importing deprecated binding Base.IntSet into ACME.
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/ACME/test/runtests.jl:42
WARNING: importing deprecated binding Base.Nullable into ACME.
WARNING: importing deprecated binding Base.isnull into ACME.
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/ACME/test/runtests.jl:42
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/ACME/test/runtests.jl:42
┌ Warning: `speye(T, n::Integer)` has been deprecated in favor of `I`, `sparse`, and `SparseMatrixCSC` constructor methods. For a direct replacement, consider `sparse(T(1)I, n, n)` if `T` is concrete or `SparseMatrixCSC{T}(I, n, n)` if `T` is either concrete or abstract. If element type `T` is not necessary, consider the shorter `sparse(I, n, n)` or `SparseMatrixCSC(I, n, n)` (with default `eltype(I)` of `Bool`).
│   caller = gensolve(::SparseMatrixCSC{Rational{BigInt},Int64}, ::SparseMatrixCSC{Rational{BigInt},Int64}, ::Float64) at ACME.jl:823
└ @ ACME ACME.jl:823
┌ Warning: `spones(A::SparseMatrixCSC)` is deprecated, use `LinAlg.fillstored!(copy(A), 1)` instead.
│   caller = gensolve(::SparseMatrixCSC{Rational{BigInt},Int64}, ::SparseMatrixCSC{Rational{BigInt},Int64}, ::SparseMatrixCSC{Rational{BigInt},Int64}, ::SparseMatrixCSC{Rational{BigInt},Int64}, ::Float64) at ACME.jl:798
└ @ ACME ACME.jl:798
┌ Warning: `speye(T, n::Integer)` has been deprecated in favor of `I`, `sparse`, and `SparseMatrixCSC` constructor methods. For a direct replacement, consider `sparse(T(1)I, n, n)` if `T` is concrete or `SparseMatrixCSC{T}(I, n, n)` if `T` is either concrete or abstract. If element type `T` is not necessary, consider the shorter `sparse(I, n, n)` or `SparseMatrixCSC(I, n, n)` (with default `eltype(I)` of `Bool`).
│   caller = gensolve at ACME.jl:823 [inlined]
└ @ Core ACME.jl:823
┌ Warning: `eye(T::Type, m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix{T}(I, m, m)`. If `T` element type is not necessary, consider the shorter `Matrix(I, m, m)`(with default `eltype(I)` `Bool`)
│   caller = nldecompose!(::Dict{Symbol,Array}, ::Array{Int64,1}, ::Array{Int64,1}) at ACME.jl:442
└ @ ACME ACME.jl:442
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = reduce_pdims!(::Dict{Symbol,Array}) at ACME.jl:485
└ @ ACME ACME.jl:485
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = reduce_pdims!(::Dict{Symbol,Array}) at ACME.jl:486
└ @ ACME ACME.jl:486
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = reduce_pdims!(::Dict{Symbol,Array}) at ACME.jl:487
└ @ ACME ACME.jl:487
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = reduce_pdims!(::Dict{Symbol,Array}) at ACME.jl:488
└ @ ACME ACME.jl:488
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = ModelRunner{DiscreteModel{Tuple{}},true}(::DiscreteModel{Tuple{}}) at ACME.jl:654
└ @ ACME ACME.jl:654
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = ModelRunner{DiscreteModel{Tuple{}},true}(::DiscreteModel{Tuple{}}) at ACME.jl:656
└ @ ACME ACME.jl:656
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = ModelRunner{DiscreteModel{Tuple{}},true}(::DiscreteModel{Tuple{}}) at ACME.jl:657
└ @ ACME ACME.jl:657
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = ModelRunner{DiscreteModel{Tuple{}},true}(::DiscreteModel{Tuple{}}) at ACME.jl:658
└ @ ACME ACME.jl:658
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = run!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}) at ACME.jl:700
└ @ ACME ACME.jl:700
┌ Warning: `copy!(dest::Union{AbstractArray, IndexStyle}, args...)` is deprecated, use `copyto!(dest, args...)` instead.
│   caller = step!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at ACME.jl:752
└ @ ACME ACME.jl:752
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = step!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at ACME.jl:779
└ @ ACME ACME.jl:779
┌ Warning: `copy!(dest::Union{AbstractArray, IndexStyle}, args...)` is deprecated, use `copyto!(dest, args...)` instead.
│   caller = step!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at ACME.jl:784
└ @ ACME ACME.jl:784
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = step!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at ACME.jl:786
└ @ ACME ACME.jl:786
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = step!(::ModelRunner{DiscreteModel{Tuple{}},true}, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64) at ACME.jl:790
└ @ ACME ACME.jl:790
Running model:   5%|██                                  |  ETA: 0:00:06[KRunning model: 100%|████████████████████████████████████| Time: 0:00:01[K
ERROR: LoadError: AssertionError: all((x->begin
            #= /home/vagrant/.julia/v0.7/ACME/src/circuit.jl:255 =#
            abs(x) == 1
        end), nonzeros(incidence))
Stacktrace:
 [1] topomat!(::SparseMatrixCSC{Int64,Int64}) at /home/vagrant/.julia/v0.7/ACME/src/circuit.jl:255
 [2] topomat at /home/vagrant/.julia/v0.7/ACME/src/circuit.jl:299 [inlined]
 [3] model_matrices(::Circuit, ::Rational{BigInt}) at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:362
 [4] model_matrices at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:408 [inlined]
 [5] #DiscreteModel#75(::Bool, ::Type, ::Circuit, ::Int64, ::Type{HomotopySolver{CachingSolver{SimpleSolver}}}) at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:216
 [6] Type at /home/vagrant/.julia/v0.7/ACME/src/ACME.jl:216 [inlined] (repeats 2 times)
 [7] top-level scope at /home/vagrant/.julia/v0.7/ACME/test/runtests.jl:49
 [8] include at ./boot.jl:295 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] include(::Module, ::String) at ./sysimg.jl:26
 [11] process_options(::Base.JLOptions) at ./client.jl:324
 [12] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/ACME/test/runtests.jl:49
┌ Error: ------------------------------------------------------------
│ # Testing failed for ACME
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ACME/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: ACME had test errors

>>> End of log
