>>> 'Pkg.add("CausalInference")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of CausalInference from https://github.com/mschauer/CausalInference.jl.git
[ Info: Installing BinaryProvider v0.3.0
[ Info: Installing CausalInference v0.3.0
[ Info: Installing CodecZlib v0.4.3
[ Info: Installing Combinatorics v0.6.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing LightGraphs v0.13.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing Polynomials v0.3.0
[ Info: Installing SHA v0.5.7
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing TranscodingStreams v0.5.2
[ Info: Building CodecZlib
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = valid_dl_path(::String, ::BinaryProvider.Linux) at PlatformNames.jl:376
└ @ BinaryProvider PlatformNames.jl:376
WARNING: importing deprecated binding Base.Libdl into Sys.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/CodecZlib/deps/build.jl:98
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CausalInference
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CausalInference")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4931
Commit de705f3b69 (2018-04-22 20:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3495 MHz    1681939 s       5417 s     130657 s     542339 s         17 s
       #2  3495 MHz     440884 s       1907 s      51876 s    2211545 s          0 s
       
  Memory: 2.939197540283203 GB (889.05078125 MB free)
  Uptime: 27582.0 sec
  Load Avg:  0.91455078125  0.96826171875  0.98828125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CausalInference               0.3.0
 - JSON                          0.17.2
13 additional packages:
 - BinaryProvider                0.3.0
 - CodecZlib                     0.4.3
 - Combinatorics                 0.6.0
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - IterTools                     0.2.1
 - LightGraphs                   0.13.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.5
 - Polynomials                   0.3.0
 - SHA                           0.5.7
 - SimpleTraits                  0.7.1
 - TranscodingStreams            0.5.2
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for CausalInference...
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing Documenter v0.17.0
[ Info: Testing CausalInference
WARNING: importing deprecated binding SparseArrays.blkdiag into LightGraphs.
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
WARNING: could not import LightGraphs.adjacency_matrix into LinAlg
WARNING: could not import LightGraphs.laplacian_matrix into LinAlg
WARNING: could not import LightGraphs.laplacian_spectrum into LinAlg
WARNING: SparseArrays.blkdiag is deprecated, use blockdiag instead.
  likely near /home/vagrant/.julia/v0.7/LightGraphs/src/operators.jl:65
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/CausalInference/src/pc.jl:52.
│ Use `at most one line break` instead.
└ @ nothing pc.jl:52
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/CausalInference/src/pc.jl:115.
└ @ nothing pc.jl:115
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CausalInference/src/cpdag.jl:17.
│ Use `mutable struct` instead.
└ @ nothing cpdag.jl:17
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/runtests.jl:3
Documenter: setting up build directory.
Documenter: expanding markdown templates.
WARNING: both CausalInference and Base export "pairs"; uses of it in module Main must be qualified
 !! Undefined binding 'pairs'. [src/library.md]
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 !! 1 docstring potentially missing:

    CausalInference.pairs :: Tuple{Any}

 > running doctests.
 > checking footnote links.
Documenter: populating indices.
Documenter: rendering document.
Documenter: skipping docs deployment.
  You can set DOCUMENTER_DEBUG to "true" in Travis to see more information.
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:4
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.LowerTriangular is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.I is deprecated, run `using LinearAlgebra` to load linear algebra functionality.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.I is deprecated, run `using LinearAlgebra` to load linear algebra functionality.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.diag is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.Symmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl

Vertices: 10, Edges: 10
┌ Warning: `cov(X::AbstractMatrix, dim::Int; kwargs...)` is deprecated, use `cov(X; kwargs..., dims=dim)` instead.
│   caller = macro expansion at skeleton.jl:52 [inlined]
└ @ Core skeleton.jl:52
┌ Warning: `cor(X::AbstractMatrix, dim::Int)` is deprecated, use `cor(X, dims=dim)` instead.
│   caller = macro expansion at skeleton.jl:58 [inlined]
└ @ Core skeleton.jl:58
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:58
└ @ CausalInference dsep.jl:58
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:59
└ @ CausalInference dsep.jl:59
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:67
└ @ CausalInference dsep.jl:67
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:77
└ @ CausalInference dsep.jl:77
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:78
└ @ CausalInference dsep.jl:78
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:86
└ @ CausalInference dsep.jl:86
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:36
└ @ CausalInference dsep.jl:36
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Int64,1}) at dsep.jl:36
└ @ CausalInference dsep.jl:36
  1.439081 seconds (876.86 k allocations: 67.968 MiB, 1.89% gc time)
Using true correlation
WARNING: importing deprecated binding Base.pinv into CausalInference.
WARNING: Base.pinv is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
WARNING: Base.pinv is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
WARNING: Base.pinv is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:42
in partialcor at /home/vagrant/.julia/v0.7/CausalInference/src/skeleton.jl
  0.736114 seconds (813.38 k allocations: 45.491 MiB, 3.89% gc time)
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:69 [inlined]
└ @ Core skeleton.jl:69
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##6#18")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:70 [inlined]
└ @ Core skeleton.jl:70
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##7#19")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
num edges found 10 of 10, false edges 0
Using data (n = 10000)
  0.001354 seconds (3.05 k allocations: 559.594 KiB)
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:79 [inlined]
└ @ Core skeleton.jl:79
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##12#24")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
num edges found 9 of 10, false edges 0
Test Summary: | Pass  Total
d10           |    6      6
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.LowerTriangular is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.I is deprecated, run `using LinearAlgebra` to load linear algebra functionality.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.I is deprecated, run `using LinearAlgebra` to load linear algebra functionality.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.diag is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl
WARNING: Base.Symmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl:87
in top-level scope at /home/vagrant/.julia/v0.7/CausalInference/test/skeleton.jl

Vertices: 23, Edges: 46
┌ Warning: `cov(X::AbstractMatrix, dim::Int; kwargs...)` is deprecated, use `cov(X; kwargs..., dims=dim)` instead.
│   caller = macro expansion at skeleton.jl:97 [inlined]
└ @ Core skeleton.jl:97
┌ Warning: `cor(X::AbstractMatrix, dim::Int)` is deprecated, use `cor(X, dims=dim)` instead.
│   caller = macro expansion at skeleton.jl:103 [inlined]
└ @ Core skeleton.jl:103
161.827869 seconds (66.84 M allocations: 7.802 GiB, 0.78% gc time)
Using true correlation
  1.553061 seconds (2.28 M allocations: 935.297 MiB, 7.94% gc time)
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:112 [inlined]
└ @ Core skeleton.jl:112
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##30#42")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:113 [inlined]
└ @ Core skeleton.jl:113
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##31#43")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
num edges found 46 of 46, false edges 0
Using data (n = 100000)
  0.142810 seconds (177.95 k allocations: 60.940 MiB, 13.25% gc time)
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::SimpleGraph{Int64}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at skeleton.jl:122 [inlined]
└ @ Core skeleton.jl:122
┌ Warning: `full(S::SparseMatrixCSC)` (and `full` in general) has been deprecated. To replace `full(S::SparseMatrixCSC)`, consider `Matrix(S)` or, if that option is too narrow, `Array(S)`.
│   caller = (::getfield(Main, Symbol("##36#48")))(::SimpleGraph{Int64}) at <missing>:0
└ @ Main <missing>:0
num edges found 40 of 46, false edges 1
Test Summary: | Pass  Total
d23           |    6      6
Test Summary: | Pass  Total
d5            |    2      2
  0.495309 seconds (8.61 M allocations: 578.570 MiB, 23.83% gc time)
  0.005724 seconds (63.66 k allocations: 5.489 MiB)
Test Summary: | Pass  Total
truefalse     |    2      2
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:58
└ @ CausalInference dsep.jl:58
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:59
└ @ CausalInference dsep.jl:59
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:67
└ @ CausalInference dsep.jl:67
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:77
└ @ CausalInference dsep.jl:77
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:78
└ @ CausalInference dsep.jl:78
Test Summary: | Pass  Total
dsep g1       |   13     13
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = #dsep#1(::Bool, ::Function, ::SimpleDiGraph{Int64}, ::Int64, ::Int64, ::Array{Any,1}) at dsep.jl:86
└ @ CausalInference dsep.jl:86
Test Summary: | Pass  Total
dsep g2       |    6      6
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/pc.jl:3
┌ Warning: `assert` is deprecated, use `@assert` instead.
│   caller = unshielded(::SimpleGraph{Int64}, ::Dict{LightGraphs.SimpleGraphs.SimpleEdge{Int64},Array{Int64,1}}) at pc.jl:56
└ @ CausalInference pc.jl:56
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = top-level scope at <missing>:18
└ @ Core <missing>:18
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = pcalg(::Int64, ::Function, ::SimpleDiGraph{Int64}, ::Vararg{SimpleDiGraph{Int64},N} where N) at pc.jl:143
└ @ CausalInference pc.jl:143
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = pcalg(::Int64, ::Function, ::SimpleDiGraph{Int64}, ::Vararg{SimpleDiGraph{Int64},N} where N) at pc.jl:156
└ @ CausalInference pc.jl:156
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = pcalg(::Int64, ::Function, ::SimpleDiGraph{Int64}, ::Vararg{SimpleDiGraph{Int64},N} where N) at pc.jl:160
└ @ CausalInference pc.jl:160
┌ Warning: `out_neighbors` is deprecated, use `outneighbors` instead.
│   caller = pcalg(::Int64, ::Function, ::SimpleDiGraph{Int64}, ::Vararg{SimpleDiGraph{Int64},N} where N) at pc.jl:174
└ @ CausalInference pc.jl:174
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:3
┌ Warning: Deprecated syntax `implicit assignment to global variable `g``.
│ Use `global g` instead.
└ @ nothing none:0
WARNING: importing deprecated binding Base.randperm into CausalInference.
WARNING: Base.randperm is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:5
WARNING: Base.randperm is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:5
WARNING: Base.randperm is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:5
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = next(::CausalInference.OrderedEdges, ::Tuple{Int64,Int64,Int64,Array{Int64,1}}) at cpdag.jl:44
└ @ CausalInference cpdag.jl:44
┌ Warning: `in_neighbors` is deprecated, use `inneighbors` instead.
│   caller = chickering_order(::SimpleDiGraph{Int64}) at cpdag.jl:65
└ @ CausalInference cpdag.jl:65
Test Summary: | Pass  Total
chickering    |    1      1
Error During Test at /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:25
  Test threw exception UndefVarError(:pairs)
  Expression: pairs(h) == E1a
  UndefVarError: pairs not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:314 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] top-level scope
   [7] include at ./boot.jl:314 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1067
   [9] include(::Module, ::String) at ./sysimg.jl:29
   [10] exec_options(::Base.JLOptions) at ./client.jl:327
   [11] _start() at ./client.jl:455
ERROR: LoadError: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/CausalInference/test/cpdag.jl:25
in expression starting at /home/vagrant/.julia/v0.7/CausalInference/test/runtests.jl:11
┌ Error: ------------------------------------------------------------
│ # Testing failed for CausalInference
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CausalInference/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing DocStringExtensions v0.4.4
[ Info: Removing Documenter v0.17.0
ERROR: CausalInference had test errors

>>> End of log
