>>> 'Pkg.add("BedgraphFiles")' log
[ Info: Cloning cache of BedgraphFiles from https://github.com/CiaranOMara/BedgraphFiles.jl.git
[ Info: Installing BedgraphFiles v1.0.0
[ Info: Installing BinDeps v0.8.5
[ Info: Installing DataArrays v0.6.2
[ Info: Installing DataFrames v0.10.1
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DataValues v0.3.1
[ Info: Installing FileIO v0.6.1
[ Info: Installing GZip v0.3.0
[ Info: Installing IterableTables v0.6.1
[ Info: Installing IteratorInterfaceExtensions v0.0.2
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requires v0.4.3
[ Info: Installing SHA v0.5.3
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StatsBase v0.19.5
[ Info: Installing TableTraits v0.1.0
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("BedgraphFiles")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     677889 s         98 s      40687 s     175244 s          7 s
       #2  3499 MHz     123144 s         57 s      15676 s     902332 s          0 s
       
  Memory: 2.93927001953125 GB (1047.609375 MB free)
  Uptime: 10537.0 sec
  Load Avg:  0.99169921875  0.998046875  1.0078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BedgraphFiles                 1.0.0
 - JSON                          0.16.4
20 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.48.0
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.7.4
 - DataValues                    0.3.1
 - FileIO                        0.6.1
 - GZip                          0.3.0
 - IterableTables                0.6.1
 - IteratorInterfaceExtensions   0.0.2
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.3
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StatsBase                     0.19.5
 - TableTraits                   0.1.0
 - URIParser                     0.3.0
[ Info: Testing BedgraphFiles
┌ Warning: Deprecated syntax `parametric method syntax applies_to_os{O <: OS}(os::Type{O})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:13.
│ Use `applies_to_os(os::Type{O}) where O <: OS` instead.
└ @ nothing query.jl:13
┌ Warning: Deprecated syntax `parametric method syntax applies_to_os{U <: Unix}(os::Type{U})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:15.
│ Use `applies_to_os(os::Type{U}) where U <: Unix` instead.
└ @ nothing query.jl:15
┌ Warning: Deprecated syntax `parametric method syntax unknown{sym}(::Type{DataFormat{sym}})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:52.
│ Use `unknown(#unused#::Type{DataFormat{sym}}) where sym` instead.
└ @ nothing query.jl:52
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: Deprecated syntax `parametric method syntax add_format{sym}(fmt::Type{DataFormat{sym}}, magic::Union{Tuple, AbstractVector, String}, extension)` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:79.
│ Use `add_format(fmt::Type{DataFormat{sym}}, magic::Union{Tuple, AbstractVector, String}, extension) where sym` instead.
└ @ nothing query.jl:79
┌ Warning: Deprecated syntax `parametric method syntax add_format{sym, T <: Vector{UInt8}}(fmt::Type{DataFormat{sym}}, magics::Tuple{T, Vararg{T}}, extension)` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:94.
│ Use `add_format(fmt::Type{DataFormat{sym}}, magics::Tuple{T, Vararg{T}}, extension) where {sym, T <: Vector{UInt8}}` instead.
└ @ nothing query.jl:94
┌ Warning: Deprecated syntax `parametric method syntax add_format{sym}(fmt::Type{DataFormat{sym}}, magic, extension)` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:111.
│ Use `add_format(fmt::Type{DataFormat{sym}}, magic, extension) where sym` instead.
└ @ nothing query.jl:111
┌ Warning: Deprecated syntax `parametric method syntax del_format{sym}(fmt::Type{DataFormat{sym}})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:122.
│ Use `del_format(fmt::Type{DataFormat{sym}}) where sym` instead.
└ @ nothing query.jl:122
┌ Warning: Deprecated syntax `parametric method syntax del_magic{N}(magic::NTuple{N, UInt8}, sym)` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:135.
│ Use `del_magic(magic::NTuple{N, UInt8}, sym) where N` instead.
└ @ nothing query.jl:135
┌ Warning: Deprecated syntax `parametric method syntax Base.info{sym}(::Type{DataFormat{sym}})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:162.
│ Use `Base.info(#unused#::Type{DataFormat{sym}}) where sym` instead.
└ @ nothing query.jl:162
┌ Warning: Deprecated syntax `parametric method syntax canonicalize_magic{N}(m::NTuple{N, UInt8})` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:165.
│ Use `canonicalize_magic(m::NTuple{N, UInt8}) where N` instead.
└ @ nothing query.jl:165
┌ Warning: Deprecated syntax `parametric method syntax File{sym}(fmt::Type{DataFormat{sym}}, filename)` around /home/vagrant/.julia/v0.7/FileIO/src/query.jl:228.
│ Use `File(fmt::Type{DataFormat{sym}}, filename) where sym` instead.
└ @ nothing query.jl:228
WARNING: importing deprecated binding Base.Nullable into FileIO.
ERROR: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1011
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/FileIO/src/FileIO.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1011
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:295 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/FileIO/src/query.jl:242
in expression starting at /home/vagrant/.julia/v0.7/FileIO/src/FileIO.jl:29
ERROR: LoadError: Failed to precompile FileIO to /home/vagrant/.julia/lib/v0.7/FileIO.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/BedgraphFiles/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for BedgraphFiles
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BedgraphFiles/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: BedgraphFiles had test errors

>>> End of log
