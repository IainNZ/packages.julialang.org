>>> 'Pkg.add("Polyhedra")' log
INFO: Cloning cache of MultivariatePolynomials from https://github.com/JuliaAlgebra/MultivariatePolynomials.jl.git
INFO: Cloning cache of Polyhedra from https://github.com/JuliaPolyhedra/Polyhedra.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing Calculus v0.4.0
INFO: Installing ColorTypes v0.6.7
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing DataStructures v0.8.3
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.6
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing ForwardDiff v0.7.5
INFO: Installing GeometryTypes v0.4.6
INFO: Installing IterTools v0.2.1
INFO: Installing JuMP v0.18.2
INFO: Installing MathProgBase v0.7.1
INFO: Installing MultivariatePolynomials v0.1.4
INFO: Installing NaNMath v0.3.1
INFO: Installing Polyhedra v0.3.4
INFO: Installing RecipesBase v0.3.1
INFO: Installing ReverseDiffSparse v0.8.1
INFO: Installing SHA v0.5.7
INFO: Installing SpecialFunctions v0.6.0
INFO: Installing StaticArrays v0.7.2
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Package database updated

>>> 'Pkg.test("Polyhedra")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (589.0390625 MB free)
Uptime: 16296.0 sec
Load Avg:  0.923828125  0.96923828125  0.94970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     805025 s         57 s      70597 s     536759 s          9 s
#2  3500 MHz     161772 s        103 s      25897 s    1419273 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - Polyhedra                     0.3.4
24 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Calculus                      0.4.0
 - ColorTypes                    0.6.7
 - CommonSubexpressions          0.1.0
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - DiffResults                   0.0.3
 - DiffRules                     0.0.6
 - FixedPointNumbers             0.4.6
 - ForwardDiff                   0.7.5
 - GeometryTypes                 0.4.6
 - IterTools                     0.2.1
 - JuMP                          0.18.2
 - MathProgBase                  0.7.1
 - MultivariatePolynomials       0.1.4
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - RecipesBase                   0.3.1
 - ReverseDiffSparse             0.8.1
 - SHA                           0.5.7
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - URIParser                     0.3.1
INFO: Computing test dependencies for Polyhedra...
INFO: Installing Combinatorics v0.6.0
INFO: Installing GLPK v0.6.0
INFO: Installing GLPKMathProgInterface v0.4.0
INFO: Installing LinQuadOptInterface v0.1.0
INFO: Installing MathOptInterface v0.4.1
INFO: Installing Polynomials v0.3.2
INFO: Building GLPK
INFO: Testing Polyhedra
Test Summary: | Pass  Total
Element       |   31     31
Test Summary: | Pass  Total
Comparison    |    2      2
WARNING: `SimpleHRepresentation` is deprecated, it has been renamed to `MixedMatHRep`. It is recommended to use `hrep` to build a `MixedMatHRep`, e.g. `hrep([1 2; 3 4], [5, 6])` for `x + 2y ≤ 5` and `3x + 4y ≤ 6`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] SimpleHRepresentation(::Array{Int64,2}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Polyhedra/src/matrep.jl:162
 [3] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:99 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:87 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl, in expression starting on line 17
WARNING: `SimpleHRepresentation` is deprecated, it has been renamed to `MixedMatHRep`. It is recommended to use `hrep` to build a `MixedMatHRep`, e.g. `hrep([1 2; 3 4], [5, 6])` for `x + 2y ≤ 5` and `3x + 4y ≤ 6`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] SimpleHRepresentation at /home/vagrant/.julia/v0.6/Polyhedra/src/matrep.jl:162 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:99 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:87 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl, in expression starting on line 17
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `*(p::HRep, P::AbstractMatrix)` is deprecated. Use `P \ p` or `p / P'` instead.
WARNING: `SimpleVRepresentation` is deprecated, it has been renamed to `MixedMatVRep` It is recommended to use `vrep` to build a `MixedMatVRep`, e.g. `vrep([1 2; 3 4])` for the convex hull of `(1, 2)` and `(3, 4)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] SimpleVRepresentation at /home/vagrant/.julia/v0.6/Polyhedra/src/matrep.jl:166 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:130 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl:87 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/representation.jl, in expression starting on line 17
WARNING: Not solved to optimality, status: Unbounded
WARNING: Not solved to optimality, status: Infeasible
WARNING: Solver does not appear to support providing initial feasible solutions.
WARNING: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
Test Summary:        | Pass  Total
Representation tests |  699    699
Test Summary: | Pass  Total
Dual Type     |    5      5
Test Summary:         | Pass  Total
Unimplemented methods |    9      9
Test Summary:                             | Pass  Total
SimplePolyhedron constructor with nothing |    6      6
WARNING: isvredundant is deprecated, use isredundant intead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #isvredundant#72(::Array{Any,1}, ::Function, ::Polyhedra.Intersection{2,Int64,Array{Int64,1}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Polyhedra/src/redundancy.jl:175
 [3] (::Polyhedra.#kw##isvredundant)(::Array{Any,1}, ::Polyhedra.#isvredundant, ::Polyhedra.Intersection{2,Int64,Array{Int64,1}}, ::Vararg{Any,N} where N) at ./<missing>:0
 [4] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/redundancy.jl:3 [inlined]
 [5] macro expansion at ./test.jl:860 [inlined]
 [6] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/redundancy.jl:2 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/redundancy.jl, in expression starting on line 1
Test Summary:      | Pass  Total
Redundancy removal |    5      5
Test Summary:     | Pass  Total
Duplicate removal |   10     10
Test Summary:      | Pass  Total
Double Description |   43     43
WARNING: getlibrary is deprecated, use library instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] getlibrary at /home/vagrant/.julia/v0.6/Polyhedra/src/default.jl:47 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/interval.jl:14 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/interval.jl, in expression starting on line 1
WARNING: getlibraryfor is deprecated, use similar_library instead. Note that the dimension `N` now needs to be given as `FullDim{N}()`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] getlibraryfor at /home/vagrant/.julia/v0.6/Polyhedra/src/default.jl:52 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/Polyhedra/test/interval.jl:15 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Polyhedra/test/interval.jl, in expression starting on line 1
Test Summary:  | Pass  Total
Interval tests |  242    242
Test Summary:         | Pass  Total
PolyhedraToLPQPBridge |    9      9
Test Summary: | Pass  Total
Default       |    8      8
Test Summary: | Pass  Total
Show          |   23     23
Test Summary:                                | Pass  Total
Polyhedra tests in floating point arithmetic |  511    511
Test Summary:                       | Pass  Total
Polyhedra tests in exact arithmetic |  511    511
INFO: Polyhedra tests passed
INFO: Removing Combinatorics v0.6.0
INFO: Removing GLPK v0.6.0
INFO: Removing GLPKMathProgInterface v0.4.0
INFO: Removing LinQuadOptInterface v0.1.0
INFO: Removing MathOptInterface v0.4.1
INFO: Removing Polynomials v0.3.2

>>> End of log
