>>> 'Pkg.add("Polyhedra")' log
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.5.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing FixedPointNumbers v0.3.8
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GeometryTypes v0.4.0
INFO: Installing Iterators v0.3.1
INFO: Installing JuMP v0.17.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NaNMath v0.2.5
INFO: Installing Polyhedra v0.2.0
INFO: Installing RecipesBase v0.2.0
INFO: Installing ReverseDiffSparse v0.7.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Polyhedra
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Polyhedra")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (905.65625 MB free)
Uptime: 41287.0 sec
Load Avg:  1.0029296875  1.009765625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    2661444 s       7276 s     121322 s     665923 s         72 s
#2  3495 MHz     568222 s         50 s      67222 s    3412538 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - Polyhedra                     0.2.0
16 additional packages:
 - Calculus                      0.2.2
 - ColorTypes                    0.5.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - FixedPointNumbers             0.3.8
 - ForwardDiff                   0.4.2
 - GeometryTypes                 0.4.0
 - Iterators                     0.3.1
 - JuMP                          0.17.1
 - MathProgBase                  0.6.4
 - NaNMath                       0.2.5
 - RecipesBase                   0.2.0
 - ReverseDiffSparse             0.7.3
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
INFO: Computing test dependencies for Polyhedra...
ERROR: fixed packages introduce conflicting requirements for CDDLib: 
       available versions are 0.0.1, 0.1.0, 0.1.1, 0.1.2, 0.1.3 and 0.1.4
Stacktrace:
 [1] check_requirements(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Base.Pkg.Types.Fixed}) at ./pkg/query.jl:222
 [2] resolve(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Base.Pkg.Types.Fixed}, ::Dict{String,VersionNumber}, ::Set{String}) at ./pkg/entry.jl:496
 [3] resolve(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Base.Pkg.Types.Fixed}) at ./pkg/entry.jl:479
 [4] #test!#58(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:702
 [5] (::Base.Pkg.Entry.#kw##test!)(::Array{Any,1}, ::Base.Pkg.Entry.#test!, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
 [6] #test#62(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:742
 [7] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [8] (::Base.Pkg.Dir.##4#7{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
 [9] cd(::Base.Pkg.Dir.##4#7{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
 [10] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
 [11] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
 [12] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:276
 [13] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:276

>>> End of log
