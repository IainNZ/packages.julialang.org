>>> 'Pkg.add("Meshing")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing FixedPointNumbers v0.4.6
[ Info: Installing GeometryTypes v0.4.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing Meshing v0.3.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Meshing
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Meshing")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4504671 s       4696 s     317350 s    1211581 s         54 s
       #2  3500 MHz    1030292 s       2595 s     112896 s    5804158 s          8 s
       
  Memory: 2.939197540283203 GB (874.7421875 MB free)
  Uptime: 71066.0 sec
  Load Avg:  1.00830078125  0.9892578125  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - Meshing                       0.3.1
7 additional packages:
 - ColorTypes                    0.6.7
 - Compat                        0.64.0
 - FixedPointNumbers             0.4.6
 - GeometryTypes                 0.4.4
 - IterTools                     0.2.1
 - Nullables                     0.0.5
 - StaticArrays                  0.7.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for Meshing...
[ Info: Installing BinDeps v0.8.8
[ Info: Installing CommonSubexpressions v0.1.0
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.4
[ Info: Installing ForwardDiff v0.7.5
[ Info: Installing NaNMath v0.3.1
[ Info: Installing SHA v0.5.7
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing URIParser v0.3.1
[ Info: Building SpecialFunctions
[ Info: Testing Meshing
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:260.
└ @ nothing marching_tetrahedra.jl:260
┌ Warning: Deprecated syntax `parametric method syntax (::Type{MT}){MT <: AbstractMesh, T}(volume::Array{T, 3}, method::MarchingTetrahedra)::MT` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:340.
│ Use `(::Type{MT}){MT <: AbstractMesh, T}(volume::Array{T, 3}, method::MarchingTetrahedra) where {MT <: AbstractMesh, T}` instead.
└ @ nothing marching_tetrahedra.jl:340
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:2
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Method definition log1p(ForwardDiff.Dual{T, V, N} where N where V<:Real) where {T} in module ForwardDiff at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166 overwritten at /home/vagrant/.julia/v0.7/ForwardDiff/src/dual.jl:166.
WARNING: Base.@profile is deprecated: it has been moved to the standard library package `Profile`.
Add `using Profile` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.Profile is deprecated, run `using Profile` instead
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
in top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl
Internal error: encountered unexpected error in runtime:
TypeError(func=:<:, context="", expected=Type{T} where T, got=_)
rec_backtrace at /buildworker/worker/package_linux64/build/src/stackwalk.c:94
record_backtrace at /buildworker/worker/package_linux64/build/src/task.c:246
jl_throw at /buildworker/worker/package_linux64/build/src/task.c:577
jl_type_error_rt at /buildworker/worker/package_linux64/build/src/rtutils.c:118
jl_type_error at /buildworker/worker/package_linux64/build/src/rtutils.c:124
jl_f_issubtype at /buildworker/worker/package_linux64/build/src/builtins.c:412
tuplemerge at ./compiler/typelimits.jl:448
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
tmerge at ./compiler/typelimits.jl:389
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
mapfoldl_impl at ./reduce.jl:47
jfptr_mapfoldl_impl_2411 at /home/vagrant/julia/lib/julia/sys.so (unknown line)
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
mapfoldl at ./reduce.jl:59
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
mapreduce at ./reduce.jl:237
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
reduce at ./reduce.jl:386
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
getfield_tfunc at ./compiler/tfuncs.jl:582
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1540 [inlined]
jl_f__apply at /buildworker/worker/package_linux64/build/src/builtins.c:554
builtin_tfunction at ./compiler/tfuncs.jl:972
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
builtin_tfunction at ./compiler/tfuncs.jl:882
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call at ./compiler/abstractinterpretation.jl:503
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_eval_call at ./compiler/abstractinterpretation.jl:726
abstract_eval at ./compiler/abstractinterpretation.jl:798
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_interpret at ./compiler/abstractinterpretation.jl:916
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
typeinf_work at ./compiler/typeinfer.jl:277
typeinf at ./compiler/typeinfer.jl:411
typeinf_edge at ./compiler/typeinfer.jl:137
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call_method at ./compiler/abstractinterpretation.jl:303
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:78
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call at ./compiler/abstractinterpretation.jl:697
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_eval_call at ./compiler/abstractinterpretation.jl:726
abstract_eval at ./compiler/abstractinterpretation.jl:798
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_interpret at ./compiler/abstractinterpretation.jl:916
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
typeinf_work at ./compiler/typeinfer.jl:277
typeinf at ./compiler/typeinfer.jl:411
typeinf_edge at ./compiler/typeinfer.jl:137
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call_method at ./compiler/abstractinterpretation.jl:303
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:78
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_call at ./compiler/abstractinterpretation.jl:697
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_eval_call at ./compiler/abstractinterpretation.jl:726
abstract_eval at ./compiler/abstractinterpretation.jl:798
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
abstract_interpret at ./compiler/abstractinterpretation.jl:916
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
typeinf_work at ./compiler/typeinfer.jl:277
typeinf at ./compiler/typeinfer.jl:411
typeinf_frame at ./compiler/typeinfer.jl:96 [inlined]
typeinf_code at ./compiler/typeinfer.jl:191
jfptr_typeinf_code_115 at /home/vagrant/julia/lib/julia/sys.so (unknown line)
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
typeinf_ext at ./compiler/typeinfer.jl:233
jfptr_typeinf_ext_12 at /home/vagrant/julia/lib/julia/sys.so (unknown line)
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1540 [inlined]
jl_apply_with_saved_exception_state at /buildworker/worker/package_linux64/build/src/rtutils.c:257
jl_type_infer at /buildworker/worker/package_linux64/build/src/gf.c:274
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1793 [inlined]
jl_fptr_trampoline at /buildworker/worker/package_linux64/build/src/gf.c:1837
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
isosurface at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:278 [inlined]
Type at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:340
unknown function (ip: 0x7f1c842ee29a)
jl_fptr_trampoline at /buildworker/worker/package_linux64/build/src/gf.c:1838
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:24 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:15 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
jl_fptr_trampoline at /buildworker/worker/package_linux64/build/src/gf.c:1838
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:850
jl_parse_eval_all at /buildworker/worker/package_linux64/build/src/ast.c:852
jl_load at /buildworker/worker/package_linux64/build/src/toplevel.c:894
include at ./boot.jl:314 [inlined]
include_relative at ./loading.jl:1067
include at ./sysimg.jl:29
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
exec_options at ./client.jl:327
_start at ./client.jl:455
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2167
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1540 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:109
main at /buildworker/worker/package_linux64/build/ui/repl.c:240
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /home/vagrant/julia/bin/julia (unknown line)
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = marchingTetrahedra(::Array{Float64,3}, ::Float64, ::Float64, ::Type{Int64}) at marching_tetrahedra.jl:257
└ @ Meshing marching_tetrahedra.jl:257
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `nfields(::DataType)` is deprecated, use `fieldcount` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = #s41#124(::Type, ::Type, ::Type, ::Type) at meshes.jl:67
└ @ GeometryTypes meshes.jl:67
WARNING: importing deprecated binding Base.uninitialized into StaticArrays.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(undef, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##3#22")), ::HyperRectangle{3,Float64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
noisy spheres: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(/, ([1.0, 1.0, 1.0], [10, 10, 10]))), 0x0000000000006b44) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(/),Tuple{Vec{3,Float64},Point{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] _correct_vertices!(::Array{Point{3,Float64},1}, ::SignedDistanceField{3,Float64,Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:304
   [4] HomogenousMesh(::SignedDistanceField{3,Float64,Float64}, ::MarchingTetrahedra{Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:335
   [5] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:37 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:15 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] exec_options(::Base.JLOptions) at ./client.jl:327
   [14] _start() at ./client.jl:455
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(undef, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##4#23")), ::HyperRectangle{3,Float64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = marching_cubes(::SignedDistanceField{3,Float64,Float64}, ::Int64, ::Type{HomogenousMesh{Point{3,Float64},Face{3,Int64},Nothing,Nothing,Nothing,Nothing,Nothing}}, ::Float64) at marching_cubes.jl:305
└ @ Meshing marching_cubes.jl:305
marching cubes: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:48
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(+, (Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0.0, 5.0, 8.0], [0.1, 0.1, 0.1])), [-1.0, -1.0, -1.0]))), 0x0000000000006b45) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(+),Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Nothing,typeof(*),Tuple{Point{3,Float64},Point{3,Float64}}},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] marching_cubes(::SignedDistanceField{3,Float64,Float64}, ::Int64, ::Type{HomogenousMesh{Point{3,Float64},Face{3,Int64},Nothing,Nothing,Nothing,Nothing,Nothing}}, ::Float64) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:323
   [4] marching_cubes at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:293 [inlined] (repeats 2 times)
   [5] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:53 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:49 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] exec_options(::Base.JLOptions) at ./client.jl:327
   [14] _start() at ./client.jl:455
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(undef, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##5#24")), ::HyperRectangle{3,Int64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = marching_cubes(::SignedDistanceField{3,Int64,Float64}, ::Float64, ::Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}, ::Float64) at marching_cubes.jl:305
└ @ Meshing marching_cubes.jl:305
respect origin: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:60
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(+, (Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([5.0, 6.0, 9.0], [0.1, 0.1, 0.1])), [-1, -1, -1]))), 0x0000000000006b46) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(+),Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Nothing,typeof(*),Tuple{Point{3,Float64},Point{3,Float64}}},Vec{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] marching_cubes(::SignedDistanceField{3,Int64,Float64}, ::Float64, ::Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}, ::Float64) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:323
   [4] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::SignedDistanceField{3,Int64,Float64}, ::MarchingCubes{Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:416
   [5] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:70 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:64 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] exec_options(::Base.JLOptions) at ./client.jl:327
   [14] _start() at ./client.jl:455
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(undef, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##6#25")), ::HyperRectangle{3,Int64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
marching cubes: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:85
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(+, (Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([5.0, 6.0, 9.0], [0.1, 0.1, 0.1])), [-1, -1, -1]))), 0x0000000000006b49) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(+),Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Nothing,typeof(*),Tuple{Point{3,Float64},Point{3,Float64}}},Vec{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] marching_cubes(::SignedDistanceField{3,Int64,Float64}, ::Float64, ::Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}, ::Float64) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:323
   [4] marching_cubes(::SignedDistanceField{3,Int64,Float64}, ::Float64, ::Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:293
   [5] (::getfield(Main, Symbol("##8#27")))() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:602
   [6] redirect_stderr(::getfield(Main, Symbol("##8#27")), ::IOStream) at ./stream.jl:986
   [7] #7 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:601 [inlined]
   [8] #open#320(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##7#26")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
   [9] open(::Function, ::String, ::String) at ./iostream.jl:367
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:600 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:86 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:86 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:80 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
┌ Warning: (mesh type)(sdf::SignedDistanceField, eps_val) is deprecated. Please use: (mesh type)(sdf, MarchingTetrahedra(0, eps))
│   caller = ip:0x0
└ @ Core :-1
marching tetrahedra: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:92
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(/, ([2, 2, 2], [20, 20, 20]))), 0x0000000000006b4b) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(/),Tuple{Vec{3,Int64},Point{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] _correct_vertices!(::Array{Point{3,Float64},1}, ::SignedDistanceField{3,Int64,Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:304
   [4] Type at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:322 [inlined]
   [5] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::SignedDistanceField{3,Int64,Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:320
   [6] (::getfield(Main, Symbol("##12#31")))() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:602
   [7] redirect_stderr(::getfield(Main, Symbol("##12#31")), ::IOStream) at ./stream.jl:986
   [8] #11 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:601 [inlined]
   [9] #open#320(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##11#30")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
   [10] open(::Function, ::String, ::String) at ./iostream.jl:367
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:600 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:93 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:93 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:80 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [18] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [19] include at ./boot.jl:314 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:1067
   [21] include(::Module, ::String) at ./sysimg.jl:29
   [22] exec_options(::Base.JLOptions) at ./client.jl:327
   [23] _start() at ./client.jl:455
mixed types: Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:106
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(/, ([1, 1, 1], [9, 9, 9]))), 0x0000000000006b4b) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(/),Tuple{Vec{3,Int64},Point{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] _correct_vertices!(::Array{Point{3,Float64},1}, ::SignedDistanceField{3,Int64,Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:304
   [4] HomogenousMesh(::SignedDistanceField{3,Int64,Float64}, ::MarchingTetrahedra{Float64}) at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:335
   [5] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:109 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:108 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:8
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] exec_options(::Base.JLOptions) at ./client.jl:327
   [14] _start() at ./client.jl:455
Test Summary:                        | Pass  Error  Total
meshing                              |    3      6      9
  noisy spheres                      |           1      1
  vertex interpolation               |    3             3
  marching cubes                     |           1      1
  respect origin                     |           1      1
  AbstractMeshingAlgorithm interface |           2      2
    marching cubes                   |           1      1
    marching tetrahedra              |           1      1
  mixed types                        |           1      1
ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for Meshing
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing BinDeps v0.8.8
[ Info: Removing CommonSubexpressions v0.1.0
[ Info: Removing DiffResults v0.0.3
[ Info: Removing DiffRules v0.0.4
[ Info: Removing ForwardDiff v0.7.5
[ Info: Removing NaNMath v0.3.1
[ Info: Removing SHA v0.5.7
[ Info: Removing SpecialFunctions v0.4.0
[ Info: Removing URIParser v0.3.1
ERROR: Meshing had test errors

>>> End of log
