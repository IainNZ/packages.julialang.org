>>> 'Pkg.add("Meshing")' log
[ Info: Installing ColorTypes v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FixedPointNumbers v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing GeometryTypes v0.4.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Meshing v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Meshing
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Meshing")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    1168782 s        103 s      64654 s     398950 s         11 s
       #2  3507 MHz     270723 s         62 s      29428 s    1571010 s          0 s
       
  Memory: 2.93927001953125 GB (672.45703125 MB free)
  Uptime: 19084.0 sec
  Load Avg:  0.9912109375  0.97900390625  0.96142578125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - Meshing                       0.2.0
7 additional packages:
 - ColorTypes                    0.6.6
 - Compat                        0.42.0
 - FixedPointNumbers             0.4.3
 - GeometryTypes                 0.4.4
 - IterTools                     0.2.0
 - Nullables                     0.0.2
 - StaticArrays                  0.6.6
[ Info: Testing Meshing @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:24.
│ Use `struct` instead.
└ @ nothing marching_tetrahedra.jl:24
┌ Warning: Deprecated syntax `parametric method syntax hasFaces{T <: Real}(vals::Vector{T}, iso::T)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:128.
│ Use `hasFaces(vals::Vector{T}, iso::T) where T <: Real` instead.
└ @ nothing marching_tetrahedra.jl:128
┌ Warning: Deprecated syntax `parametric method syntax tetIx{T <: Real, IType <: Integer}(tIx::IType, vals::Vector{T}, iso::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:145.
│ Use `tetIx(tIx::IType, vals::Vector{T}, iso::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:145
┌ Warning: Deprecated syntax `parametric method syntax vertId{IType <: Integer}(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:164.
│ Use `vertId(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vxidx::VoxelIndices{IType}) where IType <: Integer` instead.
└ @ nothing marching_tetrahedra.jl:164
┌ Warning: Deprecated syntax `parametric method syntax vertPos{T <: Real, IType <: Integer}(e::IType, x::IType, y::IType, z::IType, vals::Vector{T}, iso::T, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:177.
│ Use `vertPos(e::IType, x::IType, y::IType, z::IType, vals::Vector{T}, iso::T, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:177
┌ Warning: Deprecated syntax `parametric method syntax getVertId{T <: Real, IType <: Integer}(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vals::Vector{T}, iso::T, vts::Dict{IType, Point{3, T}}, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:203.
│ Use `getVertId(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vals::Vector{T}, iso::T, vts::Dict{IType, Point{3, T}}, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:203
┌ Warning: Deprecated syntax `parametric method syntax voxEdgeId{IType <: Integer}(subTetIx::IType, tetEdgeIx::IType, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:215.
│ Use `voxEdgeId(subTetIx::IType, tetEdgeIx::IType, vxidx::VoxelIndices{IType}) where IType <: Integer` instead.
└ @ nothing marching_tetrahedra.jl:215
┌ Warning: Deprecated syntax `parametric method syntax procVox{T <: Real, IType <: Integer}(vals::Vector{T}, iso::T, x::IType, y::IType, z::IType, nx::IType, ny::IType, vts::Dict{IType, Point{3, T}}, fcs::Vector{Face{3, IType}}, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:232.
│ Use `procVox(vals::Vector{T}, iso::T, x::IType, y::IType, z::IType, nx::IType, ny::IType, vts::Dict{IType, Point{3, T}}, fcs::Vector{Face{3, IType}}, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:232
┌ Warning: Deprecated syntax `parametric method syntax marchingTetrahedra{T <: Real, IT <: Integer}(lsf::AbstractArray{T, 3}, iso::T, eps::T, indextype::Type{IT})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:256.
│ Use `marchingTetrahedra(lsf::AbstractArray{T, 3}, iso::T, eps::T, indextype::Type{IT}) where {T <: Real, IT <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:256
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:260. @ nothing marching_tetrahedra.jl:260
┌ Warning: Deprecated syntax `parametric method syntax (::Type{MT}){MT <: AbstractMesh, T}(volume::Array{T, 3}, iso_val::Real, eps_val = 0.001)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:297.
│ Use `(::Type{MT})(volume::Array{T, 3}, iso_val::Real, eps_val = 0.001) where {MT <: AbstractMesh, T}` instead.
└ @ nothing marching_tetrahedra.jl:297
┌ Warning: Deprecated syntax `parametric method syntax (::Type{MT}){MT <: AbstractMesh}(df::SignedDistanceField, eps_val = 0.001)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:304.
│ Use `(::Type{MT})(df::SignedDistanceField, eps_val = 0.001) where MT <: AbstractMesh` instead.
└ @ nothing marching_tetrahedra.jl:304
┌ Warning: Deprecated syntax `parametric method syntax marching_cubes{ST, FT, M <: AbstractMesh}(sdf::SignedDistanceField{3, ST, FT}, iso = 0, MT::Type{M} = SimpleMesh{Point{3, Float64}, Face{3, Int}})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:292.
│ Use `marching_cubes(sdf::SignedDistanceField{3, ST, FT}, iso = 0, MT::Type{M} = SimpleMesh{Point{3, Float64}, Face{3, Int}}) where {ST, FT, M <: AbstractMesh}` instead.
└ @ nothing marching_cubes.jl:292
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = marchingTetrahedra(::Array{Float64,3}, ::Float64, ::Float64, ::Type{Int64}) at marching_tetrahedra.jl:257
└ @ Meshing marching_tetrahedra.jl:257
┌ Warning: `nfields(::DataType)` is deprecated, use `fieldcount` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isleaftype` is deprecated, use `isconcrete` instead.
│   caller = #s41#130(::Type, ::Type, ::Type, ::Type) at meshes.jl:67
└ @ GeometryTypes meshes.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #s168#236(::Tuple{Int64}, ::Type, ::Type, ::Type, ::Tuple{DataType,DataType}) at mapreduce.jl:20
└ @ StaticArrays mapreduce.jl:20
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(, Symbol("##1#2")), ::HyperRectangle{3,Float64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
Error During Test at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:31
  Test threw an exception of type MethodError
  Expression: Meshing.vertex_interp(0, Vec(0, 0, 0), Vec(0, 1, 0), -1, 1) == Vec(0, 0.5, 0)
  MethodError: no method matching result_style(::Type{StaticArrays.StaticArray})
  Closest candidates are:
    result_style(::Any, !Matched::Any) at broadcast.jl:264
    result_style(!Matched::Base.Broadcast.BroadcastStyle) at broadcast.jl:261
    result_style(!Matched::S<:Base.Broadcast.BroadcastStyle, !Matched::S<:Base.Broadcast.BroadcastStyle) where S<:Base.Broadcast.BroadcastStyle at broadcast.jl:262
  Stacktrace:
   [1] combine_styles(::Vec{3,Int64}) at ./broadcast.jl:256
   [2] combine_styles at ./broadcast.jl:257 [inlined]
   [3] broadcast at ./broadcast.jl:615 [inlined]
   [4] * at /home/vagrant/.julia/v0.7/StaticArrays/src/linalg.jl:25 [inlined]
   [5] vertex_interp at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:398 [inlined]
   [6] vertex_interp(::Int64, ::Vec{3,Int64}, ::Vec{3,Int64}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:394
   [7] top-level scope
   [8] include at ./boot.jl:295 [inlined]
   [9] include_relative(::Module, ::String) at ./loading.jl:521
   [10] include(::Module, ::String) at ./sysimg.jl:26
   [11] process_options(::Base.JLOptions) at ./client.jl:323
   [12] _start() at ./client.jl:374
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:31
┌ Error: ------------------------------------------------------------
│ # Testing failed for Meshing
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: Meshing had test errors

>>> End of log
