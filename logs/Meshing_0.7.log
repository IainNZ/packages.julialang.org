>>> 'Pkg.add("Meshing")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing FixedPointNumbers v0.4.5
[ Info: Installing GeometryTypes v0.4.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing Meshing v0.2.0
[ Info: Installing StaticArrays v0.6.6
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Meshing
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Meshing")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3715
Commit a1bec2a6e1 (2018-02-04 17:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3492 MHz    3784814 s       8028 s     197878 s    1133991 s         58 s
       #2  3492 MHz    1018732 s        429 s     105502 s    4766674 s          1 s
       
  Memory: 2.93927001953125 GB (776.2421875 MB free)
  Uptime: 60011.0 sec
  Load Avg:  1.0029296875  1.0146484375  0.99169921875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Meshing                       0.2.0
7 additional packages:
 - ColorTypes                    0.6.7
 - Compat                        0.52.0
 - FixedPointNumbers             0.4.5
 - GeometryTypes                 0.4.4
 - IterTools                     0.2.1
 - Nullables                     0.0.3
 - StaticArrays                  0.6.6
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Testing Meshing
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:24.
│ Use `struct` instead.
└ @ nothing marching_tetrahedra.jl:24
┌ Warning: Deprecated syntax `parametric method syntax hasFaces{T <: Real}(vals::Vector{T}, iso::T)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:128.
│ Use `hasFaces(vals::Vector{T}, iso::T) where T <: Real` instead.
└ @ nothing marching_tetrahedra.jl:128
┌ Warning: Deprecated syntax `parametric method syntax tetIx{T <: Real, IType <: Integer}(tIx::IType, vals::Vector{T}, iso::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:145.
│ Use `tetIx(tIx::IType, vals::Vector{T}, iso::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:145
┌ Warning: Deprecated syntax `parametric method syntax vertId{IType <: Integer}(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:164.
│ Use `vertId(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vxidx::VoxelIndices{IType}) where IType <: Integer` instead.
└ @ nothing marching_tetrahedra.jl:164
┌ Warning: Deprecated syntax `parametric method syntax vertPos{T <: Real, IType <: Integer}(e::IType, x::IType, y::IType, z::IType, vals::Vector{T}, iso::T, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:177.
│ Use `vertPos(e::IType, x::IType, y::IType, z::IType, vals::Vector{T}, iso::T, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:177
┌ Warning: Deprecated syntax `parametric method syntax getVertId{T <: Real, IType <: Integer}(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vals::Vector{T}, iso::T, vts::Dict{IType, Point{3, T}}, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:203.
│ Use `getVertId(e::IType, x::IType, y::IType, z::IType, nx::IType, ny::IType, vals::Vector{T}, iso::T, vts::Dict{IType, Point{3, T}}, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:203
┌ Warning: Deprecated syntax `parametric method syntax voxEdgeId{IType <: Integer}(subTetIx::IType, tetEdgeIx::IType, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:215.
│ Use `voxEdgeId(subTetIx::IType, tetEdgeIx::IType, vxidx::VoxelIndices{IType}) where IType <: Integer` instead.
└ @ nothing marching_tetrahedra.jl:215
┌ Warning: Deprecated syntax `parametric method syntax procVox{T <: Real, IType <: Integer}(vals::Vector{T}, iso::T, x::IType, y::IType, z::IType, nx::IType, ny::IType, vts::Dict{IType, Point{3, T}}, fcs::Vector{Face{3, IType}}, eps::T, vxidx::VoxelIndices{IType})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:232.
│ Use `procVox(vals::Vector{T}, iso::T, x::IType, y::IType, z::IType, nx::IType, ny::IType, vts::Dict{IType, Point{3, T}}, fcs::Vector{Face{3, IType}}, eps::T, vxidx::VoxelIndices{IType}) where {T <: Real, IType <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:232
┌ Warning: Deprecated syntax `parametric method syntax marchingTetrahedra{T <: Real, IT <: Integer}(lsf::AbstractArray{T, 3}, iso::T, eps::T, indextype::Type{IT})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:256.
│ Use `marchingTetrahedra(lsf::AbstractArray{T, 3}, iso::T, eps::T, indextype::Type{IT}) where {T <: Real, IT <: Integer}` instead.
└ @ nothing marching_tetrahedra.jl:256
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:260.
└ @ nothing marching_tetrahedra.jl:260
┌ Warning: Deprecated syntax `parametric method syntax (::Type{MT}){MT <: AbstractMesh, T}(volume::Array{T, 3}, iso_val::Real, eps_val = 0.001)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:297.
│ Use `(::Type{MT})(volume::Array{T, 3}, iso_val::Real, eps_val = 0.001) where {MT <: AbstractMesh, T}` instead.
└ @ nothing marching_tetrahedra.jl:297
┌ Warning: Deprecated syntax `parametric method syntax (::Type{MT}){MT <: AbstractMesh}(df::SignedDistanceField, eps_val = 0.001)` around /home/vagrant/.julia/v0.7/Meshing/src/marching_tetrahedra.jl:304.
│ Use `(::Type{MT})(df::SignedDistanceField, eps_val = 0.001) where MT <: AbstractMesh` instead.
└ @ nothing marching_tetrahedra.jl:304
┌ Warning: Deprecated syntax `parametric method syntax marching_cubes{ST, FT, M <: AbstractMesh}(sdf::SignedDistanceField{3, ST, FT}, iso = 0, MT::Type{M} = SimpleMesh{Point{3, Float64}, Face{3, Int}})` around /home/vagrant/.julia/v0.7/Meshing/src/marching_cubes.jl:292.
│ Use `marching_cubes(sdf::SignedDistanceField{3, ST, FT}, iso = 0, MT::Type{M} = SimpleMesh{Point{3, Float64}, Face{3, Int}}) where {ST, FT, M <: AbstractMesh}` instead.
└ @ nothing marching_cubes.jl:292
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:20
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = marchingTetrahedra(::Array{Float64,3}, ::Float64, ::Float64, ::Type{Int64}) at marching_tetrahedra.jl:257
└ @ Meshing marching_tetrahedra.jl:257
┌ Warning: `nfields(::DataType)` is deprecated, use `fieldcount` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = #s41#130(::Type, ::Type, ::Type, ::Type) at meshes.jl:67
└ @ GeometryTypes meshes.jl:67
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #s168#236(::Tuple{Int64}, ::Type, ::Type, ::Type, ::Tuple{DataType,DataType}) at mapreduce.jl:20
└ @ StaticArrays mapreduce.jl:20
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
ERROR: LoadError: UndefVarError: Inference not defined
Stacktrace:
 [1] getproperty at ./sysimg.jl:14 [inlined]
 [2] @generated body at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:29 [inlined]
 [3] _map at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:20 [inlined]
 [4] map at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:15 [inlined]
 [5] + at /home/vagrant/.julia/v0.7/StaticArrays/src/linalg.jl:10 [inlined]
 [6] maximum(::HyperRectangle{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/hyperrectangles.jl:2
 [7] SignedDistanceField(::getfield(, Symbol("##1#2")), ::HyperRectangle{3,Float64}, ::Float64, ::Type) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:23
 [8] SignedDistanceField(::Function, ::HyperRectangle{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:22
 [9] top-level scope
 [10] include at ./boot.jl:296 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1012
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] exec_options(::Base.JLOptions) at ./client.jl:332
 [14] _start() at ./client.jl:447
in expression starting at /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl:22
┌ Error: ------------------------------------------------------------
│ # Testing failed for Meshing
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Meshing/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:299 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
ERROR: Meshing had test errors

>>> End of log
