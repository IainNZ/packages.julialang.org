>>> 'Pkg.add("ContMechTensors")' log
INFO: Cloning cache of ContMechTensors from https://github.com/KristofferC/ContMechTensors.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing ContMechTensors v0.3.0
INFO: Installing DiffBase v0.2.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing NaNMath v0.2.4
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Package database updated

>>> 'Pkg.test("ContMechTensors")' log
Julia Version 0.6.0-pre.beta.459
Commit 609b3d1 (2017-05-02 04:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (711.078125 MB free)
Uptime: 26322.0 sec
Load Avg:  0.9970703125  0.9853515625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1623628 s       1482 s      78432 s     546104 s         22 s
#2  3500 MHz     287479 s       4725 s      43373 s    2252386 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ContMechTensors               0.3.0
 - JSON                          0.10.0
7 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DiffBase                      0.2.0
 - ForwardDiff                   0.4.2
 - NaNMath                       0.2.4
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
INFO: Computing test dependencies for ContMechTensors...
INFO: Installing DocStringExtensions v0.3.3
INFO: Installing Documenter v0.10.0
INFO: Testing ContMechTensors

WARNING: deprecated syntax "abstract AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:21.
Use "abstract type AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order} end" instead.

WARNING: deprecated syntax "typealias Vec{dim,T,M} Tensor{1,dim,T,dim}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:34.
Use "Vec{dim,T,M} = Tensor{1,dim,T,dim}" instead.

WARNING: deprecated syntax "typealias AllTensors{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:38.
Use "AllTensors{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "typealias SecondOrderTensor{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:41.
Use "SecondOrderTensor{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" instead.

WARNING: deprecated syntax "typealias FourthOrderTensor{dim,T} Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:42.
Use "FourthOrderTensor{dim,T} = Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias SymmetricTensors{dim,T} Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:43.
Use "SymmetricTensors{dim,T} = Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias Tensors{dim,T} Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:44.
Use "Tensors{dim,T} = Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "abstract AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:21.
Use "abstract type AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order} end" instead.

WARNING: deprecated syntax "typealias Vec{dim,T,M} Tensor{1,dim,T,dim}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:34.
Use "Vec{dim,T,M} = Tensor{1,dim,T,dim}" instead.

WARNING: deprecated syntax "typealias AllTensors{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:38.
Use "AllTensors{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "typealias SecondOrderTensor{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:41.
Use "SecondOrderTensor{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" instead.

WARNING: deprecated syntax "typealias FourthOrderTensor{dim,T} Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:42.
Use "FourthOrderTensor{dim,T} = Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias SymmetricTensors{dim,T} Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:43.
Use "SymmetricTensors{dim,T} = Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias Tensors{dim,T} Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:44.
Use "Tensors{dim,T} = Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.
WARNING: Base.linearindexing is deprecated, use Base.IndexStyle instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:89
WARNING: Base.linearindexing is deprecated, use Base.IndexStyle instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:90

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> data = rand(2, 5)
2×5 Array{Float64,2}:
 0.590845  0.566237  0.794026  0.200586  0.246837
 0.766797  0.460085  0.854147  0.298614  0.579672

julia> tensor_data = reinterpret(Vec{2, Float64}, data, (5,))
5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672]
```

> Subexpression:

    tensor_data = reinterpret(Vec{2, Float64}, data, (5,))

> Output Diff (REQUIRES COLOR):

5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672][0.590845, 0.766797]
 [0.566237, 0.460085]
 [0.794026, 0.854147]
 [0.200586, 0.298614]
 [0.246837, 0.579672]

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    dot(A, B)

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{2,2},T,2,L} where L where T}, ::SVector{4,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] dot(::ContMechTensors.Tensor{2,2,Float64,4}, ::ContMechTensors.Tensor{1,2,Float64,2}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl:275

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    A ⋅ B

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{2,2},T,2,L} where L where T}, ::SVector{4,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] dot(::ContMechTensors.Tensor{2,2,Float64,4}, ::ContMechTensors.Tensor{1,2,Float64,2}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl:275

=====[End Error]===============================
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    E_sym = hessian(ψ, rand(Tensor{2,2}));

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{4,4},T,2,L} where L where T}, ::SVector{16,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] dcontract(::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}},4}, ::ContMechTensors.Tensor{4,2,Float64,16}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl:39
 [2] ψ(::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}},4}) at ./none:1
 [3] gradient(::#ψ, ::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,Float64},4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:314 (repeats 2 times)
 [4] hessian(::#ψ, ::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    norm(majorsymmetric(E) - E_sym)

> Output Diff (REQUIRES COLOR):

0.0ERROR: UndefVarError: E_sym not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    tdot(A,B)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.25096ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{2,2},T,2,L} where L where T}, ::SVector{4,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] tdot(::ContMechTensors.Tensor{2,2,Float64,4}, ::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl:339

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    A'⋅B

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.25096ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{2,2},T,2,L} where L where T}, ::SVector{4,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] ctranspose(::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/transpose.jl:74

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/transpose.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> A'
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.766797
 0.566237  0.460085
```

> Subexpression:

    A'

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.766797
 0.566237  0.46008ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{2,2},T,2,L} where L where T}, ::SVector{4,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] ctranspose(::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/transpose.jl:74

=====[End Error]===============================
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Λ, Φ = eig(A);

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SArray{Tuple{3,3},T,2,L} where L where T}, ::SVector{9,Float64}) is ambiguous. Candidates:
  convert(::Type{SA}, sa::StaticArrays.StaticArray) where SA<:StaticArrays.StaticArray in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/convert.jl:7
  convert(::Type{StaticArrays.SArray{Tuple{S1,S2},T,2,L} where L where T}, a::StaticArrays.StaticArray{#s51,T,N} where N where #s51) where {S1, S2, T} in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:56
Possible fix, define
  convert(::Type{StaticArrays.SArray{Tuple{Any,Any},T,2,L} where L where T}, ::StaticArrays.StaticArray{#s51,T,N} where N where #s51<:Tuple)
Stacktrace:
 [1] eig(::ContMechTensors.SymmetricTensor{2,3,Float64,6}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl:219

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Λ

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075ERROR: UndefVarError: Λ not define

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Φ

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.62495ERROR: UndefVarError: Φ not define

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.85414ERROR: UndefVarError: Φ not define

=====[End Error]===============================
 > checking footnote links.
Documenter: populating indices.
ERROR: LoadError: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Builder.jl:202
 [2] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Selectors.jl:164
 [3] cd(::Documenter.##2#3{Documenter.Documents.Document}, ::String) at ./file.jl:70
 [4] #makedocs#1(::Bool, ::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/Documenter/src/Documenter.jl:198
 [5] (::Documenter.#kw##makedocs)(::Array{Any,1}, ::Documenter.#makedocs) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl, in expression starting on line 2
===========================[ ERROR: ContMechTensors ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DocStringExtensions v0.3.3
INFO: Removing Documenter v0.10.0
ERROR: ContMechTensors had test errors

>>> End of log
