>>> 'Pkg.add("ContMechTensors")' log
INFO: Cloning cache of ContMechTensors from https://github.com/KristofferC/ContMechTensors.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing BinaryProvider v0.3.3
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing ContMechTensors v0.3.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.6
INFO: Installing ForwardDiff v0.7.5
INFO: Installing NaNMath v0.3.1
INFO: Installing SHA v0.5.7
INFO: Installing SpecialFunctions v0.6.0
INFO: Installing StaticArrays v0.7.2
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Package database updated

>>> 'Pkg.test("ContMechTensors")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (781.89453125 MB free)
Uptime: 42231.0 sec
Load Avg:  1.0830078125  1.03076171875  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2373613 s        109 s     196072 s    1065654 s          9 s
#2  3499 MHz     544133 s       4288 s      71509 s    3542360 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ContMechTensors               0.3.0
 - JSON                          0.17.2
13 additional packages:
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - CommonSubexpressions          0.1.0
 - Compat                        1.0.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.6
 - ForwardDiff                   0.7.5
 - NaNMath                       0.3.1
 - Nullables                     0.0.6
 - SHA                           0.5.7
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - URIParser                     0.3.1
INFO: Computing test dependencies for ContMechTensors...
INFO: Installing DocStringExtensions v0.4.5
INFO: Installing Documenter v0.19.1
INFO: Testing ContMechTensors

WARNING: deprecated syntax "abstract AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:21.
Use "abstract type AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order} end" instead.

WARNING: deprecated syntax "typealias Vec{dim,T,M} Tensor{1,dim,T,dim}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:34.
Use "Vec{dim,T,M} = Tensor{1,dim,T,dim}" instead.

WARNING: deprecated syntax "typealias AllTensors{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:38.
Use "AllTensors{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "typealias SecondOrderTensor{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:41.
Use "SecondOrderTensor{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" instead.

WARNING: deprecated syntax "typealias FourthOrderTensor{dim,T} Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:42.
Use "FourthOrderTensor{dim,T} = Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias SymmetricTensors{dim,T} Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:43.
Use "SymmetricTensors{dim,T} = Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias Tensors{dim,T} Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:44.
Use "Tensors{dim,T} = Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "abstract AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:21.
Use "abstract type AbstractTensor{order,dim,T<:Real}<:AbstractArray{T,order} end" instead.

WARNING: deprecated syntax "typealias Vec{dim,T,M} Tensor{1,dim,T,dim}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:34.
Use "Vec{dim,T,M} = Tensor{1,dim,T,dim}" instead.

WARNING: deprecated syntax "typealias AllTensors{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:38.
Use "AllTensors{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T},SymmetricTensor{4,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.

WARNING: deprecated syntax "typealias SecondOrderTensor{dim,T} Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:41.
Use "SecondOrderTensor{dim,T} = Union{SymmetricTensor{2,dim,T},Tensor{2,dim,T}}" instead.

WARNING: deprecated syntax "typealias FourthOrderTensor{dim,T} Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:42.
Use "FourthOrderTensor{dim,T} = Union{SymmetricTensor{4,dim,T},Tensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias SymmetricTensors{dim,T} Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:43.
Use "SymmetricTensors{dim,T} = Union{SymmetricTensor{2,dim,T},SymmetricTensor{4,dim,T}}" instead.

WARNING: deprecated syntax "typealias Tensors{dim,T} Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:44.
Use "Tensors{dim,T} = Union{Tensor{2,dim,T},Tensor{4,dim,T},Vec{dim,T}}" instead.
WARNING: Base.linearindexing is deprecated, use Base.IndexStyle instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:89
WARNING: Base.linearindexing is deprecated, use Base.IndexStyle instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:90

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> Location: src/man/constructing_tensors.md:164-176

> Code block:

```jldoctest
julia> data = rand(2, 5)
2×5 Array{Float64,2}:
 0.590845  0.566237  0.794026  0.200586  0.246837
 0.766797  0.460085  0.854147  0.298614  0.579672

julia> tensor_data = reinterpret(Vec{2, Float64}, data, (5,))
5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672]
```

> Subexpression:

    tensor_data = reinterpret(Vec{2, Float64}, data, (5,))

> Output Diff (REQUIRES COLOR):

5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672][0.590845, 0.766797]
 [0.566237, 0.460085]
 [0.794026, 0.854147]
 [0.200586, 0.298614]
 [0.246837, 0.579672]

=====[End Error]===============================
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearSlow is deprecated, use Base.IndexCartesian instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:301-309

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇f = gradient(norm, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793

julia> ∇f, f = gradient(norm, A, :all);
```

> Subexpression:

    ∇f = gradient(norm, A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,Float64,3}, ::ContMechTensors.SymmetricTensor{2,2,Float64,3})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:301-309

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇f = gradient(norm, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793

julia> ∇f, f = gradient(norm, A, :all);
```

> Subexpression:

    ∇f, f = gradient(norm, A, :all);

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,Float64,3}, ::ContMechTensors.SymmetricTensor{2,2,Float64,3})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}, ::Symbol) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:320

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:335-356

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇∇f = hessian(norm, A)
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207

julia> ∇∇f, ∇f, f = hessian(norm, A, :all);
```

> Subexpression:

    ∇∇f = hessian(norm, A)

> Output Diff (REQUIRES COLOR):

2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,ForwardDiff.Dual{Void,Float64,3},3}, ::ContMechTensors.SymmetricTensor{2,2,ForwardDiff.Dual{Void,Float64,3},3})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,ForwardDiff.Dual{Void,Float64,3},3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315
 [2] gradient(::ContMechTensors.##59#60{Base.LinAlg.#norm}, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:314
 [3] hessian(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:361

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:335-356

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇∇f = hessian(norm, A)
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207

julia> ∇∇f, ∇f, f = hessian(norm, A, :all);
```

> Subexpression:

    ∇∇f, ∇f, f = hessian(norm, A, :all);

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,ForwardDiff.Dual{Void,Float64,3},3}, ::ContMechTensors.SymmetricTensor{2,2,ForwardDiff.Dual{Void,Float64,3},3})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,ForwardDiff.Dual{Void,Float64,3},3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315
 [2] gradient(::ContMechTensors.##61#62{Base.LinAlg.#norm}, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:314
 [3] hessian(::Base.LinAlg.#norm, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}, ::Symbol) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:366

=====[End Error]===============================
=====[Test Error]==============================

> Location: src/man/automatic_differentiation.md:37-48

> Code block:

```jldoctest
julia> x = rand(Vec{2});

julia> gradient(norm, x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124

julia> x / norm(x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124
```

> Subexpression:

    gradient(norm, x)

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,Float64,2}, ::ContMechTensors.Tensor{1,2,Float64,2})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#norm, ::ContMechTensors.Tensor{1,2,Float64,2}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315

=====[End Error]===============================
=====[Test Error]==============================

> Location: src/man/automatic_differentiation.md:55-66

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,2});

julia> gradient(det, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845

julia> inv(A)' * det(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845
```

> Subexpression:

    gradient(det, A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,Float64,3}, ::ContMechTensors.SymmetricTensor{2,2,Float64,3})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::Base.LinAlg.#det, ::ContMechTensors.SymmetricTensor{2,2,Float64,3}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315

=====[End Error]===============================
=====[Test Error]==============================

> Location: src/man/automatic_differentiation.md:75-83

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    E_sym = hessian(ψ, rand(Tensor{2,2}));

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,ForwardDiff.Dual{Void,Float64,4},4}, ::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{Void,Float64,4},4})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::#ψ, ::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{Void,Float64,4},4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315
 [2] gradient(::ContMechTensors.##59#60{#ψ}, ::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:314
 [3] hessian(::#ψ, ::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:361

=====[End Error]===============================
=====[Test Error]==============================

> Location: src/man/automatic_differentiation.md:75-83

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    norm(majorsymmetric(E) - E_sym)

> Output Diff (REQUIRES COLOR):

0.0ERROR: UndefVarError: E_sym not defined

=====[End Error]===============================
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
WARNING: Base.LinearFast is deprecated, use Base.IndexLinear instead.
  likely near /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl:3
=====[Test Error]==============================

> Location: src/demos.md:99-118

> Code block:

```jldoctest
julia> μ = 1e10;

julia> Kb = 1.66e11;

julia> F = one(Tensor{2,3}) + rand(Tensor{2,3});

julia> C = tdot(F);

julia> S_AD = 2 * gradient(C -> Ψ(C, μ, Kb), C)
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
  4.30534e11  -2.30282e11  -8.52861e10
 -2.30282e11   4.38793e11  -2.64481e11
 -8.52861e10  -2.64481e11   7.85515e11

julia> S(C, μ, Kb)
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
  4.30534e11  -2.30282e11  -8.52861e10
 -2.30282e11   4.38793e11  -2.64481e11
 -8.52861e10  -2.64481e11   7.85515e11
```

> Subexpression:

    S_AD = 2 * gradient(C -> Ψ(C, μ, Kb), C)

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
  4.30534e11  -2.30282e11  -8.52861e10
 -2.30282e11   4.38793e11  -2.64481e11
 -8.52861e10  -2.64481e11   7.85515e11ERROR: MethodError: no method matching _extract_gradient(::ForwardDiff.Dual{Void,Float64,6}, ::ContMechTensors.SymmetricTensor{2,3,Float64,6})
Closest candidates are:
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{1,N,T,N} where T) where {N, T} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:20
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.SymmetricTensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:27
  _extract_gradient(::ForwardDiff.Dual{N,T,N} where N, !Matched::ContMechTensors.Tensor{2,dim,T2,N}) where {N, T, dim, T2} at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:34
  ...
Stacktrace:
 [1] gradient(::##3#4, ::ContMechTensors.SymmetricTensor{2,3,Float64,6}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:315

=====[End Error]===============================
 > checking footnote links.
Documenter: populating indices.
ERROR: LoadError: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Builder.jl:203
 [2] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.6/Documenter/src/Selectors.jl:168
 [3] cd(::Documenter.##2#3{Documenter.Documents.Document}, ::String) at ./file.jl:70
 [4] #makedocs#1(::Bool, ::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/Documenter/src/Documenter.jl:203
 [5] (::Documenter.#kw##makedocs)(::Array{Any,1}, ::Documenter.#makedocs) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl, in expression starting on line 2
===========================[ ERROR: ContMechTensors ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DocStringExtensions v0.4.5
INFO: Removing Documenter v0.19.1
ERROR: ContMechTensors had test errors

>>> End of log
