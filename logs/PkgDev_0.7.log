>>> 'Pkg.add("PkgDev")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of PkgDev from https://github.com/JuliaLang/PkgDev.jl.git
[ Info: Installing PkgDev v0.2.1
[ Info: Installing URIParser v0.3.1
[ Info: Package database updated

>>> 'Pkg.test("PkgDev")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4956
Commit 14297447f2 (2018-04-26 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     676756 s        104 s      60579 s     235927 s          6 s
       #2  3500 MHz     148983 s         56 s      24183 s     937999 s          0 s
       
  Memory: 2.939197540283203 GB (990.1953125 MB free)
  Uptime: 11327.0 sec
  Load Avg:  1.01513671875  1.001953125  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - PkgDev                        0.2.1
3 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing PkgDev
┌ Warning: PkgDev.jl is not configured. Please, run `PkgDev.config()` before performing any operations.
└ @ PkgDev PkgDev.jl:165
[ Info: Initializing package repository /tmp/H0ItC5LL/v0.7
[ Info: Cloning METADATA from https://github.com/JuliaLang/METADATA.jl
[ Info: No packages to install, update or remove
[ Info: Initializing PackageWithTestDependencies repo: /tmp/H0ItC5LL/v0.7/PackageWithTestDependencies
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithTestDependencies.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithTestDependencies generated files
[ Info: No packages to install, update or remove
[ Info: Computing test dependencies for PackageWithTestDependencies...
[ Info: Cloning cache of Example from https://github.com/JuliaLang/Example.jl.git
[ Info: Installing Example v0.5.1
[ Info: Testing PackageWithTestDependencies
[ Info: PackageWithTestDependencies tests passed
[ Info: Removing Example v0.5.1
Test Summary:                                                                                     | Pass  Total
testing a package with test dependencies causes them to be installed for the duration of the test |    6      6
[ Info: Initializing PackageWithExtension repo: /tmp/H0ItC5LL/v0.7/PackageWithExtension
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithExtension.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithExtension generated files
keys(Pkg.installed()) = ["PackageWithTestDependencies", "PackageWithExtension"]
Test Summary:                           | Pass  Total
generating a package with .jl extension |    1      1
[ Info: Initializing PackageWithNoTests repo: /tmp/H0ItC5LL/v0.7/PackageWithNoTests
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithNoTests.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithNoTests generated files
Test Summary:                                | Pass  Total
testing a package with no runtests.jl errors |    1      1
[ Info: Initializing PackageWithFailingTests repo: /tmp/H0ItC5LL/v0.7/PackageWithFailingTests
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithFailingTests.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithFailingTests generated files
[ Info: Testing PackageWithFailingTests
Test Failed at /tmp/H0ItC5LL/v0.7/PackageWithFailingTests/test/runtests.jl:2
  Expression: false
ERROR: LoadError: There was an error during testing
in expression starting at /tmp/H0ItC5LL/v0.7/PackageWithFailingTests/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for PackageWithFailingTests
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /tmp/H0ItC5LL/v0.7/PackageWithFailingTests/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #3 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:33 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##3#6")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #2 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:33 [inlined]
│     [14] withenv(::getfield(Pkg.Dir, Symbol("##2#5")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}},String}, ::Pair{String,String}, ::Vararg{Pair{String,String},N} where N) at ./env.jl:156
│     [15] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:32
│     [16] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [17] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [18] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278 [inlined]
│     [19] macro expansion at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:89 [inlined]
│     [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
│     [21] (::getfield(Main, Symbol("##5#13")))(::String) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:80
│     [22] (::getfield(Main, Symbol("##3#4")){getfield(Main, Symbol("##5#13")),Bool,String})() at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:14
│     [23] withenv(::getfield(Main, Symbol("##3#4")){getfield(Main, Symbol("##5#13")),Bool,String}, ::Pair{String,String}, ::Vararg{Pair{String,String},N} where N) at ./env.jl:156
│     [24] temp_pkg_dir(::getfield(Main, Symbol("##5#13")), ::Bool) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:7
│     [25] temp_pkg_dir(::Function) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:6
│     [26] top-level scope
│     [27] include at ./boot.jl:314 [inlined]
│     [28] include_relative(::Module, ::String) at ./loading.jl:1067
│     [29] include(::Module, ::String) at ./sysimg.jl:29
│     [30] exec_options(::Base.JLOptions) at ./client.jl:327
│     [31] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
Test Summary:                               | Pass  Total
testing a package with failing tests errors |    1      1
[ Info: Initializing PackageWithCodeCoverage repo: /tmp/H0ItC5LL/v0.7/PackageWithCodeCoverage
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithCodeCoverage.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithCodeCoverage generated files
[ Info: Testing PackageWithCodeCoverage
[ Info: PackageWithCodeCoverage tests passed
[ Info: Testing PackageWithCodeCoverage
[ Info: PackageWithCodeCoverage tests passed
Test Summary:              | Pass  Total
testing with code-coverage |   15     15
[ Info: Initializing PackageWithTags repo: /tmp/H0ItC5LL/v0.7/PackageWithTags
[ Info: Generating LICENSE.md
[ Info: Generating README.md
[ Info: Generating src/PackageWithTags.jl
[ Info: Generating test/runtests.jl
[ Info: Generating REQUIRE
[ Info: Generating .gitignore
[ Info: Generating .travis.yml
[ Info: Generating appveyor.yml
[ Info: Generating .codecov.yml
[ Info: Committing PackageWithTags generated files
testing package tags: Error During Test at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:156
  Got exception PkgError("PackageWithTags: no URL configured", nothing) outside of a @test
  PackageWithTags: no URL configured
  Stacktrace:
   [1] register(::String) at /home/vagrant/.julia/v0.7/PkgDev/src/entry.jl:213
   [2] register(::String) at /home/vagrant/.julia/v0.7/PkgDev/src/PkgDev.jl:44
   [3] macro expansion at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:158 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [5] (::getfield(Main, Symbol("##5#13")))(::String) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:157
   [6] (::getfield(Main, Symbol("##3#4")){getfield(Main, Symbol("##5#13")),Bool,String})() at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:14
   [7] withenv(::getfield(Main, Symbol("##3#4")){getfield(Main, Symbol("##5#13")),Bool,String}, ::Pair{String,String}, ::Vararg{Pair{String,String},N} where N) at ./env.jl:156
   [8] temp_pkg_dir(::getfield(Main, Symbol("##5#13")), ::Bool) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:7
   [9] temp_pkg_dir(::Function) at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:6
   [10] top-level scope
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] exec_options(::Base.JLOptions) at ./client.jl:327
   [15] _start() at ./client.jl:455
Test Summary:        | Error  Total
testing package tags |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl:21
┌ Error: ------------------------------------------------------------
│ # Testing failed for PkgDev
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PkgDev/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: PkgDev had test errors

>>> End of log
