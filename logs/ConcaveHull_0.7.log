>>> 'Pkg.add("ConcaveHull")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ConcaveHull from https://github.com/lstagner/ConcaveHull.jl.git
[ Info: Installing ConcaveHull v0.0.2
[ Info: Installing Distances v0.6.0
[ Info: Installing NearestNeighbors v0.3.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing StaticArrays v0.7.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ConcaveHull
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ConcaveHull")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4941
Commit 9f5351c36a (2018-04-24 14:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3494 MHz    2518844 s       6616 s     191470 s     760510 s         25 s
       #2  3494 MHz     609470 s         92 s      80354 s    3304201 s          0 s
       
  Memory: 2.939197540283203 GB (854.4296875 MB free)
  Uptime: 40759.0 sec
  Load Avg:  0.9970703125  0.998046875  0.97607421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ConcaveHull                   0.0.2
 - JSON                          0.17.2
6 additional packages:
 - Compat                        0.63.0
 - Distances                     0.6.0
 - NearestNeighbors              0.3.0
 - Nullables                     0.0.5
 - RecipesBase                   0.2.3
 - StaticArrays                  0.7.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ConcaveHull
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ConcaveHull/src/hull.jl:1.
│ Use `mutable struct` instead.
└ @ nothing hull.jl:1
┌ Warning: Deprecated syntax `parametric method syntax Hull{S <: AbstractVector}(T::Type{S}, k::Int)` around /home/vagrant/.julia/v0.7/ConcaveHull/src/hull.jl:6.
│ Use `Hull(T::Type{S}, k::Int) where S <: AbstractVector` instead.
└ @ nothing hull.jl:6
┌ Warning: Deprecated syntax `parametric method syntax intersect_line{T <: AbstractVector, S <: AbstractVector}(ls1::NTuple{2, T}, ls2::NTuple{2, S})` around /home/vagrant/.julia/v0.7/ConcaveHull/src/concave_hull.jl:6.
│ Use `intersect_line(ls1::NTuple{2, T}, ls2::NTuple{2, S}) where {T <: AbstractVector, S <: AbstractVector}` instead.
└ @ nothing concave_hull.jl:6
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ConcaveHull/test/runtests.jl:2
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = Type at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reinterpret(::Type{T}, a::Array{S}, dims::NTuple{N, Int}) where {T, S, N}` is deprecated, use `reshape(reinterpret(T, vec(a)), dims)` instead.
│   caller = #KDTree#13(::Int64, ::Bool, ::Bool, ::Array{Float64,2}, ::Symbol, ::Type, ::Array{Float64,2}, ::Distances.Euclidean) at kd_tree.jl:79
└ @ NearestNeighbors kd_tree.jl:79
ERROR: LoadError: MethodError: no method matching NearestNeighbors.KDTree(::Base.ReinterpretArray{StaticArrays.SArray{Tuple{2},Float64,1,2},1,Float64,Array{Float64,1}}, ::Distances.Euclidean; leafsize=10, storedata=true, reorder=false, reorderbuffer=StaticArrays.SArray{Tuple{2},Float64,1,2}[], indicesfor=:data)
Closest candidates are:
  NearestNeighbors.KDTree(!Matched::Array{V<:AbstractArray,1}, ::M<:Union{Distances.Chebyshev, Distances.Cityblock, Distances.Euclidean, Distances.Minkowski}; leafsize, storedata, reorder, reorderbuffer, indicesfor) where {V<:AbstractArray, M<:Union{Distances.Chebyshev, Distances.Cityblock, Distances.Euclidean, Distances.Minkowski}} at /home/vagrant/.julia/v0.7/NearestNeighbors/src/kd_tree.jl:34
  NearestNeighbors.KDTree(!Matched::Array{T<:AbstractFloat,2}, ::M<:Union{Distances.Chebyshev, Distances.Cityblock, Distances.Euclidean, Distances.Minkowski}; leafsize, storedata, reorder, reorderbuffer, indicesfor) where {T<:AbstractFloat, M<:Union{Distances.Chebyshev, Distances.Cityblock, Distances.Euclidean, Distances.Minkowski}} at /home/vagrant/.julia/v0.7/NearestNeighbors/src/kd_tree.jl:77
Stacktrace:
 [1] #KDTree#13(::Int64, ::Bool, ::Bool, ::Array{Float64,2}, ::Symbol, ::Type, ::Array{Float64,2}, ::Distances.Euclidean) at /home/vagrant/.julia/v0.7/NearestNeighbors/src/kd_tree.jl:85
 [2] Type at ./<missing>:0 [inlined] (repeats 2 times)
 [3] concave_hull(::Array{Array{Float64,1},1}, ::Int64) at /home/vagrant/.julia/v0.7/ConcaveHull/src/concave_hull.jl:113
 [4] concave_hull(::Array{Array{Float64,1},1}) at /home/vagrant/.julia/v0.7/ConcaveHull/src/concave_hull.jl:109
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/ConcaveHull/test/runtests.jl:12
┌ Error: ------------------------------------------------------------
│ # Testing failed for ConcaveHull
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ConcaveHull/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: ConcaveHull had test errors

>>> End of log
