>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (530.875 MB free)
Uptime: 6615.0 sec
Load Avg:  1.029296875  1.373046875  1.51220703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     299712 s         80 s      35211 s     257958 s          6 s
#2  3500 MHz     177184 s         70 s      26532 s     432378 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.911195 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.577221; 0.0 0.556763 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.975393; 0.0 0.0 0.149033 0.0 0.0 0.0 0.0 0.0 0.0 0.587939; 0.0 0.0 0.0 0.815056 0.0 0.0 0.0 0.0 0.0 0.401045; 0.0 0.0 0.0 0.0 0.616212 0.0 0.0 0.0 0.0 0.208159; 0.0 0.0 0.0 0.0 0.0 0.618594 0.0 0.0 0.0 0.769115; 0.0 0.0 0.0 0.0 0.0 0.0 0.985654 0.0 0.0 0.606879; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.374318 0.0 0.81425; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.800352 0.319036; 0.577221 0.975393 0.587939 0.401045 0.208159 0.769115 0.606879 0.81425 0.319036 0.139241]
(U,Lambda) = eig(full(A)) = ([-1.54727,0.187481,0.429749,0.593817,0.616384,0.767103,0.806723,0.86926,0.958827,2.28434],
[-0.174529 0.0488925 0.0689415 0.0432197 -0.00155325 -0.257402 -0.078896 -0.773052 0.462925 -0.27593; -0.3446 0.161916 0.441586 -0.625547 0.0129786 0.297966 0.0557218 0.1753 0.0926719 -0.370609; -0.257643 -0.937386 -0.120435 -0.0314124 0.000998009 0.061123 0.0127652 0.045847 0.0277346 -0.180736; -0.126195 0.0391737 0.0598511 0.0430772 -0.0016014 -0.537383 -0.687161 0.415541 0.106558 -0.179168; -0.0715203 0.029763 0.0641931 0.220883 0.961044 0.088642 0.0156024 0.0461996 0.0232087 -0.0819102; -0.263966 0.109362 0.234192 0.737667 -0.276059 0.332772 0.0583784 0.172323 0.0863532 -0.303079; -0.178102 0.0466093 0.0627752 0.0368056 -0.00130377 -0.178427 -0.0484319 -0.292833 -0.864169 -0.30674; -0.314982 0.267154 -0.844688 -0.0881543 0.00266852 0.133203 0.0268896 0.0923956 0.0532146 -0.279829; -0.101018 0.0319108 0.0495013 0.0367081 -0.00137575 -0.616556 0.715118 0.260026 0.0769028 -0.141118; 0.74334 -0.061301 -0.0575025 -0.0237639 0.000793314 0.0642554 0.0142796 0.0561627 0.0382001 -0.656407])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
