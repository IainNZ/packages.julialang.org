>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (473.79296875 MB free)
Uptime: 5996.0 sec
Load Avg:  1.07275390625  1.71923828125  1.6279296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     269733 s         55 s      35331 s     238333 s          5 s
#2  3499 MHz     167399 s        100 s      25488 s     389293 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.766609 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.540304; 0.0 0.821263 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.874211; 0.0 0.0 0.298398 0.0 0.0 0.0 0.0 0.0 0.0 0.332892; 0.0 0.0 0.0 0.297518 0.0 0.0 0.0 0.0 0.0 0.270528; 0.0 0.0 0.0 0.0 0.980802 0.0 0.0 0.0 0.0 0.334103; 0.0 0.0 0.0 0.0 0.0 0.173136 0.0 0.0 0.0 0.436704; 0.0 0.0 0.0 0.0 0.0 0.0 0.201165 0.0 0.0 0.0167991; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0848346 0.0 0.172809; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.722369 0.795027; 0.540304 0.874211 0.332892 0.270528 0.334103 0.436704 0.0167991 0.172809 0.795027 0.425839]
(U,Lambda) = eig(full(A)) = ([-0.954113,0.0903062,0.201043,0.212493,0.297866,0.358027,0.747243,0.788061,0.96867,2.06234],
[-0.228335 0.0248409 0.0068842 -0.0773456 -0.00115547 0.15977 -0.632762 -0.654831 0.0937853 0.27875; -0.358072 0.0371874 0.0101571 -0.11391 -0.00167433 0.228009 -0.267863 0.684534 0.208006 0.47088; -0.193271 0.0497416 0.0246403 -0.307385 -0.627144 -0.674504 0.0168209 -0.0176747 0.0174193 0.126157; -0.157174 0.0405947 0.0202069 -0.252385 0.77889 -0.540167 0.0136429 -0.0143378 0.0141374 0.102472; -0.125564 0.0116659 0.00308759 -0.034494 -0.000490408 0.0648168 -0.0324435 0.0450664 -0.965903 0.206505; -0.281717 0.163935 -0.112764 0.880176 0.00350973 -0.285371 0.0172519 -0.0184634 0.0192534 0.154526; -0.0105742 0.0047118 0.992885 0.11764 0.000174147 -0.0129392 0.000697711 -0.000744171 0.000767688 0.00603382; -0.120953 -0.982012 -0.0107158 0.107378 0.000813166 -0.076425 0.00591674 -0.00638877 0.00685762 0.0584172; -0.344848 0.0391104 0.0109893 -0.123684 -0.0018774 0.263639 0.724909 -0.314645 0.113213 0.396624; 0.727185 -0.0310936 -0.00720607 0.0793229 0.00100244 -0.12082 0.02268 -0.0259984 0.0350735 0.668485])
Remedy 3 
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
