>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (503.4375 MB free)
Uptime: 5950.0 sec
Load Avg:  1.07861328125  1.38134765625  1.490234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     273490 s         63 s      36158 s     227935 s         12 s
#2  3498 MHz     114110 s        136 s      27589 s     439803 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.309359 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.990525; 0.0 0.864848 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.461022; 0.0 0.0 0.140133 0.0 0.0 0.0 0.0 0.0 0.0 0.360383; 0.0 0.0 0.0 0.489638 0.0 0.0 0.0 0.0 0.0 0.537124; 0.0 0.0 0.0 0.0 0.68936 0.0 0.0 0.0 0.0 0.91712; 0.0 0.0 0.0 0.0 0.0 0.269334 0.0 0.0 0.0 0.830927; 0.0 0.0 0.0 0.0 0.0 0.0 0.184427 0.0 0.0 0.270553; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.335983 0.0 0.702366; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.401334 0.948049; 0.990525 0.461022 0.360383 0.537124 0.91712 0.830927 0.270553 0.702366 0.948049 0.789796]
(U,Lambda) = eig(full(A)) = ([-1.5562,0.146122,0.187526,0.282057,0.326766,0.372714,0.476054,0.623261,0.847639,2.76827],
[-0.357748 -0.0986024 -0.0914717 -0.474674 0.585617 -0.367714 0.139135 -0.198015 0.0664535 0.295746; -0.128304 -0.0104232 -0.00765797 -0.0103498 -0.00881728 0.0220325 -0.0277649 0.11975 -0.967455 0.177821; -0.143145 0.977787 0.085553 0.0332224 0.0198718 -0.036443 0.0251201 -0.046809 0.0183948 0.100673; -0.176899 -0.0254079 -0.020003 -0.0338542 -0.0339383 0.108043 -0.925839 -0.252244 0.0541815 0.17306; -0.275184 -0.0274333 -0.0205615 -0.0294601 -0.0260296 0.0681205 -0.100674 0.870685 0.209249 0.323882; -0.306686 -0.109585 -0.114276 0.854471 0.148893 -0.189039 0.0941184 -0.147325 0.0518879 0.244121; -0.104729 -0.114772 0.982306 0.0362571 0.019561 -0.0337954 0.021723 -0.0386883 0.014732 0.0768747; -0.250105 -0.0601131 -0.0532292 -0.170409 -0.784203 -0.449733 0.117411 -0.153422 0.0495731 0.212005; -0.326319 -0.060363 -0.0498877 -0.103992 -0.130839 0.779081 0.297091 -0.26807 0.0767114 0.294063; 0.673783 0.0162496 0.0112509 0.0130835 0.0102911 -0.0235193 0.023415 -0.0627519 0.0361127 0.73417])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
