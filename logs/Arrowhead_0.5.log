>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.203125 MB free)
Uptime: 5749.0 sec
Load Avg:  1.00732421875  1.46923828125  1.6298828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     239531 s        105 s      35620 s     242368 s         12 s
#2  3499 MHz     146794 s         49 s      27091 s     379775 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.22.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.491297 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0122849; 0.0 0.469171 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.100448; 0.0 0.0 0.243906 0.0 0.0 0.0 0.0 0.0 0.0 0.203516; 0.0 0.0 0.0 0.0496921 0.0 0.0 0.0 0.0 0.0 0.873044; 0.0 0.0 0.0 0.0 0.929398 0.0 0.0 0.0 0.0 0.257753; 0.0 0.0 0.0 0.0 0.0 0.607521 0.0 0.0 0.0 0.176259; 0.0 0.0 0.0 0.0 0.0 0.0 0.299997 0.0 0.0 0.140705; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.173427 0.0 0.51829; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.627637 0.370657; 0.0122849 0.100448 0.203516 0.873044 0.257753 0.176259 0.140705 0.51829 0.370657 0.208341]
(U,Lambda) = eig(full(A)) = ([-0.970756,0.13845,0.238203,0.296263,0.462984,0.491202,0.543558,0.611885,0.881903,1.40669],
[-0.0058443 0.00193808 -0.00131299 0.00164352 0.0258896 0.998823 -0.0390516 -0.00217624 -0.00532799 -0.00901604; -0.0485202 0.0169069 -0.0117641 0.0151578 0.968672 -0.0351384 -0.22433 -0.0150353 -0.0412288 -0.0719798; -0.116537 0.107428 -0.965331 -0.101421 -0.0554293 -0.00634244 -0.11283 -0.0118144 -0.054039 -0.117584; -0.595069 -0.547537 0.125277 -0.0923859 -0.126043 -0.0152395 -0.293677 -0.0331733 -0.177718 -0.432223; -0.0943489 0.0181402 -0.0100873 0.0106223 0.0329741 0.00453327 0.110979 0.0173413 0.919351 -0.362801; -0.0776765 0.0209169 -0.0129098 0.0147755 0.0727631 0.0116782 0.457787 -0.862755 -0.108824 -0.148171; -0.077014 0.0484837 -0.0615931 0.983342 -0.0515105 -0.00567132 -0.0959716 -0.00963711 -0.0409622 -0.0854145; -0.315064 0.82485 0.216439 -0.110093 -0.106802 -0.0125698 -0.232627 -0.0252512 -0.12393 -0.282337; -0.161291 0.0421777 -0.025746 0.0291854 0.134321 0.0209375 0.732369 0.502688 -0.246951 -0.319635; 0.69554 -0.0556654 0.0270503 -0.0260923 -0.0596679 -0.00770684 -0.166128 -0.0213618 -0.169406 -0.671818])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
