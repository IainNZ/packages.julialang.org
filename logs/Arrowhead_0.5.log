>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (440.94140625 MB free)
Uptime: 5045.0 sec
Load Avg:  1.00341796875  1.4638671875  1.6005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     250837 s         51 s      32390 s     170175 s          6 s
#2  3500 MHz     119820 s         86 s      25409 s     349119 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.23.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.491387 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.105617; 0.0 0.140095 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.325844; 0.0 0.0 0.846882 0.0 0.0 0.0 0.0 0.0 0.0 0.374089; 0.0 0.0 0.0 0.641833 0.0 0.0 0.0 0.0 0.0 0.666584; 0.0 0.0 0.0 0.0 0.0747028 0.0 0.0 0.0 0.0 0.970755; 0.0 0.0 0.0 0.0 0.0 0.198898 0.0 0.0 0.0 0.753184; 0.0 0.0 0.0 0.0 0.0 0.0 0.0749608 0.0 0.0 0.466147; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.198889 0.0 0.893265; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.907027 0.76404; 0.105617 0.325844 0.374089 0.666584 0.970755 0.753184 0.466147 0.893265 0.76404 0.0898488]
(U,Lambda) = eig(full(A)) = ([-1.75871,0.0749124,0.121129,0.148199,0.198894,0.487394,0.541786,0.780366,0.86343,2.20712],
[-0.0339395 2.37585e-5 -0.00874488 0.00632532 1.29176e-6 0.967277 -0.244862 0.0367458 -0.00983338 -0.0412728; -0.12408 0.00046833 -0.526705 -0.826434 -1.98245e-5 -0.0343167 -0.0947807 0.0511664 -0.0156038 -0.105692; -0.103811 4.53993e-5 -0.015802 0.0110047 2.06525e-6 0.0380618 0.143265 -0.565439 -0.783044 -0.184391; -0.200779 0.000110155 -0.0392454 0.0277543 5.38362e-6 0.157868 0.778484 0.483774 -0.104196 -0.285523; -0.382844 -0.433993 0.641016 -0.271474 -2.79629e-5 -0.0860366 -0.242839 0.138309 -0.0426328 -0.305223; -0.278194 0.000569122 -0.296909 0.30534 0.764523 -0.0954904 -0.256656 0.130231 -0.0392596 -0.25146; -0.183812 0.900916 0.30953 -0.130819 -1.34555e-5 -0.0413398 -0.116673 0.066439 -0.0204786 -0.146583; -0.329936 0.000675016 -0.352168 0.362189 -0.644596 -0.113247 -0.304382 0.15445 -0.0465607 -0.298226; -0.207239 8.60213e-5 -0.029804 0.0206944 3.8598e-6 0.0665954 0.24442 -0.60647 0.607042 -0.394022; 0.723056 -9.36858e-5 0.0306566 -0.0205533 -3.57737e-6 -0.0365762 -0.116843 0.10054 -0.0346387 -0.67047])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
