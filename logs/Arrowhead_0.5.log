>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (610.78125 MB free)
Uptime: 6729.0 sec
Load Avg:  0.9580078125  1.7119140625  1.59033203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     318102 s         78 s      32809 s     248693 s          8 s
#2  3500 MHz     139864 s         66 s      25937 s     488889 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.513139 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.204507; 0.0 0.704034 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.163505; 0.0 0.0 0.273819 0.0 0.0 0.0 0.0 0.0 0.0 0.31909; 0.0 0.0 0.0 0.683937 0.0 0.0 0.0 0.0 0.0 0.0313038; 0.0 0.0 0.0 0.0 0.461553 0.0 0.0 0.0 0.0 0.157451; 0.0 0.0 0.0 0.0 0.0 0.91982 0.0 0.0 0.0 0.0885739; 0.0 0.0 0.0 0.0 0.0 0.0 0.644153 0.0 0.0 0.00691338; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0747599 0.0 0.0309487; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00928029 0.659585; 0.204507 0.163505 0.31909 0.0313038 0.157451 0.0885739 0.00691338 0.0309487 0.659585 0.91646]
(U,Lambda) = eig(full(A)) = ([-0.401354,0.0746186,0.230237,0.443284,0.495402,0.644113,0.680821,0.688039,0.911487,1.43431],
[-0.112976 -0.00212761 -0.089883 0.308329 0.911003 -0.00906752 -0.0978667 0.0904006 0.0477107 0.184531; -0.0747263 -0.00118513 -0.0429086 0.06604 0.0619196 0.015846 0.565227 -0.790346 0.0732458 0.1861; -0.238757 -0.00730798 -0.910355 -0.198304 -0.113777 -0.00500418 -0.0629117 0.0595576 0.0465039 0.228546; -0.0145716 -0.000234383 -0.00857894 0.0136995 0.0131185 0.00456474 0.806152 0.589989 0.0127848 0.0346755; -0.0921804 -0.00185644 -0.0846339 0.907676 -0.367517 -0.0050085 -0.0576216 0.0537476 0.0325213 0.134538; -0.033869 -0.0004781 -0.0159707 0.0195753 0.0164888 0.00186563 0.0297389 -0.029545 -0.987778 0.143097; -0.00334057 -5.53789e-5 -0.00207675 0.00362474 0.00367205 0.999761 -0.0151292 0.0121792 0.0024033 0.00727244; -0.0328389 -0.998897 0.0247505 -0.00884456 -0.00581309 -0.000315666 -0.00409771 0.00390157 0.0034374 0.0189212; -0.811469 0.0460549 0.371167 -0.160058 -0.107202 -0.00603362 -0.0788157 0.0751294 0.0679415 0.384723; 0.505192 0.00456219 0.124338 -0.105317 -0.0790091 -0.0058072 -0.0802444 0.0773135 0.0929331 0.831191])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
