>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (561.2734375 MB free)
Uptime: 6765.0 sec
Load Avg:  1.01611328125  1.35498046875  1.46630859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     288957 s         56 s      36614 s     284698 s         12 s
#2  3500 MHz     178319 s         92 s      25916 s     447508 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.444813 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.282659; 0.0 0.978651 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.37809; 0.0 0.0 0.261394 0.0 0.0 0.0 0.0 0.0 0.0 0.0739989; 0.0 0.0 0.0 0.690146 0.0 0.0 0.0 0.0 0.0 0.165824; 0.0 0.0 0.0 0.0 0.720727 0.0 0.0 0.0 0.0 0.980018; 0.0 0.0 0.0 0.0 0.0 0.160816 0.0 0.0 0.0 0.634956; 0.0 0.0 0.0 0.0 0.0 0.0 0.163941 0.0 0.0 0.804695; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.268741 0.0 0.799075; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.58108 0.691827; 0.282659 0.37809 0.0739989 0.165824 0.980018 0.634956 0.804695 0.799075 0.691827 0.902499]
(U,Lambda) = eig(full(A)) = ([-1.20193,0.161996,0.223247,0.261462,0.414984,0.479423,0.639559,0.691259,0.96014,2.54267],
[-0.112221 -0.00147273 0.0516344 -0.00140608 0.735849 0.652452 0.0824173 0.00750731 -0.0260911 0.100195; -0.113359 -0.000682214 0.0202579 -0.000480828 0.0520875 -0.0605054 -0.0633142 -0.0086112 0.971579 0.179767; -0.0330613 -0.00109702 0.078513 0.994924 -0.0374132 0.0271149 0.0111114 0.00112677 -0.00503753 0.0241215; -0.0572985 -0.000462652 0.0143748 -0.000352808 0.0467973 -0.0628687 -0.186138 0.974903 -0.0292149 0.0665641; -0.333248 -0.00258461 0.0797326 -0.00194625 0.248908 -0.324465 -0.685601 -0.217683 -0.194715 0.399997; -0.304624 0.792641 -0.411643 0.00575408 -0.193992 0.159215 0.0753122 0.00783516 -0.0377861 0.198237; -0.385174 -0.609573 -0.54918 0.00752601 -0.248912 0.203777 0.0960722 0.00998855 -0.0480753 0.251561; -0.355228 -0.0110308 0.710904 -0.100124 -0.424302 0.30301 0.122363 0.012379 -0.0549757 0.261317; -0.253675 -0.00243254 0.0782518 -0.00197421 0.323444 -0.543699 0.671774 0.0411 -0.0868163 0.262268; 0.653784 0.00147355 -0.0404742 0.000912071 -0.0776536 0.0798909 0.0567838 0.00654551 -0.0475677 0.743628])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
