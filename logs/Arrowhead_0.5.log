>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.2890625 MB free)
Uptime: 6228.0 sec
Load Avg:  0.9130859375  1.60986328125  1.5556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     307959 s        105 s      30998 s     210116 s          7 s
#2  3500 MHz     102839 s         42 s      24466 s     482988 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.774623 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.238794; 0.0 0.0492755 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.211291; 0.0 0.0 0.316982 0.0 0.0 0.0 0.0 0.0 0.0 0.334105; 0.0 0.0 0.0 0.555472 0.0 0.0 0.0 0.0 0.0 0.315109; 0.0 0.0 0.0 0.0 0.663793 0.0 0.0 0.0 0.0 0.504837; 0.0 0.0 0.0 0.0 0.0 0.124246 0.0 0.0 0.0 0.659605; 0.0 0.0 0.0 0.0 0.0 0.0 0.173428 0.0 0.0 0.897624; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.93778 0.0 0.888987; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.206819 0.376471; 0.238794 0.211291 0.334105 0.315109 0.504837 0.659605 0.897624 0.888987 0.376471 0.592853]
(U,Lambda) = eig(full(A)) = ([-1.16469,0.0522372,0.139961,0.202277,0.303215,0.492469,0.59402,0.746357,0.807934,2.22149],
[-0.083548 -0.00456697 0.0074866 0.00468646 0.0195257 -0.112981 -0.112682 -0.717043 0.662873 0.116302; -0.118096 0.985631 -0.0463606 -0.0155119 -0.0320724 0.0636438 0.0330555 0.0257265 0.0257532 0.0685444; -0.153 -0.0174353 0.0375545 0.0327175 0.935437 0.25416 0.102778 0.0660432 0.0629274 0.123621; -0.124295 -0.00865096 0.0150898 0.0100214 0.0481502 -0.667678 0.696649 0.140111 0.115415 0.133283; -0.187336 -0.0114048 0.0191762 0.012287 0.0539675 -0.39337 -0.616625 0.518973 0.323863 0.228382; -0.347228 -0.126553 -0.835188 -0.0949505 -0.142065 0.239134 0.119661 0.0899909 0.0892117 0.22163; -0.455157 -0.102329 0.533675 -0.349497 -0.26659 0.375592 0.181882 0.132977 0.130814 0.308848; -0.286898 -0.0138695 0.0221715 0.0135766 0.0540007 -0.266502 -0.220392 -0.394169 -0.633082 0.488003; -0.186249 -0.0336471 0.112042 0.931097 -0.15054 0.17594 0.0828611 0.0592232 0.0579121 0.13168; 0.678517 0.0138157 -0.0198978 -0.0112326 -0.0385461 0.133496 0.0852229 0.0848754 0.0924688 0.704682])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
