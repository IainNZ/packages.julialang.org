>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (537.25 MB free)
Uptime: 5498.0 sec
Load Avg:  1.00341796875  1.37158203125  1.48046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     253580 s         56 s      33710 s     203222 s          8 s
#2  3499 MHz     117461 s        129 s      25454 s     387893 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.339272 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.925657; 0.0 0.647208 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.337494; 0.0 0.0 0.977944 0.0 0.0 0.0 0.0 0.0 0.0 0.0144997; 0.0 0.0 0.0 0.444469 0.0 0.0 0.0 0.0 0.0 0.0537633; 0.0 0.0 0.0 0.0 0.926648 0.0 0.0 0.0 0.0 0.345292; 0.0 0.0 0.0 0.0 0.0 0.547563 0.0 0.0 0.0 0.361733; 0.0 0.0 0.0 0.0 0.0 0.0 0.420999 0.0 0.0 0.707442; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.357446 0.0 0.481575; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.299805 0.512085; 0.925657 0.337494 0.0144997 0.0537633 0.345292 0.361733 0.707442 0.481575 0.512085 0.533323]
(U,Lambda) = eig(full(A)) = ([-1.02311,0.307007,0.353383,0.397805,0.444379,0.534411,0.632885,0.896342,0.977906,1.97366],
[-0.468885 -0.36997 -0.481437 0.428743 0.0147507 -0.163562 0.128473 -0.140295 0.0037955 -0.405578; -0.139438 -0.0127934 0.00843003 -0.0366871 -0.00278695 0.103168 -0.960228 -0.114375 0.00267241 -0.182202; -0.00500051 -0.000278697 0.000170386 -0.000677602 -4.55159e-5 0.00112722 -0.00171239 0.0150023 -0.999818 -0.010428; -0.0252813 -0.00504381 0.00433199 -0.031236 -0.998522 -0.020611 0.011628 -0.0100455 0.00026392 -0.025177; -0.122214 -0.00718625 0.00442061 -0.0177014 -0.00119919 0.0303538 -0.0478989 0.961966 0.0176398 -0.236164; -0.158934 -0.0193922 0.0136721 -0.0654858 -0.00587174 0.948334 0.17277 -0.0875669 0.00220112 -0.181643; -0.33807 -0.0800333 0.076788 -0.826925 0.050681 -0.215084 0.136059 -0.125657 0.00332643 -0.326282; -0.240727 -0.123127 0.870087 0.323491 0.00927833 -0.0938319 0.0712484 -0.07545 0.00203245 -0.213375; -0.267132 0.916937 -0.0701455 0.141664 0.00593258 -0.0752623 0.0626514 -0.0724779 0.00197751 -0.21908; 0.690103 0.012896 -0.00733924 0.0271112 0.00167492 -0.0344807 0.0407509 -0.0844309 0.00261861 -0.716111])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
