>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (563.9375 MB free)
Uptime: 6775.0 sec
Load Avg:  1.06005859375  1.361328125  1.48583984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     279406 s         94 s      35204 s     297388 s         10 s
#2  3501 MHz     200378 s         82 s      26212 s     418551 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.458547 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00995118; 0.0 0.586942 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.283407; 0.0 0.0 0.966006 0.0 0.0 0.0 0.0 0.0 0.0 0.993206; 0.0 0.0 0.0 0.623134 0.0 0.0 0.0 0.0 0.0 0.642314; 0.0 0.0 0.0 0.0 0.678876 0.0 0.0 0.0 0.0 0.242079; 0.0 0.0 0.0 0.0 0.0 0.448319 0.0 0.0 0.0 0.0295228; 0.0 0.0 0.0 0.0 0.0 0.0 0.550827 0.0 0.0 0.994612; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0589807 0.0 0.806694; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.528985 0.899848; 0.00995118 0.283407 0.993206 0.642314 0.242079 0.0295228 0.994612 0.806694 0.899848 0.10925]
(U,Lambda) = eig(full(A)) = ([-1.68419,0.151332,0.448356,0.458551,0.538279,0.584356,0.608487,0.675832,0.848819,2.38005],
[-0.00344082 0.00335595 0.00122789 0.999977 -0.000994134 0.000682215 -0.00131563 0.000563748 -0.00249743 -0.00339624; -0.0924538 0.0674056 0.00257143 -0.000838553 0.0463883 -0.945111 -0.26076 0.0392464 -0.105999 -0.10365; -0.277663 0.12631 0.00241262 -0.000743531 0.0184959 -0.0224457 0.0550708 -0.0421331 0.830132 -0.460619; -0.206251 0.141049 0.00462111 -0.00148258 0.0602939 -0.142865 0.869366 0.150034 -0.27876 -0.239752; -0.0758993 0.0475424 0.00132048 -0.000417397 0.0137146 -0.0220899 0.0681767 -0.979019 -0.139521 -0.0933196; -0.0102571 0.0102992 -0.999804 0.00109616 -0.00261405 0.0018718 -0.00365394 0.00159732 -0.00722008 -0.0100225; -0.329708 0.257944 0.012205 -0.00409467 0.631339 0.255856 -0.341946 0.0979419 -0.326916 -0.356576; -0.342867 -0.904996 -0.0026051 0.000766961 -0.0134062 0.0132434 -0.0291015 0.0160979 -0.100036 -0.227922; -0.301238 0.246865 0.0140333 -0.00485332 -0.771261 0.140168 -0.224373 0.0754304 -0.27557 -0.318796; 0.740897 -0.103606 -0.00125743 0.00037989 -0.00796532 0.008625 -0.0198235 0.0123095 -0.0979459 -0.65579])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
