>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (470.81640625 MB free)
Uptime: 4902.0 sec
Load Avg:  0.9130859375  1.41357421875  1.5302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     264019 s         70 s      32406 s     134337 s          6 s
#2  3501 MHz      93668 s         94 s      25382 s     358766 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.402833 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00772375; 0.0 0.269531 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.153561; 0.0 0.0 0.130761 0.0 0.0 0.0 0.0 0.0 0.0 0.663982; 0.0 0.0 0.0 0.154835 0.0 0.0 0.0 0.0 0.0 0.513186; 0.0 0.0 0.0 0.0 0.533269 0.0 0.0 0.0 0.0 0.492754; 0.0 0.0 0.0 0.0 0.0 0.69108 0.0 0.0 0.0 0.0657177; 0.0 0.0 0.0 0.0 0.0 0.0 0.13608 0.0 0.0 0.4198; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.857721 0.0 0.862043; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.388041 0.453413; 0.00772375 0.153561 0.663982 0.513186 0.492754 0.0657177 0.4198 0.862043 0.453413 0.791579]
(U,Lambda) = eig(full(A)) = ([-0.87049,0.134414,0.147968,0.263408,0.322936,0.402829,0.468455,0.673442,0.696898,2.11587],
[-0.00392695 -9.22979e-5 0.000332044 -0.00208344 0.0100676 0.999858 0.0115231 0.00385287 0.00200558 0.00329748; -0.0872034 -0.00364542 0.0138407 -0.94325 -0.299453 -0.000622096 0.0755761 0.0513207 0.0274369 0.060826; -0.429318 0.582959 -0.422774 0.188256 -0.359822 -0.00131789 0.192497 0.165162 0.0895552 0.24462; -0.324025 -0.080606 0.81882 0.177765 -0.317932 -0.00111746 0.1602 0.133578 0.0722905 0.191386; -0.227249 -0.0039627 0.0140122 -0.0686725 0.243978 0.00203994 -0.74431 0.474528 0.229945 0.227708; -0.027245 -0.000378673 0.00132577 -0.00577915 0.0185906 0.000123115 -0.0289001 -0.502958 0.862518 0.0337328; -0.27 -0.80844 -0.386885 0.123996 -0.233972 -0.000849844 0.123653 0.105456 0.0571579 0.155076; -0.322922 -0.00382281 0.0133075 -0.0545514 0.167872 0.00102334 -0.216807 -0.631468 -0.409295 0.501092; -0.233236 -0.00573422 0.0206932 -0.136821 0.725281 -0.0165575 0.552018 0.214455 0.112097 0.191917; 0.647389 0.00320757 -0.0109566 0.037609 -0.104143 -0.000540007 0.0979019 0.134989 0.0763583 0.731341])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
