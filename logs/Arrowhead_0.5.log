>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (600.29296875 MB free)
Uptime: 6428.0 sec
Load Avg:  1.01513671875  1.6796875  1.60986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     278245 s        102 s      35096 s     273192 s          5 s
#2  3499 MHz     198858 s         41 s      25060 s     401042 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.224607 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.727027; 0.0 0.803831 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.43326; 0.0 0.0 0.831325 0.0 0.0 0.0 0.0 0.0 0.0 0.854156; 0.0 0.0 0.0 0.789853 0.0 0.0 0.0 0.0 0.0 0.0416728; 0.0 0.0 0.0 0.0 0.231303 0.0 0.0 0.0 0.0 0.227033; 0.0 0.0 0.0 0.0 0.0 0.234653 0.0 0.0 0.0 0.653099; 0.0 0.0 0.0 0.0 0.0 0.0 0.19536 0.0 0.0 0.000313332; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.798775 0.0 0.38368; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.488175 0.819136; 0.727027 0.43326 0.854156 0.0416728 0.227033 0.653099 0.000313332 0.38368 0.819136 0.0528127]
(U,Lambda) = eig(full(A)) = ([-1.40018,0.19536,0.229351,0.231897,0.358632,0.645594,0.789892,0.800634,0.811907,1.98761],
[-0.335074 0.000225775 0.670782 0.216407 -0.526084 0.208068 -0.00120631 -0.00507966 -0.0164244 -0.265691; -0.147205 6.46709e-6 -0.0033012 -0.00164383 0.0943812 -0.329887 0.0291532 0.545409 -0.711799 -0.235808; -0.286633 1.21984e-5 -0.00621094 -0.0030921 0.175246 -0.554088 0.0193362 0.112011 0.583636 -0.475939; -0.0142491 6.36658e-7 -0.000325442 -0.000162071 0.00937225 -0.0348045 -0.998561 -0.0155564 -0.0250702 -0.0224163; -0.104206 5.73686e-5 -0.509037 0.829937 -0.172923 0.0660249 -0.000381218 -0.00160491 -0.00518809 -0.0832852; -0.299152 0.00015096 -0.539133 -0.514107 -0.510886 0.19148 -0.00110326 -0.00464413 -0.0150111 -0.240042; -0.000147056 -1.0 4.03498e-5 1.86093e-5 -0.000186116 8.38476e-5 -4.94317e-7 -2.08343e-6 -6.74275e-6 -0.000112638; -0.130659 5.77501e-6 -0.00294938 -0.0014687 0.0845408 -0.30178 0.040514 -0.830399 -0.387632 -0.207934; -0.324832 2.54076e-5 -0.0138532 -0.00693583 0.613244 0.626934 -0.00254643 -0.0105509 -0.0335713 -0.351972; 0.748837 -9.08238e-6 0.00437721 0.00216997 -0.096982 0.120483 -0.000937944 -0.00402464 -0.0132678 -0.644287])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
