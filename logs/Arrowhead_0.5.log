>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (510.515625 MB free)
Uptime: 5715.0 sec
Load Avg:  0.85546875  1.33154296875  1.484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     272244 s        102 s      34510 s     200306 s          5 s
#2  3498 MHz     113029 s         51 s      27906 s     415058 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.92214 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.473437; 0.0 0.561867 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.60637; 0.0 0.0 0.789481 0.0 0.0 0.0 0.0 0.0 0.0 0.868078; 0.0 0.0 0.0 0.128952 0.0 0.0 0.0 0.0 0.0 0.0304812; 0.0 0.0 0.0 0.0 0.895992 0.0 0.0 0.0 0.0 0.46688; 0.0 0.0 0.0 0.0 0.0 0.408204 0.0 0.0 0.0 0.769143; 0.0 0.0 0.0 0.0 0.0 0.0 0.414194 0.0 0.0 0.158819; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.152949 0.0 0.966427; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.468055 0.762002; 0.473437 0.60637 0.868078 0.0304812 0.46688 0.769143 0.158819 0.966427 0.762002 0.593384]
(U,Lambda) = eig(full(A)) = ([-1.39213,0.128973,0.2512,0.413918,0.437271,0.532306,0.68787,0.872909,0.912672,2.49023],
[-0.141581 0.000404454 0.0591025 0.00157914 -0.0260536 -0.0486304 0.177625 0.385338 -0.864646 -0.213931; -0.214768 0.000949133 0.163482 0.00694764 -0.129856 -0.821396 -0.422973 -0.0781149 0.0298879 -0.222808; -0.275383 0.000890536 0.135075 0.00391821 -0.0657638 -0.135162 0.750889 -0.416932 0.121844 -0.361659; -0.0138687 -0.999623 -0.0208843 -0.000181323 0.00263793 0.003026 -0.00479338 -0.00164172 0.000672505 -0.00914674; -0.141215 0.000412448 0.0606473 0.00164173 -0.0271573 -0.0514046 0.197171 0.810432 0.484005 -0.207507; -0.295672 0.00186644 0.41032 -0.228184 0.706055 0.24817 -0.241726 -0.0663201 0.0263631 -0.261759; -0.0608501 0.000377303 0.0816122 0.973269 0.183639 0.0538431 -0.0510061 -0.0138731 0.00550909 -0.054206; -0.432887 0.027313 -0.82387 -0.00627758 0.0906962 0.10201 -0.158795 -0.0537868 0.0219957 -0.292981; -0.283502 0.00152273 0.294315 0.0238598 -0.660466 0.474896 -0.304689 -0.0754178 0.0296343 -0.267004; 0.692077 -0.000677596 -0.0837581 -0.00169517 0.0266827 0.0400427 -0.0878937 -0.0400696 0.0172911 -0.708565])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
