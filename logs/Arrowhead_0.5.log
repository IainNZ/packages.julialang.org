>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (479.1640625 MB free)
Uptime: 5719.0 sec
Load Avg:  0.90478515625  1.57958984375  1.55029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     253502 s         65 s      37778 s     224709 s         11 s
#2  3500 MHz     174336 s         93 s      26624 s     345132 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.686093 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.676958; 0.0 0.478313 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.32112; 0.0 0.0 0.884759 0.0 0.0 0.0 0.0 0.0 0.0 0.377952; 0.0 0.0 0.0 0.629515 0.0 0.0 0.0 0.0 0.0 0.966368; 0.0 0.0 0.0 0.0 0.290327 0.0 0.0 0.0 0.0 0.111698; 0.0 0.0 0.0 0.0 0.0 0.791597 0.0 0.0 0.0 0.328366; 0.0 0.0 0.0 0.0 0.0 0.0 0.448358 0.0 0.0 0.532127; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.603608 0.0 0.505079; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.504017 0.0568686; 0.676958 0.32112 0.377952 0.966368 0.111698 0.328366 0.532127 0.505079 0.0568686 0.061799]
(U,Lambda) = eig(full(A)) = ([-1.19954,0.291924,0.464167,0.493637,0.504692,0.608723,0.669207,0.782162,0.868767,1.89464],
[-0.275817 0.0244783 0.0737609 0.133449 0.0432978 -0.0798481 -0.83972 -0.193406 0.149595 0.356246; -0.147038 0.0245555 0.548898 -0.795021 -0.141236 0.0224712 0.0352335 -0.029007 0.0331993 0.144197; -0.139314 0.00908667 0.0217294 0.0366613 0.0115377 -0.0124952 -0.0367255 0.101111 -0.954032 0.238023; -0.405913 0.0407993 0.141324 0.269821 0.0898235 -0.424149 0.509941 -0.17376 0.16305 0.485804; -0.0575991 -0.996926 -0.0155371 -0.0208435 -0.00604551 0.00320147 0.00617484 -0.00623334 0.00779506 0.0442802; -0.126699 0.00936645 0.0242501 0.0418104 0.0132789 -0.0163863 -0.0561949 0.955286 0.171768 0.189329; -0.248086 0.0484824 -0.813971 -0.445867 -0.109594 0.0302815 0.0504663 -0.0437541 0.0510947 0.233999; -0.215201 0.0230965 0.0875874 0.174247 0.0592431 0.900976 0.161264 -0.0776394 0.0768925 0.248814; -0.0256468 0.00382163 0.0345076 0.207857 -0.976785 0.00495645 0.00721056 -0.00561171 0.00629375 0.0260085; 0.768274 -0.0142529 -0.0241809 -0.0379388 -0.0116022 0.00912582 0.0209451 -0.027447 0.0403675 0.635994])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
