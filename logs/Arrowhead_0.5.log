>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (487.05078125 MB free)
Uptime: 5854.0 sec
Load Avg:  0.98681640625  1.6875  1.60888671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     247363 s         62 s      33461 s     253393 s          5 s
#2  3500 MHz     180149 s         82 s      24742 s     353983 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.703284 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.332147; 0.0 0.867653 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00619455; 0.0 0.0 0.911266 0.0 0.0 0.0 0.0 0.0 0.0 0.547587; 0.0 0.0 0.0 0.622411 0.0 0.0 0.0 0.0 0.0 0.706666; 0.0 0.0 0.0 0.0 0.162085 0.0 0.0 0.0 0.0 0.778127; 0.0 0.0 0.0 0.0 0.0 0.420056 0.0 0.0 0.0 0.210844; 0.0 0.0 0.0 0.0 0.0 0.0 0.133371 0.0 0.0 0.621234; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.300706 0.0 0.461983; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.234604 0.667891; 0.332147 0.00619455 0.547587 0.706666 0.778127 0.210844 0.621234 0.461983 0.667891 0.14998]
(U,Lambda) = eig(full(A)) = ([-1.36885,0.143059,0.2051,0.285042,0.410617,0.506765,0.690909,0.849852,0.86767,1.91526],
[-0.116208 -0.00775117 -0.0217008 0.0238227 0.0479359 0.20518 -0.925207 -0.227107 0.00538171 -0.182719; -0.00200799 -0.000111767 -0.000304316 0.000318948 0.000572484 0.00208376 -0.00120821 0.0348732 0.999379 -0.00394239; -0.174108 -0.00931911 -0.0252395 0.0262308 0.0461981 0.16434 -0.085665 0.893556 -0.0334547 -0.363639; -0.257281 -0.0192734 -0.0551174 0.0628343 0.14093 0.74181 0.355646 -0.311375 0.00767437 -0.36443; -0.368481 -0.534703 0.588791 -0.189838 -0.132243 -0.274059 0.0507244 -0.113383 0.00293734 -0.295919; -0.0854469 -0.00995145 -0.0319262 0.046846 0.943541 -0.295192 0.0268353 -0.0491629 0.00125462 -0.0940175; -0.299808 0.838295 0.281898 -0.122868 -0.0946439 -0.201975 0.0384112 -0.0868936 0.00225338 -0.232446; -0.200607 -0.0383124 -0.157281 0.884749 -0.177537 -0.272172 0.0408144 -0.0843094 0.00217032 -0.190775; -0.301975 -0.0953827 -0.736815 -0.397223 -0.160274 -0.297913 0.0504578 -0.108791 0.00281002 -0.264956; 0.724975 0.0130737 0.0325488 -0.0299977 -0.042238 -0.121397 0.0344729 -0.100216 0.0026635 -0.666724])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
