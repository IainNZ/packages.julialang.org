>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (497.5234375 MB free)
Uptime: 5862.0 sec
Load Avg:  0.87353515625  1.376953125  1.49169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     242862 s         62 s      34039 s     255016 s          8 s
#2  3503 MHz     135880 s         94 s      25966 s     405283 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.23.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.876044 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.891334; 0.0 0.49811 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.59108; 0.0 0.0 0.821939 0.0 0.0 0.0 0.0 0.0 0.0 0.392481; 0.0 0.0 0.0 0.783181 0.0 0.0 0.0 0.0 0.0 0.379101; 0.0 0.0 0.0 0.0 0.672362 0.0 0.0 0.0 0.0 0.899184; 0.0 0.0 0.0 0.0 0.0 0.0265563 0.0 0.0 0.0 0.676636; 0.0 0.0 0.0 0.0 0.0 0.0 0.144884 0.0 0.0 0.440993; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.649996 0.0 0.82932; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.115096 0.510423; 0.891334 0.59108 0.392481 0.379101 0.899184 0.676636 0.440993 0.82932 0.510423 0.490744]
(U,Lambda) = eig(full(A)) = ([-1.45953,0.0650069,0.131873,0.2377,0.526244,0.660091,0.763987,0.803988,0.839439,2.51011],
[-0.268826 0.0516462 -0.0259726 -0.169908 -0.109621 -0.0374182 -0.310479 0.382628 0.70439 -0.378336; -0.212685 0.0641347 -0.0349971 -0.276195 0.903835 0.0330813 0.0867758 -0.0597723 -0.0500931 -0.203763; -0.121179 0.0243669 -0.0123332 -0.081744 -0.0571016 -0.0219843 -0.264349 0.676295 -0.648757 -0.161254; -0.119071 0.0248064 -0.0126217 -0.0845674 -0.0634749 -0.0279211 -0.770903 -0.563573 -0.194929 -0.152261; -0.297103 0.0695736 -0.0360753 -0.251724 -0.26474 -0.664337 0.383061 -0.211304 -0.155681 -0.339367; -0.320727 -0.826972 0.139318 0.389946 0.0582546 0.00968245 0.0358151 -0.0269212 -0.0240787 -0.188968; -0.193615 0.259447 -0.734952 0.578142 0.0497473 0.00775978 0.0278036 -0.0206956 -0.0183666 -0.12932; -0.276924 0.0666213 -0.0347086 -0.24476 -0.288301 0.744708 0.283977 -0.16658 -0.126633 -0.309236; -0.228337 0.478881 0.659734 0.506584 0.0534079 0.00849058 0.0307037 -0.0229182 -0.020384 -0.147819; 0.704406 -0.0469936 0.0216844 0.121682 0.0430203 0.00906568 0.039033 -0.0309316 -0.0289271 -0.693597])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
