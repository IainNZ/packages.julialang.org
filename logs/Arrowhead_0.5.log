>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (494.37109375 MB free)
Uptime: 5912.0 sec
Load Avg:  1.09814453125  1.3515625  1.45068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     267886 s         91 s      36814 s     226106 s         10 s
#2  3500 MHz     121009 s         65 s      26205 s     426041 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.981846 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.50453; 0.0 0.516341 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.588687; 0.0 0.0 0.839071 0.0 0.0 0.0 0.0 0.0 0.0 0.150202; 0.0 0.0 0.0 0.254167 0.0 0.0 0.0 0.0 0.0 0.911597; 0.0 0.0 0.0 0.0 0.401867 0.0 0.0 0.0 0.0 0.696744; 0.0 0.0 0.0 0.0 0.0 0.575349 0.0 0.0 0.0 0.446029; 0.0 0.0 0.0 0.0 0.0 0.0 0.513613 0.0 0.0 0.773749; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.389553 0.0 0.819421; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.443911 0.575103; 0.50453 0.588687 0.150202 0.911597 0.696744 0.446029 0.773749 0.819421 0.575103 0.809081]
(U,Lambda) = eig(full(A)) = ([-1.32101,0.297501,0.396366,0.430715,0.477376,0.515366,0.568502,0.835769,0.944346,2.57987],
[-0.14695 -0.0299481 -0.00491243 0.0165718 -0.0289766 -0.00144609 0.0179174 -0.0752633 0.95729 -0.232332; -0.214902 -0.109273 -0.0279714 0.124455 -0.437721 -0.80703 -0.165669 0.0401595 -0.0978657 -0.209932; -0.0466397 -0.0112662 -0.00193412 0.0066585 -0.0120318 -0.000620397 0.00814888 -0.991514 -0.101519 -0.063494; -0.38817 0.854529 0.0365449 -0.0934716 0.118328 0.00466631 -0.0425706 0.0341549 -0.0939801 -0.288439; -0.271249 -0.271189 -0.722094 -0.43722 0.267344 0.00820772 -0.0613771 0.0349911 -0.0913871 -0.235407; -0.157758 -0.0652099 -0.0142061 0.0558254 -0.131903 -0.00994217 0.956265 0.0373219 -0.0860072 -0.163741; -0.28288 -0.145438 -0.0376201 0.168963 -0.618639 0.590186 -0.206927 0.0523371 -0.127816 -0.275563; -0.321304 -0.361603 0.685587 -0.360373 0.270331 0.0087081 -0.0672167 0.0400164 -0.105092 -0.275299; -0.218559 -0.159564 -0.0689557 0.788944 0.497907 0.010761 -0.0677575 0.031981 -0.0817697 -0.198133; 0.670732 0.0406215 0.00570061 -0.0181025 0.0289731 0.00133703 -0.0146791 0.021791 -0.0711532 -0.735876])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
