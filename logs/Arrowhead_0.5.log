>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (459.734375 MB free)
Uptime: 5417.0 sec
Load Avg:  1.00439453125  1.3828125  1.4755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     256088 s         99 s      31938 s     184763 s          4 s
#2  3501 MHz      97159 s         62 s      25736 s     400924 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.10.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.612822 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.230078; 0.0 0.405862 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.856914; 0.0 0.0 0.7503 0.0 0.0 0.0 0.0 0.0 0.0 0.684948; 0.0 0.0 0.0 0.982989 0.0 0.0 0.0 0.0 0.0 0.866463; 0.0 0.0 0.0 0.0 0.898452 0.0 0.0 0.0 0.0 0.334945; 0.0 0.0 0.0 0.0 0.0 0.554076 0.0 0.0 0.0 0.962672; 0.0 0.0 0.0 0.0 0.0 0.0 0.903395 0.0 0.0 0.773355; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.997171 0.0 0.755434; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.133847 0.900173; 0.230078 0.856914 0.684948 0.866463 0.334945 0.962672 0.773355 0.755434 0.900173 0.787504]
(U,Lambda) = eig(full(A)) = ([-1.54909,0.216458,0.461222,0.608819,0.67146,0.808857,0.899205,0.938978,0.991563,2.97894],
[-0.0732462 -0.0467699 0.0786921 -0.947969 -0.278317 0.0699497 0.00166688 -0.0210641 -0.00360072 0.0692613; -0.301682 -0.364531 -0.802596 0.0696478 -0.228851 0.12673 0.00360382 -0.0479964 -0.00867194 0.237211; -0.205018 -0.103378 0.122857 -0.0798606 0.616246 0.697139 0.00954387 -0.1084 -0.0168276 0.218912; -0.235516 -0.0910762 0.0861052 -0.0381992 0.197285 -0.296562 -0.0214565 0.587869 -0.599028 0.309208; -0.0941869 -0.0395711 0.039721 -0.0190766 0.104666 -0.222811 0.923315 -0.246791 -0.021322 0.114673; -0.31503 -0.229741 0.53757 0.290084 -0.581714 0.225192 0.00578725 -0.0746828 -0.0130427 0.282776; -0.21703 -0.0907083 0.0906866 -0.0433068 0.236513 -0.48755 -0.382912 -0.648973 -0.0519904 0.265398; -0.204193 -0.0779633 0.0730852 -0.0320882 0.164515 -0.239088 -0.015999 0.387631 0.798369 0.271516; -0.368134 0.877954 -0.142573 0.0312632 -0.118768 0.0794803 0.00244026 -0.0333851 -0.00622068 0.225362; 0.68825 0.0805721 -0.0518509 0.0164958 -0.070932 0.0595997 0.00207479 -0.0298602 -0.00592727 0.712281])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
