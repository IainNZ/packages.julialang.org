>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.10546875 MB free)
Uptime: 5729.0 sec
Load Avg:  0.8955078125  1.412109375  1.48974609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     249749 s         56 s      33777 s     228877 s          7 s
#2  3500 MHz     129476 s         91 s      26346 s     399425 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.716574 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.425551; 0.0 0.0424286 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.516074; 0.0 0.0 0.238053 0.0 0.0 0.0 0.0 0.0 0.0 0.447382; 0.0 0.0 0.0 0.0592891 0.0 0.0 0.0 0.0 0.0 0.671544; 0.0 0.0 0.0 0.0 0.775049 0.0 0.0 0.0 0.0 0.0628128; 0.0 0.0 0.0 0.0 0.0 0.284511 0.0 0.0 0.0 0.132952; 0.0 0.0 0.0 0.0 0.0 0.0 0.566588 0.0 0.0 0.580015; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0959394 0.0 0.754449; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.637072 0.319277; 0.425551 0.516074 0.447382 0.671544 0.0628128 0.132952 0.580015 0.754449 0.319277 0.981451]
(U,Lambda) = eig(full(A)) = ([-0.915736,0.0475894,0.0774701,0.213813,0.282644,0.467681,0.623043,0.691925,0.774552,2.13397],
[-0.157269 -0.00546536 0.0116598 -0.0413947 -0.0135906 0.231546 -0.17831 -0.910719 -0.0579962 -0.234568; -0.324914 0.859171 -0.257895 0.147264 0.0297729 -0.164348 0.0348343 0.0419149 -0.00556978 -0.192777; -0.233909 -0.0201814 0.0487856 -0.902631 0.13904 -0.263846 0.0455419 0.0519968 -0.006589 -0.18436; -0.415484 -0.493157 -0.646799 0.212536 0.0416666 -0.222687 0.0466839 0.0559955 -0.00741855 -0.25289; -0.0224107 -0.000741862 0.00157676 -0.0054734 -0.0017678 0.027675 -0.0161945 -0.0398615 0.997768 -0.036113; -0.0668219 -0.0048214 0.0112447 -0.0919691 -0.986698 -0.0982964 0.0153914 0.0172144 -0.00214374 -0.056164; -0.236044 -0.00960191 0.0207653 -0.0804076 -0.0283085 0.794172 0.40264 0.244113 -0.0220374 -0.289117; -0.449867 -0.134066 0.715304 0.313017 0.0559996 -0.274845 0.056094 0.066777 -0.00878453 -0.28922; -0.124035 -0.00465351 0.00999081 -0.0368906 -0.0124838 0.255256 -0.891873 0.307046 -0.0183502 -0.166642; 0.603247 0.00859179 -0.017511 0.0489051 0.0138583 -0.135425 0.0391906 0.0527512 -0.00790151 -0.781286])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
