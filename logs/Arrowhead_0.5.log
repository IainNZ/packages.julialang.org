>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (465.44921875 MB free)
Uptime: 5818.0 sec
Load Avg:  0.9169921875  1.658203125  1.6376953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     308026 s         92 s      35668 s     169846 s          9 s
#2  3499 MHz     120959 s         58 s      26139 s     417490 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.230554 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.777441; 0.0 0.617444 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.53315; 0.0 0.0 0.252832 0.0 0.0 0.0 0.0 0.0 0.0 0.755504; 0.0 0.0 0.0 0.142078 0.0 0.0 0.0 0.0 0.0 0.0272482; 0.0 0.0 0.0 0.0 0.27678 0.0 0.0 0.0 0.0 0.446965; 0.0 0.0 0.0 0.0 0.0 0.292079 0.0 0.0 0.0 0.0542536; 0.0 0.0 0.0 0.0 0.0 0.0 0.720202 0.0 0.0 0.582507; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.375186 0.0 0.380599; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.717183 0.247469; 0.777441 0.53315 0.755504 0.0272482 0.446965 0.0542536 0.582507 0.380599 0.247469 0.91876]
(U,Lambda) = eig(full(A)) = ([-0.872272,0.142129,0.241204,0.271995,0.291994,0.361519,0.540872,0.674763,0.717664,2.17323],
[-0.447531 0.01637 0.740326 0.181704 -0.0197927 -0.198326 -0.274413 0.101889 0.00283299 0.304848; -0.2272 0.00208845 -0.0143716 -0.0149485 0.00256245 0.069599 0.762653 0.5415 0.00944276 0.261045; -0.426291 0.0127067 -0.658966 0.381852 -0.030176 -0.232234 -0.287295 0.104242 0.002885 0.299683; -0.0170535 -0.999755 0.00278786 0.00203144 -0.000284303 -0.00414847 -0.00748401 0.00297794 8.40297e-5 0.0102191; -0.246943 0.00618045 -0.127421 -0.904822 -0.0459538 -0.176221 -0.18538 0.0653818 0.00179951 0.179535; -0.0295806 0.000673656 -0.0108155 -0.026165 0.998259 -0.0261028 -0.0238855 0.00825345 0.00022628 0.0219696; -0.232215 0.00187618 -0.0123336 -0.012588 0.00212783 0.0542571 0.35579 -0.746308 -0.407422 0.305382; -0.193688 0.00304061 -0.0288098 -0.0357238 0.00715605 0.930343 -0.251609 0.0739617 0.0019726 0.161244; -0.0988404 0.00080125 -0.00527295 -0.00538406 0.000910392 0.0232459 0.15374 -0.339621 0.913177 0.129468; 0.634837 -0.0018619 0.0101419 0.00968574 -0.00156419 -0.0334093 -0.109533 0.0582167 0.00177503 0.761757])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
