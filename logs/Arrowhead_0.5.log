>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.18359375 MB free)
Uptime: 4734.0 sec
Load Avg:  1.09521484375  1.44189453125  1.53466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     251820 s         83 s      31484 s     136258 s          8 s
#2  3500 MHz      95880 s         76 s      25320 s     338717 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.12168 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.927025; 0.0 0.807846 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.402716; 0.0 0.0 0.369864 0.0 0.0 0.0 0.0 0.0 0.0 0.849965; 0.0 0.0 0.0 0.836589 0.0 0.0 0.0 0.0 0.0 0.725046; 0.0 0.0 0.0 0.0 0.943786 0.0 0.0 0.0 0.0 0.611598; 0.0 0.0 0.0 0.0 0.0 0.903023 0.0 0.0 0.0 0.633153; 0.0 0.0 0.0 0.0 0.0 0.0 0.0507307 0.0 0.0 0.650293; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0905601 0.0 0.168772; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.364107 0.272962; 0.927025 0.402716 0.849965 0.725046 0.611598 0.633153 0.650293 0.168772 0.272962 0.108858]
(U,Lambda) = eig(full(A)) = ([-1.63094,0.0696742,0.0917893,0.248691,0.364652,0.604126,0.813752,0.873832,0.928722,2.23274],
[-0.386738 0.449364 0.218885 -0.65348 -0.00724215 -0.296481 -0.017683 0.0395839 0.0237764 -0.288375; -0.120737 0.013753 0.00396922 0.0644836 0.0017248 0.305015 -0.900221 0.19601 0.068962 -0.185602; -0.310606 0.0713772 0.0215721 0.628024 0.309517 -0.559827 -0.0252781 0.0541666 0.0314812 -0.299629; -0.214841 0.0238327 0.00687035 0.11042 0.00291618 0.481246 0.41911 0.62525 0.162893 -0.341036; -0.17368 0.0176382 0.00506619 0.078778 0.00200456 0.277829 0.0620904 -0.280796 -0.840419 -0.311598; -0.182693 0.019153 0.00550828 0.0866349 0.00223234 0.326846 0.093629 -0.696618 0.509969 -0.312692; -0.282736 -0.86537 -0.111778 -0.294113 -0.00393207 -0.181313 -0.0112509 0.025374 0.015331 -0.195713; -0.0716813 0.203705 -0.968974 -0.0955578 -0.00116879 -0.0507058 -0.00308078 0.00692022 0.00416796 -0.0517381; -0.100037 0.0233707 0.00707425 0.211748 -0.950845 -0.175473 -0.00801398 0.0171988 0.0100069 -0.095928; 0.731161 -0.0252089 -0.00705754 -0.0895329 -0.00189816 -0.154296 -0.0132013 0.0321169 0.0206991 -0.656701])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
