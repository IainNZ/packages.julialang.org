>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (496.9765625 MB free)
Uptime: 5863.0 sec
Load Avg:  0.96923828125  1.32568359375  1.4404296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     251419 s         81 s      31805 s     248359 s          9 s
#2  3500 MHz     133353 s         71 s      27722 s     410656 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.1
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.563292 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0807024; 0.0 0.814234 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.188533; 0.0 0.0 0.931103 0.0 0.0 0.0 0.0 0.0 0.0 0.605083; 0.0 0.0 0.0 0.860463 0.0 0.0 0.0 0.0 0.0 0.980198; 0.0 0.0 0.0 0.0 0.28797 0.0 0.0 0.0 0.0 0.00715962; 0.0 0.0 0.0 0.0 0.0 0.528616 0.0 0.0 0.0 0.843201; 0.0 0.0 0.0 0.0 0.0 0.0 0.54687 0.0 0.0 0.500065; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.528616 0.0 0.40184; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.183165 0.690182; 0.0807024 0.188533 0.605083 0.980198 0.00715962 0.843201 0.500065 0.40184 0.690182 0.907497]
(U,Lambda) = eig(full(A)) = ([-0.980811,0.26516,0.287999,0.528616,0.54266,0.56312,0.700195,0.816015,0.914311,2.51456],
[-0.0349286 -0.0283144 0.00118687 9.64514e-8 0.0287074 -0.996173 0.0619969 0.00294703 0.00567195 -0.030127; -0.0701914 -0.0359159 0.00145051 2.73561e-8 0.00509503 -0.00159238 -0.173872 0.977158 0.0464763 -0.0807686; -0.211503 -0.0950401 0.0038093 6.23039e-8 0.0114323 -0.00348753 -0.275596 -0.0485208 -0.888982 -0.278352; -0.355767 -0.172228 0.00693229 1.22413e-7 0.0226361 -0.00699176 -0.643226 -0.203518 0.449078 -0.431657; -0.00377115 -0.0328319 -0.999449 -1.233e-9 -0.000206312 5.51888e-5 0.00182664 0.00012513 0.000282004 -0.00234227; -0.373327 -0.334775 0.0141878 -0.43021 -0.440633 0.0518307 0.516848 0.0270763 0.0539341 -0.309279; -0.218758 -0.185675 0.00782085 1.13532e-6 0.87178 0.0652676 0.343012 0.0171468 0.0335749 -0.185121; -0.177915 -0.159542 0.00676143 0.902729 -0.209992 0.0247008 0.246312 0.0129036 0.0257031 -0.147392; -0.396269 0.88045 -0.0266546 -8.27998e-8 -0.0140902 0.00385267 0.140393 0.0100648 0.0232882 -0.215642; 0.668299 0.104599 -0.00404866 -4.14431e-8 -0.00733915 0.00212095 0.105171 0.00922874 0.0246704 -0.728427])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
