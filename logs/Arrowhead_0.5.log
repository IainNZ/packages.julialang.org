>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (599.52734375 MB free)
Uptime: 6264.0 sec
Load Avg:  0.88720703125  1.7001953125  1.603515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     306922 s         49 s      35378 s     215771 s          8 s
#2  3500 MHz     155992 s        118 s      25264 s     428142 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.28.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.877039 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.52048; 0.0 0.0737679 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.141695; 0.0 0.0 0.0457433 0.0 0.0 0.0 0.0 0.0 0.0 0.267012; 0.0 0.0 0.0 0.768066 0.0 0.0 0.0 0.0 0.0 0.160708; 0.0 0.0 0.0 0.0 0.038387 0.0 0.0 0.0 0.0 0.241118; 0.0 0.0 0.0 0.0 0.0 0.132982 0.0 0.0 0.0 0.126969; 0.0 0.0 0.0 0.0 0.0 0.0 0.614259 0.0 0.0 0.333635; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.361321 0.0 0.109066; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.412444 0.205432; 0.52048 0.141695 0.267012 0.160708 0.241118 0.126969 0.333635 0.109066 0.205432 0.168346]
(U,Lambda) = eig(full(A)) = ([-0.50421,0.0415501,0.0688692,0.120719,0.216086,0.368422,0.450122,0.679325,0.779149,1.27232],
[-0.277339 0.00626447 -0.019982 -0.0581072 -0.230325 0.0630481 0.194746 0.423496 0.340143 -0.72751; -0.180436 0.0442261 -0.897444 0.254826 0.291207 -0.0296278 -0.0601401 -0.0376426 -0.0128506 -0.0653191; -0.357343 0.640327 0.358237 0.300708 0.458475 -0.0509823 -0.105475 -0.0677969 -0.0232907 -0.120276; -0.0929685 0.0022244 -0.0071314 -0.020962 -0.085157 0.0247755 0.0807411 0.291336 -0.927682 -0.176088; -0.327063 -0.766556 0.245426 0.247284 0.396874 -0.045012 -0.0935448 -0.0605195 -0.0208231 -0.107965; -0.146659 0.0139644 -0.0614457 -0.874234 0.446872 -0.0332258 -0.063952 -0.0373864 -0.0125704 -0.0615728; -0.219547 0.00585812 -0.0189802 -0.0570796 -0.245079 0.0836148 0.324694 -0.824889 -0.129441 -0.280122; -0.092744 0.00342982 -0.011571 -0.0382755 -0.219646 -0.946232 -0.196189 -0.0551743 -0.0166988 -0.0661476; -0.164946 0.00556978 -0.0185516 -0.05946 -0.306002 0.28751 -0.870942 -0.123832 -0.0358382 -0.132; 0.736003 -0.0100559 0.0310268 0.0844368 0.292487 -0.061611 -0.159738 -0.160872 -0.0639727 -0.552515])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
