>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (658.45703125 MB free)
Uptime: 5497.0 sec
Load Avg:  1.0029296875  1.64453125  1.51171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     277021 s         55 s      31048 s     178091 s          3 s
#2  3501 MHz     133824 s         90 s      22849 s     378148 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.393761 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.359511; 0.0 0.223486 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.990771; 0.0 0.0 0.953231 0.0 0.0 0.0 0.0 0.0 0.0 0.85796; 0.0 0.0 0.0 0.853789 0.0 0.0 0.0 0.0 0.0 0.547609; 0.0 0.0 0.0 0.0 0.277953 0.0 0.0 0.0 0.0 0.959116; 0.0 0.0 0.0 0.0 0.0 0.300991 0.0 0.0 0.0 0.655545; 0.0 0.0 0.0 0.0 0.0 0.0 0.00501 0.0 0.0 0.548532; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.775395 0.0 0.0485542; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.957192 0.58268; 0.359511 0.990771 0.85796 0.547609 0.959116 0.655545 0.548532 0.0485542 0.58268 0.739738]
(U,Lambda) = eig(full(A)) = ([-1.4636,0.0309612,0.248016,0.294588,0.386621,0.700073,0.775902,0.882036,0.955963,2.66998],
[-0.130397 0.0444084 -0.0464 -0.0306136 0.96607 0.175135 0.00976837 -0.0303293 -0.00112475 -0.113816; -0.395628 0.230624 0.759785 0.117678 -0.116535 0.310209 0.0186226 -0.0619724 -0.00237911 -0.291832; -0.23915 0.0416897 -0.0228847 -0.0110006 0.0290544 -0.505708 -0.0502366 0.496399 -0.552457 -0.360133; -0.159192 0.0298251 -0.0170044 -0.00826992 0.0224919 -0.531591 -0.0730032 -0.798554 -0.0094268 -0.217276; -0.371009 0.174024 -0.602643 0.486915 -0.169355 0.339046 0.0199995 -0.0654015 -0.00248811 -0.28894; -0.25027 0.108795 -0.232773 -0.864613 -0.146894 0.245111 0.0143325 -0.0464735 -0.00176041 -0.199408; -0.251621 -0.947249 0.0424606 0.0159969 -0.027581 0.117761 0.00738825 -0.0257634 -0.00101456 -0.148324; -0.0146091 0.00292294 -0.00173183 -0.000852813 0.00239639 -0.0961897 0.994899 -0.018755 -0.000472958 -0.0184678; -0.162152 0.0281923 -0.0154553 -0.00742632 0.0195952 -0.338158 -0.0333725 0.319359 0.833476 -0.245148; 0.673674 -0.0448146 0.0188105 0.00844498 -0.019188 0.149219 0.0103832 -0.0411921 -0.00175887 -0.720616])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
