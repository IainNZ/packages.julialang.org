>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (475.82421875 MB free)
Uptime: 6049.0 sec
Load Avg:  0.98388671875  1.69775390625  1.6298828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     258123 s         72 s      34424 s     252576 s          9 s
#2  3500 MHz     175574 s        104 s      26943 s     383486 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.329877 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0728117; 0.0 0.516402 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.764945; 0.0 0.0 0.529031 0.0 0.0 0.0 0.0 0.0 0.0 0.195566; 0.0 0.0 0.0 0.544735 0.0 0.0 0.0 0.0 0.0 0.334756; 0.0 0.0 0.0 0.0 0.31622 0.0 0.0 0.0 0.0 0.0779374; 0.0 0.0 0.0 0.0 0.0 0.944 0.0 0.0 0.0 0.632837; 0.0 0.0 0.0 0.0 0.0 0.0 0.322843 0.0 0.0 0.863548; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.20318 0.0 0.0723642; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.750551 0.155542; 0.0728117 0.764945 0.195566 0.334756 0.0779374 0.632837 0.863548 0.0723642 0.155542 0.582179]
(U,Lambda) = eig(full(A)) = ([-0.846629,0.203769,0.316272,0.329825,0.418867,0.528191,0.540934,0.742487,0.838914,1.96639],
[-0.0428524 0.00469356 -0.00352608 0.996185 -0.0653748 0.00151306 0.00363243 -0.00879728 -0.0201206 0.0311986; -0.388591 0.0198901 -0.00251831 0.0028877 0.626637 0.267404 0.328321 -0.168673 -0.333637 0.36993; -0.0984352 0.00488769 -0.000605617 0.000691468 0.141841 -0.959776 0.172993 -0.0456743 -0.0887737 0.0954074; -0.166593 0.00798106 -0.000965396 0.00109712 0.212502 -0.0833889 -0.927396 -0.0843906 -0.160068 0.165116; -0.0464077 0.00563412 0.996234 -0.00403481 -0.0606669 0.00151523 0.00365185 -0.0091149 -0.0209743 0.0331185; -0.244711 0.00694972 -0.000664221 0.000725738 0.0962879 -0.00627201 -0.0165315 0.156559 0.847102 0.434039; -0.511287 0.058954 -0.0865821 -0.0871101 -0.718552 0.0173302 0.0416913 -0.102587 -0.235378 0.368433; -0.0477289 -0.997932 0.000421585 -0.000402453 -0.0268071 0.00091756 0.0022559 -0.00668922 -0.0160117 0.0287789; -0.0674314 0.00231247 -0.000235978 0.000260393 0.037469 -0.0028827 -0.007813 0.96157 -0.24761 0.0897069; 0.692417 -0.0081291 0.000658859 -0.000704336 -0.0799005 0.00412106 0.0105292 -0.0498526 -0.140666 0.701218])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
