>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.359375 MB free)
Uptime: 4853.0 sec
Load Avg:  1.033203125  1.4443359375  1.548828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     234976 s         57 s      31740 s     162484 s          9 s
#2  3499 MHz     102430 s        106 s      24997 s     340525 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.141799 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.268343; 0.0 0.87529 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.598781; 0.0 0.0 0.885172 0.0 0.0 0.0 0.0 0.0 0.0 0.319616; 0.0 0.0 0.0 0.751561 0.0 0.0 0.0 0.0 0.0 0.0933989; 0.0 0.0 0.0 0.0 0.330966 0.0 0.0 0.0 0.0 0.402621; 0.0 0.0 0.0 0.0 0.0 0.402649 0.0 0.0 0.0 0.126707; 0.0 0.0 0.0 0.0 0.0 0.0 0.422103 0.0 0.0 0.413637; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.484472 0.0 0.24971; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.778022 0.443286; 0.268343 0.598781 0.319616 0.0933989 0.402621 0.126707 0.413637 0.24971 0.443286 0.0977644]
(U,Lambda) = eig(full(A)) = ([-0.756507,0.166069,0.362632,0.404298,0.46617,0.565695,0.752376,0.809504,0.883056,1.5165],
[-0.23173 0.954494 -0.0801812 -0.0126925 0.0482769 -0.11182 0.00378726 0.0230028 0.002134 -0.115197; -0.284655 -0.0728858 0.0770702 0.0157848 -0.0854099 0.341636 -0.0419798 -0.520966 0.454523 -0.551091; -0.151028 -0.0383702 0.0403604 0.00825243 -0.0445147 0.176717 -0.0207404 -0.241764 -0.89032 -0.298765; -0.0480439 -0.0137714 0.015846 0.0033394 -0.0190982 0.0887631 0.98756 0.0922604 0.00418703 -0.0720562; -0.287207 -0.210786 -0.838966 -0.0681683 0.173779 -0.302983 0.00823315 0.0481565 0.00429892 -0.200419; -0.0847959 -0.0462359 0.208931 -0.953829 0.116405 -0.137271 0.00312209 0.0178252 0.00155476 -0.0671321; -0.272249 -0.13947 0.458949 0.288457 0.547762 -0.508836 0.0107925 0.061113 0.00528976 -0.22305; -0.156095 -0.0677043 0.135236 0.0386713 -0.79621 -0.543061 0.00803217 0.043973 0.0036931 -0.142792; -0.224092 -0.062535 0.0704165 0.0147271 -0.082952 0.368781 -0.148949 0.80593 0.0248787 -0.354244; 0.775741 0.086329 -0.0659852 -0.0124161 0.0583568 -0.17664 0.00861738 0.0572368 0.00589486 -0.590146])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
