>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (544.5703125 MB free)
Uptime: 6470.0 sec
Load Avg:  1.04931640625  1.47705078125  1.55419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     282737 s         51 s      32673 s     269368 s         11 s
#2  3500 MHz     189598 s        126 s      26700 s     402238 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.444796 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.79631; 0.0 0.744141 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.884712; 0.0 0.0 0.670476 0.0 0.0 0.0 0.0 0.0 0.0 0.26597; 0.0 0.0 0.0 0.350202 0.0 0.0 0.0 0.0 0.0 0.0528765; 0.0 0.0 0.0 0.0 0.922757 0.0 0.0 0.0 0.0 0.290101; 0.0 0.0 0.0 0.0 0.0 0.502768 0.0 0.0 0.0 0.388306; 0.0 0.0 0.0 0.0 0.0 0.0 0.00992167 0.0 0.0 0.763295; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0100764 0.0 0.0963321; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.479507 0.511027; 0.79631 0.884712 0.26597 0.0528765 0.290101 0.388306 0.763295 0.0963321 0.511027 0.972814]
(U,Lambda) = eig(full(A)) = ([-0.945058,0.010074,0.152281,0.350489,0.467614,0.496795,0.620887,0.680984,0.912236,2.36116],
[-0.361993 -4.58098e-5 0.410421 -0.0457952 0.616661 -0.209302 -0.399456 -0.114754 -0.0603776 0.312987; -0.330909 -3.01408e-5 0.225361 -0.0121891 -0.056535 0.0488859 0.634053 0.476787 -0.186538 0.412106; -0.104017 -1.00719e-5 0.0773811 -0.00450797 -0.0231678 0.0209299 0.473774 -0.861496 -0.0389913 0.118493; -0.0257925 -3.88785e-6 0.0402779 0.998446 0.00795794 -0.00492988 -0.0172553 -0.00544081 -0.00333442 0.0198053; -0.0981301 -7.94908e-6 0.0567657 -0.00274935 -0.011263 0.00930817 0.0848893 0.0408398 0.977229 0.151911; -0.169451 -1.97099e-5 0.167031 -0.0138297 -0.195188 0.888467 -0.290389 -0.0741601 -0.0336104 0.157383; -0.504993 0.125297 -0.808356 0.0121554 0.0294694 -0.0214271 -0.110357 -0.0387143 -0.0299816 0.244522; -0.0637227 -0.992119 -0.10213 0.00153478 0.00372046 -0.00270508 -0.0139312 -0.0048871 -0.00378449 0.0308621; -0.226646 -2.72244e-5 0.235446 -0.0214819 -0.759284 -0.404015 -0.319287 -0.0863299 -0.041855 0.204563; 0.631811 2.50085e-5 -0.150763 0.00542352 0.0176706 -0.0136674 -0.0883333 -0.0340363 -0.0354421 0.753219])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
