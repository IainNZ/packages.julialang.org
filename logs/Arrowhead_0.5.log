>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (499.4921875 MB free)
Uptime: 6613.0 sec
Load Avg:  1.45263671875  1.52294921875  1.6650390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     277338 s         70 s      36958 s     279477 s         47 s
#2  3499 MHz     209915 s         94 s      28667 s     384771 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.391042 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.316927; 0.0 0.210755 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.389569; 0.0 0.0 0.559161 0.0 0.0 0.0 0.0 0.0 0.0 0.556448; 0.0 0.0 0.0 0.270332 0.0 0.0 0.0 0.0 0.0 0.607088; 0.0 0.0 0.0 0.0 0.011244 0.0 0.0 0.0 0.0 0.0948347; 0.0 0.0 0.0 0.0 0.0 0.565965 0.0 0.0 0.0 0.395352; 0.0 0.0 0.0 0.0 0.0 0.0 0.321881 0.0 0.0 0.128193; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.950462 0.0 0.287555; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.265362 0.326124; 0.316927 0.389569 0.556448 0.607088 0.0948347 0.395352 0.128193 0.287555 0.326124 0.0672078]
(U,Lambda) = eig(full(A)) = ([-0.922592,0.0135908,0.222786,0.266473,0.319583,0.363569,0.454481,0.563727,0.902757,1.42904],
[-0.181508 0.0206855 -0.0526289 0.00763594 -0.0767086 0.785514 0.54345 -0.00855184 -0.0941445 -0.191335; -0.258601 0.0486769 0.904772 -0.0209848 0.0619128 -0.173585 0.173878 -0.0051428 -0.0855738 -0.200386; -0.282526 0.0251271 -0.0462206 0.005706 -0.0401712 0.193716 -0.578263 -0.56794 -0.246174 -0.400865; -0.382868 0.0582538 -0.356756 0.472154 0.213191 -0.443357 0.358627 -0.00964172 -0.145917 -0.328329; -0.0764023 -0.99553 0.0125258 -0.00111519 0.00531955 -0.018328 0.0232752 -0.000799841 -0.0161698 -0.0419165; -0.199815 0.0176327 -0.0321883 0.00396197 -0.0277532 0.133007 -0.385777 0.822912 -0.178438 -0.287057; -0.0774975 0.010244 -0.0361448 0.00694387 -0.965006 -0.209383 0.105167 -0.0024699 -0.0335462 -0.072558; -0.1155 0.00756151 -0.0110412 0.00126178 -0.00788337 0.0333621 -0.0630695 0.00346467 0.916263 -0.376531; -0.206535 0.0319113 -0.214018 -0.881172 0.104028 -0.226116 0.18759 -0.00509319 -0.0777746 -0.175623; 0.752333 -0.0246359 0.0279406 -0.00300132 0.0172957 -0.0680913 0.108784 -0.00465967 -0.152007 -0.626659])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
