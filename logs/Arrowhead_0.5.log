>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (582.8671875 MB free)
Uptime: 6324.0 sec
Load Avg:  1.0078125  1.67626953125  1.5791015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     306100 s         71 s      32795 s     223216 s          7 s
#2  3500 MHz     149230 s         77 s      26298 s     435353 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.28.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.00477266 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0649928; 0.0 0.996854 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.36557; 0.0 0.0 0.318869 0.0 0.0 0.0 0.0 0.0 0.0 0.0879991; 0.0 0.0 0.0 0.589676 0.0 0.0 0.0 0.0 0.0 0.510345; 0.0 0.0 0.0 0.0 0.424239 0.0 0.0 0.0 0.0 0.0733619; 0.0 0.0 0.0 0.0 0.0 0.730747 0.0 0.0 0.0 0.809772; 0.0 0.0 0.0 0.0 0.0 0.0 0.0249791 0.0 0.0 0.229649; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.967115 0.0 0.858368; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0928229 0.667156; 0.0649928 0.36557 0.0879991 0.510345 0.0733619 0.809772 0.229649 0.858368 0.667156 0.143869]
(U,Lambda) = eig(full(A)) = ([-1.16682,0.00519955,0.0306779,0.23342,0.322686,0.425565,0.622151,0.843502,0.992643,1.98492],
[-0.0415417 0.995781 -0.0599783 0.0499985 0.00870224 -0.00277931 -0.0059533 0.00733997 0.000706143 -0.0205826; -0.126524 -0.00241115 0.00904547 -0.0842282 -0.0230822 0.0115147 0.055173 -0.225804 -0.931816 -0.232015; -0.0443553 -0.00183493 0.00729985 -0.181146 0.981489 -0.0148413 -0.0164088 0.0158882 0.00140182 -0.0331224; -0.217577 -0.00571099 0.0218258 -0.251976 -0.0813659 0.0559583 -0.888729 0.190449 0.0135932 -0.229375; -0.0345287 -0.00114506 0.0044563 -0.0676249 -0.0307503 -0.995833 -0.0209626 0.0165743 0.00138529 -0.0294774; -0.319567 -0.00729981 0.0276528 -0.286404 -0.0844718 0.0477467 0.421688 0.680264 0.0331864 -0.40489; -0.144297 -0.0759386 -0.963372 0.193794 0.0328359 -0.0103159 -0.0217475 0.0265757 0.00254722 -0.0734773; -0.301223 -0.00583649 0.0219135 -0.205786 -0.0566987 0.0285216 0.140716 -0.657751 0.360892 -0.528861; -0.396621 -0.0497992 0.256648 0.834659 0.123547 -0.0360794 -0.0712766 0.084183 0.00795791 -0.221114; 0.748851 0.00654056 -0.0239065 0.175897 0.0425671 -0.0179945 -0.0565515 0.0947221 0.0107332 -0.627093])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
