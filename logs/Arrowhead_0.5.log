>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (478.859375 MB free)
Uptime: 6020.0 sec
Load Avg:  1.01123046875  1.71630859375  1.59619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     273016 s         61 s      32180 s     230785 s          3 s
#2  3500 MHz     122740 s        108 s      22897 s     441924 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.31.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.650468 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.150584; 0.0 0.926142 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.377029; 0.0 0.0 0.996015 0.0 0.0 0.0 0.0 0.0 0.0 0.948104; 0.0 0.0 0.0 0.722307 0.0 0.0 0.0 0.0 0.0 0.333932; 0.0 0.0 0.0 0.0 0.491412 0.0 0.0 0.0 0.0 0.266805; 0.0 0.0 0.0 0.0 0.0 0.936997 0.0 0.0 0.0 0.82851; 0.0 0.0 0.0 0.0 0.0 0.0 0.723241 0.0 0.0 0.875312; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.479871 0.0 0.83577; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.257573 0.0460795; 0.150584 0.377029 0.948104 0.333932 0.266805 0.82851 0.875312 0.83577 0.0460795 0.142714]
(U,Lambda) = eig(full(A)) = ([-1.4129,0.25784,0.490218,0.556831,0.652098,0.722425,0.812266,0.927855,0.966902,2.35321],
[-0.0556748 -0.00222177 0.00395378 0.119743 0.987385 0.000692751 -0.0656383 0.00227666 -0.010824 -0.056405; -0.122968 -0.00326816 0.00363912 0.0760152 -0.0147114 -0.000612664 0.233505 0.922862 -0.210394 -0.168507; -0.300255 -0.00744043 0.00788699 0.160741 -0.0294783 -0.00114718 0.363902 -0.0583358 0.740725 -0.445555; -0.119309 -0.0041649 0.00605389 0.150259 -0.050859 0.93485 -0.261798 0.00681319 -0.0310529 -0.130592; -0.106884 -0.00661721 0.940232 -0.303674 0.0177547 0.000382323 -0.058646 0.00256373 -0.0127627 -0.0914006; -0.268971 -0.00706691 0.00780256 0.162272 -0.0310962 -0.0012782 0.468465 -0.380083 -0.630156 -0.373128; -0.3126 -0.0108952 0.015805 0.391652 -0.131562 -0.355036 -0.693435 0.0179405 -0.0817089 -0.342509; -0.336857 -0.021806 -0.339863 -0.808611 0.0518899 0.00114065 -0.177331 0.00782403 -0.0390321 -0.28455; -0.0210438 0.999595 -0.000833386 -0.0114652 0.00124891 3.28146e-5 -0.00585879 0.000288308 -0.00147758 -0.0140242; 0.762881 0.00579297 -0.00420758 -0.0744591 0.010693 0.000331035 -0.0705266 0.00419379 -0.0227453 -0.637804])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
