>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (581.7265625 MB free)
Uptime: 6581.0 sec
Load Avg:  1.037109375  1.6884765625  1.58447265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     287344 s         50 s      33982 s     276371 s          3 s
#2  3500 MHz     183179 s         92 s      25447 s     428964 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.802516 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.566697; 0.0 0.124308 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0291879; 0.0 0.0 0.11176 0.0 0.0 0.0 0.0 0.0 0.0 0.538052; 0.0 0.0 0.0 0.245774 0.0 0.0 0.0 0.0 0.0 0.739329; 0.0 0.0 0.0 0.0 0.107537 0.0 0.0 0.0 0.0 0.0190266; 0.0 0.0 0.0 0.0 0.0 0.535038 0.0 0.0 0.0 0.601079; 0.0 0.0 0.0 0.0 0.0 0.0 0.909579 0.0 0.0 0.483586; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.143299 0.0 0.232203; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.17333 0.402355; 0.566697 0.0291879 0.538052 0.739329 0.0190266 0.601079 0.483586 0.232203 0.402355 0.399308]
(U,Lambda) = eig(full(A)) = ([-1.01075,0.107542,0.124232,0.131632,0.150938,0.194256,0.427947,0.695181,0.874264,1.85721],
[-0.218537 0.000199049 -0.00215493 0.0235626 -0.0224412 -0.0366954 0.198074 0.729482 -0.493323 -0.367541; -0.0179813 0.000424963 -0.992926 -0.111167 0.0282802 0.0164353 -0.0125851 -0.0070643 -0.00243083 -0.0115215; -0.335174 0.0311341 0.111275 -0.755294 0.354359 0.256888 -0.222788 -0.127423 -0.0440726 -0.210862; -0.411438 0.00130559 -0.0156894 0.180681 -0.201154 -0.565235 -0.531331 -0.227302 -0.0734727 -0.313838; -0.0118972 -0.999512 0.0029395 -0.0220273 0.0113115 0.00864167 -0.00777436 -0.00447355 -0.00154991 -0.00743848; -0.271906 0.000343223 -0.00377389 0.0415633 -0.0403784 -0.0694713 0.734829 -0.518597 -0.11067 -0.310975; -0.17609 0.000147183 -0.00158821 0.0173398 -0.0164475 -0.026627 0.131452 0.311644 0.855252 -0.349073; -0.140695 0.00158521 -0.0314116 0.555187 0.784221 0.179478 -0.106799 -0.0581335 -0.0198407 -0.0926744; -0.23761 0.00149292 -0.0211368 0.269161 -0.463645 0.757316 -0.206887 -0.106529 -0.0358525 -0.163448; 0.699256 -0.000244105 0.00257926 -0.0278947 0.0258025 0.0393868 -0.130921 -0.138168 -0.0624578 -0.684038])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
