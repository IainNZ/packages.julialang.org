>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (475.69921875 MB free)
Uptime: 4965.0 sec
Load Avg:  1.0029296875  1.5478515625  1.50634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     260205 s         64 s      20690 s     161464 s         10 s
#2  3500 MHz      77662 s        100 s      11644 s     397973 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.31.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.733455 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0114014; 0.0 0.454301 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.28717; 0.0 0.0 0.445073 0.0 0.0 0.0 0.0 0.0 0.0 0.0272944; 0.0 0.0 0.0 0.688115 0.0 0.0 0.0 0.0 0.0 0.87537; 0.0 0.0 0.0 0.0 0.52991 0.0 0.0 0.0 0.0 0.682147; 0.0 0.0 0.0 0.0 0.0 0.783721 0.0 0.0 0.0 0.387692; 0.0 0.0 0.0 0.0 0.0 0.0 0.966413 0.0 0.0 0.792348; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.262512 0.0 0.515038; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.126888 0.0343397; 0.0114014 0.28717 0.0272944 0.87537 0.682147 0.387692 0.792348 0.515038 0.0343397 0.570691]
(U,Lambda) = eig(full(A)) = ([-0.927012,0.127112,0.309012,0.445115,0.462163,0.585245,0.733446,0.767203,0.879499,2.1793],
[-0.00489005 -0.000122508 0.00223345 -6.09483e-5 0.00109817 -0.00495615 -0.999852 -0.0127652 0.00694412 -0.00541575; -0.148058 -0.00571826 0.16434 -0.048187 -0.954395 0.141291 0.000825499 -0.0346774 0.0600747 -0.114333; -0.014167 -0.000559273 0.0166793 0.998731 -0.041732 0.0125451 7.59498e-5 -0.00320154 0.00558858 -0.0108091; -0.385986 -0.010166 0.191987 -0.00555257 0.101234 -0.548234 0.0154957 -0.418217 0.406847 -0.403166; -0.333448 -0.0110335 0.256758 -0.0123999 0.263111 0.794214 0.00268934 -0.10862 0.173566 -0.284039; -0.161395 -0.00384684 0.0679042 -0.00176482 0.0315048 -0.125847 -0.00618781 0.886801 0.360053 -0.19079; -0.298026 -0.00615067 0.100213 -0.00234282 0.0410601 -0.133926 -0.00272917 0.150287 -0.810914 -0.448662; -0.308356 -0.0247825 -0.92093 0.00434752 -0.067409 0.102816 0.000877583 -0.0385595 0.074252 -0.184539; -0.0232051 0.999516 -0.0156772 0.00016633 -0.00267637 0.00482676 4.5429e-5 -0.00202638 0.00405855 -0.0114909; 0.712174 0.00651515 -0.0831454 0.00154138 -0.0261306 0.0644263 0.000802432 -0.0377848 0.0889498 -0.686787])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
