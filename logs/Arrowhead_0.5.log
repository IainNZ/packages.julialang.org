>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (577.5625 MB free)
Uptime: 6156.0 sec
Load Avg:  1.06591796875  1.66796875  1.58984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     337453 s         65 s      36363 s     160205 s          8 s
#2  3500 MHz     113111 s         82 s      26076 s     460828 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.28.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.441879 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.695388; 0.0 0.26009 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.357281; 0.0 0.0 0.0828143 0.0 0.0 0.0 0.0 0.0 0.0 0.412454; 0.0 0.0 0.0 0.614877 0.0 0.0 0.0 0.0 0.0 0.0171544; 0.0 0.0 0.0 0.0 0.474145 0.0 0.0 0.0 0.0 0.516679; 0.0 0.0 0.0 0.0 0.0 0.289783 0.0 0.0 0.0 0.638897; 0.0 0.0 0.0 0.0 0.0 0.0 0.941436 0.0 0.0 0.524156; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.83867 0.0 0.288872; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.733802 0.925088; 0.695388 0.357281 0.412454 0.0171544 0.516679 0.638897 0.524156 0.288872 0.925088 0.548928]
(U,Lambda) = eig(full(A)) = ([-1.10494,0.108416,0.26583,0.344385,0.462533,0.595586,0.615035,0.829776,0.908849,2.20096],
[-0.314062 0.122967 0.0581219 -0.468429 0.60031 0.464133 0.0367855 -0.0522283 0.0846005 -0.276423; -0.18285 0.138902 -0.915913 0.278358 0.031467 0.109253 0.0092201 -0.0182713 0.0312868 -0.12872; -0.242592 -0.949993 -0.0331614 0.103558 0.0193669 0.0825204 0.00709856 -0.0160869 0.0283669 -0.136161; -0.00696821 0.00199728 0.000723167 -0.00416502 -0.00200769 -0.0912319 0.995755 -0.00232561 0.00331516 -0.00756282; -0.228583 0.083305 0.0364961 -0.261501 -0.793301 0.436481 0.0335915 -0.0423269 0.0675247 -0.209223; -0.320015 0.207722 0.392487 0.76845 0.0659417 0.214338 0.0179928 -0.0344697 0.0586312 -0.233756; -0.178938 0.0371035 0.011416 -0.0576559 -0.0195146 -0.155483 -0.0147094 0.136759 -0.913781 -0.290997; -0.10383 0.0233261 0.00742025 -0.0383816 -0.0136932 -0.121916 -0.0118318 0.946195 0.23385 -0.148276; -0.351472 0.0872258 0.0290877 -0.156014 -0.0608037 -0.686653 -0.0713466 -0.280817 0.300237 -0.4409; 0.698598 -0.0589671 -0.0147145 0.0656743 0.0178298 0.102591 0.00915981 -0.0291337 0.0568113 -0.69925])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
