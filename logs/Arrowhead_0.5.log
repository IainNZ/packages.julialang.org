>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (526.73046875 MB free)
Uptime: 4535.0 sec
Load Avg:  0.939453125  1.34716796875  1.41064453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     200103 s         51 s      18570 s     193942 s          7 s
#2  3499 MHz      83544 s        101 s      11888 s     352451 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.315865 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0760089; 0.0 0.16703 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.252046; 0.0 0.0 0.315354 0.0 0.0 0.0 0.0 0.0 0.0 0.680932; 0.0 0.0 0.0 0.616563 0.0 0.0 0.0 0.0 0.0 0.533879; 0.0 0.0 0.0 0.0 0.199285 0.0 0.0 0.0 0.0 0.16788; 0.0 0.0 0.0 0.0 0.0 0.385861 0.0 0.0 0.0 0.0655123; 0.0 0.0 0.0 0.0 0.0 0.0 0.536105 0.0 0.0 0.706363; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0350278 0.0 0.675225; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.869241 0.171064; 0.0760089 0.252046 0.680932 0.533879 0.16788 0.0655123 0.706363 0.675225 0.171064 0.846552]
(U,Lambda) = eig(full(A)) = ([-0.803925,0.121359,0.183771,0.211945,0.315859,0.38488,0.428226,0.592354,0.862316,1.9901],
[-0.0425027 0.0366126 -0.0288353 0.0442273 0.993821 -0.0162686 -0.069143 0.0107528 -0.00557226 -0.0345503; -0.162543 0.517049 0.754492 -0.339327 -0.000139364 -0.0170902 -0.0986306 0.023179 -0.0145222 -0.105215; -0.380938 0.328861 -0.259327 0.398172 -0.110996 -0.144672 -0.616618 0.096152 -0.0498728 -0.309427; -0.235339 0.101009 -0.0618171 0.0797856 0.000146104 0.0340387 0.289738 -0.86258 -0.0870284 -0.295805; -0.104784 0.201844 -0.542276 -0.801841 -0.00011851 -0.0133616 -0.0749501 0.0167057 -0.0101434 -0.0713429; -0.034478 0.0232056 -0.0162451 0.0227776 7.70136e-5 0.985575 -0.158059 0.0124095 -0.00550831 -0.0310783; -0.330067 0.159568 -0.100466 0.131764 0.000263924 0.0689967 0.669252 0.491188 -0.0867454 -0.369716; -0.503964 -0.732795 0.227487 -0.230783 -0.000197861 -0.0285095 -0.175523 0.0473885 -0.0326971 -0.262838; -0.0640192 0.0214302 -0.0125059 0.0157371 2.54386e-5 0.00521693 0.0396465 -0.0241652 0.989629 -0.116148; 0.626166 -0.0936915 0.0501123 -0.0604681 -8.22921e-5 -0.0147715 -0.102211 0.0391141 -0.0400606 -0.761033])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
