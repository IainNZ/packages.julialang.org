>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (504.59375 MB free)
Uptime: 5135.0 sec
Load Avg:  1.01123046875  1.39794921875  1.484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     231509 s         56 s      34576 s     183255 s          6 s
#2  3499 MHz     126900 s         90 s      27101 s     348157 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.447259 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.423148; 0.0 0.564065 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.164586; 0.0 0.0 0.284445 0.0 0.0 0.0 0.0 0.0 0.0 0.444483; 0.0 0.0 0.0 0.379715 0.0 0.0 0.0 0.0 0.0 0.322194; 0.0 0.0 0.0 0.0 0.821077 0.0 0.0 0.0 0.0 0.916127; 0.0 0.0 0.0 0.0 0.0 0.757319 0.0 0.0 0.0 0.423336; 0.0 0.0 0.0 0.0 0.0 0.0 0.562312 0.0 0.0 0.65123; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.357358 0.0 0.316556; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.824183 0.594464; 0.423148 0.164586 0.444483 0.322194 0.916127 0.423336 0.65123 0.316556 0.594464 0.63684]
(U,Lambda) = eig(full(A)) = ([-0.916204,0.306819,0.365578,0.398914,0.476126,0.563959,0.639772,0.767161,0.823272,2.20918],
[-0.218248 -0.138134 -0.113614 0.409304 0.829401 0.00226494 -0.189534 -0.0278046 -0.00145292 -0.168047; -0.0781908 -0.0293323 -0.0181856 0.0466041 -0.105899 -0.969007 -0.187462 -0.0170346 -0.000819782 -0.0700039; -0.26034 0.910756 0.12015 -0.181584 0.131205 0.000993307 -0.107865 -0.0193554 -0.00106502 -0.161588; -0.17484 -0.202636 -0.499831 -0.784779 0.189087 0.00109233 -0.106832 -0.0174802 -0.000937819 -0.12323; -0.370841 -0.0816724 -0.0441096 0.101481 -0.150271 -0.00222564 0.435712 0.357171 -0.538791 -0.461805; -0.177892 -0.0430815 -0.0237002 0.055236 -0.0851838 -0.00136757 0.310548 -0.904153 -0.00828704 -0.204026; -0.309749 -0.116857 -0.0725972 0.18638 -0.42754 0.246996 -0.724955 -0.0668252 -0.00322189 -0.276694; -0.174796 -0.28716 0.844646 -0.356231 0.150808 0.000957086 -0.0966538 -0.0162374 -0.000877195 -0.119612; -0.240205 -0.052678 -0.0284283 0.0653691 -0.0966386 -0.00142695 0.277966 0.219139 0.842388 -0.300332; 0.703237 0.0458458 0.0219313 -0.0467639 0.0565815 0.000624643 -0.0862292 -0.0210203 -0.00129108 -0.699719])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
