>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (467.41796875 MB free)
Uptime: 5813.0 sec
Load Avg:  0.8388671875  1.3427734375  1.46875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     264088 s         77 s      32869 s     224530 s         12 s
#2  3500 MHz     119225 s         73 s      27862 s     421177 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.777806 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.187052; 0.0 0.0864318 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.754737; 0.0 0.0 0.51163 0.0 0.0 0.0 0.0 0.0 0.0 0.898745; 0.0 0.0 0.0 0.907066 0.0 0.0 0.0 0.0 0.0 0.0354392; 0.0 0.0 0.0 0.0 0.193209 0.0 0.0 0.0 0.0 0.477149; 0.0 0.0 0.0 0.0 0.0 0.755352 0.0 0.0 0.0 0.508995; 0.0 0.0 0.0 0.0 0.0 0.0 0.590803 0.0 0.0 0.697046; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.950884 0.0 0.564785; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.167595 0.908441; 0.187052 0.754737 0.898745 0.0354392 0.477149 0.508995 0.697046 0.564785 0.908441 0.716948]
(U,Lambda) = eig(full(A)) = ([-1.34275,0.113185,0.187827,0.352761,0.562963,0.723769,0.775958,0.904985,0.910121,2.4689],
[-0.0590754 0.00841134 -0.00317941 -0.0476464 0.0281916 -0.190775 0.969648 0.0678976 -0.0752486 0.0804965; -0.353673 -0.84313 0.0746445 0.306817 -0.051284 0.0652647 -0.0104851 0.0425654 -0.0487729 0.230542; -0.324587 0.067413 -0.0278339 -0.612487 -0.56692 0.233491 -0.0325702 0.105478 -0.120051 0.33417; -0.0105495 0.00133415 -0.000494118 -0.00692208 0.00333483 -0.0106556 0.00258929 -0.786314 -0.61737 0.0165132; -0.20805 0.178201 -0.889024 0.323784 -0.0417849 0.0495647 -0.0078433 0.0309471 -0.0354271 0.152589; -0.162473 0.0236887 -0.0089939 -0.136883 0.0856663 -0.888178 -0.236623 0.157035 -0.175056 0.216172; -0.241434 0.0436171 -0.0173461 -0.317037 0.810725 0.288917 -0.0360622 0.102421 -0.116194 0.2701; -0.164912 0.0201498 -0.00742243 -0.102234 0.047143 -0.137053 0.0309282 -0.568058 0.737514 0.270762; -0.402823 0.498996 0.450269 0.531174 -0.0743999 0.0900198 -0.0143041 0.0568732 -0.0651225 0.287279; 0.669718 -0.0298866 0.0100281 0.108268 -0.03238 0.0551127 -0.00957913 0.0461645 -0.0532288 0.727749])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
