>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (467.078125 MB free)
Uptime: 6201.0 sec
Load Avg:  1.119140625  1.68212890625  1.6005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     254010 s         68 s      31867 s     281716 s          9 s
#2  3500 MHz     176822 s         90 s      24318 s     387168 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.126777 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.102994; 0.0 0.603107 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.915848; 0.0 0.0 0.810604 0.0 0.0 0.0 0.0 0.0 0.0 0.728813; 0.0 0.0 0.0 0.763171 0.0 0.0 0.0 0.0 0.0 0.398086; 0.0 0.0 0.0 0.0 0.510274 0.0 0.0 0.0 0.0 0.262612; 0.0 0.0 0.0 0.0 0.0 0.528861 0.0 0.0 0.0 0.0631406; 0.0 0.0 0.0 0.0 0.0 0.0 0.683854 0.0 0.0 0.507489; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.559105 0.0 0.286835; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.293491 0.62942; 0.102994 0.915848 0.728813 0.398086 0.262612 0.0631406 0.507489 0.286835 0.62942 0.0674343]
(U,Lambda) = eig(full(A)) = ([-1.22432,0.128515,0.352128,0.515101,0.529158,0.56263,0.660896,0.734516,0.780206,1.90785],
[-0.0581561 0.996799 0.0385777 -0.00471983 0.00119795 0.0027849 -0.006844 -0.00807136 -0.00458695 -0.0368337; -0.382342 -0.0324587 -0.308013 0.18519 -0.0579637 -0.266655 -0.562491 -0.331932 -0.150493 -0.447108; -0.273235 -0.0179722 -0.134178 0.0438895 -0.0121195 -0.0346374 0.172784 0.45619 0.697696 -0.423084; -0.152806 -0.0105503 -0.0817471 0.0285568 -0.00796159 -0.0233942 0.138146 0.661636 -0.680084 -0.221517; -0.115501 -0.0115705 -0.140165 -0.96803 0.065082 0.0591127 -0.0618814 -0.0557759 -0.0283118 -0.119689; -0.0274758 -0.00265277 -0.030156 0.081656 0.994872 0.0220361 -0.0169729 -0.0146225 -0.00731052 -0.029165; -0.202898 -0.0153708 -0.129131 0.0535161 -0.0153537 -0.0493374 0.784564 -0.477081 -0.153276 -0.264096; -0.1227 -0.0112046 -0.116975 0.115997 -0.0448276 0.959077 -0.100014 -0.0778801 -0.037753 -0.135462; -0.316367 -0.0641723 0.906044 -0.0505426 0.0124998 0.0275613 -0.0608037 -0.0679716 -0.0376335 -0.248344; 0.762902 0.0168201 0.0844079 -0.0177954 0.00468018 0.0117852 -0.0354923 -0.0476267 -0.029101 -0.636962])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
