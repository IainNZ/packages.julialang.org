>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.03515625 MB free)
Uptime: 6239.0 sec
Load Avg:  0.92724609375  1.63525390625  1.59716796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     299190 s         49 s      32826 s     222435 s          8 s
#2  3499 MHz     123005 s         96 s      25690 s     458450 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0903051 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.535634; 0.0 0.165033 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.931626; 0.0 0.0 0.85348 0.0 0.0 0.0 0.0 0.0 0.0 0.66722; 0.0 0.0 0.0 0.956074 0.0 0.0 0.0 0.0 0.0 0.913191; 0.0 0.0 0.0 0.0 0.225333 0.0 0.0 0.0 0.0 0.0664444; 0.0 0.0 0.0 0.0 0.0 0.95257 0.0 0.0 0.0 0.927766; 0.0 0.0 0.0 0.0 0.0 0.0 0.389842 0.0 0.0 0.717203; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.531462 0.0 0.137261; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.794989 0.841781; 0.535634 0.931626 0.66722 0.913191 0.0664444 0.927766 0.717203 0.137261 0.841781 0.303604]
(U,Lambda) = eig(full(A)) = ([-1.68714,0.10485,0.224857,0.27798,0.497699,0.540237,0.823157,0.884564,0.954369,2.64212],
[-0.218913 0.91831 -0.0283401 0.252388 -0.137797 -0.068571 -0.0189833 0.0224342 -0.000833533 -0.140448; -0.365393 -0.386022 -0.110864 0.729415 -0.293509 -0.143019 -0.0367667 0.0430721 -0.00158701 -0.25165; -0.190779 -0.0222252 0.00755614 -0.102525 0.196551 0.12269 0.571498 0.71405 -0.00889251 -0.249599; -0.250975 -0.0267523 0.00889072 -0.119091 0.208799 0.126491 0.178443 -0.424817 0.720272 -0.3624; -0.0252385 -0.0137523 0.992753 0.111607 -0.0255678 -0.0121535 -0.00288672 0.00335293 -0.000122549 -0.0183957; -0.255319 -0.0272916 0.0090761 -0.12162 0.213766 0.129601 0.186199 -0.453831 -0.693593 -0.367421; -0.250847 -0.0627557 0.030947 -0.566982 -0.696913 -0.27468 -0.0429891 0.0482263 -0.00170827 -0.213067; -0.0449436 -0.00802338 0.00318705 -0.0478859 0.426083 -0.90103 -0.0122219 0.0129316 -0.000436418 -0.0435136; -0.246363 -0.0304162 0.010511 -0.143982 0.296761 0.190327 -0.776199 0.31262 -0.00710176 -0.304928; 0.726441 0.0249369 -0.00711904 0.0884316 -0.104806 -0.0575996 -0.0259729 0.0332663 -0.00134462 -0.669108])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
