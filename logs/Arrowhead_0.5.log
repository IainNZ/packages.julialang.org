>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.3359375 MB free)
Uptime: 5859.0 sec
Load Avg:  0.91650390625  1.38232421875  1.51171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     282366 s         46 s      37448 s     201680 s          9 s
#2  3499 MHz     101274 s         91 s      27995 s     442486 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.253617 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.751901; 0.0 0.543575 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0718065; 0.0 0.0 0.637398 0.0 0.0 0.0 0.0 0.0 0.0 0.537983; 0.0 0.0 0.0 0.673923 0.0 0.0 0.0 0.0 0.0 0.103772; 0.0 0.0 0.0 0.0 0.556628 0.0 0.0 0.0 0.0 0.606719; 0.0 0.0 0.0 0.0 0.0 0.620653 0.0 0.0 0.0 0.834878; 0.0 0.0 0.0 0.0 0.0 0.0 0.723312 0.0 0.0 0.479966; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.703597 0.0 0.868676; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.593517 0.814331; 0.751901 0.0718065 0.537983 0.103772 0.606719 0.834878 0.479966 0.868676 0.814331 0.92216]
(U,Lambda) = eig(full(A)) = ([-1.15954,0.315977,0.543665,0.564939,0.6055,0.633029,0.672257,0.677941,0.719832,2.65478],
[-0.35704 0.903105 -0.00322533 0.0299837 -0.0236021 0.0138772 0.0244921 -0.0359017 -0.010857 0.230776; -0.0282922 -0.0236308 -0.997945 0.0417271 -0.0128082 0.00562104 0.00760945 -0.0108275 -0.00274254 0.025066; -0.200901 -0.125365 0.00714098 -0.0921746 0.186289 -0.862292 0.210455 -0.268846 -0.0439336 0.196531; -0.0379799 -0.0217143 0.000991195 -0.011821 0.016752 -0.0177697 -0.849637 -0.523205 -0.0152165 0.0386081; -0.237232 -0.188835 0.0582313 0.906282 -0.137125 0.0556083 0.0715529 -0.101329 -0.025026 0.213109; -0.314704 -0.205243 0.0134922 -0.186036 0.608572 0.472364 0.220619 -0.295262 -0.0566679 0.30248; -0.171057 -0.0882555 0.0033241 -0.037624 0.0449996 -0.0372271 -0.128198 0.214332 0.928548 0.183136; -0.312867 -0.167855 0.00675779 -0.0777763 0.0978109 -0.0861991 -0.377976 0.685991 -0.360202 0.328104; -0.31171 -0.219765 0.0203238 -0.353764 -0.750611 0.144317 0.141029 -0.195427 -0.043399 0.291151; 0.671038 0.0749001 -0.00124418 0.0124146 -0.0110455 0.00700249 0.0136366 -0.0202606 -0.00673186 0.736973])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
