>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (436.98828125 MB free)
Uptime: 5872.0 sec
Load Avg:  0.98291015625  1.40625  1.50439453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     257590 s         72 s      32847 s     227774 s         11 s
#2  3500 MHz     113124 s         68 s      28046 s     428827 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.10.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.582577 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.349051; 0.0 0.51889 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.719963; 0.0 0.0 0.504074 0.0 0.0 0.0 0.0 0.0 0.0 0.176051; 0.0 0.0 0.0 0.727377 0.0 0.0 0.0 0.0 0.0 0.0256754; 0.0 0.0 0.0 0.0 0.829792 0.0 0.0 0.0 0.0 0.46928; 0.0 0.0 0.0 0.0 0.0 0.618618 0.0 0.0 0.0 0.265543; 0.0 0.0 0.0 0.0 0.0 0.0 0.259784 0.0 0.0 0.0180011; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.342053 0.0 0.184298; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.027854 0.495327; 0.349051 0.719963 0.176051 0.0256754 0.46928 0.265543 0.0180011 0.184298 0.495327 0.735438]
(U,Lambda) = eig(full(A)) = ([-0.55798,0.157105,0.259948,0.351982,0.504871,0.569376,0.611404,0.727105,0.770063,1.75258],
[-0.193899 0.173259 -0.00986749 0.0784698 -0.0198017 -0.860309 -0.305396 0.0255044 -0.209571 0.218558; -0.423595 0.420278 -0.0253588 0.223612 -0.226386 0.463983 -0.196284 0.0365155 -0.322663 0.427533; -0.105026 0.107158 -0.00657728 0.0600062 0.973727 0.0877148 -0.0413713 0.00833588 -0.0745051 0.103303; -0.0126561 0.00950853 -0.000500983 0.00354563 -0.00050868 -0.00528715 0.00558404 -0.997375 -0.0677076 0.0183474; -0.214249 0.147331 -0.00751097 0.0509143 -0.0063668 -0.0586308 0.0541985 -0.0482605 0.884419 0.372559; -0.142992 0.121514 -0.00675243 0.0516272 -0.0102911 -0.175454 0.92851 0.0258484 -0.197374 0.171554; -0.0139469 0.0370251 0.999116 -0.0101215 0.000323779 0.00189179 -0.00129125 0.000406783 -0.00397104 0.00883417; -0.129738 0.210451 -0.0204727 -0.962239 0.00498985 0.0263779 -0.0172578 0.00505452 -0.0484707 0.0957208; -0.5357 -0.809345 0.0194647 -0.0792208 0.00457748 0.0297604 -0.0214091 0.00748061 -0.0751237 0.210396; 0.633585 -0.211192 0.00912053 -0.0518398 0.00440827 0.0325359 -0.0252223 0.0105603 -0.112567 0.732599])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
