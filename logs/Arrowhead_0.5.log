>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (596.87890625 MB free)
Uptime: 6713.0 sec
Load Avg:  0.97412109375  1.68359375  1.60693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     290517 s         59 s      34607 s     278400 s         10 s
#2  3499 MHz     173555 s         88 s      26602 s     449471 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.760021 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.601627; 0.0 0.209865 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.472769; 0.0 0.0 0.859674 0.0 0.0 0.0 0.0 0.0 0.0 0.778489; 0.0 0.0 0.0 0.0738784 0.0 0.0 0.0 0.0 0.0 0.0936674; 0.0 0.0 0.0 0.0 0.834249 0.0 0.0 0.0 0.0 0.574974; 0.0 0.0 0.0 0.0 0.0 0.0505308 0.0 0.0 0.0 0.376665; 0.0 0.0 0.0 0.0 0.0 0.0 0.62802 0.0 0.0 0.866542; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.45407 0.0 0.682553; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.56335 0.079169; 0.601627 0.472769 0.778489 0.0936674 0.574974 0.376665 0.866542 0.682553 0.079169 0.377095]
(U,Lambda) = eig(full(A)) = ([-1.2205,0.0693826,0.0811903,0.249388,0.50407,0.56388,0.701509,0.792993,0.844732,2.22411],
[-0.220333 0.029818 -0.0482215 0.0908015 -0.147291 -0.0203938 0.59565 -0.691061 0.0933038 0.277152; -0.239737 0.115194 -0.199908 -0.921886 0.100694 0.00887909 -0.0557076 -0.0307052 0.0097831 0.158305; -0.271447 0.0337184 -0.05441 0.0983093 -0.13718 -0.0174986 0.28514 0.442158 -0.684496 0.38482; -0.052488 0.713153 0.697003 -0.0411304 0.0136437 0.00127096 -0.00864571 -0.00493306 0.00159635 0.0293807; -0.202965 0.0257315 -0.0415427 0.0757654 -0.10912 -0.0141394 0.250936 0.527825 0.720521 0.27902; -0.214947 -0.683919 0.668445 -0.145979 0.052041 0.00487846 -0.0335201 -0.0192135 0.00623067 0.116879; -0.340015 0.0530959 -0.0862209 0.176379 -0.438074 -0.089825 -0.683104 -0.198932 0.0525312 0.366177; -0.295641 0.0607338 -0.0995962 0.257 0.855399 0.0413271 -0.159803 -0.0762713 0.0229533 0.260083; -0.0321906 0.00548603 -0.00893386 0.0194336 -0.0836854 0.994562 -0.0331967 -0.0130566 0.00369632 0.0321519; 0.725324 -0.0342296 0.0544096 -0.0770682 0.0626621 0.00664876 -0.0579316 -0.0378727 0.0131374 0.674463])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
