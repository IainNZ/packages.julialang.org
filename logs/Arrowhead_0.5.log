>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (471.23828125 MB free)
Uptime: 5160.0 sec
Load Avg:  1.025390625  1.48095703125  1.5703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     235224 s         86 s      30596 s     201686 s          6 s
#2  3500 MHz     127709 s         78 s      26331 s     344982 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.372245 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.559043; 0.0 0.253461 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.596556; 0.0 0.0 0.783018 0.0 0.0 0.0 0.0 0.0 0.0 0.949584; 0.0 0.0 0.0 0.608692 0.0 0.0 0.0 0.0 0.0 0.529345; 0.0 0.0 0.0 0.0 0.86265 0.0 0.0 0.0 0.0 0.27062; 0.0 0.0 0.0 0.0 0.0 0.464338 0.0 0.0 0.0 0.998524; 0.0 0.0 0.0 0.0 0.0 0.0 0.854914 0.0 0.0 0.406514; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.068099 0.0 0.47252; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.101694 0.98496; 0.559043 0.596556 0.949584 0.529345 0.27062 0.998524 0.406514 0.47252 0.98496 0.481198]
(U,Lambda) = eig(full(A)) = ([-1.62823,0.0734625,0.188458,0.300294,0.397218,0.57647,0.69185,0.845013,0.861012,2.54476],
[-0.194811 -0.0197186 0.189914 -0.450851 -0.808157 0.13854 0.128164 0.0253673 0.00640568 0.181397; -0.221007 -0.0349277 0.572988 0.739132 -0.149812 0.0934705 0.0997069 0.0216339 0.00549909 0.183535; -0.274533 -0.0141037 0.099716 -0.114145 0.0888575 -0.232675 -0.763173 0.328594 0.0681863 0.379962; -0.164964 -0.0104228 0.0786457 -0.099598 0.090366 -0.831428 0.466411 0.0480523 0.0117492 0.192738; -0.0757373 -0.00361382 0.0250613 -0.0279236 0.0209907 -0.0478584 -0.116093 -0.329147 -0.924897 0.113411; -0.332645 -0.0269219 0.225978 -0.3532 0.537067 0.450679 0.321579 0.0562706 0.0140977 0.338342; -0.114124 -0.00548226 0.038083 -0.0425308 0.0320643 -0.0738882 -0.182663 -0.880717 0.37338 0.169581; -0.194183 0.928449 -0.245116 0.118084 -0.0518312 0.0470411 0.0555064 0.0130474 0.00333746 0.134494; -0.396912 -0.367679 -0.708777 0.287782 -0.120323 0.104995 0.122289 0.0284263 0.00726469 0.284205; 0.697111 0.0105387 -0.0624349 0.0580262 -0.0361013 0.0506102 0.0732713 0.0214525 0.00560044 0.704936])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
