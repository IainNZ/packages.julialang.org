>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (499.12890625 MB free)
Uptime: 5302.0 sec
Load Avg:  0.978515625  1.37939453125  1.482421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     256251 s         58 s      34721 s     181509 s          8 s
#2  3499 MHz     106109 s         86 s      25658 s     385012 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.108247 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.163319; 0.0 0.175455 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.62328; 0.0 0.0 0.322366 0.0 0.0 0.0 0.0 0.0 0.0 0.752022; 0.0 0.0 0.0 0.035838 0.0 0.0 0.0 0.0 0.0 0.915975; 0.0 0.0 0.0 0.0 0.308663 0.0 0.0 0.0 0.0 0.206887; 0.0 0.0 0.0 0.0 0.0 0.999653 0.0 0.0 0.0 0.830074; 0.0 0.0 0.0 0.0 0.0 0.0 0.0487487 0.0 0.0 0.711118; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.677012 0.0 0.500406; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.649177 0.949077; 0.163319 0.62328 0.752022 0.915975 0.206887 0.830074 0.711118 0.500406 0.949077 0.0964827]
(U,Lambda) = eig(full(A)) = ([-1.82435,0.0436536,0.1055,0.133671,0.247263,0.309703,0.479242,0.671184,0.901915,2.35386],
[-0.0613623 -0.0138647 0.944438 0.304525 0.0776194 0.00390074 -0.0501712 0.00301686 0.0209391 -0.0483727; -0.226309 -0.0259312 0.14155 -0.707122 0.573472 0.0223393 -0.233831 0.0130743 0.0873036 -0.190302; -0.254368 -0.0147957 0.0550921 -0.188928 -0.66156 -0.285732 -0.546338 0.0224188 0.132039 -0.246215; -0.357548 0.642667 -0.208902 0.443841 0.286237 0.0160931 -0.235435 0.0149918 0.107619 -0.262825; -0.0704283 -0.00428089 0.0161785 -0.0560457 -0.222619 0.95767 -0.138228 0.00593445 0.0354859 -0.0672819; -0.213431 -0.00476125 0.0147488 -0.0454397 -0.0728908 -0.00578882 0.181785 -0.0262786 -0.864203 -0.407691; -0.275669 -0.765331 -0.199077 0.396962 0.236673 0.013112 -0.188262 0.0118803 0.0848143 -0.205187; -0.145262 -0.00433246 0.0139107 -0.0436594 -0.0769319 -0.00655513 0.28837 -0.892752 0.226406 -0.198486; -0.278607 -0.00859473 0.027734 -0.0872762 -0.156015 -0.013452 0.636514 0.448455 0.382112 -0.370303; 0.726117 0.00548355 -0.0158874 0.0474054 0.0660692 0.00481162 -0.113969 0.0103987 0.101756 -0.66512])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
