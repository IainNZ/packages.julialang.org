>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (657.62109375 MB free)
Uptime: 5961.0 sec
Load Avg:  0.97119140625  1.69580078125  1.57958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     277156 s         97 s      32268 s     221094 s          1 s
#2  3498 MHz     147139 s         41 s      24185 s     412500 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.530672 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.986376; 0.0 0.491117 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0179642; 0.0 0.0 0.8163 0.0 0.0 0.0 0.0 0.0 0.0 0.697435; 0.0 0.0 0.0 0.350871 0.0 0.0 0.0 0.0 0.0 0.666579; 0.0 0.0 0.0 0.0 0.610785 0.0 0.0 0.0 0.0 0.96839; 0.0 0.0 0.0 0.0 0.0 0.608597 0.0 0.0 0.0 0.0885545; 0.0 0.0 0.0 0.0 0.0 0.0 0.034694 0.0 0.0 0.159073; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0612861 0.0 0.122676; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.663881 0.0181624; 0.986376 0.0179642 0.697435 0.666579 0.96839 0.0885545 0.159073 0.122676 0.0181624 0.405049]
(U,Lambda) = eig(full(A)) = ([-1.22064,0.0389183,0.0644055,0.387741,0.491127,0.571241,0.608616,0.663866,0.770876,2.1971],
[-0.406289 0.0524704 -0.0530505 -0.346126 0.014531 0.697539 -0.00265306 -0.00580921 0.239847 -0.406471; -0.00757045 0.0010392 -0.00105574 -0.00871582 -0.999878 0.00643224 -3.20523e-5 -8.15737e-5 0.00375055 -0.00723114; -0.246991 0.0234687 -0.023261 -0.0816232 0.0012495 -0.0816495 0.000704024 0.00358908 -0.896801 -0.346854; -0.305978 0.0558962 -0.0583526 0.906775 -0.00276868 0.0867796 -0.000542184 -0.0016706 0.0926975 -0.247936; -0.381432 0.044297 -0.0444465 -0.21776 0.00471469 -0.702567 0.0935827 -0.014311 0.35331 -0.419213; -0.0349218 0.00406631 -0.00408075 -0.0201104 0.000439165 -0.0680094 -0.995608 -0.00125686 0.0318728 -0.0382822; -0.0914097 -0.98505 0.134262 0.0225987 -0.000203031 0.00850564 -5.8107e-5 -0.000198328 0.0126207 -0.0505164; -0.0690325 0.143469 0.9862 0.0188477 -0.000166263 0.00690157 -4.69891e-5 -0.0001597 0.0100977 -0.0394431; -0.00695227 0.000760217 -0.00075977 -0.00329885 6.12477e-5 -0.00562465 6.88986e-5 0.999872 0.00991466 -0.0081347; 0.721364 -0.0261589 0.0250773 0.0501557 -0.000582565 0.0286893 -0.000209646 -0.000784439 0.0584079 -0.686709])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
