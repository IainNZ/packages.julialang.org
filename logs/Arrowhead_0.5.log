>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (580.9609375 MB free)
Uptime: 5897.0 sec
Load Avg:  0.9150390625  1.5986328125  1.54736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     270818 s         63 s      33886 s     224456 s          6 s
#2  3499 MHz     181598 s         85 s      25750 s     362771 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.27.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.879359 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.642609; 0.0 0.30302 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.967015; 0.0 0.0 0.609944 0.0 0.0 0.0 0.0 0.0 0.0 0.00476078; 0.0 0.0 0.0 0.888697 0.0 0.0 0.0 0.0 0.0 0.859124; 0.0 0.0 0.0 0.0 0.842566 0.0 0.0 0.0 0.0 0.347412; 0.0 0.0 0.0 0.0 0.0 0.728563 0.0 0.0 0.0 0.612891; 0.0 0.0 0.0 0.0 0.0 0.0 0.0640097 0.0 0.0 0.743654; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0457552 0.0 0.978806; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.944198 0.0602211; 0.642609 0.967015 0.00476078 0.859124 0.347412 0.612891 0.743654 0.978806 0.0602211 0.275069]
(U,Lambda) = eig(full(A)) = ([-1.70143,0.0570327,0.191883,0.562732,0.609953,0.773077,0.847457,0.882854,0.944053,2.41356],
[-0.177007 -0.00568232 0.0740394 0.296123 0.0046258 0.340881 -0.261859 0.780233 -0.0237749 -0.285209; -0.342953 -0.0285854 0.689204 -0.543269 -0.00610993 -0.115984 0.0230897 0.007078 -0.00361069 -0.311988; -0.00146421 -6.26103e-5 0.000902012 0.014713 -0.999887 -0.00164532 0.00026057 7.40353e-5 -3.41057e-5 -0.00179735; -0.235793 -0.00751158 0.0976591 0.384556 0.0059772 0.418928 -0.270818 -0.624089 -0.0371471 -0.38364; -0.097079 -0.00321591 0.0422912 0.181142 0.0028964 0.281869 0.923269 0.0365969 -0.00819352 -0.150581; -0.179298 -0.00663653 0.0904569 0.539251 0.0100209 -0.776253 0.0670127 0.0168587 -0.00680761 -0.247676; -0.299443 -0.775038 -0.460645 -0.217564 -0.00264162 -0.0591288 0.0123394 0.00385435 -0.00202258 -0.215519; -0.398248 0.631113 -0.530565 -0.276248 -0.00336443 -0.0758726 0.0158715 0.0049625 -0.00260804 -0.281481; -0.0161814 -0.000493591 0.00634049 0.0230339 0.000349407 0.0198409 -0.00809236 -0.00416643 0.998955 -0.0279073; 0.710879 0.00727149 -0.0792089 -0.145906 -0.00193931 -0.0563787 0.0129997 0.00424406 -0.00239352 -0.680926])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
