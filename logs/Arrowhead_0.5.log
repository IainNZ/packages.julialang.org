>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (603.61328125 MB free)
Uptime: 6792.0 sec
Load Avg:  0.9658203125  1.634765625  1.578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     308066 s         98 s      34385 s     268171 s          8 s
#2  3499 MHz     158112 s         42 s      24866 s     476456 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0145962 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.705932; 0.0 0.12571 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.383398; 0.0 0.0 0.816996 0.0 0.0 0.0 0.0 0.0 0.0 0.632275; 0.0 0.0 0.0 0.421351 0.0 0.0 0.0 0.0 0.0 0.870653; 0.0 0.0 0.0 0.0 0.770988 0.0 0.0 0.0 0.0 0.411504; 0.0 0.0 0.0 0.0 0.0 0.256094 0.0 0.0 0.0 0.739539; 0.0 0.0 0.0 0.0 0.0 0.0 0.0685512 0.0 0.0 0.478183; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.292584 0.0 0.237821; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0353347 0.576208; 0.705932 0.383398 0.632275 0.870653 0.411504 0.739539 0.478183 0.237821 0.576208 0.907123]
(U,Lambda) = eig(full(A)) = ([-1.21137,0.025605,0.0570586,0.109202,0.175627,0.288936,0.347915,0.704131,0.789062,2.42316],
[-0.366342 -0.727203 -0.316169 0.258804 -0.296482 0.0370474 -0.136295 0.110655 -0.0282423 0.221664; -0.182429 0.0434334 0.106209 -0.805521 -0.519455 0.0338178 -0.111038 0.0716421 -0.0179079 0.12621; -0.198318 0.00906037 0.015823 -0.0309831 0.0666719 -0.0172388 0.0867432 -0.605492 0.701322 0.29772; -0.339261 0.0249494 0.0454523 -0.0967406 0.239631 -0.0946655 0.762984 0.332781 -0.0733629 0.328937; -0.132067 0.00626074 0.0109617 -0.0215666 0.0467454 -0.0122903 0.0625944 -0.665254 -0.705432 0.188369; -0.320623 0.0363866 0.070663 -0.174618 0.621569 0.3242 -0.518313 0.178406 -0.042993 0.258095; -0.237691 0.12627 0.791294 0.40799 -0.302028 0.0312389 -0.110154 0.0813179 -0.0205633 0.153591; -0.100604 0.0101019 0.0192031 -0.0449798 0.13752 -0.938464 -0.276604 0.0624587 -0.0148419 0.0844197; -0.294048 0.6716 -0.50443 0.270553 -0.277773 0.0327124 -0.11863 0.0931211 -0.0236867 0.182502; 0.636209 -0.0113405 -0.0190178 0.0346837 -0.0676308 0.0143974 -0.0643541 0.108084 -0.0309841 0.756293])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
