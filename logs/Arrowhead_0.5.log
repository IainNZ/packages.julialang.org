>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (593.359375 MB free)
Uptime: 6538.0 sec
Load Avg:  1.04052734375  1.64697265625  1.5859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     300155 s         51 s      32456 s     255430 s         11 s
#2  3499 MHz     164862 s         91 s      25603 s     445226 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0890872 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.327249; 0.0 0.126428 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.664285; 0.0 0.0 0.17964 0.0 0.0 0.0 0.0 0.0 0.0 0.788203; 0.0 0.0 0.0 0.50344 0.0 0.0 0.0 0.0 0.0 0.0323033; 0.0 0.0 0.0 0.0 0.116638 0.0 0.0 0.0 0.0 0.123871; 0.0 0.0 0.0 0.0 0.0 0.122513 0.0 0.0 0.0 0.651472; 0.0 0.0 0.0 0.0 0.0 0.0 0.894318 0.0 0.0 0.0747457; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.383162 0.0 0.853956; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.134648 0.913584; 0.327249 0.664285 0.788203 0.0323033 0.123871 0.651472 0.0747457 0.853956 0.913584 0.911561]
(U,Lambda) = eig(full(A)) = ([-1.26845,0.0910554,0.116727,0.124064,0.129875,0.166223,0.329947,0.503361,0.89313,2.37551],
[-0.152419 -0.97673 -0.00841641 0.0182297 -0.0280145 -0.061047 0.0747198 0.0019288 0.00646405 -0.110558; -0.301114 0.110319 0.0486758 -0.547546 -0.67291 -0.240197 0.179503 0.00430315 0.0137605 -0.228149; -0.344155 0.0522686 0.00890583 -0.0276332 0.0553023 0.845301 0.288391 0.00594516 0.0175451 -0.277268; -0.0115272 0.000460158 5.93798e-5 -0.000165905 0.000301936 0.00137841 -0.0102397 -0.99979 0.00131654 -0.0133289; -0.0565463 0.0284434 -0.994865 0.0325019 -0.0326759 -0.0359471 0.0319361 0.000782107 0.0025336 -0.0423591; -0.296137 0.121656 0.0800353 0.818358 -0.308989 -0.214466 0.172718 0.00417677 0.0134265 -0.223359; -0.0218519 0.000546627 6.83306e-5 -0.000189075 0.000341409 0.0014772 -0.00728353 -0.000466824 -0.998973 -0.0389802; -0.326919 0.0171734 0.00227837 -0.00642176 0.0117721 0.056642 -0.882502 0.0173473 0.0265949 -0.331085; -0.411692 0.123112 0.036238 -0.168186 0.668323 -0.416338 0.257259 0.00605001 0.0191297 -0.314921; 0.632286 -0.00587439 -0.000710854 0.00194842 -0.00349167 -0.0143894 0.0549947 0.00244172 0.015882 -0.772447])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
