>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (467.9609375 MB free)
Uptime: 6157.0 sec
Load Avg:  0.97216796875  1.369140625  1.478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     281814 s         58 s      35254 s     239899 s          5 s
#2  3504 MHz     106165 s         92 s      26294 s     469973 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.929115 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.584365; 0.0 0.0602579 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.792421; 0.0 0.0 0.0099538 0.0 0.0 0.0 0.0 0.0 0.0 0.953266; 0.0 0.0 0.0 0.683299 0.0 0.0 0.0 0.0 0.0 0.129083; 0.0 0.0 0.0 0.0 0.0424062 0.0 0.0 0.0 0.0 0.8302; 0.0 0.0 0.0 0.0 0.0 0.966324 0.0 0.0 0.0 0.205199; 0.0 0.0 0.0 0.0 0.0 0.0 0.965781 0.0 0.0 0.212536; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0570771 0.0 0.274409; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0646718 0.84136; 0.584365 0.792421 0.953266 0.129083 0.8302 0.205199 0.212536 0.274409 0.84136 0.380087]
(U,Lambda) = eig(full(A)) = ([-1.61342,0.0227491,0.0497091,0.0573782,0.0625691,0.677318,0.815457,0.959755,0.966072,2.16139],
[-0.1561 0.00709883 0.00431714 -0.000697669 0.00126947 0.105848 0.842078 -0.374879 -0.0144369 0.338409; -0.321567 0.23261 0.488037 -0.286388 -0.645439 -0.05857 -0.171856 -0.017316 -0.000798729 0.269134; -0.398825 -0.820298 -0.155784 0.0209201 -0.0341061 -0.0651475 -0.193828 -0.0197276 -0.000910302 0.316192; -0.0381722 0.00215163 0.00132361 -0.000214634 0.000391466 0.984366 -0.159973 -0.00917772 -0.000416786 0.0623207; -0.340529 0.465017 -0.738566 0.0577102 -0.0775102 -0.059637 -0.175891 -0.0177885 -0.000820636 0.279589; -0.0540238 0.00239444 0.00145442 -0.000234957 0.000427419 0.0323829 0.222767 0.614036 0.744544 0.122532; -0.0559674 0.00248149 0.00150732 -0.000243503 0.000442968 0.033604 0.231565 0.693234 -0.667414 0.126856; -0.111568 0.0880147 0.241963 0.948577 -0.0940589 -0.0201783 -0.0592628 -0.00597528 -0.000275626 0.093058; -0.340528 0.220973 0.365321 -0.120058 0.75325 -0.0626353 -0.183542 -0.0184761 -0.000852211 0.286357; 0.679184 -0.0110105 -0.00649684 0.00104076 -0.00188248 -0.0456086 -0.163783 -0.0196559 -0.000913025 0.713617])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
