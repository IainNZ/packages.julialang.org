>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (603.71875 MB free)
Uptime: 6632.0 sec
Load Avg:  1.04833984375  1.5947265625  1.54052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     294435 s         49 s      34641 s     260884 s          6 s
#2  3499 MHz     158543 s         98 s      25473 s     452761 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.777845 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.197555; 0.0 0.304284 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.727648; 0.0 0.0 0.35633 0.0 0.0 0.0 0.0 0.0 0.0 0.305445; 0.0 0.0 0.0 0.938211 0.0 0.0 0.0 0.0 0.0 0.209901; 0.0 0.0 0.0 0.0 0.00356637 0.0 0.0 0.0 0.0 0.150938; 0.0 0.0 0.0 0.0 0.0 0.19039 0.0 0.0 0.0 0.0282532; 0.0 0.0 0.0 0.0 0.0 0.0 0.21291 0.0 0.0 0.938721; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.889444 0.0 0.680144; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.333604 0.946957; 0.197555 0.727648 0.305445 0.209901 0.150938 0.0282532 0.938721 0.680144 0.946957 0.458605]
(U,Lambda) = eig(full(A)) = ([-1.31293,0.00603944,0.190406,0.251978,0.315963,0.35473,0.750075,0.804753,0.934987,2.16919],
[-0.0656476 -0.00417301 -0.000186154 0.012406 -0.00514672 -0.0023737 -0.757473 -0.641371 0.0188016 -0.100057; -0.312603 -0.0397758 -0.00353695 0.459404 0.74968 0.0733318 0.173802 -0.127009 0.0172543 -0.274953; -0.12713 -0.0142159 -0.00101899 0.0966615 -0.0910501 -0.970298 0.0826008 -0.0595027 0.00789427 -0.118731; -0.0647815 -0.00367104 -0.000155372 0.010101 -0.00405906 -0.00182888 -0.118797 0.137391 -0.973776 -0.120159; -0.0796557 0.995018 0.000447175 -0.0200653 0.00581387 0.00218517 0.0215292 -0.0164571 0.00242355 -0.0491143; -0.0130574 -0.00249858 0.99972 -0.0151492 0.00270735 0.000874022 0.00537514 -0.00401729 0.000567474 -0.0100614; -0.427431 -0.0739788 -0.0230892 -0.793479 0.10961 0.033651 0.186078 -0.138555 0.0194425 -0.338142; -0.21456 -0.012552 -0.000538577 0.0352342 -0.0142711 -0.00646662 -0.519635 0.701536 0.223346 -0.374517; -0.399575 -0.0471307 -0.0036605 0.383112 -0.645944 0.22788 0.242109 -0.175575 0.0235493 -0.363538; 0.694767 0.0163031 0.000553539 -0.0330233 0.012033 0.00508391 0.106479 -0.0873555 0.0149555 -0.704683])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
