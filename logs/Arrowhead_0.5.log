>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
WARNING: Union(args...) is deprecated, use Union{args...} instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Union(::Type{T}, ::Type{T}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl, in expression starting on line 6
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:8
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:48
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:50
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:64
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:77
WARNING: module DoubleDouble should explicitly import - from Base
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.334374 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.700725; 0.0 0.971764 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.212064; 0.0 0.0 0.248136 0.0 0.0 0.0 0.0 0.0 0.0 0.190376; 0.0 0.0 0.0 0.338043 0.0 0.0 0.0 0.0 0.0 0.978823; 0.0 0.0 0.0 0.0 0.412845 0.0 0.0 0.0 0.0 0.830247; 0.0 0.0 0.0 0.0 0.0 0.747466 0.0 0.0 0.0 0.517948; 0.0 0.0 0.0 0.0 0.0 0.0 0.92156 0.0 0.0 0.0642961; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.956665 0.0 0.162702; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.562151 0.167456; 0.700725 0.212064 0.190376 0.978823 0.830247 0.517948 0.0642961 0.162702 0.167456 0.971469]
(U,Lambda) = eig(full(A)) = ([-0.932116,0.249869,0.335599,0.388234,0.559383,0.706292,0.920517,0.948726,0.966018,2.32195],
[-0.35451 -0.0747832 0.819042 -0.316129 -0.05099 0.140224 0.0192538 0.049802 0.0270723 0.268544; -0.071369 -0.0026493 -0.000477331 0.00883054 0.00841983 -0.059452 -0.0666446 -0.401916 -0.900514 0.119636; -0.103352 0.990994 0.00311683 -0.0330191 -0.0100149 0.0309257 0.00456004 0.0118649 0.00647156 0.0699252; -0.493775 -0.100116 -0.573513 -0.473872 -0.0724071 0.197826 0.0270644 0.069985 0.0380374 0.375815; -0.395531 -0.0459432 -0.0153905 0.819706 -0.0927675 0.210571 0.0263388 0.0676481 0.0366265 0.33126; -0.197591 -0.00938743 -0.00180075 0.0350345 0.0450892 -0.936228 0.048204 0.112369 0.0578337 0.250575; -0.0222246 -0.000863284 -0.000157123 0.00292939 0.0029067 -0.0222293 -0.992898 0.10334 0.0352928 0.0349725; -0.0551944 -0.00207605 -0.000375128 0.00695505 0.0067055 -0.0483644 -0.0724905 -0.894873 0.424527 0.0907739; -0.0718053 -0.00483608 -0.00105842 0.0233962 0.990467 0.0864639 0.0075257 0.018914 0.0101184 0.0724819; 0.640742 0.00901859 0.00143194 -0.0242988 -0.0163733 0.0744253 0.0161054 0.0436633 0.0244033 0.761714])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:324 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:322 [inlined]
 in _unsafe_getindex!(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:316
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 212
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
