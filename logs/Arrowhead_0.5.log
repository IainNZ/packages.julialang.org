>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (507.578125 MB free)
Uptime: 6140.0 sec
Load Avg:  0.9072265625  1.328125  1.47607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     269028 s         76 s      35634 s     246853 s          6 s
#2  3500 MHz     118639 s         60 s      26538 s     453238 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.501541 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0792695; 0.0 0.213433 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0729346; 0.0 0.0 0.626092 0.0 0.0 0.0 0.0 0.0 0.0 0.609684; 0.0 0.0 0.0 0.794543 0.0 0.0 0.0 0.0 0.0 0.512352; 0.0 0.0 0.0 0.0 0.656612 0.0 0.0 0.0 0.0 0.58208; 0.0 0.0 0.0 0.0 0.0 0.751953 0.0 0.0 0.0 0.0114292; 0.0 0.0 0.0 0.0 0.0 0.0 0.0465749 0.0 0.0 0.92297; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.513129 0.0 0.448529; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.684443 0.488454; 0.0792695 0.0729346 0.609684 0.512352 0.58208 0.0114292 0.92297 0.448529 0.488454 0.937993]
(U,Lambda) = eig(full(A)) = ([-0.892328,0.211383,0.294529,0.501816,0.539696,0.640811,0.675372,0.751931,0.769675,2.23343],
[-0.0354989 -0.00755862 -0.0715937 0.990352 -0.106032 -0.0100222 -0.0071697 0.000587647 -0.013116 0.0345407; -0.0411721 -0.984433 0.168152 0.000869239 -0.0114089 -0.00300493 -0.00248239 0.000251407 -0.00581722 0.0272476; -0.250636 -0.0406755 -0.343798 -0.0168614 0.360153 -0.729377 -0.194516 0.00899325 -0.188386 0.286248; -0.189591 -0.0243082 -0.191581 -0.00601565 0.102604 0.0586834 0.067596 -0.0223187 0.914046 0.268712; -0.234573 -0.0361719 -0.300566 -0.0129241 0.254088 0.648623 -0.487836 0.0113353 -0.228407 0.278578; -0.0043388 -0.000584973 -0.00467156 -0.000157042 0.00274809 0.00181071 0.0023465 -0.999545 -0.0286118 0.00582191; -0.613617 0.154946 0.695957 0.00696822 -0.0955238 -0.027349 -0.023078 0.00242889 -0.0566285 0.318502; -0.199207 -0.0411264 -0.383624 -0.136271 -0.861644 -0.0618549 -0.0434656 0.00348642 -0.077566 0.196757; -0.193368 -0.028568 -0.234218 -0.00919256 0.172223 0.19712 0.846687 0.0134344 -0.254253 0.237969; 0.62421 0.0276676 0.186967 0.00343697 -0.0510361 -0.0176081 -0.0157225 0.00185621 -0.0443655 0.754649])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
