>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (559.1015625 MB free)
Uptime: 6821.0 sec
Load Avg:  1.095703125  1.404296875  1.4931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     326763 s         62 s      36931 s     237885 s         10 s
#2  3499 MHz     137008 s         90 s      27084 s     493155 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.761866 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.582115; 0.0 0.294222 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.755789; 0.0 0.0 0.65668 0.0 0.0 0.0 0.0 0.0 0.0 0.611457; 0.0 0.0 0.0 0.3012 0.0 0.0 0.0 0.0 0.0 0.326523; 0.0 0.0 0.0 0.0 0.600385 0.0 0.0 0.0 0.0 0.0495296; 0.0 0.0 0.0 0.0 0.0 0.984734 0.0 0.0 0.0 0.122807; 0.0 0.0 0.0 0.0 0.0 0.0 0.699719 0.0 0.0 0.357623; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.617707 0.0 0.933311; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.400996 0.199511; 0.582115 0.755789 0.611457 0.326523 0.0495296 0.122807 0.357623 0.933311 0.199511 0.0307553]
(U,Lambda) = eig(full(A)) = ([-1.29944,0.300047,0.377173,0.418344,0.600426,0.643994,0.69271,0.740194,0.982061,1.89275],
[-0.214686 0.00404445 -0.108066 -0.116599 -0.00304283 -0.0816527 0.150622 -0.887314 0.0572519 -0.329624; -0.36053 -0.416282 0.650682 0.418975 0.00208289 0.0357261 -0.0339389 0.0559837 0.0237959 -0.302767; -0.237633 0.00550131 -0.156231 -0.176529 -0.00917264 -0.796945 -0.30368 0.241866 0.040697 -0.316775; -0.15508 0.909129 0.306933 0.191792 0.000920856 0.0157489 -0.0149239 0.0245711 0.0103859 -0.131378; -0.0198193 0.000529148 -0.0158468 -0.0187213 0.998906 0.0187781 -0.00959968 0.011703 0.00281033 -0.0245419; -0.0408724 0.000575509 -0.0144353 -0.0149192 -0.000269663 -0.00595896 0.00752515 -0.0165898 -0.995002 -0.0866077; -0.135992 0.00287107 -0.079182 -0.0874539 -0.00303939 -0.106108 0.912971 0.291883 0.0274308 -0.191956; -0.370091 0.00942728 -0.277105 -0.322124 -0.0455775 0.587011 -0.222669 0.251713 0.0554742 -0.468738; -0.0891958 0.00634142 -0.598083 0.791327 0.00084422 0.0135749 -0.0122384 0.0194305 0.00743587 -0.0856445; 0.760216 -0.00320865 0.0714155 0.068808 0.000843875 0.0165337 -0.0178942 0.0330346 0.0216565 -0.640369])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
