>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (536.91796875 MB free)
Uptime: 5632.0 sec
Load Avg:  0.9697265625  1.421875  1.51953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     270284 s         17 s      35398 s     198688 s          9 s
#2  3499 MHz     115594 s        155 s      25496 s     408719 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.397301 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.34431; 0.0 0.404264 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0224567; 0.0 0.0 0.218973 0.0 0.0 0.0 0.0 0.0 0.0 0.902643; 0.0 0.0 0.0 0.232452 0.0 0.0 0.0 0.0 0.0 0.0778996; 0.0 0.0 0.0 0.0 0.880815 0.0 0.0 0.0 0.0 0.528383; 0.0 0.0 0.0 0.0 0.0 0.442628 0.0 0.0 0.0 0.68362; 0.0 0.0 0.0 0.0 0.0 0.0 0.152489 0.0 0.0 0.560816; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.234671 0.0 0.993269; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.596475 0.702963; 0.34431 0.0224567 0.902643 0.0778996 0.528383 0.68362 0.560816 0.993269 0.702963 0.59738]
(U,Lambda) = eig(full(A)) = ([-1.40255,0.16249,0.226042,0.232468,0.372366,0.404226,0.412729,0.550346,0.838901,2.36042],
[-0.130118 -0.0244299 0.0116502 0.000417783 0.698106 0.082456 -0.672146 -0.129778 -0.0585344 0.127035; -0.00845388 -0.00154749 0.000730168 2.61445e-5 0.0355935 -0.996048 -0.0798958 -0.00886783 -0.00387891 0.008315; -0.378632 -0.266249 -0.739904 -0.0133784 -0.297511 0.00808082 -0.140308 -0.157133 -0.109311 0.305301; -0.0324071 -0.0185508 0.0704272 -0.995835 -0.0281492 0.000752111 -0.0130141 -0.0141359 -0.00964343 0.0265149; -0.157397 -0.0122551 0.00467622 0.000163 0.0525402 -0.0018387 0.0339973 0.0922333 0.946427 0.258656; -0.252 -0.0406568 0.0182904 0.000650596 0.491908 -0.0295238 0.688624 -0.366096 -0.129512 0.258186; -0.245303 0.934236 -0.0441828 -0.00140247 -0.128953 0.00369469 -0.0649032 -0.0813134 -0.0613375 0.183973; -0.412652 -0.229264 0.667071 0.0901707 -0.364704 0.00971539 -0.168006 -0.181508 -0.123411 0.338435; -0.239187 -0.0269866 0.0109966 0.000386251 0.158585 -0.00606421 0.115222 0.879074 -0.217693 0.288647; 0.680178 0.0166606 -0.00579478 -0.000200008 -0.0505581 0.00165846 -0.0301176 -0.0576859 -0.0750742 0.724304])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
