>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (585.78515625 MB free)
Uptime: 6368.0 sec
Load Avg:  0.8671875  1.56689453125  1.52734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     308865 s         54 s      35656 s     223783 s          9 s
#2  3501 MHz     157940 s         94 s      25278 s     436801 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.28.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.253577 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0390081; 0.0 0.321345 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.49692; 0.0 0.0 0.499121 0.0 0.0 0.0 0.0 0.0 0.0 0.23883; 0.0 0.0 0.0 0.536249 0.0 0.0 0.0 0.0 0.0 0.251699; 0.0 0.0 0.0 0.0 0.448088 0.0 0.0 0.0 0.0 0.174668; 0.0 0.0 0.0 0.0 0.0 0.253455 0.0 0.0 0.0 0.432585; 0.0 0.0 0.0 0.0 0.0 0.0 0.162005 0.0 0.0 0.593979; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.259647 0.0 0.955276; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.43163 0.996494; 0.0390081 0.49692 0.23883 0.251699 0.174668 0.432585 0.593979 0.955276 0.996494 0.143888]
(U,Lambda) = eig(full(A)) = ([-1.45726,0.179533,0.253576,0.254487,0.306474,0.36811,0.447645,0.496419,0.532658,1.92737],
[-0.016523 0.0143097 0.995003 0.0930495 -0.017963 -0.0157002 0.000503267 -0.001781 0.00195952 -0.0159953; -0.202464 0.0951778 0.000203243 -0.0161386 0.813931 -0.489831 0.00985101 -0.0314702 0.0329676 -0.21236; -0.0884661 0.0202983 2.69599e-5 -0.00211986 0.0301981 0.0840359 -0.0116168 0.980056 0.0998378 -0.114769; -0.0914965 0.0191655 2.46807e-5 -0.00193969 0.0266828 0.0690075 -0.00711259 0.0700658 -0.982549 -0.124181; -0.0664325 0.0176661 2.48902e-5 -0.00195902 0.0300441 0.100676 -0.987533 -0.0400703 0.0289551 -0.0810404; -0.183246 0.158949 -0.0997454 0.910552 -0.198747 -0.173925 0.00557755 -0.0197408 0.0217209 -0.177369; -0.265825 -0.920443 -0.000179796 0.013946 -0.10015 -0.132851 0.00520656 -0.0196935 0.0224663 -0.230928; -0.403203 0.323881 0.00436144 -0.402016 -0.49692 -0.406001 0.0127225 -0.0447334 0.049054 -0.393137; -0.382305 0.107367 0.000155126 -0.0122148 0.193944 0.723186 0.155788 -0.170532 0.13828 -0.457254; 0.724674 -0.027162 -2.7718e-5 0.00217137 -0.0243587 -0.0460981 0.0025038 -0.0110875 0.0140193 -0.686339])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
