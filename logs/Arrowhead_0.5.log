>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (562.76953125 MB free)
Uptime: 5454.0 sec
Load Avg:  0.99267578125  1.42431640625  1.4921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     273894 s         98 s      32786 s     180724 s          7 s
#2  3503 MHz     108605 s         47 s      24810 s     396600 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.330383 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0978789; 0.0 0.460994 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.255197; 0.0 0.0 0.144923 0.0 0.0 0.0 0.0 0.0 0.0 0.844432; 0.0 0.0 0.0 0.319417 0.0 0.0 0.0 0.0 0.0 0.565582; 0.0 0.0 0.0 0.0 0.750883 0.0 0.0 0.0 0.0 0.749902; 0.0 0.0 0.0 0.0 0.0 0.321361 0.0 0.0 0.0 0.148153; 0.0 0.0 0.0 0.0 0.0 0.0 0.854174 0.0 0.0 0.255097; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0325691 0.0 0.704906; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.317481 0.00597967; 0.0978789 0.255197 0.844432 0.565582 0.749902 0.148153 0.255097 0.704906 0.00597967 0.345094]
(U,Lambda) = eig(full(A)) = ([-1.18966,0.073319,0.265774,0.317482,0.321238,0.330117,0.445717,0.598159,0.845918,1.86922],
[-0.0446906 -0.018012 0.111737 0.000270597 -0.00859856 0.98867 -0.0474795 -0.0584364 0.00593935 -0.0441115; -0.107301 -0.0311402 0.0964169 6.34252e-5 -0.00146705 0.00524395 0.934611 -0.297438 0.02074 -0.125678; -0.439139 -0.557883 -0.515367 -0.000174543 0.00384784 -0.0122626 -0.157062 -0.297855 0.037684 -0.339631; -0.260116 -0.108718 0.777646 0.0104226 0.249589 -0.142157 -0.250534 -0.324383 0.033605 -0.25309; -0.268203 -0.0523562 0.114016 6.17148e-5 -0.00140228 0.00479303 0.137481 0.784988 0.246848 -0.465037; -0.0680491 -0.0282553 0.19658 0.00136227 -0.968301 -0.0455027 -0.0666524 -0.085568 0.00883537 -0.0663794; -0.086625 -0.0154543 0.0319768 1.69533e-5 -0.000384567 0.0013091 0.034941 0.159296 -0.966571 -0.174291; -0.400278 0.818313 -0.222944 -8.8246e-5 0.00196188 -0.0063712 -0.0954554 -0.199249 0.0271121 -0.26617; -0.00275364 -0.00115854 0.00852953 -0.999945 0.00127896 -0.00127271 -0.00260881 -0.00340593 0.000353991 -0.00267248; 0.694038 0.0473058 -0.0737568 -3.56677e-5 0.000803418 -0.00268935 -0.0559468 -0.159869 0.031283 -0.693512])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
