>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (456.61328125 MB free)
Uptime: 6091.0 sec
Load Avg:  0.97607421875  1.361328125  1.46826171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     274740 s         67 s      36485 s     234607 s          7 s
#2  3500 MHz     107116 s         78 s      26954 s     459344 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.869633 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.974545; 0.0 0.927226 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.779173; 0.0 0.0 0.131841 0.0 0.0 0.0 0.0 0.0 0.0 0.10599; 0.0 0.0 0.0 0.117197 0.0 0.0 0.0 0.0 0.0 0.0479499; 0.0 0.0 0.0 0.0 0.155679 0.0 0.0 0.0 0.0 0.573533; 0.0 0.0 0.0 0.0 0.0 0.598597 0.0 0.0 0.0 0.485342; 0.0 0.0 0.0 0.0 0.0 0.0 0.449781 0.0 0.0 0.511431; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.175006 0.0 0.805708; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.211285 0.140026; 0.974545 0.779173 0.10599 0.0479499 0.573533 0.485342 0.511431 0.805708 0.140026 0.99206]
(U,Lambda) = eig(full(A)) = ([-1.01007,0.117296,0.132194,0.16195,0.210366,0.347012,0.51889,0.666827,0.906149,2.57769],
[-0.33662 0.00267302 -0.00438317 0.0124668 0.0095699 0.227736 0.261981 0.497535 -0.584389 0.420552; -0.261135 0.00198518 -0.00325059 0.00921738 0.00703666 0.164007 0.179918 0.309812 0.809519 0.347975; -0.0602641 0.0150371 0.994643 -0.0318675 -0.00873819 -0.0601584 -0.0258199 -0.0205128 -0.00299735 0.0319414; -0.0276177 -0.998976 0.0106044 -0.00969952 -0.00333182 -0.0254815 -0.0112551 -0.00903275 -0.00133084 0.0143643; -0.319434 0.0308341 -0.0810002 -0.827895 -0.0678954 -0.366088 -0.148887 -0.116176 -0.0167345 0.174543; -0.195888 0.00208086 -0.00345143 0.0100626 0.00809327 0.235602 0.574123 -0.736513 -0.0345555 0.18076; -0.22746 0.00317414 -0.00534117 0.0160857 0.0138293 0.607769 -0.697769 -0.243971 -0.0245391 0.177155; -0.441427 0.0288096 -0.0624204 0.558693 -0.147514 -0.572073 -0.220914 -0.169619 -0.0241303 0.247173; -0.074438 0.00307428 -0.00587213 0.025695 0.98646 -0.125997 -0.0429213 -0.0318261 -0.00441262 0.0436155; 0.649272 -0.00206354 0.00331675 -0.00905297 -0.00647391 -0.122128 -0.0942881 -0.103539 -0.0218972 0.73709])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
