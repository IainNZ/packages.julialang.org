>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (511.5625 MB free)
Uptime: 8087.0 sec
Load Avg:  1.10400390625  1.45654296875  1.53857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     276506 s        123 s      33059 s     439714 s          8 s
#2  3500 MHz     107420 s         22 s      25810 s     660324 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0473566 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0950889; 0.0 0.749555 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.488404; 0.0 0.0 0.730603 0.0 0.0 0.0 0.0 0.0 0.0 0.16856; 0.0 0.0 0.0 0.335765 0.0 0.0 0.0 0.0 0.0 0.590888; 0.0 0.0 0.0 0.0 0.650813 0.0 0.0 0.0 0.0 0.674075; 0.0 0.0 0.0 0.0 0.0 0.754469 0.0 0.0 0.0 0.35493; 0.0 0.0 0.0 0.0 0.0 0.0 0.0512632 0.0 0.0 0.387765; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.672892 0.0 0.639234; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.929282 0.872887; 0.0950889 0.488404 0.16856 0.590888 0.674075 0.35493 0.387765 0.639234 0.872887 0.854811]
(U,Lambda) = eig(full(A)) = ([-0.855183,0.0475627,0.0939543,0.404746,0.661619,0.718281,0.733213,0.752882,0.848889,2.37085],
[-0.0709121 -0.97514 -0.205792 0.0273108 -0.00182766 -0.00487201 -0.00186172 0.000503107 0.00870857 0.0294936; -0.204848 0.00147062 0.075128 -0.145394 0.0655739 0.536843 0.401307 0.547999 0.360927 0.217099; -0.0715429 0.000521631 0.0267003 -0.0530975 0.0288487 0.47026 -0.867264 0.028242 0.104606 0.0740602; -0.333941 0.00433374 0.246429 0.879263 -0.0214092 -0.0531016 -0.0199638 0.00528798 0.0845319 0.209248; -0.30126 0.00236192 0.122074 -0.28119 -0.73652 -0.34345 -0.10985 0.0246524 0.249813 0.282429; -0.148411 0.00106129 0.0541903 -0.104175 0.0451314 0.337156 0.224218 -0.834874 0.275941 0.158248; -0.287928 0.221494 -0.915998 0.112602 -0.00750077 -0.0199841 -0.00763544 0.00206306 0.0356869 0.120475; -0.281561 0.00216076 0.11135 -0.244701 0.6695 -0.484123 -0.142301 0.0298307 0.266619 0.271314; -0.329235 0.00209258 0.105381 -0.170816 0.0385025 0.142208 0.0597812 -0.0184715 -0.797038 0.436378; 0.673065 -0.00211375 -0.100847 0.102647 -0.0118065 -0.0343757 -0.0134282 0.00373287 0.0734072 0.720673])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
