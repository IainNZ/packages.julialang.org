>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (463.70703125 MB free)
Uptime: 5625.0 sec
Load Avg:  0.927734375  1.38623046875  1.51708984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     245051 s         92 s      33332 s     230810 s         10 s
#2  3504 MHz     136200 s         54 s      27204 s     384415 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.573782 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.23714; 0.0 0.934663 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0792428; 0.0 0.0 0.204821 0.0 0.0 0.0 0.0 0.0 0.0 0.718388; 0.0 0.0 0.0 0.855752 0.0 0.0 0.0 0.0 0.0 0.875155; 0.0 0.0 0.0 0.0 0.605712 0.0 0.0 0.0 0.0 0.0910911; 0.0 0.0 0.0 0.0 0.0 0.845367 0.0 0.0 0.0 0.760654; 0.0 0.0 0.0 0.0 0.0 0.0 0.614445 0.0 0.0 0.382226; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.683364 0.0 0.880777; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.133563 0.550405; 0.23714 0.0792428 0.718388 0.875155 0.0910911 0.760654 0.382226 0.880777 0.550405 0.0673736]
(U,Lambda) = eig(full(A)) = ([-1.4719,0.154781,0.32722,0.577541,0.605992,0.623569,0.751595,0.849953,0.934352,2.16574],
[-0.0872006 -0.0190075 -0.126993 0.974463 0.0223612 -0.10515 -0.0749432 0.00382774 -0.00257657 -0.0955734; -0.0247694 -0.00341245 -0.0172249 -0.00342792 -0.000732283 0.00562325 0.0243243 -0.00417001 0.998358 -0.0412989; -0.322294 -0.482151 0.774962 0.0297758 0.00543889 -0.0378727 -0.0738318 0.00496394 -0.00385783 -0.235052; -0.282827 -0.0419295 -0.218633 -0.0485958 -0.0106425 0.0832097 0.472162 -0.672674 -0.0436203 -0.428629; -0.0329811 -0.00678424 -0.0431881 -0.0499532 0.989538 -0.112615 -0.0350883 0.00166255 -0.00108588 -0.0374634; -0.246924 -0.0369917 -0.193836 -0.0438755 -0.00965136 0.0757092 0.455836 0.739467 -0.0334886 -0.369619; -0.137812 -0.0279264 -0.175712 -0.160008 -0.137337 -0.924823 -0.156609 0.00723488 -0.00468084 -0.158085; -0.30741 -0.0559613 -0.326544 -0.12858 -0.0345749 0.325176 -0.725395 0.0235688 -0.013748 -0.381216; -0.257891 0.871175 0.375276 0.0191518 0.00353857 -0.0247971 -0.0500454 0.00342491 -0.00269273 -0.173774; 0.752235 0.0335842 0.132039 0.0154486 0.00303725 -0.022076 -0.0561944 0.00445775 -0.00391767 -0.641601])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
