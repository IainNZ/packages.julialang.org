>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (508.87890625 MB free)
Uptime: 8197.0 sec
Load Avg:  1.0478515625  1.47998046875  1.529296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     257865 s         54 s      33506 s     473454 s          6 s
#2  3500 MHz     131152 s         91 s      25082 s     648738 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.934878 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.660294; 0.0 0.384769 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.68559; 0.0 0.0 0.230933 0.0 0.0 0.0 0.0 0.0 0.0 0.163474; 0.0 0.0 0.0 0.779 0.0 0.0 0.0 0.0 0.0 0.0854029; 0.0 0.0 0.0 0.0 0.100717 0.0 0.0 0.0 0.0 0.285892; 0.0 0.0 0.0 0.0 0.0 0.78367 0.0 0.0 0.0 0.58017; 0.0 0.0 0.0 0.0 0.0 0.0 0.240487 0.0 0.0 0.984682; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.59699 0.0 0.65871; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.936747 0.271249; 0.660294 0.68559 0.163474 0.0854029 0.285892 0.58017 0.984682 0.65871 0.271249 0.572633]
(U,Lambda) = eig(full(A)) = ([-1.1672,0.108285,0.231179,0.329634,0.512394,0.713862,0.779102,0.870592,0.936482,2.2465],
[-0.217068 0.0206592 -0.00139252 -0.0639462 -0.147712 -0.269419 -0.0049982 0.767359 -0.373456 -0.354435; -0.305273 0.0641301 -0.00662445 -0.728864 0.507712 0.18787 0.00205011 -0.10543 -0.00112743 -0.259272; -0.0807992 0.0344711 0.987567 0.0970804 0.0548931 0.0305265 0.00035165 -0.019093 -0.000210213 -0.0571029; -0.0303245 0.00329309 -0.000231358 -0.0111399 -0.0302755 -0.118237 0.988695 -0.0696612 -0.000492019 -0.0409735; -0.155819 -0.97709 0.00325216 0.0732035 0.0656349 0.0420487 0.000496939 -0.0277433 -0.000310355 -0.0938048; -0.205511 0.0222163 -0.0015584 -0.0748984 -0.20213 -0.749489 -0.14975 -0.498658 -0.0034446 -0.279235; -0.48339 0.19263 -0.156982 0.647437 0.342267 0.187588 0.00215573 -0.116751 -0.0012836 -0.345597; -0.258022 0.0348591 -0.00267231 -0.144415 -0.735926 0.50827 0.00426513 -0.179867 -0.00176037 -0.281156; -0.0890926 0.00846767 -0.000570531 -0.0261882 -0.0604128 -0.109749 -0.00202891 0.306324 0.927637 -0.14581; 0.691049 -0.0258624 0.00148406 0.0586148 0.0945122 0.0901806 0.00117917 -0.0747095 -0.000907276 -0.704057])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
