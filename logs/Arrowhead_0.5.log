>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (488.23046875 MB free)
Uptime: 7819.0 sec
Load Avg:  0.9970703125  1.3681640625  1.44580078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     248263 s         60 s      32706 s     447058 s          7 s
#2  3500 MHz     133364 s         89 s      25844 s     608121 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.39625 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.379344; 0.0 0.337796 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.649532; 0.0 0.0 0.0614444 0.0 0.0 0.0 0.0 0.0 0.0 0.552463; 0.0 0.0 0.0 0.234854 0.0 0.0 0.0 0.0 0.0 0.267509; 0.0 0.0 0.0 0.0 0.892599 0.0 0.0 0.0 0.0 0.340473; 0.0 0.0 0.0 0.0 0.0 0.892655 0.0 0.0 0.0 0.127167; 0.0 0.0 0.0 0.0 0.0 0.0 0.481101 0.0 0.0 0.446374; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.688687 0.0 0.415544; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.875977 0.069816; 0.379344 0.649532 0.552463 0.267509 0.340473 0.127167 0.446374 0.415544 0.069816 0.900738]
(U,Lambda) = eig(full(A)) = ([-0.618672,0.141587,0.249342,0.380383,0.451836,0.641222,0.850189,0.876881,0.892648,1.89668],
[-0.228113 -0.174975 0.126588 0.828083 0.38151 0.158111 -0.0867402 0.00978976 3.87447e-5 0.193478; -0.414458 -0.388859 0.35999 -0.528257 0.318406 0.218572 -0.131578 0.014945 5.93516e-5 0.318862; -0.495758 0.809751 -0.14414 -0.059996 0.0791119 0.0972946 -0.0727029 0.00840357 3.3698e-5 0.23037; -0.191281 -0.336914 -0.905174 -0.0636673 0.0689216 0.0672151 -0.0451245 0.00516817 2.06186e-5 0.123188; -0.137496 -0.0532532 0.025948 0.0230227 -0.0431835 -0.138295 0.833305 -0.268688 0.34948 0.259495; -0.0513532 -0.0198887 0.00969076 0.0085981 -0.0161271 -0.0516418 0.310829 -0.0999975 -0.936944 0.0969274; -0.247711 -0.154437 0.0944208 0.153505 -0.852704 0.28464 -0.125532 0.0139893 5.49905e-5 0.241312; -0.193987 -0.0892196 0.0463678 0.0466837 -0.0980804 -0.893915 -0.267069 0.0273881 0.000103295 0.26325; -0.0285079 -0.011167 0.00546192 0.00487929 -0.00920206 -0.0303661 0.281018 0.957231 0.000212317 0.0523444; 0.61031 0.117465 -0.0490235 -0.034636 0.0559036 0.102105 -0.103797 0.0124037 5.07002e-5 0.765273])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
