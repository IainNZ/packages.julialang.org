>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (568.47265625 MB free)
Uptime: 6057.0 sec
Load Avg:  1.02734375  1.65185546875  1.5673828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     332522 s         62 s      34645 s     165033 s          8 s
#2  3499 MHz     117988 s         84 s      27312 s     442970 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.519964 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.578948; 0.0 0.883118 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.811568; 0.0 0.0 0.55218 0.0 0.0 0.0 0.0 0.0 0.0 0.650028; 0.0 0.0 0.0 0.789801 0.0 0.0 0.0 0.0 0.0 0.352529; 0.0 0.0 0.0 0.0 0.555421 0.0 0.0 0.0 0.0 0.677907; 0.0 0.0 0.0 0.0 0.0 0.161103 0.0 0.0 0.0 0.507019; 0.0 0.0 0.0 0.0 0.0 0.0 0.0605546 0.0 0.0 0.692856; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.916153 0.0 0.460557; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.47599 0.723472; 0.578948 0.811568 0.650028 0.352529 0.677907 0.507019 0.692856 0.460557 0.723472 0.808827]
(U,Lambda) = eig(full(A)) = ([-1.22225,0.109496,0.225913,0.494421,0.531046,0.553779,0.74817,0.815653,0.909408,2.55748],
[-0.222865 -0.0801103 -0.194407 0.470829 0.76738 0.0295345 0.203758 -0.101062 0.0197971 0.206331; -0.258524 -0.0595833 -0.121932 0.0433722 -0.0338571 -0.00425078 -0.483016 0.620902 0.411094 0.351966; -0.245684 -0.0834 -0.196722 0.233782 -0.451748 0.701488 0.266379 -0.127343 0.0242323 0.235385; -0.117506 -0.0294319 -0.06173 0.024792 -0.0200107 -0.00257649 -0.680111 -0.703868 0.0392505 0.144816; -0.255754 -0.0863448 -0.203142 0.230854 -0.408479 -0.711857 0.282475 -0.134459 0.0255029 0.245877; -0.245807 -0.558006 0.772466 -0.0315983 0.0201302 0.0022273 0.0693648 -0.0399818 0.00902304 0.153637; -0.362231 0.804074 0.413725 -0.033173 0.0216296 0.00242318 0.0809282 -0.0473609 0.0108697 0.201494; -0.144444 -0.0324282 -0.0658838 0.0226853 -0.0175654 -0.00219237 -0.220202 0.236536 -0.909374 0.203758; -0.285711 -0.11212 -0.285656 -0.815372 0.193008 0.0160432 0.213485 -0.10994 0.0222291 0.252391; 0.670664 0.0567974 0.0987404 -0.0207729 0.0146878 0.001725 0.0803161 -0.0516155 0.013317 0.726149])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
