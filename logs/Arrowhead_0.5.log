>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (494.390625 MB free)
Uptime: 5089.0 sec
Load Avg:  0.97802734375  1.40087890625  1.490234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     258040 s        124 s      32334 s     159409 s          9 s
#2  3492 MHz     109348 s         41 s      25566 s     360898 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.811176 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.734773; 0.0 0.393637 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.645079; 0.0 0.0 0.163454 0.0 0.0 0.0 0.0 0.0 0.0 0.910051; 0.0 0.0 0.0 0.986513 0.0 0.0 0.0 0.0 0.0 0.2459; 0.0 0.0 0.0 0.0 0.418151 0.0 0.0 0.0 0.0 0.144337; 0.0 0.0 0.0 0.0 0.0 0.609274 0.0 0.0 0.0 0.707124; 0.0 0.0 0.0 0.0 0.0 0.0 0.0209525 0.0 0.0 0.601322; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.383545 0.0 0.235022; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.678262 0.739986; 0.734773 0.645079 0.910051 0.2459 0.144337 0.707124 0.601322 0.235022 0.739986 0.676569]
(U,Lambda) = eig(full(A)) = ([-1.28836,0.0539802,0.284832,0.384705,0.416978,0.487658,0.643249,0.766809,0.979239,2.41244],
[-0.236355 0.0479302 0.130315 -0.00800226 0.0147474 0.206215 0.144813 -0.857543 -0.127494 -0.330826; -0.259014 0.0938071 0.553443 -0.335406 -0.218668 -0.622953 -0.0855313 0.0895072 -0.0321233 -0.230371; -0.42334 0.4106 -0.699896 0.0191043 -0.0284003 -0.254866 -0.062775 0.0780991 -0.0325312 -0.291735; -0.0730024 0.0130244 0.0327137 -0.0018978 0.00341598 0.0447559 0.0237087 -0.0579532 0.985918 -0.124329; -0.057122 0.0195765 0.101063 -0.0200434 0.972882 -0.188546 -0.0212219 0.0214354 -0.00750164 -0.0521794; -0.251662 0.062898 0.203455 -0.014625 0.0290938 0.527923 -0.688834 0.232418 -0.0557371 -0.282728; -0.310169 -0.899274 -0.212721 0.00767805 -0.0120133 -0.116985 -0.0319806 0.0417451 -0.0182988 -0.18128; -0.0949362 0.0352234 0.222251 0.941401 -0.0556179 -0.20496 -0.0299507 0.0317515 -0.0115052 -0.0835138; -0.254119 0.0585472 0.175576 -0.0117079 0.0224071 0.352498 0.699466 0.432714 -0.0716968 -0.307637; 0.67536 -0.0493928 -0.0933489 0.00464461 -0.00791181 -0.0907957 -0.0330961 0.051779 -0.0291615 -0.720958])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
