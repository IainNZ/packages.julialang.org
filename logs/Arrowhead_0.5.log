>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.875 MB free)
Uptime: 5480.0 sec
Load Avg:  1.0458984375  1.35009765625  1.47900390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     256180 s         54 s      36149 s     198647 s         13 s
#2  3499 MHz     131963 s         94 s      27452 s     370778 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0470447 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.753317; 0.0 0.664674 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.949689; 0.0 0.0 0.681694 0.0 0.0 0.0 0.0 0.0 0.0 0.0488811; 0.0 0.0 0.0 0.271125 0.0 0.0 0.0 0.0 0.0 0.558992; 0.0 0.0 0.0 0.0 0.955804 0.0 0.0 0.0 0.0 0.784285; 0.0 0.0 0.0 0.0 0.0 0.188522 0.0 0.0 0.0 0.083038; 0.0 0.0 0.0 0.0 0.0 0.0 0.0060084 0.0 0.0 0.0222564; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.296417 0.0 0.726627; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.372623 0.831063; 0.753317 0.949689 0.0488811 0.558992 0.784285 0.083038 0.0222564 0.726627 0.831063 0.0247983]
(U,Lambda) = eig(full(A)) = ([-1.6858,0.00603227,0.105361,0.189128,0.279148,0.333068,0.533915,0.681651,0.869305,2.1969],
[-0.322072 -0.0196903 -0.895338 0.0385796 -0.0395806 -0.0861789 -0.15457 0.00104422 0.0869756 0.228719; -0.299337 -0.00154569 0.117686 -0.0145316 0.0300408 0.0937094 0.725555 0.0492079 0.440594 0.404568; -0.0152963 -7.75538e-5 0.00587847 -0.000722105 0.00148085 0.00458781 0.0330437 -0.99878 0.024735 0.0210573; -0.211625 -0.00226047 0.233729 -0.049606 -0.849707 -0.295283 -0.2125 0.0011978 0.0887161 0.189467; -0.219959 -0.000885209 0.0639184 -0.00744364 0.0141348 0.0412092 0.185711 -0.00251651 -0.860782 0.412478; -0.0328222 -0.000487787 0.0692077 0.9961 -0.011174 -0.0187973 -0.0240173 0.000148127 0.0115797 0.0269876; -0.00974625 0.999795 -0.0155265 0.000884387 -0.000993699 -0.00222665 -0.00421171 2.89771e-5 0.0024475 0.00663082; -0.271578 -0.00268244 0.263601 -0.0492813 0.513125 -0.648711 -0.305642 0.00165922 0.120412 0.249563; -0.299112 -0.00243021 0.215523 -0.032956 0.108423 0.687478 -0.514733 0.00236566 0.158849 0.297356; 0.740858 0.00107199 -0.0693102 0.00727652 -0.0121951 -0.0327208 -0.099899 0.000879665 0.0949356 0.652731])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
