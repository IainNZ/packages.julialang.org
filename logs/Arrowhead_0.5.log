>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (592.18359375 MB free)
Uptime: 6868.0 sec
Load Avg:  1.00537109375  1.3349609375  1.4560546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     283448 s         85 s      34919 s     307609 s          9 s
#2  3499 MHz     194184 s         64 s      27652 s     434962 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.164781 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.199055; 0.0 0.653685 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.847583; 0.0 0.0 0.0384662 0.0 0.0 0.0 0.0 0.0 0.0 0.529097; 0.0 0.0 0.0 0.320822 0.0 0.0 0.0 0.0 0.0 0.716149; 0.0 0.0 0.0 0.0 0.133806 0.0 0.0 0.0 0.0 0.79053; 0.0 0.0 0.0 0.0 0.0 0.796635 0.0 0.0 0.0 0.26219; 0.0 0.0 0.0 0.0 0.0 0.0 0.9684 0.0 0.0 0.880164; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.530006 0.0 0.542468; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.597837 0.644854; 0.199055 0.847583 0.529097 0.716149 0.79053 0.26219 0.880164 0.542468 0.644854 0.382583]
(U,Lambda) = eig(full(A)) = ([-1.50398,0.0586517,0.162421,0.21838,0.407773,0.551226,0.620938,0.786245,0.873801,2.41156],
[-0.0848096 -0.0656779 0.947438 -0.284021 -0.0730101 0.0168499 0.0112532 0.0119149 0.0250919 -0.060624; -0.279296 -0.0498795 0.0193762 0.148909 0.307188 -0.270611 -0.667452 0.237851 0.344152 -0.329933; -0.243889 0.917862 -0.047937 -0.224908 -0.127688 0.0337546 0.023425 0.0263207 0.0566102 -0.152564; -0.279032 -0.0956537 0.0507747 0.534637 -0.734057 0.101677 0.0615366 0.0572387 0.115748 -0.234388; -0.343184 -0.368335 -0.310259 -0.714855 -0.257172 0.0619523 0.0418496 0.0450727 0.0954793 -0.237489; -0.0810286 -0.0124409 0.00464281 0.0346761 0.0600929 -0.0349493 -0.038483 -0.938712 0.303677 -0.111095; -0.253113 -0.0338785 0.0122642 0.0897479 0.139924 -0.0690175 -0.0653242 -0.179745 -0.831564 -0.417331; -0.189624 -0.0403003 0.0165736 0.13313 0.395539 0.836236 0.153843 0.0787523 0.141024 -0.197283; -0.218139 -0.0418799 0.0166325 0.129967 0.302388 -0.452575 0.719871 0.12732 0.208847 -0.243289; 0.710994 0.0350172 -0.0112305 -0.0764775 -0.0891256 0.0327124 0.0257881 0.0371993 0.0893757 -0.684278])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
