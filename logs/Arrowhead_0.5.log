>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (470.78515625 MB free)
Uptime: 6250.0 sec
Load Avg:  1.05859375  1.76708984375  1.765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     260870 s        106 s      33902 s     274679 s         10 s
#2  3499 MHz     176243 s         44 s      24973 s     402160 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0406695 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.278348; 0.0 0.767252 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.773348; 0.0 0.0 0.0271493 0.0 0.0 0.0 0.0 0.0 0.0 0.596698; 0.0 0.0 0.0 0.73576 0.0 0.0 0.0 0.0 0.0 0.956813; 0.0 0.0 0.0 0.0 0.234314 0.0 0.0 0.0 0.0 0.352267; 0.0 0.0 0.0 0.0 0.0 0.428504 0.0 0.0 0.0 0.473303; 0.0 0.0 0.0 0.0 0.0 0.0 0.307298 0.0 0.0 0.0184677; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.250583 0.0 0.0746079; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.611052 0.768405; 0.278348 0.773348 0.596698 0.956813 0.352267 0.473303 0.0184677 0.0746079 0.768405 0.80997]
(U,Lambda) = eig(full(A)) = ([-1.04621,0.0380119,0.120438,0.249428,0.268543,0.3074,0.459546,0.652887,0.755672,2.40684],
[-0.171038 0.885257 -0.409371 0.0193669 -0.0989489 -0.00570906 0.0395395 0.0198672 -0.00472032 -0.0854568; -0.284809 0.00896334 0.140268 -0.0216925 0.125615 0.00920035 -0.149543 -0.295484 0.809762 -0.342645; -0.371276 -0.464287 -0.750389 0.0389918 -0.200237 -0.0116481 0.0821109 0.0416693 -0.0099312 -0.182154; -0.358603 0.0115903 0.182426 -0.0285766 0.165891 0.0122198 -0.206114 -0.504503 -0.582657 -0.415944; -0.183726 0.0151674 0.362913 0.338552 -0.833691 -0.0263688 0.0930619 0.0367752 -0.0081927 -0.117791; -0.214347 0.0102445 0.180243 -0.0383899 0.239684 0.021381 0.907234 0.0921728 -0.0175412 -0.173797; -0.00911251 0.000579646 0.0115947 -0.00463522 0.0386002 -0.999086 0.00721757 0.00233511 -0.000499416 -0.00638987; -0.0384239 0.00296651 0.0672544 -0.937838 -0.336522 -0.0071839 0.0212444 0.00810373 -0.00179105 -0.0251356; -0.30966 0.0113337 0.183744 -0.0308637 0.181733 0.013844 -0.301777 0.802625 -0.0644249 -0.310842; 0.667862 -0.00845212 -0.117318 0.014525 -0.0810057 -0.00547076 0.0595015 0.0436972 -0.0121252 -0.726448])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
