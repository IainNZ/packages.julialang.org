>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (580.95703125 MB free)
Uptime: 6296.0 sec
Load Avg:  1.001953125  1.64111328125  1.58544921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz     331047 s         62 s      31625 s     194918 s          6 s
#2  3510 MHz     130602 s         86 s      24734 s     459605 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.681664 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.259999; 0.0 0.237415 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.592444; 0.0 0.0 0.100305 0.0 0.0 0.0 0.0 0.0 0.0 0.463439; 0.0 0.0 0.0 0.98947 0.0 0.0 0.0 0.0 0.0 0.0108784; 0.0 0.0 0.0 0.0 0.385426 0.0 0.0 0.0 0.0 0.0512643; 0.0 0.0 0.0 0.0 0.0 0.951453 0.0 0.0 0.0 0.797482; 0.0 0.0 0.0 0.0 0.0 0.0 0.745257 0.0 0.0 0.669232; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.734851 0.0 0.890729; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.532712 0.21369; 0.259999 0.592444 0.463439 0.0108784 0.0512643 0.797482 0.669232 0.890729 0.21369 0.908654]
(U,Lambda) = eig(full(A)) = ([-0.851706,0.137174,0.34483,0.387083,0.540025,0.684501,0.741493,0.886076,0.989465,2.40827],
[-0.112452 -0.0338596 -0.111142 0.0280257 0.061239 -0.974313 -0.0195071 -0.0877163 -0.000405988 0.109358; -0.360755 -0.419085 0.794157 -0.125692 -0.0653135 -0.0140891 -0.00527573 -0.0629861 -0.000378627 0.198193; -0.322844 0.891308 0.272894 -0.0513139 -0.0351605 -0.00843455 -0.00324445 -0.0406736 -0.00025051 0.145826; -0.00391841 -0.000905048 -0.00242979 0.000573424 0.000807468 0.000379258 0.000196918 0.0072558 0.999947 0.00556819; -0.0274815 -0.0146427 -0.181823 -0.982576 -0.0110624 -0.00182248 -0.000646274 -0.00706149 -4.07907e-5 0.0184045; -0.293311 -0.0694459 -0.189289 0.0448689 0.0646645 0.0317626 0.0170498 0.841235 -0.0100834 0.397546; -0.277922 -0.0780392 -0.240645 0.0593295 0.108785 0.117115 0.798037 -0.327741 -0.00131713 0.292249; -0.372333 -0.105676 -0.328837 0.0813288 0.152524 0.188093 -0.601985 -0.406197 -0.00168141 0.386556; -0.102367 -0.0383086 -0.163766 0.0465936 -0.974799 -0.0149682 -0.00459437 -0.041704 -0.000224861 0.082742; 0.663195 0.0709086 0.143987 -0.0317532 -0.033361 -0.0106323 -0.00448883 -0.0689629 -0.00048063 0.726224])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
