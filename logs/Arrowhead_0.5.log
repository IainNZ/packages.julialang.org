>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.44140625 MB free)
Uptime: 5805.0 sec
Load Avg:  1.0068359375  1.43896484375  1.5322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     260875 s         24 s      32792 s     228118 s         12 s
#2  3504 MHz     116661 s        164 s      26862 s     420362 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.1
2 additional packages:
 - Compat                        0.24.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.627094 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.795028; 0.0 0.970719 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.838967; 0.0 0.0 0.812948 0.0 0.0 0.0 0.0 0.0 0.0 0.0759879; 0.0 0.0 0.0 0.342729 0.0 0.0 0.0 0.0 0.0 0.953773; 0.0 0.0 0.0 0.0 0.77739 0.0 0.0 0.0 0.0 0.15762; 0.0 0.0 0.0 0.0 0.0 0.12411 0.0 0.0 0.0 0.908486; 0.0 0.0 0.0 0.0 0.0 0.0 0.0584826 0.0 0.0 0.522594; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.266828 0.0 0.251469; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0570053 0.0780622; 0.795028 0.838967 0.0759879 0.953773 0.15762 0.908486 0.522594 0.251469 0.0780622 0.531451]
(U,Lambda) = eig(full(A)) = ([-1.39246,0.0570349,0.0717761,0.216628,0.273853,0.525107,0.771699,0.811094,0.857364,2.37666],
[-0.271394 0.000523905 -0.0329075 0.138361 -0.0576607 0.777655 0.191143 0.103136 -0.385772 -0.319459; -0.244749 0.000344936 -0.0214519 0.0794746 -0.0308435 0.187818 -0.146558 -0.125455 0.826976 -0.419508; -0.0237535 3.77626e-5 -0.00235656 0.00910274 -0.00361116 0.0263355 -0.0640468 -0.978178 -0.191155 -0.0341625; -0.37894 0.0012541 -0.0809105 0.540298 -0.354771 -0.521703 0.0772999 0.0486079 -0.207077 -0.329664; -0.0500789 8.21969e-5 -0.00513451 0.0200789 -0.00801953 0.0623267 -0.962994 0.11163 -0.220215 -0.0692872; -0.412979 0.00508797 -0.399013 -0.701456 0.155431 -0.22601 0.0487731 0.0315659 -0.138437 -0.283535; -0.248306 0.135602 0.903606 -0.236056 0.0621649 -0.111724 0.0254744 0.0165745 -0.0730918 -0.158482; -0.10448 0.000450278 -0.0296337 0.357835 0.917071 -0.0971284 0.0173167 0.0110286 -0.04758 -0.0837912; -0.0371283 -0.990749 0.121476 -0.0349344 0.00922258 -0.0166361 0.00379736 0.00247095 -0.0108979 -0.0236581; 0.689401 -0.000375655 0.0229855 -0.0714343 0.0256193 -0.0997585 0.0347665 0.0238697 -0.111734 -0.703011])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
