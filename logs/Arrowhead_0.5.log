>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (590.46875 MB free)
Uptime: 6546.0 sec
Load Avg:  1.00830078125  1.693359375  1.64453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     284464 s        108 s      33962 s     271405 s         14 s
#2  3500 MHz     179885 s         42 s      26482 s     425844 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.929028 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.979834; 0.0 0.466054 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.169373; 0.0 0.0 0.164262 0.0 0.0 0.0 0.0 0.0 0.0 0.55205; 0.0 0.0 0.0 0.497157 0.0 0.0 0.0 0.0 0.0 0.802573; 0.0 0.0 0.0 0.0 0.365058 0.0 0.0 0.0 0.0 0.569866; 0.0 0.0 0.0 0.0 0.0 0.848448 0.0 0.0 0.0 0.796717; 0.0 0.0 0.0 0.0 0.0 0.0 0.167616 0.0 0.0 0.515858; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.359815 0.0 0.784875; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.242358 0.00892713; 0.979834 0.169373 0.55205 0.802573 0.569866 0.796717 0.515858 0.784875 0.00892713 0.493892]
(U,Lambda) = eig(full(A)) = ([-1.42695,0.16601,0.217605,0.242373,0.363214,0.435646,0.46796,0.678757,0.88448,2.50459],
[-0.294324 -0.00285132 0.0834619 0.00241137 -0.00448702 0.100552 -0.0227256 0.46773 0.701637 0.429745; -0.0633193 -0.00125339 0.0413115 0.00127957 -0.00426739 0.282023 0.949849 -0.0951313 -0.0129125 0.0574142; -0.245524 0.701175 -0.627129 -0.011943 0.00718964 -0.102994 0.0194385 -0.128189 -0.0244513 0.163003; -0.295188 -0.00538136 0.173975 0.00532307 -0.0155254 0.660623 -0.293955 -0.527987 -0.0660995 0.276273; -0.225049 -0.00635687 0.234199 0.00784931 -0.80101 -0.408751 0.0592204 -0.217027 -0.0349977 0.184055; -0.247794 -0.0025922 0.0765325 0.0022214 -0.00425433 0.0977198 -0.0223918 0.560915 -0.705355 0.33243; -0.228945 -0.712869 -0.625344 -0.0116609 0.00683352 -0.0974467 0.018367 -0.120571 -0.0229552 0.152535; -0.310869 -0.00899213 0.334452 0.0112934 0.598315 -0.524052 0.0776103 -0.293997 -0.0477206 0.252879; -0.00378459 -0.000259623 0.0218555 -0.999744 0.00019139 -0.00233844 0.000423149 -0.00244389 -0.000443487 0.0027269; 0.707692 0.00222039 -0.0605987 -0.00168986 0.00259107 -0.0506314 0.0106937 -0.119468 -0.0318997 0.691026])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
