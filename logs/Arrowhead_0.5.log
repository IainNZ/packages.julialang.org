>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (591.3984375 MB free)
Uptime: 6219.0 sec
Load Avg:  0.90771484375  1.59033203125  1.53515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     303095 s         50 s      35096 s     215269 s          6 s
#2  3499 MHz     151867 s         91 s      26474 s     423247 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.28.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.556636 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.251714; 0.0 0.953235 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.805384; 0.0 0.0 0.644471 0.0 0.0 0.0 0.0 0.0 0.0 0.0727359; 0.0 0.0 0.0 0.857322 0.0 0.0 0.0 0.0 0.0 0.535554; 0.0 0.0 0.0 0.0 0.77547 0.0 0.0 0.0 0.0 0.315061; 0.0 0.0 0.0 0.0 0.0 0.146362 0.0 0.0 0.0 0.660831; 0.0 0.0 0.0 0.0 0.0 0.0 0.128284 0.0 0.0 0.419851; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.218138 0.0 0.529458; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.69918 0.453782; 0.251714 0.805384 0.0727359 0.535554 0.315061 0.660831 0.419851 0.529458 0.453782 0.219882]
(U,Lambda) = eig(full(A)) = ([-1.13064,0.132964,0.191385,0.420466,0.576633,0.64537,0.732946,0.794194,0.892868,1.94279],
[-0.109158 0.0057918 0.0269122 0.359267 -0.912118 -0.0347637 0.0862607 -0.0524436 -0.036485 -0.116466; -0.282791 0.00957156 0.0412827 0.293802 0.154965 0.032059 -0.2209 0.250639 0.650212 -0.521996; -0.0299818 0.00138622 0.00626905 0.0631077 0.0776943 -0.99222 0.049672 -0.0240445 -0.0142708 -0.0359311; -0.197119 0.00720753 0.0314054 0.238263 0.138259 0.0309651 -0.260168 0.419893 -0.734256 -0.316439; -0.120943 0.00478028 0.0210645 0.172485 0.114818 0.0296771 -0.447657 -0.83284 -0.130792 -0.173104; -0.378646 0.480832 -0.573171 -0.468559 -0.111291 -0.0162289 0.0680681 -0.0504874 -0.0431423 -0.23593; -0.244023 -0.874512 -0.25983 -0.279275 -0.0678566 -0.00995038 0.0419533 -0.0312057 -0.0267619 -0.148402; -0.287227 0.0605987 0.772867 -0.508587 -0.107019 -0.0151871 0.0621399 -0.0454906 -0.0382427 -0.196894; -0.181457 0.00781271 0.0348974 0.316432 0.268324 0.103345 0.811976 -0.236382 -0.11418 -0.234027; 0.731701 -0.00974848 -0.0390512 -0.194353 -0.0724625 -0.0122548 0.0604205 -0.0494943 -0.0487357 -0.641362])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
