>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (469.81640625 MB free)
Uptime: 7103.0 sec
Load Avg:  1.13427734375  1.626953125  1.56689453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     333304 s         56 s      35414 s     272282 s          5 s
#2  3499 MHz     157695 s         89 s      28866 s     507349 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.42.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.251336 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.70809; 0.0 0.333113 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.109922; 0.0 0.0 0.799609 0.0 0.0 0.0 0.0 0.0 0.0 0.401829; 0.0 0.0 0.0 0.561982 0.0 0.0 0.0 0.0 0.0 0.762855; 0.0 0.0 0.0 0.0 0.852844 0.0 0.0 0.0 0.0 0.386489; 0.0 0.0 0.0 0.0 0.0 0.846017 0.0 0.0 0.0 0.316335; 0.0 0.0 0.0 0.0 0.0 0.0 0.551075 0.0 0.0 0.627923; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.90391 0.0 0.283277; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.576564 0.37042; 0.70809 0.109922 0.401829 0.762855 0.386489 0.316335 0.627923 0.283277 0.37042 0.767742]
(U,Lambda) = eig(full(A)) = ([-0.816954,0.3252,0.349202,0.555299,0.574409,0.75479,0.825372,0.849053,0.896635,2.13119],
[-0.445411 0.546201 0.641371 -0.0123731 -0.0118795 0.117175 0.0463787 -0.00810573 -0.026913 -0.273774; -0.0642276 -0.79154 0.605627 -0.00262771 -0.00246914 0.0217175 0.00839574 -0.00145775 -0.00478417 -0.0444327; -0.167036 -0.0482603 -0.0790842 0.00873599 0.00967131 -0.746951 0.586424 -0.0556066 -0.101575 -0.219332; -0.371757 -0.183567 -0.317808 0.606278 -0.33273 0.329627 0.108896 -0.0181825 -0.0559091 -0.353337; -0.155538 -0.0417348 -0.0680251 0.00689917 0.00752361 -0.328383 -0.528951 0.697542 -0.216465 -0.219744; -0.127828 -0.034607 -0.0564426 0.00577947 0.00631274 -0.28889 -0.5761 -0.71299 -0.153278 -0.178902; -0.308441 -0.158394 -0.275728 -0.789622 -0.145859 0.256797 0.0860707 -0.0144186 -0.0445675 -0.288832; -0.110618 -0.0278902 -0.0452689 0.004316 0.00465979 -0.158264 -0.135613 0.0353327 0.955021 -0.167763; -0.178625 -0.0839639 -0.144421 0.092519 0.931465 0.173153 0.0559759 -0.00930135 -0.0283847 -0.17318; 0.671988 0.0569772 0.0886449 -0.00531143 -0.00542016 0.0833117 0.0375984 -0.00684225 -0.0245264 -0.72682])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
