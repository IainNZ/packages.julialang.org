>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (473.7421875 MB free)
Uptime: 6336.0 sec
Load Avg:  1.119140625  1.62744140625  1.55908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     285084 s        118 s      35306 s     248180 s          8 s
#2  3499 MHz     151186 s         44 s      26794 s     434627 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.31.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.951882 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.325369; 0.0 0.734021 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.401903; 0.0 0.0 0.242641 0.0 0.0 0.0 0.0 0.0 0.0 0.678229; 0.0 0.0 0.0 0.326896 0.0 0.0 0.0 0.0 0.0 0.456415; 0.0 0.0 0.0 0.0 0.327789 0.0 0.0 0.0 0.0 0.435915; 0.0 0.0 0.0 0.0 0.0 0.677721 0.0 0.0 0.0 0.576902; 0.0 0.0 0.0 0.0 0.0 0.0 0.702505 0.0 0.0 0.632817; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.230418 0.0 0.293787; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.326739 0.668282; 0.325369 0.401903 0.678229 0.456415 0.435915 0.576902 0.632817 0.293787 0.668282 0.869019]
(U,Lambda) = eig(full(A)) = ([-0.906529,0.232026,0.272846,0.326844,0.327567,0.542378,0.688918,0.727679,0.934088,2.24381],
[-0.11425 -0.00233269 0.0164706 4.7924e-5 -0.000234211 0.0992865 -0.0176493 0.0209642 0.970008 -0.187472; -0.159865 -0.0041319 0.029956 9.08704e-5 -0.000444371 0.26206 -0.127105 0.915465 -0.106567 -0.198155; -0.385135 -0.329765 -0.771835 -0.000741528 0.00358897 -0.282754 0.0216779 -0.0201997 -0.0520345 -0.252285; -0.241472 -0.0248289 0.29026 0.812211 0.305752 -0.264681 0.0179834 -0.0164511 -0.0398757 -0.177238; -0.23046 -0.0234925 0.272715 0.0424623 -0.880365 -0.253845 0.0172182 -0.0157473 -0.0381408 -0.169356; -0.237629 -0.00668024 0.0489789 0.000151367 -0.000740421 0.532646 0.73492 -0.166816 -0.119375 -0.274211; -0.256645 -0.00694169 0.0506269 0.000155083 -0.000758497 0.493839 -0.664347 -0.363138 -0.144959 -0.305625; -0.168622 0.942666 -0.238017 -0.000280491 0.00135903 -0.117681 0.00913987 -0.00853478 -0.0221482 -0.108618; -0.353609 -0.0364149 0.42624 -0.581816 0.362571 -0.387262 0.0263198 -0.0240782 -0.0583708 -0.25949; 0.65256 0.00516092 -0.0343738 -9.20626e-5 0.000449403 -0.12496 0.0142642 -0.0144459 -0.0530486 -0.744389])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
