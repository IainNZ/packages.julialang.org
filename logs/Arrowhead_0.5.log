>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.40625 MB free)
Uptime: 5170.0 sec
Load Avg:  1.02392578125  1.38671875  1.48583984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     252971 s         64 s      35164 s     169954 s         12 s
#2  3500 MHz     120329 s         94 s      26865 s     355190 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.1
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.558523 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.945516; 0.0 0.616951 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.57912; 0.0 0.0 0.393539 0.0 0.0 0.0 0.0 0.0 0.0 0.521501; 0.0 0.0 0.0 0.466473 0.0 0.0 0.0 0.0 0.0 0.278713; 0.0 0.0 0.0 0.0 0.808179 0.0 0.0 0.0 0.0 0.585878; 0.0 0.0 0.0 0.0 0.0 0.167903 0.0 0.0 0.0 0.334871; 0.0 0.0 0.0 0.0 0.0 0.0 0.280726 0.0 0.0 0.409444; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.3368 0.0 0.545865; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.87235 0.758472; 0.945516 0.57912 0.521501 0.278713 0.585878 0.334871 0.409444 0.545865 0.758472 0.413397]
(U,Lambda) = eig(full(A)) = ([-1.2683,0.179862,0.292051,0.358936,0.42768,0.47518,0.600921,0.741895,0.839044,2.26757],
[-0.372407 0.0866445 -0.0912557 -0.157496 -0.362083 0.322196 0.520386 0.398756 -0.11223 -0.378624; -0.221026 0.0459749 -0.0458418 -0.07462 -0.153311 0.116011 -0.843045 0.358446 -0.0868237 -0.240112; -0.225793 0.0846876 -0.132154 -0.501039 0.765372 -0.181413 0.05868 0.115772 -0.0389769 -0.190446; -0.1156 0.0337432 -0.0410958 -0.0861649 -0.35999 -0.909116 0.0483736 0.0782581 -0.0249088 -0.105904; -0.203013 0.0323557 -0.0291939 -0.0433568 -0.0771513 0.049967 -0.0659633 -0.683544 -0.632052 -0.274744; -0.167767 -0.971579 0.0693714 0.0582773 0.0645901 -0.0309504 0.0180458 0.0451171 -0.0166137 -0.109149; -0.190187 0.140859 0.929806 0.174045 0.139605 -0.0597994 0.029839 0.0686601 -0.0244184 -0.141034; -0.244697 0.120693 -0.313723 0.819803 0.300958 -0.112029 0.0482267 0.104207 -0.0361889 -0.193485; -0.25494 0.0380058 -0.0336148 -0.0491138 -0.0854656 0.0542354 -0.0652063 -0.449623 0.758252 -0.37204; 0.719522 -0.0346994 0.0257184 0.0332454 0.050106 -0.0284001 0.0233349 0.077334 -0.0332969 -0.684373])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
