>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (535.4921875 MB free)
Uptime: 6473.0 sec
Load Avg:  0.9814453125  1.34765625  1.45068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     319576 s         58 s      35336 s     219019 s          8 s
#2  3501 MHz     142356 s        100 s      26147 s     463758 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.137616 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.685074; 0.0 0.313738 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.211924; 0.0 0.0 0.276111 0.0 0.0 0.0 0.0 0.0 0.0 0.0394134; 0.0 0.0 0.0 0.123599 0.0 0.0 0.0 0.0 0.0 0.988325; 0.0 0.0 0.0 0.0 0.395333 0.0 0.0 0.0 0.0 0.943594; 0.0 0.0 0.0 0.0 0.0 0.601974 0.0 0.0 0.0 0.0657395; 0.0 0.0 0.0 0.0 0.0 0.0 0.695258 0.0 0.0 0.493836; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.18568 0.0 0.397766; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.318801 0.895358; 0.685074 0.211924 0.0394134 0.988325 0.943594 0.0657395 0.493836 0.397766 0.895358 0.482144]
(U,Lambda) = eig(full(A)) = ([-1.52299,0.132726,0.177586,0.237204,0.276206,0.314003,0.361414,0.601436,0.666924,2.28574],
[-0.282854 0.790019 0.307477 -0.367961 -0.0118977 -0.00472922 0.0858839 -0.0120568 0.0711903 -0.230594; -0.0791093 0.00660168 -0.027923 0.148115 0.0135902 -0.973693 0.124715 -0.00601298 0.0330043 -0.0777041; -0.0150203 0.00154997 -0.00717638 0.0541873 -0.998189 -0.0012665 0.0129631 -0.000988941 0.0055471 -0.0141807; -0.411534 -0.610595 0.328414 -0.465345 -0.0155878 -0.00632038 0.116598 -0.0168836 0.100054 -0.330511; -0.337252 0.020261 -0.0777393 0.31919 0.0190648 0.0141273 -0.780506 -0.0373719 0.1911 -0.360911; -0.0212112 0.000789962 -0.00277889 0.0096401 0.000485709 0.000277971 -0.00766715 0.997744 0.0556719 -0.0282303; -0.152639 0.00495014 -0.0171134 0.0576687 0.00283644 0.00157721 -0.0415021 0.0429659 -0.958685 -0.224504; -0.15961 0.0423556 -0.881571 -0.412941 -0.0105758 -0.00377434 0.0635041 -0.00780968 0.0454626 -0.136951; -0.333309 0.0271325 -0.113742 0.586944 0.050593 0.227244 0.589505 -0.0258592 0.141467 -0.329136; 0.685632 -0.00563874 0.0179394 -0.0534901 -0.0024069 -0.00121765 0.0280563 -0.0081629 0.0550038 -0.723054])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
