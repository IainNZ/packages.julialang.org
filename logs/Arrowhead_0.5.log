>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (481.234375 MB free)
Uptime: 5625.0 sec
Load Avg:  0.95166015625  1.36328125  1.49658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     261492 s         95 s      34771 s     209350 s         10 s
#2  3499 MHz     121370 s         61 s      26634 s     399804 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.23.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.956694 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.99408; 0.0 0.0749535 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.571064; 0.0 0.0 0.357881 0.0 0.0 0.0 0.0 0.0 0.0 0.031279; 0.0 0.0 0.0 0.0210329 0.0 0.0 0.0 0.0 0.0 0.454632; 0.0 0.0 0.0 0.0 0.361332 0.0 0.0 0.0 0.0 0.96462; 0.0 0.0 0.0 0.0 0.0 0.443986 0.0 0.0 0.0 0.562281; 0.0 0.0 0.0 0.0 0.0 0.0 0.682874 0.0 0.0 0.822069; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.753975 0.0 0.827482; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.59091 0.57742; 0.99408 0.571064 0.031279 0.454632 0.96462 0.562281 0.822069 0.827482 0.57742 0.694663]
(U,Lambda) = eig(full(A)) = ([-1.49352,0.0350007,0.124649,0.357885,0.41493,0.506969,0.618598,0.720856,0.880463,2.77247],
[-0.280155 0.0301398 -0.0893272 0.000186414 0.0677575 0.151632 -0.113455 0.124636 0.839947 0.388748; -0.251413 0.399432 0.859166 -0.000226647 -0.0620272 -0.0906777 0.0405333 -0.0261428 -0.045664 0.150325; -0.0116663 0.00270717 -0.010027 -0.999506 -0.0202468 -0.0143922 0.00462941 -0.00254806 -0.0038553 0.00919854; -0.207279 -0.909573 0.328051 -0.000151554 -0.042621 -0.0641795 0.0293573 -0.0192091 -0.0340729 0.11733; -0.35911 0.0826045 -0.304718 0.0314255 -0.66459 -0.454359 0.144682 -0.0793345 -0.119685 0.284082; -0.200397 0.0384195 -0.131648 0.000733317 0.714599 -0.612412 0.124257 -0.0600498 -0.0829759 0.171471; -0.260826 0.0354588 -0.110105 0.000284044 0.113295 0.320587 -0.493516 -0.639973 -0.267982 0.279354; -0.254238 0.0321626 -0.0983087 0.000234591 0.0901254 0.229809 -0.235861 0.738785 -0.421375 0.291099; -0.191287 0.0290264 -0.0925917 0.00027825 0.121164 0.471885 0.804706 -0.13139 -0.128447 0.187947; 0.690527 -0.0279451 0.0747669 -0.000112291 -0.0369272 -0.0685986 0.0385871 -0.0295688 -0.0644109 0.710084])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
