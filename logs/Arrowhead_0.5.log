>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (561.7578125 MB free)
Uptime: 6284.0 sec
Load Avg:  1.0029296875  1.6796875  1.5859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     255481 s         53 s      32956 s     283843 s          5 s
#2  3502 MHz     209624 s         89 s      24407 s     370581 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.443998 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.992852; 0.0 0.574039 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.307982; 0.0 0.0 0.357084 0.0 0.0 0.0 0.0 0.0 0.0 0.136278; 0.0 0.0 0.0 0.31011 0.0 0.0 0.0 0.0 0.0 0.204584; 0.0 0.0 0.0 0.0 0.893548 0.0 0.0 0.0 0.0 0.00598453; 0.0 0.0 0.0 0.0 0.0 0.186193 0.0 0.0 0.0 0.00388859; 0.0 0.0 0.0 0.0 0.0 0.0 0.801243 0.0 0.0 0.776508; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.164112 0.0 0.335888; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.754242 0.0242749; 0.992852 0.307982 0.136278 0.204584 0.00598453 0.00388859 0.776508 0.335888 0.0242749 0.794846]
(U,Lambda) = eig(full(A)) = ([-0.714494,0.186129,0.18717,0.315053,0.358701,0.560031,0.688381,0.754309,0.893544,2.05059],
[-0.570516 -0.0608271 0.244678 -0.181861 0.136578 -0.35845 -0.475158 0.00884455 0.00143837 0.452632; -0.159113 -0.0125431 0.0503864 -0.0280872 0.0167816 0.92104 -0.315024 0.0047227 0.000627783 0.152772; -0.0846602 -0.0125938 0.0507634 -0.0765805 -0.988763 -0.02813 -0.0481098 0.000948372 0.000165444 0.0589395; -0.132921 -0.0260694 0.105325 0.977511 -0.049402 -0.0342921 -0.0632548 0.00127316 0.000228371 0.0860934; -0.00247748 -0.000133649 0.000536223 -0.000244338 0.00013129 0.000751691 0.00341152 -0.000118812 -0.999983 0.00378833; -0.00287405 -0.967764 -0.251835 0.000712742 -0.000264492 -0.000435746 -0.000905627 1.8921e-5 3.58029e-6 0.00152764; -0.341034 -0.0199435 0.0800346 -0.0377223 0.0205883 0.134857 0.804677 -0.045735 0.00547903 0.455228; -0.254493 0.241018 -0.922 0.0525591 -0.0202538 -0.0355397 -0.0749316 0.00157321 0.000299896 0.130409; -0.0110025 -0.000675047 0.00270939 -0.00130547 0.000720105 0.00523613 0.0431075 0.998897 0.000113492 0.0137152; 0.665697 0.0157983 -0.0632925 0.0236189 -0.0117336 -0.0418915 -0.116957 0.00276433 0.00065127 0.732431])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
