>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (581.56640625 MB free)
Uptime: 6586.0 sec
Load Avg:  0.96142578125  1.7431640625  1.64404296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     312788 s         52 s      34897 s     235234 s         14 s
#2  3500 MHz     144971 s         82 s      26315 s     464793 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.9125 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.530957; 0.0 0.678872 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.18055; 0.0 0.0 0.698827 0.0 0.0 0.0 0.0 0.0 0.0 0.0638245; 0.0 0.0 0.0 0.261385 0.0 0.0 0.0 0.0 0.0 0.104567; 0.0 0.0 0.0 0.0 0.320577 0.0 0.0 0.0 0.0 0.240609; 0.0 0.0 0.0 0.0 0.0 0.328629 0.0 0.0 0.0 0.946016; 0.0 0.0 0.0 0.0 0.0 0.0 0.170192 0.0 0.0 0.0483661; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.991507 0.0 0.477448; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.68915 0.924097; 0.530957 0.18055 0.0638245 0.104567 0.240609 0.946016 0.0483661 0.477448 0.924097 0.203456]
(U,Lambda) = eig(full(A)) = ([-1.16552,0.170467,0.262018,0.321054,0.490868,0.67925,0.698781,0.854747,0.966627,1.9768],
[-0.190074 -0.00406518 0.00491637 0.00172839 -0.15934 -0.004682 0.00175183 -0.79556 -0.448031 -0.323676; -0.0728212 -0.00201759 0.00260876 0.000971481 -0.121515 0.981336 -0.0063946 0.088834 -0.0286574 -0.0902534; -0.0254668 -0.000686281 0.000880069 0.000325279 -0.0388338 -0.00670584 0.997684 0.0354218 -0.0108852 -0.0324027; -0.0545147 -0.0065341 -0.995895 -0.00337401 0.0576562 0.000514698 -0.000168576 0.0152497 -0.00677203 -0.0395496; -0.120442 -0.00910636 0.0247478 -0.97064 0.17878 0.00137977 -0.000448601 0.0389779 -0.0170101 -0.094256; -0.470996 -0.0339812 0.0855403 0.240446 0.737809 0.0055495 -0.00180216 0.155597 -0.0677237 -0.372402; -0.0269365 0.999276 -0.00317245 -0.000617246 0.0190842 0.000195419 -6.45205e-5 0.00611391 -0.00277365 -0.0173697; -0.164658 -0.00330373 0.0039421 0.00137106 -0.12067 -0.0031449 0.00115011 -0.302102 0.876457 -0.314396; -0.37065 -0.0101218 0.013031 0.00483343 -0.589705 -0.192005 -0.0676521 0.482892 -0.152108 -0.465625; 0.743898 0.00568125 -0.00602311 -0.0019253 0.126532 0.00205681 -0.00070514 0.086534 -0.0456732 -0.648809])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
