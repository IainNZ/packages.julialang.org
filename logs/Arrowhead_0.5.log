>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (468.5859375 MB free)
Uptime: 6125.0 sec
Load Avg:  0.90283203125  1.5380859375  1.51171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     274001 s         76 s      33028 s     243117 s          7 s
#2  3498 MHz     153289 s         71 s      26451 s     409403 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.281961 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.959358; 0.0 0.655367 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.178006; 0.0 0.0 0.645255 0.0 0.0 0.0 0.0 0.0 0.0 0.840935; 0.0 0.0 0.0 0.0975346 0.0 0.0 0.0 0.0 0.0 0.0662849; 0.0 0.0 0.0 0.0 0.322244 0.0 0.0 0.0 0.0 0.154125; 0.0 0.0 0.0 0.0 0.0 0.381873 0.0 0.0 0.0 0.0566899; 0.0 0.0 0.0 0.0 0.0 0.0 0.235593 0.0 0.0 0.433281; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.365736 0.0 0.146643; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.817913 0.977074; 0.959358 0.178006 0.840935 0.0662849 0.154125 0.0566899 0.433281 0.146643 0.977074 0.737186]
(U,Lambda) = eig(full(A)) = ([-1.06617,0.0980454,0.242587,0.321133,0.36331,0.381455,0.461352,0.654917,0.732064,2.35197],
[-0.483543 0.0401394 -0.365478 -0.173547 0.190269 -0.0706378 -0.654986 -0.00634304 0.138919 -0.333684; -0.0702595 0.00245776 -0.00646854 0.00377394 -0.00983335 0.00476077 0.11237 0.976558 0.151269 -0.0755408; -0.33388 0.0118255 -0.031326 0.018385 -0.0481207 0.0233529 0.560045 -0.214614 0.631382 -0.354755; -0.0387042 -0.998719 0.00685453 -0.00210066 0.00402378 -0.00171029 -0.0223142 -0.000293248 0.00680858 -0.0211692; -0.0754292 0.00528992 -0.029023 0.983568 0.0605513 -0.0190685 -0.135697 -0.00114242 0.0245116 -0.0546715; -0.0266018 0.00153695 -0.00610506 0.00661368 -0.0492703 0.994288 -0.0873583 -0.000511973 0.010551 -0.0207179; -0.226164 0.0242397 0.92913 -0.0358928 0.0547337 -0.021761 -0.235058 -0.00254796 0.0568812 -0.147402; -0.0695878 0.00421539 -0.0178616 0.0232975 -0.975098 -0.0683408 -0.187837 -0.00125045 0.0260906 -0.0531566; -0.352382 0.0104444 -0.0254743 0.0139371 -0.034676 0.0163997 0.335616 0.0147817 -0.741791 -0.458578; 0.679494 -0.00769501 0.0149999 -0.00708614 0.0161337 -0.00732575 -0.122476 -0.00246589 0.0651768 -0.719989])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
