>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (657.8671875 MB free)
Uptime: 6182.0 sec
Load Avg:  0.95556640625  1.67333984375  1.546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     249876 s        101 s      31025 s     278021 s          2 s
#2  3498 MHz     181425 s         54 s      22883 s     390251 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.974014 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.987997; 0.0 0.104361 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0193058; 0.0 0.0 0.685812 0.0 0.0 0.0 0.0 0.0 0.0 0.123195; 0.0 0.0 0.0 0.98941 0.0 0.0 0.0 0.0 0.0 0.901647; 0.0 0.0 0.0 0.0 0.904691 0.0 0.0 0.0 0.0 0.385873; 0.0 0.0 0.0 0.0 0.0 0.775189 0.0 0.0 0.0 0.301707; 0.0 0.0 0.0 0.0 0.0 0.0 0.818 0.0 0.0 0.664105; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.98587 0.0 0.170127; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0239502 0.452402; 0.987997 0.0193058 0.123195 0.901647 0.385873 0.301707 0.664105 0.170127 0.452402 0.422797]
(U,Lambda) = eig(full(A)) = ([-1.04128,0.0982695,0.10596,0.687163,0.77941,0.847309,0.911675,0.982303,0.986054,2.32723],
[-0.362923 -0.156821 0.0846005 0.0376276 -0.0686842 0.298891 -0.267852 0.659906 -0.0852559 -0.476002; -0.0124749 -0.440514 -0.89764 -0.00036189 0.000386907 -0.000996052 0.000404155 0.000121751 -2.27504e-5 -0.00566233; -0.052805 -0.0291461 0.0157921 -0.996221 0.0178065 -0.0292402 0.00921827 0.00230054 -0.000426323 -0.0489321; -0.328693 -0.140643 0.075861 0.0325898 -0.0580857 0.243214 -0.196028 -0.702426 0.279169 -0.4394; -0.146793 -0.0665133 0.0359093 0.0193792 -0.0416687 0.257759 0.933879 0.0275274 -0.0049276 -0.176848; -0.122958 -0.0619549 0.0335101 0.0374438 0.967098 -0.160356 0.0373595 0.0080654 -0.00148662 -0.126737; -0.264417 -0.128261 0.0693261 0.0554515 -0.232816 -0.868547 0.119816 0.022379 -0.00410587 -0.286881; -0.0621276 -0.026643 0.0143714 0.00622208 -0.0111478 0.0470634 -0.0387525 -0.264112 -0.956426 -0.0826891; -0.314398 0.846156 -0.410037 -0.00745213 0.00810152 -0.0210614 0.00861287 0.00261366 -0.000488564 -0.128056; 0.74028 0.139004 -0.07433 -0.0109247 0.0135286 -0.0383311 0.0169006 0.00553668 -0.00103901 -0.651958])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
