>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (613.55078125 MB free)
Uptime: 6387.0 sec
Load Avg:  1.03564453125  1.779296875  1.65625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     301130 s         78 s      37305 s     219758 s          2 s
#2  3500 MHz     138046 s         63 s      27334 s     450392 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.177983 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.36048; 0.0 0.129961 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.904078; 0.0 0.0 0.814739 0.0 0.0 0.0 0.0 0.0 0.0 0.961558; 0.0 0.0 0.0 0.334684 0.0 0.0 0.0 0.0 0.0 0.594285; 0.0 0.0 0.0 0.0 0.392222 0.0 0.0 0.0 0.0 0.164578; 0.0 0.0 0.0 0.0 0.0 0.0795807 0.0 0.0 0.0 0.276238; 0.0 0.0 0.0 0.0 0.0 0.0 0.117746 0.0 0.0 0.992974; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.283144 0.0 0.317975; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.463784 0.886731; 0.36048 0.904078 0.961558 0.594285 0.164578 0.276238 0.992974 0.317975 0.886731 0.336548]
(U,Lambda) = eig(full(A)) = ([-1.71637,0.0811061,0.124289,0.173642,0.261167,0.300791,0.38482,0.403996,0.696822,2.42013],
[-0.133961 0.0202101 -0.0304716 -0.947346 -0.212485 0.10812 -0.0613488 0.0693813 -0.072547 0.112133; -0.34471 0.10051 -0.72349 0.236128 -0.337861 0.194936 -0.12487 0.143514 -0.166533 0.27533; -0.267438 0.00711876 -0.00632095 -0.0171114 0.08517 -0.0689141 0.0787306 -0.101836 0.851476 0.417744; -0.203974 0.0127289 -0.0128203 -0.0421005 0.396359 -0.645849 -0.417251 0.372976 -0.171353 0.198752; -0.0549462 0.00287314 -0.00278795 -0.00859003 0.0615746 -0.0663023 0.782681 0.608052 -0.0564175 0.056603; -0.10828 -0.983535 0.0280436 0.0335048 -0.0745909 0.045997 -0.0318563 0.0370405 -0.0467304 0.0823153; -0.381127 0.147196 0.688761 0.20267 -0.339477 0.199816 -0.130876 0.150899 -0.17905 0.300799; -0.111951 0.0085481 -0.00908516 -0.0331288 0.709433 0.663693 -0.110084 0.114454 -0.0802605 0.103778; -0.286327 0.0125854 -0.0118549 -0.034867 0.214585 -0.200389 0.395292 -0.645172 -0.397317 0.316127; 0.703977 -0.00543135 0.00453878 0.0114086 -0.0490326 0.0368342 -0.0352009 0.0435007 -0.104417 0.697453])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
