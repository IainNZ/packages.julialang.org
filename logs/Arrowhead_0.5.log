>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.19140625 MB free)
Uptime: 5988.0 sec
Load Avg:  0.93408203125  1.404296875  1.58740234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     247284 s        102 s      35228 s     258784 s          8 s
#2  3500 MHz     142874 s         40 s      25846 s     411105 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.623273 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.671119; 0.0 0.838995 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.567642; 0.0 0.0 0.122906 0.0 0.0 0.0 0.0 0.0 0.0 0.0491557; 0.0 0.0 0.0 0.744056 0.0 0.0 0.0 0.0 0.0 0.596132; 0.0 0.0 0.0 0.0 0.524528 0.0 0.0 0.0 0.0 0.84012; 0.0 0.0 0.0 0.0 0.0 0.0552326 0.0 0.0 0.0 0.34155; 0.0 0.0 0.0 0.0 0.0 0.0 0.241176 0.0 0.0 0.819266; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.66171 0.0 0.0683679; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.308617 0.663134; 0.671119 0.567642 0.0491557 0.596132 0.84012 0.34155 0.819266 0.0683679 0.663134 0.463375]
(U,Lambda) = eig(full(A)) = ([-1.29065,0.0686631,0.123155,0.277058,0.399849,0.584975,0.66137,0.706468,0.812047,2.24094],
[-0.246786 0.0462368 0.00679853 0.0617871 -0.25326 0.759077 0.0873842 0.421803 0.152013 0.289992; -0.187591 0.0281561 0.00401741 0.0321981 -0.108984 0.0967985 -0.0158522 -0.223961 -0.900669 0.283021; -0.0244741 0.0346264 -0.99878 -0.0101641 0.0149651 -0.00460818 0.000452832 0.00440445 0.00304992 0.0162224; -0.206199 0.0337258 0.00486416 0.0406885 -0.146022 0.162325 -0.0357624 -0.829259 0.374901 0.278375; -0.325738 0.0704177 0.0106043 0.108209 -0.568128 -0.602044 0.0304538 0.241445 0.124939 0.342133; -0.178605 -0.971708 -0.0254758 -0.049078 0.0835631 -0.0279288 0.00279514 0.0274234 0.0192969 0.109229; -0.37641 0.18146 0.0351686 -0.727766 0.435329 -0.103225 0.00967154 0.0920672 0.0613636 0.286366; -0.0246455 0.00440493 0.000643146 0.00566537 -0.0220129 0.0385939 -0.994833 0.0798723 0.0194452 0.030261; -0.291827 0.105596 0.0181148 0.669759 0.612844 -0.103942 0.00932505 0.0871539 0.056323 0.239882; 0.703796 -0.0382099 -0.00506626 -0.0318746 0.0843134 -0.0433174 0.00496043 0.0522884 0.0427586 0.698997])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
