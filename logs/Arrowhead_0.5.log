>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (587.953125 MB free)
Uptime: 6584.0 sec
Load Avg:  1.0029296875  1.6962890625  1.662109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315854 s         63 s      37573 s     236704 s         10 s
#2  3500 MHz     151051 s         90 s      26320 s     458577 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.252649 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.122587; 0.0 0.439757 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.858364; 0.0 0.0 0.550077 0.0 0.0 0.0 0.0 0.0 0.0 0.0153542; 0.0 0.0 0.0 0.333742 0.0 0.0 0.0 0.0 0.0 0.544677; 0.0 0.0 0.0 0.0 0.541801 0.0 0.0 0.0 0.0 0.684034; 0.0 0.0 0.0 0.0 0.0 0.153528 0.0 0.0 0.0 0.0329501; 0.0 0.0 0.0 0.0 0.0 0.0 0.110638 0.0 0.0 0.582802; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.289833 0.0 0.845583; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.468738 0.571441; 0.122587 0.858364 0.0153542 0.544677 0.684034 0.0329501 0.582802 0.845583 0.571441 0.349439]
(U,Lambda) = eig(full(A)) = ([-1.34704,0.141469,0.153812,0.253189,0.317133,0.373645,0.460127,0.519593,0.550073,2.0682],
[-0.0541988 0.0536889 -0.010615 0.993928 0.041289 -0.0445879 0.00744564 0.0131676 -8.78837e-5 0.0474532; -0.339763 0.14012 -0.0256911 -0.0201705 -0.152033 0.571394 0.531018 0.308284 -0.0016591 0.370449; -0.00572419 0.00182972 -0.000331616 -0.000226735 -0.00143159 0.00382997 -0.00215109 -0.0144428 0.999842 0.00710804; -0.229197 0.137939 -0.0259077 -0.0296443 -0.712245 -0.600731 0.0543094 0.0840342 -0.00053686 0.220702; -0.256131 0.0831998 -0.0150887 -0.0103907 -0.0661271 0.179024 -0.105542 -0.883218 -0.0176307 0.314948; -0.0155304 0.133052 0.990877 0.00144948 0.00437425 -0.00658791 0.0013543 0.00258095 -1.77176e-5 0.0120946; -0.282774 -0.920441 0.115528 0.0179239 0.0612992 -0.097521 0.0210144 0.0408627 -0.000282792 0.209236; -0.365361 0.277519 -0.053204 -0.101167 0.672728 -0.444012 0.062573 0.105527 -0.000692823 0.334168; -0.222582 0.085022 -0.0155295 -0.0116227 -0.0818654 0.264465 -0.836273 0.322192 -0.00149807 0.251089; 0.707264 -0.0486928 0.00855841 0.00438412 0.0217192 -0.0440093 0.0126017 0.0286736 -0.000213226 0.702798])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
