>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (633.13671875 MB free)
Uptime: 6707.0 sec
Load Avg:  0.91845703125  1.5673828125  1.5546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     299932 s         51 s      35813 s     263092 s          9 s
#2  3507 MHz     165649 s         90 s      26331 s     461753 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.713771 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.642416; 0.0 0.687654 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.576432; 0.0 0.0 0.766717 0.0 0.0 0.0 0.0 0.0 0.0 0.292556; 0.0 0.0 0.0 0.915817 0.0 0.0 0.0 0.0 0.0 0.10493; 0.0 0.0 0.0 0.0 0.914415 0.0 0.0 0.0 0.0 0.522114; 0.0 0.0 0.0 0.0 0.0 0.376629 0.0 0.0 0.0 0.113136; 0.0 0.0 0.0 0.0 0.0 0.0 0.331956 0.0 0.0 0.591058; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.699082 0.0 0.507795; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.669464 0.827777; 0.642416 0.576432 0.292556 0.10493 0.522114 0.113136 0.591058 0.507795 0.827777 0.254085]
(U,Lambda) = eig(full(A)) = ([-1.11628,0.371686,0.392151,0.679558,0.694326,0.707322,0.762936,0.884424,0.915765,2.0377],
[-0.262842 0.0679094 0.152468 0.165681 -0.227494 -0.810854 -0.163651 0.196315 0.00156055 -0.317876; -0.23926 0.065971 0.148899 0.628273 0.594824 0.238568 -0.0958987 0.15277 0.00123994 -0.279708; -0.116333 0.026781 0.0596194 0.0296173 -0.0278279 -0.040095 0.969225 0.129615 0.000963121 -0.150791; -0.0386631 0.00697338 0.0152951 0.00391884 -0.00326208 -0.00409668 0.00859615 -0.174306 -0.981819 -0.0612714; -0.192514 0.034788 0.07631 0.0196159 -0.016335 -0.0205224 0.043169 -0.907871 0.189793 -0.304496; -0.0567426 0.827702 -0.556351 -0.00329538 0.0024521 0.00278487 -0.00366798 0.0116188 0.000102968 -0.0446189; -0.305585 -0.53797 -0.749503 -0.0150035 0.0112313 0.0128175 -0.0171764 0.0557921 0.000496773 -0.226998; -0.209444 0.0560871 0.126286 0.229494 -0.735283 0.501637 -0.0995995 0.142878 0.00114991 -0.248507; -0.347085 0.100524 0.22785 -0.723577 0.229254 0.177985 -0.110915 0.200819 0.00164909 -0.396331; 0.74876 -0.0361616 -0.0763319 -0.00882362 0.00688575 0.00814009 -0.0125245 0.0521495 0.000490681 -0.6551])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
