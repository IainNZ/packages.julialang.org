>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (534.98828125 MB free)
Uptime: 6501.0 sec
Load Avg:  0.99169921875  1.3681640625  1.48193359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     309116 s         16 s      32546 s     228433 s         12 s
#2  3500 MHz     156947 s        157 s      24850 s     438821 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.69813 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.566585; 0.0 0.0801543 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.20565; 0.0 0.0 0.586088 0.0 0.0 0.0 0.0 0.0 0.0 0.240735; 0.0 0.0 0.0 0.191387 0.0 0.0 0.0 0.0 0.0 0.780206; 0.0 0.0 0.0 0.0 0.34245 0.0 0.0 0.0 0.0 0.186463; 0.0 0.0 0.0 0.0 0.0 0.60885 0.0 0.0 0.0 0.117787; 0.0 0.0 0.0 0.0 0.0 0.0 0.0564693 0.0 0.0 0.957454; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.964423 0.0 0.90135; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.891214 0.660276; 0.566585 0.20565 0.240735 0.780206 0.186463 0.117787 0.957454 0.90135 0.660276 0.696893]
(U,Lambda) = eig(full(A)) = ([-1.25225,0.078904,0.134329,0.335217,0.479594,0.59832,0.614735,0.765921,0.920324,2.44097],
[-0.194508 -0.00538005 0.0531346 0.0584091 -0.442982 -0.23897 0.292989 0.745915 0.0830399 -0.231161; -0.103343 -0.967066 -0.20071 -0.0301647 0.0879671 0.0167074 -0.0165898 0.026764 0.00797105 -0.0619402; -0.0876808 -0.0027909 0.0281754 0.035901 -0.386241 0.828473 -0.362396 0.119472 0.0234553 -0.0922846; -0.361861 -0.0407842 0.722988 -0.202945 0.462539 0.0807117 -0.0794763 0.121197 0.0348557 -0.246612; -0.0782899 -0.00416014 0.0473714 0.96446 0.232306 0.0306778 -0.0295322 0.0392979 0.0105079 -0.0631811; -0.042376 -0.00130689 0.0131245 0.0161045 -0.155701 -0.470891 -0.863174 0.0669271 0.0123149 -0.0457143; -0.489849 0.25094 -0.650193 -0.128507 0.386628 0.0743855 -0.073961 0.120446 0.0360937 -0.285514; -0.272259 -0.00598503 0.0574122 0.0535943 -0.31765 -0.103643 0.111158 -0.405255 -0.665604 -0.434064; -0.206253 -0.00477941 0.0461247 0.0444294 -0.274077 -0.0948998 0.102989 -0.470324 0.738662 -0.302949; 0.669562 0.00587991 -0.0528735 -0.0374126 0.170861 0.0420969 -0.0431247 0.0892481 0.0325652 -0.711059])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
