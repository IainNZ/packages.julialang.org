>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (555.58203125 MB free)
Uptime: 6607.0 sec
Load Avg:  1.0029296875  1.36572265625  1.48193359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     348760 s         63 s      32371 s     186333 s          8 s
#2  3499 MHz     110626 s         86 s      27254 s     504335 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.332003 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0197752; 0.0 0.0706388 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.862496; 0.0 0.0 0.0445411 0.0 0.0 0.0 0.0 0.0 0.0 0.821547; 0.0 0.0 0.0 0.0800239 0.0 0.0 0.0 0.0 0.0 0.538853; 0.0 0.0 0.0 0.0 0.180351 0.0 0.0 0.0 0.0 0.448314; 0.0 0.0 0.0 0.0 0.0 0.33001 0.0 0.0 0.0 0.502052; 0.0 0.0 0.0 0.0 0.0 0.0 0.0519365 0.0 0.0 0.776672; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.113085 0.0 0.968855; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.573663 0.20685; 0.0197752 0.862496 0.821547 0.538853 0.448314 0.502052 0.776672 0.968855 0.20685 0.352182]
(U,Lambda) = eig(full(A)) = ([-1.71398,0.0478312,0.060721,0.0776263,0.0985203,0.174457,0.313401,0.332,0.568295,2.16956],
[-0.00660513 0.000219959 0.000527478 0.000298017 0.0010289 -0.00159043 0.0338314 -0.999371 0.00215742 -0.00784147; -0.330273 0.11953 0.629276 -0.473192 -0.375793 0.105265 -0.113069 0.000463917 0.0446775 -0.299418; -0.319262 -0.789279 -0.367419 -0.0951912 -0.18489 0.0801256 -0.0972464 0.000401774 0.0404359 -0.2817; -0.205262 0.0529072 0.201999 0.86155 -0.353908 0.0723015 -0.0734817 0.000300632 0.0284493 -0.187905; -0.161729 0.0106931 0.0271173 0.0167304 0.0665541 -0.96381 -0.107234 0.000415591 0.0297903 -0.164217; -0.167854 0.00562377 0.0134907 0.0076258 0.0263466 -0.0408952 0.961994 0.0354559 0.0543142 -0.198863; -0.300559 0.597989 -0.639772 -0.115898 -0.202539 0.0803211 -0.0945348 0.000389857 0.0387747 -0.267243; -0.362382 0.0469304 0.133884 0.104745 0.808098 0.200028 -0.153925 0.000622168 0.0548667 -0.343283; -0.0617915 0.0012434 0.00291803 0.00159859 0.00528856 -0.00656535 0.0252935 -0.000120329 -0.993247 -0.0944424; 0.68338 -0.00316084 -0.00723609 -0.00383352 -0.0121481 0.0126707 -0.0318249 0.000140581 0.0257787 -0.728649])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
