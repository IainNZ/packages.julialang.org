>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (553.24609375 MB free)
Uptime: 6052.0 sec
Load Avg:  1.01416015625  1.64013671875  1.59814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315394 s         60 s      36310 s     177637 s          9 s
#2  3500 MHz     139040 s         96 s      27647 s     419805 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.76727 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.900689; 0.0 0.41115 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.364598; 0.0 0.0 0.741689 0.0 0.0 0.0 0.0 0.0 0.0 0.454323; 0.0 0.0 0.0 0.927701 0.0 0.0 0.0 0.0 0.0 0.732604; 0.0 0.0 0.0 0.0 0.245986 0.0 0.0 0.0 0.0 0.918739; 0.0 0.0 0.0 0.0 0.0 0.572307 0.0 0.0 0.0 0.419858; 0.0 0.0 0.0 0.0 0.0 0.0 0.636866 0.0 0.0 0.879283; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.947565 0.0 0.00472246; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.956162 0.295776; 0.900689 0.364598 0.454323 0.732604 0.918739 0.419858 0.879283 0.00472246 0.295776 0.483388]
(U,Lambda) = eig(full(A)) = ([-1.35367,0.343003,0.437155,0.581922,0.69222,0.74761,0.883487,0.947564,0.953266,2.45753],
[-0.303172 -0.179924 -0.168582 0.103305 0.531006 0.509661 -0.397755 -0.000897205 -0.0455662 -0.366898; -0.147488 -0.453436 0.866306 -0.0453871 -0.0573945 -0.0120549 -0.0396163 -0.000122071 -0.00632843 -0.122674; -0.154792 -0.0965797 -0.0921784 0.0604521 0.406351 -0.85367 -0.16444 -0.000396334 -0.0202055 -0.18231; -0.229254 -0.106192 -0.0922763 0.0450406 0.137652 0.0452543 0.850385 -0.00662419 -0.269647 -0.329724; -0.410023 0.802604 0.296946 -0.0581394 -0.0910961 -0.020375 -0.0739644 -0.000235188 -0.0122229 -0.286036; -0.15563 -0.155183 -0.191947 -0.928293 -0.154919 -0.0266439 -0.0692472 -0.000200943 -0.0103704 -0.153343; -0.315356 -0.253593 -0.272037 0.34021 -0.702818 -0.0883264 -0.182982 -0.000508263 -0.0261496 -0.332524; -0.00146504 -0.000662034 -0.000571677 0.000274566 0.0008183 0.000262736 0.00378243 0.999958 -0.00779366 -0.0021534; -0.0914167 -0.040883 -0.035212 0.0168015 0.0495821 0.0157773 0.208875 0.00617798 0.961081 -0.135644; 0.71391 0.0847526 0.0617877 -0.0212586 -0.0442456 -0.0111246 -0.0513229 -0.000179597 -0.00940965 -0.688532])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
