>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (507.140625 MB free)
Uptime: 5652.0 sec
Load Avg:  0.88525390625  1.34912109375  1.46728515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     230854 s         57 s      33024 s     250597 s          8 s
#2  3507 MHz     141701 s         95 s      26029 s     380573 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.23.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.198588 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.15081; 0.0 0.794586 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.430596; 0.0 0.0 0.732407 0.0 0.0 0.0 0.0 0.0 0.0 0.242019; 0.0 0.0 0.0 0.488882 0.0 0.0 0.0 0.0 0.0 0.394704; 0.0 0.0 0.0 0.0 0.74012 0.0 0.0 0.0 0.0 0.713656; 0.0 0.0 0.0 0.0 0.0 0.380236 0.0 0.0 0.0 0.232559; 0.0 0.0 0.0 0.0 0.0 0.0 0.533692 0.0 0.0 0.856226; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.761862 0.0 0.569161; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.472516 0.605478; 0.15081 0.430596 0.242019 0.394704 0.713656 0.232559 0.856226 0.569161 0.605478 0.683941]
(U,Lambda) = eig(full(A)) = ([-0.909849,0.202451,0.384381,0.481829,0.500888,0.644817,0.733128,0.753872,0.788111,2.2072],
[-0.0947298 0.99355 0.0142337 0.00608676 -0.0105422 0.0255018 0.000802403 -0.00303074 -0.00356441 -0.0534968; -0.175896 -0.0185076 -0.0184071 -0.0157389 0.0309819 -0.216944 -0.0199265 0.118021 0.926612 -0.21719; -0.102607 -0.0116228 -0.0121943 -0.0110413 0.0220903 -0.208495 0.954956 -0.12582 -0.0605369 -0.116926; -0.196474 -0.0350714 -0.0662321 -0.639727 -0.694715 0.190997 0.00459608 -0.0166217 -0.0183792 -0.163667; -0.301148 -0.0337812 -0.0351783 -0.0315858 0.063039 -0.565044 -0.290279 -0.579103 -0.207198 -0.3466; -0.125511 -0.0332919 0.983898 0.0261688 -0.0407322 0.0663242 0.00187428 -0.00694573 -0.00794446 -0.0906978; -0.412978 -0.0657879 -0.100558 -0.188732 0.551582 0.581396 0.0122103 -0.0433954 -0.0468917 -0.364548; -0.237051 -0.0258944 -0.0264398 -0.0232348 0.046087 -0.36693 -0.0563358 0.794961 -0.302115 -0.280582; -0.30496 -0.05706 -0.120467 0.743216 -0.450961 0.26516 0.00660764 -0.0240146 -0.0267317 -0.248698; 0.696254 0.0254508 0.0175355 0.0114317 -0.0211319 0.0754568 0.00284409 -0.0111592 -0.0139335 -0.712515])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
