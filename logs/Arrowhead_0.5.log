>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (464.8828125 MB free)
Uptime: 5182.0 sec
Load Avg:  1.0078125  1.5576171875  1.498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     277646 s        118 s      35200 s     144758 s          6 s
#2  3504 MHz     102417 s         39 s      24596 s     378341 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.29.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.911506 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.306136; 0.0 0.976161 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.361595; 0.0 0.0 0.70827 0.0 0.0 0.0 0.0 0.0 0.0 0.075179; 0.0 0.0 0.0 0.0755959 0.0 0.0 0.0 0.0 0.0 0.62344; 0.0 0.0 0.0 0.0 0.840738 0.0 0.0 0.0 0.0 0.491499; 0.0 0.0 0.0 0.0 0.0 0.562698 0.0 0.0 0.0 0.538896; 0.0 0.0 0.0 0.0 0.0 0.0 0.664727 0.0 0.0 0.521082; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.670799 0.0 0.0370895; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.918256 0.618491; 0.306136 0.361595 0.075179 0.62344 0.491499 0.538896 0.521082 0.0370895 0.618491 0.461497]
(U,Lambda) = eig(full(A)) = ([-0.840919,0.228815,0.604723,0.670768,0.706953,0.740998,0.86855,0.912885,0.966246,1.93123],
[-0.123158 0.092489 0.0627059 -0.0010656 -0.0254638 -0.174975 0.306483 -0.887086 0.142101 -0.200087; -0.140293 0.0997931 0.0611731 -0.000992171 -0.0228533 -0.149851 0.144503 0.022832 -0.926587 -0.252333; -0.034212 0.0323406 0.0456231 -0.00167982 -0.971309 0.223864 -0.020171 -0.00146799 0.00740462 -0.0409704; -0.479558 -0.839234 -0.0740388 0.000877762 0.016801 0.0913097 -0.033811 -0.00297497 0.0177858 -0.223918; -0.20605 0.165663 0.13086 -0.00242311 -0.0625073 -0.48024 -0.75997 -0.0272188 0.0995035 -0.300391; -0.270671 0.332897 -0.805786 0.00417855 0.0635608 0.294551 -0.0757712 -0.00614848 0.0339309 -0.262444; -0.243989 0.246551 0.5457 0.0722834 0.209961 0.665813 -0.109942 -0.00838959 0.0439114 -0.274212; -0.0172968 0.0173079 0.0352724 -0.997367 0.0174545 0.0514903 -0.0080657 -0.000612131 0.00318975 -0.0196118; -0.247862 0.185027 0.123958 -0.00209413 -0.0498016 -0.340043 0.535107 0.460088 0.327468 -0.406932; 0.704995 -0.206253 -0.0628383 0.000837962 0.0170144 0.0974554 -0.0430043 -0.00399543 0.0254089 -0.666479])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
