>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.15625 MB free)
Uptime: 5338.0 sec
Load Avg:  0.84130859375  1.35009765625  1.46533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     258889 s         90 s      35557 s     180858 s         11 s
#2  3499 MHz     113168 s         66 s      27012 s     381166 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.9.0
2 additional packages:
 - Compat                        0.23.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.418371 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.45913; 0.0 0.626804 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.222191; 0.0 0.0 0.810001 0.0 0.0 0.0 0.0 0.0 0.0 0.312538; 0.0 0.0 0.0 0.0950565 0.0 0.0 0.0 0.0 0.0 0.9537; 0.0 0.0 0.0 0.0 0.0437248 0.0 0.0 0.0 0.0 0.664781; 0.0 0.0 0.0 0.0 0.0 0.404174 0.0 0.0 0.0 0.247899; 0.0 0.0 0.0 0.0 0.0 0.0 0.347006 0.0 0.0 0.0603357; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.714927 0.0 0.867617; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.321816 0.949083; 0.45913 0.222191 0.312538 0.9537 0.664781 0.247899 0.0603357 0.867617 0.949083 0.90238]
(U,Lambda) = eig(full(A)) = ([-1.27505,0.0586156,0.21048,0.346902,0.3939,0.409453,0.5907,0.63966,0.802715,2.50689],
[-0.174475 0.0245781 -0.170362 -0.0110258 -0.55746 -0.72827 0.247107 -0.0973061 -0.0270619 0.165557; -0.0751815 0.00753101 -0.0411686 -0.00136241 -0.0283445 -0.0144605 -0.570791 -0.81058 -0.0286138 0.089002; -0.0964602 0.0080105 -0.0402134 -0.00115829 -0.0223164 -0.0110374 -0.132181 0.0860492 0.971739 0.138708; -0.447939 0.504014 0.637368 0.00649931 0.0948173 0.0429097 0.178465 -0.082129 -0.0305303 0.297794; -0.324392 -0.859765 0.307519 0.00376333 0.0564044 0.0257124 0.112725 -0.0523172 -0.019842 0.203253; -0.095001 0.0138157 -0.0987258 -0.00742884 -0.716901 0.66432 0.123267 -0.0493713 -0.0140911 0.0887863; -0.0239371 0.00402916 -0.0340904 -0.997762 0.0382272 0.0136674 0.0229635 -0.00966907 -0.00299937 0.0210376; -0.280571 0.0254588 -0.132674 -0.00404613 -0.0802983 -0.0401767 -0.647771 0.540614 -0.22389 0.364629; -0.382471 0.0694446 -0.657569 0.0649323 0.391186 0.153193 0.327377 -0.140041 -0.0447089 0.327107; 0.643522 -0.0192584 0.0771387 0.00171629 0.0297112 0.0141456 0.0927491 -0.0468991 -0.0226539 0.753099])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
