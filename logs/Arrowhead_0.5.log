>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (575.8984375 MB free)
Uptime: 6616.0 sec
Load Avg:  1.0478515625  1.67822265625  1.60498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     292118 s         58 s      32538 s     268447 s          8 s
#2  3498 MHz     169544 s         92 s      27505 s     445416 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.776534 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.300186; 0.0 0.697231 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.655348; 0.0 0.0 0.0185925 0.0 0.0 0.0 0.0 0.0 0.0 0.129375; 0.0 0.0 0.0 0.457909 0.0 0.0 0.0 0.0 0.0 0.828012; 0.0 0.0 0.0 0.0 0.358361 0.0 0.0 0.0 0.0 0.953575; 0.0 0.0 0.0 0.0 0.0 0.567495 0.0 0.0 0.0 0.739899; 0.0 0.0 0.0 0.0 0.0 0.0 0.413516 0.0 0.0 0.612061; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.31847 0.0 0.344907; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.29297 0.0456798; 0.300186 0.655348 0.129375 0.828012 0.953575 0.739899 0.612061 0.344907 0.0456798 0.806083]
(U,Lambda) = eig(full(A)) = ([-1.15341,0.0211285,0.293043,0.321696,0.390081,0.432737,0.532209,0.664532,0.770259,2.43488],
[-0.104462 -0.00776078 0.00099324 -0.00597477 -0.018401 0.018176 0.0485079 0.11977 0.976634 0.133451; -0.237827 -0.0189302 0.00259383 -0.0157983 -0.0505441 0.0515783 0.156791 0.895626 -0.183217 0.278046; -0.074137 0.996307 -0.000754118 0.00386408 0.00825002 -0.00650292 -0.00994494 -0.00895046 -0.00351407 0.0394738; -0.345118 -0.0370227 0.00803447 -0.0550308 -0.289183 0.684743 -0.439987 -0.179079 -0.0541229 0.308776; -0.423625 -0.0552231 0.0233548 -0.235449 0.712152 -0.266888 -0.216559 -0.13918 -0.0472661 0.338553; -0.288754 -0.0264474 0.00431279 -0.0272508 -0.0987945 0.114295 0.827861 -0.34074 -0.0745019 0.29211; -0.262337 -0.0304632 0.00812753 -0.0603459 -0.618698 -0.662853 -0.203591 -0.108963 -0.0350287 0.223232; -0.157377 -0.0226538 0.0216999 0.967761 0.114097 -0.0628333 -0.0637101 -0.0445384 -0.0155866 0.120146; -0.0212107 -0.00328174 -0.999412 0.0143955 0.0111431 -0.00680343 -0.00753845 -0.00549388 -0.00195401 0.0157228; 0.671601 0.0195297 -0.00159975 0.00905288 0.0236891 -0.0208166 -0.0394812 -0.0446875 -0.0204167 0.737238])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
