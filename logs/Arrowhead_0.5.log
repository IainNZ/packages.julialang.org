>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (454.3359375 MB free)
Uptime: 4735.0 sec
Load Avg:  1.01806640625  1.37939453125  1.5029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     228305 s        104 s      32377 s     162653 s          6 s
#2  3499 MHz     124428 s         40 s      25410 s     308822 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.11.0
2 additional packages:
 - Compat                        0.25.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.306905 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.317145; 0.0 0.0824918 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0969325; 0.0 0.0 0.908941 0.0 0.0 0.0 0.0 0.0 0.0 0.117039; 0.0 0.0 0.0 0.0976536 0.0 0.0 0.0 0.0 0.0 0.161592; 0.0 0.0 0.0 0.0 0.269952 0.0 0.0 0.0 0.0 0.628592; 0.0 0.0 0.0 0.0 0.0 0.952035 0.0 0.0 0.0 0.326247; 0.0 0.0 0.0 0.0 0.0 0.0 0.468482 0.0 0.0 0.98874; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.387637 0.0 0.236054; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.590568 0.384576; 0.317145 0.0969325 0.117039 0.161592 0.628592 0.326247 0.98874 0.236054 0.384576 0.219021]
(U,Lambda) = eig(full(A)) = ([-1.03295,0.0837495,0.102342,0.295362,0.336814,0.393394,0.576363,0.896704,0.923566,1.70834],
[-0.173334 0.0181999 -0.0440617 0.731737 0.630314 0.0841334 0.0409485 -0.0461575 0.0360197 -0.15088; -0.0636365 -0.987007 0.138783 -0.012127 0.0226561 0.00715353 0.00682854 -0.0102193 0.0080717 -0.03975; -0.0441355 0.00181632 -0.00412384 0.00507993 -0.0121601 -0.00520879 -0.0122435 0.820981 0.560484 -0.0976144; -0.104663 0.148832 0.979566 -0.0217668 0.0401636 0.0125368 0.0117441 -0.0173594 0.013703 -0.0668895; -0.353298 0.0432316 -0.106585 -0.658824 0.55885 0.116837 0.0713735 -0.0860919 0.0673562 -0.291367; -0.120357 0.00481175 -0.0109123 0.0132311 -0.0315221 -0.0133995 -0.0302141 0.50614 -0.802631 -0.287605; -0.482237 0.0329111 -0.0767476 0.152102 -0.446375 -0.302127 0.318868 -0.198199 0.152167 -0.53169; -0.121682 0.00994758 -0.0235151 0.068128 -0.276086 0.940769 0.0435164 -0.0398039 0.0308485 -0.119167; -0.173464 0.00971738 -0.0223868 0.0346942 -0.0900884 -0.0447517 -0.941914 -0.107834 0.0808855 -0.229392; 0.732291 -0.0128062 0.0284204 -0.0266317 0.0594429 0.0229444 0.0347914 -0.0858399 0.0700374 -0.666727])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
