>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (469.42578125 MB free)
Uptime: 6744.0 sec
Load Avg:  0.91552734375  1.49609375  1.5107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     348839 s        104 s      36949 s     210543 s         10 s
#2  3500 MHz     125799 s         45 s      26891 s     506888 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.14.0
2 additional packages:
 - Compat                        0.37.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.501181 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.198709; 0.0 0.652561 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.72452; 0.0 0.0 0.232303 0.0 0.0 0.0 0.0 0.0 0.0 0.531197; 0.0 0.0 0.0 0.531878 0.0 0.0 0.0 0.0 0.0 0.0361949; 0.0 0.0 0.0 0.0 0.151376 0.0 0.0 0.0 0.0 0.410578; 0.0 0.0 0.0 0.0 0.0 0.658481 0.0 0.0 0.0 0.422755; 0.0 0.0 0.0 0.0 0.0 0.0 0.748569 0.0 0.0 0.035118; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.473001 0.0 0.452559; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.985198 0.869023; 0.198709 0.72452 0.531197 0.0361949 0.410578 0.422755 0.035118 0.452559 0.869023 0.577223]
(U,Lambda) = eig(full(A)) = ([-0.882521,0.173546,0.314774,0.493948,0.523991,0.532824,0.656977,0.748358,0.83536,2.11451],
[-0.100731 0.0291608 -0.131269 -0.774066 0.57889 -0.156141 -0.00391818 -0.00481983 -0.0772253 -0.0842382; -0.331061 0.0727235 -0.264128 -0.128707 -0.374464 0.150455 -0.503994 -0.045344 -0.514751 -0.338948; -0.334225 0.434678 0.79316 0.0572051 0.121015 -0.0439505 -0.00384259 -0.00617139 -0.114398 -0.193021; -0.01795 0.00485662 -0.0205299 -0.0268874 -0.304932 -0.951336 -0.000888829 -0.00100243 -0.0154895 -0.0156416; -0.278553 -0.890441 0.309425 0.0337703 0.0732209 -0.0267635 -0.00249466 -0.00412342 -0.07796 -0.143041; -0.192431 0.041916 -0.151464 -0.0723981 -0.208881 0.0836542 0.863608 -0.0282008 -0.310409 -0.198579; -0.0151022 0.00293642 -0.00996904 -0.00388621 -0.0103911 0.00404737 0.00117787 0.998225 -0.0525506 -0.0175838; -0.234184 0.0726636 -0.352211 0.608757 0.58978 -0.188099 -0.00755679 -0.00985375 -0.162202 -0.188559; -0.326369 0.0514796 -0.159621 -0.0498448 -0.125209 0.0477659 0.00813372 0.0219989 0.75324 -0.526298; 0.701438 -0.048081 0.123142 0.0281767 0.0664507 -0.0248647 -0.00307202 -0.00599547 -0.129874 -0.683936])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
