>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (535.1640625 MB free)
Uptime: 5424.0 sec
Load Avg:  0.923828125  1.3759765625  1.48974609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     259019 s         63 s      33804 s     193560 s          7 s
#2  3499 MHz     127002 s        105 s      25949 s     375281 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.74988 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.928788; 0.0 0.28801 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.234169; 0.0 0.0 0.225889 0.0 0.0 0.0 0.0 0.0 0.0 0.734314; 0.0 0.0 0.0 0.55767 0.0 0.0 0.0 0.0 0.0 0.0412687; 0.0 0.0 0.0 0.0 0.546414 0.0 0.0 0.0 0.0 0.383499; 0.0 0.0 0.0 0.0 0.0 0.828257 0.0 0.0 0.0 0.435875; 0.0 0.0 0.0 0.0 0.0 0.0 0.301743 0.0 0.0 0.954724; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.201571 0.0 0.0878018; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0863662 0.53535; 0.928788 0.234169 0.734314 0.0412687 0.383499 0.435875 0.954724 0.0878018 0.53535 0.627818]
(U,Lambda) = eig(full(A)) = ([-1.22007,0.111613,0.201815,0.252409,0.288877,0.503552,0.557549,0.614235,0.816715,2.28693],
[-0.320609 -0.0636231 -0.00469604 0.0537922 -0.00718634 0.330775 -0.0140467 0.68804 0.34442 -0.434235; -0.105589 -0.0580417 -0.00752829 0.189512 0.963333 -0.0953078 0.00252705 -0.0721295 0.0109772 -0.0841842; -0.345335 -0.280949 -0.0845242 -0.79779 0.0415835 -0.232004 0.00644013 -0.190005 0.0308033 -0.256031; -0.0157858 -0.00404512 -0.000321363 0.00389511 -0.000547644 0.066897 -0.994766 -0.0733117 0.0039484 -0.0171497; -0.147628 -0.0385633 -0.00308388 0.037582 -0.00531153 0.784904 0.100179 -0.5682 0.0351635 -0.158337; -0.144703 -0.0265925 -0.0019281 0.0218085 -0.00288246 0.117761 -0.00468347 0.204647 -0.935941 -0.214734; -0.42661 -0.219548 -0.0264752 0.55757 -0.264683 -0.41502 0.0108561 -0.307001 0.0459483 -0.3456; -0.0419979 -0.0426743 0.995937 -0.0497609 0.00358719 -0.0255067 0.000717441 -0.02138 0.00353754 -0.0302565; -0.278653 0.927095 0.0128498 -0.0928945 0.00942943 -0.112574 0.00330487 -0.101909 0.018167 -0.174824; 0.680011 0.0437221 0.00277107 -0.0288118 0.00356694 -0.0877265 0.00290875 -0.100485 0.0247842 -0.718615])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
