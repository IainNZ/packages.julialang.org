>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (499.4765625 MB free)
Uptime: 5411.0 sec
Load Avg:  1.134765625  1.38232421875  1.45458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     266302 s        117 s      35101 s     183376 s         12 s
#2  3499 MHz     116016 s         40 s      25814 s     385246 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.662229 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.575739; 0.0 0.258793 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.235105; 0.0 0.0 0.0832669 0.0 0.0 0.0 0.0 0.0 0.0 0.626498; 0.0 0.0 0.0 0.410729 0.0 0.0 0.0 0.0 0.0 0.681214; 0.0 0.0 0.0 0.0 0.0168215 0.0 0.0 0.0 0.0 0.483279; 0.0 0.0 0.0 0.0 0.0 0.485173 0.0 0.0 0.0 0.44911; 0.0 0.0 0.0 0.0 0.0 0.0 0.130112 0.0 0.0 0.052954; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.142503 0.0 0.568687; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.277683 0.678653; 0.575739 0.235105 0.626498 0.681214 0.483279 0.44911 0.052954 0.568687 0.678653 0.301781]
(U,Lambda) = eig(full(A)) = ([-1.28322,0.0326269,0.111655,0.130238,0.199622,0.260895,0.351879,0.467654,0.614062,1.88368],
[-0.207456 0.0272045 0.03507 0.00256622 -0.0799218 0.0120337 -0.116222 0.102639 -0.902884 0.330471; -0.106879 0.0309254 0.0535875 0.00433658 -0.255157 -0.938229 0.158231 -0.0390458 0.0499876 0.101443; -0.321391 0.36805 -0.740135 -0.031627 0.345768 -0.0295861 0.14612 -0.0565355 0.089156 0.243967; -0.281905 0.0535988 0.076389 0.00575887 -0.207221 0.0381375 -0.725197 -0.415095 0.253066 0.324248; -0.260592 -0.909646 -0.170908 -0.010104 0.169774 -0.0166095 0.0903637 -0.0371838 0.0611233 0.181497; -0.17803 0.0295237 0.0403244 0.00300038 -0.101 0.0167975 -0.211086 0.889263 0.263205 0.225149; -0.0262648 0.01616 0.0962194 -0.993285 0.0489217 -0.00339646 0.0149595 -0.00544178 0.00826525 0.0211719; -0.279613 0.153976 0.618266 0.109951 0.639354 -0.040293 0.170161 -0.0606678 0.0910951 0.228988; -0.304783 0.0823878 0.137086 0.0109142 -0.558298 0.339098 0.573034 -0.123917 0.152397 0.296269; 0.701004 -0.0297496 -0.0335372 -0.00237122 0.0642172 -0.00838841 0.0626492 -0.0346874 0.0755367 0.701106])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
