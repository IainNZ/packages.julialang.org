>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (563.6015625 MB free)
Uptime: 6494.0 sec
Load Avg:  1.048828125  1.716796875  1.60107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     317754 s         53 s      34768 s     222960 s          9 s
#2  3499 MHz     145920 s         98 s      26136 s     460198 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.26.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.197007 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.725078; 0.0 0.290079 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.809692; 0.0 0.0 0.746796 0.0 0.0 0.0 0.0 0.0 0.0 0.941616; 0.0 0.0 0.0 0.962168 0.0 0.0 0.0 0.0 0.0 0.443487; 0.0 0.0 0.0 0.0 0.022527 0.0 0.0 0.0 0.0 0.253389; 0.0 0.0 0.0 0.0 0.0 0.83425 0.0 0.0 0.0 0.776906; 0.0 0.0 0.0 0.0 0.0 0.0 0.363734 0.0 0.0 0.919526; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.919492 0.0 0.563836; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.758325 0.369708; 0.725078 0.809692 0.941616 0.443487 0.253389 0.776906 0.919526 0.563836 0.369708 0.730483]
(U,Lambda) = eig(full(A)) = ([-1.43621,0.0288231,0.224733,0.32259,0.553016,0.756688,0.802637,0.899777,0.953388,2.71942],
[-0.304105 -0.105817 0.876525 0.169221 0.232879 0.00528065 -0.0378912 0.0316808 -0.0177982 -0.205852; -0.321284 -0.0760689 -0.415316 0.729951 0.352107 0.0070731 -0.0499963 0.0407783 -0.022664 -0.238681; -0.295462 -0.0321899 -0.0604543 -0.0650573 -0.555614 0.387977 -0.533679 0.188999 -0.0846236 -0.341835; -0.126662 -0.0116625 -0.0201573 -0.0203229 -0.123938 -0.00879743 0.0879825 -0.218266 0.937827 -0.180731; -0.118986 0.987797 0.042002 0.0247501 0.0546159 0.00140683 -0.01028 0.00886931 -0.00505401 -0.0672839; -0.234389 -0.0236753 -0.0427227 -0.0445027 -0.31587 -0.0408287 0.777791 0.364058 -0.121074 -0.295124; -0.349936 -0.0673889 -0.22173 -0.655022 0.55547 0.00953818 -0.0663065 0.0526731 -0.0289533 -0.279533; -0.163952 -0.0155378 -0.0272016 -0.0276853 -0.17592 -0.0141167 0.152709 -0.878179 -0.308843 -0.224329; -0.115398 -0.012439 -0.0232234 -0.0248677 -0.2059 -0.920512 -0.26406 0.0802555 -0.0351898 -0.135004; 0.684987 0.0245444 0.0335178 0.0293089 0.114342 0.00407609 -0.0316491 0.0307061 -0.0185666 -0.71612])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
