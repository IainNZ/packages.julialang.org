>>> 'Pkg.add("GeographicLibPy")' log
INFO: Cloning cache of GeographicLibPy from https://github.com/kshramt/GeographicLibPy.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Conda v0.7.0
INFO: Installing GeographicLibPy v0.0.3
INFO: Installing MacroTools v0.3.7
INFO: Installing PyCall v1.14.0
INFO: Installing SHA v0.5.0
INFO: Installing URIParser v0.2.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GeographicLibPy
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GeographicLibPy")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (662.40625 MB free)
Uptime: 63784.0 sec
Load Avg:  0.9970703125  0.9853515625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4165691 s       6311 s     188142 s    1069080 s         48 s
#2  3499 MHz    1192882 s         72 s     109914 s    4944168 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GeographicLibPy               0.0.3
 - JSON                          0.13.0
7 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.30.0
 - Conda                         0.7.0
 - MacroTools                    0.3.7
 - PyCall                        1.14.0
 - SHA                           0.5.0
 - URIParser                     0.2.0
INFO: Testing GeographicLibPy
ERROR: LoadError: InitError: PyError (ccall(@pysym(:PyImport_ImportModule), PyPtr, (Cstring,), name)) <type 'exceptions.ImportError'>
ImportError('No module named geographiclib',)

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:56 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:61 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:81 [inlined]
 [4] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:370
 [5] __init__() at /home/vagrant/.julia/v0.6/GeographicLibPy/src/GeographicLibPy.jl:16
 [6] _include_from_serialized(::String) at ./loading.jl:157
 [7] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [8] _require(::Symbol) at ./loading.jl:491
 [9] require(::Symbol) at ./loading.jl:398
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
during initialization of module GeographicLibPy
while loading /home/vagrant/.julia/v0.6/GeographicLibPy/test/runtests.jl, in expression starting on line 3
===========================[ ERROR: GeographicLibPy ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/GeographicLibPy/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: GeographicLibPy had test errors

>>> End of log
