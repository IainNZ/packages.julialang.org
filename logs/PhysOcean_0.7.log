>>> 'Pkg.add("PhysOcean")' log
┌ Info: Cloning cache of PhysOcean from https://github.com/gher-ulg/PhysOcean.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing PhysOcean v0.1.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of PhysOcean
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("PhysOcean")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     442284 s        160 s      26097 s     203497 s          4 s
       #2  3500 MHz      74745 s         48 s      10957 s     682448 s          0 s
       
  Memory: 2.93927001953125 GB (850.8671875 MB free)
  Uptime: 7780.0 sec
  Load Avg:  0.92919921875  0.953125  0.9169921875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PhysOcean                     0.1.0
2 additional packages:
 - Compat                        0.44.0
 - Nullables                     0.0.2
[ Info: Testing PhysOcean                          @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:2
WARNING: importing deprecated binding Base.DateTime into PhysOcean.
PhysOcean: Error During Test at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:13
  Test threw an exception of type ErrorException
  Expression: datetime_matlab(730486) == DateTime(2000, 1, 1)
  Base.DateTime has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #DateTime#851 at ./deprecated.jl:138 [inlined]
   [3] DateTime at ./deprecated.jl:138 [inlined]
   [4] datetime_matlab(::Int64) at /home/vagrant/.julia/v0.7/PhysOcean/src/PhysOcean.jl:45
   [5] macro expansion at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:13 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:7
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = loadcastaway(::IOStream) at castaway.jl:25
└                                                     @ PhysOcean castaway.jl:25
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = loadcastaway(::IOStream) at castaway.jl:32
└                                                     @ PhysOcean castaway.jl:32
PhysOcean: Error During Test at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:5
  Got an exception of type ErrorException outside of a @test
  Base.DateTime has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #DateTime#851 at ./deprecated.jl:138 [inlined]
   [3] DateTime at ./deprecated.jl:138 [inlined]
   [4] loadcastaway(::IOStream) at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:39
   [5] #7 at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:11 [inlined]
   [6] open(::getfield(PhysOcean, Symbol("##7#8")), ::String) at ./iostream.jl:310
   [7] loadcastaway(::String) at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:10
   [8] macro expansion at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:57 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1004 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:7
   [11] include at ./boot.jl:293 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:521
   [13] include(::Module, ::String) at ./sysimg.jl:26
   [14] process_options(::Base.JLOptions) at ./client.jl:324
   [15] _start() at ./client.jl:375
Test Summary: | Pass  Error  Total
PhysOcean     |   18      2     20
ERROR: LoadError: Some tests did not pass: 18 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for PhysOcean
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: PhysOcean had test errors

>>> End of log
