>>> 'Pkg.add("PhysOcean")' log
[ Info: Cloning cache of PhysOcean from https://github.com/gher-ulg/PhysOcean.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing PhysOcean v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of PhysOcean
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("PhysOcean")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     452214 s       6497 s      26412 s     196963 s          6 s
       #2  3500 MHz      89915 s        263 s      12478 s     669976 s          0 s
       
  Memory: 2.93927001953125 GB (867.08984375 MB free)
  Uptime: 7867.0 sec
  Load Avg:  1.0029296875  0.9853515625  0.9462890625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PhysOcean                     0.1.0
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing PhysOcean @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:2
WARNING: importing deprecated binding Base.DateTime into PhysOcean.
PhysOcean: Error During Test at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:13
  Test threw an exception of type ErrorException
  Expression: datetime_matlab(730486) == DateTime(2000, 1, 1)
  Base.DateTime has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #DateTime#919 at ./deprecated.jl:138 [inlined]
   [3] DateTime at ./deprecated.jl:138 [inlined]
   [4] datetime_matlab(::Int64) at /home/vagrant/.julia/v0.7/PhysOcean/src/PhysOcean.jl:45
   [5] macro expansion at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:13 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:7
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = loadcastaway(::IOStream) at castaway.jl:25
└ @ PhysOcean castaway.jl:25
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = loadcastaway(::IOStream) at castaway.jl:32
└ @ PhysOcean castaway.jl:32
PhysOcean: Error During Test at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:5
  Got an exception of type ErrorException outside of a @test
  Base.DateTime has been moved to the standard library package Dates.
  Restart Julia and then run `using Dates` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #DateTime#919 at ./deprecated.jl:138 [inlined]
   [3] DateTime at ./deprecated.jl:138 [inlined]
   [4] loadcastaway(::IOStream) at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:39
   [5] #7 at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:11 [inlined]
   [6] open(::getfield(PhysOcean, Symbol("##7#8")), ::String) at ./iostream.jl:310
   [7] loadcastaway(::String) at /home/vagrant/.julia/v0.7/PhysOcean/src/castaway.jl:10
   [8] macro expansion at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:57 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:7
   [11] include at ./boot.jl:295 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:521
   [13] include(::Module, ::String) at ./sysimg.jl:26
   [14] process_options(::Base.JLOptions) at ./client.jl:323
   [15] _start() at ./client.jl:374
Test Summary: | Pass  Error  Total
PhysOcean     |   18      2     20
ERROR: LoadError: Some tests did not pass: 18 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for PhysOcean
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PhysOcean/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: PhysOcean had test errors

>>> End of log
