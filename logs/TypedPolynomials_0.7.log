>>> 'Pkg.add("TypedPolynomials")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of TypedPolynomials from https://github.com/JuliaAlgebra/TypedPolynomials.jl.git
[ Info: Installing MultivariatePolynomials v0.1.4
[ Info: Installing TypedPolynomials v0.0.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of TypedPolynomials
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TypedPolynomials")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4941
Commit 9f5351c36a (2018-04-24 14:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    5001623 s       7259 s     351440 s    1446426 s         80 s
       #2  3499 MHz    1144276 s        122 s     121715 s    6493470 s          2 s
       
  Memory: 2.939197540283203 GB (1324.125 MB free)
  Uptime: 79367.0 sec
  Load Avg:  0.9970703125  0.9853515625  1.0029296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - TypedPolynomials              0.0.1
13 additional packages:
 - BinDeps                       0.8.8
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - FixedPointNumbers             0.4.6
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - MultivariatePolynomials       0.1.4
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
 - tmprMY8fB                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for TypedPolynomials...
[ Info: Installing BenchmarkTools v0.2.5
[ Info: Installing NBInclude v1.2.0
[ Info: Testing TypedPolynomials
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = istb(::Symbol) at types.jl:7
└ @ MacroTools types.jl:7
┌ Warning: `shift!` is deprecated, use `popfirst!` instead.
│   caller = tbnew(::Symbol) at types.jl:17
└ @ MacroTools types.jl:17
WARNING: importing deprecated binding Base.uninitialized into Sequences.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/show.jl:8
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/calculus.jl:1
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Int64,Term{Int64,Monomial{(x,),1}},Array{Term{Int64,Monomial{(x,),1}},1}}, ::Variable{:x}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at polynomials.jl:276 [inlined]
└ @ Core polynomials.jl:276
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/polynomials.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/substitution.jl:30
WARNING: importing deprecated binding Base.myid into NBInclude.
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: importing deprecated binding Base.nprocs into NBInclude.
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: importing deprecated binding Base.remotecall_fetch into NBInclude.
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.myid is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.remotecall_fetch is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/runtests.jl:48
in #nbinclude#1 at /home/vagrant/.julia/v0.7/NBInclude/src/NBInclude.jl
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = #nbinclude#1(::Bool, ::UnitRange{Int64}, ::Regex, ::typeof(identity), ::Function, ::String) at NBInclude.jl:107
└ @ NBInclude NBInclude.jl:107
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = #nbinclude#1(::Bool, ::UnitRange{Int64}, ::Regex, ::typeof(identity), ::Function, ::String) at NBInclude.jl:111
└ @ NBInclude NBInclude.jl:111
┌ Warning: `include_string(string, fname)` is deprecated, use `include_string(module, string, fname)` instead.
│   caller = my_include_string(::String, ::String, ::String) at NBInclude.jl:31
└ @ NBInclude NBInclude.jl:31
x * x = x^2
x ^ 3 = x^3
x * y = xy
x + z = x + z
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/TypedPolynomials/test/../demo.ipynb:In[11]:2
WARNING: importing deprecated binding Base.uninitialized into BenchmarkTools.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/src/execution.jl:135
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
Test Summary:    | Pass  Total
TypedPolynomials |  381    381
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isbinding at match.jl:14 [inlined]
└ @ Core match.jl:14
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp at match.jl:29 [inlined]
└ @ Core match.jl:29
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = isslurp(::Symbol) at match.jl:29
└ @ MacroTools match.jl:29
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Loop variable `p` around /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/polynomial.jl:99 overwrites a variable in an enclosing scope. In the future the variable will be local to the loop instead.
└ @ nothing polynomial.jl:99
┌ Warning: `round(x::Number, digits)` is deprecated, use `round(x; digits=digits)` instead.
│   caller = round at polynomial.jl:371 [inlined]
└ @ Core polynomial.jl:371
┌ Warning: `round(x::Number, digits)` is deprecated, use `round(x; digits=digits)` instead.
│   caller = round(::Term{Float64,Monomial{(x, y),2}}, ::Int64) at polynomial.jl:371
└ @ MultivariatePolynomials polynomial.jl:371
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Term{Int64,Monomial{(x,),1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:3 [inlined]
└ @ Core algebra.jl:3
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:3 [inlined]
└ @ Core algebra.jl:3
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:6 [inlined]
└ @ Core algebra.jl:6
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Polynomial{Int64,Term{Int64,Monomial{(x,),1}},Array{Term{Int64,Monomial{(x,),1}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:6 [inlined]
└ @ Core algebra.jl:6
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Polynomial{Int64,Term{Int64,Monomial{(x, y),2}},Array{Term{Int64,Monomial{(x, y),2}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at algebra.jl:7 [inlined]
└ @ Core algebra.jl:7
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/substitution.jl:3
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at differentiation.jl:4 [inlined]
└ @ Core differentiation.jl:4
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Int64,Term{Int64,Monomial{(x,),1}},Array{Term{Int64,Monomial{(x,),1}},1}}, ::Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Int64,Term{Int64,Monomial{(x, y),2}},Array{Term{Int64,Monomial{(x, y),2}},1}}, ::Variable{:x}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Int64,Term{Int64,Monomial{(x, y),2}},Array{Term{Int64,Monomial{(x, y),2}},1}}, ::Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: DomainError now supports arguments, use `DomainError(value)` or `DomainError(value, msg)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:x}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Float64,Term{Float64,Monomial{(x, y),2}},Array{Term{Float64,Monomial{(x, y),2}},1}}, ::Variable{:x}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Variable{:y}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = differentiate(::Polynomial{Float64,Term{Float64,Monomial{(x, y),2}},Array{Term{Float64,Monomial{(x, y),2}},1}}, ::Variable{:y}) at differentiation.jl:38
└ @ MultivariatePolynomials differentiation.jl:38
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `z``.
│ Use `global z` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
┌ Warning: broadcast will default to iterating over its arguments in the future. Wrap arguments of
│ type `x::Polynomial{Float64,Term{Float64,Monomial{(x, y),2}},Array{Term{Float64,Monomial{(x, y),2}},1}}` with `Ref(x)` to ensure they broadcast as "scalar" elements.
│   caller = macro expansion at example1.jl:5 [inlined]
└ @ Core example1.jl:5
┌ Warning: Deprecated syntax `implicit assignment to global variable `x``.
│ Use `global x` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `p``.
│ Use `global p` instead.
└ @ nothing none:0
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/MultivariatePolynomials/test/example2.jl:1
Test Summary:                           | Pass  Total
MultivariatePolynomials interface tests |  599    599
[ Info: TypedPolynomials tests passed
[ Info: Removing BenchmarkTools v0.2.5
[ Info: Removing NBInclude v1.2.0

>>> End of log
