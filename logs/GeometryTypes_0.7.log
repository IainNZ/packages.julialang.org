>>> 'Pkg.add("GeometryTypes")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of GeometryTypes from https://github.com/JuliaGeometry/GeometryTypes.jl.git
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing FixedPointNumbers v0.4.6
[ Info: Installing GeometryTypes v0.4.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Package database updated

>>> 'Pkg.test("GeometryTypes")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     362517 s         65 s      27494 s     136136 s          6 s
       #2  3500 MHz      89191 s         94 s       8763 s     497271 s          0 s
       
  Memory: 2.939197540283203 GB (1002.65234375 MB free)
  Uptime: 6084.0 sec
  Load Avg:  1.01708984375  1.01171875  0.9814453125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - GeometryTypes                 0.4.4
 - JSON                          0.17.2
6 additional packages:
 - ColorTypes                    0.6.7
 - Compat                        0.64.0
 - FixedPointNumbers             0.4.6
 - IterTools                     0.2.1
 - Nullables                     0.0.5
 - StaticArrays                  0.7.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing GeometryTypes
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/GeometryTypes/src/types.jl:12.
│ Use `at most one line break` instead.
└ @ nothing types.jl:12
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/GeometryTypes/src/types.jl:14.
│ Use `at most one line break` instead.
└ @ nothing types.jl:14
WARNING: importing deprecated binding Base.Void into GeometryTypes.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:74
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:74
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:74
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:74
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:74
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:79
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:79
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:79
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:79
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:79
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:82
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:85
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:85
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:85
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:85
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:88
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:88
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:88
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:88
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:91
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:91
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:91
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:91
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:94
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:94
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:94
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:94
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:97
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:97
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:97
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:100
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:100
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:100
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:103
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:103
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:106
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:106
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:106
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:109
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:109
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/typealias.jl:109
┌ Warning: Deprecated syntax `(Vec{N1, T}[ vcat(pt, ones(Vec{D, T})) for pt = d ]...)` at /home/vagrant/.julia/v0.7/GeometryTypes/src/hyperrectangles.jl:89.
│ Use `(Vec{N1, T}[ vcat(pt, ones(Vec{D, T})) for pt = d ]...,)` instead.
└ @ nothing hyperrectangles.jl:89
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/src/meshes.jl:57
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:3
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleSimplex(::Simplex{3,Vec{2,Float64}})` should be defined instead.
│   caller = macro expansion at convexhulls.jl:12 [inlined]
└ @ Core convexhulls.jl:12
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleConvexHull(::Simplex{3,Vec{2,Float64}})` should be defined instead.
│   caller = macro expansion at convexhulls.jl:13 [inlined]
└ @ Core convexhulls.jl:13
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleConvexHull(::FlexibleSimplex{Vec{2,Float64}})` should be defined instead.
│   caller = macro expansion at convexhulls.jl:14 [inlined]
└ @ Core convexhulls.jl:14
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleConvexHull(::Simplex{3,Vec{2,Float64}})` should be defined instead.
│   caller = macro expansion at convexhulls.jl:16 [inlined]
└ @ Core convexhulls.jl:16
WARNING: importing deprecated binding Base.uninitialized into StaticArrays.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:2
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:2
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
Rects: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:44
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0], [1.0, 1.0]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Int64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{2,Float64},Vec{2,Float64}})(::Vec{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:58 [inlined]
   [10] convert(::Type{FlexibleConvexHull}, ::HyperCube{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:72
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:50 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:45 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/convexhulls.jl:3
   [16] include at ./boot.jl:314 [inlined]
   [17] include_relative(::Module, ::String) at ./loading.jl:1067
   [18] include(::Module, ::String) at ./sysimg.jl:29
   [19] include(::String) at ./sysimg.jl:68
   [20] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7 [inlined]
   [21] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [22] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [23] include at ./boot.jl:314 [inlined]
   [24] include_relative(::Module, ::String) at ./loading.jl:1067
   [25] include(::Module, ::String) at ./sysimg.jl:29
   [26] exec_options(::Base.JLOptions) at ./client.jl:327
   [27] _start() at ./client.jl:455
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: importing deprecated binding Base.cross into GeometryTypes.
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{0,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{-1,UInt32}}, ::OffsetInteger{0,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
┌ Warning: `nfields(::DataType)` is deprecated, use `fieldcount` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = #s41#124(::Type, ::Type, ::Type, ::Type) at meshes.jl:67
└ @ GeometryTypes meshes.jl:67
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: importing deprecated binding Base.normalize into GeometryTypes.
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/polygons.jl:1
┌ Warning: Constructors no longer fall back to `convert`. A constructor `OffsetInteger{0,T} where T<:Integer(::OffsetInteger{-1,UInt32})` should be defined instead.
│   caller = to_index(::OffsetInteger{-1,UInt32}) at faces.jl:24
└ @ GeometryTypes faces.jl:24
┌ Warning: Constructors no longer fall back to `convert`. A constructor `UInt32(::OffsetInteger{-1,UInt32})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{0,UInt32}}, ::OffsetInteger{-1,UInt32}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:118 [inlined]
└ @ Core FixedSizeArrays.jl:118
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Vec{3,Float32}(::Float64) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:10
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
constructors and containment: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(4),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([Inf, Inf, Inf, Inf], [1.0, 2.0, 3.0, 4.0]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{4,Float64},Vec{4,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] update(::HyperRectangle{4,Float64}, ::Vec{4,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:5
   [4] update(::HyperRectangle{4,Float64}, ::Vec{4,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:2
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:29 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:15 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] include(::String) at ./sysimg.jl:68
   [14] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:9 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [17] include at ./boot.jl:314 [inlined]
   [18] include_relative(::Module, ::String) at ./loading.jl:1067
   [19] include(::Module, ::String) at ./sysimg.jl:29
   [20] exec_options(::Base.JLOptions) at ./client.jl:327
   [21] _start() at ./client.jl:455
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Vec{4,Float32}(::Float64) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:142
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: union(a, b) == union(b, a)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] union(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:5
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:142 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:143
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: union(a, b) == HyperRectangle(Vec(0, 0), Vec(2, 2))
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] union(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:5
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:143 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:144
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: intersect(a, b) == intersect(b, a)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:21
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:144 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:145
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: intersect(a, b) == HyperRectangle(Vec(1, 1), Vec(0, 0))
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:21
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:145 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:151
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: union(c, d) == union(d, c)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] union(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:5
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:151 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:152
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: union(c, d) == HyperRectangle(Vec(0, 0), Vec(3, 3))
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] union(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:5
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:152 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:153
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: intersect(c, d) == intersect(d, c)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:21
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:153 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
set operations: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:154
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [1, 1]))), 0x0000000000006b3c)
  Expression: intersect(c, d) == HyperRectangle(Vec(1, 1), Vec(1, 1))
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Vec{2,Int64},Vec{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::HyperRectangle{2,Int64}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:21
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:154 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:139 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
from Points: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:188
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([1, 1], [9223372036854775807, 9223372036854775807]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Point{2,Int64},Point{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] HyperRectangle{2,Int64}(::Array{Point{2,Int64},1}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/hyperrectangles.jl:188
   [4] HyperRectangle(::Array{Point{2,Int64},1}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/hyperrectangles.jl:173
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:189 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:189 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] include(::String) at ./sysimg.jl:68
   [14] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:9 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [17] include at ./boot.jl:314 [inlined]
   [18] include_relative(::Module, ::String) at ./loading.jl:1067
   [19] include(::Module, ::String) at ./sysimg.jl:29
   [20] exec_options(::Base.JLOptions) at ./client.jl:327
   [21] _start() at ./client.jl:455
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##361#365")){Int64,Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `reinterpret(::Type{T}, a::Array{S}, dims::NTuple{N, Int}) where {T, S, N}` is deprecated, use `reshape(reinterpret(T, vec(a)), dims)` instead.
│   caller = decompose(::Type{Point{2,Int64}}, ::HyperRectangle{2,Int64}) at decompose.jl:151
└ @ GeometryTypes decompose.jl:151
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
transforms: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:195
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(min, ([1, 2, 0], [9223372036854775807, 9223372036854775807, 9223372036854775807]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(min),Tuple{Vec{3,Int64},Vec{3,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] *(::StaticArrays.SArray{Tuple{3,3},Int64,2,9}, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/hyperrectangles.jl:96
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:202 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:196 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/hyperrectangles.jl:13
   [9] include at ./boot.jl:314 [inlined]
   [10] include_relative(::Module, ::String) at ./loading.jl:1067
   [11] include(::Module, ::String) at ./sysimg.jl:29
   [12] include(::String) at ./sysimg.jl:68
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:9 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [16] include at ./boot.jl:314 [inlined]
   [17] include_relative(::Module, ::String) at ./loading.jl:1067
   [18] include(::Module, ::String) at ./sysimg.jl:29
   [19] exec_options(::Base.JLOptions) at ./client.jl:327
   [20] _start() at ./client.jl:455
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{0,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{-1,Int64}}, ::OffsetInteger{0,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Face{3,T} where T(::OffsetInteger{-1,Int64}) at FixedSizeArrays.jl:127
└ @ GeometryTypes FixedSizeArrays.jl:127
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{-1,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{3,Int32}}, ::OffsetInteger{-1,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{3,Int32})` should be defined instead.
│   caller = macro expansion at faces.jl:9 [inlined]
└ @ Core faces.jl:9
┌ Warning: Constructors no longer fall back to `convert`. A constructor `OffsetInteger{0,T} where T<:Integer(::OffsetInteger{-1,Int64})` should be defined instead.
│   caller = to_index(::OffsetInteger{-1,Int64}) at faces.jl:24
└ @ GeometryTypes faces.jl:24
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{-1,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{0,Int64}}, ::OffsetInteger{-1,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = #s168#213(::Type, ::Type, ::Type, ::Type{T} where T<:Tuple, ::Type{T} where T<:Tuple) at indexing.jl:366
└ @ StaticArrays indexing.jl:366
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Vec{3,Float32}(::Int64) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes at meshes.jl:40 [inlined]
└ @ Core meshes.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
in #118 at /home/vagrant/.julia/v0.7/GeometryTypes/src/meshes.jl
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
in #118 at /home/vagrant/.julia/v0.7/GeometryTypes/src/meshes.jl
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:118 [inlined]
└ @ Core FixedSizeArrays.jl:118
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes_noVF(::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}) at meshes.jl:30
└ @ GeometryTypes meshes.jl:30
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:1
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = merge(::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}, ::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}, ::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}, ::Vararg{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing},N} where N) at meshes.jl:172
└ @ GeometryTypes meshes.jl:172
views: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:24
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float32, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, (Float32[0.0, 0.0, 1.0], Float32[1.0, 1.0, 1.0]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float32}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Point{3,Float32},Vec{3,Float32}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}})(::Point{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:62
   [4] map!(::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}}, ::Array{Point{3,Float32},1}, ::Array{Point{3,Float32},1}) at ./abstractarray.jl:1977
   [5] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::HyperRectangle{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:61
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:25 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:25 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/faces.jl:3
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:10 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Vec{3,Float32}(::Float32) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
Merging Mesh: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:4
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float32, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, (Float32[0.0, 0.0, 1.0], Float32[2.0, 0.4, 0.4]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float32}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Point{3,Float32},Vec{3,Float32}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}})(::Point{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:62
   [4] map!(::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}}, ::Array{Point{3,Float32},1}, ::Array{Point{3,Float32},1}) at ./abstractarray.jl:1977
   [5] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::HyperRectangle{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:61
   [6] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::Tuple{HyperRectangle{3,Float32},RGBA{Float32}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/meshes.jl:155
   [7] next at ./generator.jl:47 [inlined]
   [8] _collect(::Array{Tuple{HyperRectangle{3,Float32},RGBA{Float32}},1}, ::Base.Generator{Array{Tuple{HyperRectangle{3,Float32},RGBA{Float32}},1},Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:571
   [9] collect_similar(::Array{Tuple{HyperRectangle{3,Float32},RGBA{Float32}},1}, ::Base.Generator{Array{Tuple{HyperRectangle{3,Float32},RGBA{Float32}},1},Type{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}}}) at ./array.jl:496
   [10] map(::Type, ::Array{Tuple{HyperRectangle{3,Float32},RGBA{Float32}},1}) at ./abstractarray.jl:1983
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:13 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:5 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:4
   [16] include at ./boot.jl:314 [inlined]
   [17] include_relative(::Module, ::String) at ./loading.jl:1067
   [18] include(::Module, ::String) at ./sysimg.jl:29
   [19] include(::String) at ./sysimg.jl:68
   [20] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:11 [inlined]
   [21] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [22] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [23] include at ./boot.jl:314 [inlined]
   [24] include_relative(::Module, ::String) at ./loading.jl:1067
   [25] include(::Module, ::String) at ./sysimg.jl:29
   [26] exec_options(::Base.JLOptions) at ./client.jl:327
   [27] _start() at ./client.jl:455
Show: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:31
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float32, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, (Float32[0.0, 0.0, 1.0], Float32[2.0, 0.4, 0.4]))), 0x0000000000006b3c) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float32}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Point{3,Float32},Vec{3,Float32}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}})(::Point{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:62
   [4] map!(::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}}, ::Array{Point{3,Float32},1}, ::Array{Point{3,Float32},1}) at ./abstractarray.jl:1977
   [5] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::HyperRectangle{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:61
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:32 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:4
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:11 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Point{3,Float32}(::Int64) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes at meshes.jl:40 [inlined]
└ @ Core meshes.jl:40
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::HyperSphere{3,Float32}, ::Int64) at decompose.jl:391
└ @ GeometryTypes decompose.jl:391
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::HyperSphere{3,Float32}, ::Int64) at decompose.jl:398
└ @ GeometryTypes decompose.jl:398
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::HyperSphere{3,Float32}, ::Int64) at decompose.jl:399
└ @ GeometryTypes decompose.jl:399
Primitives: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:54
  Got exception BoundsError([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], (1, 2)) outside of a @test
  BoundsError: attempt to access 24-element LinearIndices{1,Tuple{Base.OneTo{Int64}}} at index [1, 2]
  Stacktrace:
   [1] throw_boundserror(::LinearIndices{1,Tuple{Base.OneTo{Int64}}}, ::Tuple{Int64,Int64}) at ./abstractarray.jl:464
   [2] checkbounds at ./abstractarray.jl:429 [inlined]
   [3] _getindex at ./abstractarray.jl:964 [inlined]
   [4] getindex(::LinearIndices{1,Tuple{Base.OneTo{Int64}}}, ::Int64, ::Int64) at ./abstractarray.jl:942
   [5] sub2ind(::Tuple{Int64}, ::Int64, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:57
   [6] decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::HyperSphere{3,Float32}, ::Int64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/decompose.jl:399
   [7] decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::HyperSphere{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/decompose.jl:391
   [8] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Normal{3,Float32},Nothing,Nothing,Nothing,Nothing}(::HyperSphere{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:18
   [9] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:55 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:55 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:4
   [14] include at ./boot.jl:314 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:1067
   [16] include(::Module, ::String) at ./sysimg.jl:29
   [17] include(::String) at ./sysimg.jl:68
   [18] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:11 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [20] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [21] include at ./boot.jl:314 [inlined]
   [22] include_relative(::Module, ::String) at ./loading.jl:1067
   [23] include(::Module, ::String) at ./sysimg.jl:29
   [24] exec_options(::Base.JLOptions) at ./client.jl:327
   [25] _start() at ./client.jl:455
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.cross is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
WARNING: Base.normalize is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/meshes.jl:2
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:118 [inlined]
└ @ Core FixedSizeArrays.jl:118
┌ Warning: `Array{T}(m::Int, n::Int, o::Int) where T` is deprecated, use `Array{T}(undef, m, n, o)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##5#8")), ::HyperRectangle{3,Int64}, ::Float64, ::Type) at distancefields.jl:31
└ @ GeometryTypes distancefields.jl:31
SignedDistanceField: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:3
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0.0, 0.0, 0.0], [0.0, 0.0, 0.0]))), 0x0000000000006b3d) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{3,Float64},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(Main, Symbol("##5#8")))(::Vec{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:12
   [4] SignedDistanceField(::getfield(Main, Symbol("##5#8")), ::HyperRectangle{3,Int64}, ::Float64, ::Type) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:41
   [5] SignedDistanceField(::Function, ::HyperRectangle{3,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:22
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:11 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:4 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:3
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:12 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = SignedDistanceField(::getfield(Main, Symbol("##7#10")), ::HyperRectangle{2,Int64}, ::Float64, ::Type) at distancefields.jl:60
└ @ GeometryTypes distancefields.jl:60
getindex: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:26
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([-1.0, -1.0], [-1.0, -1.0]))), 0x0000000000006b3e) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(Main, Symbol("##7#10")))(::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:28
   [4] SignedDistanceField(::getfield(Main, Symbol("##7#10")), ::HyperRectangle{2,Int64}, ::Float64, ::Type) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:68
   [5] SignedDistanceField(::Function, ::HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/distancefields.jl:52
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:27 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/distancefields.jl:3
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:12 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Vec{2,Float32}(::Float32) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `reinterpret(::Type{T}, a::Array{S}, dims::NTuple{N, Int}) where {T, S, N}` is deprecated, use `reshape(reinterpret(T, vec(a)), dims)` instead.
│   caller = decompose(::Type{Point{3,Int64}}, ::HyperRectangle{3,Int64}) at decompose.jl:151
└ @ GeometryTypes decompose.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{0,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{2,Int64}}, ::OffsetInteger{0,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{2,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{3,Int64}}, ::OffsetInteger{2,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::OffsetInteger{0,Int64})` should be defined instead.
│   caller = convert(::Type{OffsetInteger{3,Int64}}, ::OffsetInteger{0,Int64}) at faces.jl:11
└ @ GeometryTypes faces.jl:11
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{2,Int64}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:203
└ @ GeometryTypes decompose.jl:203
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{2,Int64}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:203
└ @ GeometryTypes decompose.jl:203
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes at meshes.jl:40 [inlined]
└ @ Core meshes.jl:40
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at iterators.jl:0 [inlined]
└ @ Core iterators.jl:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at iterators.jl:0 [inlined]
└ @ Core iterators.jl:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = next at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = next at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = #157 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Face{3,OffsetInteger{-1,UInt32}}}, ::Array{Face{4,Int64},1}) at decompose.jl:172
└ @ GeometryTypes decompose.jl:172
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{TextureCoordinate{2,Float32}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:211
└ @ GeometryTypes decompose.jl:211
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{TextureCoordinate{2,Float32}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:211
└ @ GeometryTypes decompose.jl:211
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:207
└ @ GeometryTypes decompose.jl:207
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::SimpleRectangle{Int64}, ::Tuple{Int64,Int64}) at decompose.jl:207
└ @ GeometryTypes decompose.jl:207
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:1
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Face{3,Int64}}, ::Array{Face{3,OffsetInteger{-1,UInt32}},1}) at decompose.jl:172
└ @ GeometryTypes decompose.jl:172
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes at meshes.jl:40 [inlined]
└ @ Core meshes.jl:40
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attributes_noVF(::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing}) at meshes.jl:30
└ @ GeometryTypes meshes.jl:30
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = merge(::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing}, ::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing}, ::HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing}, ::Vararg{HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing},N} where N) at meshes.jl:172
└ @ GeometryTypes meshes.jl:172
Normals: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:96
  Got exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float32, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, (Float32[0.0, 0.0, 1.0], Float32[1.0, 1.0, 1.0]))), 0x0000000000006b3e) outside of a @test
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float32}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Point{3,Float32},Vec{3,Float32}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}})(::Point{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:62
   [4] map!(::getfield(GeometryTypes, Symbol("##138#139")){Vec{3,Float32},Vec{3,Float32}}, ::Array{Point{3,Float32},1}, ::Array{Point{3,Float32},1}) at ./abstractarray.jl:1977
   [5] HomogenousMesh{Point{3,Float32},Face{3,OffsetInteger{-1,UInt32}},Nothing,Nothing,Nothing,Nothing,Nothing}(::HyperRectangle{3,Float32}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/primitives.jl:61
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:124 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:97 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:3
   [11] include at ./boot.jl:314 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:1067
   [13] include(::Module, ::String) at ./sysimg.jl:29
   [14] include(::String) at ./sysimg.jl:68
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:14 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [18] include at ./boot.jl:314 [inlined]
   [19] include_relative(::Module, ::String) at ./loading.jl:1067
   [20] include(::Module, ::String) at ./sysimg.jl:29
   [21] exec_options(::Base.JLOptions) at ./client.jl:327
   [22] _start() at ./client.jl:455
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::HyperSphere{3,Float32}, ::Int64) at decompose.jl:367
└ @ GeometryTypes decompose.jl:367
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::HyperSphere{3,Float32}, ::Int64) at decompose.jl:372
└ @ GeometryTypes decompose.jl:372
HyperSphere: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:139
  Got exception BoundsError([1, 2, 3], (1, 2)) outside of a @test
  BoundsError: attempt to access 3-element LinearIndices{1,Tuple{Base.OneTo{Int64}}} at index [1, 2]
  Stacktrace:
   [1] throw_boundserror(::LinearIndices{1,Tuple{Base.OneTo{Int64}}}, ::Tuple{Int64,Int64}) at ./abstractarray.jl:464
   [2] checkbounds at ./abstractarray.jl:429 [inlined]
   [3] _getindex at ./abstractarray.jl:964 [inlined]
   [4] getindex(::LinearIndices{1,Tuple{Base.OneTo{Int64}}}, ::Int64, ::Int64) at ./abstractarray.jl:942
   [5] sub2ind(::Tuple{Int64}, ::Int64, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:57
   [6] decompose(::Type{Point{3,Float32}}, ::HyperSphere{3,Float32}, ::Int64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/decompose.jl:372
   [7] decompose(::Type{Point}, ::HyperSphere{3,Float32}, ::Int64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/decompose.jl:18
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:142 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:140 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [12] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/decompose.jl:3
   [13] include at ./boot.jl:314 [inlined]
   [14] include_relative(::Module, ::String) at ./loading.jl:1067
   [15] include(::Module, ::String) at ./sysimg.jl:29
   [16] include(::String) at ./sysimg.jl:68
   [17] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:14 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [19] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [20] include at ./boot.jl:314 [inlined]
   [21] include_relative(::Module, ::String) at ./loading.jl:1067
   [22] include(::Module, ::String) at ./sysimg.jl:29
   [23] exec_options(::Base.JLOptions) at ./client.jl:327
   [24] _start() at ./client.jl:455
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl
setops: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:27
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [2, 2]))), 0x0000000000006b3e)
  Expression: intersect(r1, r2) == SimpleRectangle(2, 2, 0, 0)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Point{2,Int64},Point{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::SimpleRectangle{Int64}, ::SimpleRectangle{Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:27
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:27 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:23 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:2
setops: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:28
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Int64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [1, 1]))), 0x0000000000006b3e)
  Expression: intersect(r1, r3) == SimpleRectangle(1, 1, 1, 1)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Int64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Point{2,Int64},Point{2,Int64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::SimpleRectangle{Int64}, ::SimpleRectangle{Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:27
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:28 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:23 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:2
setops: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:29
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(max, ([0, 0], [0.5, 0.5]))), 0x0000000000006b3e)
  Expression: intersect(r1, r4) == SimpleRectangle(0.5, 0.5, 1.5, 1.5)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(max),Tuple{Point{2,Int64},Point{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] intersect(::SimpleRectangle{Int64}, ::SimpleRectangle{Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/setops.jl:27
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:29 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:23 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplerectangle.jl:2
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at simplerectangle.jl:34 [inlined]
└ @ Core simplerectangle.jl:34
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at simplerectangle.jl:35 [inlined]
└ @ Core simplerectangle.jl:35
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at simplerectangle.jl:36 [inlined]
└ @ Core simplerectangle.jl:36
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Point{2,Float32}(::Int64) at FixedSizeArrays.jl:122
└ @ GeometryTypes FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##311#312")){Tuple{Int64,Int64}})(::Tuple{Int64,Int64}) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##378#382")){Int64,Int64,Tuple{Int64,Int64},Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##378#382")){Int64,Int64,Tuple{Int64,Int64},Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
WARNING: importing deprecated binding Base.dot into GeometryTypes.
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
2d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:6
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([-1.0, -2.0], [0.0, -1.0], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(Vec(-1.0, -1.0), s) ≈ √2
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:6 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:3 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
2d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:7
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([-7.0, -0.5], [0.0, -0.5], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(Vec(-7.0, 0.5), s) ≈ 7
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:7 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:3 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
2d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:8
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([0.0, 1.0], [-0.5, 0.5], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(Vec(1.0, 1.0), s) ≈ √0.5
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:8 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:3 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
WARNING: importing deprecated binding Base.det into GeometryTypes.
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
counterexample: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:27
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([2.0, -1.0], [0.5, 0.5], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(pt, s) ≈ √4.5
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:25 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
counterexample: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:19
  Got exception MethodError(GeometryTypes.proj_sqdist, ([2.0, -1.0], [0.5, 0.5], Inf), 0x0000000000006b3e) outside of a @test
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157
   [4] proj_sqdist(::Vec{2,Float64}, ::Simplex{3,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:29 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:25 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
   [10] include at ./boot.jl:314 [inlined]
   [11] include_relative(::Module, ::String) at ./loading.jl:1067
   [12] include(::Module, ::String) at ./sysimg.jl:29
   [13] include(::String) at ./sysimg.jl:68
   [14] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:18 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:7
   [17] include at ./boot.jl:314 [inlined]
   [18] include_relative(::Module, ::String) at ./loading.jl:1067
   [19] include(::Module, ::String) at ./sysimg.jl:29
   [20] exec_options(::Base.JLOptions) at ./client.jl:327
   [21] _start() at ./client.jl:455
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
3d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:41
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([-1.0, -1.0, -1.0], [0.0, 0.0, -1.0], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(Vec(-1.0, -1.0, 0.0), s) ≈ √2
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{3,Float64}, ::Simplex{3,Vec{3,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157 (repeats 2 times)
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{3,Float64}, ::Simplex{4,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:41 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:37 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
3d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:43
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([0.0, 1.0, 0.0], [-0.5, 0.5, 0.0], Inf), 0x0000000000006b3e)
  Expression: min_euclidean(Vec(1.0, 1.0, 0.0), s) ≈ √0.5
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist(::Vec{3,Float64}, ::Simplex{3,Vec{3,Float64}}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:157 (repeats 2 times)
   [4] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [5] min_euclidean(::Vec{3,Float64}, ::Simplex{4,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:43 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:37 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
1d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:53
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, 1.0], [1.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: proj(Vec(0.0, 2.0)) ≈ Vec(0.0, 1.0)
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
   [4] (::getfield(Main, Symbol("#proj#11")))(::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:52
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:53 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:51 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:54
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, -3.0], [1.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: proj(Vec(0.0, -2.0)) ≈ Vec(0.0, 1.0)
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
   [4] (::getfield(Main, Symbol("#proj#11")))(::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:52
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:54 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:51 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:55
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([57.0, 1.0], [2.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: proj(Vec(56.0, 2.0)) ≈ Vec(1.0, 1.0)
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
   [4] (::getfield(Main, Symbol("#proj#11")))(::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:52
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:55 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:51 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 2d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:56
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([-55.0, 1.0], [0.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: proj(Vec(-56.0, 2.0)) ≈ Vec(-1.0, 1.0)
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined]
   [3] proj_sqdist(::Vec{2,Float64}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
   [4] (::getfield(Main, Symbol("#proj#11")))(::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:52
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:56 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:51 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
1d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:61
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([0.0, 0.0, 0.0], [0.0, 0.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: #= /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:61 =# @inferred(min_euclidean(Vec(0.0, 0.0, 0.0), s)) ≈ 0
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [4] min_euclidean(::Vec{3,Float64}, ::Simplex{2,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:61 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:60 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:62
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], Inf), 0x0000000000006b3f)
  Expression: min_euclidean(Vec(0.5, 0.5, 0.5), s) ≈ 0
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [4] min_euclidean(::Vec{3,Float64}, ::Simplex{2,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:62 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:60 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:63
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([-1.0, 0.0, 0.0], [0.0, 0.0, 0.0], Inf), 0x0000000000006b3f)
  Expression: min_euclidean(Vec(-1.0, 0.0, 0.0), s) ≈ 1
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [4] min_euclidean(::Vec{3,Float64}, ::Simplex{2,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:63 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:60 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
1d simplex in 3d: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:64
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, 0.0, 0.0], [0.333333, 0.333333, 0.333333], Inf), 0x0000000000006b3f)
  Expression: min_euclidean(Vec(1.0, 0.0, 0.0), s) ≈ √(2 / 3)
  MethodError: no method matching proj_sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{3,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 [inlined] (repeats 2 times)
   [4] min_euclidean(::Vec{3,Float64}, ::Simplex{2,Vec{3,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:57
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:64 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:60 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [9] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/simplices.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: importing deprecated binding Base.⋅ into GeometryTypes.
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: importing deprecated binding Base.norm into GeometryTypes.
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
two simplices: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:20
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([3.0, -0.5], [0.0, -0.5], Inf), 0x0000000000006b3f)
  Expression: gjk(c1, c2) ≈ 3
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119 [inlined]
   [4] #169 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:39 [inlined]
   [5] with_immutable(::getfield(GeometryTypes, Symbol("##169#170")){Vec{2,Float64}}, ::FlexibleSimplex{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:27
   [6] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:38 [inlined]
   [7] gjk0(::GeometryTypes.MinkowskiDifference{FlexibleConvexHull{Vec{2,Float64}},Simplex{1,Vec{2,Float64}}}, ::Float64, ::Int64, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:148
   [8] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [9] gjk(::FlexibleConvexHull{Vec{2,Float64}}, ::Simplex{1,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165
   [10] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:20 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:8 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
two simplices: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:21
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([3.0, -0.5], [0.0, -0.5], Inf), 0x0000000000006b3f)
  Expression: min_euclidean(c1, c2) ≈ 3
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119 [inlined]
   [4] #169 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:39 [inlined]
   [5] with_immutable(::getfield(GeometryTypes, Symbol("##169#170")){Vec{2,Float64}}, ::FlexibleSimplex{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:27
   [6] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:38 [inlined]
   [7] gjk0(::GeometryTypes.MinkowskiDifference{FlexibleConvexHull{Vec{2,Float64}},Simplex{1,Vec{2,Float64}}}, ::Float64, ::Int64, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:148
   [8] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [9] gjk at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165 [inlined]
   [10] min_euclidean(::FlexibleConvexHull{Vec{2,Float64}}, ::Simplex{1,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:64
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:21 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:8 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.⋅ is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
gjk intersecting lines: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:41
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, 1.0], [1.0, 1.0], Inf), 0x0000000000006b3f)
  Expression: gjk0(FlexibleConvexHull(md)) == (Vec(0.0, 0.0), 0.0)
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119 [inlined]
   [4] #169 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:39 [inlined]
   [5] with_immutable(::getfield(GeometryTypes, Symbol("##169#170")){Vec{2,Float64}}, ::FlexibleSimplex{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:27
   [6] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:38 [inlined]
   [7] gjk0(::FlexibleConvexHull{Vec{2,Float64}}, ::Float64, ::Int64, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:148
   [8] gjk0(::FlexibleConvexHull{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136
   [9] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:41 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:30 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
gjk intersecting lines: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:42
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, 1.0], [1.0, 1.0], Inf), 0x0000000000006b3f)
  Expression: gjk(c1, c3) == 0.0
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119 [inlined]
   [4] #169 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:39 [inlined]
   [5] with_immutable(::getfield(GeometryTypes, Symbol("##169#170")){Vec{2,Float64}}, ::FlexibleSimplex{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:27
   [6] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:38 [inlined]
   [7] gjk0(::GeometryTypes.MinkowskiDifference{Simplex{2,Vec{2,Float64}},Simplex{2,Vec{2,Float64}}}, ::Float64, ::Int64, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:148
   [8] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [9] gjk(::Simplex{2,Vec{2,Float64}}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165
   [10] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:42 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:30 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [14] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [16] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
gjk intersecting lines: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:43
  Test threw exception MethodError(GeometryTypes.proj_sqdist, ([1.0, 1.0], [1.0, 1.0], Inf), 0x0000000000006b3f)
  Expression: min_euclidean(c1, c3) == 0.0
  MethodError: no method matching proj_sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64)
  Closest candidates are:
    proj_sqdist(::T, !Matched::Simplex{2,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119
    proj_sqdist(::T, !Matched::Simplex{1,T}, ::Any) where T at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:182
    proj_sqdist(::T, !Matched::Simplex{nv,T}, ::Any) where {nv, T} at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:147
    ...
  Stacktrace:
   [1] sqdist(::Vec{2,Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:170 (repeats 2 times)
   [2] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:124 [inlined]
   [3] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/simplices.jl:119 [inlined]
   [4] #169 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:39 [inlined]
   [5] with_immutable(::getfield(GeometryTypes, Symbol("##169#170")){Vec{2,Float64}}, ::FlexibleSimplex{Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:27
   [6] proj_sqdist at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:38 [inlined]
   [7] gjk0(::GeometryTypes.MinkowskiDifference{Simplex{2,Vec{2,Float64}},Simplex{2,Vec{2,Float64}}}, ::Float64, ::Int64, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:148
   [8] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [9] gjk at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165 [inlined]
   [10] min_euclidean(::Simplex{2,Vec{2,Float64}}, ::Simplex{2,Vec{2,Float64}}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:64
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:43 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:30 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
Cube: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:49
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0, 0], [1.0, 1.0, 1.0]))), 0x0000000000006b3f)
  Expression: min_euclidean(Vec(2.0, 2.0, 2.0), c) ≈ gjk(Vec(2.0, 2.0, 2.0), c) ≈ √(3 / 4)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{3,Int64},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{3,Float64},Vec{3,Float64}})(::Vec{3,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:58 [inlined]
   [10] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:79 [inlined]
   [11] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:92 [inlined]
   [12] gjk0(::GeometryTypes.MinkowskiDifference{Vec{3,Float64},HyperCube{3,Float64}}, ::Float64, ::Int64, ::Vec{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:143
   [13] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [14] gjk at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165 [inlined]
   [15] min_euclidean(::Vec{3,Float64}, ::HyperCube{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:63
   [16] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:49 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [18] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:48 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [20] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [21] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [22] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
Cube: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:52
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0, 0], [1.0, 1.0, 1.0]))), 0x0000000000006b3f)
  Expression: 0 <= min_euclidean(s, c) <= 1.0e-14
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{3,Int64},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{3,Float64},Vec{3,Float64}})(::Vec{3,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:58 [inlined]
   [10] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:79 [inlined]
   [11] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:92 [inlined]
   [12] gjk0(::GeometryTypes.MinkowskiDifference{Simplex{2,Vec{3,Float64}},HyperCube{3,Float64}}, ::Float64, ::Int64, ::Vec{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:143
   [13] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [14] gjk at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165 [inlined]
   [15] min_euclidean(::Simplex{2,Vec{3,Float64}}, ::HyperCube{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:64
   [16] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:52 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [18] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:48 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [20] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [21] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [22] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
Cube: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:53
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0, 0], [1.0, 1.0, 1.0]))), 0x0000000000006b3f)
  Expression: 0 <= gjk(s, c) <= 1.0e-14
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{3,Int64},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{3,Float64},Vec{3,Float64}})(::Vec{3,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:58 [inlined]
   [10] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:79 [inlined]
   [11] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:92 [inlined]
   [12] gjk0(::GeometryTypes.MinkowskiDifference{Simplex{2,Vec{3,Float64}},HyperCube{3,Float64}}, ::Float64, ::Int64, ::Vec{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:143
   [13] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [14] gjk(::Simplex{2,Vec{3,Float64}}, ::HyperCube{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165
   [15] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:53 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [17] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:48 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [19] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [21] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:4
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = Type at FixedSizeArrays.jl:122 [inlined]
└ @ Core FixedSizeArrays.jl:122
Cube: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:56
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0, 0], [1.0, 1.0, 1.0]))), 0x0000000000006b3f)
  Expression: min_euclidean(s, c) ≈ gjk(s, c) ≈ √(3 / 4)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{3,Int64},Vec{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{3,Float64},Vec{3,Float64}})(::Vec{3,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:58 [inlined]
   [10] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:79 [inlined]
   [11] support_vector_max at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:92 [inlined]
   [12] gjk0(::GeometryTypes.MinkowskiDifference{Simplex{4,Vec{3,Float64}},HyperCube{3,Float64}}, ::Float64, ::Int64, ::Vec{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:143
   [13] gjk0 at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:136 [inlined]
   [14] gjk at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:165 [inlined]
   [15] min_euclidean(::Simplex{4,Vec{3,Float64}}, ::HyperCube{3,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/operations.jl:64
   [16] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:56 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [18] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:48 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [20] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:7 [inlined]
   [21] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [22] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:63
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([1.0, 2.0], [1.0, 0.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(r, Vec(1.0, 0.0)) == (Vec(0.5, -1.0), 0.5)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] support_vector_max(::HyperRectangle{2,Float64}, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:83
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:63 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:64
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([1.0, 2.0], [2.0, 0.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(r, Vec(2.0, 0.0)) == (Vec(0.5, -1.0), 1.0)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] support_vector_max(::HyperRectangle{2,Float64}, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:83
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:64 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:65
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([1.0, 2.0], [-1.0, 0.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(r, Vec(-1.0, 0.0)) == (Vec(-0.5, -1.0), 0.5)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] support_vector_max(::HyperRectangle{2,Float64}, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:83
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:65 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:66
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([1.0, 2.0], [0.0, 1.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(r, Vec(0.0, 1.0)) == (Vec(-0.5, 1.0), 1.0)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] support_vector_max(::HyperRectangle{2,Float64}, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:83
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:66 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:67
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([1.0, 2.0], [1.0, 1.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(r, Vec(1.0, 1.0)) == (Vec(0.5, 1.0), 1.5)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Float64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] support_vector_max(::HyperRectangle{2,Float64}, ::Vec{2,Float64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/gjk.jl:83
   [4] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:67 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleConvexHull(::HyperRectangle{2,Float64})` should be defined instead.
│   caller = macro expansion at gjk.jl:68 [inlined]
└ @ Core gjk.jl:68
support_vector_max: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:68
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(2),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(*, ([0, 0], [1.0, 2.0]))), 0x0000000000006b3f)
  Expression: support_vector_max(FlexibleConvexHull(r), Vec(1.0, 1.0)) == (Vec(0.5, 1.0), 1.5)
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(*),Tuple{Vec{2,Int64},Vec{2,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize at ./broadcast.jl:716 [inlined]
   [3] (::getfield(GeometryTypes, Symbol("#f#167")){Vec{2,Float64},Vec{2,Float64}})(::Vec{2,Int64}) at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:54
   [4] next at ./generator.jl:47 [inlined]
   [5] _collect at ./array.jl:571 [inlined]
   [6] collect_similar at ./array.jl:496 [inlined]
   [7] map at ./abstractarray.jl:1983 [inlined]
   [8] vertices at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:55 [inlined]
   [9] convert at /home/vagrant/.julia/v0.7/GeometryTypes/src/convexhulls.jl:72 [inlined]
   [10] FlexibleConvexHull(::HyperRectangle{2,Float64}) at ./deprecated.jl:473
   [11] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:68 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:62 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/gjk.jl:6
┌ Warning: Constructors no longer fall back to `convert`. A constructor `FlexibleConvexHull(::GeometryTypes.MinkowskiDifference{Simplex{2,Vec{2,Float64}},Simplex{2,Vec{2,Float64}}})` should be defined instead.
│   caller = macro expansion at gjk.jl:73 [inlined]
└ @ Core gjk.jl:73
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/lines.jl:2
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:421 [inlined]
└ @ Core IterTools.jl:421
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:421 [inlined]
└ @ Core IterTools.jl:421
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = simple_concat(::Array{Point{2,Float32},1}, ::UnitRange{Int64}, ::Point{2,Float32}) at lines.jl:51
└ @ GeometryTypes lines.jl:51
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = macro expansion at lines.jl:37 [inlined]
└ @ Core lines.jl:37
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
constructors: Error During Test at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:24
  Test threw exception MethodError(Base.Broadcast.broadcast_similar, (StaticArrays.StaticArrayStyle{1}(), Float64, (Base.OneTo(3),), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}}(-, ([0.184146, 0.26075, 0.315718], [0.440749, 0.310098, 0.981454]))), 0x0000000000006b40)
  Expression: isapprox(direction(s), (v2 - v1) ./ norm(v2 .- v1))
  MethodError: no method matching broadcast_similar(::StaticArrays.StaticArrayStyle{1}, ::Type{Float64}, ::Tuple{Base.OneTo{Int64}}, ::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(-),Tuple{Point{3,Float64},Point{3,Float64}}})
  Closest candidates are:
    broadcast_similar(!Matched::Base.Broadcast.DefaultArrayStyle{N}, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}}, ::Any) where {N, ElType} at broadcast.jl:197
    broadcast_similar(!Matched::Base.Broadcast.ArrayConflict, ::Type{ElType}, ::Tuple{Vararg{AbstractUnitRange,N}} where N, ::Any) where ElType at broadcast.jl:202
    broadcast_similar(!Matched::LinearAlgebra.StructuredMatrixStyle{T}, ::Type{ElType}, ::Any, ::Any) where {T, ElType} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/LinearAlgebra/src/structuredbroadcast.jl:95
    ...
  Stacktrace:
   [1] copy at ./broadcast.jl:736 [inlined]
   [2] materialize(::Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1},Nothing,typeof(-),Tuple{Point{3,Float64},Point{3,Float64}}}) at ./broadcast.jl:716
   [3] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:24 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [5] macro expansion at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:3 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1079 [inlined]
   [7] top-level scope at /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:2
WARNING: importing deprecated binding Base.normalize! into GeometryTypes.
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::SimpleRectangle{Float32}, ::Tuple{Int64,Int64}) at decompose.jl:207
└ @ GeometryTypes decompose.jl:207
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = decompose(::Type{Point{3,Float32}}, ::SimpleRectangle{Float32}, ::Tuple{Int64,Int64}) at decompose.jl:207
└ @ GeometryTypes decompose.jl:207
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Face{3,Int64}}, ::Array{Face{4,Int64},1}) at decompose.jl:172
└ @ GeometryTypes decompose.jl:172
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
WARNING: Base.normalize! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/GeometryTypes/test/cylinder.jl:1
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Point{3,Float64}}, ::Cylinder{3,Float64}, ::Int64) at decompose.jl:429
└ @ GeometryTypes decompose.jl:429
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = decompose(::Type{Face{3,Int64}}, ::Cylinder{3,Float64}, ::Int64) at decompose.jl:446
└ @ GeometryTypes decompose.jl:446
Test Summary:                              | Pass  Error  Total
GeometryTypes                              |  259     54    313
  Convex Hulls                             |   32      1     33
    conversions                            |   12            12
    Utility functions                      |   17            17
    isapprox                               |    2             2
    Rects                                  |    1      1      2
  Polygons                                 |    2             2
  Hyper Cubes                              |    4             4
  Hyper Rectangles                         |   53     11     64
    constructors and containment           |    5      1      6
    Testing split function                 |    6             6
    Test distance functions                |   26            26
    set operations                         |    4      8     12
    relations                              |    9             9
    point membership                       |    3             3
    from Points                            |           1      1
    transforms                             |           1      1
  faces                                    |    5      1      6
    constructors                           |    2             2
    getindex                               |    2             2
    setindex                               |    1             1
    views                                  |           1      1
    negative offests and unsigned integers |              No tests
  Mesh Types                               |   13      3     16
    Merging Mesh                           |           1      1
    Show                                   |           1      1
    construction                           |    1             1
    Primitives                             |           1      1
    Slice                                  |    5             5
    checkbounds                            |    3             3
    vertex normals                         |    2             2
    conversion                             |    1             1
    construction                           |    1             1
  Distance Fields                          |    2      2      4
    SignedDistanceField                    |    2      1      3
    getindex                               |           1      1
  Primitives                               |    7             7
  Simplex                                  |    2             2
  decompose functions                      |   14      2     16
    General                                |              No tests
    HyperRectangles                        |    2             2
    Faces                                  |    4             4
    Simplex                                |    4             4
    SimpleRectangle                        |    4             4
    Normals                                |           1      1
    HyperSphere                            |           1      1
  SimpleRectangle                          |   15      3     18
    constructors                           |   13            13
    setops                                 |           3      3
    indexing                               |    2             2
  HyperSphere                              |   13            13
  eltype                                   |   10            10
  ndims                                    |    8             8
  example simplices                        |   19     15     34
    2d simplex in 2d                       |    9      3     12
    counterexample                         |           2      2
    3d simplex in 3d                       |    7      2      9
    1d simplex in 2d                       |           4      4
    1d simplex in 3d                       |    3      4      7
  gjk                                      |   25     15     40
    gjk examples                           |   11      9     20
      two simplices                        |    6      2      8
      gjk intersecting lines               |    5      3      8
      Cube                                 |           4      4
    support_vector_max                     |    8      6     14
    make immutable                         |    6             6
  Lines                                    |   16            16
  Polygons                                 |    2             2
  Cylinder                                 |   17      1     18
    constructors                           |   13      1     14
    decompose                              |    4             4
ERROR: LoadError: Some tests did not pass: 259 passed, 0 failed, 54 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for GeometryTypes
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/GeometryTypes/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: GeometryTypes had test errors

>>> End of log
