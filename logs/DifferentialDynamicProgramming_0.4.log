>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1078.01171875 MB free)
Uptime: 26546.0 sec
Load Avg:  0.9169921875  0.98046875  1.017578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1043917 s       2584 s      87399 s    1289432 s         49 s
#2  3500 MHz     760754 s       3525 s      75737 s    1707367 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64982.782   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.20886e-12  final value -43.9594      factorizations 17
  4.253710 seconds (3.11 M allocations: 243.276 MB, 3.07% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.7285     22.2        22.2        0.11        0.0         
2           27.5639     8.63        8.63        0.0747      -0.2        
3           18.9384     6.17        6.17        0.093       -0.6        
4           12.77       5.59        5.59        0.167       -1.2        
5           7.17818     2.81        2.81        0.269       -2.0        
6           4.36797     0.54        0.54        0.211       -3.1        
7           3.82834     0.0249      0.0249      0.0768      -4.3        
8           3.80342     2.41e-05    2.41e-05    0.00239     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.803394    

            final grad:   3.703565e-06

            final lambda: 4.4841551e-08

            time / iter:  785   ms

            total time:   7.07  seconds, of which

            derivs:     0.7 %

            back pass:  91.2%

            fwd pass:   2.0 %

            other:      6.0 % (graphics etc.)
 =========== end iLQG ===========
 20.302577 seconds (14.73 M allocations: 920.799 MB, 3.09% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
