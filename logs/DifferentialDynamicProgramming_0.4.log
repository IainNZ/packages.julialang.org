>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1060.58984375 MB free)
Uptime: 22791.0 sec
Load Avg:  0.9697265625  1.03173828125  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1062073 s         51 s      86290 s     901001 s         54 s
#2  3500 MHz     700294 s       5999 s      74518 s    1425999 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64561.241   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 3.21871e-12  final value -42.3625      factorizations 16
  5.505453 seconds (3.10 M allocations: 237.410 MB, 2.59% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.1233     30.3        30.3        0.124       0.0         
2           20.8473     9.47        9.47        0.0812      -0.2        
3           11.378      3.26        3.26        0.0646      -0.6        
4           8.11357     1.6         1.6         0.0839      -1.2        
5           6.51404     1.05        1.05        0.129       -2.0        
6           5.46757     0.537       0.537       0.154       -3.1        
7           4.93104     0.0454      0.0454      0.0566      -4.3        
8           4.88568     5.61e-05    5.61e-05    0.00226     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.885624    

            final grad:   3.694467e-06

            final lambda: 4.4841551e-08

            time / iter:  631   ms

            total time:   5.68  seconds, of which

            derivs:     1.0 %

            back pass:  92.5%

            fwd pass:   1.4 %

            other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 19.168208 seconds (14.73 M allocations: 920.829 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
