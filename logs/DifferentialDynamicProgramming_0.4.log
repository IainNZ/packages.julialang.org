>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1105.53515625 MB free)
Uptime: 22012.0 sec
Load Avg:  1.05908203125  1.00830078125  1.01025390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1030718 s        721 s      86976 s     850623 s         30 s
#2  3503 MHz     696251 s       5527 s      75402 s    1348020 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67473.960   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 3.1838e-12  final value -22.477       factorizations 20
  5.262883 seconds (3.11 M allocations: 261.254 MB, 2.64% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.6844     18.8        18.8        0.0997      0.0         
2           30.8855     11.6        11.6        0.0934      -0.2        
3           19.3177     6.99        6.99        0.103       -0.6        
4           12.3316     4.15        4.15        0.12        -1.2        
5           8.17967     2.54        2.54        0.184       -2.0        
6           5.64452     0.901       0.901       0.204       -3.1        
7           4.74344     0.0697      0.0697      0.0742      -4.3        
8           4.67376     9.02e-05    9.02e-05    0.00282     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.673665    

            final grad:   4.491138e-06

            final lambda: 4.4841551e-08

            time / iter:  952   ms

            total time:   8.57  seconds, of which

            derivs:     0.6 %

            back pass:  93.5%

            fwd pass:   1.6 %

            other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 22.886010 seconds (14.73 M allocations: 920.798 MB, 2.71% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
