>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1047.55078125 MB free)
Uptime: 21252.0 sec
Load Avg:  1.083984375  1.01416015625  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     973248 s       5830 s      90536 s     841965 s         41 s
#2  3505 MHz     709310 s       1093 s      78075 s    1248226 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.10.0
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67234.459   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.79466e-12  final value -29.3701      factorizations 20
  5.015355 seconds (3.11 M allocations: 235.488 MB, 1.29% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5701     23          23          0.108       0.0         
2           26.6128     11.5        11.5        0.0896      -0.2        
3           15.1452     5.63        5.63        0.0906      -0.6        
4           9.5144      2.4         2.4         0.101       -1.2        
5           7.11046     1.18        1.18        0.152       -2.0        
6           5.93314     0.295       0.295       0.198       -3.1        
7           5.63832     0.0114      0.0114      0.0569      -4.3        
8           5.62697     1.01e-05    1.01e-05    0.00206     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.626956    

            final grad:   3.306363e-06

            final lambda: 4.4841551e-08

            time / iter:  874   ms

            total time:   7.86  seconds, of which

            derivs:     0.6 %

            back pass:  91.3%

            fwd pass:   1.9 %

            other:      6.2 % (graphics etc.)
 =========== end iLQG ===========
 20.262787 seconds (14.73 M allocations: 870.429 MB, 2.47% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
