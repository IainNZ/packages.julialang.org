>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1082.28515625 MB free)
Uptime: 22805.0 sec
Load Avg:  1.1630859375  1.0673828125  1.0556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1082287 s       1671 s      92528 s     883092 s         93 s
#2  3499 MHz     696264 s       5982 s      78673 s    1424740 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.22.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62749.519   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.69707e-12  final value -27.6826      factorizations 13
  4.634886 seconds (3.10 M allocations: 222.722 MB, 2.74% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.4583     23.4        23.4        0.108       0.0         
2           26.0566     9.36        9.36        0.0787      -0.2        
3           16.7008     5.12        5.12        0.0835      -0.6        
4           11.5782     3.52        3.52        0.133       -1.2        
5           8.06093     2.07        2.07        0.25        -2.0        
6           5.99517     0.412       0.412       0.254       -3.1        
7           5.58334     0.0125      0.0125      0.0613      -4.3        
8           5.57082     1.05e-05    1.05e-05    0.00206     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.570813    

            final grad:   3.082695e-06

            final lambda: 4.4841551e-08

            time / iter:  871   ms

            total time:   7.83  seconds, of which

            derivs:     0.4 %

            back pass:  92.9%

            fwd pass:   1.8 %

            other:      4.9 % (graphics etc.)
 =========== end iLQG ===========
 22.028756 seconds (14.73 M allocations: 920.797 MB, 3.14% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
