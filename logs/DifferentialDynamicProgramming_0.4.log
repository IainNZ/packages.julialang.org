>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1122.0625 MB free)
Uptime: 21278.0 sec
Load Avg:  0.96923828125  0.9873046875  1.00634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     947873 s       3399 s      83798 s     868725 s         11 s
#2  3500 MHz     703241 s       3085 s      72791 s    1280956 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64271.714   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.89318e-12  final value -21.9865      factorizations 17
  3.413981 seconds (3.11 M allocations: 246.739 MB, 3.22% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1499     21.4        21.4        0.104       0.0         
2           28.7081     11.8        11.8        0.0911      -0.2        
3           16.924      6.19        6.19        0.0938      -0.6        
4           10.7293     3.32        3.32        0.104       -1.2        
5           7.41321     2.01        2.01        0.194       -2.0        
6           5.40114     0.713       0.713       0.219       -3.1        
7           4.68854     0.0405      0.0405      0.0681      -4.3        
8           4.64805     3.84e-05    3.84e-05    0.00237     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.648015    

            final grad:   3.575869e-06

            final lambda: 4.4841551e-08

            time / iter:  682   ms

            total time:   6.14  seconds, of which

            derivs:     0.9 %

            back pass:  91.5%

            fwd pass:   1.9 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 15.587745 seconds (14.73 M allocations: 920.829 MB, 3.33% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
