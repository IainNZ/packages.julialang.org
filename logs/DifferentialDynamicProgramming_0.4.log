>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1129.75390625 MB free)
Uptime: 23160.0 sec
Load Avg:  1.18603515625  1.0029296875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1053710 s       6319 s      93303 s     909475 s         33 s
#2  3500 MHz     763554 s        628 s      82949 s    1396253 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 69433.394   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 3.29845e-12  final value -39.6754      factorizations 19
  5.737418 seconds (3.11 M allocations: 254.635 MB, 2.52% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.9735     23.5        23.5        0.108       0.0         
2           26.4962     10.4        10.4        0.0858      -0.2        
3           16.0791     5.43        5.43        0.091       -0.6        
4           10.6446     2.93        2.93        0.119       -1.2        
5           7.7128      1.66        1.66        0.198       -2.0        
6           6.05226     0.444       0.444       0.256       -3.1        
7           5.60808     0.0136      0.0136      0.0655      -4.3        
8           5.59446     9.18e-06    9.18e-06    0.00192     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.594449    

            final grad:   2.967088e-06

            final lambda: 4.4841551e-08

            time / iter:  962   ms

            total time:   8.66  seconds, of which

            derivs:     0.6 %

            back pass:  93.3%

            fwd pass:   1.3 %

            other:      4.8 % (graphics etc.)
 =========== end iLQG ===========
 21.492558 seconds (14.73 M allocations: 920.800 MB, 2.75% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
