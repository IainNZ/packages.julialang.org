>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1071.8359375 MB free)
Uptime: 21853.0 sec
Load Avg:  1.0068359375  1.04638671875  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1033356 s       6148 s      87624 s     826995 s         39 s
#2  3501 MHz     656062 s       1318 s      77892 s    1368596 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.0
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 76208.502   
RESULT: Gradient norm smaller than tolerance.
iterations 23  gradient 3.28071e-12  final value -32.8398      factorizations 22
  4.637774 seconds (3.12 M allocations: 271.902 MB, 2.95% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.54       22.8        22.8        0.105       0.0         
2           26.7455     12.2        12.2        0.0883      -0.2        
3           14.5068     6.63        6.63        0.0903      -0.6        
4           7.87269     3.36        3.36        0.111       -1.2        
5           4.51026     1.72        1.72        0.147       -2.0        
6           2.78676     0.621       0.621       0.181       -3.1        
7           2.16598     0.0439      0.0439      0.0714      -4.3        
8           2.12209     5.44e-05    5.44e-05    0.00271     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.122035    

            final grad:   4.391752e-06

            final lambda: 4.4841551e-08

            time / iter:  816   ms

            total time:   7.35  seconds, of which

            derivs:     0.7 %

            back pass:  91.8%

            fwd pass:   1.8 %

            other:      5.8 % (graphics etc.)
 =========== end iLQG ===========
 20.621569 seconds (14.73 M allocations: 920.920 MB, 2.84% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
