>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1113.078125 MB free)
Uptime: 22280.0 sec
Load Avg:  1.07958984375  1.0625  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1003242 s       6873 s      84961 s     910401 s         42 s
#2  3499 MHz     728176 s        675 s      75689 s    1346102 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67047.939   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.81702e-12  final value -19.8418      factorizations 13
  5.052601 seconds (3.10 M allocations: 224.709 MB, 2.79% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.7013     27.2        27.2        0.113       0.0         
2           21.5241     9.51        9.51        0.0803      -0.2        
3           12.0157     3.71        3.71        0.0677      -0.6        
4           8.3008      2.03        2.03        0.0837      -1.2        
5           6.27341     1.06        1.06        0.148       -2.0        
6           5.21545     0.368       0.368       0.153       -3.1        
7           4.84775     0.0288      0.0288      0.054       -4.3        
8           4.81892     3.54e-05    3.54e-05    0.00226     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.818883    

            final grad:   3.709346e-06

            final lambda: 4.4841551e-08

            time / iter:  926   ms

            total time:   8.33  seconds, of which

            derivs:     0.7 %

            back pass:  91.9%

            fwd pass:   1.6 %

            other:      5.8 % (graphics etc.)
 =========== end iLQG ===========
 23.075257 seconds (14.73 M allocations: 920.876 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
