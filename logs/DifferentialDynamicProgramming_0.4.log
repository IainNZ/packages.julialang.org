>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1077.3515625 MB free)
Uptime: 22052.0 sec
Load Avg:  1.04833984375  1.05908203125  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1034658 s       5618 s      87480 s     853288 s         36 s
#2  3499 MHz     685400 s       1169 s      77468 s    1375089 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.0
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64706.346   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.72148e-12  final value -19.3068      factorizations 19
  3.515766 seconds (3.11 M allocations: 260.223 MB, 2.91% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.2674     21.1        21.1        0.105       0.0         
2           28.1822     10.7        10.7        0.0871      -0.2        
3           17.4749     5.39        5.39        0.0858      -0.6        
4           12.0898     3.43        3.43        0.105       -1.2        
5           8.65628     2.81        2.81        0.202       -2.0        
6           5.84766     1.28        1.28        0.235       -3.1        
7           4.56493     0.103       0.103       0.0809      -4.3        
8           4.4624      0.00013     0.00013     0.00318     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.462267    

            final grad:   4.842119e-06

            final lambda: 4.4841551e-08

            time / iter:  811   ms

            total time:   7.30  seconds, of which

            derivs:     0.7 %

            back pass:  92.3%

            fwd pass:   1.9 %

            other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 21.180931 seconds (14.73 M allocations: 920.829 MB, 2.72% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
