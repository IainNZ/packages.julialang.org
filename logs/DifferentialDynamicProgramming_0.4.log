>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1092.66796875 MB free)
Uptime: 21868.0 sec
Load Avg:  1.005859375  1.03466796875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1003374 s         58 s      79559 s     879051 s         42 s
#2  3500 MHz     654289 s       6419 s      69205 s    1368205 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.0
3 additional packages:
 - Compat                        0.23.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 68149.460   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.84057e-12  final value -23.3922      factorizations 13
  3.897924 seconds (3.10 M allocations: 221.495 MB, 3.26% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.9864     29.1        29.1        0.121       0.0         
2           22.8722     9.28        9.28        0.0801      -0.2        
3           13.5922     4.11        4.11        0.0729      -0.6        
4           9.48473     2.7         2.7         0.119       -1.2        
5           6.78685     1.3         1.3         0.161       -2.0        
6           5.48504     0.41        0.41        0.151       -3.1        
7           5.07533     0.0292      0.0292      0.0551      -4.3        
8           5.04616     3.5e-05    3.5e-05    0.00212     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.046125    

            final grad:   3.514048e-06

            final lambda: 4.4841551e-08

            time / iter:  878   ms

            total time:   7.90  seconds, of which

            derivs:     0.6 %

            back pass:  92.1%

            fwd pass:   1.7 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 20.161754 seconds (14.73 M allocations: 920.892 MB, 2.94% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
