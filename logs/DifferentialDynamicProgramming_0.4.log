>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1095.4140625 MB free)
Uptime: 22795.0 sec
Load Avg:  1.0283203125  1.0419921875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1039047 s       6263 s      84532 s     921525 s         35 s
#2  3500 MHz     750538 s       1184 s      73290 s    1370106 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66218.625   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.7835e-12  final value -27.127       factorizations 13
  4.399200 seconds (3.10 M allocations: 223.264 MB, 2.65% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1306     26.7        26.7        0.116       0.0         
2           23.4585     8           8           0.0771      -0.2        
3           15.457      4           4           0.0751      -0.6        
4           11.4528     2.95        2.95        0.113       -1.2        
5           8.49836     1.28        1.28        0.182       -2.0        
6           7.21531     0.165       0.165       0.155       -3.1        
7           7.05012     0.00679     0.00679     0.0454      -4.3        
8           7.04333     8.52e-06    8.52e-06    0.00175     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.04332     

            final grad:   2.949479e-06

            final lambda: 4.4841551e-08

            time / iter:  928   ms

            total time:   8.35  seconds, of which

            derivs:     0.6 %

            back pass:  92.8%

            fwd pass:   1.7 %

            other:      5.0 % (graphics etc.)
 =========== end iLQG ===========
 22.922183 seconds (14.73 M allocations: 920.880 MB, 2.80% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
