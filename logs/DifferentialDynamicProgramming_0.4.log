>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1143.2890625 MB free)
Uptime: 23382.0 sec
Load Avg:  0.9853515625  1.04150390625  1.08056640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1094192 s       6139 s      83268 s     919039 s         37 s
#2  3500 MHz     769786 s       1073 s      73881 s    1407400 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 75325.847   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.90157e-12  final value -27.6006      factorizations 17
  4.575776 seconds (3.11 M allocations: 244.785 MB, 2.58% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1298     23.2        23.2        0.106       0.0         
2           26.9672     11.5        11.5        0.0904      -0.2        
3           15.4858     5.77        5.77        0.0953      -0.6        
4           9.7142      2.55        2.55        0.1         -1.2        
5           7.16528     1.25        1.25        0.143       -2.0        
6           5.91232     0.261       0.261       0.16        -3.1        
7           5.65151     0.00845     0.00845     0.0494      -4.3        
8           5.64305     7.74e-06    7.74e-06    0.00183     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.643045    

            final grad:   3.045177e-06

            final lambda: 4.4841551e-08

            time / iter:  620   ms

            total time:   5.58  seconds, of which

            derivs:     0.6 %

            back pass:  88.8%

            fwd pass:   2.6 %

            other:      8.0 % (graphics etc.)
 =========== end iLQG ===========
 16.963107 seconds (14.73 M allocations: 920.830 MB, 3.29% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
