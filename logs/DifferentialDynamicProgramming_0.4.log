>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1137.7578125 MB free)
Uptime: 23216.0 sec
Load Avg:  1.16552734375  1.0693359375  1.05517578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1110697 s       5345 s      85900 s     874068 s         38 s
#2  3500 MHz     717319 s       2073 s      72309 s    1456854 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59896.083   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 2.59807e-12  final value -30.0691      factorizations 19
  5.445195 seconds (3.11 M allocations: 255.651 MB, 2.50% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.2254     22.7        22.7        0.107       0.0         
2           27.4882     11.7        11.7        0.0904      -0.2        
3           15.7469     7.02        7.02        0.1         -0.6        
4           8.7233      3.45        3.45        0.122       -1.2        
5           5.27563     1.31        1.31        0.152       -2.0        
6           3.96194     0.327       0.327       0.2         -3.1        
7           3.63513     0.0155      0.0155      0.063       -4.3        
8           3.6196      1.48e-05    1.48e-05    0.00222     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.619588    

            final grad:   3.58055e-06

            final lambda: 4.4841551e-08

            time / iter:  965   ms

            total time:   8.69  seconds, of which

            derivs:     0.8 %

            back pass:  93.3%

            fwd pass:   1.4 %

            other:      4.5 % (graphics etc.)
 =========== end iLQG ===========
 20.652044 seconds (14.73 M allocations: 920.861 MB, 2.85% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
