>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1111.80859375 MB free)
Uptime: 23130.0 sec
Load Avg:  0.97216796875  0.9892578125  0.96923828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1085218 s         34 s      82694 s     901272 s         60 s
#2  3500 MHz     745755 s       7767 s      73676 s    1380030 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 70553.577   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.67887e-12  final value -26.7731      factorizations 15
  5.102656 seconds (3.10 M allocations: 233.171 MB, 2.59% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.4221     27.9        27.9        0.119       0.0         
2           22.537      11          11          0.0852      -0.2        
3           11.5511     4.48        4.48        0.0744      -0.6        
4           7.06732     1.87        1.87        0.086       -1.2        
5           5.19949     0.897       0.897       0.13        -2.0        
6           4.30249     0.273       0.273       0.188       -3.1        
7           4.02955     0.0124      0.0124      0.0619      -4.3        
8           4.01716     1.14e-05    1.14e-05    0.00215     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.017153    

            final grad:   3.42034e-06

            final lambda: 4.4841551e-08

            time / iter:  802   ms

            total time:   7.22  seconds, of which

            derivs:     0.5 %

            back pass:  92.8%

            fwd pass:   1.8 %

            other:      4.8 % (graphics etc.)
 =========== end iLQG ===========
 18.551642 seconds (14.73 M allocations: 920.823 MB, 2.88% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
