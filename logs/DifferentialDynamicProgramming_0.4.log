>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1128.16796875 MB free)
Uptime: 23101.0 sec
Load Avg:  1.08447265625  1.05908203125  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1096949 s       5372 s      81364 s     892877 s         30 s
#2  3500 MHz     725294 s         63 s      70584 s    1421315 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 65362.015   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.09819e-12  final value -33.8062      factorizations 13
  4.866987 seconds (3.10 M allocations: 224.024 MB, 2.88% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.9403     29.1        29.1        0.122       0.0         
2           22.831      11.2        11.2        0.0877      -0.2        
3           11.677      4.01        4.01        0.0714      -0.6        
4           7.66704     1.81        1.81        0.0759      -1.2        
5           5.85632     1.02        1.02        0.137       -2.0        
6           4.8342      0.314       0.314       0.148       -3.1        
7           4.52048     0.0169      0.0169      0.053       -4.3        
8           4.50363     1.67e-05    1.67e-05    0.00205     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.503612    

            final grad:   3.313637e-06

            final lambda: 4.4841551e-08

            time / iter:  951   ms

            total time:   8.56  seconds, of which

            derivs:     0.7 %

            back pass:  92.9%

            fwd pass:   1.5 %

            other:      5.0 % (graphics etc.)
 =========== end iLQG ===========
 21.932995 seconds (14.73 M allocations: 920.800 MB, 3.02% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
