>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1060.3515625 MB free)
Uptime: 22381.0 sec
Load Avg:  1.31689453125  1.08349609375  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1036982 s         66 s      94234 s     899325 s         36 s
#2  3503 MHz     777173 s       6720 s      82478 s    1311169 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 58043.507   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 2.90807e-12  final value -29.7871      factorizations 14
  5.288901 seconds (3.10 M allocations: 227.076 MB, 2.65% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.3381     14.1        14.1        0.0802      0.0         
2           35.2483     9.35        9.35        0.0787      -0.2        
3           25.8966     6.7         6.7         0.0972      -0.6        
4           19.1929     4.28        4.28        0.142       -1.2        
5           14.9113     2.25        2.25        0.217       -2.0        
6           12.6631     0.639       0.639       0.27        -3.1        
7           12.0242     0.0258      0.0258      0.0739      -4.3        
8           11.9984     2.02e-05    2.02e-05    0.00238     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   11.99836    

            final grad:   3.593752e-06

            final lambda: 4.4841551e-08

            time / iter:  910   ms

            total time:   8.19  seconds, of which

            derivs:     0.6 %

            back pass:  92.8%

            fwd pass:   1.6 %

            other:      5.0 % (graphics etc.)
 =========== end iLQG ===========
 20.729513 seconds (14.73 M allocations: 920.798 MB, 2.72% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
