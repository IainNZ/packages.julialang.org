>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1107.125 MB free)
Uptime: 22251.0 sec
Load Avg:  0.95947265625  1.037109375  1.0693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1020393 s       6808 s      81735 s     897551 s         44 s
#2  3499 MHz     755506 s          0 s      69833 s    1327563 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60090.762   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.04848e-12  final value -31.2576      factorizations 14
  4.546881 seconds (3.10 M allocations: 227.469 MB, 2.56% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5959     22          22          0.108       0.0         
2           27.6411     10.1        10.1        0.0836      -0.2        
3           17.5349     6.17        6.17        0.0936      -0.6        
4           11.366      3.84        3.84        0.121       -1.2        
5           7.52483     2.25        2.25        0.178       -2.0        
6           5.27014     0.675       0.675       0.206       -3.1        
7           4.59544     0.0411      0.0411      0.0661      -4.3        
8           4.55438     4.77e-05    4.77e-05    0.00252     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.554335    

            final grad:   3.983633e-06

            final lambda: 4.4841551e-08

            time / iter:  927   ms

            total time:   8.35  seconds, of which

            derivs:     0.7 %

            back pass:  93.0%

            fwd pass:   1.6 %

            other:      4.7 % (graphics etc.)
 =========== end iLQG ===========
 21.556721 seconds (14.73 M allocations: 920.855 MB, 2.74% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
