>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1074.01171875 MB free)
Uptime: 22340.0 sec
Load Avg:  1.0068359375  1.03173828125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1040665 s       4921 s      81683 s     886475 s         39 s
#2  3501 MHz     707757 s       2309 s      70880 s    1383376 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60874.359   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 3.23951e-12  final value -29.675       factorizations 12
  4.096328 seconds (3.10 M allocations: 217.368 MB, 2.70% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.4493     12.3        12.3        0.0757      0.0         
2           38.1456     9.47        9.47        0.0806      -0.2        
3           28.6748     9.41        9.41        0.119       -0.6        
4           19.2697     7.05        7.05        0.186       -1.2        
5           12.2231     3.81        3.81        0.276       -2.0        
6           8.41686     1.5         1.5         0.365       -3.1        
7           6.91711     0.0903      0.0903      0.118       -4.3        
8           6.82683     7.7e-05    7.7e-05    0.00389     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.826753    

            final grad:   5.681012e-06

            final lambda: 4.4841551e-08

            time / iter:  819   ms

            total time:   7.37  seconds, of which

            derivs:     0.7 %

            back pass:  91.5%

            fwd pass:   1.7 %

            other:      6.1 % (graphics etc.)
 =========== end iLQG ===========
 19.846045 seconds (14.73 M allocations: 920.917 MB, 2.87% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
