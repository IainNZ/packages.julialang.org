>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1134.04296875 MB free)
Uptime: 23313.0 sec
Load Avg:  1.01025390625  1.03759765625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1035914 s       6150 s      92595 s     974371 s         23 s
#2  3500 MHz     786337 s        442 s      81626 s    1370220 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 65221.440   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.17476e-12  final value -32.6279      factorizations 14
  4.915890 seconds (3.10 M allocations: 226.822 MB, 2.71% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.6787     24.3        24.3        0.112       0.0         
2           26.3518     10.8        10.8        0.0888      -0.2        
3           15.572      5.29        5.29        0.0858      -0.6        
4           10.2775     3.32        3.32        0.108       -1.2        
5           6.95409     1.61        1.61        0.187       -2.0        
6           5.34667     0.253       0.253       0.178       -3.1        
7           5.0934      0.00895     0.00895     0.0551      -4.3        
8           5.08445     9.43e-06    9.43e-06    0.00202     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.084442    

            final grad:   3.364877e-06

            final lambda: 4.4841551e-08

            time / iter:  975   ms

            total time:   8.78  seconds, of which

            derivs:     0.7 %

            back pass:  93.6%

            fwd pass:   1.5 %

            other:      4.2 % (graphics etc.)
 =========== end iLQG ===========
 20.699811 seconds (14.73 M allocations: 920.825 MB, 2.89% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
