>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1115.51953125 MB free)
Uptime: 22126.0 sec
Load Avg:  0.9921875  1.00537109375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    1056101 s       4112 s      85739 s     845974 s         34 s
#2  3507 MHz     669794 s       2484 s      72639 s    1392309 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60499.824   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.96251e-12  final value -26.9778      factorizations 16
  5.515039 seconds (3.10 M allocations: 239.896 MB, 2.73% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8768     27.1        27.1        0.108       0.0         
2           22.7779     10.9        10.9        0.081       -0.2        
3           11.8822     4.08        4.08        0.071       -0.6        
4           7.80187     1.97        1.97        0.0748      -1.2        
5           5.8363      0.999       0.999       0.143       -2.0        
6           4.83689     0.154       0.154       0.135       -3.1        
7           4.68283     0.00693     0.00693     0.0437      -4.3        
8           4.67589     9.3e-06    9.3e-06    0.00191     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.675882    

            final grad:   3.310036e-06

            final lambda: 4.4841551e-08

            time / iter:  942   ms

            total time:   8.48  seconds, of which

            derivs:     0.6 %

            back pass:  93.7%

            fwd pass:   1.4 %

            other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 22.188841 seconds (14.73 M allocations: 920.853 MB, 2.87% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
