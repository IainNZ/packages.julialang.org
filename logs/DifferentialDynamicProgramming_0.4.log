>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1097.86328125 MB free)
Uptime: 23040.0 sec
Load Avg:  1.0029296875  1.00146484375  1.03076171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1047732 s       2254 s      84753 s     939236 s         42 s
#2  3500 MHz     729130 s       5691 s      76774 s    1414494 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59597.215   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.96256e-12  final value -35.5744      factorizations 17
  5.040245 seconds (3.11 M allocations: 244.452 MB, 2.51% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.4299     27.5        27.5        0.115       0.0         
2           23.9154     11.9        11.9        0.0895      -0.2        
3           12.062      4.57        4.57        0.0774      -0.6        
4           7.49072     2.03        2.03        0.0787      -1.2        
5           5.46491     1.35        1.35        0.15        -2.0        
6           4.11406     0.36        0.36        0.191       -3.1        
7           3.75446     0.0112      0.0112      0.0593      -4.3        
8           3.74327     9.77e-06    9.77e-06    0.00219     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.74326     

            final grad:   3.585652e-06

            final lambda: 4.4841551e-08

            time / iter:  843   ms

            total time:   7.59  seconds, of which

            derivs:     0.8 %

            back pass:  92.1%

            fwd pass:   1.6 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 22.698827 seconds (14.73 M allocations: 920.905 MB, 2.92% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
