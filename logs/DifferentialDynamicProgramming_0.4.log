>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1090.32421875 MB free)
Uptime: 22857.0 sec
Load Avg:  1.07470703125  1.0302734375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1072996 s        100 s      80970 s     879620 s         34 s
#2  3500 MHz     703634 s       6077 s      73055 s    1408162 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64605.246   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.04719e-12  final value -50.6468      factorizations 13
  4.282623 seconds (3.10 M allocations: 220.759 MB, 2.92% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.772      22.8        22.8        0.103       0.0         
2           25.998      10.4        10.4        0.0837      -0.2        
3           15.5703     4.5         4.5         0.0801      -0.6        
4           11.0697     2.08        2.08        0.0907      -1.2        
5           8.99124     1.18        1.18        0.159       -2.0        
6           7.81084     0.6         0.6         0.218       -3.1        
7           7.21103     0.0531      0.0531      0.076       -4.3        
8           7.15796     6.2e-05    6.2e-05    0.00282     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.157895    

            final grad:   4.346208e-06

            final lambda: 4.4841551e-08

            time / iter:  817   ms

            total time:   7.36  seconds, of which

            derivs:     0.5 %

            back pass:  92.2%

            fwd pass:   2.0 %

            other:      5.3 % (graphics etc.)
 =========== end iLQG ===========
 20.209001 seconds (14.73 M allocations: 920.830 MB, 2.94% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
