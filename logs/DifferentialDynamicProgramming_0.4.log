>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1168.0078125 MB free)
Uptime: 28068.0 sec
Load Avg:  0.994140625  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1300593 s       6478 s      91590 s    1145360 s         42 s
#2  3499 MHz     901775 s         73 s      78565 s    1720982 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59615.265   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.87852e-12  final value -36.2039      factorizations 16
  3.965347 seconds (3.10 M allocations: 237.422 MB, 2.67% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.7862     16.2        16.2        0.0865      0.0         
2           34.5525     12.1        12.1        0.0903      -0.2        
3           22.4671     9.38        9.38        0.118       -0.6        
4           13.0846     5.79        5.79        0.173       -1.2        
5           7.29395     2.38        2.38        0.227       -2.0        
6           4.9138      0.619       0.619       0.233       -3.1        
7           4.29524     0.0311      0.0311      0.0839      -4.3        
8           4.26409     2.94e-05    2.94e-05    0.00275     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.26406     

            final grad:   4.309691e-06

            final lambda: 4.4841551e-08

            time / iter:  873   ms

            total time:   7.86  seconds, of which

            derivs:     0.6 %

            back pass:  93.9%

            fwd pass:   1.4 %

            other:      4.2 % (graphics etc.)
 =========== end iLQG ===========
 19.120591 seconds (14.73 M allocations: 920.800 MB, 2.95% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
