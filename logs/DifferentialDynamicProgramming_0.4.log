>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1046.3828125 MB free)
Uptime: 22395.0 sec
Load Avg:  0.88427734375  0.9931640625  1.0556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1058891 s       2516 s      85586 s     868050 s         89 s
#2  3499 MHz     669005 s       5245 s      76301 s    1401861 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.22.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62333.342   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.00176e-12  final value -35.6326      factorizations 14
  3.503702 seconds (3.10 M allocations: 227.818 MB, 3.08% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.4244     21.3        21.3        0.0978      0.0         
2           29.1513     10.7        10.7        0.085       -0.2        
3           18.4914     5.79        5.79        0.0932      -0.6        
4           12.6966     3.3         3.3         0.13        -1.2        
5           9.3985      1.81        1.81        0.201       -2.0        
6           7.59043     0.546       0.546       0.25        -3.1        
7           7.0448      0.0247      0.0247      0.0746      -4.3        
8           7.02007     2.47e-05    2.47e-05    0.00253     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.020046    

            final grad:   3.948988e-06

            final lambda: 4.4841551e-08

            time / iter:  748   ms

            total time:   6.73  seconds, of which

            derivs:     0.8 %

            back pass:  91.8%

            fwd pass:   1.8 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 18.077039 seconds (14.73 M allocations: 920.854 MB, 3.14% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
