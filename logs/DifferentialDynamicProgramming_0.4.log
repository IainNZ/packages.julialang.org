>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1139.59375 MB free)
Uptime: 23068.0 sec
Load Avg:  1.021484375  1.0244140625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1014060 s         96 s      88167 s     965734 s         11 s
#2  3500 MHz     758252 s       5564 s      77506 s    1380163 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61267.219   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 3.11255e-12  final value -26.421       factorizations 19
  3.415815 seconds (3.11 M allocations: 256.840 MB, 3.27% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.3458     28          28          0.126       0.0         
2           22.3597     10.2        10.2        0.087       -0.2        
3           12.2002     4.76        4.76        0.0792      -0.6        
4           7.44326     2.9         2.9         0.108       -1.2        
5           4.54643     1.69        1.69        0.166       -2.0        
6           2.8609      0.446       0.446       0.185       -3.1        
7           2.4147      0.021       0.021       0.0602      -4.3        
8           2.39375     2.14e-05    2.14e-05    0.00224     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.393732    

            final grad:   3.606047e-06

            final lambda: 4.4841551e-08

            time / iter:  508   ms

            total time:   4.57  seconds, of which

            derivs:     0.7 %

            back pass:  92.7%

            fwd pass:   1.5 %

            other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 13.926003 seconds (14.73 M allocations: 920.911 MB, 3.25% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
