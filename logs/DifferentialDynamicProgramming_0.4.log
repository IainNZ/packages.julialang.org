>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1146.1640625 MB free)
Uptime: 23754.0 sec
Load Avg:  1.06494140625  1.09423828125  1.0966796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1080055 s       4418 s      86588 s     958486 s         34 s
#2  3500 MHz     771118 s       2808 s      76800 s    1428179 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 72060.885   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.32268e-12  final value -20.5808      factorizations 15
  3.798958 seconds (3.10 M allocations: 234.863 MB, 2.82% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.6693     19.3        19.3        0.0957      0.0         
2           30.407      10.4        10.4        0.0834      -0.2        
3           20.0006     6.62        6.62        0.095       -0.6        
4           13.3852     4.63        4.63        0.143       -1.2        
5           8.75661     2.56        2.56        0.257       -2.0        
6           6.19981     0.508       0.508       0.231       -3.1        
7           5.69158     0.0203      0.0203      0.0566      -4.3        
8           5.67127     2.05e-05    2.05e-05    0.00208     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.671253    

            final grad:   3.381609e-06

            final lambda: 4.4841551e-08

            time / iter:  776   ms

            total time:   6.98  seconds, of which

            derivs:     0.5 %

            back pass:  91.8%

            fwd pass:   2.0 %

            other:      5.8 % (graphics etc.)
 =========== end iLQG ===========
 18.726996 seconds (14.73 M allocations: 920.829 MB, 2.90% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
