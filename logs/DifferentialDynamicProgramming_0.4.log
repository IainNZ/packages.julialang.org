>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1075.69921875 MB free)
Uptime: 23050.0 sec
Load Avg:  1.05419921875  1.10888671875  1.1142578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1055769 s       5596 s      87945 s     922742 s         50 s
#2  3501 MHz     698188 s        830 s      78470 s    1447189 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.24.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59391.715   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 2.93963e-12  final value -38.6106      factorizations 19
  4.552833 seconds (3.11 M allocations: 255.295 MB, 2.89% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.0433     27          27          0.118       0.0         
2           24.0672     11          11          0.089       -0.2        
3           13.0715     4.35        4.35        0.0768      -0.6        
4           8.72083     2.09        2.09        0.0865      -1.2        
5           6.63255     1           1           0.154       -2.0        
6           5.62947     0.207       0.207       0.149       -3.1        
7           5.42204     0.0126      0.0126      0.0509      -4.3        
8           5.40949     1.64e-05    1.64e-05    0.0021      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.40947     

            final grad:   3.541368e-06

            final lambda: 4.4841551e-08

            time / iter:  766   ms

            total time:   6.90  seconds, of which

            derivs:     0.8 %

            back pass:  93.6%

            fwd pass:   1.4 %

            other:      4.2 % (graphics etc.)
 =========== end iLQG ===========
 19.534621 seconds (14.73 M allocations: 920.830 MB, 2.94% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
