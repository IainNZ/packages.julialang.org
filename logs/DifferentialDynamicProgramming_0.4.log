>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1047.53515625 MB free)
Uptime: 22121.0 sec
Load Avg:  1.03857421875  0.97900390625  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1015642 s       6400 s      91781 s     868626 s         40 s
#2  3500 MHz     702686 s        440 s      82741 s    1355211 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.0
3 additional packages:
 - Compat                        0.23.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60345.546   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 2.9307e-12  final value -27.1108      factorizations 12
  4.418315 seconds (3.10 M allocations: 217.605 MB, 2.51% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.1455     23.2        23.2        0.1         0.0         
2           25.9876     9.82        9.82        0.0782      -0.2        
3           16.1691     4.95        4.95        0.0854      -0.6        
4           11.2177     3.76        3.76        0.134       -1.2        
5           7.45831     2.4         2.4         0.239       -2.0        
6           5.05671     0.761       0.761       0.202       -3.1        
7           4.2955      0.0495      0.0495      0.062       -4.3        
8           4.24599     5.57e-05    5.57e-05    0.00246     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.245939    

            final grad:   3.772499e-06

            final lambda: 4.4841551e-08

            time / iter:  767   ms

            total time:   6.90  seconds, of which

            derivs:     0.8 %

            back pass:  92.6%

            fwd pass:   1.4 %

            other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 17.512096 seconds (14.73 M allocations: 920.854 MB, 3.27% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
