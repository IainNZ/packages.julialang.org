>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1113.984375 MB free)
Uptime: 22821.0 sec
Load Avg:  1.00732421875  0.99609375  1.03173828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1038541 s         57 s      70857 s     949078 s         30 s
#2  3499 MHz     718618 s       6291 s      60458 s    1423259 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.26.0
 - MacroTools                    0.3.7
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 68215.979   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 2.95741e-12  final value -24.743       factorizations 18
  3.285303 seconds (3.11 M allocations: 251.953 MB, 3.24% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.7057     18.5        18.5        0.1         0.0         
2           32.1766     8.66        8.66        0.0814      -0.2        
3           23.5162     4.42        4.42        0.085       -0.6        
4           19.1001     2.52        2.52        0.11        -1.2        
5           16.5831     1.53        1.53        0.193       -2.0        
6           15.0531     0.415       0.415       0.257       -3.1        
7           14.6383     0.0166      0.0166      0.0743      -4.3        
8           14.6217     1.36e-05    1.36e-05    0.00201     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   14.62171    

            final grad:   2.940335e-06

            final lambda: 4.4841551e-08

            time / iter:  852   ms

            total time:   7.67  seconds, of which

            derivs:     0.6 %

            back pass:  91.5%

            fwd pass:   2.0 %

            other:      5.9 % (graphics etc.)
 =========== end iLQG ===========
 20.639844 seconds (14.73 M allocations: 920.800 MB, 2.82% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
