>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1089.20703125 MB free)
Uptime: 23539.0 sec
Load Avg:  0.923828125  1.0  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1035970 s       5102 s      88049 s     994017 s         36 s
#2  3503 MHz     745630 s       2287 s      76458 s    1432928 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.9.1
3 additional packages:
 - Compat                        0.25.2
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 70260.927   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.89901e-12  final value -27.6773      factorizations 20
  4.375644 seconds (3.11 M allocations: 260.884 MB, 3.21% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.9246     19.7        19.7        0.094       0.0         
2           30.1905     11.5        11.5        0.0893      -0.2        
3           18.685      6.38        6.38        0.1         -0.6        
4           12.3061     2.53        2.53        0.102       -1.2        
5           9.78049     0.973       0.973       0.138       -2.0        
6           8.80759     0.213       0.213       0.182       -3.1        
7           8.59485     0.0091      0.0091      0.0565      -4.3        
8           8.58575     9.88e-06    9.88e-06    0.00207     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   8.585741    

            final grad:   3.436552e-06

            final lambda: 4.4841551e-08

            time / iter:  945   ms

            total time:   8.50  seconds, of which

            derivs:     0.6 %

            back pass:  92.6%

            fwd pass:   1.6 %

            other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 21.734943 seconds (14.73 M allocations: 920.798 MB, 3.06% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
