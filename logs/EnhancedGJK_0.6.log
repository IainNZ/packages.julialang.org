>>> 'Pkg.add("EnhancedGJK")' log
INFO: Cloning cache of EnhancedGJK from https://github.com/rdeits/EnhancedGJK.jl.git
INFO: Installing ColorTypes v0.6.6
INFO: Installing CoordinateTransformations v0.4.1
INFO: Installing EnhancedGJK v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing GeometryTypes v0.4.4
INFO: Installing IterTools v0.2.0
INFO: Installing Rotations v0.6.1
INFO: Installing StaticArrays v0.6.6
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of EnhancedGJK
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EnhancedGJK")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1091.46875 MB free)
Uptime: 72566.0 sec
Load Avg:  0.9169921875  0.9912109375  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    4755088 s       7325 s     206222 s    1179204 s         40 s
#2  3499 MHz    1258018 s         58 s     119227 s    5721113 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - EnhancedGJK                   0.0.1
 - JSON                          0.16.4
9 additional packages:
 - ColorTypes                    0.6.6
 - Compat                        0.46.0
 - CoordinateTransformations     0.4.1
 - FixedPointNumbers             0.4.3
 - GeometryTypes                 0.4.4
 - IterTools                     0.2.0
 - Nullables                     0.0.3
 - Rotations                     0.6.1
 - StaticArrays                  0.6.6
INFO: Computing test dependencies for EnhancedGJK...
INFO: Installing BenchmarkTools v0.2.3
INFO: Installing FileIO v0.6.1
INFO: Installing MeshIO v0.1.1
INFO: Testing EnhancedGJK

WARNING: deprecated syntax "typealias Simplex{M,N,T} Union{MVector{M,SVector{N,T}},SVector{M,SVector{N,T}}}" at /home/vagrant/.julia/v0.6/EnhancedGJK/src/simplices.jl:2.
Use "Simplex{M,N,T} = Union{MVector{M,SVector{N,T}},SVector{M,SVector{N,T}}}" instead.

WARNING: deprecated syntax "typealias SimplexType{M,N,T} Union{Type{MVector{M,SVector{N,T}}},Type{SVector{M,SVector{N,T}}}}" at /home/vagrant/.julia/v0.6/EnhancedGJK/src/simplices.jl:3.
Use "SimplexType{M,N,T} = Union{Type{MVector{M,SVector{N,T}}},Type{SVector{M,SVector{N,T}}}}" instead.
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{2}) at ./deprecated.jl:57
 [3] projection_weights_impl(::Type{SVector{4,SVector{3,Float64}}}) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:70
 [4] projection_weights(...) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:17
 [5] Core.Inference.InferenceState(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:285
 [6] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2534
 [7] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [8] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [9] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [10] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [11] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [12] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [13] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [14] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [15] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [16] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [17] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [18] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [19] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2722
 [20] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [21] typeinf_frame(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:2504
 [22] typeinf_code(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:2583
 [23] typeinf_ext(::Core.MethodInstance, ::UInt64) at ./inference.jl:2622
 [24] macro expansion at /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl:27 [inlined]
 [25] macro expansion at ./test.jl:860 [inlined]
 [26] anonymous at ./<missing>:?
 [27] include_from_node1(::String) at ./loading.jl:576
 [28] include(::String) at ./sysimg.jl:14
 [29] process_options(::Base.JLOptions) at ./client.jl:305
 [30] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl, in expression starting on line 11
Test Summary: | Pass  Total
table         | 1323   1323
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{2}) at ./deprecated.jl:57
 [3] projection_weights_impl(::Type{SVector{3,SVector{2,Float64}}}) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:70
 [4] projection_weights(...) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:17
 [5] Core.Inference.InferenceState(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:285
 [6] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2534
 [7] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [8] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [9] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [10] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [11] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [12] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [13] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [14] typeinf_ext(::Core.MethodInstance, ::UInt64) at ./inference.jl:2628
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl:52 [inlined]
 [18] macro expansion at ./test.jl:860 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EnhancedGJK/test/johnson_distance.jl, in expression starting on line 1
Test Summary:                 | Pass  Total
johnson distance subalgorithm |  310    310
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{2}) at ./deprecated.jl:57
 [3] projection_weights_impl(::Type{SVector{2,SVector{2,Float64}}}) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:70
 [4] projection_weights(...) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/johnson_distance.jl:17
 [5] Core.Inference.InferenceState(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:285
 [6] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2534
 [7] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [8] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [9] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [10] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [11] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [12] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [13] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [14] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [15] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [16] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1922
 [17] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [18] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [19] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [20] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [21] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [22] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [23] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [24] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [25] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [26] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [27] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [28] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [29] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [30] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [31] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [32] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [33] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [34] (::Core.Inference.##189#190{Array{Any,1},Core.Inference.InferenceState})(::Expr) at ./<missing>:0
 [35] next(::Core.Inference.Generator{Array{Any,1},Core.Inference.##189#190{Array{Any,1},Core.Inference.InferenceState}}, ::Int64) at ./generator.jl:45
 [36] copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##189#190{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:573
 [37] _collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##189#190{Array{Any,1},Core.Inference.InferenceState}}, ::Core.Inference.HasShape) at ./array.jl:396
 [38] collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##189#190{Array{Any,1},Core.Inference.InferenceState}}) at ./array.jl:393
 [39] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1901
 [40] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [41] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2722
 [42] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [43] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [44] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [45] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [46] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [47] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [48] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2722
 [49] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [50] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [51] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [52] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [53] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [54] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [55] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [56] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [57] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [58] typeinf_ext(::Core.MethodInstance, ::UInt64) at ./inference.jl:2628
 [59] include_from_node1(::String) at ./loading.jl:576
 [60] include(::String) at ./sysimg.jl:14
 [61] process_options(::Base.JLOptions) at ./client.jl:305
 [62] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl, in expression starting on line 55
Test Summary:    | Pass  Total
simplex distance |    3      3
Test Summary: | Pass  Total
mesh to mesh  |    3      3
neighbor mesh to mesh: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: onebased not defined
  Stacktrace:
   [1] EnhancedGJK.NeighborMesh(::GeometryTypes.HomogenousMesh{GeometryTypes.Point{3,Float32},GeometryTypes.Face{3,GeometryTypes.OffsetInteger{-1,UInt32}},GeometryTypes.Normal{3,Float32},Void,Void,Void,Void}) at /home/vagrant/.julia/v0.6/EnhancedGJK/src/neighbor_mesh.jl:31
   [2] macro expansion at /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl:86 [inlined]
   [3] macro expansion at ./test.jl:860 [inlined]
   [4] anonymous at ./<missing>:?
   [5] include_from_node1(::String) at ./loading.jl:576
   [6] include(::String) at ./sysimg.jl:14
   [7] process_options(::Base.JLOptions) at ./client.jl:305
   [8] _start() at ./client.jl:371
Test Summary:         | Error  Total
neighbor mesh to mesh |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl, in expression starting on line 85
=============================[ ERROR: EnhancedGJK ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/EnhancedGJK/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BenchmarkTools v0.2.3
INFO: Removing FileIO v0.6.1
INFO: Removing MeshIO v0.1.1
ERROR: EnhancedGJK had test errors

>>> End of log
