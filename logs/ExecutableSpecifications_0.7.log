>>> 'Pkg.add("ExecutableSpecifications")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ExecutableSpecifications from https://github.com/erikedin/ExecutableSpecifications.jl.git
[ Info: Installing ExecutableSpecifications v0.0.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ExecutableSpecifications
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ExecutableSpecifications")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4803
Commit ff7b6452f8 (2018-04-06 17:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3514 MHz    4949285 s        132 s     360588 s    1800130 s         88 s
       #2  3514 MHz    1466979 s       6408 s     154535 s    6439389 s          3 s
       
  Memory: 2.939197540283203 GB (682.02734375 MB free)
  Uptime: 82382.0 sec
  Load Avg:  1.037109375  1.02490234375  1.03466796875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ExecutableSpecifications      0.0.2
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ExecutableSpecifications
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ExecutableSpecifications/test/runtests.jl:2
┌ Warning: `matchall(r::Regex, s::AbstractString; overlap::Bool=false)` is deprecated, use `collect((m.match for m = eachmatch(r, s, overlap=overlap)))` instead.
│   caller = parsetags(::ExecutableSpecifications.Gherkin.ByLineParser) at Gherkin.jl:102
└ @ ExecutableSpecifications.Gherkin Gherkin.jl:102
┌ Warning: `matchall(r::Regex, s::AbstractString; overlap::Bool=false)` is deprecated, use `collect((m.match for m = eachmatch(r, s, overlap=overlap)))` instead.
│   caller = parsescenario(::ExecutableSpecifications.Gherkin.ByLineParser) at Gherkin.jl:225
└ @ ExecutableSpecifications.Gherkin Gherkin.jl:225
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = parsescenario(::ExecutableSpecifications.Gherkin.ByLineParser) at Gherkin.jl:229
└ @ ExecutableSpecifications.Gherkin Gherkin.jl:229
Test Summary:    | Pass  Total
Feature          |   32     32
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = parseblocktext(::ByLineParser) at Gherkin.jl:146
└ @ ExecutableSpecifications.Gherkin Gherkin.jl:146
Test Summary:    | Pass  Total
Scenario         |   45     45
Test Summary:    | Pass  Total
Scenario Outline |   19     19
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ExecutableSpecifications/test/gherkin/tag_test.jl:1
Test Summary:    | Pass  Total
Tags             |   16     16
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ExecutableSpecifications/test/executor_test.jl:1
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = executescenario(::Executor, ::Scenario) at executor.jl:28
└ @ ExecutableSpecifications executor.jl:28
Test Summary:    | Pass  Total
Executor         |   13     13
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = executescenario(::Executor, ::Scenario) at executor.jl:28
└ @ ExecutableSpecifications executor.jl:28
Test Summary:         | Pass  Total
Executor Presentation |    6      6
Test Summary:    | Pass  Total
Feature Executor |    6      6
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = (::getfield(ExecutableSpecifications, Symbol("##FromMacroStepDefinitionMatcher#1#2")))(::String, ::Type, ::String) at stepdefinitions.jl:91
└ @ ExecutableSpecifications stepdefinitions.jl:91
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `find(f::Function, A::AbstractVector)` is deprecated, use `findall(f, A)` instead.
│   caller = findstepdefinition(::FromMacroStepDefinitionMatcher, ::Given) at stepdefinitions.jl:100
└ @ ExecutableSpecifications stepdefinitions.jl:100
┌ Warning: `find(f::Function, A::AbstractVector)` is deprecated, use `findall(f, A)` instead.
│   caller = findstepdefinition(::FromMacroStepDefinitionMatcher, ::Then) at stepdefinitions.jl:100
└ @ ExecutableSpecifications stepdefinitions.jl:100
┌ Warning: `find(f::Function, A::AbstractVector)` is deprecated, use `findall(f, A)` instead.
│   caller = findstepdefinition(::FromMacroStepDefinitionMatcher, ::When) at stepdefinitions.jl:100
└ @ ExecutableSpecifications stepdefinitions.jl:100
Test Summary:    | Pass  Total
Step definitions |   33     33
[ Info: ExecutableSpecifications tests passed

>>> End of log
