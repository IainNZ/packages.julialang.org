>>> 'Pkg.add("ImageDistances")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing Colors v0.8.2
[ Info: Installing Distances v0.6.0
[ Info: Installing FixedPointNumbers v0.4.6
[ Info: Installing ImageDistances v0.0.2
[ Info: Installing ProgressMeter v0.5.5
[ Info: Installing Reexport v0.1.0
[ Info: Package database updated

>>> 'Pkg.test("ImageDistances")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4959
Commit 509d6a1a88 (2018-04-27 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    1416899 s        102 s     124238 s     414994 s         12 s
       #2  3507 MHz     273580 s         67 s      43548 s    1935815 s          0 s
       
  Memory: 2.939197540283203 GB (1054.359375 MB free)
  Uptime: 22927.0 sec
  Load Avg:  0.94970703125  0.9873046875  0.95166015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ImageDistances                0.0.2
 - JSON                          0.17.2
8 additional packages:
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.64.0
 - Distances                     0.6.0
 - FixedPointNumbers             0.4.6
 - Nullables                     0.0.5
 - ProgressMeter                 0.5.5
 - Reexport                      0.1.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ImageDistances
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:4
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
in top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
in top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl
WARNING: Base.eye is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
in top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:14 [inlined]
└ @ Core runtests.jl:14
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:27 [inlined]
└ @ Core runtests.jl:27
WARNING: importing deprecated binding Base.uninitialized into Distances.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Warning: `find(A::AbstractArray)` is deprecated, use `(LinearIndices(A))[findall(A)]` instead.
│   caller = img2pset at hausdorff.jl:40 [inlined]
└ @ Core hausdorff.jl:40
┌ Warning: `ind2sub(dims::(Tuple{Vararg{Integer, N}} where N), ind::Integer)` is deprecated, use `(CartesianIndices(dims))[ind]` instead.
│   caller = #3 at <missing>:0 [inlined]
└ @ Core <missing>:0
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:29
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: hausdorff(A, A) == 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:62
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:29 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:30
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: hausdorff(A, B) == hausdorff(B, A)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:62
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:30 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:31
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: hausdorff(A, B) == hausdorff(A, C)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:62
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:31 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
┌ Warning: `find(A::AbstractArray)` is deprecated, use `(LinearIndices(A))[findall(A)]` instead.
│   caller = img2pset at hausdorff.jl:40 [inlined]
└ @ Core hausdorff.jl:40
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:32
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: modified_hausdorff(A, A) == 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] modified_hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:63
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:32 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:33
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: modified_hausdorff(A, B) == modified_hausdorff(B, A)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] modified_hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:63
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:33 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:34
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: modified_hausdorff(A, B) < modified_hausdorff(A, C)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] modified_hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:63
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:34 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
┌ Warning: `find(A::AbstractArray)` is deprecated, use `(LinearIndices(A))[findall(A)]` instead.
│   caller = img2pset at hausdorff.jl:40 [inlined]
└ @ Core hausdorff.jl:40
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:39
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: hausdorff(A, B) ≥ 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] hausdorff(::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:62
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:39 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
┌ Warning: `find(A::AbstractArray)` is deprecated, use `(LinearIndices(A))[findall(A)]` instead.
│   caller = img2pset at hausdorff.jl:40 [inlined]
└ @ Core hausdorff.jl:40
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:40
  Test threw exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`")
  Expression: modified_hausdorff(A, B) ≥ 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:58
   [9] modified_hausdorff(::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:63
   [10] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:40 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
┌ Warning: `find(A::AbstractArray)` is deprecated, use `(LinearIndices(A))[findall(A)]` instead.
│   caller = img2pset at hausdorff.jl:40 [inlined]
└ @ Core hausdorff.jl:40
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26
  Got exception ErrorException("iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`") outside of a @test
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:370
   [4] #3 at ./<missing>:0 [inlined]
   [5] next at ./generator.jl:47 [inlined]
   [6] collect(::Base.Generator{Array{Int64,1},getfield(ImageDistances, Symbol("##3#4")){Tuple{Int64,Int64}}}) at ./array.jl:558
   [7] img2pset at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:42 [inlined]
   [8] next at ./generator.jl:47 [inlined]
   [9] collect(::Base.Generator{Array{Array{Int64,2},1},typeof(ImageDistances.img2pset)}) at ./array.jl:558
   [10] pairwise(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Array{Int64,2},1}, ::Array{Array{Int64,2},1}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:69
   [11] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:43 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [13] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:27 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:1022 [inlined]
   [15] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:13
   [16] include at ./boot.jl:314 [inlined]
   [17] include_relative(::Module, ::String) at ./loading.jl:1067
   [18] include(::Module, ::String) at ./sysimg.jl:29
   [19] exec_options(::Base.JLOptions) at ./client.jl:327
   [20] _start() at ./client.jl:455
Test Summary:     | Pass  Error  Total
ImageDistances.jl |    6      9     15
  Generic         |    4             4
  Hausdorff       |           9      9
  CIEDE2000       |    2             2
ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 9 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Error: ------------------------------------------------------------
│ # Testing failed for ImageDistances
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: ImageDistances had test errors

>>> End of log
