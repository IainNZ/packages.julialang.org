>>> 'Pkg.add("ImageDistances")' log
[ Info: Cloning cache of ImageDistances from https://github.com/JuliaImages/ImageDistances.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Distances v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ImageDistances v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of ImageDistances
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("ImageDistances")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    5665631 s        133 s     283473 s    1249706 s         64 s
       #2  3499 MHz    1048388 s         52 s     108983 s    7251005 s          0 s
       
  Memory: 2.93927001953125 GB (670.11328125 MB free)
  Uptime: 85324.0 sec
  Load Avg:  0.958984375  0.95556640625  0.9755859375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ImageDistances                0.0.1
 - JSON                          0.16.3
3 additional packages:
 - Compat                        0.42.0
 - Distances                     0.5.0
 - Nullables                     0.0.2
[ Info: Testing ImageDistances @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:3
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:13 [inlined]
└ @ Core runtests.jl:13
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = macro expansion at runtests.jl:26 [inlined]
└ @ Core runtests.jl:26
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: `ind2sub(dims::(Tuple{Vararg{Integer, N}} where N), ind::Integer)` is deprecated, use `(CartesianIndices(dims))[ind]` instead.
│   caller = evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at hausdorff.jl:52
└ @ ImageDistances hausdorff.jl:52
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:29
  Test threw an exception of type ErrorException
  Expression: hausdorff(A, B) == hausdorff(B, A)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:69
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:29 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:30
  Test threw an exception of type ErrorException
  Expression: hausdorff(A, B) == hausdorff(A, C)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:69
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: `ind2sub(dims::(Tuple{Vararg{Integer, N}} where N), ind::Integer)` is deprecated, use `(CartesianIndices(dims))[ind]` instead.
│   caller = evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at hausdorff.jl:52
└ @ ImageDistances hausdorff.jl:52
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:32
  Test threw an exception of type ErrorException
  Expression: modified_hausdorff(A, B) == modified_hausdorff(B, A)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] modified_hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:70
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:32 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:33
  Test threw an exception of type ErrorException
  Expression: modified_hausdorff(A, B) < modified_hausdorff(A, C)
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] modified_hausdorff(::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:70
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:33 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:38
  Test threw an exception of type ErrorException
  Expression: hausdorff(A, B) ≥ 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] hausdorff(::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:69
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:38 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = evaluate at hausdorff.jl:65 [inlined]
└ @ Core hausdorff.jl:65
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:39
  Test threw an exception of type ErrorException
  Expression: modified_hausdorff(A, B) ≥ 0
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MeanReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] evaluate at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:65 [inlined]
   [6] modified_hausdorff(::Array{Int64,2}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:70
   [7] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:39 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = next at generator.jl:47 [inlined]
└ @ Core generator.jl:47
┌ Warning: In the future `find(A)` will only work on boolean collections. Use `find(x->x!=0, A)` instead.
│   caller = next at generator.jl:47 [inlined]
└ @ Core generator.jl:47
Hausdorff: Error During Test at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:25
  Got an exception of type ErrorException outside of a @test
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] append_any(::CartesianIndex{2}, ::Vararg{CartesianIndex{2},N} where N) at ./essentials.jl:390
   [4] evaluate(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Int64,1}, ::Array{Int64,1}, ::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:52
   [5] pairwise(::Hausdorff{ImageDistances.MinReduction,ImageDistances.MaxReduction}, ::Array{Array{Int64,2},1}, ::Array{Array{Int64,2},1}) at /home/vagrant/.julia/v0.7/ImageDistances/src/hausdorff.jl:95
   [6] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:42 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:26 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:12
   [11] include at ./boot.jl:295 [inlined]
   [12] include_relative(::Module, ::String) at ./loading.jl:521
   [13] include(::Module, ::String) at ./sysimg.jl:26
   [14] process_options(::Base.JLOptions) at ./client.jl:323
   [15] _start() at ./client.jl:374
Test Summary:     | Pass  Error  Total
ImageDistances.jl |    6      7     13
  Generic         |    4             4
  Hausdorff       |    2      7      9
ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 7 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl:11
┌ Error: ------------------------------------------------------------
│ # Testing failed for ImageDistances
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ImageDistances/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: ImageDistances had test errors

>>> End of log
