>>> 'Pkg.add("JuliaFEM")' log
INFO: Cloning cache of AbaqusReader from https://github.com/JuliaFEM/AbaqusReader.jl.git
INFO: Cloning cache of AsterReader from https://github.com/JuliaFEM/AsterReader.jl.git
INFO: Cloning cache of JuliaFEM from https://github.com/JuliaFEM/JuliaFEM.jl.git
INFO: Installing AbaqusReader v0.1.0
INFO: Installing AsterReader v0.1.0
INFO: Installing BinaryProvider v0.3.0
INFO: Installing Blosc v0.4.1
INFO: Installing Calculus v0.3.0
INFO: Installing CategoricalArrays v0.3.9
INFO: Installing CodecZlib v0.4.3
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing Crayons v0.4.1
INFO: Installing DataFrames v0.11.6
INFO: Installing DataStreams v0.3.4
INFO: Installing DataStructures v0.8.1
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing FEMBase v0.1.4
INFO: Installing FEMBasis v0.1.6
INFO: Installing FEMQuad v0.1.0
INFO: Installing Formatting v0.3.1
INFO: Installing ForwardDiff v0.7.5
INFO: Installing HDF5 v0.8.8
INFO: Installing JuliaFEM v0.3.7
INFO: Installing LightXML v0.6.0
INFO: Installing Logging v0.3.1
INFO: Installing Missings v0.2.9
INFO: Installing NamedTuples v4.0.0
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.21.0
INFO: Installing TimerOutputs v0.3.1
INFO: Installing TranscodingStreams v0.5.2
INFO: Installing WeakRefStrings v0.4.4
INFO: Building Blosc
INFO: Building HDF5
INFO: Building CodecZlib
INFO: Building SpecialFunctions
INFO: Building LightXML
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JuliaFEM
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JuliaFEM")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1170.375 MB free)
Uptime: 41252.0 sec
Load Avg:  0.84130859375  1.1376953125  1.10546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2477599 s       6491 s     174014 s     873899 s         27 s
#2  3504 MHz     590458 s         73 s      71915 s    3385308 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - JuliaFEM                      0.3.7
48 additional packages:
 - AbaqusReader                  0.1.0
 - AsterReader                   0.1.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.0
 - Blosc                         0.4.1
 - Cairo                         0.5.1
 - Calculus                      0.3.0
 - CategoricalArrays             0.3.9
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - CommonSubexpressions          0.1.0
 - Compat                        0.63.0
 - Crayons                       0.4.1
 - DataFrames                    0.11.6
 - DataStreams                   0.3.4
 - DataStructures                0.8.1
 - DiffResults                   0.0.3
 - DiffRules                     0.0.4
 - FEMBase                       0.1.4
 - FEMBasis                      0.1.6
 - FEMQuad                       0.1.0
 - FixedPointNumbers             0.4.6
 - Formatting                    0.3.1
 - ForwardDiff                   0.7.5
 - Graphics                      0.3.0
 - Gtk                           0.13.1
 - HDF5                          0.8.8
 - LightXML                      0.6.0
 - Logging                       0.3.1
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - NodeJS                        0.4.0
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.2.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.21.0
 - TimerOutputs                  0.3.1
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - VegaLite                      0.1.0              ecb31725 (dirty)
 - WeakRefStrings                0.4.4
INFO: Testing JuliaFEM
INFO: 53 test files found.
INFO: ----- Running tests from file test_contact_2d_finite_sliding.jl -----
WARNING: Method definition warn(Any...) in module Base at util.jl:589 overwritten in module Logging at /home/vagrant/.julia/v0.6/Logging/src/Logging.jl:115.
WARNING: Method definition info(Any...) in module Base at util.jl:534 overwritten in module Logging at /home/vagrant/.julia/v0.6/Logging/src/Logging.jl:115.
INFO: ----- Testing file test_contact_2d_finite_sliding.jl completed in 96.21 seconds -----
INFO: ----- Running tests from file test_dirichlet.jl -----
25-Apr 11:30:35:WARNING:root:Assemble problem test boundary: seems that problem is uninitialized.
INFO: ----- Testing file test_dirichlet.jl completed in 4.29 seconds -----
INFO: ----- Running tests from file test_elasticity_1d.jl -----
INFO: ----- Testing file test_elasticity_1d.jl completed in 0.28 seconds -----
INFO: ----- Running tests from file test_elasticity_2d_linear_with_surface_load.jl -----
INFO: ----- Testing file test_elasticity_2d_linear_with_surface_load.jl completed in 3.0 seconds -----
INFO: ----- Running tests from file test_elasticity_2d_nonhomogeneous_boundary_conditions.jl -----
INFO: ----- Testing file test_elasticity_2d_nonhomogeneous_boundary_conditions.jl completed in 1.06 seconds -----
INFO: ----- Running tests from file test_elasticity_2d_nonlinear_with_surface_load.jl -----
INFO: ----- Testing file test_elasticity_2d_nonlinear_with_surface_load.jl completed in 1.53 seconds -----
INFO: ----- Running tests from file test_elasticity_2d_plane_stress_stiffness_matrix.jl -----
25-Apr 11:30:42:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
INFO: ----- Testing file test_elasticity_2d_plane_stress_stiffness_matrix.jl completed in 0.73 seconds -----
INFO: ----- Running tests from file test_elasticity_2d_residual.jl -----
INFO: ----- Testing file test_elasticity_2d_residual.jl completed in 0.19 seconds -----
INFO: ----- Running tests from file test_elasticity_3d_linear_with_surface_load.jl -----
INFO: ----- Testing file test_elasticity_3d_linear_with_surface_load.jl completed in 13.39 seconds -----
INFO: ----- Running tests from file test_elasticity_3d_nonlinear_with_surface_load.jl -----
INFO: ----- Testing file test_elasticity_3d_nonlinear_with_surface_load.jl completed in 1.13 seconds -----
INFO: ----- Running tests from file test_elasticity_3d_unit_block.jl -----
INFO: ----- Testing file test_elasticity_3d_unit_block.jl completed in 1.62 seconds -----
INFO: ----- Running tests from file test_elasticity_forwarddiff.jl -----
INFO: ----- Testing file test_elasticity_forwarddiff.jl completed in 0.0 seconds -----
INFO: ----- Running tests from file test_elasticity_hollow_sphere_with_surface_pressure.jl -----
1 -> [-33205.8, -32607.1, 436.863]
2 -> [-32045.9, -31161.4, 395.799]
3 -> [-33275.4, -32548.6, 597.288]
4 -> [-45594.1, -44294.1, -7686.88]
5 -> [-45289.5, -44314.2, -7565.39]
6 -> [-45710.3, -45213.0, -8653.44]
7 -> [-45616.8, -43861.1, -7372.95]
8 -> [-44972.3, -43647.1, -6390.18]
9 -> [-46027.0, -44056.5, -7252.02]
10 -> [-43630.2, -42890.1, -5946.91]
...
INFO: ----- Testing file test_elasticity_hollow_sphere_with_surface_pressure.jl completed in 4.4 seconds -----
INFO: ----- Running tests from file test_elasticity_med_pyr5_point_load.jl -----
INFO: ----- Testing file test_elasticity_med_pyr5_point_load.jl completed in 2.68 seconds -----
INFO: ----- Running tests from file test_elasticity_plane_strain.jl -----
INFO: ----- Testing file test_elasticity_plane_strain.jl completed in 0.41 seconds -----
INFO: ----- Running tests from file test_elasticity_pyr5_point_load.jl -----
INFO: ----- Testing file test_elasticity_pyr5_point_load.jl completed in 0.41 seconds -----
INFO: ----- Running tests from file test_elasticity_tet10_mass_matrix.jl -----
25-Apr 11:31:07:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_elasticity_tet10_mass_matrix.jl completed in 1.38 seconds -----
INFO: ----- Running tests from file test_elasticity_tet10_stiffness_matrix.jl -----
25-Apr 11:31:09:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
INFO: ----- Testing file test_elasticity_tet10_stiffness_matrix.jl completed in 0.48 seconds -----
INFO: ----- Running tests from file test_elasticity_tet4_stiffness_matrix.jl -----
25-Apr 11:31:09:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
INFO: ----- Testing file test_elasticity_tet4_stiffness_matrix.jl completed in 0.49 seconds -----
INFO: ----- Running tests from file test_elasticity_tetra.jl -----
INFO: ----- Testing file test_elasticity_tetra.jl completed in 0.46 seconds -----
INFO: ----- Running tests from file test_elasticplastic_2d_nonhomogenious_boundary_conditions.jl -----
INFO: ----- Testing file test_elasticplastic_2d_nonhomogenious_boundary_conditions.jl completed in 0.0 seconds -----
INFO: ----- Running tests from file test_elasticplastic_3d_linear_with_surface_load.jl -----
INFO: ----- Testing file test_elasticplastic_3d_linear_with_surface_load.jl completed in 0.0 seconds -----
INFO: ----- Running tests from file test_heat_2.jl -----
25-Apr 11:31:10:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:10:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_heat_2.jl completed in 1.96 seconds -----
INFO: ----- Running tests from file test_heat_3d_two_rings.jl -----
25-Apr 11:31:13:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
    1 :  0.00000  0.00000  0.80000 |  1.00000  1.00000 | 0.00000e+00
    2 :  0.20000  0.00000  0.80000 |  1.00000  1.00000 | 0.00000e+00
    3 :  0.20000  0.00000  0.90000 |  1.52326  1.52326 | 0.00000e+00
    4 :  0.00000  0.00000  0.90000 |  1.53678  1.53678 | 1.44487e-16
    5 :  0.00000  0.90000  0.00000 |  1.52707  1.52707 | 1.45406e-16
    6 :  0.00000  0.80000  0.00000 |  1.00000  1.00000 | 0.00000e+00
    7 :  0.00000  0.73910  0.30615 |  1.00000  1.00000 | 0.00000e+00
    8 :  0.00000  0.56569  0.56569 |  1.00000  1.00000 | 1.11022e-16
    9 :  0.00000  0.30615  0.73910 |  1.00000  1.00000 | 0.00000e+00
   10 :  0.00000  0.85595  0.27812 |  1.52898  1.52898 | 1.16179e-15
   11 :  0.00000  0.72812  0.52901 |  1.53418  1.53418 | 3.90777e-15
   12 :  0.00000  0.52901  0.72812 |  1.53765  1.53765 | 4.33217e-16
   13 :  0.00000  0.27812  0.85595 |  1.53805  1.53805 | 1.15494e-15
   14 :  0.20000  0.80000  0.00000 |  1.00000  1.00000 | 0.00000e+00
   15 :  0.20000  0.73910  0.30615 |  1.00000  1.00000 | 0.00000e+00
   16 :  0.20000  0.56569  0.56569 |  1.00000  1.00000 | 0.00000e+00
   17 :  0.20000  0.30615  0.73910 |  1.00000  1.00000 | 1.11022e-16
   18 :  0.20000  0.90000  0.00000 |  1.52965  1.52965 | 3.04836e-15
   19 :  0.20000  0.85595  0.27812 |  1.53775  1.53775 | 7.50860e-15
   20 :  0.20000  0.72812  0.52901 |  1.54248  1.54248 | 9.50090e-15
   21 :  0.20000  0.52901  0.72812 |  1.54140  1.54140 | 1.00837e-15
   22 :  0.20000  0.27812  0.85595 |  1.52935  1.52935 | 6.67867e-15
   23 :  0.00000 -0.30615  0.73910 |  1.00000  1.00000 | 1.11022e-16
   24 :  0.00000 -0.56569  0.56569 |  1.00000  1.00000 | 1.11022e-16
   25 :  0.00000 -0.73910  0.30615 |  1.00000  1.00000 | 1.11022e-16
   26 :  0.00000 -0.80000  0.00000 |  1.00000  1.00000 | 0.00000e+00
   27 :  0.00000 -0.90000  0.00000 |  1.52885  1.52885 | 5.80946e-16
   28 :  0.00000 -0.27812  0.85595 |  1.53357  1.53357 | 1.88226e-15
   29 :  0.00000 -0.52901  0.72812 |  1.53666  1.53666 | 2.74546e-15
   30 :  0.00000 -0.72812  0.52901 |  1.53520  1.53520 | 3.32661e-15
   31 :  0.00000 -0.85595  0.27812 |  1.53442  1.53442 | 1.44709e-16
   32 :  0.20000 -0.27812  0.85595 |  1.53560  1.53560 | 0.00000e+00
   33 :  0.20000 -0.52901  0.72812 |  1.54016  1.54016 | 2.88340e-16
   34 :  0.20000 -0.72812  0.52901 |  1.54284  1.54284 | 1.29528e-15
   35 :  0.20000 -0.85595  0.27812 |  1.53252  1.53252 | 4.34666e-16
   36 :  0.20000 -0.90000  0.00000 |  1.52828  1.52828 | 1.45290e-16
   37 :  0.20000 -0.80000  0.00000 |  1.00000  1.00000 | 0.00000e+00
   38 :  0.20000 -0.30615  0.73910 |  1.00000  1.00000 | 0.00000e+00
   39 :  0.20000 -0.56569  0.56569 |  1.00000  1.00000 | 0.00000e+00
   40 :  0.20000 -0.73910  0.30615 |  1.00000  1.00000 | 0.00000e+00
   41 :  0.20000  0.30615 -0.73910 |  1.00000  1.00000 | 1.11022e-16
   42 :  0.20000  0.00000 -0.80000 |  1.00000  1.00000 | 0.00000e+00
   43 :  0.20000  0.56569 -0.56569 |  1.00000  1.00000 | 0.00000e+00
   44 :  0.20000  0.73910 -0.30615 |  1.00000  1.00000 | 0.00000e+00
   45 :  0.20000  0.00000 -0.90000 |  1.52829  1.52829 | 2.32464e-15
   46 :  0.20000  0.27812 -0.85595 |  1.54004  1.54004 | 1.87435e-15
   47 :  0.20000  0.52901 -0.72812 |  1.54280  1.54280 | 7.77185e-15
   48 :  0.20000  0.72812 -0.52901 |  1.54144  1.54144 | 2.88100e-16
   49 :  0.20000  0.85595 -0.27812 |  1.52951  1.52951 | 3.48417e-15
   50 :  0.00000 -0.00000 -0.90000 |  1.52844  1.52844 | 1.45275e-16
   51 :  0.00000  0.27812 -0.85595 |  1.52914  1.52914 | 2.90417e-16
   52 :  0.00000  0.52901 -0.72812 |  1.53428  1.53428 | 2.74972e-15
   53 :  0.00000  0.72812 -0.52901 |  1.53763  1.53763 | 5.77627e-16
   54 :  0.00000  0.85595 -0.27812 |  1.53773  1.53773 | 7.21990e-16
   55 :  0.00000 -0.00000 -0.80000 |  1.00000  1.00000 | 0.00000e+00
   56 :  0.00000  0.30615 -0.73910 |  1.00000  1.00000 | 2.22045e-16
   57 :  0.00000  0.56569 -0.56569 |  1.00000  1.00000 | 0.00000e+00
   58 :  0.00000  0.73910 -0.30615 |  1.00000  1.00000 | 0.00000e+00
   59 :  0.00000 -0.73910 -0.30615 |  1.00000  1.00000 | 0.00000e+00
   60 :  0.00000 -0.56569 -0.56569 |  1.00000  1.00000 | 0.00000e+00
   61 :  0.00000 -0.30615 -0.73910 |  1.00000  1.00000 | 0.00000e+00
   62 :  0.00000 -0.85595 -0.27812 |  1.53799  1.53799 | 1.44373e-16
   63 :  0.00000 -0.72812 -0.52901 |  1.54234  1.54234 | 2.87932e-16
   64 :  0.00000 -0.52901 -0.72812 |  1.53923  1.53923 | 3.75067e-15
   65 :  0.00000 -0.27812 -0.85595 |  1.53601  1.53601 | 5.78237e-16
   66 :  0.20000 -0.85595 -0.27812 |  1.52991  1.52991 | 2.90271e-16
   67 :  0.20000 -0.72812 -0.52901 |  1.53391  1.53391 | 1.44757e-16
   68 :  0.20000 -0.52901 -0.72812 |  1.53697  1.53697 | 1.15575e-15
   69 :  0.20000 -0.27812 -0.85595 |  1.53276  1.53276 | 4.34598e-16
   70 :  0.20000 -0.73910 -0.30615 |  1.00000  1.00000 | 0.00000e+00
   71 :  0.20000 -0.56569 -0.56569 |  1.00000  1.00000 | 0.00000e+00
   72 :  0.20000 -0.30615 -0.73910 |  1.00000  1.00000 | 0.00000e+00
   73 :  0.20000  0.00000  1.00000 |  2.00000  2.00000 | 0.00000e+00
   74 :  0.00000  0.00000  1.00000 |  2.00000  2.00000 | 1.11022e-16
   75 :  0.20000  1.00000  0.00000 |  2.00000  2.00000 | 0.00000e+00
   76 :  0.20000  0.95106  0.30902 |  2.00000  2.00000 | 0.00000e+00
   77 :  0.20000  0.80902  0.58779 |  2.00000  2.00000 | 0.00000e+00
   78 :  0.20000  0.58779  0.80902 |  2.00000  2.00000 | 0.00000e+00
   79 :  0.20000  0.30902  0.95106 |  2.00000  2.00000 | 0.00000e+00
   80 :  0.00000  1.00000 -0.00000 |  2.00000  2.00000 | 0.00000e+00
   81 :  0.00000  0.95106  0.30902 |  2.00000  2.00000 | 0.00000e+00
   82 :  0.00000  0.80902  0.58779 |  2.00000  2.00000 | 0.00000e+00
   83 :  0.00000  0.58779  0.80902 |  2.00000  2.00000 | 0.00000e+00
   84 :  0.00000  0.30902  0.95106 |  2.00000  2.00000 | 0.00000e+00
   85 :  0.00000 -1.00000  0.00000 |  2.00000  2.00000 | 0.00000e+00
   86 :  0.00000 -0.30902  0.95106 |  2.00000  2.00000 | 0.00000e+00
   87 :  0.00000 -0.58779  0.80902 |  2.00000  2.00000 | 0.00000e+00
   88 :  0.00000 -0.80902  0.58779 |  2.00000  2.00000 | 0.00000e+00
   89 :  0.00000 -0.95106  0.30902 |  2.00000  2.00000 | 0.00000e+00
   90 :  0.20000 -1.00000  0.00000 |  2.00000  2.00000 | 0.00000e+00
   91 :  0.20000 -0.30902  0.95106 |  2.00000  2.00000 | 0.00000e+00
   92 :  0.20000 -0.58779  0.80902 |  2.00000  2.00000 | 1.11022e-16
   93 :  0.20000 -0.80902  0.58779 |  2.00000  2.00000 | 0.00000e+00
   94 :  0.20000 -0.95106  0.30902 |  2.00000  2.00000 | 0.00000e+00
   95 :  0.20000  0.00000 -1.00000 |  2.00000  2.00000 | 0.00000e+00
   96 :  0.20000  0.30902 -0.95106 |  2.00000  2.00000 | 0.00000e+00
   97 :  0.20000  0.58779 -0.80902 |  2.00000  2.00000 | 0.00000e+00
   98 :  0.20000  0.80902 -0.58779 |  2.00000  2.00000 | 0.00000e+00
   99 :  0.20000  0.95106 -0.30902 |  2.00000  2.00000 | 2.22045e-16
  100 :  0.00000 -0.00000 -1.00000 |  2.00000  2.00000 | 0.00000e+00
  101 :  0.00000  0.30902 -0.95106 |  2.00000  2.00000 | 0.00000e+00
  102 :  0.00000  0.58779 -0.80902 |  2.00000  2.00000 | 0.00000e+00
  103 :  0.00000  0.80902 -0.58779 |  2.00000  2.00000 | 0.00000e+00
  104 :  0.00000  0.95106 -0.30902 |  2.00000  2.00000 | 0.00000e+00
  105 :  0.00000 -0.95106 -0.30902 |  2.00000  2.00000 | 0.00000e+00
  106 :  0.00000 -0.80902 -0.58779 |  2.00000  2.00000 | 1.11022e-16
  107 :  0.00000 -0.58779 -0.80902 |  2.00000  2.00000 | 0.00000e+00
  108 :  0.00000 -0.30902 -0.95106 |  2.00000  2.00000 | 0.00000e+00
  109 :  0.20000 -0.95106 -0.30902 |  2.00000  2.00000 | 0.00000e+00
  110 :  0.20000 -0.80902 -0.58779 |  2.00000  2.00000 | 0.00000e+00
  111 :  0.20000 -0.58779 -0.80902 |  2.00000  2.00000 | 0.00000e+00
  112 :  0.20000 -0.30902 -0.95106 |  2.00000  2.00000 | 0.00000e+00
  113 :  0.10000 -0.14653 -0.92513 |  1.75757  1.75757 | 2.52672e-16
  114 :  0.10000  0.42417  0.83511 |  1.75987  1.75987 | 1.38788e-15
  115 :  0.10000 -0.92513  0.14653 |  1.75757  1.75757 | 2.52673e-16
  116 :  0.10000 -0.14771  0.92494 |  1.75692  1.75692 | 2.52765e-16
  117 :  0.10000  0.83512 -0.42417 |  1.75989  1.75989 | 3.78509e-16
INFO: ----- Testing file test_heat_3d_two_rings.jl completed in 2.71 seconds -----
INFO: ----- Running tests from file test_heat_3.jl -----
25-Apr 11:31:15:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_heat_3.jl completed in 2.52 seconds -----
INFO: ----- Running tests from file test_heat_4.jl -----
25-Apr 11:31:17:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:18:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:18:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:18:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:19:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:19:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:19:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:19:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:20:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:20:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_heat_4.jl completed in 3.59 seconds -----
INFO: ----- Running tests from file test_heat.jl -----
25-Apr 11:31:20:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:21:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:21:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:21:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:21:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:21:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:22:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:22:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
node 1 temp, JF: 1.000000e+02, CA: 1.000000e+02, rtol:   0.000000 %
node 2 temp, JF: 1.000000e+02, CA: 1.000000e+02, rtol:   0.000000 %
node 3 temp, JF: 1.000000e+02, CA: 1.000000e+02, rtol:   0.000000 %
node 4 temp, JF: 1.000000e+02, CA: 1.000000e+02, rtol:   0.000000 %
node 5 temp, JF: 3.016133e+01, CA: 3.016133e+01, rtol:   0.000000 %
node 6 temp, JF: 3.012634e+01, CA: 3.012634e+01, rtol:   0.000000 %
node 7 temp, JF: 3.025598e+01, CA: 3.025598e+01, rtol:   0.000000 %
node 8 temp, JF: 3.022092e+01, CA: 3.022092e+01, rtol:   0.000000 %
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Tet4       : Tmin =  33.3333, Tacc =  33.3333, rtol = 5.64881e-12 %
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Tet10      : Tmin =  33.3333, Tacc =  33.3333, rtol = 1.93511e-09 %
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex8       : Tmin =  33.3333, Tacc =  33.3333, rtol = 3.02691e-12 %
25-Apr 11:31:24:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:26:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex20      : Tmin =  33.3333, Tacc =  33.3333, rtol = 4.90274e-13 %
25-Apr 11:31:27:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:27:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex27      : Tmin =  33.3333, Tacc =  33.3333, rtol = 6.5441e-12 %
25-Apr 11:31:30:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:30:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Tet4       : T_min =  30.1872, T_ca =  30.1872, rtol = 4.71934e-12 %
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex8       : T_min =  30.1263, T_ca =  30.1263, rtol = 9.43417e-13 %
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex20      : T_min =  45.754, T_ca =  45.754, rtol = 6.42927e-12 %
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:31:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Hex27      : T_min =  45.776, T_ca =  45.776, rtol = 6.84527e-12 %
25-Apr 11:31:32:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:32:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
Tet10      : T_min =  43.8924, T_ca =  43.8924, rtol = 4.57691e-10 %
INFO: ----- Testing file test_heat.jl completed in 11.54 seconds -----
INFO: ----- Running tests from file test_modal_analysis_elasticity_2.jl -----
25-Apr 11:31:33:WARNING:root:Assemble problem bcs: seems that problem is uninitialized.
JF: 4.84532e+00 | CA: 4.84532e+00 | rtol: 4.96238e-07
JF: 4.90698e+00 | CA: 4.90698e+00 | rtol: 5.83307e-07
JF: 8.33813e+00 | CA: 8.33813e+00 | rtol: 2.82141e-07
25-Apr 11:31:39:WARNING:root:Assemble problem bcs: seems that problem is uninitialized.
JF: 1.19789e+00 | CA: 1.19789e+00 | rtol: 3.18180e-06
JF: 1.20179e+00 | CA: 1.20179e+00 | rtol: 1.07067e-06
JF: 3.07391e+00 | CA: 3.07391e+00 | rtol: 5.44742e-07
INFO: ----- Testing file test_modal_analysis_elasticity_2.jl completed in 7.08 seconds -----
INFO: ----- Running tests from file test_modal_analysis_elasticity.jl -----
25-Apr 11:31:40:WARNING:root:Assemble problem left support: seems that problem is uninitialized.
25-Apr 11:31:40:WARNING:root:Assemble problem right support: seems that problem is uninitialized.
JF: 9.65891e-01 | CA: 9.65942e-01 | rtol: 5.31092e-05
JF: 9.66112e-01 | CA: 9.66160e-01 | rtol: 5.00075e-05
JF: 2.52121e+00 | CA: 2.52127e+00 | rtol: 2.36731e-05
JF: 2.52182e+00 | CA: 2.52187e+00 | rtol: 2.02504e-05
JF: 3.48542e+00 | CA: 3.48584e+00 | rtol: 1.20782e-04
25-Apr 11:31:42:WARNING:root:Assemble problem bcs: seems that problem is uninitialized.
JF: 3.73724e+00 | CA: 3.73724e+00 | rtol: 1.24802e-06
JF: 3.73724e+00 | CA: 3.73724e+00 | rtol: 1.24802e-06
JF: 4.93519e+00 | CA: 4.93519e+00 | rtol: 9.56145e-07
JF: 6.59406e+00 | CA: 6.59406e+00 | rtol: 1.09201e-07
JF: 7.65105e+00 | CA: 7.65105e+00 | rtol: 1.33375e-07
INFO: ----- Testing file test_modal_analysis_elasticity.jl completed in 3.3 seconds -----
INFO: ----- Running tests from file test_modal_analysis.jl -----
25-Apr 11:31:42:WARNING:root:Assemble problem boundary condition: seems that problem is uninitialized.
25-Apr 11:31:43:WARNING:root:Adjusting nev from 10 to 2
25-Apr 11:31:43:WARNING:root:Assemble problem boundary condition: seems that problem is uninitialized.
25-Apr 11:31:43:WARNING:root:Adjusting nev from 10 to 2
25-Apr 11:31:43:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:43:WARNING:root:Assemble problem fixed ends: seems that problem is uninitialized.
25-Apr 11:31:44:WARNING:root:Adjusting nev from 10 to 1
25-Apr 11:31:44:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:44:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:44:WARNING:root:Assemble problem fixed ends: seems that problem is uninitialized.
25-Apr 11:31:44:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:31:45:WARNING:root:Adjusting nev from 10 to 1
25-Apr 11:31:45:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
INFO: ----- Testing file test_modal_analysis.jl completed in 2.64 seconds -----
INFO: ----- Running tests from file test_modal_analysis_zero_eigenmodes.jl -----
25-Apr 11:31:45:WARNING:root:Adjusting nev from 30 to 29
INFO: ----- Testing file test_modal_analysis_zero_eigenmodes.jl completed in 0.39 seconds -----
INFO: ----- Running tests from file test_mortar_2d_assembly.jl -----
INFO: ----- Testing file test_mortar_2d_assembly.jl completed in 0.93 seconds -----
INFO: ----- Running tests from file test_mortar_2d_calculate_projection.jl -----
X1 = [0.0, 1.0]
n1 = [0.0, 1.0]
INFO: ----- Testing file test_mortar_2d_calculate_projection.jl completed in 1.02 seconds -----
INFO: ----- Running tests from file test_mortar_2d_contact.jl -----
INFO: ----- Testing file test_mortar_2d_contact.jl completed in 2.89 seconds -----
INFO: ----- Running tests from file test_mortar_2d.jl -----
INFO: ----- Testing file test_mortar_2d.jl completed in 0.01 seconds -----
INFO: ----- Running tests from file test_mortar_2d_mesh_tie_forwarddiff.jl -----
INFO: ----- Testing file test_mortar_2d_mesh_tie_forwarddiff.jl completed in 4.92 seconds -----
INFO: ----- Running tests from file test_mortar_2d_mesh_tie.jl -----
25-Apr 11:31:56:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:31:56:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_mortar_2d_mesh_tie.jl completed in 1.98 seconds -----
INFO: ----- Running tests from file test_mortar_2d_weighted_gap.jl -----
INFO: ----- Testing file test_mortar_2d_weighted_gap.jl completed in 0.0 seconds -----
INFO: ----- Running tests from file test_mortar_3d_mesh_tie_modal.jl -----
25-Apr 11:31:58:WARNING:root:Assemble problem CYLINDER_20_1_FACE1: seems that problem is uninitialized.
25-Apr 11:31:58:WARNING:root:Assemble problem CYLINDER_20_2_FACE2: seems that problem is uninitialized.
25-Apr 11:32:02:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:32:03:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:32:03:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:32:03:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:32:03:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
25-Apr 11:32:03:WARNING:root:D is not diagonal, is dual basis used? This might take a long time.
mode 1 | freq JuliaFEM    1.181 | freq Code Aster    1.129
mode 2 | freq JuliaFEM    1.183 | freq Code Aster    1.131
mode 3 | freq JuliaFEM    3.054 | freq Code Aster    2.938
mode 4 | freq JuliaFEM    3.058 | freq Code Aster    2.941
mode 5 | freq JuliaFEM    4.695 | freq Code Aster    4.517
INFO: ----- Testing file test_mortar_3d_mesh_tie_modal.jl completed in 5.69 seconds -----
INFO: ----- Running tests from file test_mortar_3d_mesh_tie_two_rings.jl -----
25-Apr 11:32:03:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:03:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
    1 :  0.00000  0.00000  0.80000 |  1.00000  1.00000 |  0.00000
    2 :  0.20000  0.00000  0.80000 |  1.00000  1.00000 |  0.00000
    3 :  0.20000  0.00000  0.90000 |  1.52326  1.52326 |  0.00000
    4 :  0.00000  0.00000  0.90000 |  1.53678  1.53678 |  0.00000
    5 :  0.00000  0.90000  0.00000 |  1.52707  1.52707 |  0.00000
    6 :  0.00000  0.80000  0.00000 |  1.00000  1.00000 |  0.00000
    7 :  0.00000  0.73910  0.30615 |  1.00000  1.00000 |  0.00000
    8 :  0.00000  0.56569  0.56569 |  1.00000  1.00000 |  0.00000
    9 :  0.00000  0.30615  0.73910 |  1.00000  1.00000 |  0.00000
   10 :  0.00000  0.85595  0.27812 |  1.52898  1.52898 |  0.00000
   11 :  0.00000  0.72812  0.52901 |  1.53418  1.53418 |  0.00000
   12 :  0.00000  0.52901  0.72812 |  1.53765  1.53765 |  0.00000
   13 :  0.00000  0.27812  0.85595 |  1.53805  1.53805 |  0.00000
   14 :  0.20000  0.80000  0.00000 |  1.00000  1.00000 |  0.00000
   15 :  0.20000  0.73910  0.30615 |  1.00000  1.00000 |  0.00000
   16 :  0.20000  0.56569  0.56569 |  1.00000  1.00000 |  0.00000
   17 :  0.20000  0.30615  0.73910 |  1.00000  1.00000 |  0.00000
   18 :  0.20000  0.90000  0.00000 |  1.52965  1.52965 |  0.00000
   19 :  0.20000  0.85595  0.27812 |  1.53775  1.53775 |  0.00000
   20 :  0.20000  0.72812  0.52901 |  1.54248  1.54248 |  0.00000
   21 :  0.20000  0.52901  0.72812 |  1.54140  1.54140 |  0.00000
   22 :  0.20000  0.27812  0.85595 |  1.52935  1.52935 |  0.00000
   23 :  0.00000 -0.30615  0.73910 |  1.00000  1.00000 |  0.00000
   24 :  0.00000 -0.56569  0.56569 |  1.00000  1.00000 |  0.00000
   25 :  0.00000 -0.73910  0.30615 |  1.00000  1.00000 |  0.00000
   26 :  0.00000 -0.80000  0.00000 |  1.00000  1.00000 |  0.00000
   27 :  0.00000 -0.90000  0.00000 |  1.52885  1.52885 |  0.00000
   28 :  0.00000 -0.27812  0.85595 |  1.53357  1.53357 |  0.00000
   29 :  0.00000 -0.52901  0.72812 |  1.53666  1.53666 |  0.00000
   30 :  0.00000 -0.72812  0.52901 |  1.53520  1.53520 |  0.00000
   31 :  0.00000 -0.85595  0.27812 |  1.53442  1.53442 |  0.00000
   32 :  0.20000 -0.27812  0.85595 |  1.53560  1.53560 |  0.00000
   33 :  0.20000 -0.52901  0.72812 |  1.54016  1.54016 |  0.00000
   34 :  0.20000 -0.72812  0.52901 |  1.54284  1.54284 |  0.00000
   35 :  0.20000 -0.85595  0.27812 |  1.53252  1.53252 |  0.00000
   36 :  0.20000 -0.90000  0.00000 |  1.52828  1.52828 |  0.00000
   37 :  0.20000 -0.80000  0.00000 |  1.00000  1.00000 |  0.00000
   38 :  0.20000 -0.30615  0.73910 |  1.00000  1.00000 |  0.00000
   39 :  0.20000 -0.56569  0.56569 |  1.00000  1.00000 |  0.00000
   40 :  0.20000 -0.73910  0.30615 |  1.00000  1.00000 |  0.00000
   41 :  0.20000  0.30615 -0.73910 |  1.00000  1.00000 |  0.00000
   42 :  0.20000  0.00000 -0.80000 |  1.00000  1.00000 |  0.00000
   43 :  0.20000  0.56569 -0.56569 |  1.00000  1.00000 |  0.00000
   44 :  0.20000  0.73910 -0.30615 |  1.00000  1.00000 |  0.00000
   45 :  0.20000  0.00000 -0.90000 |  1.52829  1.52829 |  0.00000
   46 :  0.20000  0.27812 -0.85595 |  1.54004  1.54004 |  0.00000
   47 :  0.20000  0.52901 -0.72812 |  1.54280  1.54280 |  0.00000
   48 :  0.20000  0.72812 -0.52901 |  1.54144  1.54144 |  0.00000
   49 :  0.20000  0.85595 -0.27812 |  1.52951  1.52951 |  0.00000
   50 :  0.00000 -0.00000 -0.90000 |  1.52844  1.52844 |  0.00000
   51 :  0.00000  0.27812 -0.85595 |  1.52914  1.52914 |  0.00000
   52 :  0.00000  0.52901 -0.72812 |  1.53428  1.53428 |  0.00000
   53 :  0.00000  0.72812 -0.52901 |  1.53763  1.53763 |  0.00000
   54 :  0.00000  0.85595 -0.27812 |  1.53773  1.53773 |  0.00000
   55 :  0.00000 -0.00000 -0.80000 |  1.00000  1.00000 |  0.00000
   56 :  0.00000  0.30615 -0.73910 |  1.00000  1.00000 |  0.00000
   57 :  0.00000  0.56569 -0.56569 |  1.00000  1.00000 |  0.00000
   58 :  0.00000  0.73910 -0.30615 |  1.00000  1.00000 |  0.00000
   59 :  0.00000 -0.73910 -0.30615 |  1.00000  1.00000 |  0.00000
   60 :  0.00000 -0.56569 -0.56569 |  1.00000  1.00000 |  0.00000
   61 :  0.00000 -0.30615 -0.73910 |  1.00000  1.00000 |  0.00000
   62 :  0.00000 -0.85595 -0.27812 |  1.53799  1.53799 |  0.00000
   63 :  0.00000 -0.72812 -0.52901 |  1.54234  1.54234 |  0.00000
   64 :  0.00000 -0.52901 -0.72812 |  1.53923  1.53923 |  0.00000
   65 :  0.00000 -0.27812 -0.85595 |  1.53601  1.53601 |  0.00000
   66 :  0.20000 -0.85595 -0.27812 |  1.52991  1.52991 |  0.00000
   67 :  0.20000 -0.72812 -0.52901 |  1.53391  1.53391 |  0.00000
   68 :  0.20000 -0.52901 -0.72812 |  1.53697  1.53697 |  0.00000
   69 :  0.20000 -0.27812 -0.85595 |  1.53276  1.53276 |  0.00000
   70 :  0.20000 -0.73910 -0.30615 |  1.00000  1.00000 |  0.00000
   71 :  0.20000 -0.56569 -0.56569 |  1.00000  1.00000 |  0.00000
   72 :  0.20000 -0.30615 -0.73910 |  1.00000  1.00000 |  0.00000
   73 :  0.20000  0.00000  1.00000 |  2.00000  2.00000 |  0.00000
   74 :  0.00000  0.00000  1.00000 |  2.00000  2.00000 |  0.00000
   75 :  0.20000  1.00000  0.00000 |  2.00000  2.00000 |  0.00000
   76 :  0.20000  0.95106  0.30902 |  2.00000  2.00000 |  0.00000
   77 :  0.20000  0.80902  0.58779 |  2.00000  2.00000 |  0.00000
   78 :  0.20000  0.58779  0.80902 |  2.00000  2.00000 |  0.00000
   79 :  0.20000  0.30902  0.95106 |  2.00000  2.00000 |  0.00000
   80 :  0.00000  1.00000 -0.00000 |  2.00000  2.00000 |  0.00000
   81 :  0.00000  0.95106  0.30902 |  2.00000  2.00000 |  0.00000
   82 :  0.00000  0.80902  0.58779 |  2.00000  2.00000 |  0.00000
   83 :  0.00000  0.58779  0.80902 |  2.00000  2.00000 |  0.00000
   84 :  0.00000  0.30902  0.95106 |  2.00000  2.00000 |  0.00000
   85 :  0.00000 -1.00000  0.00000 |  2.00000  2.00000 |  0.00000
   86 :  0.00000 -0.30902  0.95106 |  2.00000  2.00000 |  0.00000
   87 :  0.00000 -0.58779  0.80902 |  2.00000  2.00000 |  0.00000
   88 :  0.00000 -0.80902  0.58779 |  2.00000  2.00000 |  0.00000
   89 :  0.00000 -0.95106  0.30902 |  2.00000  2.00000 |  0.00000
   90 :  0.20000 -1.00000  0.00000 |  2.00000  2.00000 |  0.00000
   91 :  0.20000 -0.30902  0.95106 |  2.00000  2.00000 |  0.00000
   92 :  0.20000 -0.58779  0.80902 |  2.00000  2.00000 |  0.00000
   93 :  0.20000 -0.80902  0.58779 |  2.00000  2.00000 |  0.00000
   94 :  0.20000 -0.95106  0.30902 |  2.00000  2.00000 |  0.00000
   95 :  0.20000  0.00000 -1.00000 |  2.00000  2.00000 |  0.00000
   96 :  0.20000  0.30902 -0.95106 |  2.00000  2.00000 |  0.00000
   97 :  0.20000  0.58779 -0.80902 |  2.00000  2.00000 |  0.00000
   98 :  0.20000  0.80902 -0.58779 |  2.00000  2.00000 |  0.00000
   99 :  0.20000  0.95106 -0.30902 |  2.00000  2.00000 |  0.00000
  100 :  0.00000 -0.00000 -1.00000 |  2.00000  2.00000 |  0.00000
  101 :  0.00000  0.30902 -0.95106 |  2.00000  2.00000 |  0.00000
  102 :  0.00000  0.58779 -0.80902 |  2.00000  2.00000 |  0.00000
  103 :  0.00000  0.80902 -0.58779 |  2.00000  2.00000 |  0.00000
  104 :  0.00000  0.95106 -0.30902 |  2.00000  2.00000 |  0.00000
  105 :  0.00000 -0.95106 -0.30902 |  2.00000  2.00000 |  0.00000
  106 :  0.00000 -0.80902 -0.58779 |  2.00000  2.00000 |  0.00000
  107 :  0.00000 -0.58779 -0.80902 |  2.00000  2.00000 |  0.00000
  108 :  0.00000 -0.30902 -0.95106 |  2.00000  2.00000 |  0.00000
  109 :  0.20000 -0.95106 -0.30902 |  2.00000  2.00000 |  0.00000
  110 :  0.20000 -0.80902 -0.58779 |  2.00000  2.00000 |  0.00000
  111 :  0.20000 -0.58779 -0.80902 |  2.00000  2.00000 |  0.00000
  112 :  0.20000 -0.30902 -0.95106 |  2.00000  2.00000 |  0.00000
  113 :  0.10000 -0.14653 -0.92513 |  1.75757  1.75757 |  0.00000
  114 :  0.10000  0.42417  0.83511 |  1.75987  1.75987 |  0.00000
  115 :  0.10000 -0.92513  0.14653 |  1.75757  1.75757 |  0.00000
  116 :  0.10000 -0.14771  0.92494 |  1.75692  1.75692 |  0.00000
  117 :  0.10000  0.83512 -0.42417 |  1.75989  1.75989 |  0.00000
INFO: ----- Testing file test_mortar_3d_mesh_tie_two_rings.jl completed in 1.8 seconds -----
INFO: ----- Running tests from file test_mortar_3d_polygon_clip.jl -----
INFO: ----- Testing file test_mortar_3d_polygon_clip.jl completed in 0.33 seconds -----
INFO: ----- Running tests from file test_mortar.jl -----
INFO: ----- Testing file test_mortar.jl completed in 0.07 seconds -----
INFO: ----- Running tests from file test_postprocess.jl -----
INFO: ----- Testing file test_postprocess.jl completed in 0.46 seconds -----
INFO: ----- Running tests from file test_potential_energy.jl -----

WARNING: deprecated syntax "abstract HeatProblem<:AbstractProblem" at /home/vagrant/.julia/v0.6/JuliaFEM/test/test_potential_energy.jl:8.
Use "abstract type HeatProblem<:AbstractProblem end" instead.
INFO: ----- Testing file test_potential_energy.jl completed in 0.02 seconds -----
INFO: ----- Running tests from file test_problems_contact_2d_autodiff.jl -----
INFO: ----- Testing file test_problems_contact_2d_autodiff.jl completed in 9.48 seconds -----
INFO: ----- Running tests from file test_problems_contact_2d.jl -----
[0.0, 0.5]
[0.0, 0.5]
INFO: ----- Testing file test_problems_contact_2d.jl completed in 4.52 seconds -----
INFO: ----- Running tests from file test_problems_contact_3d.jl -----
INFO: ----- Testing file test_problems_contact_3d.jl completed in 23.64 seconds -----
INFO: ----- Running tests from file test_problems_elasticity.jl -----
INFO: ----- Testing file test_problems_elasticity.jl completed in 0.59 seconds -----
INFO: ----- Running tests from file test_problems_mortar_3d.jl -----
25-Apr 11:32:45:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:45:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:45:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:45:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:46:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:46:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:49:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
25-Apr 11:32:49:WARNING:root:This is default assemble! function. Decreased performance can be expected without preallocation of memory. One should implement `assemble_elements!(problem, assembly, elements, time)` function.
INFO: ----- Testing file test_problems_mortar_3d.jl completed in 16.27 seconds -----
INFO: ----- Running tests from file test_problems_mortar_3d_lowlevel.jl -----
25-Apr 11:33:00:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
25-Apr 11:33:00:WARNING:root:No elements defined in interface two elements, this will result empty assembly!
25-Apr 11:33:00:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
25-Apr 11:33:00:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
25-Apr 11:33:00:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
[0.12 0.12 0.28 1.44 -0.48 -0.48; 0.902222 0.635556 0.12 -1.61778 2.08 -1.12; 0.635556 0.902222 0.12 -1.61778 -1.12 2.08; -0.0577778 0.342222 -0.12 0.195556 0.586667 0.0533333; -0.12 -0.12 0.12 0.16 0.48 0.48; 0.342222 -0.0577778 -0.12 0.195556 0.0533333 0.586667]
25-Apr 11:33:01:WARNING:root:assemble!(problem) will be deprecated. Use assemble!(problem, time)
INFO: ----- Testing file test_problems_mortar_3d_lowlevel.jl completed in 1.09 seconds -----
INFO: ----- Running tests from file test_solvers_postprocess.jl -----
INFO: ----- Testing file test_solvers_postprocess.jl completed in 1.46 seconds -----
INFO: ----- Running tests from file test_virtual_work.jl -----
INFO: ----- Testing file test_virtual_work.jl completed in 0.02 seconds -----
INFO: ----- Running tests from file test_von_mises_material.jl -----
INFO: ----- Testing file test_von_mises_material.jl completed in 0.0 seconds -----
Test Summary: | Pass  Total
JuliaFEM.jl   |  212    212

Test statistics:
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                                       Time                   Allocations      
                               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
       Tot / % measured:             248s / 99.3%           11.6GiB / 100%     

 Section               ncalls     time   %tot     avg     alloc   %tot      avg
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 test_contact_2d_fi...      1    96.0s  38.9%   96.0s   2.19GiB  18.9%  2.19GiB
 test_problems_cont...      1    23.6s  9.58%   23.6s   3.22GiB  27.9%  3.22GiB
 test_problems_mort...      1    16.3s  6.59%   16.3s   3.12GiB  27.0%  3.12GiB
 test_elasticity_3d...      1    13.4s  5.43%   13.4s    178MiB  1.51%   178MiB
 test_heat.jl               1    11.5s  4.67%   11.5s    153MiB  1.29%   153MiB
 test_problems_cont...      1    9.47s  3.84%   9.47s    794MiB  6.71%   794MiB
 test_modal_analysi...      1    7.08s  2.87%   7.08s    173MiB  1.47%   173MiB
 test_mortar_3d_mes...      1    5.69s  2.31%   5.69s    249MiB  2.10%   249MiB
 test_mortar_2d_mes...      1    4.92s  1.99%   4.92s   66.1MiB  0.56%  66.1MiB
 test_problems_cont...      1    4.52s  1.83%   4.52s    191MiB  1.61%   191MiB
 test_elasticity_ho...      1    4.40s  1.78%   4.40s   77.0MiB  0.65%  77.0MiB
 test_dirichlet.jl          1    4.28s  1.73%   4.28s    170MiB  1.44%   170MiB
 test_heat_4.jl             1    3.59s  1.45%   3.59s   4.69MiB  0.04%  4.69MiB
 test_modal_analysi...      1    3.30s  1.34%   3.30s    302MiB  2.55%   302MiB
 test_elasticity_2d...      1    3.00s  1.22%   3.00s   31.7MiB  0.27%  31.7MiB
 test_mortar_2d_con...      1    2.89s  1.17%   2.89s   14.5MiB  0.12%  14.5MiB
 test_heat_3d_two_r...      1    2.71s  1.10%   2.71s   30.6MiB  0.26%  30.6MiB
 test_elasticity_me...      1    2.68s  1.09%   2.68s   31.0MiB  0.26%  31.0MiB
 test_modal_analysi...      1    2.64s  1.07%   2.64s   19.5MiB  0.16%  19.5MiB
 test_heat_3.jl             1    2.52s  1.02%   2.52s   30.7MiB  0.26%  30.7MiB
 test_mortar_2d_mes...      1    1.98s  0.80%   1.98s   18.5MiB  0.16%  18.5MiB
 test_heat_2.jl             1    1.96s  0.79%   1.96s   85.5MiB  0.72%  85.5MiB
 test_mortar_3d_mes...      1    1.80s  0.73%   1.80s    118MiB  1.00%   118MiB
 test_elasticity_3d...      1    1.62s  0.66%   1.62s   20.2MiB  0.17%  20.2MiB
 test_elasticity_2d...      1    1.53s  0.62%   1.53s   3.68MiB  0.03%  3.68MiB
 test_solvers_postp...      1    1.46s  0.59%   1.46s    181MiB  1.53%   181MiB
 test_elasticity_te...      1    1.38s  0.56%   1.38s   18.1MiB  0.15%  18.1MiB
 test_elasticity_3d...      1    1.13s  0.46%   1.13s   2.83MiB  0.02%  2.83MiB
 test_problems_mort...      1    1.09s  0.44%   1.09s   36.8MiB  0.31%  36.8MiB
 test_elasticity_2d...      1    1.06s  0.43%   1.06s   3.16MiB  0.03%  3.16MiB
 test_mortar_2d_cal...      1    1.02s  0.41%   1.02s   9.44MiB  0.08%  9.44MiB
 test_mortar_2d_ass...      1    927ms  0.38%   927ms   7.73MiB  0.07%  7.73MiB
 test_elasticity_2d...      1    730ms  0.30%   730ms   13.7MiB  0.12%  13.7MiB
 test_problems_elas...      1    594ms  0.24%   594ms   5.16MiB  0.04%  5.16MiB
 test_elasticity_te...      1    489ms  0.20%   489ms   13.5MiB  0.11%  13.5MiB
 test_elasticity_te...      1    478ms  0.19%   478ms   18.3MiB  0.15%  18.3MiB
 test_postprocess.jl        1    463ms  0.19%   463ms   3.04MiB  0.03%  3.04MiB
 test_elasticity_te...      1    461ms  0.19%   461ms   1.76MiB  0.01%  1.76MiB
 test_elasticity_py...      1    411ms  0.17%   411ms   2.04MiB  0.02%  2.04MiB
 test_elasticity_pl...      1    406ms  0.16%   406ms   2.22MiB  0.02%  2.22MiB
 test_modal_analysi...      1    393ms  0.16%   393ms   1.43MiB  0.01%  1.43MiB
 test_mortar_3d_pol...      1    327ms  0.13%   327ms   1.71MiB  0.01%  1.71MiB
 test_elasticity_1d.jl      1    277ms  0.11%   277ms   10.5MiB  0.09%  10.5MiB
 test_elasticity_2d...      1    189ms  0.08%   189ms   2.00MiB  0.02%  2.00MiB
 test_mortar.jl             1   71.5ms  0.03%  71.5ms    402KiB  0.00%   402KiB
 test_potential_ene...      1   19.5ms  0.01%  19.5ms    182KiB  0.00%   182KiB
 test_virtual_work.jl       1   15.3ms  0.01%  15.3ms   84.6KiB  0.00%  84.6KiB
 test_mortar_2d.jl          1   7.98ms  0.00%  7.98ms   38.3KiB  0.00%  38.3KiB
 test_von_mises_mat...      1   2.08ms  0.00%  2.08ms   1.39KiB  0.00%  1.39KiB
 test_elasticity_fo...      1   1.02ms  0.00%  1.02ms   1.95KiB  0.00%  1.95KiB
 test_elasticplasti...      1    704Î¼s  0.00%   704Î¼s   1.98KiB  0.00%  1.98KiB
 test_mortar_2d_wei...      1    541Î¼s  0.00%   541Î¼s   1.53KiB  0.00%  1.53KiB
 test_elasticplasti...      1    446Î¼s  0.00%   446Î¼s   1.98KiB  0.00%  1.98KiB
 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
INFO: JuliaFEM tests passed

>>> End of log
