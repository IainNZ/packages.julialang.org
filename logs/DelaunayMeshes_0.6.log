>>> 'Pkg.add("DelaunayMeshes")' log
INFO: Cloning cache of DelaunayMeshes from https://github.com/matthias-vigelius/DelaunayMeshes.jl.git
INFO: Installing BinDeps v0.8.6
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DelaunayMeshes v0.1.0
INFO: Installing DiffEqBase v3.2.0
INFO: Installing DiffEqPDEBase v0.4.0
INFO: Installing Distributions v0.15.0
INFO: Installing EllipsisNotation v0.3.0
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing GeometricalPredicates v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing NamedTuples v4.0.0
INFO: Installing PDMats v0.8.0
INFO: Installing QuadGK v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Requires v0.4.3
INFO: Installing Rmath v0.3.2
INFO: Installing SHA v0.5.6
INFO: Installing SimpleTraits v0.5.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing StatsFuns v0.5.0
INFO: Installing TableTraits v0.1.0
INFO: Installing URIParser v0.3.0
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DelaunayMeshes
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DelaunayMeshes")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1917.8359375 MB free)
Uptime: 54692.0 sec
Load Avg:  0.9365234375  0.998046875  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3575553 s       3552 s     158324 s     927593 s         30 s
#2  3500 MHz    1017140 s       4290 s      87826 s    4255008 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DelaunayMeshes                0.1.0
 - JSON                          0.16.4
32 additional packages:
 - BinDeps                       0.8.6
 - Calculus                      0.2.2
 - ChunkedArrays                 0.1.1
 - Compat                        0.52.0
 - DataStructures                0.7.4
 - DiffEqBase                    3.2.0
 - DiffEqPDEBase                 0.4.0
 - Distributions                 0.15.0
 - EllipsisNotation              0.3.0
 - FunctionWrappers              0.1.0
 - GeometricalPredicates         0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - PDMats                        0.8.0
 - QuadGK                        0.2.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Requires                      0.4.3
 - Rmath                         0.3.2
 - SHA                           0.5.6
 - SimpleTraits                  0.5.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - StatsFuns                     0.5.0
 - TableTraits                   0.1.0
 - URIParser                     0.3.0
 - VectorizedRoutines            0.0.2
INFO: Testing DelaunayMeshes

WARNING: deprecated syntax "typealias VertexIndex Int" at /home/vagrant/.julia/v0.6/DelaunayMeshes/src/QuadEdge.jl:22.
Use "const VertexIndex = Int" instead.

WARNING: deprecated syntax "typealias Point Vector{Float64}" at /home/vagrant/.julia/v0.6/DelaunayMeshes/src/Triangulation.jl:2.
Use "const Point = Vector{Float64}" instead.

WARNING: deprecated syntax "typealias DelaunayTesselation SubDivision{Point}" at /home/vagrant/.julia/v0.6/DelaunayMeshes/src/Triangulation.jl:3.
Use "const DelaunayTesselation = SubDivision{Point}" instead.

WARNING: deprecated syntax "typealias Constraint Vector{Int}" at /home/vagrant/.julia/v0.6/DelaunayMeshes/src/DelaunayMesh.jl:2.
Use "const Constraint = Vector{Int}" instead.
ERROR: LoadError: LoadError: LoadError: UndefVarError: SimpleFEMMesh not defined
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:576
 [2] include(::String) at ./sysimg.jl:14
 [3] include_from_node1(::String) at ./loading.jl:576
while loading /home/vagrant/.julia/v0.6/DelaunayMeshes/src/DelaunayMesh.jl, in expression starting on line 521
while loading /home/vagrant/.julia/v0.6/DelaunayMeshes/src/DelaunayMeshes.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.6/DelaunayMeshes/test/runtests.jl, in expression starting on line 1
===========================[ ERROR: DelaunayMeshes ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DelaunayMeshes/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: DelaunayMeshes had test errors

>>> End of log
