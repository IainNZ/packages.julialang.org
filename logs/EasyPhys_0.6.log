>>> 'Pkg.add("EasyPhys")' log
INFO: Cloning cache of EasyPhys from https://github.com/julian-wolf/EasyPhys.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Conda v0.7.1
INFO: Installing DataArrays v0.6.2
INFO: Installing DataFrames v0.10.1
INFO: Installing DataStructures v0.7.4
INFO: Installing Distributions v0.15.0
INFO: Installing EasyPhys v0.2.0
INFO: Installing FileIO v0.7.0
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing GZip v0.3.0
INFO: Installing LaTeXStrings v0.3.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.4.0
INFO: Installing Missings v0.2.9
INFO: Installing NLSolversBase v4.4.1
INFO: Installing OptimBase v1.0.0
INFO: Installing PDMats v0.8.0
INFO: Installing PyCall v1.15.0
INFO: Installing PyPlot v2.5.0
INFO: Installing QuadGK v0.2.1
INFO: Installing Reexport v0.1.0
INFO: Installing Rmath v0.3.2
INFO: Installing SHA v0.5.6
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StatsBase v0.20.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.14.2          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of EasyPhys
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EasyPhys")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (820.8203125 MB free)
Uptime: 84625.0 sec
Load Avg:  0.935546875  0.96337890625  0.99267578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5229475 s       6328 s     341588 s    1717199 s         79 s
#2  3500 MHz    1526878 s        117 s     181400 s    6578729 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - EasyPhys                      0.2.0
 - JSON                          0.17.2
32 additional packages:
 - BinDeps                       0.8.7
 - Calculus                      0.2.2
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Conda                         0.7.1
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.7.4
 - Distributions                 0.15.0
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - GZip                          0.3.0
 - LaTeXStrings                  0.3.0
 - LsqFit                        0.3.0
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - NLSolversBase                 4.4.1
 - Nullables                     0.0.5
 - OptimBase                     1.0.0
 - PDMats                        0.8.0
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - QuadGK                        0.2.1
 - Reexport                      0.1.0
 - Rmath                         0.3.2
 - SHA                           0.5.6
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StatsBase                     0.20.1
 - StatsFuns                     0.5.0
 - URIParser                     0.3.1
INFO: Testing EasyPhys
WARNING: No working GUI backend found for matplotlib
WARNING: No working GUI backend found for matplotlib
Running tests:
Running tests on utilities.jl...
Any[(:test, :somearg)]
Any[(:test, :someotherarg)]
Test Summary: | Pass  Total
utilities.jl  |  253    253
Running tests on fitter.jl...
EasyPhys.Fitter with the following settings:

	autoplot        => false
	xmin            => nothing
	xmax            => nothing
	error_range     => 0.68
	xvar            => :x
	plot_curve      => true
	xlabel          => "x"
	xscale          => "linear"
	yvar            => :y
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	yscale          => "linear"
	ylabel          => "f(x)"
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	eyvar           => :y_err
	fpoints         => 1000
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_guess      => true

Guesses:

	a               = 1.0
	b               = 1.0

Fit results not yet present.
WARNING: ~(B::BitArray) is deprecated, use .~(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] ~(::BitArray{1}) at ./deprecated.jl:57
 [3] data_mask(::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:535
 [4] #fit!#68(::Array{Any,1}, ::Function, ::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:556
 [5] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl:50 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl:43 [inlined]
 [8] macro expansion at ./test.jl:860 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl:12 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl, in expression starting on line 5
WARNING: A::AbstractArray & B::AbstractArray is deprecated, use A .& B instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] &(::BitArray{1}, ::BitArray{1}) at ./deprecated.jl:57
 [3] data_mask(::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:535
 [4] #fit!#68(::Array{Any,1}, ::Function, ::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:556
 [5] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl:50 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl:43 [inlined]
 [8] macro expansion at ./test.jl:860 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl:12 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/fitter.jl, in expression starting on line 5
EasyPhys.Fitter with the following settings:

	autoplot        => false
	xmin            => nothing
	xmax            => 90
	error_range     => 0.68
	xvar            => :x
	plot_curve      => true
	xlabel          => "x"
	xscale          => "linear"
	yvar            => :y
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	yscale          => "linear"
	ylabel          => "f(x)"
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	eyvar           => :y_err
	fpoints         => 1000
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_guess      => true

Guesses (χ² = 774808.8627646222):

	a               = 81.81
	b               = 1.0

Best-fit parameters (χ² = 0.6576250288703012):

	a               = 81.01346639734714 ± 0.0004678532201243139
	b               = 11.003954629776587 ± 0.0001721844590579556

[9.94189e-7 1.11937e-7; 1.11937e-7 1.3466e-7]"\n\n"EasyPhys.Fitter with the following settings:

	autoplot        => false
	xmin            => nothing
	xmax            => nothing
	error_range     => 0.68
	xvar            => :x
	plot_curve      => true
	xlabel          => "x"
	xscale          => "linear"
	yvar            => :y
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	yscale          => "linear"
	ylabel          => "f(x)"
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	eyvar           => :y_err
	fpoints         => 1000
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_guess      => true

Constants:

	a               = 1.0

Guesses (χ² = 304.5314960083857):

	b               = 2.0

Best-fit parameters (χ² = 0.8064143889768645):

	b               = 1.9905366534927447 ± 0.0008375194780281697

WARNING: a is a fixed parameter. Its value can be set using `fix!`, or it can be freed using `free!`
EasyPhys.Fitter with the following settings:

	autoplot        => false
	xmin            => nothing
	xmax            => nothing
	error_range     => 0.68
	xvar            => :x
	plot_curve      => true
	xlabel          => "x"
	xscale          => "linear"
	yvar            => :y
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	yscale          => "linear"
	ylabel          => "f(x)"
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	eyvar           => :y_err
	fpoints         => 1000
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_guess      => true

Constants:

	b               = 1.0

Guesses (χ² = 304.5314960083857):

	a               = 2.0

Best-fit parameters (χ² = 33.57456028804874):

	a               = 0.7004872009012282 ± 0.00020064870480076733

EasyPhys.Fitter with the following settings:

	autoplot        => false
	xmin            => nothing
	xmax            => nothing
	error_range     => 0.68
	xvar            => :x
	plot_curve      => true
	xlabel          => "x"
	xscale          => "linear"
	yvar            => :y
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	yscale          => "linear"
	ylabel          => "f(x)"
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	eyvar           => :y_err
	fpoints         => 1000
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_guess      => true

Guesses (χ² = 307.63896025336925):

	a               = 2.0
	b               = 1.0

Best-fit parameters (χ² = 0.812144835065641):

	a               = 0.9963230159977262 ± 0.0003483371148599816
	b               = 1.9833017238343702 ± 0.0010803829573209174

Test Summary: | Pass  Total
fitter.jl     |  102    102
Running tests on plot.jl...
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:57
 [3] (::#model_test#28)(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl:4
 [4] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl:7 [inlined]
 [5] macro expansion at ./test.jl:860 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl:12 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl, in expression starting on line 2
WARNING: ~(B::BitArray) is deprecated, use .~(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] ~(::BitArray{1}) at ./deprecated.jl:57
 [3] data_mask(::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:535
 [4] plot(::EasyPhys.Fitter, ::PyPlot.Figure) at /home/vagrant/.julia/v0.6/EasyPhys/src/plot.jl:71
 [5] #plot!#110(::Array{Any,1}, ::Function, ::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/plot.jl:31
 [6] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl:13 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl:12 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl, in expression starting on line 2
WARNING: A::AbstractArray & B::AbstractArray is deprecated, use A .& B instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] &(::BitArray{1}, ::BitArray{1}) at ./deprecated.jl:57
 [3] data_mask(::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/fitter.jl:535
 [4] plot(::EasyPhys.Fitter, ::PyPlot.Figure) at /home/vagrant/.julia/v0.6/EasyPhys/src/plot.jl:71
 [5] #plot!#110(::Array{Any,1}, ::Function, ::EasyPhys.Fitter) at /home/vagrant/.julia/v0.6/EasyPhys/src/plot.jl:31
 [6] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl:13 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl:12 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/plot.jl, in expression starting on line 2
WARNING: Fit must converge before residuals can be accessed.
WARNING: Fit must converge before residuals can be accessed.
Test Summary: | Pass  Total
plot.jl       |    3      3
INFO: EasyPhys tests passed

>>> End of log
