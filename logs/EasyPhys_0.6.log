>>> 'Pkg.add("EasyPhys")' log
INFO: Cloning cache of EasyPhys from https://github.com/julian-wolf/EasyPhys.jl.git
INFO: Installing BinDeps v0.8.2
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Conda v0.7.1
INFO: Installing DataArrays v0.6.2
INFO: Installing DataFrames v0.10.1
INFO: Installing DataStructures v0.7.3
INFO: Installing Distributions v0.15.0
INFO: Installing EasyPhys v0.2.0
INFO: Installing FileIO v0.6.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing GZip v0.3.0
INFO: Installing LaTeXStrings v0.3.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.4.0
INFO: Installing NLSolversBase v3.1.0
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.8.0
INFO: Installing PyCall v1.15.0
INFO: Installing PyPlot v2.3.2
INFO: Installing QuadGK v0.2.0
INFO: Installing Reexport v0.1.0
INFO: Installing Rmath v0.3.1
INFO: Installing SHA v0.5.2
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.6
INFO: Installing StatsBase v0.19.4
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.3.0
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.13.3          py27_blas_openblas_201  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of EasyPhys
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EasyPhys")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (763.02734375 MB free)
Uptime: 67633.0 sec
Load Avg:  0.92919921875  0.9853515625  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3516 MHz    4368636 s         97 s     186823 s    1227544 s         58 s
#2  3516 MHz    1295488 s         60 s     120433 s    5195662 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - EasyPhys                      0.2.0
 - JSON                          0.16.3
31 additional packages:
 - BinDeps                       0.8.2
 - Calculus                      0.2.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.42.0
 - Conda                         0.7.1
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.7.3
 - Distributions                 0.15.0
 - FileIO                        0.6.1
 - FixedPointNumbers             0.4.3
 - GZip                          0.3.0
 - LaTeXStrings                  0.3.0
 - LsqFit                        0.3.0
 - MacroTools                    0.4.0
 - NLSolversBase                 3.1.0
 - Nullables                     0.0.2
 - OptimBase                     0.1.0
 - PDMats                        0.8.0
 - PyCall                        1.15.0
 - PyPlot                        2.3.2
 - QuadGK                        0.2.0
 - Reexport                      0.1.0
 - Rmath                         0.3.1
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StatsBase                     0.19.4
 - StatsFuns                     0.5.0
 - URIParser                     0.3.0
INFO: Testing EasyPhys
WARNING: No working GUI backend found for matplotlib
ERROR: LoadError: LoadError: InitError: PyError (ccall(@pysym(:PyImport_ImportModule), PyPtr, (Cstring,), name)

The Python package matplotlib.pyplot could not be found by pyimport. Usually this means
that you did not install matplotlib.pyplot in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the matplotlib.pyplot module, you can
use `pyimport_conda("matplotlib.pyplot", PKG)`, where PKG is the Anaconda
package the contains the module matplotlib.pyplot, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError("/lib/x86_64-linux-gnu/libz.so.1: version `ZLIB_1.2.9' not found (required by /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/../../.././libpng16.so.16)",)
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/pyplot.py", line 32, in <module>
    import matplotlib.colorbar
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/colorbar.py", line 36, in <module>
    import matplotlib.contour as contour
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/contour.py", line 21, in <module>
    import matplotlib.font_manager as font_manager
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/font_manager.py", line 58, in <module>
    from matplotlib import afm, cbook, ft2font, rcParams, get_cachedir

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:56 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:61 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:81 [inlined]
 [4] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:374
 [5] __init__() at /home/vagrant/.julia/v0.6/PyPlot/src/init.jl:184
 [6] _include_from_serialized(::String) at ./loading.jl:157
 [7] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [8] _require_search_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:236
 [9] _require(::Symbol) at ./loading.jl:441
 [10] require(::Symbol) at ./loading.jl:405
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] anonymous at ./<missing>:2
during initialization of module PyPlot
while loading /home/vagrant/.julia/v0.6/EasyPhys/src/plot.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/EasyPhys/src/EasyPhys.jl, in expression starting on line 29
ERROR: LoadError: Failed to precompile EasyPhys to /home/vagrant/.julia/lib/v0.6/EasyPhys.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:710
 [2] _require(::Symbol) at ./loading.jl:497
 [3] require(::Symbol) at ./loading.jl:405
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl, in expression starting on line 2
==============================[ ERROR: EasyPhys ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/EasyPhys/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: EasyPhys had test errors

>>> End of log
