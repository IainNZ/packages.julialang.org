>>> 'Pkg.add("Currencies")' log
┌ Info: Cloning cache of Currencies from https://github.com/JuliaFinance/Currencies.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of FixedPointDecimals from https://github.com/JuliaMath/FixedPointDecimals.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Currencies v0.9.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FixedPointDecimals v0.2.0       @ Base.Pkg.Entry entry.jl:543
[ Info: Installing HTTP v0.5.7                     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MbedTLS v0.5.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.3                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building MbedTLS                                          @ Main none:10
Using system libraries...
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MbedTLS/deps/build.jl:45
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Currencies
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Currencies")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2544516 s         61 s     132328 s     903998 s         18 s
       #2  3500 MHz     742854 s       7025 s      61111 s    3265533 s          0 s
       
  Memory: 2.93927001953125 GB (882.40625 MB free)
  Uptime: 41771.0 sec
  Load Avg:  1.01953125  1.033203125  1.0400390625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Currencies                    0.9.0
 - JSON                          0.16.3
8 additional packages:
 - BinDeps                       0.8.3
 - Compat                        0.46.0
 - FixedPointDecimals            0.2.0
 - HTTP                          0.5.7
 - MbedTLS                       0.5.3
 - Nullables                     0.0.3
 - SHA                           0.5.3
 - URIParser                     0.3.0
[ Info: Testing Currencies                         @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Currencies/src/DeclarativeFormatting/DeclarativeFormatting.jl:11.
│ Use `mutable struct` instead.
└                                          @ nothing DeclarativeFormatting.jl:11
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Currencies/src/DeclarativeFormatting/DeclarativeFormatting.jl:63.
│ Use `struct` instead.
└                                          @ nothing DeclarativeFormatting.jl:63
┌ Warning: Deprecated syntax `parametric method syntax Base.get{T <: FormatRequirement}(spec::FormatSpecification, ::Type{T}, d)` around /home/vagrant/.julia/v0.7/Currencies/src/DeclarativeFormatting/DeclarativeFormatting.jl:94.
│ Use `Base.get(spec::FormatSpecification, #unused#::Type{T}, d) where T <: FormatRequirement` instead.
└                                          @ nothing DeclarativeFormatting.jl:94
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/monetary.jl:42.
│ Use `struct` instead.
└                                                       @ nothing monetary.jl:42
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Monetary{T, U, V}}){T, U, V}(x::Integer)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/monetary.jl:46.
│ Use `(::Type{Monetary{T, U, V}})(x::Integer) where {T, U, V}` instead.
└                                                       @ nothing monetary.jl:46
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Monetary{T, U, V}}){T, U, V}(x::Real)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/monetary.jl:48.
│ Use `(::Type{Monetary{T, U, V}})(x::Real) where {T, U, V}` instead.
└                                                       @ nothing monetary.jl:48
┌ Warning: Deprecated syntax `parametric method syntax filltype{T}(::Type{Monetary{T}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/monetary.jl:74.
│ Use `filltype(#unused#::Type{Monetary{T}}) where T` instead.
└                                                       @ nothing monetary.jl:74
┌ Warning: Deprecated syntax `parametric method syntax filltype{T, U}(::Type{Monetary{T, U}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/monetary.jl:75.
│ Use `filltype(#unused#::Type{Monetary{T, U}}) where {T, U}` instead.
└                                                       @ nothing monetary.jl:75
┌ Warning: Deprecated syntax `parametric method syntax currency{T}(::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:30.
│ Use `currency(#unused#::Monetary{T}) where T` instead.
└                                                       @ nothing currency.jl:30
┌ Warning: Deprecated syntax `parametric method syntax decimals{T, U, V}(::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:44.
│ Use `decimals(#unused#::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                       @ nothing currency.jl:44
┌ Warning: Deprecated syntax `parametric method syntax decimals{T, U, V}(::Type{Monetary{T, U, V}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:45.
│ Use `decimals(#unused#::Type{Monetary{T, U, V}}) where {T, U, V}` instead.
└                                                       @ nothing currency.jl:45
┌ Warning: Deprecated syntax `parametric method syntax decimals{T <: Monetary}(::Type{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:46.
│ Use `decimals(#unused#::Type{T}) where T <: Monetary` instead.
└                                                       @ nothing currency.jl:46
┌ Warning: Deprecated syntax `parametric method syntax currencyinfo{#5#U <: Currencies.CurrenciesBase.Monetary}(::Currencies.CurrenciesBase.Type{#5#U})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:10.
│ Use `currencyinfo(#unused#::Currencies.CurrenciesBase.Type{#5#U}) where #5#U <: Currencies.CurrenciesBase.Monetary` instead.
└                                                       @ nothing currency.jl:10
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at currency.jl:12
└                                                          @ Core currency.jl:12
┌ Warning: Deprecated syntax `parametric method syntax iso4217num{#8#U <: Currencies.CurrenciesBase.Monetary}(::Currencies.CurrenciesBase.Type{#8#U})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:10.
│ Use `iso4217num(#unused#::Currencies.CurrenciesBase.Type{#8#U}) where #8#U <: Currencies.CurrenciesBase.Monetary` instead.
└                                                       @ nothing currency.jl:10
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at currency.jl:12
└                                                          @ Core currency.jl:12
┌ Warning: Deprecated syntax `parametric method syntax iso4217alpha{#11#U <: Currencies.CurrenciesBase.Monetary}(::Currencies.CurrenciesBase.Type{#11#U})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:10.
│ Use `iso4217alpha(#unused#::Currencies.CurrenciesBase.Type{#11#U}) where #11#U <: Currencies.CurrenciesBase.Monetary` instead.
└                                                       @ nothing currency.jl:10
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at currency.jl:12
└                                                          @ Core currency.jl:12
┌ Warning: Deprecated syntax `parametric method syntax shortsymbol{#14#U <: Currencies.CurrenciesBase.Monetary}(::Currencies.CurrenciesBase.Type{#14#U})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:10.
│ Use `shortsymbol(#unused#::Currencies.CurrenciesBase.Type{#14#U}) where #14#U <: Currencies.CurrenciesBase.Monetary` instead.
└                                                       @ nothing currency.jl:10
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at currency.jl:12
└                                                          @ Core currency.jl:12
┌ Warning: Deprecated syntax `parametric method syntax longsymbol{#17#U <: Currencies.CurrenciesBase.Monetary}(::Currencies.CurrenciesBase.Type{#17#U})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:10.
│ Use `longsymbol(#unused#::Currencies.CurrenciesBase.Type{#17#U}) where #17#U <: Currencies.CurrenciesBase.Monetary` instead.
└                                                       @ nothing currency.jl:10
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at currency.jl:12
└                                                          @ Core currency.jl:12
┌ Warning: Deprecated syntax `parametric method syntax majorunit{T, U, V}(::Type{Monetary{T, U, V}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:125.
│ Use `majorunit(#unused#::Type{Monetary{T, U, V}}) where {T, U, V}` instead.
└                                                      @ nothing currency.jl:125
┌ Warning: Deprecated syntax `parametric method syntax majorunit{T <: Monetary}(::Type{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/currency.jl:126.
│ Use `majorunit(#unused#::Type{T}) where T <: Monetary` instead.
└                                                      @ nothing currency.jl:126
┌ Warning: Deprecated syntax `parametric method syntax Base.zero{T, U, V}(::Type{Monetary{T, U, V}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:4.
│ Use `Base.zero(#unused#::Type{Monetary{T, U, V}}) where {T, U, V}` instead.
└                                                      @ nothing arithmetic.jl:4
┌ Warning: Deprecated syntax `parametric method syntax Base.zero{T <: Monetary}(::Type{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:5.
│ Use `Base.zero(#unused#::Type{T}) where T <: Monetary` instead.
└                                                      @ nothing arithmetic.jl:5
┌ Warning: Deprecated syntax `parametric method syntax Base.one{T, U, V}(::Type{Monetary{T, U, V}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:8.
│ Use `Base.one(#unused#::Type{Monetary{T, U, V}}) where {T, U, V}` instead.
└                                                      @ nothing arithmetic.jl:8
┌ Warning: Deprecated syntax `parametric method syntax Base.abs{T <: Monetary}(m::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:11.
│ Use `Base.abs(m::T) where T <: Monetary` instead.
└                                                     @ nothing arithmetic.jl:11
┌ Warning: Deprecated syntax `parametric method syntax Base.zero{T <: AbstractMonetary}(::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:18.
│ Use `Base.zero(#unused#::T) where T <: AbstractMonetary` instead.
└                                                     @ nothing arithmetic.jl:18
┌ Warning: Deprecated syntax `parametric method syntax Base.one{T <: AbstractMonetary}(::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:19.
│ Use `Base.one(#unused#::T) where T <: AbstractMonetary` instead.
└                                                     @ nothing arithmetic.jl:19
┌ Warning: Deprecated syntax `parametric method syntax =={T <: Monetary}(m::T, n::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:22.
│ Use `==(m::T, n::T) where T <: Monetary` instead.
└                                                     @ nothing arithmetic.jl:22
┌ Warning: Deprecated syntax `parametric method syntax =={T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:23.
│ Use `==(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                     @ nothing arithmetic.jl:23
┌ Warning: Deprecated syntax `parametric method syntax Base.isless{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:25.
│ Use `Base.isless(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:25
┌ Warning: Deprecated syntax `parametric method syntax -{T <: Monetary}(m::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:29.
│ Use `-(m::T) where T <: Monetary` instead.
└                                                     @ nothing arithmetic.jl:29
┌ Warning: Deprecated syntax `parametric method syntax +{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:32.
│ Use `+(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:32
┌ Warning: Deprecated syntax `parametric method syntax -{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:33.
│ Use `-(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:33
┌ Warning: Deprecated syntax `parametric method syntax /{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:34.
│ Use `/(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:34
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Monetary}(m::T, i::Real)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:37.
│ Use `*(m::T, i::Real) where T <: Monetary` instead.
└                                                     @ nothing arithmetic.jl:37
┌ Warning: Deprecated syntax `parametric method syntax *{T <: Monetary}(i::Real, m::T)` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:38.
│ Use `*(i::Real, m::T) where T <: Monetary` instead.
└                                                     @ nothing arithmetic.jl:38
┌ Warning: Deprecated syntax `parametric method syntax Base.divrem{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:54.
│ Use `Base.divrem(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:54
┌ Warning: Deprecated syntax `parametric method syntax Base.div{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:57.
│ Use `Base.div(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:57
┌ Warning: Deprecated syntax `parametric method syntax Base.rem{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:59.
│ Use `Base.rem(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:59
┌ Warning: Deprecated syntax `parametric method syntax Base.fldmod{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:54.
│ Use `Base.fldmod(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:54
┌ Warning: Deprecated syntax `parametric method syntax Base.fld{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:57.
│ Use `Base.fld(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:57
┌ Warning: Deprecated syntax `parametric method syntax Base.mod{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:59.
│ Use `Base.mod(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:59
┌ Warning: Deprecated syntax `parametric method syntax Base.fldmod1{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:54.
│ Use `Base.fldmod1(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:54
┌ Warning: Deprecated syntax `parametric method syntax Base.fld1{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:57.
│ Use `Base.fld1(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:57
┌ Warning: Deprecated syntax `parametric method syntax Base.mod1{T, U, V}(m::Monetary{T, U, V}, n::Monetary{T, U, V})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/arithmetic.jl:59.
│ Use `Base.mod1(m::Monetary{T, U, V}, n::Monetary{T, U, V}) where {T, U, V}` instead.
└                                                     @ nothing arithmetic.jl:59
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{A, B, C, D}(::Type{Monetary{A, B, D}}, ::Type{Monetary{A, C, D}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:7.
│ Use `Base.promote_rule(#unused#::Type{Monetary{A, B, D}}, #unused#::Type{Monetary{A, C, D}}) where {A, B, C, D}` instead.
└                                                           @ nothing mixed.jl:7
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{A, B, C, D, E}(::Type{Monetary{A, B, D}}, ::Type{Monetary{A, C, E}})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:14.
│ Use `Base.promote_rule(#unused#::Type{Monetary{A, B, D}}, #unused#::Type{Monetary{A, C, E}}) where {A, B, C, D, E}` instead.
└                                                          @ nothing mixed.jl:14
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{A, B, C, D, E}(::Type{Monetary{A, B, C}}, m::Monetary{A, D, E})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:19.
│ Use `Base.convert(#unused#::Type{Monetary{A, B, C}}, m::Monetary{A, D, E}) where {A, B, C, D, E}` instead.
└                                                          @ nothing mixed.jl:19
┌ Warning: Deprecated syntax `parametric method syntax Base.isless{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:22.
│ Use `Base.isless(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:22
┌ Warning: Deprecated syntax `parametric method syntax +{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:23.
│ Use `+(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:23
┌ Warning: Deprecated syntax `parametric method syntax /{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:24.
│ Use `/(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:24
┌ Warning: Deprecated syntax `parametric method syntax Base.div{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.div(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.rem{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.rem(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.divrem{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.divrem(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.fld{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.fld(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.mod{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.mod(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.fldmod{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.fldmod(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.fld1{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.fld1(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.mod1{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.mod1(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.fldmod1{T}(m::Monetary{T}, n::Monetary{T})` around /home/vagrant/.julia/v0.7/Currencies/src/CurrenciesBase/mixed.jl:29.
│ Use `Base.fldmod1(m::Monetary{T}, n::Monetary{T}) where T` instead.
└                                                          @ nothing mixed.jl:29
┌ Warning: Deprecated syntax `parametric method syntax deleteifzero!{T}(d::Associative{T}, k)` around /home/vagrant/.julia/v0.7/Currencies/src/Baskets/impl.jl:4.
│ Use `deleteifzero!(d::Associative{T}, k) where T` instead.
└                                                            @ nothing impl.jl:4
WARNING: importing deprecated binding Base.Associative into Baskets.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Currencies/src/Baskets/impl.jl:3
ERROR: LoadError: LoadError: LoadError: syntax: invalid escape sequence
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] include at ./sysimg.jl:26 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/Currencies/src/Baskets/Basket.jl:1
 [5] top-level scope
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include at ./sysimg.jl:26 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/Currencies/src/Currencies.jl:3
 [10] top-level scope
 [11] include at ./boot.jl:293 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:521
 [13] include(::Module, ::String) at ./sysimg.jl:26
 [14] top-level scope
 [15] eval at ./boot.jl:296 [inlined]
 [16] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Currencies/src/Baskets/type.jl:25
in expression starting at /home/vagrant/.julia/v0.7/Currencies/src/Baskets/Basket.jl:9
in expression starting at /home/vagrant/.julia/v0.7/Currencies/src/Currencies.jl:25
ERROR: LoadError: Failed to precompile Currencies to /home/vagrant/.julia/lib/v0.7/Currencies.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Currencies/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Currencies
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Currencies/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Currencies had test errors

>>> End of log
