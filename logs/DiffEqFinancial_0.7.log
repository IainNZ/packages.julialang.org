>>> 'Pkg.add("DiffEqFinancial")' log
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffEqBase v2.10.1              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffEqFinancial v0.3.0          @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffEqNoiseProcess v0.8.0       @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FunctionWrappers v0.1.0         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LinearMaps v1.0.4               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MacroTools v0.4.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RandomNumbers v0.1.0            @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecursiveArrayTools v0.14.3     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requires v0.4.3                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ResettableStacks v0.3.0         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SimpleTraits v0.5.1             @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6             @ Base.Pkg.Entry entry.jl:543
[ Info: Building RandomNumbers                                    @ Main none:10
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2734
└                                                      @ Base deprecated.jl:2734
WARNING: AES-NI will not be compiled.
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of DiffEqFinancial
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("DiffEqFinancial")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3129087 s         63 s     156551 s    1054492 s         27 s
       #2  3500 MHz     871550 s       7025 s      71161 s    4005240 s          0 s
       
  Memory: 2.93927001953125 GB (1372.46875 MB free)
  Uptime: 50737.0 sec
  Load Avg:  0.9716796875  0.974609375  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - DiffEqFinancial               0.3.0
 - JSON                          0.16.3
15 additional packages:
 - Compat                        0.46.0
 - DataStructures                0.7.4
 - DiffEqBase                    2.10.1
 - DiffEqNoiseProcess            0.8.0
 - FunctionWrappers              0.1.0
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Nullables                     0.0.3
 - RandomNumbers                 0.1.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.3
 - Requires                      0.4.3
 - ResettableStacks              0.3.0
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.6
┌ Info: Computing test dependencies for DiffEqFinancial...
└                                                  @ Base.Pkg.Entry entry.jl:713
[ Info: Installing BinDeps v0.8.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Calculus v0.2.2                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CommonSubexpressions v0.0.1     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffBase v0.3.2                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffEqDiffTools v0.2.0          @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffResults v0.0.2              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffRules v0.0.2                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Distances v0.5.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ForwardDiff v0.7.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Hiccup v0.1.1                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Juno v0.3.2                     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LineSearches v3.2.3             @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Media v0.3.0                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Missings v0.2.4                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MuladdMacro v0.0.2              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NLSolversBase v3.1.0            @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NLsolve v0.13.0                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Parameters v0.8.1               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Reexport v0.1.0                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Roots v0.5.0                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.3                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StochasticDiffEq v2.23.2        @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions                                 @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: LoadError: UndefVarError: pushfront! not defined
│    Stacktrace:
│     [1] #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:652
│     [2] _find_library at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:641 [inlined]
│     [3] satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:920 (repeats 2 times)
│     [4] top-level scope at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:975
│     [5] include at ./boot.jl:293 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:521
│     [7] include at ./sysimg.jl:26 [inlined]
│     [8] include at ./loading.jl:555 [inlined]
│     [9] top-level scope at ./<missing>:31
│     [10] include at ./boot.jl:293 [inlined]
│     [11] include_relative(::Module, ::String) at ./loading.jl:521
│     [12] include at ./sysimg.jl:26 [inlined]
│     [13] include(::String) at ./loading.jl:555
│     [14] top-level scope
│     [15] eval at ./boot.jl:296 [inlined]
│     [16] eval at ./sysimg.jl:71 [inlined]
│     [17] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [18] #2 at ./none:12 [inlined]
│     [19] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [20] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [21] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [22] top-level scope
│     [23] eval at ./boot.jl:296 [inlined]
│     [24] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [25] process_options(::Base.JLOptions) at ./client.jl:301
│     [26] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:975
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
└                                                                 @ Main none:15
[ Info: Building RandomNumbers                                    @ Main none:10
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2734
└                                                      @ Base deprecated.jl:2734
WARNING: AES-NI will not be compiled.
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions")`
│  - build a single package by running its `deps/build.jl` script
└                                                  @ Base.Pkg.Entry entry.jl:656
[ Info: Testing DiffEqFinancial                    @ Base.Pkg.Entry entry.jl:723
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
[ Warning: Replacing module `StaticArrays`                 @ Base loading.jl:350
[ Warning: Replacing module `Requires`                     @ Base loading.jl:350
[ Warning: Replacing module `Compat`                       @ Base loading.jl:350
[ Warning: Replacing module `RecipesBase`                  @ Base loading.jl:350
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ResettableStacks/src/ResettableStacks.jl:10.
│ Use `mutable struct` instead.
└                                               @ nothing ResettableStacks.jl:10
┌ Warning: Deprecated syntax `parametric method syntax ResettableStack{T}(ty::Type{T})` around /home/vagrant/.julia/v0.7/ResettableStacks/src/ResettableStacks.jl:16.
│ Use `ResettableStack(ty::Type{T}) where T` instead.
└                                               @ nothing ResettableStacks.jl:16
WARNING: importing deprecated binding Base.Void into ResettableStacks.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ResettableStacks/src/ResettableStacks.jl:33
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ResettableStacks/src/ResettableStacks.jl:36
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
[ Warning: Replacing module `Requires`                     @ Base loading.jl:350
[ Warning: Replacing module `RecipesBase`                  @ Base loading.jl:350
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: could not import Random.rand_ui52 into RandomNumbers
WARNING: could not import Random.rand_ui52_raw into RandomNumbers
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt64, UInt128}}(rng::AbstractRNG{T}, ::Type{Float64} = Float64)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/common.jl:22.
│ Use `rand(rng::AbstractRNG{T}, #s1::Type{Float64} = Float64) where T <: Union{UInt64, UInt128}` instead.
└                                                         @ nothing common.jl:22
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt8, UInt16, UInt32}}(rng::AbstractRNG{T}, ::Type{Float64} = Float64)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/common.jl:25.
│ Use `rand(rng::AbstractRNG{T}, #s1::Type{Float64} = Float64) where T <: Union{UInt8, UInt16, UInt32}` instead.
└                                                         @ nothing common.jl:25
┌ Warning: Deprecated syntax `parametric method syntax rand{T1 <: BitTypes, T2 <: BitTypes}(rng::AbstractRNG{T1}, ::Type{T2})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/common.jl:29.
│ Use `rand(rng::AbstractRNG{T1}, #unused#::Type{T2}) where {T1 <: BitTypes, T2 <: BitTypes}` instead.
└                                                         @ nothing common.jl:29
┌ Warning: Deprecated syntax `parametric method syntax gen_seed{T <: Number}(::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/utils.jl:21.
│ Use `gen_seed(#unused#::Type{T}) where T <: Number` instead.
└                                                          @ nothing utils.jl:21
┌ Warning: Deprecated syntax `parametric method syntax gen_seed{T <: Number}(::Type{T}, n)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/utils.jl:22.
│ Use `gen_seed(#unused#::Type{T}, n) where T <: Number` instead.
└                                                          @ nothing utils.jl:22
┌ Warning: Deprecated syntax `parametric method syntax output_type{T}(::AbstractRNG{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/utils.jl:25.
│ Use `output_type(#unused#::AbstractRNG{T}) where T` instead.
└                                                          @ nothing utils.jl:25
┌ Warning: Deprecated syntax `parametric method syntax unsafe_copy!{R, T}(r1::R, r2::R, ::Type{T}, len)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/utils.jl:37.
│ Use `unsafe_copy!(r1::R, r2::R, #unused#::Type{T}, len) where {R, T}` instead.
└                                                          @ nothing utils.jl:37
┌ Warning: Deprecated syntax `parametric method syntax unsafe_compare{R, T}(r1::R, r2::R, ::Type{T}, len)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/utils.jl:46.
│ Use `unsafe_compare(r1::R, r2::R, #unused#::Type{T}, len) where {R, T}` instead.
└                                                          @ nothing utils.jl:46
┌ Warning: Deprecated syntax `parametric method syntax WrappedRNG{T1 <: BitTypes, T2 <: BitTypes}(base_rng::AbstractRNG{T1}, ::Type{T2})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:44.
│ Use `WrappedRNG(base_rng::AbstractRNG{T1}, #unused#::Type{T2}) where {T1 <: BitTypes, T2 <: BitTypes}` instead.
└                                                    @ nothing wrapped_rng.jl:44
┌ Warning: Deprecated syntax `parametric method syntax WrappedRNG{R <: AbstractRNG, T2 <: BitTypes}(::Type{R}, ::Type{T2}, args...)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:54.
│ Use `WrappedRNG(#unused#::Type{R}, #unused#::Type{T2}, args...) where {R <: AbstractRNG, T2 <: BitTypes}` instead.
└                                                    @ nothing wrapped_rng.jl:54
┌ Warning: Deprecated syntax `parametric method syntax WrappedRNG{R <: AbstractRNG, T1 <: BitTypes, T2 <: BitTypes, T3 <: BitTypes}(base_rng::WrappedRNG{R, T1, T2}, ::Type{T3})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:59.
│ Use `WrappedRNG(base_rng::WrappedRNG{R, T1, T2}, #unused#::Type{T3}) where {R <: AbstractRNG, T1 <: BitTypes, T2 <: BitTypes, T3 <: BitTypes}` instead.
└                                                    @ nothing wrapped_rng.jl:59
┌ Warning: Deprecated syntax `parametric method syntax seed_type{R, T1, T2}(::Type{WrappedRNG{R, T1, T2}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:61.
│ Use `seed_type(#unused#::Type{WrappedRNG{R, T1, T2}}) where {R, T1, T2}` instead.
└                                                    @ nothing wrapped_rng.jl:61
┌ Warning: Deprecated syntax `parametric method syntax copy!{R <: WrappedRNG}(dest::R, src::R)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:64.
│ Use `copy!(dest::R, src::R) where R <: WrappedRNG` instead.
└                                                    @ nothing wrapped_rng.jl:64
┌ Warning: Deprecated syntax `parametric method syntax copy{R <: WrappedRNG}(src::R)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:71.
│ Use `copy(src::R) where R <: WrappedRNG` instead.
└                                                    @ nothing wrapped_rng.jl:71
┌ Warning: Deprecated syntax `parametric method syntax =={R <: WrappedRNG}(r1::R, r2::R)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:78.
│ Use `==(r1::R, r2::R) where R <: WrappedRNG` instead.
└                                                    @ nothing wrapped_rng.jl:78
┌ Warning: Deprecated syntax `parametric method syntax rand{R <: AbstractRNG, T1 <: BitTypes, T2 <: BitTypes}(rng::WrappedRNG{R, T1, T2}, ::Type{T2})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/wrapped_rng.jl:90.
│ Use `rand(rng::WrappedRNG{R, T1, T2}, #unused#::Type{T2}) where {R <: AbstractRNG, T1 <: BitTypes, T2 <: BitTypes}` instead.
└                                                    @ nothing wrapped_rng.jl:90
┌ Warning: Deprecated syntax `parametric method syntax pcg_rotr{T <: PCGUInt}(value::T, rot::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:48.
│ Use `pcg_rotr(value::T, rot::T) where T <: PCGUInt` instead.
└                                                          @ nothing bases.jl:48
┌ Warning: Deprecated syntax `parametric method syntax pcg_advance_lcg{T <: PCGUInt}(state::T, delta::T, cur_mult::T, cur_plus::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:55.
│ Use `pcg_advance_lcg(state::T, delta::T, cur_mult::T, cur_plus::T) where T <: PCGUInt` instead.
└                                                          @ nothing bases.jl:55
┌ Warning: Deprecated syntax `parametric method syntax pcg_output{T <: Union{pcg_uints[2:end]...}}(state::T, ::Type{PCG_XSH_RS})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:74.
│ Use `pcg_output(state::T, #unused#::Type{PCG_XSH_RS}) where T <: Union{pcg_uints[2:end]...}` instead.
└                                                          @ nothing bases.jl:74
┌ Warning: Deprecated syntax `parametric method syntax pcg_output{T <: Union{pcg_uints[2:end]...}}(state::T, ::Type{PCG_XSH_RR})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:93.
│ Use `pcg_output(state::T, #unused#::Type{PCG_XSH_RR}) where T <: Union{pcg_uints[2:end]...}` instead.
└                                                          @ nothing bases.jl:93
┌ Warning: Deprecated syntax `parametric method syntax pcg_output{T <: PCGUInt}(state::T, ::Type{PCG_RXS_M_XS})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:113.
│ Use `pcg_output(state::T, #unused#::Type{PCG_RXS_M_XS}) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:113
┌ Warning: Deprecated syntax `parametric method syntax pcg_output{T <: Union{UInt64, UInt128}}(state::T, ::Type{PCG_XSL_RR})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:129.
│ Use `pcg_output(state::T, #unused#::Type{PCG_XSL_RR}) where T <: Union{UInt64, UInt128}` instead.
└                                                         @ nothing bases.jl:129
┌ Warning: Deprecated syntax `parametric method syntax pcg_output{T <: Union{UInt64, UInt128}}(state::T, ::Type{PCG_XSL_RR_RR})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:147.
│ Use `pcg_output(state::T, #unused#::Type{PCG_XSL_RR_RR}) where T <: Union{UInt64, UInt128}` instead.
└                                                         @ nothing bases.jl:147
┌ Warning: Deprecated syntax `parametric method syntax pcg_srand{T <: PCGUInt}(s::PCGStateOneseq{T}, init_state::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:187.
│ Use `pcg_srand(s::PCGStateOneseq{T}, init_state::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:187
┌ Warning: Deprecated syntax `parametric method syntax pcg_step!{T <: PCGUInt}(s::PCGStateOneseq{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:197.
│ Use `pcg_step!(s::PCGStateOneseq{T}) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:197
┌ Warning: Deprecated syntax `parametric method syntax pcg_advance!{T <: PCGUInt}(s::PCGStateOneseq{T}, delta::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:203.
│ Use `pcg_advance!(s::PCGStateOneseq{T}, delta::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:203
┌ Warning: Deprecated syntax `parametric method syntax pcg_srand{T <: PCGUInt}(s::PCGStateMCG{T}, init_state::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:216.
│ Use `pcg_srand(s::PCGStateMCG{T}, init_state::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:216
┌ Warning: Deprecated syntax `parametric method syntax pcg_step!{T <: PCGUInt}(s::PCGStateMCG{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:223.
│ Use `pcg_step!(s::PCGStateMCG{T}) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:223
┌ Warning: Deprecated syntax `parametric method syntax pcg_advance!{T <: PCGUInt}(s::PCGStateMCG{T}, delta::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:229.
│ Use `pcg_advance!(s::PCGStateMCG{T}, delta::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:229
┌ Warning: Deprecated syntax `parametric method syntax pcg_srand{T <: PCGUInt}(s::PCGStateUnique{T}, init_state::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:242.
│ Use `pcg_srand(s::PCGStateUnique{T}, init_state::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:242
┌ Warning: Deprecated syntax `parametric method syntax pcg_step!{T <: PCGUInt}(s::PCGStateUnique{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:252.
│ Use `pcg_step!(s::PCGStateUnique{T}) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:252
┌ Warning: Deprecated syntax `parametric method syntax pcg_advance!{T <: PCGUInt}(s::PCGStateUnique{T}, delta::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:258.
│ Use `pcg_advance!(s::PCGStateUnique{T}, delta::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:258
┌ Warning: Deprecated syntax `parametric method syntax pcg_srand{T <: PCGUInt}(s::PCGStateSetseq{T}, init_state::T, init_seq::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:273.
│ Use `pcg_srand(s::PCGStateSetseq{T}, init_state::T, init_seq::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:273
┌ Warning: Deprecated syntax `parametric method syntax pcg_step!{T <: PCGUInt}(s::PCGStateSetseq{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:284.
│ Use `pcg_step!(s::PCGStateSetseq{T}) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:284
┌ Warning: Deprecated syntax `parametric method syntax pcg_advance!{T <: PCGUInt}(s::PCGStateSetseq{T}, delta::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/bases.jl:290.
│ Use `pcg_advance!(s::PCGStateSetseq{T}, delta::T) where T <: PCGUInt` instead.
└                                                         @ nothing bases.jl:290
┌ Warning: Deprecated syntax `parametric method syntax srand{StateType <: PCGUInt}(r::AbstractPCG{StateType}, seed::Integer = gen_seed(StateType))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:8.
│ Use `srand(r::AbstractPCG{StateType}, seed::Integer = gen_seed(StateType)) where StateType <: PCGUInt` instead.
└                                                            @ nothing main.jl:8
┌ Warning: Deprecated syntax `parametric method syntax srand{StateType <: PCGUInt}(r::PCGStateSetseq{StateType}, seed::NTuple{2, Integer} = gen_seed(StateType, 2))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:10.
│ Use `srand(r::PCGStateSetseq{StateType}, seed::NTuple{2, Integer} = gen_seed(StateType, 2)) where StateType <: PCGUInt` instead.
└                                                           @ nothing main.jl:10
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, T1, T2}(::Type{PCGStateOneseq{T, T1, T2}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:12.
│ Use `seed_type(#unused#::Type{PCGStateOneseq{T, T1, T2}}) where {T, T1, T2}` instead.
└                                                           @ nothing main.jl:12
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, T1, T2}(::Type{PCGStateMCG{T, T1, T2}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:13.
│ Use `seed_type(#unused#::Type{PCGStateMCG{T, T1, T2}}) where {T, T1, T2}` instead.
└                                                           @ nothing main.jl:13
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, T1, T2}(::Type{PCGStateUnique{T, T1, T2}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:14.
│ Use `seed_type(#unused#::Type{PCGStateUnique{T, T1, T2}}) where {T, T1, T2}` instead.
└                                                           @ nothing main.jl:14
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, T1, T2}(::Type{PCGStateSetseq{T, T1, T2}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:15.
│ Use `seed_type(#unused#::Type{PCGStateSetseq{T, T1, T2}}) where {T, T1, T2}` instead.
└                                                           @ nothing main.jl:15
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: AbstractPCG}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:18.
│ Use `copy!(dest::T, src::T) where T <: AbstractPCG` instead.
└                                                           @ nothing main.jl:18
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: PCGStateSetseq}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:22.
│ Use `copy!(dest::T, src::T) where T <: PCGStateSetseq` instead.
└                                                           @ nothing main.jl:22
┌ Warning: Deprecated syntax `parametric method syntax copy{T <: AbstractPCG}(src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:27.
│ Use `copy(src::T) where T <: AbstractPCG` instead.
└                                                           @ nothing main.jl:27
┌ Warning: Deprecated syntax `parametric method syntax =={T <: AbstractPCG}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:29.
│ Use `==(r1::T, r2::T) where T <: AbstractPCG` instead.
└                                                           @ nothing main.jl:29
┌ Warning: Deprecated syntax `parametric method syntax =={T <: PCGStateSetseq}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:30.
│ Use `==(r1::T, r2::T) where T <: PCGStateSetseq` instead.
└                                                           @ nothing main.jl:30
┌ Warning: Deprecated syntax `parametric method syntax rand{StateType <: Union{pcg_uints[1:-(end, 1)]...}, MethodType <: PCGMethod, OutputType <: PCGUInt}(r::AbstractPCG{StateType, MethodType, OutputType}, ::Type{OutputType})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:35.
│ Use `rand(r::AbstractPCG{StateType, MethodType, OutputType}, #unused#::Type{OutputType}) where {StateType <: Union{pcg_uints[1:-(end, 1)]...}, MethodType <: PCGMethod, OutputType <: PCGUInt}` instead.
└                                                           @ nothing main.jl:35
┌ Warning: Deprecated syntax `parametric method syntax rand{MethodType <: PCGMethod, OutputType <: PCGUInt}(r::AbstractPCG{UInt128, MethodType, OutputType}, ::Type{OutputType})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:42.
│ Use `rand(r::AbstractPCG{UInt128, MethodType, OutputType}, #unused#::Type{OutputType}) where {MethodType <: PCGMethod, OutputType <: PCGUInt}` instead.
└                                                           @ nothing main.jl:42
┌ Warning: Deprecated syntax `parametric method syntax bounded_rand{StateType <: PCGUInt, MethodType <: PCGMethod, OutputType <: PCGUInt}(s::AbstractPCG{StateType, MethodType, OutputType}, bound::OutputType)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:55.
│ Use `bounded_rand(s::AbstractPCG{StateType, MethodType, OutputType}, bound::OutputType) where {StateType <: PCGUInt, MethodType <: PCGMethod, OutputType <: PCGUInt}` instead.
└                                                           @ nothing main.jl:55
┌ Warning: Deprecated syntax `parametric method syntax advance!{StateType <: PCGUInt}(r::AbstractPCG{StateType}, Δ::Integer)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:97.
│ Use `advance!(r::AbstractPCG{StateType}, Δ::Integer) where StateType <: PCGUInt` instead.
└                                                           @ nothing main.jl:97
┌ Warning: Deprecated syntax `parametric method syntax PCGStateOneseq{T <: PCGUInt}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:145.
│ Use `PCGStateOneseq(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGUInt` instead.
└                                                          @ nothing main.jl:145
┌ Warning: Deprecated syntax `parametric method syntax PCGStateOneseq{T <: PCGMethod}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:147.
│ Use `PCGStateOneseq(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGMethod` instead.
└                                                          @ nothing main.jl:147
┌ Warning: Deprecated syntax `parametric method syntax PCGStateMCG{T <: PCGUInt}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:171.
│ Use `PCGStateMCG(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGUInt` instead.
└                                                          @ nothing main.jl:171
┌ Warning: Deprecated syntax `parametric method syntax PCGStateMCG{T <: PCGMethod}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:173.
│ Use `PCGStateMCG(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGMethod` instead.
└                                                          @ nothing main.jl:173
┌ Warning: Deprecated syntax `parametric method syntax PCGStateSetseq{T <: PCGUInt}(::Type{T}, seed::NTuple{2, Integer} = gen_seed(UInt128, 2))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:198.
│ Use `PCGStateSetseq(#s10::Type{T}, seed::NTuple{2, Integer} = gen_seed(UInt128, 2)) where T <: PCGUInt` instead.
└                                                          @ nothing main.jl:198
┌ Warning: Deprecated syntax `parametric method syntax PCGStateSetseq{T <: PCGMethod}(::Type{T}, seed::NTuple{2, Integer} = gen_seed(UInt128, 2))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:200.
│ Use `PCGStateSetseq(#s10::Type{T}, seed::NTuple{2, Integer} = gen_seed(UInt128, 2)) where T <: PCGMethod` instead.
└                                                          @ nothing main.jl:200
┌ Warning: Deprecated syntax `parametric method syntax PCGStateUnique{T <: PCGUInt}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:225.
│ Use `PCGStateUnique(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGUInt` instead.
└                                                          @ nothing main.jl:225
┌ Warning: Deprecated syntax `parametric method syntax PCGStateUnique{T <: PCGMethod}(::Type{T}, seed::Integer = gen_seed(UInt128))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/PCG/main.jl:227.
│ Use `PCGStateUnique(#s10::Type{T}, seed::Integer = gen_seed(UInt128)) where T <: PCGMethod` instead.
└                                                          @ nothing main.jl:227
┌ Warning: Deprecated syntax `parametric method syntax set_counter!{T <: UInt128}(r::R123Generator1x{T}, ctr::Integer)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:26.
│ Use `set_counter!(r::R123Generator1x{T}, ctr::Integer) where T <: UInt128` instead.
└                                                         @ nothing common.jl:26
┌ Warning: Deprecated syntax `parametric method syntax set_counter!{T <: Union{UInt32, UInt64}}(r::AbstractR123{T}, ctr::Integer)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:32.
│ Use `set_counter!(r::AbstractR123{T}, ctr::Integer) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing common.jl:32
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: UInt128}(r::R123Generator1x{T}, ::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:39.
│ Use `rand(r::R123Generator1x{T}, #unused#::Type{T}) where T <: UInt128` instead.
└                                                         @ nothing common.jl:39
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt32, UInt64}}(r::R123Generator2x{T}, ::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:45.
│ Use `rand(r::R123Generator2x{T}, #unused#::Type{T}) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing common.jl:45
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt32, UInt64}}(r::R123Generator4x{T}, ::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:56.
│ Use `rand(r::R123Generator4x{T}, #unused#::Type{T}) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing common.jl:56
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: UInt128}(r::R123Generator1x{T}, ::Type{R123Array1x{T}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:66.
│ Use `rand(r::R123Generator1x{T}, #unused#::Type{R123Array1x{T}}) where T <: UInt128` instead.
└                                                         @ nothing common.jl:66
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt32, UInt64}}(r::R123Generator2x{T}, ::Type{R123Array2x{T}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:71.
│ Use `rand(r::R123Generator2x{T}, #unused#::Type{R123Array2x{T}}) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing common.jl:71
┌ Warning: Deprecated syntax `parametric method syntax rand{T <: Union{UInt32, UInt64}}(r::R123Generator4x{T}, ::Type{R123Array4x{T}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/common.jl:80.
│ Use `rand(r::R123Generator4x{T}, #unused#::Type{R123Array4x{T}}) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing common.jl:80
┌ Warning: Deprecated syntax `parametric method syntax Threefry2x{T <: Union{UInt32, UInt64}}(::Type{T} = UInt64, seed::NTuple{2, Integer} = gen_seed(T, 2), R::Integer = 20)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:91.
│ Use `Threefry2x(#s10::Type{T} = UInt64, seed::NTuple{2, Integer} = gen_seed(T, 2), R::Integer = 20) where T <: Union{UInt32, UInt64}` instead.
└                                                       @ nothing threefry.jl:91
┌ Warning: Deprecated syntax `parametric method syntax srand{T <: Union{UInt32, UInt64}}(r::Threefry2x{T}, seed::NTuple{2, Integer} = gen_seed(T, 2))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:98.
│ Use `srand(r::Threefry2x{T}, seed::NTuple{2, Integer} = gen_seed(T, 2)) where T <: Union{UInt32, UInt64}` instead.
└                                                       @ nothing threefry.jl:98
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, R}(::Type{Threefry2x{T, R}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:106.
│ Use `seed_type(#unused#::Type{Threefry2x{T, R}}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:106
┌ Warning: Deprecated syntax `parametric method syntax copy!{T, R}(dest::Threefry2x{T, R}, src::Threefry2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:109.
│ Use `copy!(dest::Threefry2x{T, R}, src::Threefry2x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:109
┌ Warning: Deprecated syntax `parametric method syntax copy{T, R}(src::Threefry2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:114.
│ Use `copy(src::Threefry2x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:114
┌ Warning: Deprecated syntax `parametric method syntax =={T, R}(r1::Threefry2x{T, R}, r2::Threefry2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:117.
│ Use `==(r1::Threefry2x{T, R}, r2::Threefry2x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:117
┌ Warning: Deprecated syntax `parametric method syntax random123_r{T <: Union{UInt32, UInt64}, R}(r::Threefry2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:120.
│ Use `random123_r(r::Threefry2x{T, R}) where {T <: Union{UInt32, UInt64}, R}` instead.
└                                                      @ nothing threefry.jl:120
┌ Warning: Deprecated syntax `parametric method syntax Threefry4x{T <: Union{UInt32, UInt64}}(::Type{T} = UInt64, seed::NTuple{4, Integer} = gen_seed(T, 4), R::Integer = 20)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:232.
│ Use `Threefry4x(#s10::Type{T} = UInt64, seed::NTuple{4, Integer} = gen_seed(T, 4), R::Integer = 20) where T <: Union{UInt32, UInt64}` instead.
└                                                      @ nothing threefry.jl:232
┌ Warning: Deprecated syntax `parametric method syntax srand{T <: Union{UInt32, UInt64}}(r::Threefry4x{T}, seed::NTuple{4, Integer} = gen_seed(T, 4))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:240.
│ Use `srand(r::Threefry4x{T}, seed::NTuple{4, Integer} = gen_seed(T, 4)) where T <: Union{UInt32, UInt64}` instead.
└                                                      @ nothing threefry.jl:240
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, R}(::Type{Threefry4x{T, R}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:247.
│ Use `seed_type(#unused#::Type{Threefry4x{T, R}}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:247
┌ Warning: Deprecated syntax `parametric method syntax copy!{T, R}(dest::Threefry4x{T, R}, src::Threefry4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:250.
│ Use `copy!(dest::Threefry4x{T, R}, src::Threefry4x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:250
┌ Warning: Deprecated syntax `parametric method syntax copy{T, R}(src::Threefry4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:255.
│ Use `copy(src::Threefry4x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:255
┌ Warning: Deprecated syntax `parametric method syntax =={T, R}(r1::Threefry4x{T, R}, r2::Threefry4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:259.
│ Use `==(r1::Threefry4x{T, R}, r2::Threefry4x{T, R}) where {T, R}` instead.
└                                                      @ nothing threefry.jl:259
┌ Warning: Deprecated syntax `parametric method syntax random123_r{T <: Union{UInt32, UInt64}, R}(r::Threefry4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/threefry.jl:262.
│ Use `random123_r(r::Threefry4x{T, R}) where {T <: Union{UInt32, UInt64}, R}` instead.
└                                                      @ nothing threefry.jl:262
┌ Warning: Deprecated syntax `parametric method syntax Philox2x{T <: Union{UInt32, UInt64}}(::Type{T} = UInt64, seed::Integer = gen_seed(T), R::Integer = 10)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:56.
│ Use `Philox2x(#s25::Type{T} = UInt64, seed::Integer = gen_seed(T), R::Integer = 10) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing philox.jl:56
┌ Warning: Deprecated syntax `parametric method syntax srand{T <: Union{UInt32, UInt64}}(r::Philox2x{T}, seed::Integer = gen_seed(T))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:63.
│ Use `srand(r::Philox2x{T}, seed::Integer = gen_seed(T)) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing philox.jl:63
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, R}(::Type{Philox2x{T, R}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:71.
│ Use `seed_type(#unused#::Type{Philox2x{T, R}}) where {T, R}` instead.
└                                                         @ nothing philox.jl:71
┌ Warning: Deprecated syntax `parametric method syntax copy!{T, R}(dest::Philox2x{T, R}, src::Philox2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:74.
│ Use `copy!(dest::Philox2x{T, R}, src::Philox2x{T, R}) where {T, R}` instead.
└                                                         @ nothing philox.jl:74
┌ Warning: Deprecated syntax `parametric method syntax copy{T, R}(src::Philox2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:79.
│ Use `copy(src::Philox2x{T, R}) where {T, R}` instead.
└                                                         @ nothing philox.jl:79
┌ Warning: Deprecated syntax `parametric method syntax =={T, R}(r1::Philox2x{T, R}, r2::Philox2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:81.
│ Use `==(r1::Philox2x{T, R}, r2::Philox2x{T, R}) where {T, R}` instead.
└                                                         @ nothing philox.jl:81
┌ Warning: Deprecated syntax `parametric method syntax philox2x_round{T <: Union{UInt32, UInt64}}(ctr1::T, ctr2::T, key::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:84.
│ Use `philox2x_round(ctr1::T, ctr2::T, key::T) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing philox.jl:84
┌ Warning: Deprecated syntax `parametric method syntax philox2x_bumpkey{T <: Union{UInt32, UInt64}}(key::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:89.
│ Use `philox2x_bumpkey(key::T) where T <: Union{UInt32, UInt64}` instead.
└                                                         @ nothing philox.jl:89
┌ Warning: Deprecated syntax `parametric method syntax random123_r{T <: Union{UInt32, UInt64}, R}(r::Philox2x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:93.
│ Use `random123_r(r::Philox2x{T, R}) where {T <: Union{UInt32, UInt64}, R}` instead.
└                                                         @ nothing philox.jl:93
┌ Warning: Deprecated syntax `parametric method syntax Philox4x{T <: Union{UInt32, UInt64}}(::Type{T} = UInt64, seed::NTuple{2, Integer} = gen_seed(T, 2), R::Integer = 10)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:146.
│ Use `Philox4x(#s31::Type{T} = UInt64, seed::NTuple{2, Integer} = gen_seed(T, 2), R::Integer = 10) where T <: Union{UInt32, UInt64}` instead.
└                                                        @ nothing philox.jl:146
┌ Warning: Deprecated syntax `parametric method syntax srand{T <: Union{UInt32, UInt64}}(r::Philox4x{T}, seed::NTuple{2, Integer} = gen_seed(T, 2))` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:153.
│ Use `srand(r::Philox4x{T}, seed::NTuple{2, Integer} = gen_seed(T, 2)) where T <: Union{UInt32, UInt64}` instead.
└                                                        @ nothing philox.jl:153
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T, R}(::Type{Philox4x{T, R}})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:162.
│ Use `seed_type(#unused#::Type{Philox4x{T, R}}) where {T, R}` instead.
└                                                        @ nothing philox.jl:162
┌ Warning: Deprecated syntax `parametric method syntax copy!{T, R}(dest::Philox4x{T, R}, src::Philox4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:165.
│ Use `copy!(dest::Philox4x{T, R}, src::Philox4x{T, R}) where {T, R}` instead.
└                                                        @ nothing philox.jl:165
┌ Warning: Deprecated syntax `parametric method syntax copy{T, R}(src::Philox4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:170.
│ Use `copy(src::Philox4x{T, R}) where {T, R}` instead.
└                                                        @ nothing philox.jl:170
┌ Warning: Deprecated syntax `parametric method syntax =={T, R}(r1::Philox4x{T, R}, r2::Philox4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:173.
│ Use `==(r1::Philox4x{T, R}, r2::Philox4x{T, R}) where {T, R}` instead.
└                                                        @ nothing philox.jl:173
┌ Warning: Deprecated syntax `parametric method syntax philox4x_round{T <: Union{UInt32, UInt64}}(ctr1::T, ctr2::T, ctr3::T, ctr4::T, key1::T, key2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:177.
│ Use `philox4x_round(ctr1::T, ctr2::T, ctr3::T, ctr4::T, key1::T, key2::T) where T <: Union{UInt32, UInt64}` instead.
└                                                        @ nothing philox.jl:177
┌ Warning: Deprecated syntax `parametric method syntax philox4x_bumpkey{T <: Union{UInt32, UInt64}}(key1::T, key2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:183.
│ Use `philox4x_bumpkey(key1::T, key2::T) where T <: Union{UInt32, UInt64}` instead.
└                                                        @ nothing philox.jl:183
┌ Warning: Deprecated syntax `parametric method syntax random123_r{T <: Union{UInt32, UInt64}, R}(r::Philox4x{T, R})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Random123/philox.jl:187.
│ Use `random123_r(r::Philox4x{T, R}) where {T <: Union{UInt32, UInt64}, R}` instead.
└                                                        @ nothing philox.jl:187
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T <: AbstractXorshift64}(::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift64.jl:37.
│ Use `seed_type(#unused#::Type{T}) where T <: AbstractXorshift64` instead.
└                                                     @ nothing xorshift64.jl:37
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: AbstractXorshift64}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift64.jl:40.
│ Use `copy!(dest::T, src::T) where T <: AbstractXorshift64` instead.
└                                                     @ nothing xorshift64.jl:40
┌ Warning: Deprecated syntax `parametric method syntax copy{T <: AbstractXorshift64}(src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift64.jl:44.
│ Use `copy(src::T) where T <: AbstractXorshift64` instead.
└                                                     @ nothing xorshift64.jl:44
┌ Warning: Deprecated syntax `parametric method syntax =={T <: AbstractXorshift64}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift64.jl:46.
│ Use `==(r1::T, r2::T) where T <: AbstractXorshift64` instead.
└                                                     @ nothing xorshift64.jl:46
┌ Warning: Deprecated syntax `plus ? "Plus" :"` at /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift128.jl:19.
│ Use `plus ? "Plus" : "` instead.
└                                                    @ nothing xorshift128.jl:19
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T <: AbstractXorshift128}(::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift128.jl:43.
│ Use `seed_type(#unused#::Type{T}) where T <: AbstractXorshift128` instead.
└                                                    @ nothing xorshift128.jl:43
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: AbstractXorshift128}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift128.jl:46.
│ Use `copy!(dest::T, src::T) where T <: AbstractXorshift128` instead.
└                                                    @ nothing xorshift128.jl:46
┌ Warning: Deprecated syntax `parametric method syntax copy{T <: AbstractXorshift128}(src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift128.jl:51.
│ Use `copy(src::T) where T <: AbstractXorshift128` instead.
└                                                    @ nothing xorshift128.jl:51
┌ Warning: Deprecated syntax `parametric method syntax =={T <: AbstractXorshift128}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift128.jl:53.
│ Use `==(r1::T, r2::T) where T <: AbstractXorshift128` instead.
└                                                    @ nothing xorshift128.jl:53
┌ Warning: Deprecated syntax `plus ? "Plus" :"` at /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift1024.jl:19.
│ Use `plus ? "Plus" : "` instead.
└                                                   @ nothing xorshift1024.jl:19
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T <: AbstractXorshift1024}(::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift1024.jl:73.
│ Use `seed_type(#unused#::Type{T}) where T <: AbstractXorshift1024` instead.
└                                                   @ nothing xorshift1024.jl:73
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: AbstractXorshift1024}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift1024.jl:76.
│ Use `copy!(dest::T, src::T) where T <: AbstractXorshift1024` instead.
└                                                   @ nothing xorshift1024.jl:76
┌ Warning: Deprecated syntax `parametric method syntax copy{T <: AbstractXorshift1024}(src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift1024.jl:81.
│ Use `copy(src::T) where T <: AbstractXorshift1024` instead.
└                                                   @ nothing xorshift1024.jl:81
┌ Warning: Deprecated syntax `parametric method syntax =={T <: AbstractXorshift1024}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xorshift1024.jl:83.
│ Use `==(r1::T, r2::T) where T <: AbstractXorshift1024` instead.
└                                                   @ nothing xorshift1024.jl:83
┌ Warning: Deprecated syntax `plus ? "Plus" :"` at /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xoroshiro128.jl:21.
│ Use `plus ? "Plus" : "` instead.
└                                                   @ nothing xoroshiro128.jl:21
┌ Warning: Deprecated syntax `parametric method syntax seed_type{T <: AbstractXoroshiro128}(::Type{T})` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xoroshiro128.jl:46.
│ Use `seed_type(#unused#::Type{T}) where T <: AbstractXoroshiro128` instead.
└                                                   @ nothing xoroshiro128.jl:46
┌ Warning: Deprecated syntax `parametric method syntax copy!{T <: AbstractXoroshiro128}(dest::T, src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xoroshiro128.jl:49.
│ Use `copy!(dest::T, src::T) where T <: AbstractXoroshiro128` instead.
└                                                   @ nothing xoroshiro128.jl:49
┌ Warning: Deprecated syntax `parametric method syntax copy{T <: AbstractXoroshiro128}(src::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xoroshiro128.jl:54.
│ Use `copy(src::T) where T <: AbstractXoroshiro128` instead.
└                                                   @ nothing xoroshiro128.jl:54
┌ Warning: Deprecated syntax `parametric method syntax =={T <: AbstractXoroshiro128}(r1::T, r2::T)` around /home/vagrant/.julia/v0.7/RandomNumbers/src/Xorshifts/xoroshiro128.jl:56.
│ Use `==(r1::T, r2::T) where T <: AbstractXoroshiro128` instead.
└                                                   @ nothing xoroshiro128.jl:56
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:3.
│ Use `mutable struct` instead.
└                                                           @ nothing types.jl:3
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:72.
│ Use `mutable struct` instead.
└                                                          @ nothing types.jl:72
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:107.
│ Use `mutable struct` instead.
└                                                         @ nothing types.jl:107
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:167.
│ Use `mutable struct` instead.
└                                                         @ nothing types.jl:167
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:203.
│ Use `mutable struct` instead.
└                                                         @ nothing types.jl:203
┌ Warning: Deprecated syntax `parametric method syntax isinplace{T, N, inplace}(W::AbstractNoiseProcess{T, N, inplace})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:1.
│ Use `isinplace(W::AbstractNoiseProcess{T, N, inplace}) where {T, N, inplace}` instead.
└                                                           @ nothing types.jl:1
┌ Warning: Deprecated syntax `parametric method syntax NoiseWrapper{T, N, inplace}(source::AbstractNoiseProcess{T, N, inplace},; reset = true)` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:89.
│ Use `NoiseWrapper(source::AbstractNoiseProcess{T, N, inplace},; reset = true) where {T, N, inplace}` instead.
└                                                          @ nothing types.jl:89
WARNING: importing deprecated binding Base.Void into DiffEqNoiseProcess.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/types.jl:219
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:47.
│ Use `1 .-` instead.
└                                                         @ nothing wiener.jl:47
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:84.
│ Use `1 .-` instead.
└                                                         @ nothing wiener.jl:84
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn{T <: Number}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:5.
│ Use `wiener_randn(#unused#::Type{Complex{T}}) where T <: Number` instead.
└                                                          @ nothing wiener.jl:5
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn{T <: Number}(::Type{Complex{T}}, x...)` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:6.
│ Use `wiener_randn(#unused#::Type{Complex{T}}, x...) where T <: Number` instead.
└                                                          @ nothing wiener.jl:6
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn{T <: Number}(y::AbstractRNG, ::Type{Complex{T}}, x...)` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:7.
│ Use `wiener_randn(y::AbstractRNG, #unused#::Type{Complex{T}}, x...) where T <: Number` instead.
└                                                          @ nothing wiener.jl:7
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn{T <: Number}(y::AbstractRNG, ::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:8.
│ Use `wiener_randn(y::AbstractRNG, #unused#::Type{Complex{T}}) where T <: Number` instead.
└                                                          @ nothing wiener.jl:8
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn!{T <: Number}(y::AbstractRNG, x::AbstractArray{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:10.
│ Use `wiener_randn!(y::AbstractRNG, x::AbstractArray{Complex{T}}) where T <: Number` instead.
└                                                         @ nothing wiener.jl:10
┌ Warning: Deprecated syntax `parametric method syntax wiener_randn!{T <: Number}(x::AbstractArray{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/wiener.jl:15.
│ Use `wiener_randn!(x::AbstractArray{Complex{T}}) where T <: Number` instead.
└                                                         @ nothing wiener.jl:15
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/solve.jl:1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:1.
│ Use `struct` instead.
└                                                    @ nothing geometric_bm.jl:1
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:37.
│ Use `1 .-` instead.
└                                                   @ nothing geometric_bm.jl:37
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/geometric_bm.jl:45.
│ Use `struct` instead.
└                                                   @ nothing geometric_bm.jl:45
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:2.
│ Use `struct` instead.
└                                              @ nothing ornstein_uhlenbeck.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:38.
│ Use `struct` instead.
└                                             @ nothing ornstein_uhlenbeck.jl:38
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `1 .-` instead.
└                                             @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `-2.*` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `-2 .*` instead.
└                                             @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/ornstein_uhlenbeck.jl:46.
│ Use `2 .*` instead.
└                                             @ nothing ornstein_uhlenbeck.jl:46
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/rswm.jl:1.
│ Use `mutable struct` instead.
└                                                            @ nothing rswm.jl:1
┌ Warning: Deprecated syntax `parametric method syntax adaptive_alg{adaptivealg, T}(rswm::RSWM{adaptivealg, T})` around /home/vagrant/.julia/v0.7/DiffEqNoiseProcess/src/rswm.jl:11.
│ Use `adaptive_alg(rswm::RSWM{adaptivealg, T}) where {adaptivealg, T}` instead.
└                                                           @ nothing rswm.jl:11
ERROR: LoadError: LoadError: syntax: invalid escape sequence
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] include at ./sysimg.jl:26 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/DiffEqFinancial/src/DiffEqFinancial.jl:3
 [5] top-level scope
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:296 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/DiffEqFinancial/src/problems.jl:5
in expression starting at /home/vagrant/.julia/v0.7/DiffEqFinancial/src/DiffEqFinancial.jl:10
ERROR: LoadError: Failed to precompile DiffEqFinancial to /home/vagrant/.julia/lib/v0.7/DiffEqFinancial.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/DiffEqFinancial/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for DiffEqFinancial
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/DiffEqFinancial/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: Removing BinDeps v0.8.3                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Calculus v0.2.2                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing CommonSubexpressions v0.0.1       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffBase v0.3.2                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffEqDiffTools v0.2.0            @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffResults v0.0.2                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffRules v0.0.2                  @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Distances v0.5.0                  @ Base.Pkg.Entry entry.jl:546
[ Info: Removing ForwardDiff v0.7.0                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Hiccup v0.1.1                     @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Juno v0.3.2                       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing LineSearches v3.2.3               @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Media v0.3.0                      @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Missings v0.2.4                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing MuladdMacro v0.0.2                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NLSolversBase v3.1.0              @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NLsolve v0.13.0                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NaNMath v0.3.0                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Parameters v0.8.1                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Reexport v0.1.0                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Roots v0.5.0                      @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SHA v0.5.3                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SpecialFunctions v0.3.7           @ Base.Pkg.Entry entry.jl:546
[ Info: Removing StochasticDiffEq v2.23.2          @ Base.Pkg.Entry entry.jl:546
[ Info: Removing URIParser v0.3.0                  @ Base.Pkg.Entry entry.jl:546
ERROR: DiffEqFinancial had test errors

>>> End of log
