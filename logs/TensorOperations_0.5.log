>>> 'Pkg.add("TensorOperations")' log
INFO: Installing TensorOperations v0.4.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorOperations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorOperations")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing TensorOperations
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorOperations/src/indexnotation/tensormacro.jl, in expression starting on line 4

WARNING: deprecated syntax "call(::Type{IndexedObject{I,C}}, ...)".
Use "(::Type{IndexedObject{I,C}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IndexedObject{I,C}}, ...)".
Use "(::Type{IndexedObject{I,C}})(...)" instead.
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in _stridedloops(::Int64, ::Symbol, ::Symbol, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:76
 in @stridedloops(::Any, ::Any, ::Symbol, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:67
 in specialize_method at ./inference.jl:1394 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1492
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1527
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:852
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1023
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1053
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1076
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1722
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1570
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1522
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1527
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:852
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1023
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1053
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1076
 in abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1209
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1645
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1588
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1522
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1542
 in tensorcopy(::Array{Float64,4}, ::UnitRange{Int64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.5/TensorOperations/src/functions/simple.jl:17
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorOperations/test/methods.jl, in expression starting on line 7
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in _stridedloops(::Int64, ::Symbol, ::Symbol, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:83
 in @stridedloops(::Any, ::Any, ::Symbol, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:67
 in specialize_method at ./inference.jl:1394 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1492
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1527
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:852
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1023
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1053
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1076
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1722
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1570
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1522
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1527
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:852
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1023
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1053
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1076
 in abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1209
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1645
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1588
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1522
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1542
 in tensorcopy(::Array{Float64,4}, ::UnitRange{Int64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.5/TensorOperations/src/functions/simple.jl:17
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorOperations/test/methods.jl, in expression starting on line 7
ERROR: LoadError: LoadError: BoundsError: attempt to access 810000-element Array{Float64,1} at index [0]
 in macro expansion at ./simdloop.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/kernels.jl:11 [inlined]
 in add_micro!(::TensorOperations.One, ::TensorOperations.StridedData{4,Float64,:N}, ::TensorOperations.Zero, ::TensorOperations.StridedData{4,Complex{Float64},:N}, ::Tuple{Int64,Int64,Int64,Int64}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/kernels.jl:6
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:13 [inlined]
 in add_rec!(::TensorOperations.One, ::TensorOperations.StridedData{4,Float64,:N}, ::TensorOperations.Zero, ::TensorOperations.StridedData{4,Complex{Float64},:N}, ::Tuple{Int64,Int64,Int64,Int64}, ::Int64, ::Int64, ::Tuple{Int64,Int64,Int64,Int64}) at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:11
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:17 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:16 [inlined]
 in add_rec!(::TensorOperations.One, ::TensorOperations.StridedData{4,Float64,:N}, ::TensorOperations.Zero, ::TensorOperations.StridedData{4,Complex{Float64},:N}, ::Tuple{Int64,Int64,Int64,Int64}, ::Int64, ::Int64, ::Tuple{Int64,Int64,Int64,Int64}) at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:11
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:17 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/auxiliary/meta.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:16 [inlined]
 in add_rec!(::TensorOperations.One, ::TensorOperations.StridedData{4,Float64,:N}, ::TensorOperations.Zero, ::TensorOperations.StridedData{4,Complex{Float64},:N}, ::Tuple{Int64,Int64,Int64,Int64}, ::Int64, ::Int64, ::Tuple{Int64,Int64,Int64,Int64}) at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/recursive.jl:11
 in add!(::Int64, ::SubArray{Float64,4,Array{Float64,4},Tuple{StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64}},false}, ::Type{Val{:N}}, ::Int64, ::SubArray{Complex{Float64},4,Array{Complex{Float64},4},Tuple{UnitRange{Int64},StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64}},false}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.5/TensorOperations/src/implementation/stridedarray.jl:25
 in tensorcopy!(::SubArray{Float64,4,Array{Float64,4},Tuple{StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64}},false}, ::UnitRange{Int64}, ::SubArray{Complex{Float64},4,Array{Complex{Float64},4},Tuple{UnitRange{Int64},StepRange{Int64,Int64},StepRange{Int64,Int64},StepRange{Int64,Int64}},false}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.5/TensorOperations/src/functions/inplace.jl:5
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/TensorOperations/test/methods.jl, in expression starting on line 96
while loading /home/vagrant/.julia/v0.5/TensorOperations/test/runtests.jl, in expression starting on line 4
==========================[ ERROR: TensorOperations ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/TensorOperations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: TensorOperations had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
