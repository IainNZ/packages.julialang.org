>>> 'Pkg.add("CompScienceMeshes")' log
[ Info: Cloning cache of CompScienceMeshes from https://github.com/krcools/CompScienceMeshes.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CollisionDetection v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Combinatorics v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CompScienceMeshes v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FastGaussQuadrature v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CompScienceMeshes
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CompScienceMeshes")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz    2094065 s         97 s     109048 s     621377 s         19 s
       #2  3503 MHz     458821 s         77 s      48852 s    2761955 s          0 s
       
  Memory: 2.93927001953125 GB (910.203125 MB free)
  Uptime: 33354.0 sec
  Load Avg:  1.021484375  1.0234375  1.0166015625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CompScienceMeshes             0.1.0
 - JSON                          0.16.3
12 additional packages:
 - BinDeps                       0.8.2
 - CollisionDetection            0.0.1
 - Combinatorics                 0.5.0
 - Compat                        0.42.0
 - FastGaussQuadrature           0.3.0
 - IterTools                     0.2.0
 - Nullables                     0.0.2
 - Polynomials                   0.2.0
 - SHA                           0.5.2
 - SpecialFunctions              0.3.6
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
[ Info: Testing CompScienceMeshes @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CompScienceMeshes/test/runtests.jl:4
┌ Warning: Deprecated syntax `parametric method syntax legendre{T <: AbstractFloat}(n::Integer, a::T, b::T)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/quadrature/SegmentGauss.jl:6.
│ Use `legendre(n::Integer, a::T, b::T) where T <: AbstractFloat` instead.
└ @ nothing SegmentGauss.jl:6
[ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub. @ nothing none:0
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/mesh.jl:9.
│ Use `mutable struct` instead.
└ @ nothing mesh.jl:9
┌ Warning: Deprecated syntax `parametric method syntax fliporientation{N, T}(I::SVector{N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/mesh.jl:287.
│ Use `fliporientation(I::SVector{N, T}) where {N, T}` instead.
└ @ nothing mesh.jl:287
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subdMesh.jl:3.
│ Use `mutable struct` instead.
└ @ nothing subdMesh.jl:3
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subdMesh.jl:8.
│ Use `mutable struct` instead.
└ @ nothing subdMesh.jl:8
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subdMesh.jl:15.
│ Use `mutable struct` instead.
└ @ nothing subdMesh.jl:15
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subdMesh.jl:22.
│ Use `mutable struct` instead.
└ @ nothing subdMesh.jl:22
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/rectangle.jl:6.
│ Use `struct` instead.
└ @ nothing rectangle.jl:6
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/rectangle.jl:18.
│ Use `struct` instead.
└ @ nothing rectangle.jl:18
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:9.
│ Use `struct` instead.
└ @ nothing charts.jl:9
┌ Warning: Deprecated syntax `(vertices...)` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:115.
│ Use `(vertices...,)` instead.
└ @ nothing charts.jl:115
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:225.
│ Use `struct` instead.
└ @ nothing charts.jl:225
┌ Warning: Deprecated syntax `parametric method syntax coordtype{U, D, C, N, T}(::Type{Simplex{U, D, C, N, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:22.
│ Use `coordtype(#unused#::Type{Simplex{U, D, C, N, T}}) where {U, D, C, N, T}` instead.
└ @ nothing charts.jl:22
┌ Warning: Deprecated syntax `parametric method syntax volume{T}(x::Tuple{T, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:37.
│ Use `volume(x::Tuple{T, T}) where T` instead.
└ @ nothing charts.jl:37
┌ Warning: Deprecated syntax `parametric method syntax dimension{U, D, C, N, T}(::Type{Simplex{U, D, C, N, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:45.
│ Use `dimension(#unused#::Type{Simplex{U, D, C, N, T}}) where {U, D, C, N, T}` instead.
└ @ nothing charts.jl:45
┌ Warning: Deprecated syntax `parametric method syntax universedimension{U, D, C, N, T}(::Type{Simplex{U, D, C, N, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:68.
│ Use `universedimension(#unused#::Type{Simplex{U, D, C, N, T}}) where {U, D, C, N, T}` instead.
└ @ nothing charts.jl:68
┌ Warning: Deprecated syntax `parametric method syntax simplex{D1, P}(vertices::SVector{D1, P})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:99.
│ Use `simplex(vertices::SVector{D1, P}) where {D1, P}` instead.
└ @ nothing charts.jl:99
┌ Warning: Deprecated syntax `parametric method syntax simplex{D}(vertices, ::Type{Val{D}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:118.
│ Use `simplex(vertices, #unused#::Type{Val{D}}) where D` instead.
└ @ nothing charts.jl:118
┌ Warning: Deprecated syntax `parametric method syntax _normals{C}(tangents, ::Type{Val{C}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:163.
│ Use `_normals(tangents, #unused#::Type{Val{C}}) where C` instead.
└ @ nothing charts.jl:163
┌ Warning: Deprecated syntax `parametric method syntax carttobary{U, D, C, N, T}(p::Simplex{U, D, C, N, T}, cart)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:203.
│ Use `carttobary(p::Simplex{U, D, C, N, T}, cart) where {U, D, C, N, T}` instead.
└ @ nothing charts.jl:203
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ReferenceSimplex{D, T, N}}){D, T, N}()` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:233.
│ Use `(::Type{ReferenceSimplex{D, T, N}})() where {D, T, N}` instead.
└ @ nothing charts.jl:233
┌ Warning: Deprecated syntax `parametric method syntax domain{U, D, C, T, N}(ch::Simplex{U, D, C, N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/charts.jl:251.
│ Use `domain(ch::Simplex{U, D, C, N, T}) where {U, D, C, T, N}` instead.
└ @ nothing charts.jl:251
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subd_chart.jl:2.
│ Use `mutable struct` instead.
└ @ nothing subd_chart.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:7.
│ Use `struct` instead.
└ @ nothing sphere.jl:7
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:23.
│ Use `struct` instead.
└ @ nothing sphere.jl:23
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:26.
│ Use `struct` instead.
└ @ nothing sphere.jl:26
┌ Warning: Deprecated syntax `parametric method syntax coordtype{P, T}(ch::Type{SphereChart{P, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:14.
│ Use `coordtype(ch::Type{SphereChart{P, T}}) where {P, T}` instead.
└ @ nothing sphere.jl:14
┌ Warning: Deprecated syntax `parametric method syntax dimension{P, T}(p::Type{SphereChart{P, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:17.
│ Use `dimension(p::Type{SphereChart{P, T}}) where {P, T}` instead.
└ @ nothing sphere.jl:17
┌ Warning: Deprecated syntax `parametric method syntax universedimension{P, T}(::Type{SphereChart{P, T}})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:20.
│ Use `universedimension(#unused#::Type{SphereChart{P, T}}) where {P, T}` instead.
└ @ nothing sphere.jl:20
┌ Warning: Deprecated syntax `parametric method syntax domain{P, T}(ch::SphereChart{P, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/sphere.jl:24.
│ Use `domain(ch::SphereChart{P, T}) where {P, T}` instead.
└ @ nothing sphere.jl:24
┌ Warning: Deprecated syntax `parametric method syntax cross{T}(a::Pt{2, T}, b::Pt{2, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:2.
│ Use `cross(a::Pt{2, T}, b::Pt{2, T}) where T` instead.
└ @ nothing overlap.jl:2
┌ Warning: Deprecated syntax `parametric method syntax overlap{U, D, C, N, T}(p1::Simplex{U, D, C, N, T}, p2::Simplex{U, D, C, N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:10.
│ Use `overlap(p1::Simplex{U, D, C, N, T}, p2::Simplex{U, D, C, N, T}) where {U, D, C, N, T}` instead.
└ @ nothing overlap.jl:10
┌ Warning: Deprecated syntax `parametric method syntax overlap{T, U, C}(p::Simplex{U, 0, C, 1, T}, q::Simplex{U, 0, C, 1, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:19.
│ Use `overlap(p::Simplex{U, 0, C, 1, T}, q::Simplex{U, 0, C, 1, T}) where {T, U, C}` instead.
└ @ nothing overlap.jl:19
┌ Warning: Deprecated syntax `parametric method syntax overlap{T, U, C}(p::Simplex{U, 1, C, 2, T}, q::Simplex{U, 1, C, 2, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:28.
│ Use `overlap(p::Simplex{U, 1, C, 2, T}, q::Simplex{U, 1, C, 2, T}) where {T, U, C}` instead.
└ @ nothing overlap.jl:28
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:28. @ nothing overlap.jl:28
┌ Warning: Deprecated syntax `parametric method syntax overlap{T}(p::Simplex{3, 2, 1, 3, T}, q::Simplex{3, 2, 1, 3, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:60.
│ Use `overlap(p::Simplex{3, 2, 1, 3, T}, q::Simplex{3, 2, 1, 3, T}) where T` instead.
└ @ nothing overlap.jl:60
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/overlap.jl:60. @ nothing overlap.jl:60
┌ Warning: Deprecated syntax `parametric method syntax intersection{U, C, T}(p1::Simplex{U, 1, C, 2, T}, p2::Simplex{U, 1, C, 2, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/intersect.jl:10.
│ Use `intersection(p1::Simplex{U, 1, C, 2, T}, p2::Simplex{U, 1, C, 2, T}) where {U, C, T}` instead.
└ @ nothing intersect.jl:10
┌ Warning: Deprecated syntax `parametric method syntax intersection{U, C}(p1::Simplex{U, 2, C, 3}, p2::Simplex{U, 2, C, 3})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/intersect.jl:38.
│ Use `intersection(p1::Simplex{U, 2, C, 3}, p2::Simplex{U, 2, C, 3}) where {U, C}` instead.
└ @ nothing intersect.jl:38
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/neighborhood.jl:1.
│ Use `struct` instead.
└ @ nothing neighborhood.jl:1
┌ Warning: Deprecated syntax `parametric method syntax center{U, D, C, N, T}(p::Simplex{U, D, C, N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/neighborhood.jl:36.
│ Use `center(p::Simplex{U, D, C, N, T}) where {U, D, C, N, T}` instead.
└ @ nothing neighborhood.jl:36
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subd_neighborhood.jl:2.
│ Use `mutable struct` instead.
└ @ nothing subd_neighborhood.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/quadpoints.jl:1.
│ Use `struct` instead.
└ @ nothing quadpoints.jl:1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:2.
│ Use `mutable struct` instead.
└ @ nothing octree.jl:2
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:13.
│ Use `mutable struct` instead.
└ @ nothing octree.jl:13
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:384.
│ Use `mutable struct` instead.
└ @ nothing octree.jl:384
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:389.
│ Use `mutable struct` instead.
└ @ nothing octree.jl:389
┌ Warning: Deprecated syntax `parametric method syntax boundingbox{P}(v::Vector{P})` around /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:34.
│ Use `boundingbox(v::Vector{P}) where P` instead.
└ @ nothing octree.jl:34
┌ Warning: Deprecated syntax `parametric method syntax Octree{T}(points::Vector, radii::Vector{T}, expanding_ratio = 1, splitcount = 10, minhalfsize = zero(T))` around /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:73.
│ Use `Octree(points::Vector, radii::Vector{T}, expanding_ratio = 1, splitcount = 10, minhalfsize = zero(T)) where T` instead.
└ @ nothing octree.jl:73
┌ Warning: Deprecated syntax `parametric method syntax insert!{P, T}(tree, box, center::P, halfsize::T, point::P, radius::T, id)` around /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:240.
│ Use `insert!(tree, box, center::P, halfsize::T, point::P, radius::T, id) where {P, T}` instead.
└ @ nothing octree.jl:240
┌ Warning: Deprecated syntax `parametric method syntax boundingbox{U, D, C, N, T}(p::Simplex{U, D, C, N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/submesh.jl:66.
│ Use `boundingbox(p::Simplex{U, D, C, N, T}) where {U, D, C, N, T}` instead.
└ @ nothing submesh.jl:66
┌ Warning: Deprecated syntax `parametric method syntax boundingbox{N, T <: Number}(p::SVector{N, T})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/submesh.jl:87.
│ Use `boundingbox(p::SVector{N, T}) where {N, T <: Number}` instead.
└ @ nothing submesh.jl:87
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/flipped.jl:1.
│ Use `struct` instead.
└ @ nothing flipped.jl:1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/flipped.jl:9.
│ Use `struct` instead.
└ @ nothing flipped.jl:9
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/timeaxis.jl:4.
│ Use `mutable struct` instead.
└ @ nothing timeaxis.jl:4
┌ Warning: Deprecated syntax `parametric method syntax meshsegment{T <: Real}(L::T, delta::T, udim = 2)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/primitives.jl:5.
│ Use `meshsegment(L::T, delta::T, udim = 2) where T <: Real` instead.
└ @ nothing primitives.jl:5
┌ Warning: Deprecated syntax `parametric method syntax meshcircle{T <: Real}(radius::T, delta::T, udim = 2)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/primitives.jl:29.
│ Use `meshcircle(radius::T, delta::T, udim = 2) where T <: Real` instead.
└ @ nothing primitives.jl:29
┌ Warning: Deprecated syntax `parametric method syntax meshrectangle{T}(width::T, height::T, delta::T, udim = 3)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/primitives.jl:69.
│ Use `meshrectangle(width::T, height::T, delta::T, udim = 3) where T` instead.
└ @ nothing primitives.jl:69
┌ Warning: Deprecated syntax `parametric method syntax barycentric_refinement{U}(mesh::Mesh{U, 2})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/baryref.jl:13.
│ Use `barycentric_refinement(mesh::Mesh{U, 2}) where U` instead.
└ @ nothing baryref.jl:13
┌ Warning: Deprecated syntax `parametric method syntax barycentric_refinement{U}(mesh::Mesh{U, 3})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/baryref.jl:59.
│ Use `barycentric_refinement(mesh::Mesh{U, 3}) where U` instead.
└ @ nothing baryref.jl:59
┌ Warning: Deprecated syntax `parametric method syntax bisecting_refinement{U}(mesh::Mesh{U, 3})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/baryref.jl:118.
│ Use `bisecting_refinement(mesh::Mesh{U, 3}) where U` instead.
└ @ nothing baryref.jl:118
┌ Warning: Deprecated syntax `parametric method syntax Loop_subdivision{U}(mesh::Mesh{U, 3})` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/subdivision.jl:12.
│ Use `Loop_subdivision(mesh::Mesh{U, 3}) where U` instead.
└ @ nothing subdivision.jl:12
┌ Warning: Deprecated syntax `parametric method syntax map_ids{N, T}(c::SVector{N, T}, idmap)` around /home/vagrant/.julia/v0.7/CompScienceMeshes/src/weld.jl:74.
│ Use `map_ids(c::SVector{N, T}, idmap) where {N, T}` instead.
└ @ nothing weld.jl:74
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CompScienceMeshes/test/test_mesh.jl:1
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #s168#236(::Tuple{Int64}, ::Type, ::Type, ::Type, ::Tuple{DataType}) at mapreduce.jl:20
└ @ StaticArrays mapreduce.jl:20
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = relorientation(::SVector{1,Int64}, ::SVector{2,Int64}) at utils.jl:8
└ @ CompScienceMeshes utils.jl:8
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = relorientation(::SVector{1,Int64}, ::SVector{2,Int64}) at utils.jl:12
└ @ CompScienceMeshes utils.jl:12
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = (::getfield(CompScienceMeshes, Symbol("##2#3")))(::Int64) at <missing>:0
└ @ CompScienceMeshes <missing>:0
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = relorientation(::SVector{2,Int64}, ::SVector{3,Int64}) at utils.jl:8
└ @ CompScienceMeshes utils.jl:8
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = relorientation(::SVector{2,Int64}, ::SVector{3,Int64}) at utils.jl:12
└ @ CompScienceMeshes utils.jl:12
┌ Warning: `float(a::AbstractArray{<:AbstractString})` is deprecated, use `parse.(Float64, a)` instead.
│   caller = (::getfield(CompScienceMeshes, Symbol("##84#86")))(::IOStream) at readmesh.jl:44
└ @ CompScienceMeshes readmesh.jl:44
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##384#388")){Int64,Int64,Tuple{Int64,Int64},Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##384#388")){Int64,Int64,Tuple{Int64,Int64},Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `sub2ind(dims::DimsInteger, I::Integer...)` is deprecated, use `(LinearIndices(dims))[I...]` instead.
│   caller = (::getfield(StaticArrays, Symbol("##367#371")){Int64,Tuple{Int64,Int64}})(::Int64) at <missing>:0
└ @ StaticArrays <missing>:0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #s168#236(::Tuple{Int64}, ::Type, ::Type, ::Type, ::Tuple{DataType,DataType}) at mapreduce.jl:20
└ @ StaticArrays mapreduce.jl:20
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CompScienceMeshes/test/test_flipped.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CompScienceMeshes/test/test_weld.jl:1
ERROR: LoadError: LoadError: MethodError: no method matching result_style(::Type{StaticArrays.StaticArray})
Closest candidates are:
  result_style(::Any, !Matched::Any) at broadcast.jl:264
  result_style(!Matched::Base.Broadcast.BroadcastStyle) at broadcast.jl:261
  result_style(!Matched::S<:Base.Broadcast.BroadcastStyle, !Matched::S<:Base.Broadcast.BroadcastStyle) where S<:Base.Broadcast.BroadcastStyle at broadcast.jl:262
Stacktrace:
 [1] combine_styles(::SVector{3,Float64}) at ./broadcast.jl:256
 [2] combine_styles at ./broadcast.jl:257 [inlined]
 [3] broadcast at ./broadcast.jl:615 [inlined]
 [4] Type at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:84 [inlined]
 [5] CollisionDetection.Octree(::Array{SVector{3,Float64},1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.7/CollisionDetection/src/octree.jl:73
 [6] weld(::CompScienceMeshes.Mesh{3,3,Float64}, ::CompScienceMeshes.Mesh{3,3,Float64}) at /home/vagrant/.julia/v0.7/CompScienceMeshes/src/weld.jl:25
 [7] top-level scope
 [8] include at ./boot.jl:295 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] include at ./sysimg.jl:26 [inlined]
 [11] include(::String) at /home/vagrant/.julia/v0.7/CompScienceMeshes/test/runtests.jl:1
 [12] top-level scope
 [13] include at ./boot.jl:295 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:521
 [15] include(::Module, ::String) at ./sysimg.jl:26
 [16] process_options(::Base.JLOptions) at ./client.jl:323
 [17] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/CompScienceMeshes/test/test_weld.jl:13
in expression starting at /home/vagrant/.julia/v0.7/CompScienceMeshes/test/runtests.jl:13
┌ Error: ------------------------------------------------------------
│ # Testing failed for CompScienceMeshes
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CompScienceMeshes/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: CompScienceMeshes had test errors

>>> End of log
