>>> 'Pkg.add("StructsOfArrays")' log
[ Info: Cloning cache of StructsOfArrays from https://github.com/simonster/StructsOfArrays.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing StructsOfArrays v0.0.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of StructsOfArrays
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("StructsOfArrays")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3261261 s       6528 s     159362 s     785664 s         24 s
       #2  3500 MHz     598092 s        272 s      60605 s    4222968 s          0 s
       
  Memory: 2.93927001953125 GB (916.06640625 MB free)
  Uptime: 49682.0 sec
  Load Avg:  0.87109375  0.9453125  0.94873046875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - StructsOfArrays               0.0.3
3 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
 - tmp6B2J9N                     0.0.0-             non-repo (unregistered)
[ Info: Testing StructsOfArrays @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/StructsOfArrays/test/runtests.jl:24.
│ Use `struct` instead.
└ @ nothing runtests.jl:24
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:4.
│ Use `struct` instead.
└ @ nothing StructsOfArrays.jl:4
┌ Warning: Deprecated syntax `parametric method syntax StructOfArrays{T}(::Type{T}, dims::Integer...)` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:9.
│ Use `StructOfArrays(#unused#::Type{T}, dims::Integer...) where T` instead.
└ @ nothing StructsOfArrays.jl:9
┌ Warning: Deprecated syntax `parametric method syntax Base.linearindexing{T <: StructOfArrays}(::Type{T})` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:17.
│ Use `Base.linearindexing(#unused#::Type{T}) where T <: StructOfArrays` instead.
└ @ nothing StructsOfArrays.jl:17
WARNING: Base.linearindexing is deprecated, use IndexStyle instead.
  likely near /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:17
┌ Warning: Deprecated syntax `parametric method syntax Base.similar{T}(A::StructOfArrays, ::Type{T}, dims::Dims)` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:20.
│ Use `Base.similar(A::StructOfArrays, #unused#::Type{T}, dims::Dims) where T` instead.
└ @ nothing StructsOfArrays.jl:20
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, S, N}(::Type{StructOfArrays{T, N}}, A::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:27.
│ Use `Base.convert(#unused#::Type{StructOfArrays{T, N}}, A::AbstractArray{S, N}) where {T, S, N}` instead.
└ @ nothing StructsOfArrays.jl:27
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, S, N}(::Type{StructOfArrays{T}}, A::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:29.
│ Use `Base.convert(#unused#::Type{StructOfArrays{T}}, A::AbstractArray{S, N}) where {T, S, N}` instead.
└ @ nothing StructsOfArrays.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, N}(::Type{StructOfArrays}, A::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:31.
│ Use `Base.convert(#unused#::Type{StructOfArrays}, A::AbstractArray{T, N}) where {T, N}` instead.
└ @ nothing StructsOfArrays.jl:31
┌ Warning: Deprecated syntax `parametric method syntax Base.getindex{T}(A::StructOfArrays{T}, i::Integer...)` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:38.
│ Use `Base.getindex(A::StructOfArrays{T}, i::Integer...) where T` instead.
└ @ nothing StructsOfArrays.jl:38
┌ Warning: Deprecated syntax `parametric method syntax Base.setindex!{T}(A::StructOfArrays{T}, x, i::Integer...)` around /home/vagrant/.julia/v0.7/StructsOfArrays/src/StructsOfArrays.jl:42.
│ Use `Base.setindex!(A::StructOfArrays{T}, x, i::Integer...) where T` instead.
└ @ nothing StructsOfArrays.jl:42
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/StructsOfArrays/test/runtests.jl:2
┌ Warning: `complex(A::AbstractArray, B::AbstractArray)` is deprecated, use `complex.(A, B)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isleaftype` is deprecated, use `isconcrete` instead.
│   caller = #s1#1(::Any, ::Any, ::Any, ::Any) at StructsOfArrays.jl:9
└ @ StructsOfArrays StructsOfArrays.jl:9
WARNING: Base.LinearFast is deprecated, use IndexLinear instead.
  likely near /home/vagrant/.julia/v0.7/StructsOfArrays/test/runtests.jl:5
┌ Warning: `Array(::Type{T}, d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = @generated body at StructsOfArrays.jl:9 [inlined]
└ @ Core StructsOfArrays.jl:9
┌ Warning: `Array(::Type{T}, d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = @generated body at StructsOfArrays.jl:9 [inlined]
└ @ Core StructsOfArrays.jl:9
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = convert(::Type{StructOfArrays{Complex{Float64},1,U} where U<:Tuple}, ::Array{Complex{Float64},1}) at StructsOfArrays.jl:27
└ @ StructsOfArrays StructsOfArrays.jl:27
┌ Warning: @test_approx_eq is deprecated, use `@test sum(regular) ≈ sum(soa)` instead
│   caller = include at boot.jl:295 [inlined]
└ @ Core boot.jl:295
ERROR: LoadError: MethodError: no method matching linearindices(::Complex{Float64})
Closest candidates are:
  linearindices(!Matched::SimpleVector) at essentials.jl:555
  linearindices(!Matched::AbstractArray{T,1} where T) at abstractarray.jl:116
  linearindices(!Matched::AbstractArray) at abstractarray.jl:115
  ...
Stacktrace:
 [1] test_approx_eq(::Complex{Float64}, ::Complex{Float64}, ::String, ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1544
 [2] top-level scope
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] process_options(::Base.JLOptions) at ./client.jl:323
 [7] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/StructsOfArrays/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for StructsOfArrays
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/StructsOfArrays/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: StructsOfArrays had test errors

>>> End of log
