>>> 'Pkg.add("ArrayFire")' log
[ Info: Cloning cache of ArrayFire from https://github.com/JuliaComputing/ArrayFire.jl.git
[ Info: Installing ArrayFire v0.1.0
[ Info: Installing BinDeps v0.8.5
[ Info: Installing SHA v0.5.3
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("ArrayFire")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     307524 s         98 s      21225 s     112281 s          4 s
       #2  3499 MHz      70140 s         57 s      10556 s     424832 s          0 s
       
  Memory: 2.93927001953125 GB (599.81640625 MB free)
  Uptime: 5117.0 sec
  Load Avg:  0.9970703125  1.294921875  1.45068359375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ArrayFire                     0.1.0
 - JSON                          0.16.4
6 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.48.0
 - Nullables                     0.0.3
 - SHA                           0.5.3
 - SpecialFunctions              0.3.8
 - URIParser                     0.3.0
[ Info: Testing ArrayFire
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:283.
│ Use `mutable struct` instead.
└ @ nothing common.jl:283
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:289.
│ Use `mutable struct` instead.
└ @ nothing common.jl:289
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:295.
│ Use `mutable struct` instead.
└ @ nothing common.jl:295
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:300.
│ Use `mutable struct` instead.
└ @ nothing common.jl:300
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:308.
│ Use `mutable struct` instead.
└ @ nothing common.jl:308
WARNING: importing deprecated binding Base.Void into ArrayFire.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:84
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:289
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:289
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:289
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:305
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/common.jl:315
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:3.
│ Use `mutable struct` instead.
└ @ nothing array.jl:3
┌ Warning: `include_string(string)` is deprecated, use `include_string(module, string)` instead.
│   caller = top-level scope at array.jl:16
└ @ Core array.jl:16
WARNING: importing deprecated binding Base.SparseMatrixCSC into ArrayFire.
WARNING: importing deprecated binding Base.issparse into ArrayFire.
WARNING: importing deprecated binding Base.sparse into ArrayFire.
┌ Warning: Deprecated syntax `parametric method syntax sparse{T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:40.
│ Use `sparse(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:40
┌ Warning: Deprecated syntax `parametric method syntax (::Type{AFArray{T1}}){T1, T2, N}(a::AFArray{T2, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:42.
│ Use `(::Type{AFArray{T1}})(a::AFArray{T2, N}) where {T1, T2, N}` instead.
└ @ nothing array.jl:42
┌ Warning: Deprecated syntax `parametric method syntax (::Type{AFArray{T1, N}}){T1, T2, N}(a::AFArray{T2, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:43.
│ Use `(::Type{AFArray{T1, N}})(a::AFArray{T2, N}) where {T1, T2, N}` instead.
└ @ nothing array.jl:43
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Array{T, N}}){T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:45.
│ Use `(::Type{Array{T, N}})(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:45
┌ Warning: Deprecated syntax `parametric method syntax (::Type{AFArray{T, N}}){T, N}(a::Array{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:46.
│ Use `(::Type{AFArray{T, N}})(a::Array{T, N}) where {T, N}` instead.
└ @ nothing array.jl:46
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Array{T}}){T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:48.
│ Use `(::Type{Array{T}})(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:48
┌ Warning: Deprecated syntax `parametric method syntax (::Type{AFArray{T}}){T, N}(a::Array{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:49.
│ Use `(::Type{AFArray{T}})(a::Array{T, N}) where {T, N}` instead.
└ @ nothing array.jl:49
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Array}){T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:51.
│ Use `(::Type{Array})(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:51
┌ Warning: Deprecated syntax `parametric method syntax (::Type{AFArray}){T, N}(a::Array{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:52.
│ Use `(::Type{AFArray})(a::Array{T, N}) where {T, N}` instead.
└ @ nothing array.jl:52
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:54
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SparseMatrixCSC{T}}){T}(a::AFArray{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:56.
│ Use `(::Type{SparseMatrixCSC{T}})(a::AFArray{T}) where T` instead.
└ @ nothing array.jl:56
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:56
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SparseMatrixCSC}){T}(a::AFArray{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:57.
│ Use `(::Type{SparseMatrixCSC})(a::AFArray{T}) where T` instead.
└ @ nothing array.jl:57
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:57
┌ Warning: Deprecated syntax `parametric method syntax deepcopy_internal{T, N}(a::AFArray{T, N}, d::ObjectIdDict)` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:59.
│ Use `deepcopy_internal(a::AFArray{T, N}, d::ObjectIdDict) where {T, N}` instead.
└ @ nothing array.jl:59
WARNING: importing deprecated binding Base.ObjectIdDict into ArrayFire.
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:59
WARNING: importing deprecated binding Base.det into ArrayFire.
WARNING: importing deprecated binding Base.dot into ArrayFire.
WARNING: importing deprecated binding Base.fft into ArrayFire.
WARNING: importing deprecated binding Base.gradient into ArrayFire.
WARNING: importing deprecated binding Base.ifft into ArrayFire.
WARNING: importing deprecated binding Base.lu into ArrayFire.
WARNING: importing deprecated binding Base.norm into ArrayFire.
WARNING: importing deprecated binding Base.qr into ArrayFire.
WARNING: importing deprecated binding Base.rank into ArrayFire.
WARNING: importing deprecated binding Base.svd into ArrayFire.
WARNING: importing deprecated binding Base.conv into ArrayFire.
┌ Warning: Deprecated syntax `parametric method syntax similar{T}(a::AFArray, ::Type{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:69.
│ Use `similar(a::AFArray, #unused#::Type{T}) where T` instead.
└ @ nothing array.jl:69
┌ Warning: Deprecated syntax `parametric method syntax eltype{T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:71.
│ Use `eltype(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:71
┌ Warning: Deprecated syntax `parametric method syntax ndims{T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:72.
│ Use `ndims(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:72
┌ Warning: Deprecated syntax `parametric method syntax maximum{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:82.
│ Use `maximum(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:82
┌ Warning: Deprecated syntax `parametric method syntax minimum{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:83.
│ Use `minimum(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:83
┌ Warning: Deprecated syntax `parametric method syntax mean{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:84.
│ Use `mean(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:84
┌ Warning: Deprecated syntax `parametric method syntax std{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:85.
│ Use `std(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:85
┌ Warning: Deprecated syntax `parametric method syntax var{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:86.
│ Use `var(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:86
┌ Warning: Deprecated syntax `parametric method syntax median{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:87.
│ Use `median(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:87
┌ Warning: Deprecated syntax `parametric method syntax prod{T <: Real}(a::AFArray{T})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:88.
│ Use `prod(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:88
┌ Warning: Deprecated syntax `parametric method syntax sum{N}(a::AFArray{UInt8, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:89.
│ Use `sum(a::AFArray{UInt8, N}) where N` instead.
└ @ nothing array.jl:89
┌ Warning: Deprecated syntax `parametric method syntax sum{N}(a::AFArray{Bool, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:90.
│ Use `sum(a::AFArray{Bool, N}) where N` instead.
└ @ nothing array.jl:90
┌ Warning: Deprecated syntax `parametric method syntax sum{T <: Real, N}(a::AFArray{T, N})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:91.
│ Use `sum(a::AFArray{T, N}) where {T <: Real, N}` instead.
└ @ nothing array.jl:91
┌ Warning: Deprecated syntax `parametric method syntax sum{T <: Complex, N}(a::AFArray{T, N})::T` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:92.
│ Use `sum(a::AFArray{T, N}) where {T <: Complex, N}` instead.
└ @ nothing array.jl:92
┌ Warning: Deprecated syntax `parametric method syntax real{T <: Real}(a::AFArray{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:93.
│ Use `real(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:93
┌ Warning: Deprecated syntax `parametric method syntax imag{T <: Real}(a::AFArray{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:94.
│ Use `imag(a::AFArray{T}) where T <: Real` instead.
└ @ nothing array.jl:94
┌ Warning: Deprecated syntax `parametric method syntax -{T}(a::AFArray{T})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:99.
│ Use `-(a::AFArray{T}) where T` instead.
└ @ nothing array.jl:99
┌ Warning: Deprecated syntax `parametric method syntax sign{T, N}(a::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:178.
│ Use `sign(a::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:178
┌ Warning: Deprecated syntax `parametric method syntax At_mul_B{T1, T2}(a::AFVector{T1}, b::AFArray{T2})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:181.
│ Use `At_mul_B(a::AFVector{T1}, b::AFArray{T2}) where {T1, T2}` instead.
└ @ nothing array.jl:181
┌ Warning: Deprecated syntax `parametric method syntax A_mul_B{T1, T2}(a::AFMatrix{T1}, b::AFVector{T2})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:188.
│ Use `A_mul_B(a::AFMatrix{T1}, b::AFVector{T2}) where {T1, T2}` instead.
└ @ nothing array.jl:188
┌ Warning: Deprecated syntax `parametric method syntax transpose{T, N}(_in::AFArray{T, N}, conjugate::Bool = false)` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:195.
│ Use `transpose(_in::AFArray{T, N}, conjugate::Bool = false) where {T, N}` instead.
└ @ nothing array.jl:195
┌ Warning: Deprecated syntax `parametric method syntax vec{T, N}(_in::AFArray{T, N})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:202.
│ Use `vec(_in::AFArray{T, N}) where {T, N}` instead.
└ @ nothing array.jl:202
┌ Warning: Deprecated syntax `parametric method syntax reshape{T, N}(_in::AFArray{T}, dims::NTuple{N, Int})` around /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:208.
│ Use `reshape(_in::AFArray{T}, dims::NTuple{N, Int}) where {T, N}` instead.
└ @ nothing array.jl:208
ERROR: LoadError: SpecialFunctions is not properly installed. Please run Pkg.build("SpecialFunctions") and restart Julia.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/vagrant/.julia/v0.7/SpecialFunctions/src/SpecialFunctions.jl:11
 [3] include at ./boot.jl:292 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1011
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] top-level scope
 [7] eval at ./boot.jl:295 [inlined]
 [8] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/src/SpecialFunctions.jl:11
ERROR: LoadError: LoadError: Failed to precompile SpecialFunctions to /home/vagrant/.julia/lib/v0.7/SpecialFunctions.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] top-level scope at /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:285
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1011
 [8] include at ./sysimg.jl:26 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/ArrayFire/src/ArrayFire.jl:2
 [10] top-level scope
 [11] include at ./boot.jl:292 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1011
 [13] include(::Module, ::String) at ./sysimg.jl:26
 [14] top-level scope
 [15] eval at ./boot.jl:295 [inlined]
 [16] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/ArrayFire/src/array.jl:285
in expression starting at /home/vagrant/.julia/v0.7/ArrayFire/src/ArrayFire.jl:5
ERROR: LoadError: Failed to precompile ArrayFire to /home/vagrant/.julia/lib/v0.7/ArrayFire.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/ArrayFire/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for ArrayFire
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ArrayFire/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: ArrayFire had test errors

>>> End of log
