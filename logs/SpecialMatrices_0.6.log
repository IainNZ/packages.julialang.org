>>> 'Pkg.add("SpecialMatrices")' log
INFO: Cloning cache of SpecialMatrices from https://github.com/jiahao/SpecialMatrices.jl.git
INFO: Installing SpecialMatrices v0.1.3
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of SpecialMatrices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SpecialMatrices")' log
Julia Version 0.6.0-pre.beta.314
Commit 7cd0324 (2017-04-24 22:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (774.20703125 MB free)
Uptime: 60820.0 sec
Load Avg:  1.0234375  1.0361328125  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3782016 s       6248 s     154611 s    1161752 s         44 s
#2  3500 MHz     618871 s        100 s      73425 s    5312697 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.9.1
 - SpecialMatrices               0.1.3
1 additional packages:
 - Compat                        0.24.0
INFO: Testing SpecialMatrices
WARNING: Method definition (::Type{SpecialMatrices.Hankel{T} where T})(Array{T, 1}) in module SpecialMatrices at /home/vagrant/.julia/v0.6/SpecialMatrices/src/hankel.jl:4 overwritten at /home/vagrant/.julia/v0.6/SpecialMatrices/src/hankel.jl:6.
WARNING: @test_approx_eq is deprecated, use `@test full(inv(Z)) ≈ inv(full(Z))` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/companion.jl, in expression starting on line 5
WARNING: @test_approx_eq is deprecated, use `@test Z * b ≈ full(Z) * b` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/companion.jl, in expression starting on line 9
WARNING: @test_approx_eq is deprecated, use `@test A * Z ≈ A * full(Z)` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq(::ANY, ::ANY) at ./deprecated.jl:1044
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/companion.jl, in expression starting on line 13
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] A_mul_B!(::Array{Float64,2}, ::SpecialMatrices.Companion{Float64}) at /home/vagrant/.julia/v0.6/SpecialMatrices/src/companion.jl:40
 [4] *(::Array{Float64,2}, ::SpecialMatrices.Companion{Float64}) at /home/vagrant/.julia/v0.6/SpecialMatrices/src/companion.jl:50
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/companion.jl, in expression starting on line 13
ERROR: LoadError: LoadError: DimensionMismatch("Cannot multiply two vectors")
Stacktrace:
 [1] A_mul_B!(::Array{Float64,2}, ::SpecialMatrices.Companion{Float64}) at /home/vagrant/.julia/v0.6/SpecialMatrices/src/companion.jl:42
 [2] *(::Array{Float64,2}, ::SpecialMatrices.Companion{Float64}) at /home/vagrant/.julia/v0.6/SpecialMatrices/src/companion.jl:50
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/companion.jl, in expression starting on line 13
while loading /home/vagrant/.julia/v0.6/SpecialMatrices/test/runtests.jl, in expression starting on line 4
===========================[ ERROR: SpecialMatrices ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SpecialMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SpecialMatrices had test errors

>>> End of log
