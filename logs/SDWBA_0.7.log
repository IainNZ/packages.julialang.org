>>> 'Pkg.add("SDWBA")' log
[ Info: Cloning cache of Docile from https://github.com/MichaelHatherly/Docile.jl.git
[ Info: Cloning cache of Lexicon from https://github.com/MichaelHatherly/Lexicon.jl.git
[ Info: Cloning cache of SDWBA from https://github.com/ElOceanografo/SDWBA.jl.git
[ Info: Installing Docile v0.5.23
[ Info: Installing Lexicon v0.1.18
[ Info: Installing SDWBA v0.0.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of SDWBA
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SDWBA")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2412756 s         88 s     124284 s     620585 s         21 s
       #2  3499 MHz     505673 s       7447 s      47809 s    3103136 s          0 s
       
  Memory: 2.93927001953125 GB (721.9453125 MB free)
  Uptime: 37203.0 sec
  Load Avg:  0.8544921875  0.94482421875  0.9453125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - SDWBA                         0.0.2
5 additional packages:
 - Compat                        0.49.0
 - Docile                        0.5.23
 - Lexicon                       0.1.18
 - Nullables                     0.0.3
 - tmpJpLd7f                     0.0.0-             non-repo (unregistered)
[ Info: Testing SDWBA
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:20.
│ Use `mutable struct` instead.
└ @ nothing Scatterer.jl:20
┌ Warning: Deprecated syntax `[0, cumsum(vec(sqrt(sum(.^(diff(s.r, 2), 2), 1)))); ]` at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:118.
│ Use `[0; cumsum(vec(sqrt(sum(.^(diff(s.r, 2), 2), 1))))]` instead.
└ @ nothing Scatterer.jl:118
┌ Warning: Deprecated syntax `parametric method syntax backscatter_xsection{T}(s::Scatterer{T}, k::Vector{T}, phase_sd = 0)` around /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:211.
│ Use `backscatter_xsection(s::Scatterer{T}, k::Vector{T}, phase_sd = 0) where T` instead.
└ @ nothing Scatterer.jl:211
┌ Warning: Deprecated syntax `parametric method syntax target_strength{T}(s::Scatterer{T}, k::Vector{T}, phase_sd = 0)` around /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:221.
│ Use `target_strength(s::Scatterer{T}, k::Vector{T}, phase_sd = 0) where T` instead.
└ @ nothing Scatterer.jl:221
WARNING: importing deprecated binding Base.readdlm into SDWBA.
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
WARNING: Base.readdlm is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add a `using DelimitedFiles` to your imports..
  likely near /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
in from_csv at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl
ERROR: LoadError: LoadError: LoadError: MethodError: no method matching SDWBA.Scatterer(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1})
Closest candidates are:
  SDWBA.Scatterer(!Matched::Array{T,2}, ::Array{T,1}, ::Array{T,1}, ::Array{T,1}) where T at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:21
  SDWBA.Scatterer(!Matched::Array, ::Array, ::Array, ::Array) at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:28
  SDWBA.Scatterer(!Matched::Array{T,2} where T, ::Array{T,1} where T, !Matched::Real, !Matched::Real) at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:37
Stacktrace:
 [1] from_csv(::String, ::Dict{String,String}) at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:307
 [2] from_csv(::String) at /home/vagrant/.julia/v0.7/SDWBA/src/Scatterer.jl:299
 [3] top-level scope
 [4] include at ./boot.jl:292 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1012
 [6] include at ./sysimg.jl:26 [inlined]
 [7] include(::String) at /home/vagrant/.julia/v0.7/SDWBA/src/SDWBA.jl:1
 [8] top-level scope
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1012
 [11] _require(::Base.PkgId) at ./loading.jl:939
 [12] require(::Module, ::Symbol) at ./loading.jl:820
 [13] include at ./boot.jl:292 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:1012
 [15] include(::Module, ::String) at ./sysimg.jl:26
 [16] process_options(::Base.JLOptions) at ./client.jl:334
 [17] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/SDWBA/src/Models.jl:19
in expression starting at /home/vagrant/.julia/v0.7/SDWBA/src/SDWBA.jl:22
in expression starting at /home/vagrant/.julia/v0.7/SDWBA/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for SDWBA
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/SDWBA/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: SDWBA had test errors

>>> End of log
