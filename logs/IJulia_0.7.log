>>> 'Pkg.add("IJulia")' log
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Conda v0.7.1                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IJulia v1.6.2                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MbedTLS v0.5.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ZMQ v0.5.1                      @ Base.Pkg.Entry entry.jl:543
[ Info: Building Conda                                            @ Main none:10
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└                                                                      @ Core :0
[ Info: Building MbedTLS                                          @ Main none:10
Using system libraries...
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MbedTLS/deps/build.jl:45
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building ZMQ                                              @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/ZMQ/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/ZMQ/deps/build.jl:36
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = validate(::String, ::Ptr{Nothing}) at build.jl:9
└                                                     @ Main.__anon__ build.jl:9
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = validate(::String, ::Ptr{Nothing}) at build.jl:10
└                                                    @ Main.__anon__ build.jl:10
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = validate(::String, ::Ptr{Nothing}) at build.jl:11
└                                                    @ Main.__anon__ build.jl:11
[ Info: Building IJulia                                           @ Main none:10
[ Warning: Replacing module `Compat`                       @ Base loading.jl:350
[ Warning: Replacing module `URIParser`                    @ Base loading.jl:350
[ Warning: Replacing module `SHA`                          @ Base loading.jl:350
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:29
└                                                             @ Core build.jl:29
INFO: jupyter was too old: got 0.0.0, required ≥ 3.0
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:30
└                                                             @ Core build.jl:30
INFO: Installing Jupyter via the Conda package.
Solving environment: ...working... done

# All requested packages already installed.

┌ Warning: `convert(::Type{VersionNumber}, v::AbstractString)` is deprecated, use `VersionNumber(v)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#prog_version#1")))(::String) at build.jl:16
└                                                    @ Main.__anon__ build.jl:16
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:38
└                                                             @ Core build.jl:38
INFO: Found Jupyter version 4.4.0: /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/jupyter
WARNING: importing deprecated binding Base.lowercase into __anon__.
┌ Error: ------------------------------------------------------------
│ # Build failed for IJulia
│   exception =
│    LoadError: Base.lowercase has been moved to the standard library package Unicode.
│    Restart Julia and then run `using Unicode` to load it.
│    Stacktrace:
│     [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
│     [2] #lowercase#917 at ./deprecated.jl:138 [inlined]
│     [3] lowercase at ./deprecated.jl:138 [inlined]
│     [4] installkernel(::String) at /home/vagrant/.julia/v0.7/IJulia/deps/kspec.jl:36
│     [5] top-level scope at /home/vagrant/.julia/v0.7/IJulia/deps/build.jl:74
│     [6] include at ./boot.jl:293 [inlined]
│     [7] include_relative(::Module, ::String) at ./loading.jl:521
│     [8] include at ./sysimg.jl:26 [inlined]
│     [9] include(::String) at ./loading.jl:555
│     [10] top-level scope
│     [11] eval at ./boot.jl:296 [inlined]
│     [12] eval at ./sysimg.jl:71 [inlined]
│     [13] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [14] #2 at ./none:12 [inlined]
│     [15] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [16] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [17] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [18] top-level scope
│     [19] eval at ./boot.jl:296 [inlined]
│     [20] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [21] process_options(::Base.JLOptions) at ./client.jl:301
│     [22] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/IJulia/deps/build.jl:103
└                                                                 @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ IJulia had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("IJulia")`
│  - build a single package by running its `deps/build.jl` script
└                                                  @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of IJulia
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("IJulia")' log
Package was unable to be tested.

>>> End of log
