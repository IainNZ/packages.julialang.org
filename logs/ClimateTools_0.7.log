>>> 'Pkg.add("ClimateTools")' log
[ Info: Cloning cache of ClimateTools from https://github.com/Balinus/ClimateTools.jl.git
[ Info: Cloning cache of GeoInterface from https://github.com/JuliaGeo/GeoInterface.jl.git
[ Info: Cloning cache of NetCDF from https://github.com/JuliaGeo/NetCDF.jl.git
[ Info: Cloning cache of Shapefile from https://github.com/JuliaGeo/Shapefile.jl.git
[ Info: Installing ArgCheck v0.4.2
[ Info: Installing AxisAlgorithms v0.2.0
[ Info: Installing AxisArrays v0.2.0
[ Info: Installing BinDeps v0.8.5
[ Info: Installing Calculus v0.2.2
[ Info: Installing ClimateTools v0.3.0
[ Info: Installing ColorTypes v0.6.6
[ Info: Installing Colors v0.8.2
[ Info: Installing Conda v0.7.1
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing FixedPointNumbers v0.4.3
[ Info: Installing Formatting v0.3.0
[ Info: Installing GeoInterface v0.3.0
[ Info: Installing Interpolations v0.7.3
[ Info: Installing IntervalSets v0.1.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing LaTeXStrings v0.3.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing NetCDF v0.6.0
[ Info: Installing PyCall v1.15.0
[ Info: Installing PyPlot v2.3.2
[ Info: Installing RangeArrays v0.2.0
[ Info: Installing Ratios v0.2.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing SHA v0.5.3
[ Info: Installing Shapefile v0.3.0
[ Info: Installing ShowItLikeYouBuildIt v0.2.0
[ Info: Installing URIParser v0.3.0
[ Info: Installing WoodburyMatrices v0.2.2
[ Info: Building Conda
┌ Error: ------------------------------------------------------------
│ # Build failed for Conda
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Conda/deps/build.jl:1
└ @ Main none:15
[ Info: Building NetCDF
┌ Error: ------------------------------------------------------------
│ # Build failed for NetCDF
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/NetCDF/deps/build.jl:1
└ @ Main none:15
[ Info: Building PyCall
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:11.
│ Use `struct` instead.
└ @ nothing build.jl:11
┌ Error: ------------------------------------------------------------
│ # Build failed for PyCall
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:8
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ Conda, NetCDF and PyCall had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("Conda", "NetCDF", "PyCall")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("ClimateTools")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1450092 s         98 s      77624 s     325318 s         11 s
       #2  3499 MHz     255625 s       8060 s      27192 s    1870605 s          0 s
       
  Memory: 2.93927001953125 GB (652.22265625 MB free)
  Uptime: 21914.0 sec
  Load Avg:  0.9970703125  1.0048828125  1.0400390625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ClimateTools                  0.3.0
 - JSON                          0.16.4
31 additional packages:
 - ArgCheck                      0.4.2
 - AxisAlgorithms                0.2.0
 - AxisArrays                    0.2.0
 - BinDeps                       0.8.5
 - Calculus                      0.2.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.48.0
 - Conda                         0.7.1
 - DualNumbers                   0.3.0
 - FixedPointNumbers             0.4.3
 - Formatting                    0.3.0
 - GeoInterface                  0.3.0
 - Interpolations                0.7.3
 - IntervalSets                  0.1.1
 - IterTools                     0.2.1
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - NaNMath                       0.3.0
 - NetCDF                        0.6.0
 - Nullables                     0.0.3
 - PyCall                        1.15.0
 - PyPlot                        2.3.2
 - RangeArrays                   0.2.0
 - Ratios                        0.2.0
 - Reexport                      0.1.0
 - SHA                           0.5.3
 - Shapefile                     0.3.0
 - ShowItLikeYouBuildIt          0.2.0
 - URIParser                     0.3.0
 - WoodburyMatrices              0.2.2
[ Info: Testing ClimateTools
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:60.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:60
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:113.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:113
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:177.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:177
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:60.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:60
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:113.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:113
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:177.
│ Use `mutable struct` instead.
└ @ nothing NetCDF.jl:177
┌ Warning: Deprecated syntax `parametric method syntax format{T <: Real}(x::T,; width::Int = -1, precision::Int = -1, leftjustified::Bool = false, zeropadding::Bool = false, commas::Bool = false, signed::Bool = false, positivespace::Bool = false, stripzeros::Bool = ==(precision, -1), parens::Bool = false, alternative::Bool = false, mixedfraction::Bool = false, mixedfractionsep::AbstractString = "_", fractionsep::AbstractString = "/", fractionwidth::Int = 0, tryden::Int = 0, suffix::AbstractString = "", autoscale::Symbol = :none, conversion::String = "")` around /home/vagrant/.julia/v0.7/Formatting/src/cformat.jl:146.
│ Use `format(x::T,; width::Int = -1, precision::Int = -1, leftjustified::Bool = false, zeropadding::Bool = false, commas::Bool = false, signed::Bool = false, positivespace::Bool = false, stripzeros::Bool = ==(precision, -1), parens::Bool = false, alternative::Bool = false, mixedfraction::Bool = false, mixedfractionsep::AbstractString = "_", fractionsep::AbstractString = "/", fractionwidth::Int = 0, tryden::Int = 0, suffix::AbstractString = "", autoscale::Symbol = :none, conversion::String = "") where T <: Real` instead.
└ @ nothing cformat.jl:146
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:29.
│ Use `struct` instead.
└ @ nothing fmtspec.jl:29
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:161.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:161
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:162.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:162
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:163.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:163
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:164.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:164
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:165.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:165
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_int{Op}(out::IO, sch::Char, ip::String, zs::Integer, ax::Integer, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:72.
│ Use `_pfmt_int(out::IO, sch::Char, ip::String, zs::Integer, ax::Integer, op::Op) where Op` instead.
└ @ nothing fmtcore.jl:72
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_intdigits{Op, T <: Integer}(out::IO, ax::T, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:92.
│ Use `_pfmt_intdigits(out::IO, ax::T, op::Op) where {Op, T <: Integer}` instead.
└ @ nothing fmtcore.jl:92
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_i{Op}(out::IO, fs::FormatSpec, x::Integer, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:107.
│ Use `_pfmt_i(out::IO, fs::FormatSpec, x::Integer, op::Op) where Op` instead.
└ @ nothing fmtcore.jl:107
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:5.
│ Use `struct` instead.
└ @ nothing formatexpr.jl:5
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:58.
│ Use `struct` instead.
└ @ nothing formatexpr.jl:58
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:80.
│ Use `mutable struct` instead.
└ @ nothing formatexpr.jl:80
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NetCDF/src/netcdf_c.jl:188.
│ Use `mutable struct` instead.
└ @ nothing netcdf_c.jl:188
ERROR: LoadError: LoadError: libnetcdf not properly installed. Please run Pkg.build("NetCDF")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/vagrant/.julia/v0.7/NetCDF/src/netcdf_c.jl:7
 [3] include at ./boot.jl:292 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1011
 [5] include at ./sysimg.jl:26 [inlined]
 [6] include(::String) at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:3
 [7] top-level scope
 [8] include at ./boot.jl:292 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:1011
 [10] include(::Module, ::String) at ./sysimg.jl:26
 [11] top-level scope
 [12] eval at ./boot.jl:295 [inlined]
 [13] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/NetCDF/src/netcdf_c.jl:7
in expression starting at /home/vagrant/.julia/v0.7/NetCDF/src/NetCDF.jl:8
ERROR: LoadError: LoadError: Failed to precompile NetCDF to /home/vagrant/.julia/lib/v0.7/NetCDF.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] _require(::Base.PkgId) at ./loading.jl:938
 [8] require(::Module, ::Symbol) at ./loading.jl:819
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1011
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] process_options(::Base.JLOptions) at ./client.jl:324
 [13] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/ClimateTools/src/ClimateTools.jl:4
in expression starting at /home/vagrant/.julia/v0.7/ClimateTools/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for ClimateTools
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ClimateTools/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: ClimateTools had test errors

>>> End of log
