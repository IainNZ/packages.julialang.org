>>> 'Pkg.add("ReverseDiffOverload")' log
INFO: Cloning cache of ReverseDiffOverload from git://github.com/LaurenceA/ReverseDiffOverload.jl.git
INFO: Installing ArrayViews v0.4.6
INFO: Installing Calculus v0.1.5
INFO: Installing Distributions v0.5.4
INFO: Installing PDMats v0.2.4
INFO: Installing ReverseDiffOverload v0.0.1
INFO: Installing StatsBase v0.6.5
INFO: Package database updated
INFO: METADATA is out-of-date a you may not have the latest version of ReverseDiffOverload
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'using ReverseDiffOverload' log
Julia Version 0.3.1
Commit c03f413* (2014-09-21 21:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log
dot(v1, x)
dot(x, y)
x+y
dot(v1, x+y)
dot(v1, x+y)
x+(-y)
x-y
dot(v1, x-y)
dot(v1, x-y)
dot(v1, -x)
x*y
dot(v1, x'*y)
sum(x*y)
dot(v1, x*y)
dot(v1, x*y)
dot(v1, x y)
dot(v1, vec(x/y))
x+x*x*exp(x)
x .^ y
x .^ y
dot(v1, x .* y)
dot(v1, x .^ y)
first(y'*x*y)
det(x)
trace(x)
det(inv(x))
sum(x)
dot([1.1, 2.1], vec(x))
dot(v1, exp(x))
dot(v1, sin(x))
dot(v1, cos(x))

>>> end of log
