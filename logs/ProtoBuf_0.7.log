>>> 'Pkg.add("ProtoBuf")' log
[ Info: Installing ProtoBuf v0.5.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ProtoBuf
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ProtoBuf")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1015434 s         50 s      58182 s     424027 s         10 s
       #2  3499 MHz     186589 s         91 s      24363 s    1492291 s          0 s
       
  Memory: 2.93927001953125 GB (1006.875 MB free)
  Uptime: 17336.0 sec
  Load Avg:  0.98779296875  0.9658203125  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - ProtoBuf                      0.5.0
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for ProtoBuf...
[ Info: No packages to install, update or remove
[ Info: Testing ProtoBuf
┌ Warning: Deprecated syntax `call to `*` inside call to bitshift operator` at /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:180.
│ Use `parenthesized call to `*`` instead.
└ @ nothing codec.jl:180
WARNING: importing deprecated binding Base.ObjectIdDict into ProtoBuf.
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:529
WARNING: Base.ObjectIdDict is deprecated, use IdDict{Any, Any} instead.
  likely near /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:530
┌ Warning: Deprecated syntax `[0, 0, 0, 0, 0, 0, 0, false, "", nothing, nothing, UInt8[], 0, 0, 0, 0, 0, 0; ]` at /home/vagrant/.julia/v0.7/ProtoBuf/src/gen.jl:14.
│ Use `[0; 0; 0; 0; 0; 0; 0; false; ""; nothing; nothing; UInt8[]; 0; 0; 0; 0; 0; 0]` instead.
└ @ nothing gen.jl:14
testing serialization across type versions...
WARNING: importing deprecated binding Base.Nullable into ProtoBuf.
┌ Warning: `issubtype` is deprecated, use `<:` instead.
│   caller = meta(::Type, ::Array{Symbol,1}, ::Array{Int64,1}, ::Dict{Symbol,Any}, ::Bool, ::Array{Symbol,1}, ::Dict{Symbol,Symbol}, ::Array{Int64,1}, ::Array{Symbol,1}, ::Dict{Symbol,String}) at codec.jl:566
└ @ ProtoBuf codec.jl:566
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::V1, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::V1) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::V1) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::V1) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::V1, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::V1, ::ProtoMeta) at codec.jl:513
└ @ ProtoBuf codec.jl:513
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::V2, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::V2) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::V2) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::V2) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::V2, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::V2, ::ProtoMeta) at codec.jl:513
└ @ ProtoBuf codec.jl:513
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::V1) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::V2) at codec.jl:655
└ @ ProtoBuf codec.jl:655
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ProtoBuf/test/testutilapi.jl:4
testing utility api methods...
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::Main.ProtoBufTestApis.TestType) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::Main.ProtoBufTestApis.TestType) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::Main.ProtoBufTestApis.TestType) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::Main.ProtoBufTestApis.TestType, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::Main.ProtoBufTestApis.TestType, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ProtoBuf/test/testwellknown.jl:4
testing ProtoBuf.google.protobuf.ListValue...
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::Main.ProtoBufTestApis.TestType) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Value) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Value) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `convert(::Type{Symbol}, s::AbstractString)` is deprecated, use `Symbol(s)` instead.
│   caller = Type at codec.jl:210 [inlined]
└ @ Core codec.jl:210
┌ Warning: `issubtype` is deprecated, use `<:` instead.
│   caller = mapentry_meta(::Type{Dict{AbstractString,Any}}) at codec.jl:589
└ @ ProtoBuf codec.jl:589
┌ Warning: `convert(::Type{Symbol}, s::AbstractString)` is deprecated, use `Symbol(s)` instead.
│   caller = Type at codec.jl:210 [inlined]
└ @ Core codec.jl:210
┌ Warning: `convert(::Type{Symbol}, s::AbstractString)` is deprecated, use `Symbol(s)` instead.
│   caller = Type at codec.jl:210 [inlined]
└ @ Core codec.jl:210
┌ Warning: `issubtype` is deprecated, use `<:` instead.
│   caller = mapentry_meta(::Type{Dict{AbstractString,ProtoBuf.google.protobuf.Value}}) at codec.jl:589
└ @ ProtoBuf codec.jl:589
┌ Warning: `convert(::Type{Symbol}, s::AbstractString)` is deprecated, use `Symbol(s)` instead.
│   caller = Type at codec.jl:210 [inlined]
└ @ Core codec.jl:210
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Value) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::ProtoBuf.google.protobuf.Value, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::ProtoBuf.google.protobuf.ListValue) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.ListValue) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.ListValue) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::ProtoBuf.google.protobuf.ListValue, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::ProtoBuf.google.protobuf.ListValue, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::ProtoBuf.google.protobuf.Value, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = write_string(::Base.GenericIOBuffer{Array{UInt8,1}}, ::String) at codec.jl:201
└ @ ProtoBuf codec.jl:201
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(uninitialized, m)` instead.
│   caller = read_bytes(::Base.GenericIOBuffer{Array{UInt8,1}}) at codec.jl:194
└ @ ProtoBuf codec.jl:194
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::ProtoBuf.google.protobuf.Value, ::ProtoMeta) at codec.jl:513
└ @ ProtoBuf codec.jl:513
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::ProtoBuf.google.protobuf.ListValue, ::ProtoMeta) at codec.jl:513
└ @ ProtoBuf codec.jl:513
testing ProtoBuf.google.protobuf.Struct...
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Struct) at codec.jl:641
└ @ ProtoBuf codec.jl:641
┌ Warning: `BitArray(dims::Integer...)` is deprecated, use `BitArray(uninitialized, dims)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Struct) at codec.jl:645
└ @ ProtoBuf codec.jl:645
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = filled(::ProtoBuf.google.protobuf.Struct) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _fillset(::ProtoBuf.google.protobuf.Struct, ::Symbol, ::Bool, ::Bool) at codec.jl:633
└ @ ProtoBuf codec.jl:633
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = _isfilled(::ProtoBuf.google.protobuf.Struct, ::Symbol, ::Bool) at codec.jl:664
└ @ ProtoBuf codec.jl:664
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::ProtoBuf.google.protobuf.Value) at codec.jl:655
└ @ ProtoBuf codec.jl:655
┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::ProtoBuf.google.protobuf.ListValue) at codec.jl:655
└ @ ProtoBuf codec.jl:655
ERROR: ┌ Warning: `object_id` is deprecated, use `objectid` instead.
│   caller = (::getfield(ProtoBuf, Symbol("##1#2")))(::ProtoBuf.google.protobuf.Struct) at codec.jl:655
└ @ ProtoBuf codec.jl:655
LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] read_map(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Dict{AbstractString,ProtoBuf.google.protobuf.Value}) at /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:412
 [2] read_field(::Base.GenericIOBuffer{Array{UInt8,1}}, ::ProtoBuf.google.protobuf.Struct, ::ProtoMetaAttribs, ::UInt64, ::Nothing) at /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:473
 [3] readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::ProtoBuf.google.protobuf.Struct, ::ProtoMeta) at /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:498
 [4] readproto(::Base.GenericIOBuffer{Array{UInt8,1}}, ::ProtoBuf.google.protobuf.Struct) at /home/vagrant/.julia/v0.7/ProtoBuf/src/codec.jl:482
 [5] test_struct() at /home/vagrant/.julia/v0.7/ProtoBuf/test/testwellknown.jl:37
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1012
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] include(::String) at ./sysimg.jl:65
 [11] top-level scope
 [12] include at ./boot.jl:292 [inlined]
 [13] include_relative(::Module, ::String) at ./loading.jl:1012
 [14] include(::Module, ::String) at ./sysimg.jl:26
 [15] process_options(::Base.JLOptions) at ./client.jl:334
 [16] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/ProtoBuf/test/testwellknown.jl:72
in expression starting at /home/vagrant/.julia/v0.7/ProtoBuf/test/runtests.jl:3
┌ Error: ------------------------------------------------------------
│ # Testing failed for ProtoBuf
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ProtoBuf/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: No packages to install, update or remove
ERROR: ProtoBuf had test errors

>>> End of log
