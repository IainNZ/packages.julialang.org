>>> 'Pkg.add("Diana")' log
┌ Info: Cloning cache of Diana from https://github.com/codeneomatrix/Diana.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing BufferedStreams v0.3.3          @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Codecs v0.4.0                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Diana v0.0.2                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing HttpCommon v0.3.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing HttpParser v0.3.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Libz v0.2.4                     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MbedTLS v0.5.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requests v0.5.1                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building HttpParser                                       @ Main none:10
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└                                                                      @ Core :0
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope
└                                                                      @ Core :0
┌ Error: ------------------------------------------------------------
│ # Build failed for HttpParser
│   exception =
│    LoadError: TypeError: in Type{...} expression, expected UnionAll, got Type{BinDeps.MakeTargets}
│    Stacktrace:
│     [1] (::getfield(BinDeps, Symbol("##MakeTargets#2#6")))(::Dict{String,String}, ::Type, ::Array{String,1}) at /home/vagrant/.julia/v0.7/BinDeps/src/BinDeps.jl:182
│     [2] (::getfield(Core, Symbol("#kw#Type")))(::NamedTuple{(:env,),Tuple{Dict{String,String}}}, ::Type{BinDeps.MakeTargets}, ::Array{String,1}) at ./<missing>:0
│     [3] macro expansion at /home/vagrant/.julia/v0.7/BinDeps/src/BinDeps.jl:274 [inlined]
│     [4] top-level scope at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:43
│     [5] include at ./boot.jl:293 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:521
│     [7] include at ./sysimg.jl:26 [inlined]
│     [8] include(::String) at ./loading.jl:555
│     [9] top-level scope
│     [10] eval at ./boot.jl:296 [inlined]
│     [11] eval at ./sysimg.jl:71 [inlined]
│     [12] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [13] #2 at ./none:12 [inlined]
│     [14] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [15] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [16] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [17] top-level scope
│     [18] eval at ./boot.jl:296 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [20] process_options(::Base.JLOptions) at ./client.jl:301
│     [21] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/HttpParser/deps/build.jl:274
└                                                                 @ Main none:15
[ Info: Building MbedTLS                                          @ Main none:10
Using system libraries...
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/MbedTLS/deps/build.jl:45
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
ERROR: KeyError: key :BinDeps not found
getindex at ./abstractdict.jl:491 [inlined]
root_module(::Symbol) at ./loading.jl:375
deserialize_module(::SerializationState{IOStream}) at ./serialize.jl:840
handle_deserialize(::SerializationState{IOStream}, ::Int32) at ./serialize.jl:775
deserialize(::SerializationState{IOStream}) at ./serialize.jl:714
deserialize_datatype(::SerializationState{IOStream}, ::Bool) at ./serialize.jl:1061
handle_deserialize(::SerializationState{IOStream}, ::Int32) at ./serialize.jl:754
deserialize(::SerializationState{IOStream}, ::DataType) at ./serialize.jl:1168
handle_deserialize(::SerializationState{IOStream}, ::Int32) at ./serialize.jl:762
deserialize(::SerializationState{IOStream}, ::DataType) at ./serialize.jl:1168
handle_deserialize(::SerializationState{IOStream}, ::Int32) at ./serialize.jl:762
deserialize(::SerializationState{IOStream}) at ./serialize.jl:714
handle_deserialize(::SerializationState{IOStream}, ::Int32) at ./serialize.jl:801
deserialize at ./serialize.jl:714 [inlined]
deserialize(::IOStream) at ./serialize.jl:711
(::getfield(Base.Pkg.Entry, Symbol("##82#83")){Dict{Any,Any}})(::IOStream) at ./pkg/entry.jl:643
open(::getfield(Base.Pkg.Entry, Symbol("##82#83")){Dict{Any,Any}}, ::String, ::String) at ./iostream.jl:310
build!(::Array{String,1}, ::Dict{Any,Any}, ::Set{Any}) at ./pkg/entry.jl:640
build! at ./pkg/entry.jl:636 [inlined]
build(::Array{String,1}) at ./pkg/entry.jl:654
resolve(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Base.Pkg.Types.Fixed}, ::Dict{String,VersionNumber}, ::Set{String}) at ./pkg/entry.jl:579
resolve at ./pkg/entry.jl:486 [inlined] (repeats 4 times)
edit(::Function, ::String, ::Base.Pkg.Types.VersionSet, ::Vararg{Base.Pkg.Types.VersionSet,N} where N) at ./pkg/entry.jl:30
(::getfield(Base.Pkg.Entry, Symbol("##4#6")){String,Base.Pkg.Types.VersionSet})() at ./task.jl:348
Stacktrace:
 [1] sync_end() at ./task.jl:300
 [2] macro expansion at ./task.jl:316 [inlined]
 [3] add(::String, ::Base.Pkg.Types.VersionSet) at ./pkg/entry.jl:51
 [4] add at ./pkg/entry.jl:80 [inlined]
 [5] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Base.Pkg.Entry.add),Tuple{String}})() at ./pkg/dir.jl:36
 [6] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(Base.Pkg.Entry.add),Tuple{String}}, ::String) at ./file.jl:70
 [7] #cd#1(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/dir.jl:36
 [8] cd at ./pkg/dir.jl:25 [inlined]
 [9] add(::String) at ./pkg/pkg.jl:115
 [10] top-level scope

>>> 'Pkg.test("Diana")' log
Julia Version 0.7.0-DEV.3351
Commit 09f7213c94 (2018-01-09 01:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3125518 s        112 s     165353 s     872828 s         29 s
       #2  3499 MHz     701145 s       6431 s      67145 s    4036161 s          0 s
       
  Memory: 2.93927001953125 GB (799.5234375 MB free)
  Uptime: 48997.0 sec
  Load Avg:  0.994140625  1.0  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
1 required packages:
 - JSON                          0.16.3
13 additional packages:
 - BinDeps                       0.8.2
 - BufferedStreams               0.3.3
 - Codecs                        0.4.0
 - Compat                        0.43.0
 - Diana                         0.0.2
 - HttpCommon                    0.3.0
 - HttpParser                    0.3.0
 - Libz                          0.2.4
 - MbedTLS                       0.5.3
 - Nullables                     0.0.2
 - Requests                      0.5.1
 - SHA                           0.5.2
 - URIParser                     0.3.0
[ Info: Testing Diana                              @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Requests/src/Requests.jl:38.
│ Use `mutable struct` instead.
└                                                       @ nothing Requests.jl:38
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Requests/src/Requests.jl:280.
│ Use `struct` instead.
└                                                      @ nothing Requests.jl:280
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Requests/src/Requests.jl:38.
│ Use `mutable struct` instead.
└                                                       @ nothing Requests.jl:38
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Requests/src/Requests.jl:280.
│ Use `struct` instead.
└                                                      @ nothing Requests.jl:280
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HttpCommon/src/HttpCommon.jl:35.
│ Use `mutable struct` instead.
└                                                     @ nothing HttpCommon.jl:35
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HttpCommon/src/HttpCommon.jl:55.
│ Use `mutable struct` instead.
└                                                     @ nothing HttpCommon.jl:55
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/HttpCommon/src/HttpCommon.jl:80.
│ Use `mutable struct` instead.
└                                                     @ nothing HttpCommon.jl:80
WARNING: importing deprecated binding Base.Nullable into HttpCommon.
ERROR: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:293 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include(::Module, ::String) at ./sysimg.jl:26
 [5] top-level scope
 [6] eval at ./boot.jl:296 [inlined]
 [7] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/HttpCommon/src/HttpCommon.jl:65
ERROR: LoadError: Failed to precompile HttpCommon to /home/vagrant/.julia/lib/v0.7/HttpCommon.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:296 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Requests/src/Requests.jl:14
ERROR: LoadError: LoadError: Failed to precompile Requests to /home/vagrant/.julia/lib/v0.7/Requests.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:293 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Diana/src/Diana.jl:3
in expression starting at /home/vagrant/.julia/v0.7/Diana/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Diana
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Diana/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Diana had test errors

>>> End of log
