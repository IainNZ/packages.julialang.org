>>> 'Pkg.add("BlockArrays")' log
INFO: Cloning cache of BlockArrays from https://github.com/KristofferC/BlockArrays.jl.git
INFO: Installing BlockArrays v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of BlockArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BlockArrays")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing BlockArrays
WARNING: showcompact_lim is deprecated, use show instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in showcompact_lim(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #sprint#131(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Function, ::Int64, ::Function, ::Int64, ::Vararg{Int64,N}) at ./strings/io.jl:36
 in (::Base.#kw##sprint)(::Array{Any,1}, ::Base.#sprint, ::Int64, ::Function, ::Int64, ::Vararg{Int64,N}) at ./null:0
 in print_matrix_row(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::Array{Tuple{Int64,Int64},1}, ::Int64, ::UnitRange{Int64}, ::String) at /home/vagrant/.julia/v0.5/BlockArrays/src/show.jl:25
 in print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./show.jl:1321
 in print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::String, ::String, ::String) at ./show.jl:1293
 in showarray(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./show.jl:1500
 in writemime(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./replutil.jl:4
 in verbose_writemime(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./multimedia.jl:60
 in #sprint#131(::Void, ::Function, ::Int64, ::Function, ::MIME{Symbol("text/plain")}, ::Vararg{Any,N}) at ./strings/io.jl:38
 in stringmime(::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./multimedia.jl:75
 in replstrmime(::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at /home/vagrant/.julia/v0.5/BlockArrays/test/runtests.jl:106
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/BlockArrays/test/runtests.jl, in expression starting on line 107
WARNING: showcompact_lim is deprecated, use show instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in showcompact_lim(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #sprint#131(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Function, ::Int64, ::Function, ::Int64, ::Vararg{Int64,N}) at ./strings/io.jl:36
 in (::Base.#kw##sprint)(::Array{Any,1}, ::Base.#sprint, ::Int64, ::Function, ::Int64, ::Vararg{Int64,N}) at ./null:0
 in print_matrix_row(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::Array{Tuple{Int64,Int64},1}, ::Int64, ::UnitRange{Int64}, ::String) at /home/vagrant/.julia/v0.5/BlockArrays/src/show.jl:25
 in print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./show.jl:1321
 in print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}, ::String, ::String, ::String) at ./show.jl:1293
 in showarray(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./show.jl:1500
 in writemime(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./replutil.jl:4
 in verbose_writemime(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./multimedia.jl:60
 in #sprint#131(::Void, ::Function, ::Int64, ::Function, ::MIME{Symbol("text/plain")}, ::Vararg{Any,N}) at ./strings/io.jl:38
 in stringmime(::MIME{Symbol("text/plain")}, ::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at ./multimedia.jl:75
 in replstrmime(::BlockArrays.BlockArray{Int64,2,Array{Int64,2}}) at /home/vagrant/.julia/v0.5/BlockArrays/test/runtests.jl:106
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/BlockArrays/test/runtests.jl, in expression starting on line 107
BlockArrays.BlockArray{T,N,R} Float32 - OK!
BlockArrays.BlockArray{T,N,R} Float32 ~ Skipped no method!
BlockArrays.BlockArray{T,N,R} Float32 conj OK!
BlockArrays.BlockArray{T,N,R} Float32 abs OK!
BlockArrays.BlockArray{T,N,R} Float32 sin OK!
BlockArrays.BlockArray{T,N,R} Float32 cos OK!
BlockArrays.BlockArray{T,N,R} Float32 tan OK!
BlockArrays.BlockArray{T,N,R} Float32 sinh OK!
BlockArrays.BlockArray{T,N,R} Float32 cosh OK!
BlockArrays.BlockArray{T,N,R} Float32 tanh OK!
BlockArrays.BlockArray{T,N,R} Float32 asin OK!
BlockArrays.BlockArray{T,N,R} Float32 acos OK!
BlockArrays.BlockArray{T,N,R} Float32 atan OK!
BlockArrays.BlockArray{T,N,R} Float32 asinh OK!
BlockArrays.BlockArray{T,N,R} Float32 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 atanh OK!
BlockArrays.BlockArray{T,N,R} Float32 sec OK!
BlockArrays.BlockArray{T,N,R} Float32 csc OK!
BlockArrays.BlockArray{T,N,R} Float32 cot OK!
BlockArrays.BlockArray{T,N,R} Float32 asec Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 acsc Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 acot OK!
BlockArrays.BlockArray{T,N,R} Float32 sech OK!
BlockArrays.BlockArray{T,N,R} Float32 csch OK!
BlockArrays.BlockArray{T,N,R} Float32 coth OK!
BlockArrays.BlockArray{T,N,R} Float32 asech OK!
BlockArrays.BlockArray{T,N,R} Float32 acsch OK!
BlockArrays.BlockArray{T,N,R} Float32 acoth Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 sinc OK!
BlockArrays.BlockArray{T,N,R} Float32 cosc OK!
BlockArrays.BlockArray{T,N,R} Float32 cosd OK!
BlockArrays.BlockArray{T,N,R} Float32 cotd OK!
BlockArrays.BlockArray{T,N,R} Float32 cscd OK!
BlockArrays.BlockArray{T,N,R} Float32 secd OK!
BlockArrays.BlockArray{T,N,R} Float32 sind OK!
BlockArrays.BlockArray{T,N,R} Float32 tand OK!
BlockArrays.BlockArray{T,N,R} Float32 acosd OK!
BlockArrays.BlockArray{T,N,R} Float32 acotd OK!
BlockArrays.BlockArray{T,N,R} Float32 acscd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 asecd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 asind OK!
BlockArrays.BlockArray{T,N,R} Float32 atand OK!
BlockArrays.BlockArray{T,N,R} Float32 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Float32 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Float32 log OK!
BlockArrays.BlockArray{T,N,R} Float32 log2 OK!
BlockArrays.BlockArray{T,N,R} Float32 log10 OK!
BlockArrays.BlockArray{T,N,R} Float32 log1p OK!
BlockArrays.BlockArray{T,N,R} Float32 exponent OK!
BlockArrays.BlockArray{T,N,R} Float32 exp OK!
BlockArrays.BlockArray{T,N,R} Float32 exp2 OK!
BlockArrays.BlockArray{T,N,R} Float32 expm1 OK!
BlockArrays.BlockArray{T,N,R} Float32 cbrt OK!
BlockArrays.BlockArray{T,N,R} Float32 sqrt OK!
BlockArrays.BlockArray{T,N,R} Float32 erf OK!
BlockArrays.BlockArray{T,N,R} Float32 erfc OK!
BlockArrays.BlockArray{T,N,R} Float32 erfcx OK!
BlockArrays.BlockArray{T,N,R} Float32 erfi OK!
BlockArrays.BlockArray{T,N,R} Float32 dawson OK!
BlockArrays.BlockArray{T,N,R} Float32 ceil OK!
BlockArrays.BlockArray{T,N,R} Float32 floor OK!
BlockArrays.BlockArray{T,N,R} Float32 trunc OK!
BlockArrays.BlockArray{T,N,R} Float32 round OK!
BlockArrays.BlockArray{T,N,R} Float32 significand OK!
BlockArrays.BlockArray{T,N,R} Float32 maximum OK!
BlockArrays.BlockArray{T,N,R} Float32 minimum OK!
BlockArrays.BlockArray{T,N,R} Float32 sum OK!
BlockArrays.BlockArray{T,N,R} Float32 prod OK!
BlockArrays.BlockArray{T,N,R} Float32 .+ OK!
BlockArrays.BlockArray{T,N,R} Float32 .- OK!
BlockArrays.BlockArray{T,N,R} Float32 .* OK!
BlockArrays.BlockArray{T,N,R} Float32 ./ OK!
BlockArrays.BlockArray{T,N,R} Float32 .\ OK!
BlockArrays.BlockArray{T,N,R} Float32 .^ OK!
BlockArrays.BlockArray{T,N,R} Float32 + OK!
BlockArrays.BlockArray{T,N,R} Float32 - OK!
BlockArrays.BlockArray{T,N,R} Float32 min OK!
BlockArrays.BlockArray{T,N,R} Float32 max OK!
BlockArrays.BlockArray{T,N,R} Float32 div OK!
BlockArrays.BlockArray{T,N,R} Float32 mod OK!
BlockArrays.BlockArray{T,N,R} Float32 .== OK!
BlockArrays.BlockArray{T,N,R} Float32 .!= OK!
BlockArrays.BlockArray{T,N,R} Float32 .< OK!
BlockArrays.BlockArray{T,N,R} Float32 .<= OK!
BlockArrays.BlockArray{T,N,R} Float32 .> OK!
BlockArrays.BlockArray{T,N,R} Float32 .>= OK!
BlockArrays.BlockArray{T,N,R} Float32 - OK!
BlockArrays.BlockArray{T,N,R} Float32 ~ Skipped no method!
BlockArrays.BlockArray{T,N,R} Float32 conj OK!
BlockArrays.BlockArray{T,N,R} Float32 abs OK!
BlockArrays.BlockArray{T,N,R} Float32 sin OK!
BlockArrays.BlockArray{T,N,R} Float32 cos OK!
BlockArrays.BlockArray{T,N,R} Float32 tan OK!
BlockArrays.BlockArray{T,N,R} Float32 sinh OK!
BlockArrays.BlockArray{T,N,R} Float32 cosh OK!
BlockArrays.BlockArray{T,N,R} Float32 tanh OK!
BlockArrays.BlockArray{T,N,R} Float32 asin OK!
BlockArrays.BlockArray{T,N,R} Float32 acos OK!
BlockArrays.BlockArray{T,N,R} Float32 atan OK!
BlockArrays.BlockArray{T,N,R} Float32 asinh OK!
BlockArrays.BlockArray{T,N,R} Float32 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 atanh OK!
BlockArrays.BlockArray{T,N,R} Float32 sec OK!
BlockArrays.BlockArray{T,N,R} Float32 csc OK!
BlockArrays.BlockArray{T,N,R} Float32 cot OK!
BlockArrays.BlockArray{T,N,R} Float32 asec Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 acsc Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 acot OK!
BlockArrays.BlockArray{T,N,R} Float32 sech OK!
BlockArrays.BlockArray{T,N,R} Float32 csch OK!
BlockArrays.BlockArray{T,N,R} Float32 coth OK!
BlockArrays.BlockArray{T,N,R} Float32 asech OK!
BlockArrays.BlockArray{T,N,R} Float32 acsch OK!
BlockArrays.BlockArray{T,N,R} Float32 acoth Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 sinc OK!
BlockArrays.BlockArray{T,N,R} Float32 cosc OK!
BlockArrays.BlockArray{T,N,R} Float32 cosd OK!
BlockArrays.BlockArray{T,N,R} Float32 cotd OK!
BlockArrays.BlockArray{T,N,R} Float32 cscd OK!
BlockArrays.BlockArray{T,N,R} Float32 secd OK!
BlockArrays.BlockArray{T,N,R} Float32 sind OK!
BlockArrays.BlockArray{T,N,R} Float32 tand OK!
BlockArrays.BlockArray{T,N,R} Float32 acosd OK!
BlockArrays.BlockArray{T,N,R} Float32 acotd OK!
BlockArrays.BlockArray{T,N,R} Float32 acscd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 asecd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float32 asind OK!
BlockArrays.BlockArray{T,N,R} Float32 atand OK!
BlockArrays.BlockArray{T,N,R} Float32 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Float32 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Float32 log OK!
BlockArrays.BlockArray{T,N,R} Float32 log2 OK!
BlockArrays.BlockArray{T,N,R} Float32 log10 OK!
BlockArrays.BlockArray{T,N,R} Float32 log1p OK!
BlockArrays.BlockArray{T,N,R} Float32 exponent OK!
BlockArrays.BlockArray{T,N,R} Float32 exp OK!
BlockArrays.BlockArray{T,N,R} Float32 exp2 OK!
BlockArrays.BlockArray{T,N,R} Float32 expm1 OK!
BlockArrays.BlockArray{T,N,R} Float32 cbrt OK!
BlockArrays.BlockArray{T,N,R} Float32 sqrt OK!
BlockArrays.BlockArray{T,N,R} Float32 erf OK!
BlockArrays.BlockArray{T,N,R} Float32 erfc OK!
BlockArrays.BlockArray{T,N,R} Float32 erfcx OK!
BlockArrays.BlockArray{T,N,R} Float32 erfi OK!
BlockArrays.BlockArray{T,N,R} Float32 dawson OK!
BlockArrays.BlockArray{T,N,R} Float32 ceil OK!
BlockArrays.BlockArray{T,N,R} Float32 floor OK!
BlockArrays.BlockArray{T,N,R} Float32 trunc OK!
BlockArrays.BlockArray{T,N,R} Float32 round OK!
BlockArrays.BlockArray{T,N,R} Float32 significand OK!
BlockArrays.BlockArray{T,N,R} Float32 maximum OK!
BlockArrays.BlockArray{T,N,R} Float32 minimum OK!
BlockArrays.BlockArray{T,N,R} Float32 sum OK!
BlockArrays.BlockArray{T,N,R} Float32 prod OK!
BlockArrays.BlockArray{T,N,R} Float32 .+ OK!
BlockArrays.BlockArray{T,N,R} Float32 .- OK!
BlockArrays.BlockArray{T,N,R} Float32 .* OK!
BlockArrays.BlockArray{T,N,R} Float32 ./ OK!
BlockArrays.BlockArray{T,N,R} Float32 .\ OK!
BlockArrays.BlockArray{T,N,R} Float32 .^ OK!
BlockArrays.BlockArray{T,N,R} Float32 + OK!
BlockArrays.BlockArray{T,N,R} Float32 - OK!
BlockArrays.BlockArray{T,N,R} Float32 min OK!
BlockArrays.BlockArray{T,N,R} Float32 max OK!
BlockArrays.BlockArray{T,N,R} Float32 div OK!
BlockArrays.BlockArray{T,N,R} Float32 mod OK!
BlockArrays.BlockArray{T,N,R} Float32 .== OK!
BlockArrays.BlockArray{T,N,R} Float32 .!= OK!
BlockArrays.BlockArray{T,N,R} Float32 .< OK!
BlockArrays.BlockArray{T,N,R} Float32 .<= OK!
BlockArrays.BlockArray{T,N,R} Float32 .> OK!
BlockArrays.BlockArray{T,N,R} Float32 .>= OK!
BlockArrays.BlockArray{T,N,R} Float64 - OK!
BlockArrays.BlockArray{T,N,R} Float64 ~ Skipped no method!
BlockArrays.BlockArray{T,N,R} Float64 conj OK!
BlockArrays.BlockArray{T,N,R} Float64 abs OK!
BlockArrays.BlockArray{T,N,R} Float64 sin OK!
BlockArrays.BlockArray{T,N,R} Float64 cos OK!
BlockArrays.BlockArray{T,N,R} Float64 tan OK!
BlockArrays.BlockArray{T,N,R} Float64 sinh OK!
BlockArrays.BlockArray{T,N,R} Float64 cosh OK!
BlockArrays.BlockArray{T,N,R} Float64 tanh OK!
BlockArrays.BlockArray{T,N,R} Float64 asin OK!
BlockArrays.BlockArray{T,N,R} Float64 acos OK!
BlockArrays.BlockArray{T,N,R} Float64 atan OK!
BlockArrays.BlockArray{T,N,R} Float64 asinh OK!
BlockArrays.BlockArray{T,N,R} Float64 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 atanh OK!
BlockArrays.BlockArray{T,N,R} Float64 sec OK!
BlockArrays.BlockArray{T,N,R} Float64 csc OK!
BlockArrays.BlockArray{T,N,R} Float64 cot OK!
BlockArrays.BlockArray{T,N,R} Float64 asec Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 acsc Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 acot OK!
BlockArrays.BlockArray{T,N,R} Float64 sech OK!
BlockArrays.BlockArray{T,N,R} Float64 csch OK!
BlockArrays.BlockArray{T,N,R} Float64 coth OK!
BlockArrays.BlockArray{T,N,R} Float64 asech OK!
BlockArrays.BlockArray{T,N,R} Float64 acsch OK!
BlockArrays.BlockArray{T,N,R} Float64 acoth Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 sinc OK!
BlockArrays.BlockArray{T,N,R} Float64 cosc OK!
BlockArrays.BlockArray{T,N,R} Float64 cosd OK!
BlockArrays.BlockArray{T,N,R} Float64 cotd OK!
BlockArrays.BlockArray{T,N,R} Float64 cscd OK!
BlockArrays.BlockArray{T,N,R} Float64 secd OK!
BlockArrays.BlockArray{T,N,R} Float64 sind OK!
BlockArrays.BlockArray{T,N,R} Float64 tand OK!
BlockArrays.BlockArray{T,N,R} Float64 acosd OK!
BlockArrays.BlockArray{T,N,R} Float64 acotd OK!
BlockArrays.BlockArray{T,N,R} Float64 acscd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 asecd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 asind OK!
BlockArrays.BlockArray{T,N,R} Float64 atand OK!
BlockArrays.BlockArray{T,N,R} Float64 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Float64 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Float64 log OK!
BlockArrays.BlockArray{T,N,R} Float64 log2 OK!
BlockArrays.BlockArray{T,N,R} Float64 log10 OK!
BlockArrays.BlockArray{T,N,R} Float64 log1p OK!
BlockArrays.BlockArray{T,N,R} Float64 exponent OK!
BlockArrays.BlockArray{T,N,R} Float64 exp OK!
BlockArrays.BlockArray{T,N,R} Float64 exp2 OK!
BlockArrays.BlockArray{T,N,R} Float64 expm1 OK!
BlockArrays.BlockArray{T,N,R} Float64 cbrt OK!
BlockArrays.BlockArray{T,N,R} Float64 sqrt OK!
BlockArrays.BlockArray{T,N,R} Float64 erf OK!
BlockArrays.BlockArray{T,N,R} Float64 erfc OK!
BlockArrays.BlockArray{T,N,R} Float64 erfcx OK!
BlockArrays.BlockArray{T,N,R} Float64 erfi OK!
BlockArrays.BlockArray{T,N,R} Float64 dawson OK!
BlockArrays.BlockArray{T,N,R} Float64 ceil OK!
BlockArrays.BlockArray{T,N,R} Float64 floor OK!
BlockArrays.BlockArray{T,N,R} Float64 trunc OK!
BlockArrays.BlockArray{T,N,R} Float64 round OK!
BlockArrays.BlockArray{T,N,R} Float64 significand OK!
BlockArrays.BlockArray{T,N,R} Float64 maximum OK!
BlockArrays.BlockArray{T,N,R} Float64 minimum OK!
BlockArrays.BlockArray{T,N,R} Float64 sum OK!
BlockArrays.BlockArray{T,N,R} Float64 prod OK!
BlockArrays.BlockArray{T,N,R} Float64 .+ OK!
BlockArrays.BlockArray{T,N,R} Float64 .- OK!
BlockArrays.BlockArray{T,N,R} Float64 .* OK!
BlockArrays.BlockArray{T,N,R} Float64 ./ OK!
BlockArrays.BlockArray{T,N,R} Float64 .\ OK!
BlockArrays.BlockArray{T,N,R} Float64 .^ OK!
BlockArrays.BlockArray{T,N,R} Float64 + OK!
BlockArrays.BlockArray{T,N,R} Float64 - OK!
BlockArrays.BlockArray{T,N,R} Float64 min OK!
BlockArrays.BlockArray{T,N,R} Float64 max OK!
BlockArrays.BlockArray{T,N,R} Float64 div OK!
BlockArrays.BlockArray{T,N,R} Float64 mod OK!
BlockArrays.BlockArray{T,N,R} Float64 .== OK!
BlockArrays.BlockArray{T,N,R} Float64 .!= OK!
BlockArrays.BlockArray{T,N,R} Float64 .< OK!
BlockArrays.BlockArray{T,N,R} Float64 .<= OK!
BlockArrays.BlockArray{T,N,R} Float64 .> OK!
BlockArrays.BlockArray{T,N,R} Float64 .>= OK!
BlockArrays.BlockArray{T,N,R} Float64 - OK!
BlockArrays.BlockArray{T,N,R} Float64 ~ Skipped no method!
BlockArrays.BlockArray{T,N,R} Float64 conj OK!
BlockArrays.BlockArray{T,N,R} Float64 abs OK!
BlockArrays.BlockArray{T,N,R} Float64 sin OK!
BlockArrays.BlockArray{T,N,R} Float64 cos OK!
BlockArrays.BlockArray{T,N,R} Float64 tan OK!
BlockArrays.BlockArray{T,N,R} Float64 sinh OK!
BlockArrays.BlockArray{T,N,R} Float64 cosh OK!
BlockArrays.BlockArray{T,N,R} Float64 tanh OK!
BlockArrays.BlockArray{T,N,R} Float64 asin OK!
BlockArrays.BlockArray{T,N,R} Float64 acos OK!
BlockArrays.BlockArray{T,N,R} Float64 atan OK!
BlockArrays.BlockArray{T,N,R} Float64 asinh OK!
BlockArrays.BlockArray{T,N,R} Float64 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 atanh OK!
BlockArrays.BlockArray{T,N,R} Float64 sec OK!
BlockArrays.BlockArray{T,N,R} Float64 csc OK!
BlockArrays.BlockArray{T,N,R} Float64 cot OK!
BlockArrays.BlockArray{T,N,R} Float64 asec Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 acsc Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 acot OK!
BlockArrays.BlockArray{T,N,R} Float64 sech OK!
BlockArrays.BlockArray{T,N,R} Float64 csch OK!
BlockArrays.BlockArray{T,N,R} Float64 coth OK!
BlockArrays.BlockArray{T,N,R} Float64 asech OK!
BlockArrays.BlockArray{T,N,R} Float64 acsch OK!
BlockArrays.BlockArray{T,N,R} Float64 acoth Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 sinc OK!
BlockArrays.BlockArray{T,N,R} Float64 cosc OK!
BlockArrays.BlockArray{T,N,R} Float64 cosd OK!
BlockArrays.BlockArray{T,N,R} Float64 cotd OK!
BlockArrays.BlockArray{T,N,R} Float64 cscd OK!
BlockArrays.BlockArray{T,N,R} Float64 secd OK!
BlockArrays.BlockArray{T,N,R} Float64 sind OK!
BlockArrays.BlockArray{T,N,R} Float64 tand OK!
BlockArrays.BlockArray{T,N,R} Float64 acosd OK!
BlockArrays.BlockArray{T,N,R} Float64 acotd OK!
BlockArrays.BlockArray{T,N,R} Float64 acscd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 asecd Skipped exception!
BlockArrays.BlockArray{T,N,R} Float64 asind OK!
BlockArrays.BlockArray{T,N,R} Float64 atand OK!
BlockArrays.BlockArray{T,N,R} Float64 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Float64 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Float64 log OK!
BlockArrays.BlockArray{T,N,R} Float64 log2 OK!
BlockArrays.BlockArray{T,N,R} Float64 log10 OK!
BlockArrays.BlockArray{T,N,R} Float64 log1p OK!
BlockArrays.BlockArray{T,N,R} Float64 exponent OK!
BlockArrays.BlockArray{T,N,R} Float64 exp OK!
BlockArrays.BlockArray{T,N,R} Float64 exp2 OK!
BlockArrays.BlockArray{T,N,R} Float64 expm1 OK!
BlockArrays.BlockArray{T,N,R} Float64 cbrt OK!
BlockArrays.BlockArray{T,N,R} Float64 sqrt OK!
BlockArrays.BlockArray{T,N,R} Float64 erf OK!
BlockArrays.BlockArray{T,N,R} Float64 erfc OK!
BlockArrays.BlockArray{T,N,R} Float64 erfcx OK!
BlockArrays.BlockArray{T,N,R} Float64 erfi OK!
BlockArrays.BlockArray{T,N,R} Float64 dawson OK!
BlockArrays.BlockArray{T,N,R} Float64 ceil OK!
BlockArrays.BlockArray{T,N,R} Float64 floor OK!
BlockArrays.BlockArray{T,N,R} Float64 trunc OK!
BlockArrays.BlockArray{T,N,R} Float64 round OK!
BlockArrays.BlockArray{T,N,R} Float64 significand OK!
BlockArrays.BlockArray{T,N,R} Float64 maximum OK!
BlockArrays.BlockArray{T,N,R} Float64 minimum OK!
BlockArrays.BlockArray{T,N,R} Float64 sum OK!
BlockArrays.BlockArray{T,N,R} Float64 prod OK!
BlockArrays.BlockArray{T,N,R} Float64 .+ OK!
BlockArrays.BlockArray{T,N,R} Float64 .- OK!
BlockArrays.BlockArray{T,N,R} Float64 .* OK!
BlockArrays.BlockArray{T,N,R} Float64 ./ OK!
BlockArrays.BlockArray{T,N,R} Float64 .\ OK!
BlockArrays.BlockArray{T,N,R} Float64 .^ OK!
BlockArrays.BlockArray{T,N,R} Float64 + OK!
BlockArrays.BlockArray{T,N,R} Float64 - OK!
BlockArrays.BlockArray{T,N,R} Float64 min OK!
BlockArrays.BlockArray{T,N,R} Float64 max OK!
BlockArrays.BlockArray{T,N,R} Float64 div OK!
BlockArrays.BlockArray{T,N,R} Float64 mod OK!
BlockArrays.BlockArray{T,N,R} Float64 .== OK!
BlockArrays.BlockArray{T,N,R} Float64 .!= OK!
BlockArrays.BlockArray{T,N,R} Float64 .< OK!
BlockArrays.BlockArray{T,N,R} Float64 .<= OK!
BlockArrays.BlockArray{T,N,R} Float64 .> OK!
BlockArrays.BlockArray{T,N,R} Float64 .>= OK!
BlockArrays.BlockArray{T,N,R} Int32 - OK!
BlockArrays.BlockArray{T,N,R} Int32 ~ OK!
BlockArrays.BlockArray{T,N,R} Int32 conj OK!
BlockArrays.BlockArray{T,N,R} Int32 abs OK!
BlockArrays.BlockArray{T,N,R} Int32 sin OK!
BlockArrays.BlockArray{T,N,R} Int32 cos OK!
BlockArrays.BlockArray{T,N,R} Int32 tan OK!
BlockArrays.BlockArray{T,N,R} Int32 sinh OK!
BlockArrays.BlockArray{T,N,R} Int32 cosh OK!
BlockArrays.BlockArray{T,N,R} Int32 tanh OK!
BlockArrays.BlockArray{T,N,R} Int32 asin Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acos Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atan OK!
BlockArrays.BlockArray{T,N,R} Int32 asinh OK!
BlockArrays.BlockArray{T,N,R} Int32 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atanh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 sec OK!
BlockArrays.BlockArray{T,N,R} Int32 csc OK!
BlockArrays.BlockArray{T,N,R} Int32 cot OK!
BlockArrays.BlockArray{T,N,R} Int32 asec OK!
BlockArrays.BlockArray{T,N,R} Int32 acsc OK!
BlockArrays.BlockArray{T,N,R} Int32 acot OK!
BlockArrays.BlockArray{T,N,R} Int32 sech OK!
BlockArrays.BlockArray{T,N,R} Int32 csch OK!
BlockArrays.BlockArray{T,N,R} Int32 coth OK!
BlockArrays.BlockArray{T,N,R} Int32 asech Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acsch OK!
BlockArrays.BlockArray{T,N,R} Int32 acoth OK!
BlockArrays.BlockArray{T,N,R} Int32 sinc OK!
BlockArrays.BlockArray{T,N,R} Int32 cosc OK!
BlockArrays.BlockArray{T,N,R} Int32 cosd OK!
BlockArrays.BlockArray{T,N,R} Int32 cotd OK!
BlockArrays.BlockArray{T,N,R} Int32 cscd OK!
BlockArrays.BlockArray{T,N,R} Int32 secd OK!
BlockArrays.BlockArray{T,N,R} Int32 sind OK!
BlockArrays.BlockArray{T,N,R} Int32 tand OK!
BlockArrays.BlockArray{T,N,R} Int32 acosd Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acotd OK!
BlockArrays.BlockArray{T,N,R} Int32 acscd OK!
BlockArrays.BlockArray{T,N,R} Int32 asecd OK!
BlockArrays.BlockArray{T,N,R} Int32 asind Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atand OK!
BlockArrays.BlockArray{T,N,R} Int32 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Int32 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Int32 log Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log2 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log10 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log1p Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 exponent Skipped no method!
BlockArrays.BlockArray{T,N,R} Int32 exp OK!
BlockArrays.BlockArray{T,N,R} Int32 exp2 OK!
BlockArrays.BlockArray{T,N,R} Int32 expm1 OK!
BlockArrays.BlockArray{T,N,R} Int32 cbrt OK!
BlockArrays.BlockArray{T,N,R} Int32 sqrt Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 erf OK!
BlockArrays.BlockArray{T,N,R} Int32 erfc OK!
BlockArrays.BlockArray{T,N,R} Int32 erfcx OK!
BlockArrays.BlockArray{T,N,R} Int32 erfi OK!
BlockArrays.BlockArray{T,N,R} Int32 dawson OK!
BlockArrays.BlockArray{T,N,R} Int32 ceil OK!
BlockArrays.BlockArray{T,N,R} Int32 floor OK!
BlockArrays.BlockArray{T,N,R} Int32 trunc OK!
BlockArrays.BlockArray{T,N,R} Int32 round OK!
BlockArrays.BlockArray{T,N,R} Int32 significand Skipped no method!
BlockArrays.BlockArray{T,N,R} Int32 maximum OK!
BlockArrays.BlockArray{T,N,R} Int32 minimum OK!
BlockArrays.BlockArray{T,N,R} Int32 sum OK!
BlockArrays.BlockArray{T,N,R} Int32 prod OK!
BlockArrays.BlockArray{T,N,R} Int32 .+ OK!
BlockArrays.BlockArray{T,N,R} Int32 .- OK!
BlockArrays.BlockArray{T,N,R} Int32 .* OK!
BlockArrays.BlockArray{T,N,R} Int32 ./ OK!
BlockArrays.BlockArray{T,N,R} Int32 .\ OK!
BlockArrays.BlockArray{T,N,R} Int32 .^ Skipped!
BlockArrays.BlockArray{T,N,R} Int32 + OK!
BlockArrays.BlockArray{T,N,R} Int32 - OK!
BlockArrays.BlockArray{T,N,R} Int32 min OK!
BlockArrays.BlockArray{T,N,R} Int32 max OK!
BlockArrays.BlockArray{T,N,R} Int32 div OK!
BlockArrays.BlockArray{T,N,R} Int32 mod OK!
BlockArrays.BlockArray{T,N,R} Int32 .== OK!
BlockArrays.BlockArray{T,N,R} Int32 .!= OK!
BlockArrays.BlockArray{T,N,R} Int32 .< OK!
BlockArrays.BlockArray{T,N,R} Int32 .<= OK!
BlockArrays.BlockArray{T,N,R} Int32 .> OK!
BlockArrays.BlockArray{T,N,R} Int32 .>= OK!
BlockArrays.BlockArray{T,N,R} Int32 - OK!
BlockArrays.BlockArray{T,N,R} Int32 ~ OK!
BlockArrays.BlockArray{T,N,R} Int32 conj OK!
BlockArrays.BlockArray{T,N,R} Int32 abs OK!
BlockArrays.BlockArray{T,N,R} Int32 sin OK!
BlockArrays.BlockArray{T,N,R} Int32 cos OK!
BlockArrays.BlockArray{T,N,R} Int32 tan OK!
BlockArrays.BlockArray{T,N,R} Int32 sinh OK!
BlockArrays.BlockArray{T,N,R} Int32 cosh OK!
BlockArrays.BlockArray{T,N,R} Int32 tanh OK!
BlockArrays.BlockArray{T,N,R} Int32 asin Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acos Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atan OK!
BlockArrays.BlockArray{T,N,R} Int32 asinh OK!
BlockArrays.BlockArray{T,N,R} Int32 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atanh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 sec OK!
BlockArrays.BlockArray{T,N,R} Int32 csc OK!
BlockArrays.BlockArray{T,N,R} Int32 cot OK!
BlockArrays.BlockArray{T,N,R} Int32 asec OK!
BlockArrays.BlockArray{T,N,R} Int32 acsc OK!
BlockArrays.BlockArray{T,N,R} Int32 acot OK!
BlockArrays.BlockArray{T,N,R} Int32 sech OK!
BlockArrays.BlockArray{T,N,R} Int32 csch OK!
BlockArrays.BlockArray{T,N,R} Int32 coth OK!
BlockArrays.BlockArray{T,N,R} Int32 asech Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acsch OK!
BlockArrays.BlockArray{T,N,R} Int32 acoth OK!
BlockArrays.BlockArray{T,N,R} Int32 sinc OK!
BlockArrays.BlockArray{T,N,R} Int32 cosc OK!
BlockArrays.BlockArray{T,N,R} Int32 cosd OK!
BlockArrays.BlockArray{T,N,R} Int32 cotd OK!
BlockArrays.BlockArray{T,N,R} Int32 cscd OK!
BlockArrays.BlockArray{T,N,R} Int32 secd OK!
BlockArrays.BlockArray{T,N,R} Int32 sind OK!
BlockArrays.BlockArray{T,N,R} Int32 tand OK!
BlockArrays.BlockArray{T,N,R} Int32 acosd Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 acotd OK!
BlockArrays.BlockArray{T,N,R} Int32 acscd OK!
BlockArrays.BlockArray{T,N,R} Int32 asecd OK!
BlockArrays.BlockArray{T,N,R} Int32 asind Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 atand OK!
BlockArrays.BlockArray{T,N,R} Int32 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Int32 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Int32 log Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log2 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log10 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 log1p Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 exponent Skipped no method!
BlockArrays.BlockArray{T,N,R} Int32 exp OK!
BlockArrays.BlockArray{T,N,R} Int32 exp2 OK!
BlockArrays.BlockArray{T,N,R} Int32 expm1 OK!
BlockArrays.BlockArray{T,N,R} Int32 cbrt OK!
BlockArrays.BlockArray{T,N,R} Int32 sqrt Skipped exception!
BlockArrays.BlockArray{T,N,R} Int32 erf OK!
BlockArrays.BlockArray{T,N,R} Int32 erfc OK!
BlockArrays.BlockArray{T,N,R} Int32 erfcx OK!
BlockArrays.BlockArray{T,N,R} Int32 erfi OK!
BlockArrays.BlockArray{T,N,R} Int32 dawson OK!
BlockArrays.BlockArray{T,N,R} Int32 ceil OK!
BlockArrays.BlockArray{T,N,R} Int32 floor OK!
BlockArrays.BlockArray{T,N,R} Int32 trunc OK!
BlockArrays.BlockArray{T,N,R} Int32 round OK!
BlockArrays.BlockArray{T,N,R} Int32 significand Skipped no method!
BlockArrays.BlockArray{T,N,R} Int32 maximum OK!
BlockArrays.BlockArray{T,N,R} Int32 minimum OK!
BlockArrays.BlockArray{T,N,R} Int32 sum OK!
BlockArrays.BlockArray{T,N,R} Int32 prod OK!
BlockArrays.BlockArray{T,N,R} Int32 .+ OK!
BlockArrays.BlockArray{T,N,R} Int32 .- OK!
BlockArrays.BlockArray{T,N,R} Int32 .* OK!
BlockArrays.BlockArray{T,N,R} Int32 ./ OK!
BlockArrays.BlockArray{T,N,R} Int32 .\ OK!
BlockArrays.BlockArray{T,N,R} Int32 .^ Skipped!
BlockArrays.BlockArray{T,N,R} Int32 + OK!
BlockArrays.BlockArray{T,N,R} Int32 - OK!
BlockArrays.BlockArray{T,N,R} Int32 min OK!
BlockArrays.BlockArray{T,N,R} Int32 max OK!
BlockArrays.BlockArray{T,N,R} Int32 div OK!
BlockArrays.BlockArray{T,N,R} Int32 mod OK!
BlockArrays.BlockArray{T,N,R} Int32 .== OK!
BlockArrays.BlockArray{T,N,R} Int32 .!= OK!
BlockArrays.BlockArray{T,N,R} Int32 .< OK!
BlockArrays.BlockArray{T,N,R} Int32 .<= OK!
BlockArrays.BlockArray{T,N,R} Int32 .> OK!
BlockArrays.BlockArray{T,N,R} Int32 .>= OK!
BlockArrays.BlockArray{T,N,R} Int64 - OK!
BlockArrays.BlockArray{T,N,R} Int64 ~ OK!
BlockArrays.BlockArray{T,N,R} Int64 conj OK!
BlockArrays.BlockArray{T,N,R} Int64 abs OK!
BlockArrays.BlockArray{T,N,R} Int64 sin OK!
BlockArrays.BlockArray{T,N,R} Int64 cos OK!
BlockArrays.BlockArray{T,N,R} Int64 tan OK!
BlockArrays.BlockArray{T,N,R} Int64 sinh OK!
BlockArrays.BlockArray{T,N,R} Int64 cosh OK!
BlockArrays.BlockArray{T,N,R} Int64 tanh OK!
BlockArrays.BlockArray{T,N,R} Int64 asin Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acos Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atan OK!
BlockArrays.BlockArray{T,N,R} Int64 asinh OK!
BlockArrays.BlockArray{T,N,R} Int64 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atanh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 sec OK!
BlockArrays.BlockArray{T,N,R} Int64 csc OK!
BlockArrays.BlockArray{T,N,R} Int64 cot OK!
BlockArrays.BlockArray{T,N,R} Int64 asec OK!
BlockArrays.BlockArray{T,N,R} Int64 acsc OK!
BlockArrays.BlockArray{T,N,R} Int64 acot OK!
BlockArrays.BlockArray{T,N,R} Int64 sech OK!
BlockArrays.BlockArray{T,N,R} Int64 csch OK!
BlockArrays.BlockArray{T,N,R} Int64 coth OK!
BlockArrays.BlockArray{T,N,R} Int64 asech Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acsch OK!
BlockArrays.BlockArray{T,N,R} Int64 acoth OK!
BlockArrays.BlockArray{T,N,R} Int64 sinc OK!
BlockArrays.BlockArray{T,N,R} Int64 cosc OK!
BlockArrays.BlockArray{T,N,R} Int64 cosd OK!
BlockArrays.BlockArray{T,N,R} Int64 cotd OK!
BlockArrays.BlockArray{T,N,R} Int64 cscd OK!
BlockArrays.BlockArray{T,N,R} Int64 secd OK!
BlockArrays.BlockArray{T,N,R} Int64 sind OK!
BlockArrays.BlockArray{T,N,R} Int64 tand OK!
BlockArrays.BlockArray{T,N,R} Int64 acosd Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acotd OK!
BlockArrays.BlockArray{T,N,R} Int64 acscd OK!
BlockArrays.BlockArray{T,N,R} Int64 asecd OK!
BlockArrays.BlockArray{T,N,R} Int64 asind Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atand OK!
BlockArrays.BlockArray{T,N,R} Int64 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Int64 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Int64 log Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log2 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log10 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log1p Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 exponent Skipped no method!
BlockArrays.BlockArray{T,N,R} Int64 exp OK!
BlockArrays.BlockArray{T,N,R} Int64 exp2 OK!
BlockArrays.BlockArray{T,N,R} Int64 expm1 OK!
BlockArrays.BlockArray{T,N,R} Int64 cbrt OK!
BlockArrays.BlockArray{T,N,R} Int64 sqrt Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 erf OK!
BlockArrays.BlockArray{T,N,R} Int64 erfc OK!
BlockArrays.BlockArray{T,N,R} Int64 erfcx OK!
BlockArrays.BlockArray{T,N,R} Int64 erfi OK!
BlockArrays.BlockArray{T,N,R} Int64 dawson OK!
BlockArrays.BlockArray{T,N,R} Int64 ceil OK!
BlockArrays.BlockArray{T,N,R} Int64 floor OK!
BlockArrays.BlockArray{T,N,R} Int64 trunc OK!
BlockArrays.BlockArray{T,N,R} Int64 round OK!
BlockArrays.BlockArray{T,N,R} Int64 significand Skipped no method!
BlockArrays.BlockArray{T,N,R} Int64 maximum OK!
BlockArrays.BlockArray{T,N,R} Int64 minimum OK!
BlockArrays.BlockArray{T,N,R} Int64 sum OK!
BlockArrays.BlockArray{T,N,R} Int64 prod OK!
BlockArrays.BlockArray{T,N,R} Int64 .+ OK!
BlockArrays.BlockArray{T,N,R} Int64 .- OK!
BlockArrays.BlockArray{T,N,R} Int64 .* OK!
BlockArrays.BlockArray{T,N,R} Int64 ./ OK!
BlockArrays.BlockArray{T,N,R} Int64 .\ OK!
BlockArrays.BlockArray{T,N,R} Int64 .^ Skipped!
BlockArrays.BlockArray{T,N,R} Int64 + OK!
BlockArrays.BlockArray{T,N,R} Int64 - OK!
BlockArrays.BlockArray{T,N,R} Int64 min OK!
BlockArrays.BlockArray{T,N,R} Int64 max OK!
BlockArrays.BlockArray{T,N,R} Int64 div OK!
BlockArrays.BlockArray{T,N,R} Int64 mod OK!
BlockArrays.BlockArray{T,N,R} Int64 .== OK!
BlockArrays.BlockArray{T,N,R} Int64 .!= OK!
BlockArrays.BlockArray{T,N,R} Int64 .< OK!
BlockArrays.BlockArray{T,N,R} Int64 .<= OK!
BlockArrays.BlockArray{T,N,R} Int64 .> OK!
BlockArrays.BlockArray{T,N,R} Int64 .>= OK!
BlockArrays.BlockArray{T,N,R} Int64 - OK!
BlockArrays.BlockArray{T,N,R} Int64 ~ OK!
BlockArrays.BlockArray{T,N,R} Int64 conj OK!
BlockArrays.BlockArray{T,N,R} Int64 abs OK!
BlockArrays.BlockArray{T,N,R} Int64 sin OK!
BlockArrays.BlockArray{T,N,R} Int64 cos OK!
BlockArrays.BlockArray{T,N,R} Int64 tan OK!
BlockArrays.BlockArray{T,N,R} Int64 sinh OK!
BlockArrays.BlockArray{T,N,R} Int64 cosh OK!
BlockArrays.BlockArray{T,N,R} Int64 tanh OK!
BlockArrays.BlockArray{T,N,R} Int64 asin Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acos Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atan OK!
BlockArrays.BlockArray{T,N,R} Int64 asinh OK!
BlockArrays.BlockArray{T,N,R} Int64 acosh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atanh Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 sec OK!
BlockArrays.BlockArray{T,N,R} Int64 csc OK!
BlockArrays.BlockArray{T,N,R} Int64 cot OK!
BlockArrays.BlockArray{T,N,R} Int64 asec OK!
BlockArrays.BlockArray{T,N,R} Int64 acsc OK!
BlockArrays.BlockArray{T,N,R} Int64 acot OK!
BlockArrays.BlockArray{T,N,R} Int64 sech OK!
BlockArrays.BlockArray{T,N,R} Int64 csch OK!
BlockArrays.BlockArray{T,N,R} Int64 coth OK!
BlockArrays.BlockArray{T,N,R} Int64 asech Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acsch OK!
BlockArrays.BlockArray{T,N,R} Int64 acoth OK!
BlockArrays.BlockArray{T,N,R} Int64 sinc OK!
BlockArrays.BlockArray{T,N,R} Int64 cosc OK!
BlockArrays.BlockArray{T,N,R} Int64 cosd OK!
BlockArrays.BlockArray{T,N,R} Int64 cotd OK!
BlockArrays.BlockArray{T,N,R} Int64 cscd OK!
BlockArrays.BlockArray{T,N,R} Int64 secd OK!
BlockArrays.BlockArray{T,N,R} Int64 sind OK!
BlockArrays.BlockArray{T,N,R} Int64 tand OK!
BlockArrays.BlockArray{T,N,R} Int64 acosd Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 acotd OK!
BlockArrays.BlockArray{T,N,R} Int64 acscd OK!
BlockArrays.BlockArray{T,N,R} Int64 asecd OK!
BlockArrays.BlockArray{T,N,R} Int64 asind Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 atand OK!
BlockArrays.BlockArray{T,N,R} Int64 rad2deg OK!
BlockArrays.BlockArray{T,N,R} Int64 deg2rad OK!
BlockArrays.BlockArray{T,N,R} Int64 log Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log2 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log10 Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 log1p Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 exponent Skipped no method!
BlockArrays.BlockArray{T,N,R} Int64 exp OK!
BlockArrays.BlockArray{T,N,R} Int64 exp2 OK!
BlockArrays.BlockArray{T,N,R} Int64 expm1 OK!
BlockArrays.BlockArray{T,N,R} Int64 cbrt OK!
BlockArrays.BlockArray{T,N,R} Int64 sqrt Skipped exception!
BlockArrays.BlockArray{T,N,R} Int64 erf OK!
BlockArrays.BlockArray{T,N,R} Int64 erfc OK!
BlockArrays.BlockArray{T,N,R} Int64 erfcx OK!
BlockArrays.BlockArray{T,N,R} Int64 erfi OK!
BlockArrays.BlockArray{T,N,R} Int64 dawson OK!
BlockArrays.BlockArray{T,N,R} Int64 ceil OK!
BlockArrays.BlockArray{T,N,R} Int64 floor OK!
BlockArrays.BlockArray{T,N,R} Int64 trunc OK!
BlockArrays.BlockArray{T,N,R} Int64 round OK!
BlockArrays.BlockArray{T,N,R} Int64 significand Skipped no method!
BlockArrays.BlockArray{T,N,R} Int64 maximum OK!
BlockArrays.BlockArray{T,N,R} Int64 minimum OK!
BlockArrays.BlockArray{T,N,R} Int64 sum OK!
BlockArrays.BlockArray{T,N,R} Int64 prod OK!
BlockArrays.BlockArray{T,N,R} Int64 .+ OK!
BlockArrays.BlockArray{T,N,R} Int64 .- OK!
BlockArrays.BlockArray{T,N,R} Int64 .* OK!
BlockArrays.BlockArray{T,N,R} Int64 ./ OK!
BlockArrays.BlockArray{T,N,R} Int64 .\ OK!
BlockArrays.BlockArray{T,N,R} Int64 .^ Skipped!
BlockArrays.BlockArray{T,N,R} Int64 + OK!
BlockArrays.BlockArray{T,N,R} Int64 - OK!
BlockArrays.BlockArray{T,N,R} Int64 min OK!
BlockArrays.BlockArray{T,N,R} Int64 max OK!
BlockArrays.BlockArray{T,N,R} Int64 div OK!
BlockArrays.BlockArray{T,N,R} Int64 mod OK!
BlockArrays.BlockArray{T,N,R} Int64 .== OK!
BlockArrays.BlockArray{T,N,R} Int64 .!= OK!
BlockArrays.BlockArray{T,N,R} Int64 .< OK!
BlockArrays.BlockArray{T,N,R} Int64 .<= OK!
BlockArrays.BlockArray{T,N,R} Int64 .> OK!
BlockArrays.BlockArray{T,N,R} Int64 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ~ Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Float32 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asec Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acsc Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acoth Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acscd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asecd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log10 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log1p OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exponent OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sqrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 significand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .^ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ~ Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Float32 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asec Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acsc Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acoth Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 acscd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asecd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float32 asind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log10 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 log1p OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exponent OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sqrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 significand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .^ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Float32 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ~ Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Float64 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asec Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acsc Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acoth Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acscd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asecd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log10 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log1p OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exponent OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sqrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 significand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .^ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ~ Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Float64 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asin OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acos OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asec Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acsc Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asech OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acoth Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 acscd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asecd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Float64 asind OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log10 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 log1p OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exponent OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sqrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 significand OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .^ OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Float64 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ~ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asin Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acos Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atanh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acsc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asech Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acoth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acosd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asecd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asind Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log2 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log10 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log1p Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exponent Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sqrt Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 significand Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int32 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .^ Skipped!
BlockArrays.PseudoBlockArray{T,N,R} Int32 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ~ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asin Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acos Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atanh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acsc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asech Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acoth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acosd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 acscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asecd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 asind Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log2 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log10 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 log1p Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exponent Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sqrt Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 significand Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int32 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .^ Skipped!
BlockArrays.PseudoBlockArray{T,N,R} Int32 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Int32 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ~ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asin Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acos Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atanh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acsc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asech Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acoth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acosd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asecd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asind Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log2 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log10 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log1p Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exponent Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sqrt Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 significand Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int64 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .^ Skipped!
BlockArrays.PseudoBlockArray{T,N,R} Int64 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .>= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ~ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 conj OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 abs OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sin OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cos OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tanh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asin Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acos Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atan OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asinh OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acosh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atanh Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 csc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asec OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acsc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acot OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sech OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 csch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 coth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asech Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acsch OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acoth OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sinc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cosd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 secd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sind OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 tand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acosd Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acotd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 acscd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asecd OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 asind Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 atand OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 rad2deg OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 deg2rad OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log2 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log10 Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 log1p Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exponent Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exp OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 exp2 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 expm1 OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 cbrt OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sqrt Skipped exception!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erf OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfcx OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 erfi OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 dawson OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ceil OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 floor OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 trunc OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 round OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 significand Skipped no method!
BlockArrays.PseudoBlockArray{T,N,R} Int64 maximum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 minimum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 sum OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 prod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .+ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .- OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .* OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 ./ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .\ OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .^ Skipped!
BlockArrays.PseudoBlockArray{T,N,R} Int64 + OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 - OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 min OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 max OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 div OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 mod OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .== OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .!= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .< OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .<= OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .> OK!
BlockArrays.PseudoBlockArray{T,N,R} Int64 .>= OK!
INFO: BlockArrays tests passed

>>> End of log
