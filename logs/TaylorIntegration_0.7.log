>>> 'Pkg.add("TaylorIntegration")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of TaylorIntegration from https://github.com/PerezHz/TaylorIntegration.jl.git
[ Info: Installing DiffEqBase v3.6.2
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing IteratorInterfaceExtensions v0.0.2
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MacroTools v0.4.0
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requires v0.4.3
[ Info: Installing SimpleTraits v0.7.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing TableTraits v0.1.0
[ Info: Installing TaylorIntegration v0.2.1
[ Info: Installing TaylorSeries v0.7.2
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of TaylorIntegration
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TaylorIntegration")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4465
Commit f569ebe9bc (2018-03-04 15:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3515 MHz    3444819 s         89 s     191449 s     997478 s         68 s
       #2  3515 MHz     790206 s       5807 s      74531 s    4465178 s          1 s
       
  Memory: 2.93927001953125 GB (818.796875 MB free)
  Uptime: 54309.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - TaylorIntegration             0.2.1
17 additional packages:
 - Compat                        0.56.0
 - DiffEqBase                    3.6.2
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.4
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SimpleTraits                  0.7.1
 - StaticArrays                  0.7.0
 - TableTraits                   0.1.0
 - TaylorSeries                  0.7.2
 - tmpmuUYsF                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for TaylorIntegration...
[ Info: Cloning cache of Elliptic from https://github.com/nolta/Elliptic.jl.git
[ Info: Installing Elliptic v0.4.1
[ Info: Testing TaylorIntegration
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: importing deprecated binding Base.A_ldiv_B! into DiffEqBase.
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{T})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:41.
│ Use `realtype(#unused#::Type{T}) where T` instead.
└ @ nothing utils.jl:41
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:42.
│ Use `realtype(#unused#::Type{Complex{T}}) where T` instead.
└ @ nothing utils.jl:42
ERROR: LoadError: LoadError: UndefVarError: TypeName not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:305 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1072
 [4] include at ./sysimg.jl:29 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/DiffEqBase/src/DiffEqBase.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:305 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1072
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] top-level scope
 [11] eval at ./boot.jl:308 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:46
in expression starting at /home/vagrant/.julia/v0.7/DiffEqBase/src/DiffEqBase.jl:178
ERROR: LoadError: LoadError: LoadError: Failed to precompile DiffEqBase to /home/vagrant/.julia/compiled/v0.7/DiffEqBase.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1206
 [3] _require(::Base.PkgId) at ./loading.jl:1008
 [4] require(::Base.PkgId) at ./loading.jl:879
 [5] require(::Module, ::Symbol) at ./loading.jl:874
 [6] include at ./boot.jl:305 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1072
 [8] _require(::Base.PkgId) at ./loading.jl:998
 [9] require(::Base.PkgId) at ./loading.jl:879
 [10] require(::Module, ::Symbol) at ./loading.jl:874
 [11] include at ./boot.jl:305 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1072
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] include(::String) at ./sysimg.jl:68
 [15] top-level scope at ./<missing>:15
 [16] include at ./boot.jl:305 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1072
 [18] include(::Module, ::String) at ./sysimg.jl:29
 [19] exec_options(::Base.JLOptions) at ./client.jl:332
 [20] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/TaylorIntegration/src/TaylorIntegration.jl:8
in expression starting at /home/vagrant/.julia/v0.7/TaylorIntegration/test/one_ode.jl:3
in expression starting at /home/vagrant/.julia/v0.7/TaylorIntegration/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for TaylorIntegration
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/TaylorIntegration/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#534(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [17] top-level scope
│     [18] eval at ./boot.jl:308 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:309
│     [21] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
[ Info: Removing Elliptic v0.4.1
ERROR: TaylorIntegration had test errors

>>> End of log
