>>> 'Pkg.add("StructuredQueries")' log
[ Info: Cloning cache of StructuredQueries from https://github.com/davidagold/StructuredQueries.jl.git
[ Info: Installing StructuredQueries v0.0.4
[ Info: Package database updated
â”Œ Info: METADATA is out-of-date â€” you may not have the latest version of StructuredQueries
â”” Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StructuredQueries")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3559564 s         98 s     174602 s     952522 s         50 s
       #2  3499 MHz     813640 s       7450 s      68729 s    4522226 s          0 s
       
  Memory: 2.93927001953125 GB (900.453125 MB free)
  Uptime: 54985.0 sec
  Load Avg:  1.01220703125  1.001953125  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - StructuredQueries             0.0.4
3 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
 - tmpJpLd7f                     0.0.0-             non-repo (unregistered)
[ Info: Testing StructuredQueries
Running tests:
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:14
â”Œ Warning: Deprecated syntax `implicit assignment to global variable `anyerrors``.
â”‚ Use `global anyerrors` instead.
â”” @ nothing none:0
â”Œ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/StructuredQueries/test/query/node.jl:9.
â”‚ Use `mutable struct` instead.
â”” @ nothing node.jl:9
	[1m[31mFAILED[0m: query/node.jl
LoadError: LoadError: LoadError: syntax: extra token "QueryHelper" after end of expression
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:27 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:17
 [4] include at ./boot.jl:292 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1012
 [6] include(::Module, ::String) at ./sysimg.jl:26
 [7] process_options(::Base.JLOptions) at ./client.jl:334
 [8] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/src/query/helper/typedefs.jl:7
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/src/StructuredQueries.jl:20
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/query/node.jl:3
â”Œ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/StructuredQueries/test/query/query.jl:9.
â”‚ Use `struct` instead.
â”” @ nothing query.jl:9
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/StructuredQueries/test/query/query.jl:4
	[1m[31mFAILED[0m: query/query.jl
LoadError: LoadError: UndefVarError: @query not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:27 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:17
 [4] include at ./boot.jl:292 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1012
 [6] include(::Module, ::String) at ./sysimg.jl:26
 [7] process_options(::Base.JLOptions) at ./client.jl:334
 [8] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/query/query.jl:20
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/query/query.jl:20
â”Œ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/StructuredQueries/test/collect.jl:6.
â”‚ Use `mutable struct` instead.
â”” @ nothing collect.jl:6
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/StructuredQueries/test/collect.jl:4
	[1m[31mFAILED[0m: collect.jl
LoadError: UndefVarError: _collect not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:27 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:17
 [4] include at ./boot.jl:292 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1012
 [6] include(::Module, ::String) at ./sysimg.jl:26
 [7] process_options(::Base.JLOptions) at ./client.jl:334
 [8] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/collect.jl:9
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/StructuredQueries/test/lift.jl:5
WARNING: importing deprecated binding Base.Nullable into TestLift.
	[1m[31mFAILED[0m: lift.jl
LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:27 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:17
 [4] include at ./boot.jl:292 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1012
 [6] include(::Module, ::String) at ./sysimg.jl:26
 [7] process_options(::Base.JLOptions) at ./client.jl:334
 [8] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/lift.jl:32
Test Summary: |
All tests     | No tests
ERROR: LoadError: "Tests failed"
Stacktrace:
 [1] top-level scope at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:35
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1012
 [4] include(::Module, ::String) at ./sysimg.jl:26
 [5] process_options(::Base.JLOptions) at ./client.jl:334
 [6] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl:35
â”Œ Error: ------------------------------------------------------------
â”‚ # Testing failed for StructuredQueries
â”‚   exception =
â”‚    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/StructuredQueries/test/runtests.jl`, ProcessExited(1)) [1]
â”‚    Stacktrace:
â”‚     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
â”‚     [2] pipeline_error(::Base.Process) at ./process.jl:698
â”‚     [3] run(::Cmd) at ./process.jl:660
â”‚     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
â”‚     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
â”‚     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
â”‚     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
â”‚     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
â”‚     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
â”‚     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
â”‚     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
â”‚     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
â”‚     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
â”‚     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
â”‚     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
â”‚     [16] top-level scope
â”‚     [17] eval at ./boot.jl:295 [inlined]
â”‚     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
â”‚     [19] process_options(::Base.JLOptions) at ./client.jl:311
â”‚     [20] _start() at ./client.jl:386
â”” @ Base.Pkg.Entry entry.jl:732
ERROR: StructuredQueries had test errors

>>> End of log
