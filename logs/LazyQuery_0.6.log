>>> 'Pkg.add("LazyQuery")' log
INFO: Cloning cache of ChainRecursive from https://github.com/bramtayl/ChainRecursive.jl.git
INFO: Cloning cache of LazyQuery from https://github.com/bramtayl/LazyQuery.jl.git
INFO: Cloning cache of NumberedLines from https://github.com/bramtayl/NumberedLines.jl.git
INFO: Installing ChainRecursive v0.1.1
INFO: Installing DataArrays v0.6.2
INFO: Installing DataFrames v0.10.1
INFO: Installing DataStructures v0.8.1
INFO: Installing DataValues v0.3.3
INFO: Installing DocStringExtensions v0.4.4
INFO: Installing Documenter v0.17.0
INFO: Installing FileIO v0.7.0
INFO: Installing GZip v0.3.0
INFO: Installing IterableTables v0.7.1
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LazyCall v0.3.0
INFO: Installing LazyContext v0.1.3
INFO: Installing LazyQuery v0.1.3
INFO: Installing MacroTools v0.4.0
INFO: Installing Missings v0.2.9
INFO: Installing NamedTuples v4.0.0
INFO: Installing NumberedLines v0.1.0
INFO: Installing Query v0.7.2
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StatsBase v0.21.0
INFO: Installing TableTraits v0.2.0
INFO: Building SpecialFunctions
INFO: Package database updated

>>> 'Pkg.test("LazyQuery")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1021.25390625 MB free)
Uptime: 53206.0 sec
Load Avg:  0.9677734375  0.962890625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    3127586 s       8210 s     230255 s    1209346 s         37 s
#2  3504 MHz     676229 s        848 s      79768 s    4481593 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - LazyQuery                     0.1.3
39 additional packages:
 - BinDeps                       0.8.8
 - Cairo                         0.5.1
 - ChainRecursive                0.1.1
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.64.0
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.8.1
 - DataValues                    0.3.3
 - DocStringExtensions           0.4.4
 - Documenter                    0.17.0
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - GZip                          0.3.0
 - Graphics                      0.3.0
 - Gtk                           0.13.1
 - IterableTables                0.7.1
 - IteratorInterfaceExtensions   0.0.2
 - LazyCall                      0.3.0
 - LazyContext                   0.1.3
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - NamedTuples                   4.0.0
 - NodeJS                        0.4.0
 - Nullables                     0.0.5
 - NumberedLines                 0.1.0
 - Query                         0.7.2
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.2.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.4.0
 - StatsBase                     0.21.0
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Computing test dependencies for LazyQuery...
INFO: No packages to install, update or remove
INFO: Testing LazyQuery
WARNING: both StatsBase and Compat export "stderr"; uses of it in module DataFrames must be qualified
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:155-188

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @add_to d c = ~b / ¬(sum(a))
        end
4×3 DataFrames.DataFrame
│ Row │ a │ b │ c        │
├─────┼───┼───┼──────────┤
│ 1   │ 1 │ 1 │ 0.166667 │
│ 2   │ 1 │ 2 │ 0.333333 │
│ 3   │ 2 │ 3 │ 0.5      │
│ 4   │ 2 │ 4 │ 0.666667 │

julia> @chain @evaluate begin
            @group d by a
            @add_to it c = ~b / ¬(sum(a))
            @ungroup it
        end
4×4 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │ c    │
├─────┼───┼─────┼───┼──────┤
│ 1   │ 1 │ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1   │ 2 │ 1.0  │
│ 3   │ 2 │ 2   │ 3 │ 0.75 │
│ 4   │ 2 │ 2   │ 4 │ 1.0  │

julia> @evaluate @add_to d a / 2
ERROR: Unable to decompose assignment a / 2
[...]
```

> Subexpression:

    @evaluate begin
         using LazyQuery
         d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
         @add_to d c = ~b / ¬(sum(a))
     end

> Output Diff (REQUIRES COLOR):

4×3 DataFrames.DataFrame
│ Row │ a │ b │ c        │
├─────┼───┼───┼──────────┤
│ 1   │ 1 │ 1 │ 0.166667 │
│ 2   │ 1 │ 2 │ 0.333333 │
│ 3   │ 2 │ 3 │ 0.5      │
│ 4   │ 2 │ 4 │ 0.666667 │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##2#4{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##1#3)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##1#3, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:27
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] model_associative(::Function, ::DataFrames.DataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}, ::Tuple{}, ::Symbol) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:105
 [9] add_to(::DataFrames.DataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:191
 [10] add_to(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:3

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:155-188

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @add_to d c = ~b / ¬(sum(a))
        end
4×3 DataFrames.DataFrame
│ Row │ a │ b │ c        │
├─────┼───┼───┼──────────┤
│ 1   │ 1 │ 1 │ 0.166667 │
│ 2   │ 1 │ 2 │ 0.333333 │
│ 3   │ 2 │ 3 │ 0.5      │
│ 4   │ 2 │ 4 │ 0.666667 │

julia> @chain @evaluate begin
            @group d by a
            @add_to it c = ~b / ¬(sum(a))
            @ungroup it
        end
4×4 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │ c    │
├─────┼───┼─────┼───┼──────┤
│ 1   │ 1 │ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1   │ 2 │ 1.0  │
│ 3   │ 2 │ 2   │ 3 │ 0.75 │
│ 4   │ 2 │ 2   │ 4 │ 1.0  │

julia> @evaluate @add_to d a / 2
ERROR: Unable to decompose assignment a / 2
[...]
```

> Subexpression:

    @chain @evaluate begin
         @group d by a
         @add_to it c = ~b / ¬(sum(a))
         @ungroup it
     end

> Output Diff (REQUIRES COLOR):

4×4 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │ c    │
├─────┼───┼─────┼───┼──────┤
│ 1   │ 1 │ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1   │ 2 │ 1.0  │
│ 3   │ 2 │ 2   │ 3 │ 0.75 │
│ 4   │ 2 │ 2   │ 4 │ 1.0  │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##6#8{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##5#7)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##5#7, ::LazyQuery.MappedDataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:29
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] model_associative(::Function, ::LazyQuery.MappedDataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}, ::Tuple{}, ::Symbol) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:105
 [9] add_to(::LazyQuery.MappedDataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:191
 [10] add_to(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:3

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:117-146

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @make_from d c = ~b / ¬(sum(a))
        end
4×1 DataFrames.DataFrame
│ Row │ c        │
├─────┼──────────┤
│ 1   │ 0.166667 │
│ 2   │ 0.333333 │
│ 3   │ 0.5      │
│ 4   │ 0.666667 │

julia> @chain @evaluate begin
            @group d by a
            @make_from it c = ~b / ¬(sum(a))
            @ungroup it
        end
4×2 DataFrames.DataFrame
│ Row │ a │ c    │
├─────┼───┼──────┤
│ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1.0  │
│ 3   │ 2 │ 0.75 │
│ 4   │ 2 │ 1.0  │
```

> Subexpression:

    @evaluate begin
         using LazyQuery
         d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
         @make_from d c = ~b / ¬(sum(a))
     end

> Output Diff (REQUIRES COLOR):

4×1 DataFrames.DataFrame
│ Row │ c        │
├─────┼──────────┤
│ 1   │ 0.166667 │
│ 2   │ 0.333333 │
│ 3   │ 0.5      │
│ 4   │ 0.666667 │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##2#4{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##1#3)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##1#3, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:27
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] model_associative(::Function, ::DataFrames.DataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}, ::Tuple{}, ::Symbol) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:105
 [9] make_from(::DataFrames.DataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:149
 [10] make_from(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:19

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:117-146

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @make_from d c = ~b / ¬(sum(a))
        end
4×1 DataFrames.DataFrame
│ Row │ c        │
├─────┼──────────┤
│ 1   │ 0.166667 │
│ 2   │ 0.333333 │
│ 3   │ 0.5      │
│ 4   │ 0.666667 │

julia> @chain @evaluate begin
            @group d by a
            @make_from it c = ~b / ¬(sum(a))
            @ungroup it
        end
4×2 DataFrames.DataFrame
│ Row │ a │ c    │
├─────┼───┼──────┤
│ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1.0  │
│ 3   │ 2 │ 0.75 │
│ 4   │ 2 │ 1.0  │
```

> Subexpression:

    @chain @evaluate begin
         @group d by a
         @make_from it c = ~b / ¬(sum(a))
         @ungroup it
     end

> Output Diff (REQUIRES COLOR):

4×2 DataFrames.DataFrame
│ Row │ a │ c    │
├─────┼───┼──────┤
│ 1   │ 1 │ 0.5  │
│ 2   │ 1 │ 1.0  │
│ 3   │ 2 │ 0.75 │
│ 4   │ 2 │ 1.0  │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##6#8{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##5#7)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##5#7, ::LazyQuery.MappedDataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:29
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] model_associative(::Function, ::LazyQuery.MappedDataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}, ::Tuple{}, ::Symbol) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:105
 [9] make_from(::LazyQuery.MappedDataFrame, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:149
 [10] make_from(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:19

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:198-230

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @rows_from d wherever ~b > ¬(mean(b))
        end
2×2 DataFrames.DataFrame
│ Row │ a │ b │
├─────┼───┼───┤
│ 1   │ 2 │ 3 │
│ 2   │ 2 │ 4 │

julia> @chain @evaluate begin
            @group d by a
            @rows_from it wherever ~b > ¬(mean(b))
            @ungroup it
        end
2×3 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │
├─────┼───┼─────┼───┤
│ 1   │ 1 │ 1   │ 2 │
│ 2   │ 2 │ 2   │ 4 │

julia> @evaluate @rows_from d at [1, 3]
2×2 DataFrames.DataFrame
│ Row │ a │ b │
├─────┼───┼───┤
│ 1   │ 1 │ 1 │
│ 2   │ 2 │ 3 │
```

> Subexpression:

    @evaluate begin
         using LazyQuery
         d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
         @rows_from d wherever ~b > ¬(mean(b))
     end

> Output Diff (REQUIRES COLOR):

2×2 DataFrames.DataFrame
│ Row │ a │ b │
├─────┼───┼───┤
│ 1   │ 2 │ 3 │
│ 2   │ 2 │ 4 │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##2#4{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##1#3)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##1#3, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:27
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] rows_from(::DataFrames.DataFrame, ::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:233
 [9] rows_from(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:39

=====[End Error]===============================
=====[Test Error]==============================

> Location: /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:198-230

> Code block:

```jldoctest
julia> using LazyQuery

julia> @new_environment;

julia> @evaluate begin
            using LazyQuery
            d = DataFrame(a = [1, 1, 2, 2], b = [1, 2, 3, 4])
            @rows_from d wherever ~b > ¬(mean(b))
        end
2×2 DataFrames.DataFrame
│ Row │ a │ b │
├─────┼───┼───┤
│ 1   │ 2 │ 3 │
│ 2   │ 2 │ 4 │

julia> @chain @evaluate begin
            @group d by a
            @rows_from it wherever ~b > ¬(mean(b))
            @ungroup it
        end
2×3 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │
├─────┼───┼─────┼───┤
│ 1   │ 1 │ 1   │ 2 │
│ 2   │ 2 │ 2   │ 4 │

julia> @evaluate @rows_from d at [1, 3]
2×2 DataFrames.DataFrame
│ Row │ a │ b │
├─────┼───┼───┤
│ 1   │ 1 │ 1 │
│ 2   │ 2 │ 3 │
```

> Subexpression:

    @chain @evaluate begin
         @group d by a
         @rows_from it wherever ~b > ¬(mean(b))
         @ungroup it
     end

> Output Diff (REQUIRES COLOR):

2×3 DataFrames.DataFrame
│ Row │ a │ a_1 │ b │
├─────┼───┼─────┼───┤
│ 1   │ 1 │ 1   │ 2 │
│ 2   │ 2 │ 2   │ 4 │ERROR: UndefVarError: ¬ not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:32 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:111 [inlined]
 [4] _broadcast!(::##6#8{DataFrames.DataFrame}, ::DataArrays.DataArray{Any,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:67
 [5] (::##5#7)(::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:81
 [6] apply(::##5#7, ::LazyQuery.MappedDataFrame) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:29
 [7] evaluate(::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyContext/src/eval.jl:121
 [8] rows_from(::LazyQuery.MappedDataFrame, ::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/table_backend.jl:233
 [9] rows_from(::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Symbol}, ::LazyContext.WithContext{LazyContext.Environment,Expr}) at /home/vagrant/.julia/v0.6/LazyQuery/src/basic_verbs.jl:39

=====[End Error]===============================
 > checking footnote links.
 > checking external URLs:
   - index.md
      200 https://github.com/davidanthoff/Query.jl
      200 https://github.com/bramtayl/LazyContext.jl
      200 https://github.com/bramtayl/LazyCall.jl
      200 https://github.com/bramtayl/ChainRecursive.jl
      200 https://github.com/bramtayl/ChainRecursive.jl
Documenter: populating indices.
ERROR: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Builder.jl:202
 [2] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document, ::Vararg{Documenter.Documents.Document,N} where N) at /home/vagrant/.julia/v0.6/Documenter/src/Selectors.jl:168
 [3] cd(::Documenter.##2#3{Documenter.Documents.Document}, ::String) at ./file.jl:70
 [4] #makedocs#1(::Bool, ::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/Documenter/src/Documenter.jl:204
 [5] (::Documenter.#kw##makedocs)(::Array{Any,1}, ::Documenter.#makedocs) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/LazyQuery/test/runtests.jl, in expression starting on line 4
==============================[ ERROR: LazyQuery ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/LazyQuery/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: LazyQuery had test errors

>>> End of log
