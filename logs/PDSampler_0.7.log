>>> 'Pkg.add("PDSampler")' log
[ Info: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
[ Info: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
[ Info: Cloning cache of DiffBase from https://github.com/JuliaDiff/DiffBase.jl.git
[ Info: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
[ Info: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
[ Info: Cloning cache of Formatting from https://github.com/JuliaIO/Formatting.jl.git
[ Info: Cloning cache of HierarchicalMatrices from https://github.com/MikaelSlevinsky/HierarchicalMatrices.jl.git
[ Info: Cloning cache of Klara from https://github.com/JuliaStats/Klara.jl.git
[ Info: Cloning cache of LowRankApprox from https://github.com/JuliaMatrices/LowRankApprox.jl.git
[ Info: Cloning cache of PDSampler from https://github.com/alan-turing-institute/PDSampler.jl.git
[ Info: Cloning cache of ReverseDiff from https://github.com/JuliaDiff/ReverseDiff.jl.git
[ Info: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
[ Info: Installing AbstractFFTs v0.2.1
[ Info: Installing ApproxFun v0.7.0
[ Info: Installing BandedMatrices v0.3.1
[ Info: Installing BinDeps v0.8.5
[ Info: Installing Calculus v0.2.2
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DiffBase v0.2.0
[ Info: Installing Distributions v0.15.0
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing FFTW v0.1.2
[ Info: Installing FastGaussQuadrature v0.3.0
[ Info: Installing FastTransforms v0.2.2
[ Info: Installing Formatting v0.3.0
[ Info: Installing ForwardDiff v0.4.2
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing HierarchicalMatrices v0.0.2
[ Info: Installing IntervalSets v0.1.1
[ Info: Installing Klara v0.9.2
[ Info: Installing LowRankApprox v0.1.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing PDMats v0.8.0
[ Info: Installing PDSampler v0.0.1
[ Info: Installing Polynomials v0.2.0
[ Info: Installing ProgressMeter v0.5.3
[ Info: Installing QuadGK v0.2.0
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing Reexport v0.1.0
[ Info: Installing ReverseDiff v0.1.5
[ Info: Installing Rmath v0.3.1
[ Info: Installing SHA v0.5.3
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing ToeplitzMatrices v0.3.0
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
[ Info: Building FFTW
┌ Error: ------------------------------------------------------------
│ # Build failed for FFTW
│   exception =
│    LoadError: LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope at /home/vagrant/.julia/v0.7/FFTW/deps/build.jl:34
│     [7] include at ./boot.jl:292 [inlined]
│     [8] include_relative(::Module, ::String) at ./loading.jl:1011
│     [9] include at ./sysimg.jl:26 [inlined]
│     [10] include(::String) at ./loading.jl:1045
│     [11] top-level scope
│     [12] eval at ./boot.jl:295 [inlined]
│     [13] eval at ./sysimg.jl:71 [inlined]
│     [14] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [15] #2 at ./none:12 [inlined]
│     [16] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [17] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [18] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [19] top-level scope
│     [20] eval at ./boot.jl:295 [inlined]
│     [21] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [22] process_options(::Base.JLOptions) at ./client.jl:301
│     [23] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/FFTW/deps/build_fftw.jl:1
│    in expression starting at /home/vagrant/.julia/v0.7/FFTW/deps/build.jl:34
└ @ Main none:15
[ Info: Building Rmath
┌ Error: ------------------------------------------------------------
│ # Build failed for Rmath
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:6
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions, Rmath and FFTW had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions", "Rmath", "FFTW")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("PDSampler")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     253219 s         98 s      14535 s     106345 s          5 s
       #2  3499 MHz      38812 s         42 s       5469 s     390217 s          0 s
       
  Memory: 2.93927001953125 GB (826.17578125 MB free)
  Uptime: 4434.0 sec
  Load Avg:  0.99560546875  0.98681640625  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - PDSampler                     0.0.1
38 additional packages:
 - AbstractFFTs                  0.2.1
 - ApproxFun                     0.7.0
 - BandedMatrices                0.3.1
 - BinDeps                       0.8.5
 - Calculus                      0.2.2
 - Compat                        0.48.0
 - DataStructures                0.7.4
 - DiffBase                      0.2.0
 - Distributions                 0.15.0
 - DualNumbers                   0.3.0
 - FFTW                          0.1.2
 - FastGaussQuadrature           0.3.0
 - FastTransforms                0.2.2
 - Formatting                    0.3.0
 - ForwardDiff                   0.4.2
 - FunctionWrappers              0.1.0
 - HierarchicalMatrices          0.0.2
 - IntervalSets                  0.1.1
 - Klara                         0.9.2
 - LowRankApprox                 0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - PDMats                        0.8.0
 - Polynomials                   0.2.0
 - ProgressMeter                 0.5.3
 - QuadGK                        0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - ReverseDiff                   0.1.5
 - Rmath                         0.3.1
 - SHA                           0.5.3
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - StatsFuns                     0.5.0
 - ToeplitzMatrices              0.3.0
 - URIParser                     0.3.0
[ Info: Testing PDSampler
┌ Warning: Deprecated syntax `parametric method syntax DiffResult{V, O}(value::V, derivs::NTuple{O, Any})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:22.
│ Use `DiffResult(value::V, derivs::NTuple{O, Any}) where {V, O}` instead.
└ @ nothing results.jl:22
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{O, V, D}(::Type{DiffResult{O, V, D}})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:81.
│ Use `Base.eltype(#unused#::Type{DiffResult{O, V, D}}) where {O, V, D}` instead.
└ @ nothing results.jl:81
┌ Warning: Deprecated syntax `parametric method syntax derivative{i}(r::DiffResult, ::Type{Val{i}} = Val{1})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:127.
│ Use `derivative(r::DiffResult, #s1::Type{Val{i}} = Val{1}) where i` instead.
└ @ nothing results.jl:127
┌ Warning: Deprecated syntax `parametric method syntax derivative!{O, i}(r::DiffResult{O}, x::Number, ::Type{Val{i}} = Val{1})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:135.
│ Use `derivative!(r::DiffResult{O}, x::Number, #s1::Type{Val{i}} = Val{1}) where {O, i}` instead.
└ @ nothing results.jl:135
┌ Warning: Deprecated syntax `parametric method syntax derivative!{i}(r::DiffResult, x::AbstractArray, ::Type{Val{i}} = Val{1})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:143.
│ Use `derivative!(r::DiffResult, x::AbstractArray, #s3::Type{Val{i}} = Val{1}) where i` instead.
└ @ nothing results.jl:143
┌ Warning: Deprecated syntax `parametric method syntax derivative!{O, i}(f, r::DiffResult{O}, x::Number, ::Type{Val{i}} = Val{1})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:154.
│ Use `derivative!(f, r::DiffResult{O}, x::Number, #s3::Type{Val{i}} = Val{1}) where {O, i}` instead.
└ @ nothing results.jl:154
┌ Warning: Deprecated syntax `parametric method syntax derivative!{i}(f, r::DiffResult, x::AbstractArray, ::Type{Val{i}} = Val{1})` around /home/vagrant/.julia/v0.7/DiffBase/src/results.jl:162.
│ Use `derivative!(f, r::DiffResult, x::AbstractArray, #s3::Type{Val{i}} = Val{1}) where i` instead.
└ @ nothing results.jl:162
WARNING: importing deprecated binding Base.det into DiffBase.
WARNING: importing deprecated binding Base.logdet into PDMats.
WARNING: importing deprecated binding Base.diag into PDMats.
WARNING: importing deprecated binding Base.diagm into PDMats.
WARNING: importing deprecated binding Base.eigmax into PDMats.
WARNING: importing deprecated binding Base.eigmin into PDMats.
ERROR: LoadError: UndefVarError: BLAS not defined
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1011
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:295 [inlined]
 [6] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PDMats/src/PDMats.jl:39
ERROR: LoadError: Failed to precompile PDMats to /home/vagrant/.julia/lib/v0.7/PDMats.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:295 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Distributions/src/Distributions.jl:5
ERROR: LoadError: Failed to precompile Distributions to /home/vagrant/.julia/lib/v0.7/Distributions.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:295 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Klara/src/Klara.jl:6
ERROR: LoadError: Failed to precompile Klara to /home/vagrant/.julia/lib/v0.7/Klara.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:295 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PDSampler/src/PDSampler.jl:6
ERROR: LoadError: Failed to precompile PDSampler to /home/vagrant/.julia/lib/v0.7/PDSampler.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/PDSampler/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for PDSampler
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PDSampler/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: PDSampler had test errors

>>> End of log
