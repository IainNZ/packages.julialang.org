>>> 'Pkg.add("BusinessDays")' log
[ Info: Cloning cache of BusinessDays from https://github.com/felipenoris/BusinessDays.jl.git
[ Info: Installing BusinessDays v0.8.0
[ Info: Package database updated

>>> 'Pkg.test("BusinessDays")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1182394 s        115 s      68423 s     362015 s         13 s
       #2  3499 MHz     265590 s         42 s      28428 s    1575017 s          0 s
       
  Memory: 2.93927001953125 GB (959.4765625 MB free)
  Uptime: 19006.0 sec
  Load Avg:  0.98876953125  0.9853515625  1.03466796875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BusinessDays                  0.8.0
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Testing BusinessDays
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/runtests.jl:2
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/src/BusinessDays.jl:11
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/runtests.jl:4
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Type(::DataType)` should be defined instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/easter-min-max.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/easter-min-max.jl:4
┌ Warning: Deprecated syntax `implicit assignment to global variable `month_min``.
│ Use `global month_min` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `month_max``.
│ Use `global month_max` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `date_min``.
│ Use `global date_min` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `date_max``.
│ Use `global date_max` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
##########################
 Using cache: false
##########################
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:14
└ @ BusinessDays holidaycalendar.jl:14
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:527
└ @ Core <missing>:527
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:549
└ @ Core <missing>:549
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:571
└ @ Core <missing>:571
Timing composite calendar bdays calculation
  0.000123 seconds (149 allocations: 10.835 KiB)
Timing single bdays calculation
  0.003258 seconds (5 allocations: 176 bytes)
Timing 100 bdays calculations
  0.321252 seconds (100 allocations: 1.563 KiB)
Timing cache creation
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.BRSettlement, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.BRSettlement, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
  0.037033 seconds (7.29 k allocations: 730.779 KiB)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::BusinessDays.BRSettlement, ::Array{Date,1}, ::Array{Date,1}) at bdaysvecfun.jl:79
└ @ BusinessDays bdaysvecfun.jl:79
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = isbday(::BusinessDays.BRSettlement, ::Array{Date,1}) at bdaysvecfun.jl:6
└ @ BusinessDays bdaysvecfun.jl:6
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #tobday#5(::Bool, ::Function, ::Array{HolidayCalendar,1}, ::Array{Date,1}) at bdaysvecfun.jl:49
└ @ BusinessDays bdaysvecfun.jl:49
Timing vectorized functions (vector length 7306)
  2.336035 seconds (98 allocations: 69.031 KiB)
  2.707165 seconds (7.87 k allocations: 525.667 KiB)
  2.074984 seconds (1.17 k allocations: 128.381 KiB)
  0.005455 seconds (99 allocations: 19.172 KiB)
  0.005316 seconds (101 allocations: 19.203 KiB)
  0.005320 seconds (101 allocations: 19.203 KiB)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #tobday#4(::Bool, ::Function, ::BusinessDays.BRSettlement, ::Array{Date,1}) at bdaysvecfun.jl:34
└ @ BusinessDays bdaysvecfun.jl:34
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::Array{HolidayCalendar,1}, ::Array{Date,1}, ::Array{Date,1}) at bdaysvecfun.jl:95
└ @ BusinessDays bdaysvecfun.jl:95
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = isbday(::Array{HolidayCalendar,1}, ::Array{Date,1}) at bdaysvecfun.jl:21
└ @ BusinessDays bdaysvecfun.jl:21
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = advancebdays(::BusinessDays.BRSettlement, ::Date, ::Array{Int64,1}) at bdaysvecfun.jl:108
└ @ BusinessDays bdaysvecfun.jl:108
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = listholidays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:10
└ @ BusinessDays query.jl:10
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = listbdays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:32
└ @ BusinessDays query.jl:32
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = listbdays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:28
└ @ BusinessDays query.jl:28
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::BusinessDays.BRSettlement, ::Date, ::Array{Date,1}) at bdaysvecfun.jl:64
└ @ BusinessDays bdaysvecfun.jl:64
##########################
 Using cache: true
##########################
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USSettlement, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USSettlement, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.UKSettlement, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.UKSettlement, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::CompositeHolidayCalendar, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::CompositeHolidayCalendar, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USNYSE, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USNYSE, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USGovernmentBond, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.USGovernmentBond, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:527
└ @ Core <missing>:527
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:549
└ @ Core <missing>:549
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:571
└ @ Core <missing>:571
Timing composite calendar bdays calculation
  0.000028 seconds (11 allocations: 272 bytes)
Timing single bdays calculation
  0.000021 seconds (9 allocations: 240 bytes)
Timing 100 bdays calculations
  0.000131 seconds (500 allocations: 7.813 KiB)
a million...
  0.326055 seconds (5.00 M allocations: 76.294 MiB, 2.19% gc time)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
Timing vectorized functions (vector length 7306)
  0.004061 seconds (29.32 k allocations: 525.656 KiB)
  0.003997 seconds (29.32 k allocations: 525.688 KiB)
  0.004527 seconds (29.32 k allocations: 525.688 KiB)
  0.003013 seconds (99 allocations: 19.172 KiB)
  0.002916 seconds (101 allocations: 19.203 KiB)
  0.002988 seconds (101 allocations: 19.203 KiB)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/perftests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/perftests.jl:4
Perftests
  0.015270 seconds (1.58 k allocations: 397.951 KiB)
  0.000013 seconds (9 allocations: 240 bytes)
  0.000573 seconds (5.00 k allocations: 78.125 KiB)
  0.018101 seconds (8.00 k allocations: 125.000 KiB)
  0.016212 seconds (8.00 k allocations: 125.000 KiB)
type
  0.000340 seconds (5.00 k allocations: 78.125 KiB)
  0.002791 seconds (4.10 k allocations: 82.266 KiB)
  0.016873 seconds (7.10 k allocations: 137.094 KiB, 82.10% gc time)
sym
  0.016185 seconds (8.00 k allocations: 125.000 KiB)
  0.002837 seconds (4.10 k allocations: 82.297 KiB)
  0.017187 seconds (7.10 k allocations: 137.094 KiB)
str
  0.029180 seconds (8.00 k allocations: 125.000 KiB)
  0.004481 seconds (4.10 k allocations: 82.297 KiB)
  0.033763 seconds (7.10 k allocations: 137.094 KiB)
initcache type
  0.014047 seconds (196 allocations: 328.703 KiB)
initcache sym
  0.014709 seconds (206 allocations: 328.859 KiB)
initcache str
  0.014267 seconds (206 allocations: 328.859 KiB)
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::TestCalendar, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::TestCalendar, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:14
└ @ BusinessDays holidaycalendar.jl:14
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:15
└ @ BusinessDays holidaycalendar.jl:15
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.CanadaSettlement, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.CanadaSettlement, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.CanadaTSX, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.CanadaTSX, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.WeekendsOnly, ::Date, ::Date) at bdayscache.jl:61
└ @ BusinessDays bdayscache.jl:61
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _createbdayscache(::BusinessDays.WeekendsOnly, ::Date, ::Date) at bdayscache.jl:62
└ @ BusinessDays bdayscache.jl:62
Returns false: false
Returns true: true
[ Info: BusinessDays tests passed

>>> End of log
