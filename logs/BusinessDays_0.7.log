>>> 'Pkg.add("BusinessDays")' log
[ Info: Cloning cache of BusinessDays from https://github.com/felipenoris/BusinessDays.jl.git
[ Info: Installing BusinessDays v0.8.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of BusinessDays
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BusinessDays")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1292376 s         74 s      67637 s     334212 s         13 s
       #2  3500 MHz     276774 s         95 s      29024 s    1649919 s          0 s
       
  Memory: 2.93927001953125 GB (820.95703125 MB free)
  Uptime: 19906.0 sec
  Load Avg:  0.9365234375  0.97021484375  0.955078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BusinessDays                  0.8.1
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing BusinessDays
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/runtests.jl:2
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/src/BusinessDays.jl:11
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/runtests.jl:4
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Type(::DataType)` should be defined instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/easter-min-max.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/easter-min-max.jl:4
┌ Warning: Deprecated syntax `implicit assignment to global variable `month_min``.
│ Use `global month_min` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `month_max``.
│ Use `global month_max` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `date_min``.
│ Use `global date_min` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `date_max``.
│ Use `global date_max` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `y``.
│ Use `global y` instead.
└ @ nothing none:0
##########################
 Using cache: false
##########################
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:14
└ @ BusinessDays holidaycalendar.jl:14
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:527
└ @ Core <missing>:527
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:549
└ @ Core <missing>:549
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:571
└ @ Core <missing>:571
Timing composite calendar bdays calculation
  0.000040 seconds (150 allocations: 10.851 KiB)
Timing single bdays calculation
  0.003228 seconds (5 allocations: 176 bytes)
Timing 100 bdays calculations
  0.324917 seconds (100 allocations: 1.563 KiB)
Timing cache creation
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.BRSettlement, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.BRSettlement, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
  0.081292 seconds (6.97 k allocations: 704.514 KiB, 33.65% gc time)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::BusinessDays.BRSettlement, ::Array{Date,1}, ::Array{Date,1}) at bdaysvecfun.jl:79
└ @ BusinessDays bdaysvecfun.jl:79
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = isbday(::BusinessDays.BRSettlement, ::Array{Date,1}) at bdaysvecfun.jl:6
└ @ BusinessDays bdaysvecfun.jl:6
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #tobday#5(::Bool, ::Function, ::Array{HolidayCalendar,1}, ::Array{Date,1}) at bdaysvecfun.jl:49
└ @ BusinessDays bdaysvecfun.jl:49
Timing vectorized functions (vector length 7306)
  3.541401 seconds (98 allocations: 69.031 KiB)
  2.967993 seconds (7.59 k allocations: 514.214 KiB)
  3.003838 seconds (767 allocations: 106.256 KiB)
  0.001524 seconds (99 allocations: 19.172 KiB)
  0.001601 seconds (101 allocations: 19.203 KiB)
  0.001324 seconds (101 allocations: 19.203 KiB)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #tobday#4(::Bool, ::Function, ::BusinessDays.BRSettlement, ::Array{Date,1}) at bdaysvecfun.jl:34
└ @ BusinessDays bdaysvecfun.jl:34
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::Array{HolidayCalendar,1}, ::Array{Date,1}, ::Array{Date,1}) at bdaysvecfun.jl:95
└ @ BusinessDays bdaysvecfun.jl:95
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = isbday(::Array{HolidayCalendar,1}, ::Array{Date,1}) at bdaysvecfun.jl:21
└ @ BusinessDays bdaysvecfun.jl:21
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = advancebdays(::BusinessDays.BRSettlement, ::Date, ::Array{Int64,1}) at bdaysvecfun.jl:108
└ @ BusinessDays bdaysvecfun.jl:108
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = listholidays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:10
└ @ BusinessDays query.jl:10
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = listbdays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:32
└ @ BusinessDays query.jl:32
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = listbdays(::BusinessDays.BRSettlement, ::Date, ::Date) at query.jl:28
└ @ BusinessDays query.jl:28
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = bdays(::BusinessDays.BRSettlement, ::Date, ::Array{Date,1}) at bdaysvecfun.jl:64
└ @ BusinessDays bdaysvecfun.jl:64
##########################
 Using cache: true
##########################
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USSettlement, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USSettlement, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.UKSettlement, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.UKSettlement, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::CompositeHolidayCalendar, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::CompositeHolidayCalendar, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USNYSE, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USNYSE, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USGovernmentBond, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.USGovernmentBond, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:527
└ @ Core <missing>:527
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:549
└ @ Core <missing>:549
┌ Warning: `contains(eq::Function, itr, x)` is deprecated, use `any((y->begin
│             eq(y, x)
│         end), itr)` instead.
│   caller = top-level scope at <missing>:571
└ @ Core <missing>:571
Timing composite calendar bdays calculation
  0.000022 seconds (11 allocations: 272 bytes)
Timing single bdays calculation
  0.000031 seconds (9 allocations: 240 bytes)
Timing 100 bdays calculations
  0.000085 seconds (500 allocations: 7.813 KiB)
a million...
  0.527187 seconds (5.00 M allocations: 76.294 MiB, 1.47% gc time)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
Timing vectorized functions (vector length 7306)
  0.005403 seconds (29.32 k allocations: 525.656 KiB, 19.40% gc time)
  0.004869 seconds (29.32 k allocations: 525.688 KiB)
  0.006057 seconds (29.32 k allocations: 525.688 KiB)
  0.001206 seconds (99 allocations: 19.172 KiB)
  0.001311 seconds (101 allocations: 19.203 KiB)
  0.001615 seconds (101 allocations: 19.203 KiB)
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/perftests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BusinessDays/test/perftests.jl:4
Perftests
  0.002565 seconds (198 allocations: 14.011 KiB)
  0.000009 seconds (9 allocations: 240 bytes)
  0.001900 seconds (5.00 k allocations: 78.125 KiB)
  0.026603 seconds (8.00 k allocations: 125.000 KiB)
  0.028665 seconds (8.00 k allocations: 125.000 KiB)
type
  0.000605 seconds (5.00 k allocations: 78.125 KiB)
  0.000646 seconds (4.10 k allocations: 82.266 KiB)
  0.000882 seconds (7.10 k allocations: 137.094 KiB)
sym
  0.028683 seconds (8.00 k allocations: 125.000 KiB)
  0.000862 seconds (4.10 k allocations: 82.297 KiB)
  0.030707 seconds (7.10 k allocations: 137.094 KiB)
str
  0.036422 seconds (8.00 k allocations: 125.000 KiB)
  0.002321 seconds (4.10 k allocations: 82.297 KiB)
  0.032853 seconds (7.10 k allocations: 137.094 KiB)
initcache type
  0.007726 seconds (198 allocations: 328.750 KiB)
initcache sym
  0.007050 seconds (206 allocations: 328.875 KiB)
initcache str
  0.007013 seconds (206 allocations: 328.875 KiB)
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::TestCalendar, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::TestCalendar, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:14
└ @ BusinessDays holidaycalendar.jl:14
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = symtocalendar(::Symbol) at holidaycalendar.jl:15
└ @ BusinessDays holidaycalendar.jl:15
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.CanadaSettlement, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.CanadaSettlement, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.CanadaTSX, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.CanadaTSX, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.WeekendsOnly, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::BusinessDays.WeekendsOnly, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
Returns false: false
Returns true: true
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::GenericHolidayCalendar, ::Date, ::Date) at bdayscache.jl:68
└ @ BusinessDays bdayscache.jl:68
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = _create_bdays_cache_arrays(::GenericHolidayCalendar, ::Date, ::Date) at bdayscache.jl:69
└ @ BusinessDays bdayscache.jl:69
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = advancebdays(::GenericHolidayCalendar, ::Date, ::Array{Int64,1}) at bdaysvecfun.jl:108
└ @ BusinessDays bdaysvecfun.jl:108
┌ Warning: `colon(start::T, stop::T) where T <: Date` is deprecated, use `start:Day(1):stop` instead.
│   caller = listholidays(::GenericHolidayCalendar, ::Date, ::Date) at query.jl:10
└ @ BusinessDays query.jl:10
a million with GenericHolidayCalendar...
  0.164886 seconds (5.00 M allocations: 76.294 MiB, 6.50% gc time)
[ Info: BusinessDays tests passed

>>> End of log
