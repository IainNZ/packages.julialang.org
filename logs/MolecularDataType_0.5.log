>>> 'Pkg.add("MolecularDataType")' log
INFO: Cloning cache of MolecularDataType from https://github.com/UMOL/MolecularDataType.jl.git
INFO: Installing MolecularDataType v0.0.2
INFO: Package database updated

>>> 'Pkg.test("MolecularDataType")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (769.54296875 MB free)
Uptime: 6154.0 sec
Load Avg:  1.0029296875  1.0146484375  1.025390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     295898 s        106 s      39518 s     223119 s         11 s
#2  3499 MHz     100086 s         39 s      17118 s     481644 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - MolecularDataType             0.0.2
1 additional packages:
 - Compat                        0.21.0
INFO: Testing MolecularDataType
----------------------------------------
Test constructor_2 for type MolecularSystem


VERIFIED! constructor_2 for type MolecularSystem
----------------------------------------


-----------------------------------------
Test clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

test single clone

VERIFIED! clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

-----------------------------------------
-----------------------------------------
Test clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

test batch clone

VERIFIED! clone(obj; :fn_residue_id=...) for AbstractMolecularContainer

-----------------------------------------
---------------------------------
Test fuse() for MolecularSystem

merge 2 molecular systems

VERIFIED! fuse() for MolecularSystem

---------------------------------
--------------------------------------------------
Test mutate!(obj::MolecularDataType.MolecularSystem, :coordinate, ...)

VERIFIED! mutate!(obj::MolecularDataType.MolecularSystem, :coordinate, ...)

--------------------------------------------------
INFO: MolecularDataType tests passed

>>> End of log
