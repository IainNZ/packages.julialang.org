>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1138.01953125 MB free)
Uptime: 45036.0 sec
Load Avg:  0.9970703125  0.9853515625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2699160 s       4808 s     210846 s     913030 s          8 s
#2  3499 MHz     568137 s         42 s      71809 s    3797717 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - KrylovMethods                 0.4.0
2 additional packages:
 - Compat                        0.69.0
 - Nullables                     0.0.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/JuliaMatrices/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.4.0
INFO: Installing MatrixDepot v0.6.0
INFO: Testing KrylovMethods
=== bicgstb ===
iter	 relres
  1	1.01e-01
  2	8.16e-03
  3	8.11e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.16e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.07e-07.
=== block bicgstb ===
iter	 relres
  1	8.25e-02
  2	1.86e-02
  3	1.23e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.86e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.28e-07.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	6.42e-02
cg iterated maxIter (=1) times but reached only residual norm 6.42e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.44e-06.
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:57
 [3] computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
=== blockcg ===
iter	max(relres)
WARNING: isfinite(x::AbstractArray{T}) where T <: Number is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:57
 [3] getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
  1	6.19e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.19e-16.
=== blockcg ===
iter	max(relres)
  1	3.23e-15
blockCG iterated maxIter (=1) times but reached only residual norm 3.23e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.39e-01
  3	1.67e-01
  4	1.25e-01
  5	1.02e-01
  6	6.96e-02
  7	3.92e-02
  8	2.04e-02
  9	9.60e-03
 10	4.29e-03
 11	1.95e-03
 12	8.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.56e-04.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.39e-01
  3	1.67e-01
  4	1.25e-01
  5	1.02e-01
  6	6.96e-02
  7	3.92e-02
  8	2.04e-02
  9	9.60e-03
 10	4.29e-03
 11	1.95e-03
 12	8.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.56e-04.
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.83e+01	6.23e-01	9.58e+00
  2	5.43e+00	8.01e-01	9.50e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.43e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.37e-09.
=== gmres ===
iter	 relres

  1	2.7e-01 8.8e-02 2.5e-02 	 2.5e-02
  2	8.0e-03 2.7e-03 7.4e-04 	 7.4e-04
  3	2.3e-04 7.7e-05 2.4e-05 	 2.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.69e-07.
Givens rotation for v=[0.0,-1.3919223737747355]
Givens rotation for v=[1.4732450501846572,0.0]
Givens rotation for v=[1.2279292435037061,-0.259531474077583]
=== Testing Lanczos Bidiagonalization ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.60e-03.
ssor achieved desired tolerance at iteration 38. Residual norm is 9.87e-03.
cg achieved desired tolerance at iteration 54. Residual norm is 7.36e-13.
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.47e-02
  3	4.01e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.01e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.53e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.77e-03.
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.13e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.97e+00.
minres iterated maxIter (=1) times but reached only residual norm 3.00e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.00e-01	1.67e+00	6.57e+00		1.15e+00
2	3.71e-02	7.72e-02	6.57e+00		1.21e+00
3	1.35e-03	1.14e-03	7.29e+00		1.34e+00
4	5.52e-05	3.13e-05	7.29e+00		1.71e+00
5	2.46e-18	1.85e-30	7.29e+00		1.71e+00
minres converged at iteration 5. |A r_k|=1.85e-30 and |r_k|=2.46e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.60e-02	5.42e-01	5.51e+00		1.02e+00
2	6.95e-03	9.07e-03	6.96e+00		1.28e+00
3	3.91e-04	4.96e-04	7.00e+00		1.29e+00
4	7.10e-06	1.79e-06	7.00e+00		1.64e+00
5	9.50e-19	2.16e-30	7.00e+00		1.64e+00
minres converged at iteration 5. |A r_k|=2.16e-30 and |r_k|=9.50e-19.
test stop by condlim
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:57
 [3] fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 [4] fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:22 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:20 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 1
The estimated condition number (=2.96e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.38e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
Test Summary: | Pass  Total
KrylovMethods |  160    160
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.4.0
INFO: Removing MatrixDepot v0.6.0

>>> End of log
