>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1309.625 MB free)
Uptime: 43019.0 sec
Load Avg:  0.986328125  0.97705078125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2564640 s       5627 s     130181 s     977343 s         32 s
#2  3500 MHz     559784 s       1235 s      54504 s    3615880 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - KrylovMethods                 0.4.0
17 additional packages:
 - BinDeps                       0.8.6
 - Cairo                         0.4.0
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.53.0
 - FixedPointNumbers             0.4.6
 - Graphics                      0.2.0
 - Gtk                           0.13.1
 - NaNMath                       0.3.1
 - NodeJS                        0.2.0
 - Nullables                     0.0.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.2.0
 - SHA                           0.5.6
 - URIParser                     0.3.0
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/JuliaMatrices/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods

WARNING: deprecated syntax "abstract MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:312.
Use "abstract type MatrixGenerator end" instead.

WARNING: deprecated syntax "abstract FunctionName<:MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:313.
Use "abstract type FunctionName<:MatrixGenerator end" instead.

WARNING: deprecated syntax "abstract Group<:MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:314.
Use "abstract type Group<:MatrixGenerator end" instead.
=== bicgstb ===
iter	 relres
  1	7.86e-02
  2	1.44e-02
  3	7.33e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.44e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 8.30e-07.
=== block bicgstb ===
iter	 relres
  1	9.60e-02
  2	1.18e-01
  3	1.28e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.18e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.37e-07.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.58e-01
cg iterated maxIter (=1) times but reached only residual norm 2.58e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.41e-06.
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:57
 [3] computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
=== blockcg ===
iter	max(relres)
WARNING: isfinite(x::AbstractArray{T}) where T <: Number is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:57
 [3] getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
  1	5.42e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.42e-16.
=== blockcg ===
iter	max(relres)
  1	7.21e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.21e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.32e-01
  3	1.68e-01
  4	1.33e-01
  5	9.56e-02
  6	6.01e-02
  7	3.15e-02
  8	1.40e-02
  9	6.55e-03
 10	3.28e-03
 11	1.50e-03
 12	6.74e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.74e-04.
=== blockcg ===
iter	max(relres)
  1	4.09e-01
  2	2.32e-01
  3	1.68e-01
  4	1.33e-01
  5	9.56e-02
  6	6.01e-02
  7	3.15e-02
  8	1.40e-02
  9	6.55e-03
 10	3.28e-03
 11	1.50e-03
 12	6.74e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.74e-04.
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.22e+01	7.14e-01	9.91e+00
  2	1.38e+00	8.09e-01	9.86e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.38e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.82e-11.
=== gmres ===
iter	 relres

  1	2.9e-01 8.7e-02 2.4e-02 	 2.4e-02
  2	7.3e-03 2.3e-03 7.9e-04 	 7.9e-04
  3	2.8e-04 9.4e-05 3.0e-05 	 3.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.77e-07.
Givens rotation for v=[0.0,-1.9988849257838834]
Givens rotation for v=[0.6190615514264068,0.0]
Givens rotation for v=[-1.138077274364213,-0.4267122508201681]
=== Testing Lanczos Bidiagonalization ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.98e-03.
ssor achieved desired tolerance at iteration 59. Residual norm is 9.88e-03.
cg achieved desired tolerance at iteration 53. Residual norm is 9.03e-13.
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.69e-02
  3	4.20e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.20e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.55e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.41e-03.
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.09e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.59e+00.
minres iterated maxIter (=1) times but reached only residual norm 3.95e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.95e-01	5.79e+00	1.65e+01		1.01e+00
2	1.02e-01	3.38e-01	1.65e+01		2.68e+00
3	8.09e-03	9.29e-03	1.65e+01		2.68e+00
4	1.11e-04	1.44e-05	1.65e+01		3.98e+00
5	5.44e-07	2.65e-08	1.65e+01		3.98e+00
6	9.81e-09	1.80e-09	1.65e+01		3.98e+00
7	3.75e-11	1.44e-12	1.65e+01		3.98e+00
8	9.72e-14	2.30e-15	1.65e+01		4.11e+00
minres converged at iteration 8. |A r_k|=2.30e-15 and |r_k|=9.72e-14.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.78e-01	1.12e+00	6.18e+00		1.01e+00
2	6.27e-02	6.28e-01	1.71e+01		2.79e+00
3	6.20e-03	9.98e-03	1.71e+01		2.79e+00
4	8.39e-05	1.07e-05	1.71e+01		4.09e+00
5	4.07e-07	1.96e-08	1.71e+01		4.09e+00
6	7.37e-09	1.36e-09	1.71e+01		4.09e+00
7	2.90e-11	1.15e-12	1.71e+01		4.09e+00
8	1.04e-14	3.39e-17	1.71e+01		4.25e+00
minres converged at iteration 8. |A r_k|=3.39e-17 and |r_k|=1.04e-14.
test stop by condlim
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:57
 [3] fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 [4] fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:22 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:20 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 1
The estimated condition number (=2.33e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=1.92e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] lehmer(::Type{Float64}, ::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:857
 [4] lehmer(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:861
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMatrixDepot.jl:5 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:21 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMatrixDepot.jl, in expression starting on line 1
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
Test Summary: | Pass  Total
KrylovMethods |  160    160
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6

>>> End of log
