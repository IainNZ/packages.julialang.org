>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1220.0390625 MB free)
Uptime: 96826.0 sec
Load Avg:  0.97900390625  1.00048828125  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    6349641 s       6685 s     285030 s    1467213 s         53 s
#2  3499 MHz    1326206 s         94 s     157440 s    8014912 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.1
 - KrylovMethods                 0.4.0
16 additional packages:
 - BinDeps                       0.6.0
 - Cairo                         0.3.1
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.37.0
 - FixedPointNumbers             0.4.3
 - Graphics                      0.2.0
 - Gtk                           0.13.1
 - NaNMath                       0.3.0
 - NodeJS                        0.1.0
 - Reexport                      0.0.3
 - Requires                      0.4.3
 - Rsvg                          0.1.0
 - SHA                           0.5.2
 - URIParser                     0.2.0
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.1
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods

WARNING: deprecated syntax "abstract MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:312.
Use "abstract type MatrixGenerator end" instead.

WARNING: deprecated syntax "abstract FunctionName<:MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:313.
Use "abstract type FunctionName<:MatrixGenerator end" instead.

WARNING: deprecated syntax "abstract Group<:MatrixGenerator" at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:314.
Use "abstract type Group<:MatrixGenerator end" instead.
=== bicgstb ===
iter	 relres
  1	8.00e-02
  2	7.72e-03
  3	9.97e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.72e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.09e-07.
=== block bicgstb ===
iter	 relres
  1	9.65e-02
  2	1.26e-01
  3	1.00e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.26e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 4.14e-08.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	9.84e-02
cg iterated maxIter (=1) times but reached only residual norm 9.84e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.85e-06.
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:57
 [3] computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
=== blockcg ===
iter	max(relres)
WARNING: isfinite(x::AbstractArray{T}) where T <: Number is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:57
 [3] getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
  1	2.30e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.30e-16.
=== blockcg ===
iter	max(relres)
  1	3.18e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.18e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.23e-01
  3	1.59e-01
  4	1.14e-01
  5	7.98e-02
  6	4.77e-02
  7	2.66e-02
  8	1.39e-02
  9	6.16e-03
 10	2.70e-03
 11	1.12e-03
 12	5.16e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.16e-04.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.23e-01
  3	1.59e-01
  4	1.14e-01
  5	7.98e-02
  6	4.77e-02
  7	2.66e-02
  8	1.39e-02
  9	6.16e-03
 10	2.70e-03
 11	1.12e-03
 12	5.16e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.16e-04.
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	7.57e+01	8.22e-01	9.03e+00
  2	9.33e+00	1.21e+00	8.80e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.33e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.76e-07.
=== gmres ===
iter	 relres

  1	2.6e-01 8.2e-02 2.3e-02 	 2.3e-02
  2	7.2e-03 2.3e-03 7.8e-04 	 7.8e-04
  3	2.5e-04 8.1e-05 2.7e-05 	 2.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.38e-07.
Givens rotation for v=[0.0,-1.7751293206440277]
Givens rotation for v=[3.0442683005853115,0.0]
Givens rotation for v=[1.2100947452069732,-1.3878511690434905]
=== Testing Lanczos Bidiagonalization ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.97e-03.
ssor achieved desired tolerance at iteration 41. Residual norm is 9.84e-03.
cg achieved desired tolerance at iteration 54. Residual norm is 6.28e-13.
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.78e-02
  3	4.31e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.31e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.98e-03.
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.13e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.70e+00.
minres iterated maxIter (=1) times but reached only residual norm 2.05e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.05e-01	6.05e-01	5.70e+00		1.17e+00
2	1.15e-02	9.71e-03	5.70e+00		1.17e+00
3	2.44e-05	6.69e-07	5.70e+00		1.30e+00
4	3.31e-06	6.84e-06	5.70e+00		1.30e+00
5	1.51e-19	1.08e-31	5.70e+00		1.30e+00
minres converged at iteration 5. |A r_k|=1.08e-31 and |r_k|=1.51e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.34e-02	1.41e-01	5.22e+00		1.01e+00
2	1.32e-03	5.59e-04	5.30e+00		1.10e+00
3	3.46e-06	1.19e-07	5.30e+00		1.20e+00
4	3.61e-07	6.39e-07	5.75e+00		1.30e+00
5	4.26e-20	7.11e-32	5.75e+00		1.30e+00
minres converged at iteration 5. |A r_k|=7.11e-32 and |r_k|=4.26e-20.
test stop by condlim
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:57
 [3] fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 [4] fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:22 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:20 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 1
The estimated condition number (=2.49e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.67e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] lehmer(::Type{Float64}, ::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:857
 [4] lehmer(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:861
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMatrixDepot.jl:5 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:21 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMatrixDepot.jl, in expression starting on line 1
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
Test Summary: | Pass  Total
KrylovMethods |  160    160
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.1
INFO: Removing MatrixDepot v0.5.6

>>> End of log
