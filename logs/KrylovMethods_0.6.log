>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1148.625 MB free)
Uptime: 40913.0 sec
Load Avg:  0.994140625  0.98046875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2439396 s         38 s     189541 s     839477 s         20 s
#2  3499 MHz     421703 s       5652 s      66644 s    3539552 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - KrylovMethods                 0.4.0
2 additional packages:
 - Compat                        1.0.0
 - Nullables                     0.0.6
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/JuliaMatrices/MatrixDepot.jl.git
INFO: Installing GZip v0.4.0
INFO: Installing LinearOperators v0.4.1
INFO: Installing MatrixDepot v0.6.0
INFO: Testing KrylovMethods
=== bicgstb ===
iter	 relres
  1	7.86e-02
  2	6.97e-03
  3	7.09e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 6.97e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 7.43e-08.
=== block bicgstb ===
iter	 relres
  1	9.41e-02
  2	1.53e-02
  3	2.22e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.53e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 8.68e-07.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.50e-01
cg iterated maxIter (=1) times but reached only residual norm 1.50e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.08e-06.
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:57
 [3] computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
=== blockcg ===
iter	max(relres)
WARNING: isfinite(x::AbstractArray{T}) where T <: Number is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:57
 [3] getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
  1	5.33e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.33e-16.
=== blockcg ===
iter	max(relres)
  1	7.24e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.24e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.95e-01
  2	2.32e-01
  3	1.53e-01
  4	9.52e-02
  5	6.73e-02
  6	4.75e-02
  7	3.15e-02
  8	1.87e-02
  9	9.87e-03
 10	4.81e-03
 11	2.17e-03
 12	8.75e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.75e-04.
blockCG: Test Failed
  Expression: norm(A * X - rhs) / norm(rhs) < 0.0015
   Evaluated: 0.0015926637384029551 < 0.0015
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:25 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
=== blockcg ===
iter	max(relres)
  1	3.95e-01
  2	2.32e-01
  3	1.53e-01
  4	9.52e-02
  5	6.73e-02
  6	4.75e-02
  7	3.15e-02
  8	1.87e-02
  9	9.87e-03
 10	4.81e-03
 11	2.17e-03
 12	8.75e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.75e-04.
blockCG: Test Failed
  Expression: norm(A * X - rhs) / norm(rhs) < 0.0015
   Evaluated: 0.001592663738402896 < 0.0015
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:27 [inlined]
 [2] macro expansion at ./test.jl:860 [inlined]
 [3] anonymous at ./<missing>:?
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.89e+01	6.08e-01	1.04e+01
  2	6.36e+00	8.28e-01	1.03e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.36e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.23e-08.
=== gmres ===
iter	 relres

  1	3.1e-01 1.0e-01 2.9e-02 	 2.9e-02
  2	9.4e-03 3.3e-03 1.0e-03 	 1.0e-03
  3	3.3e-04 1.1e-04 3.6e-05 	 3.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.90e-07.
Givens rotation for v=[0.0,0.5217966811669833]
Givens rotation for v=[-0.3405067473853173,0.0]
Givens rotation for v=[0.03842243616394541,0.46023748311893636]
=== Testing Lanczos Bidiagonalization ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 48. Residual norm is 9.90e-03.
cg achieved desired tolerance at iteration 53. Residual norm is 7.88e-13.
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.41e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.97e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.48e-03.
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.19e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.63e+00.
minres iterated maxIter (=1) times but reached only residual norm 1.66e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.66e-01	6.28e-01	6.84e+00		1.28e+00
2	3.54e-02	2.06e-01	6.84e+00		1.28e+00
3	7.90e-03	4.29e-02	6.84e+00		1.28e+00
4	3.32e-04	2.97e-04	6.84e+00		1.34e+00
5	7.22e-06	3.37e-06	6.84e+00		1.36e+00
6	2.78e-07	2.03e-07	6.84e+00		1.54e+00
7	2.56e-08	4.38e-08	6.84e+00		1.57e+00
8	1.12e-18	9.55e-28	6.84e+00		1.57e+00
minres converged at iteration 8. |A r_k|=9.55e-28 and |r_k|=1.12e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.41e-02	3.25e-01	6.53e+00		1.01e+00
2	8.32e-03	3.59e-02	6.53e+00		1.17e+00
3	1.16e-03	3.76e-03	6.53e+00		1.17e+00
4	2.23e-05	9.19e-06	6.53e+00		1.29e+00
5	1.24e-06	1.46e-06	6.53e+00		1.31e+00
6	5.74e-08	5.08e-08	6.53e+00		1.46e+00
7	2.78e-09	2.39e-09	6.53e+00		1.57e+00
8	3.20e-19	7.68e-28	6.53e+00		1.57e+00
minres converged at iteration 8. |A r_k|=7.68e-28 and |r_k|=3.20e-19.
test stop by condlim
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:57
 [3] fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 [4] fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:22 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:20 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 1
The estimated condition number (=2.34e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=5.58e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
Test Summary:  | Pass  Fail  Total
KrylovMethods  |  158     2    160
  bicgstb      |   17           17
  blockBiCGSTB |   17           17
  CG           |   16           16
  blockCG      |    4     2      6
  CLGS         |    9            9
  GS           |   10           10
  gmres        |   15           15
  lanczos      |   13           13
  SSOR         |   12           12
  LSQR         |   14           14
  MINRES       |   11           11
  MatrixDepot  |   20           20
ERROR: LoadError: Some tests did not pass: 158 passed, 2 failed, 0 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl, in expression starting on line 8
============================[ ERROR: KrylovMethods ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing GZip v0.4.0
INFO: Removing LinearOperators v0.4.1
INFO: Removing MatrixDepot v0.6.0
ERROR: KrylovMethods had test errors

>>> End of log
