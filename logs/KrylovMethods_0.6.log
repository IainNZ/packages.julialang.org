>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.4.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1121.6640625 MB free)
Uptime: 43576.0 sec
Load Avg:  1.00830078125  1.01416015625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2597862 s       5591 s     200035 s     916426 s         21 s
#2  3499 MHz     436002 s         49 s      71961 s    3796006 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - KrylovMethods                 0.4.0
2 additional packages:
 - Compat                        1.0.0
 - Nullables                     0.0.6
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/JuliaMatrices/MatrixDepot.jl.git
INFO: Installing GZip v0.4.0
INFO: Installing LinearOperators v0.4.0
INFO: Installing MatrixDepot v0.6.0
INFO: Testing KrylovMethods
=== bicgstb ===
iter	 relres
  1	9.98e-02
  2	1.15e-02
  3	9.10e-01
bicgstb iterated maxIter (=3) times but reached only residual norm 1.15e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 4.58e-08.
=== block bicgstb ===
iter	 relres
  1	1.00e-01
  2	4.99e-02
  3	1.12e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.99e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.53e-07.
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.79e-01
cg iterated maxIter (=1) times but reached only residual norm 1.79e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.85e-06.
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,1}) at ./deprecated.jl:57
 [3] computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
=== blockcg ===
iter	max(relres)
WARNING: isfinite(x::AbstractArray{T}) where T <: Number is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] isfinite(::Array{Float64,1}) at ./deprecated.jl:57
 [3] getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 [4] #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 [5] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 [6] #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 [7] (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [8] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl:10 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:13 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 6
  1	1.08e-14
  2	2.26e-27
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.26e-27.
=== blockcg ===
iter	max(relres)
  1	1.85e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.85e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.37e-01
  3	1.58e-01
  4	9.65e-02
  5	7.93e-02
  6	5.83e-02
  7	3.22e-02
  8	1.74e-02
  9	8.27e-03
 10	3.48e-03
 11	1.55e-03
 12	6.36e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.36e-04.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.37e-01
  3	1.58e-01
  4	9.65e-02
  5	7.93e-02
  6	5.83e-02
  7	3.22e-02
  8	1.74e-02
  9	8.27e-03
 10	3.48e-03
 11	1.55e-03
 12	6.36e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.36e-04.
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.07e+01	6.52e-01	9.50e+00
  2	4.21e+00	7.72e-01	9.45e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.21e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.08e-08.
=== gmres ===
iter	 relres

  1	3.1e-01 9.3e-02 3.0e-02 	 3.0e-02
  2	1.0e-02 2.9e-03 7.7e-04 	 7.7e-04
  3	2.4e-04 7.1e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.96e-07.
Givens rotation for v=[0.0,-0.7614130702978322]
Givens rotation for v=[0.40684239179320547,0.0]
Givens rotation for v=[0.4780132130167047,-0.05004398890371592]
=== Testing Lanczos Bidiagonalization ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.83e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.92e-03.
cg achieved desired tolerance at iteration 54. Residual norm is 7.68e-13.
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.57e-02
  3	4.08e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.08e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.31e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.88e-03.
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.41e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.03e+01.
minres iterated maxIter (=1) times but reached only residual norm 1.73e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.73e-01	4.22e-01	5.53e+00		1.21e+00
2	4.61e-03	1.95e-03	5.53e+00		1.21e+00
3	6.81e-04	1.37e-03	5.53e+00		1.25e+00
4	6.11e-19	8.93e-33	5.53e+00		1.25e+00
minres converged at iteration 4. |A r_k|=8.93e-33 and |r_k|=6.11e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.01e-02	8.50e-02	5.25e+00		1.01e+00
2	7.04e-04	2.29e-04	5.25e+00		1.15e+00
3	1.21e-04	3.16e-04	5.25e+00		1.15e+00
4	3.55e-20	1.52e-34	5.25e+00		1.15e+00
minres converged at iteration 4. |A r_k|=1.52e-34 and |r_k|=3.55e-20.
test stop by condlim
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:57
 [3] fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 [4] fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 [5] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:22 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/KrylovMethods/test/runtests.jl:20 [inlined]
 [11] macro expansion at ./test.jl:860 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 1
The estimated condition number (=2.87e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.19e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
Test Summary: | Pass  Total
KrylovMethods |  160    160
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.4.0
INFO: Removing LinearOperators v0.4.0
INFO: Removing MatrixDepot v0.6.0

>>> End of log
