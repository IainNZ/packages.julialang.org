>>> 'Pkg.add("Clp")' log
INFO: Installing BinDeps v0.8.8
INFO: Installing Cbc v0.3.2
INFO: Installing Clp v0.4.0
INFO: Installing MathProgBase v0.7.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Building Cbc
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Clp
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Clp")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (797.96484375 MB free)
Uptime: 35265.0 sec
Load Avg:  0.9970703125  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1952041 s       5670 s     141696 s     923190 s          8 s
#2  3504 MHz     382642 s         89 s      59059 s    3003607 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Clp                           0.4.0
 - JSON                          0.17.2
7 additional packages:
 - BinDeps                       0.8.8
 - Cbc                           0.3.2
 - Compat                        0.69.0
 - MathProgBase                  0.7.1
 - Nullables                     0.0.5
 - SHA                           0.5.7
 - URIParser                     0.3.1
INFO: Testing Clp
WARNING: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
Test Summary:                                                                         | Pass  Total
Testing linprog and subfunctions with Clp.ClpMathProgSolverInterface.ClpSolver(Any[]) |   26     26
Test Summary:                                                             | Pass  Total
Testing LP interface with Clp.ClpMathProgSolverInterface.ClpSolver(Any[]) |   76     76
Test Summary:                                                                                        | Pass  Total
Testing linear problems through conic interface with Clp.ClpMathProgSolverInterface.ClpSolver(Any[]) |   24     24
INFO: Clp tests passed

>>> End of log
