>>> 'Pkg.add("SimilaritySearch")' log
INFO: Cloning cache of SimilaritySearch from https://github.com/sadit/SimilaritySearch.jl.git
INFO: Installing SimilaritySearch v0.1.7
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SimilaritySearch
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SimilaritySearch")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1261.68359375 MB free)
Uptime: 57258.0 sec
Load Avg:  1.0029296875  0.9931640625  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz    3461826 s       4934 s     223404 s    1241714 s         64 s
#2  3491 MHz     919988 s       2484 s     103777 s    4565273 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - SimilaritySearch              0.1.7
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
INFO: Testing SimilaritySearch
Test Summary: | Pass  Total
bit ops       |    3      3
Test Summary:              | Pass  Total
Result set implementations |    3      3
(recall_lower_bound, dist) = (1.0, SimilaritySearch.L2Distance(0))
(dist, p) = (SimilaritySearch.L2Distance(200200), SimilaritySearch.PerformanceResult(1.0, 3.2880306243896484e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.L2Distance(200200)
(dist, p) = (SimilaritySearch.L2Distance(324774), SimilaritySearch.PerformanceResult(1.0, 0.000507187843322754, 84.58))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.L1Distance(0))
(dist, p) = (SimilaritySearch.L1Distance(200200), SimilaritySearch.PerformanceResult(1.0, 3.7729740142822266e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.L1Distance(200200)
(dist, p) = (SimilaritySearch.L1Distance(324338), SimilaritySearch.PerformanceResult(1.0, 0.000446014404296875, 80.22))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.LInfDistance(0))
(dist, p) = (SimilaritySearch.LInfDistance(200200), SimilaritySearch.PerformanceResult(1.0, 3.394603729248047e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.LInfDistance(200200)
(dist, p) = (SimilaritySearch.LInfDistance(324347), SimilaritySearch.PerformanceResult(1.0, 0.0004917597770690918, 80.31))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.L2SquaredDistance(0))
(dist, p) = (SimilaritySearch.L2SquaredDistance(200200), SimilaritySearch.PerformanceResult(1.0, 3.275156021118164e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.L2SquaredDistance(200200)
(dist, p) = (SimilaritySearch.L2SquaredDistance(320210), SimilaritySearch.PerformanceResult(0.43999999999999995, 0.0004627823829650879, 38.94))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.LpDistance(0, 3.0f0))
(dist, p) = (SimilaritySearch.LpDistance(200200, 3.0f0), SimilaritySearch.PerformanceResult(1.0, 0.0001616215705871582, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.LpDistance(200200, 3.0f0)
(dist, p) = (SimilaritySearch.LpDistance(324921, 3.0f0), SimilaritySearch.PerformanceResult(1.0, 0.0004918241500854492, 86.05))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.LpDistance(0, 0.5f0))
(dist, p) = (SimilaritySearch.LpDistance(200200, 0.5f0), SimilaritySearch.PerformanceResult(1.0, 7.700681686401367e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.LpDistance(200200, 0.5f0)
(dist, p) = (SimilaritySearch.LpDistance(321724, 0.5f0), SimilaritySearch.PerformanceResult(0.6420000000000003, 4.186391830444336e-5, 54.08))
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.JaccardDistance(0)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.DiceDistance(0)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.IntersectionDistance(0)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.CommonPrefixDistance(0)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.GenericLevenshtein(0, 1, 1, 1)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.GenericLevenshtein(0, 1, 1, 2)
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=SimilaritySearch.HammingDistance(0)
p = SimilaritySearch.PerformanceResult(1.0, 4.498720169067383e-5, 1001.0)
p = SimilaritySearch.PerformanceResult(1.0, 6.667613983154297e-5, 1001.0)
p = SimilaritySearch.PerformanceResult(1.0, 2.8500556945800783e-5, 1001.0)
p = SimilaritySearch.PerformanceResult(1.0, 3.6396185557047526e-5, 1001.0)
(p1, p2, p3, p4) = (SimilaritySearch.PerformanceResult(1.0, 4.498720169067383e-5, 1001.0), SimilaritySearch.PerformanceResult(1.0, 6.667613983154297e-5, 1001.0), SimilaritySearch.PerformanceResult(1.0, 2.8500556945800783e-5, 1001.0), SimilaritySearch.PerformanceResult(1.0, 3.6396185557047526e-5, 1001.0))
INFO: select_sss: db=Array{Array{UInt32,1},1}, alpha=0.35, distance=SimilaritySearch.BinHammingDistance(0), shuffle_db=false
INFO: the maximum distance estimated as 125.0, now selecting pivots
INFO: Creating a pivot table with 1000 pivots and distance=SimilaritySearch.BinHammingDistance(499516)
p = SimilaritySearch.PerformanceResult(1.0, 0.003924837112426758, 1062.69)
INFO: Creating a pivot table with 16 pivots and distance=SimilaritySearch.BinHammingDistance(360)
p = SimilaritySearch.PerformanceResult(1.0, 0.0005878949165344238, 1001.54)
INFO: SimilaritySearch tests passed

>>> End of log
