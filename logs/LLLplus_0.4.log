>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (698.25 MB free)
Uptime: 7526.0 sec
Load Avg:  1.0009765625  1.0  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     210094 s         46 s      22247 s     477354 s          8 s
#2  3500 MHz     147397 s         91 s      18918 s     570038 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.25.2
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  2.443354 seconds (4.58 M allocations: 2.993 GB, 13.70% gc time)
  1.667645 seconds (4.37 M allocations: 2.984 GB, 14.05% gc time)

Testing LLL on 10x10 complex matrix...
  1.799472 seconds (1.65 M allocations: 74.663 MB, 0.94% gc time)
  0.000787 seconds (3.85 k allocations: 311.328 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.942310 seconds (942.87 k allocations: 42.717 MB, 0.99% gc time)
  0.000392 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  1.123799 seconds (4.29 M allocations: 223.317 MB, 3.11% gc time)
  0.442129 seconds (3.70 M allocations: 196.817 MB, 6.85% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.089088 seconds (191.90 k allocations: 89.220 MB, 31.98% gc time)
max col-norm of lll-reduced basis is 30.0
  7.424591 seconds (28.07 M allocations: 4.001 GB, 6.15% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
