>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (721.7578125 MB free)
Uptime: 4200.0 sec
Load Avg:  0.99560546875  0.97509765625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     178814 s         54 s      19541 s     184408 s          9 s
#2  3500 MHz     132351 s        109 s      17155 s     257010 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.24.0
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.808273 seconds (4.16 M allocations: 2.053 GB, 14.68% gc time)
  1.376783 seconds (3.95 M allocations: 2.044 GB, 14.43% gc time)

Testing LLL on 10x10 complex matrix...
  2.257663 seconds (1.64 M allocations: 74.428 MB, 0.86% gc time)
  0.000771 seconds (1.09 k allocations: 89.938 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.884347 seconds (942.87 k allocations: 42.717 MB, 0.61% gc time)
  0.000276 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.705289 seconds (4.30 M allocations: 223.343 MB, 4.76% gc time)
  0.200731 seconds (3.70 M allocations: 196.817 MB, 15.22% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.088452 seconds (193.27 k allocations: 89.289 MB, 51.25% gc time)
max col-norm of lll-reduced basis is 30.0
  6.497933 seconds (28.07 M allocations: 4.001 GB, 6.91% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
