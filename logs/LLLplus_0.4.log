>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (734.90625 MB free)
Uptime: 5243.0 sec
Load Avg:  0.984375  1.01171875  1.0439453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     219609 s        109 s      23680 s     238387 s          9 s
#2  3503 MHz     146068 s         38 s      19566 s     344950 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.26.0
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.820179 seconds (3.85 M allocations: 2.258 GB, 14.26% gc time)
  1.573708 seconds (3.64 M allocations: 2.249 GB, 13.11% gc time)

Testing LLL on 10x10 complex matrix...
  2.341666 seconds (1.65 M allocations: 74.621 MB, 1.11% gc time)
  0.000727 seconds (3.03 k allocations: 241.641 KB)
Testing VBLAST on same 10x10 complex matrix...
  1.111142 seconds (943.29 k allocations: 42.742 MB, 1.26% gc time)
  0.000431 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  1.291493 seconds (4.29 M allocations: 223.317 MB, 2.78% gc time)
  0.257811 seconds (3.70 M allocations: 196.817 MB, 7.91% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.062505 seconds (193.27 k allocations: 89.289 MB, 28.91% gc time)
max col-norm of lll-reduced basis is 30.0
  7.569536 seconds (28.07 M allocations: 4.001 GB, 5.82% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
