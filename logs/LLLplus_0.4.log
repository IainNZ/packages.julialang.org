>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (748.953125 MB free)
Uptime: 5262.0 sec
Load Avg:  0.94384765625  0.9462890625  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     201847 s         96 s      22629 s     257783 s          8 s
#2  3499 MHz     150798 s         45 s      20092 s     336412 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.25.2
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.987780 seconds (3.88 M allocations: 2.110 GB, 13.37% gc time)
  1.492224 seconds (3.67 M allocations: 2.101 GB, 12.72% gc time)

Testing LLL on 10x10 complex matrix...
  1.738718 seconds (1.64 M allocations: 74.498 MB, 1.09% gc time)
  0.000465 seconds (1.95 k allocations: 161.734 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.820157 seconds (942.45 k allocations: 42.692 MB, 1.46% gc time)
  0.000392 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.976948 seconds (4.30 M allocations: 223.343 MB, 3.79% gc time)
  0.296918 seconds (3.70 M allocations: 196.817 MB, 7.81% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.084678 seconds (193.27 k allocations: 89.289 MB, 34.84% gc time)
max col-norm of lll-reduced basis is 30.0
  7.390748 seconds (28.07 M allocations: 4.001 GB, 5.47% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
