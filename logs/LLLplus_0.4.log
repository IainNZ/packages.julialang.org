>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (700.421875 MB free)
Uptime: 50118.0 sec
Load Avg:  0.9384765625  1.033203125  1.20703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2464796 s       1671 s     199991 s    1824367 s        224 s
#2  3499 MHz    1642098 s       5984 s     168030 s    3010376 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.22.0
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  2.074118 seconds (4.96 M allocations: 3.409 GB, 17.16% gc time)
  1.720359 seconds (4.75 M allocations: 3.399 GB, 14.29% gc time)

Testing LLL on 10x10 complex matrix...
  1.569669 seconds (1.65 M allocations: 74.645 MB, 1.15% gc time)
  0.000756 seconds (2.99 k allocations: 234.547 KB)
Testing VBLAST on same 10x10 complex matrix...
  1.152986 seconds (942.87 k allocations: 42.717 MB, 1.18% gc time)
  0.000569 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  1.364077 seconds (4.29 M allocations: 223.317 MB, 2.75% gc time)
  0.437181 seconds (3.70 M allocations: 196.817 MB, 5.72% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.074312 seconds (191.90 k allocations: 89.220 MB, 21.65% gc time)
max col-norm of lll-reduced basis is 30.0
  8.398168 seconds (28.07 M allocations: 4.001 GB, 5.62% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
