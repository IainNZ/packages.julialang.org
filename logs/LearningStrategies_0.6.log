>>> 'Pkg.add("LearningStrategies")' log
INFO: Cloning cache of LearningStrategies from https://github.com/JuliaML/LearningStrategies.jl.git
INFO: Installing DataStructures v0.6.0
INFO: Installing LearnBase v0.1.6
INFO: Installing LearningStrategies v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.17.0
INFO: Package database updated

>>> 'Pkg.test("LearningStrategies")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (652.67578125 MB free)
Uptime: 2644.0 sec
Load Avg:  1.02734375  1.1552734375  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     148620 s         96 s       9978 s      66792 s          4 s
#2  3500 MHz      26712 s         39 s       4236 s     228619 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - LearningStrategies            0.1.0
5 additional packages:
 - Compat                        0.26.0
 - DataStructures                0.6.0
 - LearnBase                     0.1.6
 - SpecialFunctions              0.1.1
 - StatsBase                     0.17.0
INFO: Testing LearningStrategies
  > LearningStrategies.MaxIter(20)
  > LearningStrategies.TimeLimit(2.0, 0.0)
  > LearningStrategies.ShowStatus(1, LearningStrategiesTest.#1)
[1.0, 1.0] after 0 iterations
[1.0, 1.0] after 5 iterations
  > LearningStrategies.ConvergenceFunction(LearningStrategiesTest.#2)
  > LearningStrategies.Converged(LearningStrategiesTest.#3, 1.0e-6, 1, #undef)
  > LearningStrategies.ConvergedTo{Array{Float64,1}}(LearningStrategiesTest.#4, 1.0e-6, [1.0, 1.0], 1)
INFO: Converged after 5 iterations: [1.0, 1.0]
  > LearningStrategies.IterFunction(LearningStrategiesTest.#5, 1)
this is iteration 5
  > LearningStrategies.Tracer{Float64}(1, LearningStrategiesTest.#6, Float64[])
Test Summary:  |
Type stability | No tests
Test Summary:        | Pass  Total
MaxIter/IterFunction |    1      1
INFO: Time's up!
Test Summary: | Pass  Total
TimeLimit     |    1      1
    model is still nothing
    model is still nothing
    model is still nothing
Test Summary: |
ShowStatus    | No tests
Test Summary:       |
ConvergenceFunction | No tests
INFO: Converged after 2 iterations: [1.0, 1.0, 1.0, 1.0, 1.0]
Test Summary: |
Converged     | No tests
INFO: Converged after 1 iterations: [1.0, 1.0, 1.0, 1.0, 1.0]
Test Summary: |
ConvergedTo   | No tests
    print 2 times!
    print 2 times!
Test Summary: |
IterFunction  | No tests
Test Summary: | Pass  Total
Tracer        |    1      1
INFO: LearningStrategies tests passed

>>> End of log
