>>> 'Pkg.add("Flux")' log
INFO: Cloning cache of Flux from https://github.com/MikeInnes/Flux.jl.git
INFO: Installing DataFlow v0.2.1
INFO: Installing Flux v0.2.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing Lazy v0.11.7
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Flux
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Flux")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (889.05859375 MB free)
Uptime: 61448.0 sec
Load Avg:  0.96923828125  0.998046875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3773118 s       3669 s     175812 s    1273564 s         40 s
#2  3499 MHz     868472 s       4382 s      87152 s    5078654 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Flux                          0.2.2
 - JSON                          0.13.0
7 additional packages:
 - Compat                        0.30.0
 - DataFlow                      0.2.1
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - Lazy                          0.11.7
 - MacroTools                    0.3.7
 - Media                         0.3.0
INFO: Testing Flux
WARNING: Method definition update!(Flux.Affine, Any) in module Flux overwritten at /home/vagrant/.julia/v0.6/Flux/src/layers/affine.jl:21.
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1065
 [2] checkbounds_linear_indices at ./abstractarray.jl:423 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:406 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:389 [inlined]
 [5] checkbounds at ./abstractarray.jl:342 [inlined]
 [6] checkbounds at ./abstractarray.jl:362 [inlined]
 [7] macro expansion at ./multidimensional.jl:487 [inlined]
 [8] _setindex! at ./multidimensional.jl:484 [inlined]
 [9] setindex! at ./abstractarray.jl:967 [inlined]
 [10] Flux.Batches.Storage{Flux.Batches.Seq{Array{Int64,1},Array{Int64,2}},Array{Int64,3}}(::Array{Array{Int64,2},1}, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:16
 [11] Flux.Batches.Storage{Flux.Batches.Seq{Array{Int64,1},Array{Int64,2}},Array{Int64,3}}(::Array{Flux.Batches.Seq{Array{Int64,1},Array{Int64,2}},1}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:24
 [12] Flux.Batches.Storage{Flux.Batches.Seq{Array{Int64,1},Array{Int64,2}},S} where S(::Array{Flux.Batches.Seq{Array{Int64,1},Array{Int64,2}},1}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:27
 [13] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/batching.jl:11 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/runtests.jl:15 [inlined]
 [19] macro expansion at ./test.jl:860 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Flux/test/batching.jl, in expression starting on line 3
WARNING: filter(flt, itr) is deprecated, use Iterators.filter(flt, itr) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] filter(::Function, ::Base.KeyIterator{Dict{Any,Any}}) at ./deprecated.jl:57
 [3] tovertex!(::DVertex, ::Dict{Any,Any}, ::DataFlow.Flosure, ::Expr, ::Symbol, ::Vararg{Symbol,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/sugar.jl:213
 [4] graphm!(::DVertex, ::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:50
 [5] graphm(::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:58
 [6] map(::DataFlow.##36#37{Dict{Any,Any}}, ::Tuple{Expr,Symbol}) at ./tuple.jl:159
 [7] tovertex!(::DVertex, ::Dict{Any,Any}, ::Symbol, ::Expr, ::Symbol, ::Vararg{Symbol,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:45
 [8] graphm!(::DVertex, ::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:50
 [9] graphm(::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:58
 [10] tovertex!(::DVertex, ::Dict{Any,Any}, ::DataFlow.Line, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:45
 [11] graphm!(::DVertex, ::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:50
 [12] fillnodes!(::Dict{Any,Any}, ::Base.KeyIterator{Dict{Any,Any}}) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:74
 [13] graphm(::Dict{Any,Any}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:84
 [14] graphm(::Dict{Any,Any}, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:58
 [15] #graphm#40(::Tuple{}, ::Function, ::Expr) at /home/vagrant/.julia/v0.6/DataFlow/src/syntax/read.jl:90
 [16] graphdef(::Expr, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/Flux/src/compiler/code.jl:6
 [17] process_anon(::Expr) at /home/vagrant/.julia/v0.6/Flux/src/compiler/code.jl:76
 [18] @net(::ANY) at /home/vagrant/.julia/v0.6/Flux/src/compiler/code.jl:88
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/runtests.jl:16 [inlined]
 [22] macro expansion at ./test.jl:860 [inlined]
 [23] anonymous at ./<missing>:?
 [24] include_from_node1(::String) at ./loading.jl:569
 [25] include(::String) at ./sysimg.jl:14
 [26] process_options(::Base.JLOptions) at ./client.jl:305
 [27] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Flux/test/backend/common.jl, in expression starting on line 59
WARNING: tanh{T <: Number}(x::AbstractArray{T}) is deprecated, use tanh.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] tanh(::Array{Float64,2}) at ./deprecated.jl:57
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:137 [inlined]
 [4] interp(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at /home/vagrant/.julia/v0.6/Flux/src/compiler/interp.jl:19
 [5] ituple(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [6] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [7] iargs(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:72
 [8] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [9] ilambda(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [10] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [11] iline(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [12] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [13] iconst(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [14] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [15] interpv(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:43
 [16] iline(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::DataFlow.Line, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:62
 [17] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [18] iconst(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::DataFlow.Line, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [19] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [20] interpv(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:43
 [21] map(::DataFlow.Interpreter.##4#5{DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}}, ::Tuple{IVertex}) at ./tuple.jl:158
 [22] iargs(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:72
 [23] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [24] ilambda(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [25] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [26] iline(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [27] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [28] iconst(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [29] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [30] interpv(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:43
 [31] map(::DataFlow.Interpreter.##4#5{DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}}, ::Tuple{IVertex,IVertex}) at ./tuple.jl:159
 [32] iargs(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:72
 [33] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [34] ilambda(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [35] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [36] iline(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [37] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [38] iconst(::Function, ::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Function, ::IVertex, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:83
 [39] (::DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}})(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:13
 [40] interpv(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:43
 [41] interpret(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex, ::IVertex, ::Vararg{IVertex,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:50
 [42] interpret(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::IVertex, ::Tuple{Array{Float64,2}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:53
 [43] macro expansion at /home/vagrant/.julia/v0.6/DataFlow/src/interpreter.jl:137 [inlined]
 [44] interp(::DataFlow.Interpreter.Context{DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iconst,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iline,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ilambda,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#iargs,DataFlow.Interpreter.##1#2{DataFlow.Interpreter.#ituple,Flux.#interp}}}}}}, ::Flux.Capacitor, ::Tuple{Array{Float64,2}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Flux/src/compiler/interp.jl:19
 [45] interpmodel(::Flux.Capacitor, ::Tuple{Array{Float64,2}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Flux/src/compiler/interp.jl:26
 [46] apply(::Flux.Capacitor, ::Array{Array{Float64,2},1}, ::Tuple{Array{Float64,2}}) at /home/vagrant/.julia/v0.6/Flux/test/recurrent.jl:4
 [47] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/recurrent.jl:13 [inlined]
 [48] macro expansion at ./test.jl:860 [inlined]
 [49] anonymous at ./<missing>:?
 [50] include_from_node1(::String) at ./loading.jl:569
 [51] include(::String) at ./sysimg.jl:14
 [52] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/runtests.jl:19 [inlined]
 [53] macro expansion at ./test.jl:860 [inlined]
 [54] anonymous at ./<missing>:?
 [55] include_from_node1(::String) at ./loading.jl:569
 [56] include(::String) at ./sysimg.jl:14
 [57] process_options(::Base.JLOptions) at ./client.jl:305
 [58] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Flux/test/recurrent.jl, in expression starting on line 10
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1065
 [2] checkbounds_linear_indices at ./abstractarray.jl:423 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:406 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:389 [inlined]
 [5] checkbounds at ./abstractarray.jl:342 [inlined]
 [6] checkbounds at ./abstractarray.jl:362 [inlined]
 [7] macro expansion at ./multidimensional.jl:487 [inlined]
 [8] _setindex! at ./multidimensional.jl:484 [inlined]
 [9] setindex! at ./abstractarray.jl:967 [inlined]
 [10] Flux.Batches.Storage{Flux.Batches.Seq{Array{Float64,1},Array{Float64,2}},Array{Float64,3}}(::Tuple{Array{Float64,2}}, ::Array{Float64,3}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:16
 [11] Flux.Batches.Storage{Flux.Batches.Seq{Array{Float64,1},Array{Float64,2}},Array{Float64,3}}(::Tuple{Flux.Batches.Seq{Array{Float64,1},Array{Float64,2}}}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:24
 [12] Flux.Batches.Storage{Flux.Batches.Seq{Array{Float64,1},Array{Float64,2}},S} where S(::Tuple{Flux.Batches.Seq{Array{Float64,1},Array{Float64,2}}}) at /home/vagrant/.julia/v0.6/Flux/src/Batches/catmat.jl:27
 [13] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/recurrent.jl:16 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:569
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/Flux/test/runtests.jl:19 [inlined]
 [19] macro expansion at ./test.jl:860 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Flux/test/recurrent.jl, in expression starting on line 10
INFO: Epoch 1
INFO: Epoch 2
INFO: Epoch 3
INFO: Epoch 4
INFO: Epoch 5
INFO: Epoch 1
INFO: Epoch 2
INFO: Epoch 3
INFO: Epoch 4
INFO: Epoch 5
INFO: Epoch 6
INFO: Epoch 7
INFO: Epoch 8
INFO: Epoch 9
INFO: Epoch 10
Test Summary: | Pass  Total
Flux          |   27     27
INFO: Flux tests passed

>>> End of log
