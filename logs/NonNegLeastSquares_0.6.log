>>> 'Pkg.add("NonNegLeastSquares")' log
INFO: Cloning cache of NonNegLeastSquares from https://github.com/ahwillia/NonNegLeastSquares.jl.git
INFO: Installing NonNegLeastSquares v0.1.0
INFO: Removing BinDeps v0.8.8
INFO: Removing Cxx v0.2.0
INFO: Removing MathProgBase v0.7.1
INFO: Removing SHA v0.5.7
INFO: Removing URIParser v0.3.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of NonNegLeastSquares
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NonNegLeastSquares")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1513.8359375 MB free)
Uptime: 84249.0 sec
Load Avg:  1.173828125  1.70361328125  1.76318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5366945 s       8190 s     375548 s    1364244 s          9 s
#2  3500 MHz    1026563 s        561 s     144286 s    7106222 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - NonNegLeastSquares            0.1.0
2 additional packages:
 - Compat                        0.70.0
 - Nullables                     0.0.6
INFO: Computing test dependencies for NonNegLeastSquares...
INFO: Installing BinDeps v0.8.8
INFO: Installing Conda v0.8.1
INFO: Installing MacroTools v0.4.2
INFO: Installing PyCall v1.17.1
INFO: Installing SHA v0.5.7
INFO: Installing URIParser v0.3.1
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - numpy


The following packages will be UPDATED:

    blas:  1.0-mkl               --> 1.1-openblas                          conda-forge
    numpy: 1.14.3-py27hcd700cb_2 --> 1.14.5-py27_blas_openblashd3ea46f_201 conda-forge [blas_openblas]

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.15) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Testing NonNegLeastSquares
ERROR: LoadError: PyError (PyImport_ImportModule

The Python package scipy.optimize could not be found by pyimport. Usually this means
that you did not install scipy.optimize in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the scipy.optimize module, you can
use `pyimport_conda("scipy.optimize", PKG)`, where PKG is the Anaconda
package the contains the module scipy.optimize, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError('No module named scipy.optimize',)

Stacktrace:
 [1] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:473
 [2] include_from_node1(::String) at ./loading.jl:576
 [3] include(::String) at ./sysimg.jl:14
 [4] process_options(::Base.JLOptions) at ./client.jl:305
 [5] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NonNegLeastSquares/test/runtests.jl, in expression starting on line 523
=========================[ ERROR: NonNegLeastSquares ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/NonNegLeastSquares/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.8.8
INFO: Removing Conda v0.8.1
INFO: Removing MacroTools v0.4.2
INFO: Removing PyCall v1.17.1
INFO: Removing SHA v0.5.7
INFO: Removing URIParser v0.3.1
INFO: Removing VersionParsing v1.1.1
ERROR: NonNegLeastSquares had test errors

>>> End of log
