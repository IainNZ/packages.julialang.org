>>> 'Pkg.add("ApproxFun")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.2
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.4.0
INFO: Installing StatsBase v0.13.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated

>>> 'Pkg.test("ApproxFun")' log
Julia Version 0.6.0-pre.beta.127
Commit 94417e4 (2017-04-13 19:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (457.10546875 MB free)
Uptime: 4444.0 sec
Load Avg:  0.92919921875  0.96923828125  0.94970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     220240 s         36 s      24467 s     145309 s          5 s
#2  3499 MHz      66945 s        103 s      18595 s     348124 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ApproxFun                     0.6.0
 - JSON                          0.9.0
14 additional packages:
 - BandedMatrices                0.2.2
 - Calculus                      0.2.2
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.4.0
 - StatsBase                     0.13.1
 - ToeplitzMatrices              0.2.0
INFO: Testing ApproxFun
Julia Version 0.6.0-pre.beta.127
Commit 94417e4 (2017-04-13 19:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Helper tests
Domain tests
  4.880616 seconds (2.45 M allocations: 128.302 MiB, 1.36% gc time)
Fun tests
 57.237211 seconds (27.01 M allocations: 1.889 GiB, 2.59% gc time)
 82.788366 seconds (27.29 M allocations: 1.443 GiB, 1.69% gc time)
  1.150468 seconds (267.21 k allocations: 14.594 MiB)
  9.522720 seconds (2.96 M allocations: 156.091 MiB, 4.79% gc time)
Operator tests
  2.701123 seconds (506.65 k allocations: 24.610 MiB, 0.87% gc time)
  4.763934 seconds (973.87 k allocations: 47.154 MiB, 1.11% gc time)
  3.168387 seconds (576.05 k allocations: 28.691 MiB, 1.71% gc time)
  2.655045 seconds (796.42 k allocations: 42.666 MiB, 1.76% gc time)
  3.565713 seconds (834.69 k allocations: 40.258 MiB, 1.44% gc time)
  5.309473 seconds (1.65 M allocations: 185.821 MiB, 3.02% gc time)
  6.243735 seconds (1.91 M allocations: 120.526 MiB, 2.27% gc time)
  0.082212 seconds (14.54 k allocations: 927.357 KiB)
  0.326819 seconds (52.13 k allocations: 2.788 MiB)
110.607130 seconds (42.32 M allocations: 2.497 GiB, 2.45% gc time)
ODE tests
  0.107585 seconds (15.53 k allocations: 995.132 KiB)
  2.386781 seconds (486.36 k allocations: 26.553 MiB, 1.18% gc time)
  2.987347 seconds (634.88 k allocations: 34.499 MiB, 1.84% gc time)
  0.977037 seconds (260.96 k allocations: 24.802 MiB, 2.33% gc time)
  3.111485 seconds (829.04 k allocations: 45.221 MiB, 2.02% gc time)
  1.831351 seconds (431.62 k allocations: 22.789 MiB, 24.42% gc time)
  8.471857 seconds (253.67 k allocations: 16.389 MiB)
 96.601819 seconds (31.92 M allocations: 27.947 GiB, 14.42% gc time)
Vector tests
  2.110613 seconds (422.57 k allocations: 22.233 MiB, 1.37% gc time)
  0.015291 seconds (19.89 k allocations: 785.184 KiB)
  0.080418 seconds (34.29 k allocations: 1.483 MiB)
  0.035559 seconds (27.43 k allocations: 1.115 MiB)
  3.353164 seconds (945.83 k allocations: 49.057 MiB, 2.19% gc time)
  0.241948 seconds (137.80 k allocations: 6.291 MiB)
 65.577304 seconds (21.51 M allocations: 1.071 GiB, 2.50% gc time)
Singularities tests
    Jacobi singularity tests
    Ray tests
118.680390 seconds (33.93 M allocations: 1.886 GiB, 3.12% gc time)
Integral Equations tests
 29.770649 seconds (6.15 M allocations: 335.641 MiB, 3.60% gc time)
  0.307944 seconds (99.04 k allocations: 5.480 MiB)
ERROR: LoadError: LoadError: getindex(::typeof(a), ::Int) is not defined.
Stacktrace:
 [1] getindex(::StaticArrays.SVector{2,Float64}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:2
 [2] append_any(::StaticArrays.SVector{2,Float64}, ::Vararg{StaticArrays.SVector{2,Float64},N} where N) at ./essentials.jl:170
 [3] #standardLowRankFun#180(::Symbol, ::Int64, ::Int64, ::Int64, ::Function, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:82
 [4] (::ApproxFun.#kw##standardLowRankFun)(::Array{Any,1}, ::ApproxFun.#standardLowRankFun, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at ./<missing>:0
 [5] #LowRankFun#177(::Symbol, ::Symbol, ::Bool, ::Int64, ::Int64, ::Int64, ::Type{T} where T, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:65
 [6] ApproxFun.LowRankFun(::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:64
 [7] #LowRankFun#194(::Array{Any,1}, ::Type{T} where T, ::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [8] ApproxFun.LowRankFun(::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/IntegralEquationsTest.jl, in expression starting on line 70
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl, in expression starting on line 237
==============================[ ERROR: ApproxFun ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ApproxFun had test errors

>>> End of log
