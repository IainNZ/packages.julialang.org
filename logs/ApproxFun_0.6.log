>>> 'Pkg.add("ApproxFun")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.2
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.4.0
INFO: Installing StatsBase v0.13.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated

>>> 'Pkg.test("ApproxFun")' log
Julia Version 0.6.0-pre.beta.187
Commit 55c97fb (2017-04-17 23:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (367.64453125 MB free)
Uptime: 3787.0 sec
Load Avg:  1.0166015625  1.0107421875  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     186181 s         53 s      19700 s     122721 s          5 s
#2  3500 MHz      60976 s         92 s      15600 s     290424 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ApproxFun                     0.6.0
 - JSON                          0.9.0
14 additional packages:
 - BandedMatrices                0.2.2
 - Calculus                      0.2.2
 - Compat                        0.23.0
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.4.0
 - StatsBase                     0.13.1
 - ToeplitzMatrices              0.2.0
INFO: Testing ApproxFun
Julia Version 0.6.0-pre.beta.187
Commit 55c97fb (2017-04-17 23:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Helper tests
Domain tests
  6.541185 seconds (2.45 M allocations: 128.497 MiB, 1.47% gc time)
Fun tests
 52.499634 seconds (27.03 M allocations: 1.885 GiB, 2.70% gc time)
 84.746341 seconds (27.29 M allocations: 1.443 GiB, 1.98% gc time)
  0.999415 seconds (267.19 k allocations: 14.591 MiB)
  8.199722 seconds (2.96 M allocations: 156.326 MiB, 2.11% gc time)
Operator tests
  1.972958 seconds (506.67 k allocations: 24.733 MiB, 1.02% gc time)
  4.447348 seconds (973.89 k allocations: 47.265 MiB, 1.18% gc time)
  2.391994 seconds (576.06 k allocations: 28.789 MiB, 1.74% gc time)
  2.896081 seconds (796.43 k allocations: 42.668 MiB, 0.83% gc time)
  2.756081 seconds (834.71 k allocations: 40.471 MiB, 1.75% gc time)
  3.852591 seconds (1.65 M allocations: 185.433 MiB, 4.39% gc time)
  5.926121 seconds (1.91 M allocations: 120.500 MiB, 2.63% gc time)
  0.045954 seconds (14.54 k allocations: 927.334 KiB)
  0.272833 seconds (52.13 k allocations: 2.765 MiB)
103.100419 seconds (42.32 M allocations: 2.496 GiB, 3.02% gc time)
ODE tests
  0.107607 seconds (15.52 k allocations: 995.497 KiB)
  1.809681 seconds (486.37 k allocations: 26.599 MiB, 1.66% gc time)
  3.072475 seconds (634.96 k allocations: 34.610 MiB, 2.19% gc time)
  1.069168 seconds (260.96 k allocations: 24.799 MiB, 2.25% gc time)
  3.366862 seconds (828.07 k allocations: 45.618 MiB, 2.57% gc time)
  1.255775 seconds (431.62 k allocations: 22.749 MiB, 1.80% gc time)
  8.164326 seconds (253.69 k allocations: 16.354 MiB, 0.37% gc time)
 96.330278 seconds (31.92 M allocations: 27.921 GiB, 14.43% gc time)
Vector tests
  2.067752 seconds (422.59 k allocations: 22.299 MiB, 1.52% gc time)
  0.016003 seconds (19.89 k allocations: 785.171 KiB)
  0.067212 seconds (34.29 k allocations: 1.483 MiB)
  0.020246 seconds (27.42 k allocations: 1.113 MiB)
  3.195785 seconds (978.82 k allocations: 51.529 MiB, 2.29% gc time)
  0.187238 seconds (137.18 k allocations: 6.256 MiB)
 60.752084 seconds (21.54 M allocations: 1.072 GiB, 3.63% gc time)
Singularities tests
    Jacobi singularity tests
    Ray tests
110.327349 seconds (33.93 M allocations: 1.892 GiB, 3.35% gc time)
Integral Equations tests
 31.810738 seconds (6.16 M allocations: 334.648 MiB, 2.29% gc time)
  0.365705 seconds (99.04 k allocations: 5.479 MiB, 10.18% gc time)
ERROR: LoadError: LoadError: getindex(::typeof(a), ::Int) is not defined.
Stacktrace:
 [1] getindex(::StaticArrays.SVector{2,Float64}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:2
 [2] append_any(::StaticArrays.SVector{2,Float64}, ::Vararg{StaticArrays.SVector{2,Float64},N} where N) at ./essentials.jl:170
 [3] #standardLowRankFun#180(::Symbol, ::Int64, ::Int64, ::Int64, ::Function, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:82
 [4] (::ApproxFun.#kw##standardLowRankFun)(::Array{Any,1}, ::ApproxFun.#standardLowRankFun, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at ./<missing>:0
 [5] #LowRankFun#177(::Symbol, ::Symbol, ::Bool, ::Int64, ::Int64, ::Int64, ::Type{T} where T, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:65
 [6] ApproxFun.LowRankFun(::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:64
 [7] #LowRankFun#194(::Array{Any,1}, ::Type{T} where T, ::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [8] ApproxFun.LowRankFun(::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/IntegralEquationsTest.jl, in expression starting on line 70
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl, in expression starting on line 237
==============================[ ERROR: ApproxFun ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ApproxFun had test errors

>>> End of log
