>>> 'Pkg.add("ApproxFun")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.2
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.4.0
INFO: Installing StatsBase v0.13.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated

>>> 'Pkg.test("ApproxFun")' log
Julia Version 0.6.0-pre.beta.337
Commit 98414b9 (2017-04-26 01:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (368.6796875 MB free)
Uptime: 4164.0 sec
Load Avg:  0.96533203125  0.97607421875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     201853 s       5012 s      20126 s     138406 s          4 s
#2  3503 MHz      56449 s       1936 s      15344 s     332954 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ApproxFun                     0.6.0
 - JSON                          0.9.1
14 additional packages:
 - BandedMatrices                0.2.2
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.4.0
 - StatsBase                     0.13.1
 - ToeplitzMatrices              0.2.0
INFO: Testing ApproxFun
Julia Version 0.6.0-pre.beta.337
Commit 98414b9 (2017-04-26 01:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Helper tests
Domain tests
  5.928717 seconds (2.45 M allocations: 128.211 MiB, 1.47% gc time)
Fun tests
 58.914081 seconds (26.86 M allocations: 1.874 GiB, 2.50% gc time)
 88.211438 seconds (27.29 M allocations: 1.443 GiB, 2.05% gc time)
  0.954143 seconds (267.29 k allocations: 14.610 MiB, 2.15% gc time)
  9.981094 seconds (2.96 M allocations: 157.697 MiB, 1.73% gc time)
Operator tests
  2.802784 seconds (506.69 k allocations: 24.736 MiB, 0.92% gc time)
  5.090874 seconds (973.88 k allocations: 47.261 MiB, 1.05% gc time)
  2.650916 seconds (576.06 k allocations: 28.981 MiB, 1.11% gc time)
  3.239573 seconds (796.55 k allocations: 42.664 MiB, 1.54% gc time)
  3.206813 seconds (834.72 k allocations: 40.445 MiB, 0.80% gc time)
  4.791791 seconds (1.65 M allocations: 185.443 MiB, 3.93% gc time)
  6.173817 seconds (1.91 M allocations: 120.792 MiB, 1.91% gc time)
  0.042473 seconds (14.55 k allocations: 928.115 KiB)
  0.267202 seconds (52.13 k allocations: 2.767 MiB)
114.235096 seconds (42.33 M allocations: 2.497 GiB, 2.69% gc time)
ODE tests
  0.126697 seconds (15.53 k allocations: 999.403 KiB)
  2.522367 seconds (486.41 k allocations: 26.608 MiB, 1.22% gc time)
  3.173320 seconds (634.96 k allocations: 34.563 MiB, 1.91% gc time)
  1.071907 seconds (260.97 k allocations: 24.823 MiB, 2.02% gc time)
  3.022858 seconds (828.11 k allocations: 45.072 MiB, 2.75% gc time)
  1.324795 seconds (433.95 k allocations: 22.835 MiB, 1.93% gc time)
  8.757182 seconds (249.49 k allocations: 16.098 MiB, 0.28% gc time)
 96.223888 seconds (31.74 M allocations: 27.915 GiB, 12.42% gc time)
Vector tests
  2.097415 seconds (422.62 k allocations: 22.239 MiB, 1.62% gc time)
  0.019265 seconds (19.89 k allocations: 785.562 KiB)
  0.076906 seconds (34.29 k allocations: 1.484 MiB)
  0.014653 seconds (27.42 k allocations: 1.114 MiB)
  3.564910 seconds (944.01 k allocations: 49.123 MiB, 1.79% gc time)
  0.286532 seconds (137.80 k allocations: 6.290 MiB, 10.47% gc time)
 61.161933 seconds (21.50 M allocations: 1.069 GiB, 3.14% gc time)
Singularities tests
    Jacobi singularity tests
    Ray tests
112.383758 seconds (33.77 M allocations: 1.874 GiB, 2.78% gc time)
Integral Equations tests
 29.024742 seconds (6.02 M allocations: 326.462 MiB, 1.73% gc time)
  0.413812 seconds (99.05 k allocations: 5.484 MiB)
ERROR: LoadError: LoadError: getindex(::typeof(a), ::Int) is not defined.
Stacktrace:
 [1] getindex(::StaticArrays.SVector{2,Float64}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:2
 [2] append_any(::StaticArrays.SVector{2,Float64}, ::Vararg{StaticArrays.SVector{2,Float64},N} where N) at ./essentials.jl:170
 [3] #standardLowRankFun#180(::Symbol, ::Int64, ::Int64, ::Int64, ::Function, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:82
 [4] (::ApproxFun.#kw##standardLowRankFun)(::Array{Any,1}, ::ApproxFun.#standardLowRankFun, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at ./<missing>:0
 [5] #LowRankFun#177(::Symbol, ::Symbol, ::Bool, ::Int64, ::Int64, ::Int64, ::Type{T} where T, ::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:65
 [6] ApproxFun.LowRankFun(::ApproxFun.F, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:64
 [7] #LowRankFun#194(::Array{Any,1}, ::Type{T} where T, ::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [8] ApproxFun.LowRankFun(::Function, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}, ::ApproxFun.JacobiWeight{ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}},ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/LowRankFun.jl:184
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/IntegralEquationsTest.jl, in expression starting on line 70
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl, in expression starting on line 237
==============================[ ERROR: ApproxFun ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ApproxFun had test errors

>>> End of log
