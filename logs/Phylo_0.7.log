>>> 'Pkg.add("Phylo")' log
[ Info: Cloning cache of Phylo from https://github.com/richardreeve/Phylo.jl.git
[ Info: Cloning cache of Tokenize from https://github.com/KristofferC/Tokenize.jl.git
[ Info: Installing BinDeps v0.8.5
[ Info: Installing Calculus v0.2.2
[ Info: Installing DataStructures v0.7.4
[ Info: Installing Distributions v0.15.0
[ Info: Installing PDMats v0.8.0
[ Info: Installing Phylo v0.2.1
[ Info: Installing QuadGK v0.2.0
[ Info: Installing Rmath v0.3.1
[ Info: Installing SHA v0.5.3
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing Tokenize v0.4.2
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
[ Info: Building Rmath
┌ Error: ------------------------------------------------------------
│ # Build failed for Rmath
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:6
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions and Rmath had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions", "Rmath")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("Phylo")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     353024 s         98 s      19600 s     126617 s          5 s
       #2  3499 MHz      55248 s         42 s       7097 s     523036 s          0 s
       
  Memory: 2.93927001953125 GB (926.5078125 MB free)
  Uptime: 5980.0 sec
  Load Avg:  0.98486328125  0.9609375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Phylo                         0.2.1
16 additional packages:
 - BinDeps                       0.8.5
 - Calculus                      0.2.2
 - Compat                        0.48.0
 - DataStructures                0.7.4
 - Distributions                 0.15.0
 - Nullables                     0.0.3
 - PDMats                        0.8.0
 - QuadGK                        0.2.0
 - Rmath                         0.3.1
 - SHA                           0.5.3
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StatsBase                     0.19.5
 - StatsFuns                     0.5.0
 - Tokenize                      0.4.2
 - URIParser                     0.3.0
[ Info: Computing test dependencies for Phylo...
[ Info: Cloning cache of RCall from https://github.com/JuliaInterop/RCall.jl.git
[ Info: Installing AxisArrays v0.2.0
[ Info: Installing CategoricalArrays v0.3.3
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing DataArrays v0.7.0
[ Info: Installing DataFrames v0.11.5
[ Info: Installing DataStreams v0.3.4
[ Info: Installing IntervalSets v0.1.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing Missings v0.2.4
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing RCall v0.10.1
[ Info: Installing RangeArrays v0.2.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Installing WeakRefStrings v0.4.1
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Testing Phylo
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = #2 at runtests.jl:5 [inlined]
└ @ Core runtests.jl:5
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = #1 at runtests.jl:4 [inlined]
└ @ Core runtests.jl:4
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = #1 at runtests.jl:4 [inlined]
└ @ Core runtests.jl:4
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = #6 at runtests.jl:7 [inlined]
└ @ Core runtests.jl:7
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = #5 at runtests.jl:6 [inlined]
└ @ Core runtests.jl:6
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = #5 at runtests.jl:6 [inlined]
└ @ Core runtests.jl:6
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Running tests for files:
    = Interface.jl
    = Iterators.jl
    = newick.jl
    = rand.jl
    = rcall.jl
    = routes.jl
    = show.jl
    = Tree.jl

┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Running tests...
    * Testing Interface.jl ...
WARNING: importing deprecated binding Base.iteratorsize into Phylo.
WARNING: importing deprecated binding Base.iteratoreltype into Phylo.
WARNING: importing deprecated binding Base.Void into Phylo.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Node.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Node.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Node.jl:1
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Tree.jl:172
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:5
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:5
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:9
WARNING: Base.iteratoreltype is deprecated, use IteratorEltype instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:76
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:76
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:120
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:120
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:166
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:166
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:211
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Phylo/src/Iterators.jl:211
WARNING: importing deprecated binding Base.logdet into PDMats.
WARNING: importing deprecated binding Base.diag into PDMats.
WARNING: importing deprecated binding Base.diagm into PDMats.
WARNING: importing deprecated binding Base.eigmax into PDMats.
WARNING: importing deprecated binding Base.eigmin into PDMats.
ERROR: LoadError: UndefVarError: BLAS not defined
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1011
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:295 [inlined]
 [6] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PDMats/src/PDMats.jl:39
ERROR: LoadError: Failed to precompile PDMats to /home/vagrant/.julia/lib/v0.7/PDMats.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:295 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Distributions/src/Distributions.jl:5
ERROR: LoadError: LoadError: Failed to precompile Distributions to /home/vagrant/.julia/lib/v0.7/Distributions.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include at ./sysimg.jl:26 [inlined]
 [8] include(::String) at /home/vagrant/.julia/v0.7/Phylo/src/Phylo.jl:14
 [9] top-level scope
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1011
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] top-level scope
 [14] eval at ./boot.jl:295 [inlined]
 [15] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Phylo/src/rand.jl:1
in expression starting at /home/vagrant/.julia/v0.7/Phylo/src/Phylo.jl:113
ERROR: LoadError: LoadError: Failed to precompile Phylo to /home/vagrant/.julia/lib/v0.7/Phylo.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] include(::String) at ./sysimg.jl:65
 [9] top-level scope at ./<missing>:19
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1011
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Phylo/test/test_Interface.jl:3
in expression starting at /home/vagrant/.julia/v0.7/Phylo/test/runtests.jl:16
┌ Error: ------------------------------------------------------------
│ # Testing failed for Phylo
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Phylo/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
[ Info: Removing AxisArrays v0.2.0
[ Info: Removing CategoricalArrays v0.3.3
[ Info: Removing CodecZlib v0.4.2
[ Info: Removing DataArrays v0.7.0
[ Info: Removing DataFrames v0.11.5
[ Info: Removing DataStreams v0.3.4
[ Info: Removing IntervalSets v0.1.1
[ Info: Removing IterTools v0.2.1
[ Info: Removing Missings v0.2.4
[ Info: Removing NamedTuples v4.0.0
[ Info: Removing RCall v0.10.1
[ Info: Removing RangeArrays v0.2.0
[ Info: Removing Reexport v0.1.0
[ Info: Removing TranscodingStreams v0.4.1
[ Info: Removing WeakRefStrings v0.4.1
ERROR: Phylo had test errors

>>> End of log
