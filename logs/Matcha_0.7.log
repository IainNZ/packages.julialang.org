>>> 'Pkg.add("Matcha")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Matcha from https://github.com/SimonDanisch/Matcha.jl.git
[ Info: Installing Matcha v0.1.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Matcha
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Matcha")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4419
Commit 23453713d4 (2018-02-28 05:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    2983768 s         84 s     174322 s     921023 s         90 s
       #2  3507 MHz     762372 s       6479 s     101130 s    3830524 s          0 s
       
  Memory: 2.93927001953125 GB (846.83984375 MB free)
  Uptime: 47949.0 sec
  Load Avg:  0.9970703125  0.982421875  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - Matcha                        0.1.1
2 additional packages:
 - Compat                        0.55.1
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Matcha
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Matcha/test/runtests.jl:2
┌ Warning: `isnumber(c::Char)` is deprecated, use `isnumeric(c)` instead.
│   caller = trymatch(::typeof(isnumber), ::Char, ::Matcha.History{String,SubString{String},Int64}) at Matcha.jl:25
└ @ Matcha Matcha.jl:25
ERROR: LoadError: StringIndexError("(ɔ◔‿◔)ɔ ♥ (⊙.⊙(☉̃ₒ☉)⊙.⊙)", 3)
Stacktrace:
 [1] string_index_err(::String, ::Int64) at ./strings/string.jl:7
 [2] Type at ./strings/substring.jl:32 [inlined]
 [3] Type at ./strings/substring.jl:38 [inlined]
 [4] view_constructor(::Matcha.History{String,SubString{String},Int64}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:77
 [5] finish_match(::Bool, ::Matcha.History{String,SubString{String},Int64}, ::Int64) at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:81
 [6] inner_matchat(::String, ::Int64, ::Tuple{Greed{typeof(Matcha.alwaysmatch),UnitRange{Int64}},Char}, ::Matcha.History{String,SubString{String},Int64}) at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:137
 [7] inner_matchat(::String, ::Int64, ::Tuple{Char,Greed{typeof(Matcha.alwaysmatch),UnitRange{Int64}},Char}, ::Matcha.History{String,SubString{String},Int64}) at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:133
 [8] matchat at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:170 [inlined]
 [9] matchat(::String, ::Tuple{Char,Greed{typeof(Matcha.alwaysmatch),UnitRange{Int64}},Char}) at /home/vagrant/.julia/v0.7/Matcha/src/Matcha.jl:164
 [10] top-level scope
 [11] include at ./boot.jl:305 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1066
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] exec_options(::Base.JLOptions) at ./client.jl:332
 [15] _start() at ./client.jl:448
in expression starting at /home/vagrant/.julia/v0.7/Matcha/test/runtests.jl:17
┌ Error: ------------------------------------------------------------
│ # Testing failed for Matcha
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Matcha/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:693
│     [3] run(::Cmd) at ./process.jl:655
│     [4] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [5] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [6] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [9] #test at ./<missing>:0 [inlined]
│     [10] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] top-level scope
│     [17] eval at ./boot.jl:308 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:448
└ @ Pkg.Entry entry.jl:732
ERROR: Matcha had test errors

>>> End of log
