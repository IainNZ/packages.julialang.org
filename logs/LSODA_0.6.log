>>> 'Pkg.add("LSODA")' log
INFO: Cloning cache of LSODA from https://github.com/rveltz/LSODA.jl.git
INFO: Installing BinDeps v0.8.8
INFO: Installing DataStructures v0.8.4
INFO: Installing DiffEqBase v3.13.3
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LSODA v0.3.0
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.2
INFO: Installing NamedTuples v4.0.2
INFO: Installing Parameters v0.9.1
INFO: Installing RecipesBase v0.3.1
INFO: Installing RecursiveArrayTools v0.15.0
INFO: Installing Requires v0.4.4
INFO: Installing SHA v0.5.7
INFO: Installing SimpleTraits v0.6.0
INFO: Installing StaticArrays v0.7.2
INFO: Installing TableTraits v0.2.0
INFO: Installing URIParser v0.3.1
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building LSODA
Info: Attempting to create directory /home/vagrant/.julia/v0.6/LSODA/deps/downloads
Info: Downloading file https://github.com/sdwfrost/liblsoda/archive/v0.1.1.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   125    0   125    0     0    913      0 --:--:-- --:--:-- --:--:--   919
  0     0    0  110k    0     0   340k      0 --:--:-- --:--:-- --:--:--  340k
Info: Done downloading file https://github.com/sdwfrost/liblsoda/archive/v0.1.1.tar.gz
Info: Attempting to create directory /home/vagrant/.julia/v0.6/LSODA/deps/src
Info: Attempting to create directory /home/vagrant/.julia/v0.6/LSODA/deps
Info: Directory /home/vagrant/.julia/v0.6/LSODA/deps already exists
Info: Attempting to create directory /home/vagrant/.julia/v0.6/LSODA/deps/usr/lib
Info: Changing directory to /home/vagrant/.julia/v0.6/LSODA/deps/src/liblsoda-0.1.1
make -C src
make[1]: Entering directory `/home/vagrant/.julia/v0.6/LSODA/deps/src/liblsoda-0.1.1/src'
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c cfode.c -o cfode.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c cfode_static.c -o cfode_static.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c common.c -o common.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c corfailure.c -o corfailure.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c correction.c -o correction.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c daxpy.c -o daxpy.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c ddot.c -o ddot.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c dgefa.c -o dgefa.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c dgesl.c -o dgesl.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c dscal.c -o dscal.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c fnorm.c -o fnorm.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c idamax.c -o idamax.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c intdy.c -o intdy.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c lsoda.c -o lsoda.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c methodswitch.c -o methodswitch.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c orderswitch.c -o orderswitch.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c prja.c -o prja.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c scaleh.c -o scaleh.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c solsy.c -o solsy.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c stoda.c -o stoda.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c vmnorm.c -o vmnorm.o
gcc  -Wall -O3 -ffast-math -DCFODE_STATIC -fPIC   -DNDEBUG -c strdup_printf.c -o strdup_printf.o
lsoda.c: In function ‘lsoda’:
lsoda.c:733:65: warning: ‘i’ may be used uninitialized in this function [-Wmaybe-uninitialized]
       softfailure(-6, "[lsoda] ewt[%d] = %g <= 0.\n", i, _C(ewt)[i]);
                                                                 ^
rm -rf liblsoda.so
gcc   -shared -o liblsoda.so cfode.o cfode_static.o common.o corfailure.o correction.o daxpy.o ddot.o dgefa.o dgesl.o dscal.o fnorm.o idamax.o intdy.o lsoda.o methodswitch.o orderswitch.o prja.o scaleh.o solsy.o stoda.o vmnorm.o strdup_printf.o
make[1]: Leaving directory `/home/vagrant/.julia/v0.6/LSODA/deps/src/liblsoda-0.1.1/src'
Info: Changing directory to /home/vagrant/.julia/v0.6/LSODA/deps/src/liblsoda-0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of LSODA
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LSODA")' log
Julia Version 0.6.4
Commit 9d11f62bcb (2018-07-09 19:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (990.94921875 MB free)
Uptime: 54245.0 sec
Load Avg:  1.0830078125  1.03125  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3407516 s         60 s     256212 s     892771 s          3 s
#2  3500 MHz     476639 s       4590 s      84004 s    4795409 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem MAX_THREADS=16)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - LSODA                         0.3.0
19 additional packages:
 - BinDeps                       0.8.8
 - Compat                        1.0.0
 - DataStructures                0.8.4
 - DiffEqBase                    3.13.3
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.2
 - NamedTuples                   4.0.2
 - Nullables                     0.0.6
 - Parameters                    0.9.1
 - RecipesBase                   0.3.1
 - RecursiveArrayTools           0.15.0
 - Requires                      0.4.4
 - SHA                           0.5.7
 - SimpleTraits                  0.6.0
 - StaticArrays                  0.7.2
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for LSODA...
INFO: Cloning cache of DiffEqOperators from https://github.com/JuliaDiffEq/DiffEqOperators.jl.git
INFO: Cloning cache of DiffEqProblemLibrary from https://github.com/JuliaDiffEq/DiffEqProblemLibrary.jl.git
INFO: Installing Conda v0.8.1
INFO: Installing DiffEqBiological v2.3.2
INFO: Installing DiffEqJump v4.5.1
INFO: Installing DiffEqOperators v1.3.0
INFO: Installing DiffEqProblemLibrary v2.5.0
INFO: Installing ParameterizedFunctions v3.1.0
INFO: Installing PoissonRandom v0.0.1
INFO: Installing RandomNumbers v0.1.1
INFO: Installing Reexport v0.1.0
INFO: Installing SymEngine v0.4.0
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building SymEngine
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Testing LSODA
--> test1 =============
at t =   4.0000e-01 y=   9.851712e-01   3.386380e-05   1.479493e-02
at t =   4.0000e+00 y=   9.055333e-01   2.240655e-05   9.444430e-02
at t =   4.0000e+01 y=   7.158403e-01   9.186334e-06   2.841505e-01
at t =   4.0000e+02 y=   4.505250e-01   3.222964e-06   5.494717e-01
at t =   4.0000e+03 y=   1.831976e-01   8.941773e-07   8.168015e-01
at t =   4.0000e+04 y=   3.898729e-02   1.621940e-07   9.610125e-01
at t =   4.0000e+05 y=   4.936362e-03   1.984221e-08   9.950636e-01
at t =   4.0000e+06 y=   5.161833e-04   2.065787e-09   9.994838e-01
at t =   4.0000e+07 y=   5.179804e-05   2.072027e-10   9.999482e-01
at t =   4.0000e+08 y=   5.283686e-06   2.113485e-11   9.999947e-01
at t =   4.0000e+09 y=   4.658646e-07   1.863459e-12   9.999995e-01
at t =   4.0000e+10 y=   1.431680e-08   5.726724e-14   1.000000e+00
  0.056761 seconds (9.82 k allocations: 1.474 MiB)
Done!

--> test2 =============

####################################
--> Use of a old wrapper for speed comparison
at t =   4.0000e-01 y=   9.851712e-01   3.386380e-05   1.479493e-02
at t =   4.0000e+00 y=   9.055333e-01   2.240655e-05   9.444430e-02
at t =   4.0000e+01 y=   7.158403e-01   9.186334e-06   2.841505e-01
at t =   4.0000e+02 y=   4.505250e-01   3.222964e-06   5.494717e-01
at t =   4.0000e+03 y=   1.831976e-01   8.941773e-07   8.168015e-01
at t =   4.0000e+04 y=   3.898729e-02   1.621940e-07   9.610125e-01
at t =   4.0000e+05 y=   4.936362e-03   1.984221e-08   9.950636e-01
at t =   4.0000e+06 y=   5.161833e-04   2.065787e-09   9.994838e-01
at t =   4.0000e+07 y=   5.179804e-05   2.072027e-10   9.999482e-01
at t =   4.0000e+08 y=   5.283686e-06   2.113485e-11   9.999947e-01
at t =   4.0000e+09 y=   4.658646e-07   1.863459e-12   9.999995e-01
at t =   4.0000e+10 y=   1.431680e-08   5.726724e-14   1.000000e+00
  0.319102 seconds (284.42 k allocations: 13.661 MiB)
at t =   4.0000e-01 y=   9.851712e-01   3.386380e-05   1.479493e-02
at t =   4.0000e+00 y=   9.055333e-01   2.240655e-05   9.444430e-02
at t =   4.0000e+01 y=   7.158403e-01   9.186334e-06   2.841505e-01
at t =   4.0000e+02 y=   4.505250e-01   3.222964e-06   5.494717e-01
at t =   4.0000e+03 y=   1.831976e-01   8.941773e-07   8.168015e-01
at t =   4.0000e+04 y=   3.898729e-02   1.621940e-07   9.610125e-01
at t =   4.0000e+05 y=   4.936362e-03   1.984221e-08   9.950636e-01
at t =   4.0000e+06 y=   5.161833e-04   2.065787e-09   9.994838e-01
at t =   4.0000e+07 y=   5.179804e-05   2.072027e-10   9.999482e-01
at t =   4.0000e+08 y=   5.283686e-06   2.113485e-11   9.999947e-01
at t =   4.0000e+09 y=   4.658646e-07   1.863459e-12   9.999995e-01
at t =   4.0000e+10 y=   1.431680e-08   5.726724e-14   1.000000e+00
  0.033048 seconds (3.10 k allocations: 4.133 MiB, 29.54% gc time)

####################################
--> Use of a vector of times where output is required
  0.000302 seconds (2.16 k allocations: 123.203 KiB)
[1.0 0.0 0.0; 0.91175 2.31366e-5 0.0882271; 0.716857 9.22566e-6 0.283133; 0.45065 3.22455e-6 0.549347; 0.183207 8.94234e-7 0.816792; 0.0389876 1.62195e-7 0.961012; 0.00493637 1.98422e-8 0.995064; 0.000516183 2.06579e-9 0.999484; 5.17981e-5 2.07203e-10 0.999948; 5.28364e-6 2.11347e-11 0.999995; 4.65874e-7 1.8635e-12 1.0; 1.42919e-8 5.71677e-14 1.0]

####################################
--> Use of a lsoda_evolve!

--> test common =============
INFO: LSODA tests passed
INFO: Removing Conda v0.8.1
INFO: Removing DiffEqBiological v2.3.2
INFO: Removing DiffEqJump v4.5.1
INFO: Removing DiffEqOperators v1.3.0
INFO: Removing DiffEqProblemLibrary v2.5.0
INFO: Removing ParameterizedFunctions v3.1.0
INFO: Removing PoissonRandom v0.0.1
INFO: Removing RandomNumbers v0.1.1
INFO: Removing Reexport v0.1.0
INFO: Removing SymEngine v0.4.0
INFO: Removing VersionParsing v1.1.1

>>> End of log
