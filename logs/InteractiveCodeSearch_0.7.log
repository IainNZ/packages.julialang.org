>>> 'Pkg.add("InteractiveCodeSearch")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of InteractiveCodeSearch from https://github.com/tkf/InteractiveCodeSearch.jl.git
[ Info: Installing InteractiveCodeSearch v0.0.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of InteractiveCodeSearch
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("InteractiveCodeSearch")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4817
Commit 7c2460930c (2018-04-08 17:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1837628 s       2265 s     142309 s     521869 s         14 s
       #2  3499 MHz     452647 s       5580 s      54150 s    2354042 s          1 s
       
  Memory: 2.939197540283203 GB (1930.63671875 MB free)
  Uptime: 29178.0 sec
  Load Avg:  0.9970703125  0.9853515625  1.03466796875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - InteractiveCodeSearch         0.0.2
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing InteractiveCodeSearch
WARNING: importing deprecated binding Base.Void into InteractiveCodeSearch.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:72
WARNING: importing deprecated binding Base.edit into InteractiveCodeSearch.
WARNING: Base.edit is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
  likely near /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:87
┌ Warning: Deprecated syntax `implicit assignment to global variable `isline``.
│ Use `global isline` instead.
└ @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `isline``.
│ Use `global isline` instead.
└ @ nothing none:0
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:7
┌ Warning: `readandwrite(::Cmd)` is deprecated in favor of `open(::Cmd, "r+").
│ You may read/write the returned process object for access to stdio.
│   caller = read_stdout(::Cmd, ::String) at InteractiveCodeSearch.jl:40
└ @ InteractiveCodeSearch InteractiveCodeSearch.jl:40
┌ Warning: `wait(t::Task)` is deprecated, use `fetch(t)` instead.
│   caller = read_stdout(::Cmd, ::String) at InteractiveCodeSearch.jl:44
└ @ InteractiveCodeSearch InteractiveCodeSearch.jl:44
Test Summary: | Pass  Total
read_stdout   |    1      1
Test Summary: | Pass  Total
parse_loc     |    1      1
┌ Warning: `names(m, all)` is deprecated, use `names(m, all=all)` instead.
│   caller = list_locatables(::Module) at InteractiveCodeSearch.jl:19
└ @ InteractiveCodeSearch InteractiveCodeSearch.jl:19
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `occursin(r, s)` instead.
│   caller = is_identifier at InteractiveCodeSearch.jl:12 [inlined]
└ @ Core InteractiveCodeSearch.jl:12
Test Summary:   | Pass  Total
list_locatables |    1      1
Test Summary:  | Pass  Total
module_methods |    2      2
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #with_config#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:open, :interactive_matcher, :auto_open),Tuple{getfield(Main.TestInteractiveCodeSearch, Symbol("##3#7")),Cmd,Bool}}}, ::Function, ::getfield(Main.TestInteractiveCodeSearch, Symbol("##2#6"))) at runtests.jl:26
└ @ Main.TestInteractiveCodeSearch runtests.jl:26
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #with_config#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:open, :interactive_matcher, :auto_open),Tuple{getfield(Main.TestInteractiveCodeSearch, Symbol("##5#9")),Cmd,Bool}}}, ::Function, ::getfield(Main.TestInteractiveCodeSearch, Symbol("##4#8"))) at runtests.jl:26
└ @ Main.TestInteractiveCodeSearch runtests.jl:26
Test Summary: | Pass  Total
choose_method |    6      6
┌ Warning: `find(f::Function, A::AbstractVector)` is deprecated, use `findall(f, A)` instead.
│   caller = single_macrocall(::Expr) at InteractiveCodeSearch.jl:106
└ @ InteractiveCodeSearch InteractiveCodeSearch.jl:106
Test Summary:    | Pass  Total
single_macrocall |    4      4
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = run_open at InteractiveCodeSearch.jl:68 [inlined]
└ @ Core InteractiveCodeSearch.jl:68
INFO: Opening test.jl:249
patched: Error During Test at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:11
  Test threw exception write: broken pipe (EPIPE)
  Expression: begin
    $(Expr(:escape, :(#= /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:107 =# @eval #= /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:107 =# @search(#= /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:107 =# @search()))))
    true
end
  write: broken pipe (EPIPE)
  Stacktrace:
   [1] try_yieldto(::typeof(Base.ensure_rescheduled), ::Base.RefValue{Task}) at ./event.jl:208
   [2] wait() at ./event.jl:267
   [3] uv_write(::Base.PipeEndpoint, ::Ptr{UInt8}, ::UInt64) at ./stream.jl:786
   [4] unsafe_write(::Base.PipeEndpoint, ::Ptr{UInt8}, ::UInt64) at ./stream.jl:834
   [5] unsafe_write at ./io.jl:225 [inlined]
   [6] macro expansion at ./gcutils.jl:82 [inlined]
   [7] write(::Pipe, ::String) at ./strings/io.jl:150
   [8] read_stdout(::Cmd, ::String) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:42
   [9] run_matcher(::String) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:53
   [10] choose_method(::Base.MethodList) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:60
   [11] search_methods(::Base.MethodList) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:75
   [12] code_search(::Function) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/src/InteractiveCodeSearch.jl:79
   [13] top-level scope
   [14] eval at ./boot.jl:317 [inlined]
   [15] eval at ./sysimg.jl:74 [inlined]
   [16] (::getfield(Main.TestInteractiveCodeSearch, Symbol("##10#12")))() at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:11
   [17] #with_config#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:interactive_matcher, :open, :auto_open),Tuple{Cmd,getfield(Main.TestInteractiveCodeSearch, Symbol("#dummy_openline#11")),Bool}}}, ::Function, ::getfield(Main.TestInteractiveCodeSearch, Symbol("##10#12"))) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:24
   [18] (::getfield(Main.TestInteractiveCodeSearch, Symbol("#kw##with_config")))(::NamedTuple{(:interactive_matcher, :open, :auto_open),Tuple{Cmd,getfield(Main.TestInteractiveCodeSearch, Symbol("#dummy_openline#11")),Bool}}, ::typeof(Main.TestInteractiveCodeSearch.with_config), ::Function) at ./<missing>:0
   [19] macro expansion at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:101 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [21] top-level scope at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:98
INFO: Opening test.jl:249
patched: Test Failed at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:109
  Expression: open_args == repeat([(find_source_file("test.jl"), 249)], outer=3)
   Evaluated: Any[(nothing, 249), (nothing, 249)] == Tuple{Nothing,Int64}[(nothing, 249), (nothing, 249), (nothing, 249)]
Stacktrace:
 [1] (::getfield(Main.TestInteractiveCodeSearch, Symbol("##10#12")))() at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:109
 [2] #with_config#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:interactive_matcher, :open, :auto_open),Tuple{Cmd,getfield(Main.TestInteractiveCodeSearch, Symbol("#dummy_openline#11")),Bool}}}, ::Function, ::getfield(Main.TestInteractiveCodeSearch, Symbol("##10#12"))) at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:24
 [3] (::getfield(Main.TestInteractiveCodeSearch, Symbol("#kw##with_config")))(::NamedTuple{(:interactive_matcher, :open, :auto_open),Tuple{Cmd,getfield(Main.TestInteractiveCodeSearch, Symbol("#dummy_openline#11")),Bool}}, ::typeof(Main.TestInteractiveCodeSearch.with_config), ::Function) at ./<missing>:0
 [4] macro expansion at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:101 [inlined]
 [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [6] top-level scope at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:98
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #with_config#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:interactive_matcher, :open, :auto_open),Tuple{Cmd,getfield(Main.TestInteractiveCodeSearch, Symbol("#dummy_openline#11")),Bool}}}, ::Function, ::getfield(Main.TestInteractiveCodeSearch, Symbol("##10#12"))) at runtests.jl:26
└ @ Main.TestInteractiveCodeSearch runtests.jl:26
Test Summary: | Pass  Fail  Error  Total
patched       |    2     1      1      4
ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl:97
┌ Error: ------------------------------------------------------------
│ # Testing failed for InteractiveCodeSearch
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/InteractiveCodeSearch/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#542(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: InteractiveCodeSearch had test errors

>>> End of log
