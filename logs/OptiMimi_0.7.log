>>> 'Pkg.add("OptiMimi")' log
[ Info: Cloning cache of OptiMimi from https://github.com/jrising/OptiMimi.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Calculus v0.2.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Cbc v0.3.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Clp v0.3.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ColorTypes v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Colors v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Combinatorics v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CommonSubexpressions v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Contour v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataArrays v0.6.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataFrames v0.10.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffResults v0.0.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffRules v0.0.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Distributions v0.15.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DocStringExtensions v0.4.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Documenter v0.12.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FileIO v0.6.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FixedPointNumbers v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ForwardDiff v0.7.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing GZip v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MathProgBase v0.7.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Measures v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Mimi v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NLopt v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NamedArrays v0.7.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing OptiMimi v0.0.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PDMats v0.8.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PlotThemes v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PlotUtils v0.4.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Plots v0.14.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing QuadGK v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Reexport v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requires v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Rmath v0.3.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Showoff v0.1.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsFuns v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building Cbc @ Main none:10
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Cbc/deps/build.jl:62
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Building Rmath @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:47
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building Plots @ Main none:10
[ Info: Building NLopt @ Main none:10
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:30.
│ Use `mutable struct` instead.
└ @ nothing build.jl:30
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:56
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of OptiMimi
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("OptiMimi")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4989249 s        118 s     236149 s    1067242 s         29 s
       #2  3500 MHz    1030923 s         79 s      91024 s    6149030 s          0 s
       
  Memory: 2.93927001953125 GB (800.04296875 MB free)
  Uptime: 73781.0 sec
  Load Avg:  1.0029296875  0.9853515625  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - OptiMimi                      0.0.2
48 additional packages:
 - BinDeps                       0.8.2
 - Calculus                      0.2.2
 - Cbc                           0.3.2
 - Clp                           0.3.1
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Combinatorics                 0.5.0
 - CommonSubexpressions          0.0.1
 - Compat                        0.42.0
 - Contour                       0.4.0
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.7.4
 - DiffResults                   0.0.2
 - DiffRules                     0.0.2
 - Distributions                 0.15.0
 - DocStringExtensions           0.4.1
 - Documenter                    0.12.5
 - FileIO                        0.6.1
 - FixedPointNumbers             0.4.3
 - ForwardDiff                   0.7.0
 - GZip                          0.3.0
 - IterTools                     0.2.0
 - MathProgBase                  0.7.0
 - Measures                      0.1.0
 - Mimi                          0.4.0
 - NLopt                         0.3.6
 - NaNMath                       0.3.0
 - NamedArrays                   0.7.0
 - Nullables                     0.0.2
 - PDMats                        0.8.0
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.14.2
 - Polynomials                   0.2.0
 - QuadGK                        0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rmath                         0.3.1
 - SHA                           0.5.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - StatsFuns                     0.5.0
 - URIParser                     0.3.0
[ Info: Testing OptiMimi @ Base.Pkg.Entry entry.jl:723
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
[ Warning: Replacing module `DataStructures` @ Base loading.jl:350
[ Warning: Replacing module `Compat` @ Base loading.jl:350
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
[ Warning: Replacing module `DataStructures` @ Base loading.jl:350
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{T}(::Type{T}, ::Type{NAtype})` around /home/vagrant/.julia/v0.7/DataArrays/src/natype.jl:64.
│ Use `Base.promote_rule(#unused#::Type{T}, #unused#::Type{NAtype}) where T` instead.
└ @ nothing natype.jl:64
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{T, N}(d::AbstractDataArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:23.
│ Use `Base.eltype(d::AbstractDataArray{T, N}) where {T, N}` instead.
└ @ nothing abstractdataarray.jl:23
┌ Warning: Deprecated syntax `parametric method syntax Base.broadcast{T}(::typeof(isna), a::AbstractArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:31.
│ Use `Base.broadcast(#unused#::typeof(isna), a::AbstractArray{T}) where T` instead.
└ @ nothing abstractdataarray.jl:31
┌ Warning: Deprecated syntax `parametric method syntax isna{T}(a::AbstractArray{T}, i::Real)` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:51.
│ Use `isna(a::AbstractArray{T}, i::Real) where T` instead.
└ @ nothing abstractdataarray.jl:51
┌ Warning: Deprecated syntax `parametric method syntax each_failna{T}(da::AbstractDataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:82.
│ Use `each_failna(da::AbstractDataArray{T}) where T` instead.
└ @ nothing abstractdataarray.jl:82
┌ Warning: Deprecated syntax `parametric method syntax each_dropna{T}(da::AbstractDataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:97.
│ Use `each_dropna(da::AbstractDataArray{T}) where T` instead.
└ @ nothing abstractdataarray.jl:97
┌ Warning: Deprecated syntax `parametric method syntax _next_nonna_ind{T}(da::AbstractDataArray{T}, ind::Int)` around /home/vagrant/.julia/v0.7/DataArrays/src/abstractdataarray.jl:99.
│ Use `_next_nonna_ind(da::AbstractDataArray{T}, ind::Int) where T` instead.
└ @ nothing abstractdataarray.jl:99
┌ Warning: Deprecated syntax `parametric method syntax DataArray{T, N}(d::Array{T, N}, m::BitArray{N} = falses(size(d)))` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:58.
│ Use `DataArray(d::Array{T, N}, m::BitArray{N} = falses(size(d))) where {T, N}` instead.
└ @ nothing dataarray.jl:58
┌ Warning: Deprecated syntax `parametric method syntax DataArray{N}(T::Type, dims::NTuple{N, Int})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:70.
│ Use `DataArray(T::Type, dims::NTuple{N, Int}) where N` instead.
└ @ nothing dataarray.jl:70
┌ Warning: Deprecated syntax `parametric method syntax Base.resize!{T}(da::DataArray{T, 1}, n::Int)` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:157.
│ Use `Base.resize!(da::DataArray{T, 1}, n::Int) where T` instead.
└ @ nothing dataarray.jl:157
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{Array{S, N}}, x::DataArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:192.
│ Use `Base.convert(#unused#::Type{Array{S, N}}, x::DataArray{T, N}) where {S, T, N}` instead.
└ @ nothing dataarray.jl:192
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{Array{S}}, da::DataArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:201.
│ Use `Base.convert(#unused#::Type{Array{S}}, da::DataArray{T, N}) where {S, T, N}` instead.
└ @ nothing dataarray.jl:201
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Vector}, dv::DataVector{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:205.
│ Use `Base.convert(#unused#::Type{Vector}, dv::DataVector{T}) where T` instead.
└ @ nothing dataarray.jl:205
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Matrix}, dm::DataMatrix{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:209.
│ Use `Base.convert(#unused#::Type{Matrix}, dm::DataMatrix{T}) where T` instead.
└ @ nothing dataarray.jl:209
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, N}(::Type{Array}, da::DataArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:213.
│ Use `Base.convert(#unused#::Type{Array}, da::DataArray{T, N}) where {T, N}` instead.
└ @ nothing dataarray.jl:213
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{Array{S, N}}, da::DataArray{T, N}, replacement::Any)` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:221.
│ Use `Base.convert(#unused#::Type{Array{S, N}}, da::DataArray{T, N}, replacement::Any) where {S, T, N}` instead.
└ @ nothing dataarray.jl:221
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Vector}, dv::DataVector{T}, replacement::Any)` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:234.
│ Use `Base.convert(#unused#::Type{Vector}, dv::DataVector{T}, replacement::Any) where T` instead.
└ @ nothing dataarray.jl:234
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Matrix}, dm::DataMatrix{T}, replacement::Any)` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:238.
│ Use `Base.convert(#unused#::Type{Matrix}, dm::DataMatrix{T}, replacement::Any) where T` instead.
└ @ nothing dataarray.jl:238
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, N}(::Type{Array}, da::DataArray{T, N}, replacement::Any)` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:242.
│ Use `Base.convert(#unused#::Type{Array}, da::DataArray{T, N}, replacement::Any) where {T, N}` instead.
└ @ nothing dataarray.jl:242
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{DataArray{S, N}}, a::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:275.
│ Use `Base.convert(#unused#::Type{DataArray{S, N}}, a::AbstractArray{T, N}) where {S, T, N}` instead.
└ @ nothing dataarray.jl:275
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{DataArray{S}}, x::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:277.
│ Use `Base.convert(#unused#::Type{DataArray{S}}, x::AbstractArray{T, N}) where {S, T, N}` instead.
└ @ nothing dataarray.jl:277
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T, N}(::Type{DataArray}, x::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:279.
│ Use `Base.convert(#unused#::Type{DataArray}, x::AbstractArray{T, N}) where {T, N}` instead.
└ @ nothing dataarray.jl:279
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{S, T, N}(::Type{DataArray{S, N}}, x::DataArray{T, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:284.
│ Use `Base.convert(#unused#::Type{DataArray{S, N}}, x::DataArray{T, N}) where {S, T, N}` instead.
└ @ nothing dataarray.jl:284
┌ Warning: Deprecated syntax `parametric method syntax finduniques{T}(da::DataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:339.
│ Use `finduniques(da::DataArray{T}) where T` instead.
└ @ nothing dataarray.jl:339
┌ Warning: Deprecated syntax `parametric method syntax Base.unique{T}(da::DataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/dataarray.jl:359.
│ Use `Base.unique(da::DataArray{T}) where T` instead.
└ @ nothing dataarray.jl:359
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer, N}(refs::RefArray{R, N}, pool::Vector{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:102.
│ Use `PooledDataArray(refs::RefArray{R, N}, pool::Vector{T}) where {T, R <: Integer, N}` instead.
└ @ nothing pooleddataarray.jl:102
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer, N}(d::AbstractArray{T, N}, pool::Vector{T}, m::AbstractArray{Bool, N}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:113.
│ Use `PooledDataArray(d::AbstractArray{T, N}, pool::Vector{T}, m::AbstractArray{Bool, N}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer, N}` instead.
└ @ nothing pooleddataarray.jl:113
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer, N}(d::AbstractArray{T, N}, m::AbstractArray{Bool, N}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:140.
│ Use `PooledDataArray(d::AbstractArray{T, N}, m::AbstractArray{Bool, N}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer, N}` instead.
└ @ nothing pooleddataarray.jl:140
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{R <: Integer}(t::Type, r::Type{R}, dims::Tuple{Vararg{Int}})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:150.
│ Use `PooledDataArray(t::Type, r::Type{R}, dims::Tuple{Vararg{Int}}) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:150
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{R <: Integer}(t::Type, r::Type{R}, dims::Int...)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:151.
│ Use `PooledDataArray(t::Type, r::Type{R}, dims::Int...) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:151
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{R <: Integer}(t::Type, r::Type{R})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:155.
│ Use `PooledDataArray(t::Type, r::Type{R}) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:155
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{N}(d::BitArray{N})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:160.
│ Use `PooledDataArray(d::BitArray{N}) where N` instead.
└ @ nothing pooleddataarray.jl:160
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{N}(d::BitArray{N}, m::AbstractArray{Bool, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:161.
│ Use `PooledDataArray(d::BitArray{N}, m::AbstractArray{Bool, N}) where N` instead.
└ @ nothing pooleddataarray.jl:161
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer}(da::DataArray{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:165.
│ Use `PooledDataArray(da::DataArray{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer}` instead.
└ @ nothing pooleddataarray.jl:165
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer}(da::DataArray{T}, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:168.
│ Use `PooledDataArray(da::DataArray{T}, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer}` instead.
└ @ nothing pooleddataarray.jl:168
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer}(d::Array{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:172.
│ Use `PooledDataArray(d::Array{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer}` instead.
└ @ nothing pooleddataarray.jl:172
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{T, R <: Integer}(d::Array{T}, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:175.
│ Use `PooledDataArray(d::Array{T}, pool::Vector{T}, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where {T, R <: Integer}` instead.
└ @ nothing pooleddataarray.jl:175
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{R <: Integer}(rs::Range, r::Type{R} = DEFAULT_POOLED_REF_TYPE)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:179.
│ Use `PooledDataArray(rs::Range, r::Type{R} = DEFAULT_POOLED_REF_TYPE) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:179
WARNING: importing deprecated binding Base.Range into DataArrays.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:178
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:178
┌ Warning: Deprecated syntax `parametric method syntax pdatazeros{R <: Integer}(t::Type, r::Type{R}, dims::Int...)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:186.
│ Use `pdatazeros(t::Type, r::Type{R}, dims::Int...) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:186
┌ Warning: Deprecated syntax `parametric method syntax pdataones{R <: Integer}(t::Type, r::Type{R}, dims::Int...)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:186.
│ Use `pdataones(t::Type, r::Type{R}, dims::Int...) where R <: Integer` instead.
└ @ nothing pooleddataarray.jl:186
┌ Warning: Deprecated syntax `parametric method syntax Base.resize!{T, R}(pda::PooledDataArray{T, R, 1}, n::Int)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:211.
│ Use `Base.resize!(pda::PooledDataArray{T, R, 1}, n::Int) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:211
┌ Warning: Deprecated syntax `parametric method syntax compact{T, R <: Integer, N}(d::PooledDataArray{T, R, N})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:301.
│ Use `compact(d::PooledDataArray{T, R, N}) where {T, R <: Integer, N}` instead.
└ @ nothing pooleddataarray.jl:301
┌ Warning: Deprecated syntax `parametric method syntax Base.unique{T}(pda::PooledDataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:312.
│ Use `Base.unique(pda::PooledDataArray{T}) where T` instead.
└ @ nothing pooleddataarray.jl:312
┌ Warning: Deprecated syntax `parametric method syntax levels{T}(pda::PooledDataArray{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:359.
│ Use `levels(pda::PooledDataArray{T}) where T` instead.
└ @ nothing pooleddataarray.jl:359
┌ Warning: Deprecated syntax `parametric method syntax PooledDataArray{S, R, N}(x::PooledDataArray{S, R, N}, newpool::Vector{S})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:364.
│ Use `PooledDataArray(x::PooledDataArray{S, R, N}, newpool::Vector{S}) where {S, R, N}` instead.
└ @ nothing pooleddataarray.jl:364
┌ Warning: Deprecated syntax `parametric method syntax setlevels{T, R}(x::PooledDataArray{T, R}, newpool::AbstractVector)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:424.
│ Use `setlevels(x::PooledDataArray{T, R}, newpool::AbstractVector) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:424
┌ Warning: Deprecated syntax `parametric method syntax setlevels!{T, R}(x::PooledDataArray{T, R}, newpool::AbstractVector{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:470.
│ Use `setlevels!(x::PooledDataArray{T, R}, newpool::AbstractVector{T}) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:470
┌ Warning: Deprecated syntax `parametric method syntax setlevels!{T, R}(x::PooledDataArray{T, R}, newpool::AbstractVector)` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:487.
│ Use `setlevels!(x::PooledDataArray{T, R}, newpool::AbstractVector) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:487
┌ Warning: Deprecated syntax `parametric method syntax setlevels!{T, R}(x::PooledDataArray{T, R}, d::Dict{T, T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:502.
│ Use `setlevels!(x::PooledDataArray{T, R}, d::Dict{T, T}) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:502
┌ Warning: Deprecated syntax `parametric method syntax setlevels!{T, R}(x::PooledDataArray{T, R}, d::Dict{T, Any})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:512.
│ Use `setlevels!(x::PooledDataArray{T, R}, d::Dict{T, Any}) where {T, R}` instead.
└ @ nothing pooleddataarray.jl:512
┌ Warning: Deprecated syntax `parametric method syntax Base.permute!!{T <: Integer}(x::PooledDataArray, p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:540.
│ Use `Base.permute!!(x::PooledDataArray, p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing pooleddataarray.jl:540
┌ Warning: Deprecated syntax `parametric method syntax Base.ipermute!!{T <: Integer}(x::PooledDataArray, p::AbstractVector{T})` around /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:545.
│ Use `Base.ipermute!!(x::PooledDataArray, p::AbstractVector{T}) where T <: Integer` instead.
└ @ nothing pooleddataarray.jl:545
ERROR: LoadError: LoadError: UndefVarError: ipermute!! not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:14
 [2] top-level scope
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include at ./sysimg.jl:26 [inlined]
 [6] include(::String) at /home/vagrant/.julia/v0.7/DataArrays/src/DataArrays.jl:3
 [7] top-level scope
 [8] include at ./boot.jl:295 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] include(::Module, ::String) at ./sysimg.jl:26
 [11] top-level scope
 [12] eval at ./boot.jl:298 [inlined]
 [13] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/DataArrays/src/pooleddataarray.jl:544
in expression starting at /home/vagrant/.julia/v0.7/DataArrays/src/DataArrays.jl:61
ERROR: LoadError: Failed to precompile DataArrays to /home/vagrant/.julia/lib/v0.7/DataArrays.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:298 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/DataFrames/src/DataFrames.jl:14
ERROR: LoadError: LoadError: Failed to precompile DataFrames to /home/vagrant/.julia/lib/v0.7/DataFrames.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:295 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:295 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:323
 [14] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/Mimi/src/Mimi.jl:4
in expression starting at /home/vagrant/.julia/v0.7/OptiMimi/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for OptiMimi
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/OptiMimi/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: OptiMimi had test errors

>>> End of log
