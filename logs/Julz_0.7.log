>>> 'Pkg.add("Julz")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of EnglishText from https://github.com/TotalVerb/EnglishText.jl.git
[ Info: Cloning cache of Julz from https://github.com/djsegal/Julz.jl.git
[ Info: Cloning cache of PkgDev from https://github.com/JuliaLang/PkgDev.jl.git
[ Info: Cloning cache of Revise from https://github.com/timholy/Revise.jl.git
[ Info: Installing DeepDiffs v1.0.1
[ Info: Installing DocOpt v0.3.0
[ Info: Installing DocStringExtensions v0.4.4
[ Info: Installing Documenter v0.16.1
[ Info: Installing EnglishText v0.5.0
[ Info: Installing Julz v0.1.0
[ Info: Installing Mustache v0.3.1
[ Info: Installing PkgDev v0.1.6
[ Info: Installing Revise v0.3.0
[ Info: Installing TestSetExtensions v1.1.1
[ Info: Removing BinDeps v0.8.7
[ Info: Removing Calculus v0.2.2
[ Info: Removing CommonSubexpressions v0.1.0
[ Info: Removing Conda v0.7.1
[ Info: Removing Dierckx v0.3.0
[ Info: Removing DiffEqDiffTools v0.4.0
[ Info: Removing DiffResults v0.0.3
[ Info: Removing DiffRules v0.0.4
[ Info: Removing ForwardDiff v0.7.4
[ Info: Removing FunctionWrappers v0.1.0
[ Info: Removing LineSearches v3.2.5
[ Info: Removing MacroTools v0.4.0
[ Info: Removing NLSolversBase v4.3.0
[ Info: Removing NaNMath v0.3.1
[ Info: Removing Optim v0.14.0
[ Info: Removing Parameters v0.8.1
[ Info: Removing PositiveFactorizations v0.1.0
[ Info: Removing PyAMG v0.2.1
[ Info: Removing PyCall v1.15.0
[ Info: Removing Reexport v0.1.0
[ Info: Removing SHA v0.5.6
[ Info: Removing SpecialFunctions v0.3.8
[ Info: Removing StaticArrays v0.7.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Julz
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Julz")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4737
Commit c4c93ea692 (2018-04-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3505 MHz    2166336 s       6982 s     175518 s     636463 s         22 s
       #2  3505 MHz     505781 s        159 s      63920 s    2876056 s          0 s
       
  Memory: 2.939197540283203 GB (1160.1796875 MB free)
  Uptime: 35375.0 sec
  Load Avg:  0.923828125  0.97314453125  0.95556640625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - Julz                          0.1.0
13 additional packages:
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - DeepDiffs                     1.0.1
 - DocOpt                        0.3.0
 - DocStringExtensions           0.4.4
 - Documenter                    0.16.1
 - EnglishText                   0.5.0
 - Mustache                      0.3.1
 - Nullables                     0.0.5
 - PkgDev                        0.1.6
 - Revise                        0.3.0
 - TestSetExtensions             1.1.1
 - URIParser                     0.3.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Julz
WARNING: importing deprecated binding Base.Void into Mustache.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Mustache/src/utils.jl:23
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/EnglishText/src/text.jl:30
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/PkgDev/src/PkgDev.jl:90.
│ Use `@doc doc" "` instead.
└ @ nothing PkgDev.jl:90
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/PkgDev/src/PkgDev.jl:90.
│ Use `@doc doc" "` instead.
└ @ nothing PkgDev.jl:90
ERROR: LoadError: LoadError: ArgumentError: Module Main not found in current path.
Run `Pkg.add("Main")` to install the Main package.
Stacktrace:
 [1] require(::Module, ::Symbol) at ./loading.jl:864
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include at ./sysimg.jl:29 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/PkgDev/src/PkgDev.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:306 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1067
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] top-level scope
 [11] eval at ./boot.jl:309 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PkgDev/src/github.jl:3
in expression starting at /home/vagrant/.julia/v0.7/PkgDev/src/PkgDev.jl:11
ERROR: LoadError: LoadError: Failed to precompile PkgDev to /home/vagrant/.julia/compiled/v0.7/PkgDev.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:306 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] _require(::Base.PkgId) at ./loading.jl:993
 [9] require(::Base.PkgId) at ./loading.jl:874
 [10] require(::Module, ::Symbol) at ./loading.jl:869
 [11] include at ./boot.jl:306 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] exec_options(::Base.JLOptions) at ./client.jl:327
 [15] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/Julz/src/Julz.jl:5
in expression starting at /home/vagrant/.julia/v0.7/Julz/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Julz
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Julz/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#541(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:309 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: Julz had test errors

>>> End of log
