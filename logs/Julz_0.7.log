>>> 'Pkg.add("Julz")' log
[ Info: Cloning cache of EnglishText from https://github.com/TotalVerb/EnglishText.jl.git
[ Info: Cloning cache of Julz from https://github.com/djsegal/Julz.jl.git
[ Info: Cloning cache of PkgDev from https://github.com/JuliaLang/PkgDev.jl.git
[ Info: Cloning cache of Revise from https://github.com/timholy/Revise.jl.git
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DeepDiffs v1.0.1
[ Info: Installing DocOpt v0.3.0
[ Info: Installing DocStringExtensions v0.4.2
[ Info: Installing Documenter v0.13.0
[ Info: Installing EnglishText v0.5.0
[ Info: Installing Julz v0.1.0
[ Info: Installing Mustache v0.3.0
[ Info: Installing PkgDev v0.1.6
[ Info: Installing Revise v0.2.0
[ Info: Installing TestSetExtensions v1.1.1
[ Info: Installing URIParser v0.3.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Julz
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Julz")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1993818 s       5952 s     100694 s     500875 s         14 s
       #2  3499 MHz     380479 s       1720 s      35809 s    2610258 s          0 s
       
  Memory: 2.93927001953125 GB (797.0703125 MB free)
  Uptime: 30741.0 sec
  Load Avg:  0.98779296875  0.9482421875  0.97021484375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Julz                          0.1.0
13 additional packages:
 - Compat                        0.46.0
 - DataStructures                0.7.4
 - DeepDiffs                     1.0.1
 - DocOpt                        0.3.0
 - DocStringExtensions           0.4.2
 - Documenter                    0.13.0
 - EnglishText                   0.5.0
 - Mustache                      0.3.0
 - Nullables                     0.0.3
 - PkgDev                        0.1.6
 - Revise                        0.2.0
 - TestSetExtensions             1.1.1
 - URIParser                     0.3.0
[ Info: Testing Julz
WARNING: importing deprecated binding Base.Void into Mustache.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Mustache/src/utils.jl:23
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = #parse#1(::Type{Dict{String,Any}}, ::Type{Int64}, ::Function, ::String) at Parser.jl:386
└ @ JSON.Parser Parser.jl:386
┌ Warning: `unsafe_copy!(dest, args...)` is deprecated, use `unsafe_copyto!(dest, args...)` instead.
│   caller = parse_string(::JSON.Parser.MemoryParserState) at specialized.jl:15
└ @ JSON.Parser specialized.jl:15
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/EnglishText/src/text.jl:30
WARNING: importing deprecated binding Base.Void into GitHub.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PkgDev/src/github.jl:43
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PkgDev/src/github.jl:43
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1164
└ @ Base deprecated.jl:1164
WARNING: PkgDev.jl is not configured. Please, run `PkgDev.config()` before performing any operations.
WARNING: importing deprecated binding Base.Nullable into Julz.
WARNING: importing deprecated binding Base.shuffle! into Julz.
┌ Warning: `parse(str::AbstractString; kwargs...)` is deprecated, use `Meta.parse(str; kwargs...)` instead.
│   caller = #include_all_files#4(::String, ::Bool, ::Bool, ::Bool, ::typeof(Base.Nullable), ::Bool, ::Function, ::String) at include_all_files.jl:6
└ @ Julz include_all_files.jl:6
ERROR (unhandled task failure): MethodError: no method matching find_all_in_cache_path(::Symbol)
Closest candidates are:
  find_all_in_cache_path(!Matched::String) at loading.jl:108
Stacktrace:
 [1] parse_pkg_files(::Symbol) at /home/vagrant/.julia/v0.7/Revise/src/Revise.jl:123
 [2] _watch_package(::Symbol) at /home/vagrant/.julia/v0.7/Revise/src/Revise.jl:227
 [3] (::getfield(Revise, Symbol("##5#6")){Symbol})() at ./event.jl:92
ERROR: LoadError: LoadError: LoadError: UndefVarError: Julz not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:14
 [2] top-level scope
in expression starting at /home/vagrant/.julia/v0.7/Julz/src/../config/bootload.jl:12
in expression starting at /home/vagrant/.julia/v0.7/Julz/src/Julz.jl:9
in expression starting at /home/vagrant/.julia/v0.7/Julz/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Julz
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Julz/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
ERROR: Julz had test errors

>>> End of log
