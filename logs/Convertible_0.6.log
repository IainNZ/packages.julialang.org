>>> 'Pkg.add("Convertible")' log
INFO: Cloning cache of Convertible from https://github.com/helgee/Convertible.jl.git
INFO: Installing Convertible v0.1.3
INFO: Installing DataStructures v0.8.3
INFO: Package database updated

>>> 'Pkg.test("Convertible")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (820.890625 MB free)
Uptime: 38882.0 sec
Load Avg:  0.94287109375  0.94921875  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2258434 s         81 s     182876 s     870744 s         13 s
#2  3499 MHz     450379 s       4570 s      69112 s    3298612 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Convertible                   0.1.3
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.69.0
 - DataStructures                0.8.3
 - Nullables                     0.0.5
INFO: Computing test dependencies for Convertible...
INFO: No packages to install, update or remove
INFO: Testing Convertible
WARNING: replacing module Convertible.
WARNING: PriorityQueue(::Type{K}, ::Type{V}) where {K, V} is deprecated, use PriorityQueue{K, V}() instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataStructures.PriorityQueue(::Type{DataType}, ::Type{Int64}) at ./deprecated.jl:57
 [3] findpath(::Dict{DataType,Set{DataType}}, ::Type{T} where T, ::Type{T} where T) at /home/vagrant/.julia/v0.6/Convertible/src/Convertible.jl:133
 [4] gen_convert(::Type{T} where T, ::Type{T} where T, ::Type{T} where T) at /home/vagrant/.julia/v0.6/Convertible/src/Convertible.jl:167
 [5] __convert(...) at /home/vagrant/.julia/v0.6/Convertible/src/Convertible.jl:175
 [6] Core.Inference.InferenceState(::Core.MethodInstance, ::Bool, ::Bool, ::Core.Inference.InferenceParams) at ./inference.jl:285
 [7] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2534
 [8] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [9] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [10] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [11] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [12] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2722
 [13] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [14] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [15] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [16] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [17] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [18] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [19] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2722
 [20] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [21] typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:2535
 [22] abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:1420
 [23] abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1897
 [24] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1927
 [25] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [26] (::Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState})(::Expr) at ./<missing>:0
 [27] next(::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Int64) at ./generator.jl:45
 [28] copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:573
 [29] _collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Core.Inference.HasShape) at ./array.jl:391
 [30] collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./array.jl:388
 [31] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1901
 [32] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [33] (::Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState})(::Expr) at ./<missing>:0
 [34] next(::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Int64) at ./generator.jl:45
 [35] copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:573
 [36] _collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Core.Inference.HasShape) at ./array.jl:391
 [37] collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./array.jl:388
 [38] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1901
 [39] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [40] (::Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState})(::Expr) at ./<missing>:0
 [41] next(::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Int64) at ./generator.jl:45
 [42] copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:573
 [43] _collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}, ::Core.Inference.HasShape) at ./array.jl:391
 [44] collect(::Type{Any}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##191#192{Array{Any,1},Core.Inference.InferenceState}}) at ./array.jl:388
 [45] abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1901
 [46] abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1950
 [47] abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:2076
 [48] typeinf_work(::Core.Inference.InferenceState) at ./inference.jl:2669
 [49] typeinf(::Core.Inference.InferenceState) at ./inference.jl:2787
 [50] typeinf_ext(::Core.MethodInstance, ::UInt64) at ./inference.jl:2628
 [51] include_from_node1(::String) at ./loading.jl:576
 [52] include(::String) at ./sysimg.jl:14
 [53] process_options(::Base.JLOptions) at ./client.jl:305
 [54] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Convertible/test/runtests.jl, in expression starting on line 44
Test Summary: | Pass  Total
Convertible   |   21     21
INFO: Convertible tests passed
INFO: No packages to install, update or remove

>>> End of log
