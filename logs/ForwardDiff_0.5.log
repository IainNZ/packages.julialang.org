>>> 'Pkg.add("ForwardDiff")' log
INFO: Installing Calculus v0.2.2
INFO: Installing DiffBase v0.1.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing NaNMath v0.2.6
INFO: Installing SpecialFunctions v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ForwardDiff
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ForwardDiff")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (641.8359375 MB free)
Uptime: 41220.0 sec
Load Avg:  0.93603515625  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2442274 s       2156 s     232274 s     975498 s         74 s
#2  3500 MHz    1076902 s       4672 s     115662 s    2778136 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - ForwardDiff                   0.4.2
 - JSON                          0.13.0
5 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.28.0
 - DiffBase                      0.1.0
 - NaNMath                       0.2.6
 - SpecialFunctions              0.2.0
INFO: Testing ForwardDiff
Testing Partials...
  ...testing Partials{0,Int64}
  ...testing Partials{0,Float32}
  ...testing Partials{0,Float64}
  ...testing Partials{3,Int64}
  ...testing Partials{3,Float32}
  ...testing Partials{3,Float64}
done (took 4.406916672 seconds).
Testing Dual...
  ...testing Dual{0,Int64} and Dual{0,Dual{0,Int64}}
  ...testing Dual{0,Float32} and Dual{0,Dual{0,Float32}}
  ...testing Dual{0,Int64} and Dual{0,Dual{4,Int64}}
  ...testing Dual{0,Float32} and Dual{0,Dual{4,Float32}}
  ...testing Dual{3,Int64} and Dual{3,Dual{0,Int64}}
  ...testing Dual{3,Float32} and Dual{3,Dual{0,Float32}}
  ...testing Dual{3,Int64} and Dual{3,Dual{4,Int64}}
  ...testing Dual{3,Float32} and Dual{3,Dual{4,Float32}}
Test Failed
  Expression: isapprox(a,b)
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:397
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in test_approx_diffnums(::Float32, ::Float32) at /home/vagrant/.julia/v0.5/ForwardDiff/test/DualTest.jl:30
 in test_approx_diffnums(::ForwardDiff.Dual{4,Float32}, ::ForwardDiff.Dual{4,Float32}) at /home/vagrant/.julia/v0.5/ForwardDiff/test/DualTest.jl:36 (repeats 2 times)
 in macro expansion; at /home/vagrant/.julia/v0.5/ForwardDiff/test/DualTest.jl:384 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ForwardDiff/test/DualTest.jl, in expression starting on line 40
while loading /home/vagrant/.julia/v0.5/ForwardDiff/test/runtests.jl, in expression starting on line 10
=============================[ ERROR: ForwardDiff ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/ForwardDiff/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ForwardDiff had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
