>>> 'Pkg.add("HyperDualNumbers")' log
┌ Info: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing HyperDualNumbers v2.0.1         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions                                 @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of HyperDualNumbers
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("HyperDualNumbers")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1005204 s         52 s      55202 s     268720 s          2 s
       #2  3499 MHz     143977 s         96 s      19206 s    1411562 s          0 s
       
  Memory: 2.93927001953125 GB (679.5703125 MB free)
  Uptime: 15964.0 sec
  Load Avg:  1.01025390625  1.00439453125  0.986328125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - HyperDualNumbers              2.0.1
 - JSON                          0.16.3
6 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.44.0
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - SpecialFunctions              0.3.7
 - URIParser                     0.3.0
[ Info: Testing HyperDualNumbers                   @ Base.Pkg.Entry entry.jl:723
Running tests:
  * test_basics.jl *

Examples of show() for hyperdual numbers with NaN:

hdNaN = Hyper{Float64}(NaN, 0.0, 0.0, 0.0)
hdNaN + hd4 = Hyper{Float64}(NaN, 4.0, 3.0, 4.0)

Testing includes Tim Holy's division performance improvement.
Testing includes ngedwin98's fixes for asin, acos and atan.



  * test_TimHoly_example.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/HyperDualNumbers/test/test_TimHoly_example.jl:2
Hyper{Rational{Int64}}(8//25, -8//5, -8//5, 144//25)



  * test_Paper_example.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/HyperDualNumbers/test/test_Paper_example.jl:2

"THE" example
f(1.5) = 4.497780053946162

t0 = Hyper{Float64}(1.5, 1.0, 1.0, 0.0)
t1 = Hyper{Float64}(4.4816890703380645, 4.4816890703380645, 4.4816890703380645, 4.4816890703380645)
t2 = Hyper{Float64}(0.9974949866040544, 0.0707372016677029, 0.0707372016677029, -0.9974949866040544)
t3 = Hyper{Float64}(0.9925037693693152, 0.21114975082386195, 0.21114975082386195, -2.947564004699509)
t4 = Hyper{Float64}(0.0707372016677029, -0.9974949866040544, -0.9974949866040544, -0.0707372016677029)
t5 = Hyper{Float64}(0.000353951393082256, -0.014973651704218029, -0.014973651704218029, 0.42123764746847714)
t5a = Hyper{Float64}(0.000353951393082256, -0.014973651704218029, -0.014973651704218029, 0.42123764746847714)
t6 = Hyper{Float64}(0.9928577207623974, 0.19617609911964393, 0.19617609911964393, -2.526326357231032)
t7 = Hyper{Float64}(1.0035903837494204, -0.0991483686337086, -0.0991483686337086, 1.3062034995890381)
t8 = Hyper{Float64}(4.497780053946162, 4.053427893898621, 4.053427893898621, 9.463073681596603)

f(t0) = Hyper{Float64}(4.497780053946162, 4.05342789389862, 4.05342789389862, 9.463073681596601)



  * test_Erf_example.jl *
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/HyperDualNumbers/test/test_Erf_example.jl:2
24.274806105338804   = 24.274806105338804
0.841601975531715   = 0.8416019755317149
0.008545857737238427   = 0.00854585773723843
Test Erf Passed



[ Info: HyperDualNumbers tests passed              @ Base.Pkg.Entry entry.jl:737

>>> End of log
