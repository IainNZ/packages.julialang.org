>>> 'Pkg.add("Geodesy")' log
┌ Info: Cloning cache of CoordinateTransformations from https://github.com/FugroRoames/CoordinateTransformations.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of Geodesy from https://github.com/JuliaGeo/Geodesy.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of Rotations from https://github.com/FugroRoames/Rotations.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Installing CoordinateTransformations v0.4.1
└                                                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Geodesy v0.4.0                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Rotations v0.6.1                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6             @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Geodesy
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Geodesy")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3505 MHz     186016 s        114 s      12536 s     154125 s          3 s
       #2  3505 MHz      44545 s         44 s       6301 s     344549 s          0 s
       
  Memory: 2.93927001953125 GB (1117.1796875 MB free)
  Uptime: 4033.0 sec
  Load Avg:  0.9970703125  0.98876953125  0.9501953125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Geodesy                       0.4.0
 - JSON                          0.16.3
5 additional packages:
 - Compat                        0.46.0
 - CoordinateTransformations     0.4.1
 - Nullables                     0.0.3
 - Rotations                     0.6.1
 - StaticArrays                  0.6.6
[ Info: Testing Geodesy                            @ Base.Pkg.Entry entry.jl:723
WARNING: importing deprecated binding Broadcast._containertype into StaticArrays.
WARNING: importing deprecated binding Broadcast.promote_containertype into StaticArrays.
WARNING: importing deprecated binding Broadcast.broadcast_c into StaticArrays.
WARNING: importing deprecated binding Broadcast.broadcast_c! into StaticArrays.
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:12
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:12
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:13
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:13
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:25
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:25
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:26
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:26
WARNING: Broadcast.broadcast_c is deprecated, `broadcast_c(f, ::Type{C}, As...)` should become `broadcast(f, C, nothing, nothing, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:32
WARNING: Broadcast.broadcast_c is deprecated, `broadcast_c(f, ::Type{C}, As...)` should become `broadcast(f, C, nothing, nothing, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:32
WARNING: Broadcast.broadcast_c! is deprecated, `broadcast_c!(f, ::Type, ::Type, C, As...)` should become `broadcast!(f, C, As...)` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:127
WARNING: Broadcast.broadcast_c! is deprecated, `broadcast_c!(f, ::Type, ::Type, C, As...)` should become `broadcast!(f, C, As...)` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:127
┌ Warning: Deprecated syntax `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:112.
│ Use `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...,)` instead.
└                                                     @ nothing mapreduce.jl:112
┌ Warning: Deprecated syntax `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:137.
│ Use `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...,)` instead.
└                                                     @ nothing mapreduce.jl:137
┌ Warning: Deprecated syntax `([ (if (call == n D) (call - (ref S n) 1) (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:243.
│ Use `([ (if (call == n D) (call - (ref S n) 1) (ref S n)) for n = 1:N ]...,)` instead.
└                                                     @ nothing mapreduce.jl:243
┌ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub.
└                                                               @ nothing none:0
┌ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub.
└                                                               @ nothing none:0
┌ Warning: The syntax `.'` for transposition is deprecated, and the special lowering of `.'` in multiplication (`*`), left-division (`\`), and right-division (`/`) operations, for example `A.'*B` lowering to `At_mul_B(A, B)`, `A\B.'` lowering to `A_ldiv_Bt(A, B)`, and `A.'/B.'` lowering to `At_rdiv_Bt(A, B)`, has been removed in favor of a lazy `Transpose` wrapper type and dispatch on that type. Two rewrites for `A.'` for matrix `A` exist: eager or materializing `transpose(A)`, which constructs a freshly allocated matrix of `A`'s type and containing the transpose of `A`, and lazy `Transpose(A)`, which wraps `A` in a `Transpose` view type. Which rewrite is appropriate depends on context: If `A.'` appears in a multiplication, left-division, or right-division operation that was formerly specially lowered to an `A_mul_B`-like call, then the lazy `Tranpose(A)` is the correct replacement and will result in dispatch to a method equivalent to the former `A_mul_B`-like call. For example, `A.'*B`, formerly yielding `At_mul_B(A, B)`, should be rewritten `Transpose(A)*B`, which will dispatch to a method equivalent to the former `At_mul_B(A, B)` method. If `A.'` appears outside such an operation, then `transpose(A)` is the correct rewrite. For vector `A`, `A.'` already transposed lazily to a `RowVector`, so `Transpose(A)`. which now yields a `Transpose`-wrapped vector behaviorally equivalent to the former `RowVector` is always the correct rewrite for vectors. For more information, see issue #5332 on Julia's issue tracker on GitHub.
└                                                               @ nothing none:0
ERROR: LoadError: LoadError: UndefVarError: showarray not defined
Stacktrace:
 [1] getproperty(::Module, ::Symbol) at ./sysimg.jl:14
 [2] top-level scope
 [3] include at ./boot.jl:293 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include at ./sysimg.jl:26 [inlined]
 [6] include(::String) at /home/vagrant/.julia/v0.7/Rotations/src/Rotations.jl:4
 [7] top-level scope
 [8] include at ./boot.jl:293 [inlined]
 [9] include_relative(::Module, ::String) at ./loading.jl:521
 [10] include(::Module, ::String) at ./sysimg.jl:26
 [11] top-level scope
 [12] eval at ./boot.jl:296 [inlined]
 [13] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Rotations/src/core_types.jl:149
in expression starting at /home/vagrant/.julia/v0.7/Rotations/src/Rotations.jl:11
ERROR: LoadError: Failed to precompile Rotations to /home/vagrant/.julia/lib/v0.7/Rotations.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:296 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/CoordinateTransformations/src/CoordinateTransformations.jl:10
ERROR: LoadError: Failed to precompile CoordinateTransformations to /home/vagrant/.julia/lib/v0.7/CoordinateTransformations.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:296 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Geodesy/src/Geodesy.jl:5
ERROR: LoadError: Failed to precompile Geodesy to /home/vagrant/.julia/lib/v0.7/Geodesy.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Geodesy/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Geodesy
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Geodesy/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Geodesy had test errors

>>> End of log
