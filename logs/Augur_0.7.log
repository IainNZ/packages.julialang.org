>>> 'Pkg.add("Augur")' log
[ Info: Cloning cache of Augur from https://github.com/AugurProject/Augur.jl.git
[ Info: Cloning cache of Clustering from https://github.com/JuliaStats/Clustering.jl.git
[ Info: Cloning cache of CodecZlib from https://github.com/bicycle1885/CodecZlib.jl.git
[ Info: Cloning cache of Compose from https://github.com/GiovineItalia/Compose.jl.git
[ Info: Cloning cache of CoupledFields from https://github.com/Mattriks/CoupledFields.jl.git
[ Info: Cloning cache of DSP from https://github.com/JuliaDSP/DSP.jl.git
[ Info: Cloning cache of DataArrays from https://github.com/JuliaStats/DataArrays.jl.git
[ Info: Cloning cache of DataFrames from https://github.com/JuliaData/DataFrames.jl.git
[ Info: Cloning cache of Dates from https://github.com/quinnj/Dates.jl.git
[ Info: Cloning cache of GZip from https://github.com/JuliaIO/GZip.jl.git
[ Info: Cloning cache of Gadfly from https://github.com/GiovineItalia/Gadfly.jl.git
[ Info: Cloning cache of Hexagons from https://github.com/GiovineItalia/Hexagons.jl.git
[ Info: Cloning cache of KernelDensity from https://github.com/JuliaStats/KernelDensity.jl.git
[ Info: Cloning cache of LaTeXStrings from https://github.com/stevengj/LaTeXStrings.jl.git
[ Info: Cloning cache of LightGraphs from https://github.com/JuliaGraphs/LightGraphs.jl.git
[ Info: Cloning cache of LineSearches from https://github.com/JuliaNLSolvers/LineSearches.jl.git
[ Info: Cloning cache of Loess from https://github.com/JuliaStats/Loess.jl.git
[ Info: Cloning cache of NLSolversBase from https://github.com/JuliaNLSolvers/NLSolversBase.jl.git
[ Info: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
[ Info: Cloning cache of NearestNeighbors from https://github.com/KristofferC/NearestNeighbors.jl.git
[ Info: Cloning cache of Optim from https://github.com/JuliaNLSolvers/Optim.jl.git
[ Info: Cloning cache of PositiveFactorizations from https://github.com/timholy/PositiveFactorizations.jl.git
[ Info: Cloning cache of PyCall from https://github.com/JuliaPy/PyCall.jl.git
[ Info: Cloning cache of PyPlot from https://github.com/JuliaPy/PyPlot.jl.git
[ Info: Cloning cache of QuantEcon from https://github.com/QuantEcon/QuantEcon.jl.git
[ Info: Cloning cache of TranscodingStreams from https://github.com/bicycle1885/TranscodingStreams.jl.git
[ Info: Installing AbstractFFTs v0.2.1
[ Info: Installing Augur v0.1.1
[ Info: Installing AxisAlgorithms v0.2.0
[ Info: Installing BinDeps v0.8.5
[ Info: Installing Blosc v0.3.0
[ Info: Installing Calculus v0.2.2
[ Info: Installing Clustering v0.9.1
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing ColorTypes v0.6.6
[ Info: Installing Colors v0.8.2
[ Info: Installing CommonSubexpressions v0.0.1
[ Info: Installing Compose v0.5.4
[ Info: Installing Conda v0.7.1
[ Info: Installing Contour v0.4.0
[ Info: Installing CoupledFields v0.0.1
[ Info: Installing DSP v0.3.4
[ Info: Installing DataArrays v0.6.2
[ Info: Installing DataFrames v0.10.1
[ Info: Installing DataStructures v0.7.4
[ Info: Installing Dates v0.4.4
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.3
[ Info: Installing Distances v0.5.0
[ Info: Installing Distributions v0.15.0
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing FFTW v0.1.2
[ Info: Installing FileIO v0.6.1
[ Info: Installing FixedPointNumbers v0.4.3
[ Info: Installing ForwardDiff v0.7.2
[ Info: Installing GZip v0.3.0
[ Info: Installing Gadfly v0.6.4
[ Info: Installing HDF5 v0.8.8
[ Info: Installing Hexagons v0.1.0
[ Info: Installing Hiccup v0.1.1
[ Info: Installing Interpolations v0.7.3
[ Info: Installing IterTools v0.2.1
[ Info: Installing Juno v0.3.2
[ Info: Installing KernelDensity v0.4.0
[ Info: Installing LaTeXStrings v0.3.0
[ Info: Installing LightGraphs v0.11.1
[ Info: Installing LineSearches v3.2.4
[ Info: Installing Loess v0.3.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing MathProgBase v0.7.0
[ Info: Installing Measures v0.1.0
[ Info: Installing Media v0.3.0
[ Info: Installing NLSolversBase v4.2.0
[ Info: Installing NLopt v0.3.6
[ Info: Installing NaNMath v0.3.0
[ Info: Installing NearestNeighbors v0.3.0
[ Info: Installing Optim v0.12.0
[ Info: Installing PDMats v0.8.0
[ Info: Installing Parameters v0.8.1
[ Info: Installing Polynomials v0.2.0
[ Info: Installing PositiveFactorizations v0.1.0
[ Info: Installing Primes v0.2.0
[ Info: Installing PyCall v1.15.0
[ Info: Installing PyPlot v2.3.2
[ Info: Installing QuadGK v0.2.0
[ Info: Installing QuantEcon v0.14.1
[ Info: Installing Ratios v0.2.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing Rmath v0.3.1
[ Info: Installing SHA v0.5.3
[ Info: Installing ShowItLikeYouBuildIt v0.2.0
[ Info: Installing Showoff v0.1.1
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Installing URIParser v0.3.0
[ Info: Installing WoodburyMatrices v0.2.2
[ Info: Building SpecialFunctions
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:1
└ @ Main none:15
[ Info: Building Rmath
┌ Error: ------------------------------------------------------------
│ # Build failed for Rmath
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:6
└ @ Main none:15
[ Info: Building Blosc
┌ Error: ------------------------------------------------------------
│ # Build failed for Blosc
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Blosc/deps/build.jl:1
└ @ Main none:15
[ Info: Building HDF5
┌ Error: ------------------------------------------------------------
│ # Build failed for HDF5
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/HDF5/deps/build.jl:1
└ @ Main none:15
[ Info: Building Conda
┌ Error: ------------------------------------------------------------
│ # Build failed for Conda
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/Conda/deps/build.jl:1
└ @ Main none:15
[ Info: Building PyCall
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:11.
│ Use `struct` instead.
└ @ nothing build.jl:11
┌ Error: ------------------------------------------------------------
│ # Build failed for PyCall
│   exception =
│    LoadError: ArgumentError: Module Compat not found in current path.
│    Run `Pkg.add("Compat")` to install the Compat package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:8
└ @ Main none:15
[ Info: Building FFTW
┌ Error: ------------------------------------------------------------
│ # Build failed for FFTW
│   exception =
│    LoadError: LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope at /home/vagrant/.julia/v0.7/FFTW/deps/build.jl:34
│     [7] include at ./boot.jl:292 [inlined]
│     [8] include_relative(::Module, ::String) at ./loading.jl:1011
│     [9] include at ./sysimg.jl:26 [inlined]
│     [10] include(::String) at ./loading.jl:1045
│     [11] top-level scope
│     [12] eval at ./boot.jl:295 [inlined]
│     [13] eval at ./sysimg.jl:71 [inlined]
│     [14] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [15] #2 at ./none:12 [inlined]
│     [16] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [17] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [18] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [19] top-level scope
│     [20] eval at ./boot.jl:295 [inlined]
│     [21] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [22] process_options(::Base.JLOptions) at ./client.jl:301
│     [23] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/FFTW/deps/build_fftw.jl:1
│    in expression starting at /home/vagrant/.julia/v0.7/FFTW/deps/build.jl:34
└ @ Main none:15
[ Info: Building NLopt
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:30.
│ Use `mutable struct` instead.
└ @ nothing build.jl:30
┌ Error: ------------------------------------------------------------
│ # Build failed for NLopt
│   exception =
│    LoadError: ArgumentError: Module BinDeps not found in current path.
│    Run `Pkg.add("BinDeps")` to install the BinDeps package.
│    Stacktrace:
│     [1] require(::Module, ::Symbol) at ./loading.jl:813
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1011
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1045
│     [6] top-level scope
│     [7] eval at ./boot.jl:295 [inlined]
│     [8] eval at ./sysimg.jl:71 [inlined]
│     [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:1040 (repeats 2 times)
│     [10] #2 at ./none:12 [inlined]
│     [11] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [12] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [13] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [14] top-level scope
│     [15] eval at ./boot.jl:295 [inlined]
│     [16] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [17] process_options(::Base.JLOptions) at ./client.jl:301
│     [18] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/NLopt/deps/build.jl:1
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ FFTW, Conda, HDF5, SpecialFunctions, NLopt, Rmath, PyCall and Blosc had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("FFTW", "Conda", "HDF5", "SpecialFunctions", "NLopt", "Rmath", "PyCall", "Blosc")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:648
[ Info: Package database updated

>>> 'Pkg.test("Augur")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     400938 s         98 s      26962 s     128261 s          4 s
       #2  3499 MHz      81368 s         57 s      11894 s     549501 s          0 s
       
  Memory: 2.93927001953125 GB (553.109375 MB free)
  Uptime: 6504.0 sec
  Load Avg:  0.89111328125  0.94091796875  1.078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Augur                         0.1.1
 - JSON                          0.16.4
76 additional packages:
 - AbstractFFTs                  0.2.1
 - AxisAlgorithms                0.2.0
 - BinDeps                       0.8.5
 - Blosc                         0.3.0
 - Calculus                      0.2.2
 - Clustering                    0.9.1
 - CodecZlib                     0.4.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.48.0
 - Compose                       0.5.4
 - Conda                         0.7.1
 - Contour                       0.4.0
 - CoupledFields                 0.0.1
 - DSP                           0.3.4
 - DataArrays                    0.6.2
 - DataFrames                    0.10.1
 - DataStructures                0.7.4
 - Dates                         0.4.4
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - Distributions                 0.15.0
 - DualNumbers                   0.3.0
 - FFTW                          0.1.2
 - FileIO                        0.6.1
 - FixedPointNumbers             0.4.3
 - ForwardDiff                   0.7.2
 - GZip                          0.3.0
 - Gadfly                        0.6.4
 - HDF5                          0.8.8
 - Hexagons                      0.1.0
 - Hiccup                        0.1.1
 - Interpolations                0.7.3
 - IterTools                     0.2.1
 - Juno                          0.3.2
 - KernelDensity                 0.4.0
 - LaTeXStrings                  0.3.0
 - LightGraphs                   0.11.1
 - LineSearches                  3.2.4
 - Loess                         0.3.0
 - MacroTools                    0.4.0
 - MathProgBase                  0.7.0
 - Measures                      0.1.0
 - Media                         0.3.0
 - NLSolversBase                 4.2.0
 - NLopt                         0.3.6
 - NaNMath                       0.3.0
 - NearestNeighbors              0.3.0
 - Nullables                     0.0.3
 - Optim                         0.12.0
 - PDMats                        0.8.0
 - Parameters                    0.8.1
 - Polynomials                   0.2.0
 - PositiveFactorizations        0.1.0
 - Primes                        0.2.0
 - PyCall                        1.15.0
 - PyPlot                        2.3.2
 - QuadGK                        0.2.0
 - QuantEcon                     0.14.1
 - Ratios                        0.2.0
 - Reexport                      0.1.0
 - Rmath                         0.3.1
 - SHA                           0.5.3
 - ShowItLikeYouBuildIt          0.2.0
 - Showoff                       0.1.1
 - SimpleTraits                  0.5.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - StatsFuns                     0.5.0
 - TranscodingStreams            0.4.1
 - URIParser                     0.3.0
 - WoodburyMatrices              0.2.2
[ Info: Testing Augur
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Augur/src/Augur.jl:50.
│ Use `mutable struct` instead.
└ @ nothing Augur.jl:50
WARNING: importing deprecated binding Base.logdet into PDMats.
WARNING: importing deprecated binding Base.diag into PDMats.
WARNING: importing deprecated binding Base.diagm into PDMats.
WARNING: importing deprecated binding Base.eigmax into PDMats.
WARNING: importing deprecated binding Base.eigmin into PDMats.
ERROR: LoadError: UndefVarError: BLAS not defined
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1011
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:295 [inlined]
 [6] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PDMats/src/PDMats.jl:39
ERROR: LoadError: Failed to precompile PDMats to /home/vagrant/.julia/lib/v0.7/PDMats.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:919
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:295 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Distributions/src/Distributions.jl:5
ERROR: LoadError: LoadError: Failed to precompile Distributions to /home/vagrant/.julia/lib/v0.7/Distributions.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1161
 [3] _require(::Base.PkgId) at ./loading.jl:948
 [4] require(::Module, ::Symbol) at ./loading.jl:819
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1011
 [7] _require(::Base.PkgId) at ./loading.jl:938
 [8] require(::Module, ::Symbol) at ./loading.jl:819
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1011
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] process_options(::Base.JLOptions) at ./client.jl:324
 [13] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Augur/src/Augur.jl:4
in expression starting at /home/vagrant/.julia/v0.7/Augur/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Augur
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Augur/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: Augur had test errors

>>> End of log
