>>> 'Pkg.add("BoundaryValueDiffEq")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Installing BandedMatrices v0.3.1
[ Info: Installing BinDeps v0.8.6
[ Info: Installing BoundaryValueDiffEq v1.0.0
[ Info: Installing CommonSubexpressions v0.0.1
[ Info: Installing DataStructures v0.7.4
[ Info: Installing DiffBase v0.3.2
[ Info: Installing DiffEqBase v3.1.0
[ Info: Installing DiffEqDiffTools v0.3.0
[ Info: Installing DiffResults v0.0.3
[ Info: Installing DiffRules v0.0.3
[ Info: Installing Distances v0.5.0
[ Info: Installing ForwardDiff v0.7.3
[ Info: Installing FunctionWrappers v0.1.0
[ Info: Installing LineSearches v3.2.5
[ Info: Installing LinearMaps v1.0.4
[ Info: Installing MacroTools v0.4.0
[ Info: Installing NLSolversBase v4.2.0
[ Info: Installing NLsolve v1.0.0
[ Info: Installing NaNMath v0.3.0
[ Info: Installing Parameters v0.8.1
[ Info: Installing RecipesBase v0.2.3
[ Info: Installing RecursiveArrayTools v0.14.6
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requires v0.4.3
[ Info: Installing SHA v0.5.6
[ Info: Installing SimpleTraits v0.5.1
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing URIParser v0.3.0
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Package database updated

>>> 'Pkg.test("BoundaryValueDiffEq")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3703
Commit 358ccc2b20 (2018-02-02 20:43 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3498 MHz    1247524 s        104 s      67640 s     369072 s         15 s
       #2  3498 MHz     294854 s         41 s      28747 s    1591326 s          0 s
       
  Memory: 2.93927001953125 GB (853.26953125 MB free)
  Uptime: 19541.0 sec
  Load Avg:  0.92529296875  0.9541015625  0.9501953125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BoundaryValueDiffEq           1.0.0
 - JSON                          0.16.4
30 additional packages:
 - BandedMatrices                0.3.1
 - BinDeps                       0.8.6
 - CommonSubexpressions          0.0.1
 - Compat                        0.51.0
 - DataStructures                0.7.4
 - DiffBase                      0.3.2
 - DiffEqBase                    3.1.0
 - DiffEqDiffTools               0.3.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - Distances                     0.5.0
 - ForwardDiff                   0.7.3
 - FunctionWrappers              0.1.0
 - LineSearches                  3.2.5
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NLSolversBase                 4.2.0
 - NLsolve                       1.0.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - Parameters                    0.8.1
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - SimpleTraits                  0.5.1
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Computing test dependencies for BoundaryValueDiffEq...
[ Info: Installing Calculus v0.2.2
[ Info: Installing ChunkedArrays v0.1.1
[ Info: Installing DiffEqDevTools v1.0.0
[ Info: Installing DiffEqMonteCarlo v0.10.0
[ Info: Installing DiffEqNoiseProcess v1.0.0
[ Info: Installing DiffEqPDEBase v0.4.0
[ Info: Installing DistributedArrays v0.4.0
[ Info: Installing Distributions v0.15.0
[ Info: Installing EllipsisNotation v0.3.0
[ Info: Installing GenericSVD v0.1.0
[ Info: Installing Juno v0.4.0
[ Info: Installing Media v0.3.0
[ Info: Installing Missings v0.2.6
[ Info: Installing MuladdMacro v0.0.2
[ Info: Installing OrdinaryDiffEq v3.0.3
[ Info: Installing PDMats v0.8.0
[ Info: Installing Primes v0.2.0
[ Info: Installing QuadGK v0.2.0
[ Info: Installing RandomNumbers v0.1.0
[ Info: Installing ResettableStacks v0.3.1
[ Info: Installing Rmath v0.3.2
[ Info: Installing Roots v0.5.0
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing StatsBase v0.19.5
[ Info: Installing StatsFuns v0.5.0
[ Info: Installing VectorizedRoutines v0.0.2
[ Info: Building DiffEqBase
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
[ Info: Building RandomNumbers
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#866(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1079
└ @ Base deprecated.jl:1079
WARNING: AES-NI will not be compiled.
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Building Rmath
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Rmath/deps/build.jl:47
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Testing BoundaryValueDiffEq
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: importing deprecated binding Base.A_ldiv_B! into DiffEqBase.
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{T})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:41.
│ Use `realtype(#unused#::Type{T}) where T` instead.
└ @ nothing utils.jl:41
┌ Warning: Deprecated syntax `parametric method syntax realtype{T}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/utils.jl:42.
│ Use `realtype(#unused#::Type{Complex{T}}) where T` instead.
└ @ nothing utils.jl:42
┌ Warning: Deprecated syntax `parametric method syntax check_first_arg{F}(::Type{F}, T::Type)` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:20.
│ Use `check_first_arg(#unused#::Type{F}, T::Type) where F` instead.
└ @ nothing extended_functions.jl:20
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasJac{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:33.
│ Use `SimpleTraits.trait(#unused#::Type{HasJac{F}}) where F` instead.
└ @ nothing extended_functions.jl:33
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HastGrad{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:34.
│ Use `SimpleTraits.trait(#unused#::Type{HastGrad{F}}) where F` instead.
└ @ nothing extended_functions.jl:34
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasExpJac{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:47.
│ Use `SimpleTraits.trait(#unused#::Type{HasExpJac{F}}) where F` instead.
└ @ nothing extended_functions.jl:47
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasInvJac{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:48.
│ Use `SimpleTraits.trait(#unused#::Type{HasInvJac{F}}) where F` instead.
└ @ nothing extended_functions.jl:48
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasInvW{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:49.
│ Use `SimpleTraits.trait(#unused#::Type{HasInvW{F}}) where F` instead.
└ @ nothing extended_functions.jl:49
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasInvW_t{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:50.
│ Use `SimpleTraits.trait(#unused#::Type{HasInvW_t{F}}) where F` instead.
└ @ nothing extended_functions.jl:50
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasHes{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:61.
│ Use `SimpleTraits.trait(#unused#::Type{HasHes{F}}) where F` instead.
└ @ nothing extended_functions.jl:61
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasInvHes{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:62.
│ Use `SimpleTraits.trait(#unused#::Type{HasInvHes{F}}) where F` instead.
└ @ nothing extended_functions.jl:62
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasParamDeriv{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:71.
│ Use `SimpleTraits.trait(#unused#::Type{HasParamDeriv{F}}) where F` instead.
└ @ nothing extended_functions.jl:71
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasParamJac{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:72.
│ Use `SimpleTraits.trait(#unused#::Type{HasParamJac{F}}) where F` instead.
└ @ nothing extended_functions.jl:72
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasSyms{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:79.
│ Use `SimpleTraits.trait(#unused#::Type{HasSyms{F}}) where F` instead.
└ @ nothing extended_functions.jl:79
┌ Warning: Deprecated syntax `parametric method syntax SimpleTraits.trait{F}(::Type{HasAnalytic{F}})` around /home/vagrant/.julia/v0.7/DiffEqBase/src/extended_functions.jl:85.
│ Use `SimpleTraits.trait(#unused#::Type{HasAnalytic{F}}) where F` instead.
└ @ nothing extended_functions.jl:85
┌ Warning: Deprecated syntax `(size(ArrayPartition(prob.u0))...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/solutions/steady_state_solutions.jl:15.
│ Use `(size(ArrayPartition(prob.u0))...,)` instead.
└ @ nothing steady_state_solutions.jl:15
┌ Warning: Deprecated syntax `(size(prob.u0)...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/solutions/steady_state_solutions.jl:17.
│ Use `(size(prob.u0)...,)` instead.
└ @ nothing steady_state_solutions.jl:17
┌ Warning: Deprecated syntax `(x...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/solutions/solution_interface.jl:51.
│ Use `(x...,)` instead.
└ @ nothing solution_interface.jl:51
┌ Warning: Deprecated syntax `(plot_vecs...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/solutions/solution_interface.jl:193.
│ Use `(plot_vecs...,)` instead.
└ @ nothing solution_interface.jl:193
┌ Warning: Deprecated syntax `((I for i = 1:length(f))...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/problems/ode_problems.jl:19.
│ Use `((I for i = 1:length(f))...,)` instead.
└ @ nothing ode_problems.jl:19
┌ Warning: Deprecated syntax `((I for i = 1:length(f))...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/problems/sde_problems.jl:22.
│ Use `((I for i = 1:length(f))...,)` instead.
└ @ nothing sde_problems.jl:22
WARNING: importing deprecated binding Base.Void into DiffEqBase.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/interpolation.jl:15
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/callbacks.jl:65
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/callbacks.jl:68
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/callbacks.jl:71
┌ Warning: Deprecated syntax `(plot_vecs...)` at /home/vagrant/.julia/v0.7/DiffEqBase/src/integrator_interface.jl:181.
│ Use `(plot_vecs...,)` instead.
└ @ nothing integrator_interface.jl:181
WARNING: Base.expm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/diffeq_operator.jl:46
WARNING: importing deprecated binding Base.lufact! into DiffEqBase.
WARNING: Base.lufact! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/linear_nonlinear.jl:12
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:76
WARNING: importing deprecated binding Base.Factorization into DiffEqBase.
WARNING: Base.Factorization is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:76
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:77
WARNING: Base.Factorization is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:77
WARNING: Base.A_ldiv_B! is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:78
WARNING: Base.Factorization is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/DiffEqBase/src/data_array.jl:78
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = @require(::LineNumberNode, ::Module, ::Any, ::Any) at require.jl:51
└ @ Requires require.jl:51
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: importing deprecated binding Base.gradient into NLSolversBase.
WARNING: importing deprecated binding Base.clear! into NLSolversBase.
WARNING: importing deprecated binding Base.Void into NLSolversBase.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/objective_types/incomplete.jl:44
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:20
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:20
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:72
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:72
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:74
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:74
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:154
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:154
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:156
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:156
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:161
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:161
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:167
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/interface.jl:167
WARNING: importing deprecated binding Base.clear! into LineSearches.
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/types.jl:20
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/types.jl:20
WARNING: importing deprecated binding Base.Associative into LineSearches.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/backtracking.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/strongwolfe.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/morethuente.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: importing deprecated binding Base.@sprintf into LineSearches.
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:319
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/hagerzhang.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/static.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LineSearches/src/initialguess.jl:446
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CommonSubexpressions/src/CommonSubexpressions.jl:7.
│ Use `struct` instead.
└ @ nothing CommonSubexpressions.jl:7
WARNING: importing deprecated binding Base.Void into DiffEqDiffTools.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:5
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:5
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:5
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:5
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:5
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:13
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:13
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:13
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:13
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:13
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:178
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:195
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:199
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:203
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffEqDiffTools/src/derivatives.jl:207
┌ Warning: Deprecated syntax `parametric method syntax newton_{T}(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch, cache = NewtonCache(df))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/newton.jl:54.
│ Use `newton_(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch, cache = NewtonCache(df)) where T` instead.
└ @ nothing newton.jl:54
┌ Warning: Deprecated syntax `parametric method syntax newton{T}(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch, cache = NewtonCache(df))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/newton.jl:145.
│ Use `newton(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, linesearch, cache = NewtonCache(df)) where T` instead.
└ @ nothing newton.jl:145
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/NLsolve/src/solvers/trust_region.jl:56.
│ Use `1 ./` instead.
└ @ nothing trust_region.jl:56
┌ Warning: Deprecated syntax `parametric method syntax dogleg!{T}(p::AbstractArray{T}, p_c::AbstractArray{T}, p_i, r::AbstractArray{T}, d::AbstractArray{T}, J::AbstractMatrix{T}, delta::Real)` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/trust_region.jl:49.
│ Use `dogleg!(p::AbstractArray{T}, p_c::AbstractArray{T}, p_i, r::AbstractArray{T}, d::AbstractArray{T}, J::AbstractMatrix{T}, delta::Real) where T` instead.
└ @ nothing trust_region.jl:49
┌ Warning: Deprecated syntax `parametric method syntax trust_region_{T}(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::T, autoscale::Bool, cache = NewtonTrustRegionCache(df))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/trust_region.jl:116.
│ Use `trust_region_(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::T, autoscale::Bool, cache = NewtonTrustRegionCache(df)) where T` instead.
└ @ nothing trust_region.jl:116
┌ Warning: Deprecated syntax `parametric method syntax trust_region{T}(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::Real, autoscale::Bool, cache = NewtonTrustRegionCache(df))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/trust_region.jl:227.
│ Use `trust_region(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, factor::Real, autoscale::Bool, cache = NewtonTrustRegionCache(df)) where T` instead.
└ @ nothing trust_region.jl:227
┌ Warning: Deprecated syntax `parametric method syntax anderson_{T}(df::OnceDifferentiable, x0::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, β::Real, cache = AndersonCache(df, Anderson(m, β)))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/anderson.jl:44.
│ Use `anderson_(df::OnceDifferentiable, x0::AbstractArray{T}, xtol::T, ftol::T, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, β::Real, cache = AndersonCache(df, Anderson(m, β))) where T` instead.
└ @ nothing anderson.jl:44
┌ Warning: Use of final value of loop variable `n` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/anderson.jl:105 is deprecated. In the future the variable will be local to the loop instead.
└ @ nothing anderson.jl:105
┌ Warning: Deprecated syntax `parametric method syntax anderson{T}(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, beta::Real, cache = AndersonCache(df, Anderson(m, beta)))` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/anderson.jl:122.
│ Use `anderson(df::OnceDifferentiable, initial_x::AbstractArray{T}, xtol::Real, ftol::Real, iterations::Integer, store_trace::Bool, show_trace::Bool, extended_trace::Bool, m::Integer, beta::Real, cache = AndersonCache(df, Anderson(m, beta))) where T` instead.
└ @ nothing anderson.jl:122
┌ Warning: Deprecated syntax `parametric method syntax mcpsolve{T}(f, j, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.BackTracking(), factor::Real = one(T), autoscale = true, inplace = true)` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/mcp_func_defs.jl:56.
│ Use `mcpsolve(f, j, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.BackTracking(), factor::Real = one(T), autoscale = true, inplace = true) where T` instead.
└ @ nothing mcp_func_defs.jl:56
┌ Warning: Deprecated syntax `parametric method syntax mcpsolve{T}(f, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true, autodiff = :central, inplace = true)` around /home/vagrant/.julia/v0.7/NLsolve/src/solvers/mcp_func_defs.jl:86.
│ Use `mcpsolve(f, lower::Vector, upper::Vector, initial_x::AbstractArray{T}; method::Symbol = :trust_region, reformulation::Symbol = :smooth, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.BackTracking(), factor::Real = one(T), autoscale::Bool = true, autodiff = :central, inplace = true) where T` instead.
└ @ nothing mcp_func_defs.jl:86
┌ Warning: Deprecated syntax `1.-` at /home/vagrant/.julia/v0.7/NLsolve/src/solvers/mcp.jl:58.
│ Use `1 .-` instead.
└ @ nothing mcp.jl:58
┌ Warning: Deprecated syntax `parametric method syntax SolverState{T <: Real}(i::Integer, fnorm::T, stepnorm::T)` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:13.
│ Use `SolverState(i::Integer, fnorm::T, stepnorm::T) where T <: Real` instead.
└ @ nothing solver_state_results.jl:13
WARNING: importing deprecated binding Base.@printf into NLsolve.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:22
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:22
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:42
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:42
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/solver_state_results.jl:87
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/nlsolve.jl:1
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add a `using Printf` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/nlsolve.jl:1
┌ Warning: Deprecated syntax `parametric method syntax nlsolve{T}(f, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.Static(), factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0, autodiff = :central, inplace = true)` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/nlsolve.jl:53.
│ Use `nlsolve(f, initial_x::AbstractArray{T}; method::Symbol = :trust_region, xtol::Real = zero(T), ftol::Real = convert(T, 1e-08), iterations::Integer = 1000, store_trace::Bool = false, show_trace::Bool = false, extended_trace::Bool = false, linesearch = LineSearches.Static(), factor::Real = one(T), autoscale::Bool = true, m::Integer = 0, beta::Real = 1.0, autodiff = :central, inplace = true) where T` instead.
└ @ nothing nlsolve.jl:53
┌ Warning: Deprecated syntax `parametric method syntax wdot{T}(wx::AbstractArray{T}, x::AbstractArray{T}, wy::AbstractArray{T}, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/utils.jl:3.
│ Use `wdot(wx::AbstractArray{T}, x::AbstractArray{T}, wy::AbstractArray{T}, y::AbstractArray{T}) where T` instead.
└ @ nothing utils.jl:3
┌ Warning: Deprecated syntax `parametric method syntax wnorm{T}(w::AbstractArray{T}, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/NLsolve/src/nlsolve/utils.jl:10.
│ Use `wnorm(w::AbstractArray{T}, x::AbstractArray{T}) where T` instead.
└ @ nothing utils.jl:10
WARNING: Base.BLAS is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/BandedMatrices/src/BandedMatrices.jl:11
ERROR: LoadError: UndefVarError: LAPACK not defined
Stacktrace:
 [1] include at ./boot.jl:296 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1012
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:299 [inlined]
 [6] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BandedMatrices/src/BandedMatrices.jl:12
ERROR: LoadError: Failed to precompile BandedMatrices to /home/vagrant/.julia/lib/v0.7/BandedMatrices.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:920
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:296 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:299 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BoundaryValueDiffEq/src/BoundaryValueDiffEq.jl:9
ERROR: LoadError: Failed to precompile BoundaryValueDiffEq to /home/vagrant/.julia/lib/v0.7/BoundaryValueDiffEq.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:949
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:296 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] exec_options(::Base.JLOptions) at ./client.jl:332
 [9] _start() at ./client.jl:447
in expression starting at /home/vagrant/.julia/v0.7/BoundaryValueDiffEq/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for BoundaryValueDiffEq
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BoundaryValueDiffEq/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:299 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
[ Info: Removing Calculus v0.2.2
[ Info: Removing ChunkedArrays v0.1.1
[ Info: Removing DiffEqDevTools v1.0.0
[ Info: Removing DiffEqMonteCarlo v0.10.0
[ Info: Removing DiffEqNoiseProcess v1.0.0
[ Info: Removing DiffEqPDEBase v0.4.0
[ Info: Removing DistributedArrays v0.4.0
[ Info: Removing Distributions v0.15.0
[ Info: Removing EllipsisNotation v0.3.0
[ Info: Removing GenericSVD v0.1.0
[ Info: Removing Juno v0.4.0
[ Info: Removing Media v0.3.0
[ Info: Removing Missings v0.2.6
[ Info: Removing MuladdMacro v0.0.2
[ Info: Removing OrdinaryDiffEq v3.0.3
[ Info: Removing PDMats v0.8.0
[ Info: Removing Primes v0.2.0
[ Info: Removing QuadGK v0.2.0
[ Info: Removing RandomNumbers v0.1.0
[ Info: Removing ResettableStacks v0.3.1
[ Info: Removing Rmath v0.3.2
[ Info: Removing Roots v0.5.0
[ Info: Removing SortingAlgorithms v0.2.0
[ Info: Removing StatsBase v0.19.5
[ Info: Removing StatsFuns v0.5.0
[ Info: Removing VectorizedRoutines v0.0.2
ERROR: BoundaryValueDiffEq had test errors

>>> End of log
