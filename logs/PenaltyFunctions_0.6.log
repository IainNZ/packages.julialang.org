>>> 'Pkg.add("PenaltyFunctions")' log
INFO: Cloning cache of LearnBase from https://github.com/JuliaML/LearnBase.jl.git
INFO: Cloning cache of PenaltyFunctions from https://github.com/JuliaML/PenaltyFunctions.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing DataStructures v0.7.4
INFO: Installing LearnBase v0.1.6
INFO: Installing Missings v0.2.9
INFO: Installing PenaltyFunctions v0.0.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing SHA v0.5.6
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Package database updated

>>> 'Pkg.test("PenaltyFunctions")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1026.68359375 MB free)
Uptime: 9636.0 sec
Load Avg:  0.98583984375  0.96044921875  0.9736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     477552 s         82 s      43351 s     319843 s         20 s
#2  3500 MHz     108814 s         70 s      18356 s     818678 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - PenaltyFunctions              0.0.2
12 additional packages:
 - BinDeps                       0.8.7
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - LearnBase                     0.1.6
 - Missings                      0.2.9
 - Nullables                     0.0.5
 - RecipesBase                   0.2.3
 - SHA                           0.5.6
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing PenaltyFunctions
INFO: Show methods:
  > NoPenalty
  > 0.1 * (NoPenalty)
  > L1Penalty
  > 0.1 * (L1Penalty)
  > L2Penalty
  > 0.1 * (L2Penalty)
  > ElasticNetPenalty{Float64}(α = 0.7)
  > 0.1 * (ElasticNetPenalty{Float64}(α = 0.7))
  > ElasticNetPenalty{Float32}(α = 0.7)
  > 0.1 * (ElasticNetPenalty{Float32}(α = 0.7))
  > MCPPenalty{Float64}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float64}(γ = 1.0))
  > MCPPenalty{Float32}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float32}(γ = 1.0))
  > MCPPenalty{Float64}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float64}(γ = 1.0))
  > LogPenalty{Float64}(η = 1.0)
  > 0.1 * (LogPenalty{Float64}(η = 1.0))
  > LogPenalty{Float32}(η = 1.0)
  > 0.1 * (LogPenalty{Float32}(η = 1.0))
  > SCADPenalty{Float64}(a = 3.7, γ = 1.0)
  > 0.1 * (SCADPenalty{Float64}(a = 3.7, γ = 1.0))
  > SCADPenalty{Float32}(a = 3.7, γ = 1.0)
  > 0.1 * (SCADPenalty{Float32}(a = 3.7, γ = 1.0))
  > NuclearNormPenalty
  > 0.1 * (NuclearNormPenalty)
  > GroupLassoPenalty
  > 0.1 * (GroupLassoPenalty)
  > MahalanobisPenalty{Float64}
  > 0.1 * (MahalanobisPenalty{Float64})


INFO: Begin Actual Tests
Test Summary: | Pass  Total
Common        |    3      3
Test Summary:  | Pass  Total
ElementPenalty |  264    264
Test Summary:        | Pass  Total
ScaledElementPenalty |   60     60
Test Summary: | Pass  Total
ArrayPenalty  |    6      6
INFO: PenaltyFunctions tests passed

>>> End of log
