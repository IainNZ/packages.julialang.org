>>> 'Pkg.add("SHA")' log
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("SHA")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2482904 s       5922 s     128052 s     670373 s         23 s
       #2  3500 MHz     481964 s        698 s      46279 s    3271128 s          0 s
       
  Memory: 2.93927001953125 GB (1030.5859375 MB free)
  Uptime: 38552.0 sec
  Load Avg:  1.0029296875  1.0146484375  0.970703125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - SHA                           0.5.2
3 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
 - tmpFvnkhC                     0.0.0-             non-repo (unregistered)
[ Info: Testing SHA                                @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `parametric method syntax describe_hash{S <: SHA.SHA_CTX}(T::Type{S})` around /home/vagrant/.julia/v0.7/SHA/test/runtests.jl:105.
│ Use `describe_hash(T::Type{S}) where S <: SHA.SHA_CTX` instead.
└                                                      @ nothing runtests.jl:105
Loaded hash types: SHA1, SHA2-224, SHA2-256, SHA2-384, SHA2-512, SHA3-224, SHA3-256, SHA3-384 and SHA3-512
┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
Testing on the empty string..................┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha1(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = SHA1_CTX() at types.jl:125
└                                                             @ SHA types.jl:125
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha2_224(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha2_256(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha2_384(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha2_512(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha3_224(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = transform!(::SHA3_224_CTX) at sha3.jl:7
└                                                                @ SHA sha3.jl:7
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha3_256(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = transform!(::SHA3_256_CTX) at sha3.jl:7
└                                                                @ SHA sha3.jl:7
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha3_384(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = transform!(::SHA3_384_CTX) at sha3.jl:7
└                                                                @ SHA sha3.jl:7
.┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = sha3_512(::String) at SHA.jl:46
└                                                                @ SHA SHA.jl:46
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = transform!(::SHA3_512_CTX) at sha3.jl:7
└                                                                @ SHA sha3.jl:7
.Done! [0 errors]
Testing on the string "test"..........................Done! [0 errors]
Testing on lorem ipsum................................Done! [0 errors]
Testing on 0 file............................┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha1(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha2_224(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha2_256(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha2_384(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha2_512(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha3_224(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha3_256(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha3_384(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = sha3_512(::IOStream, ::Int64) at SHA.jl:54
└                                                                @ SHA SHA.jl:54
.Done! [0 errors]
Testing on one million a's Array......................Done! [0 errors]
Testing on one million a's Tuple......................Done! [0 errors]
Testing on one million a's (chunked properly)┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
.........Done! [0 errors]
Testing on one million a's (chunked clumsily)┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
.........Done! [0 errors]
┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
Testing copy function @ SHA1_CTX ...Done! [0 errors]
Testing show function @ SHA1_CTX ...Done! [0 errors]
Testing copy function @ SHA2_224_CTX ...Done! [0 errors]
Testing show function @ SHA2_224_CTX ...Done! [0 errors]
Testing copy function @ SHA2_256_CTX ...Done! [0 errors]
Testing show function @ SHA2_256_CTX ...Done! [0 errors]
Testing copy function @ SHA2_384_CTX ...Done! [0 errors]
Testing show function @ SHA2_384_CTX ...Done! [0 errors]
Testing copy function @ SHA2_512_CTX ...Done! [0 errors]
Testing show function @ SHA2_512_CTX ...Done! [0 errors]
Testing copy function @ SHA3_224_CTX ...Done! [0 errors]
Testing show function @ SHA3_224_CTX ...Done! [0 errors]
Testing copy function @ SHA3_256_CTX ...Done! [0 errors]
Testing show function @ SHA3_256_CTX ...Done! [0 errors]
Testing copy function @ SHA3_384_CTX ...Done! [0 errors]
Testing show function @ SHA3_384_CTX ...Done! [0 errors]
Testing copy function @ SHA3_512_CTX ...Done! [0 errors]
Testing show function @ SHA3_512_CTX ...Done! [0 errors]
┌ Warning: Deprecated syntax `implicit assignment to global variable `nerrors``.
│ Use `global nerrors` instead.
└                                                               @ nothing none:0
ALL OK
[ Info: SHA tests passed                           @ Base.Pkg.Entry entry.jl:737

>>> End of log
