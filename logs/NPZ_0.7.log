>>> 'Pkg.add("NPZ")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of NPZ from https://github.com/fhs/NPZ.jl.git
[ Info: Installing NPZ v0.2.0
[ Info: Installing ZipFile v0.5.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of NPZ
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NPZ")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4723
Commit 359f39aa77 (2018-03-30 17:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4983158 s         95 s     402892 s    1471046 s        132 s
       #2  3499 MHz    1378576 s       6405 s     169250 s    6220682 s          6 s
       
  Memory: 2.939197540283203 GB (683.62109375 MB free)
  Uptime: 79932.0 sec
  Load Avg:  0.9541015625  0.9501953125  0.96484375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - NPZ                           0.2.0
3 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
 - ZipFile                       0.5.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing NPZ
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:140.
│ Use `mutable struct` instead.
└ @ nothing NPZ.jl:140
WARNING: importing deprecated binding Base.Complex64 into NPZ.
WARNING: Base.Complex64 is deprecated, use ComplexF32 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:17
WARNING: importing deprecated binding Base.Complex128 into NPZ.
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:17
┌ Warning: Deprecated syntax `parametric method syntax npzwritearray{T}(f::IO, x::Array{T})` around /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:263.
│ Use `npzwritearray(f::IO, x::Array{T}) where T` instead.
└ @ nothing NPZ.jl:263
┌ Warning: Deprecated syntax `parametric method syntax npzwritearray{T <: Number}(f::IO, x::T)` around /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:267.
│ Use `npzwritearray(f::IO, x::T) where T <: Number` instead.
└ @ nothing NPZ.jl:267
┌ Warning: Deprecated syntax `parametric method syntax npzwrite{S <: AbstractString}(filename::AbstractString, vars::Dict{S, Any})` around /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:277.
│ Use `npzwrite(filename::AbstractString, vars::Dict{S, Any}) where S <: AbstractString` instead.
└ @ nothing NPZ.jl:277
WARNING: Base.Complex64 is deprecated, use ComplexF32 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:12
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:12
WARNING: Base.Complex64 is deprecated, use ComplexF32 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:12
WARNING: Base.Complex128 is deprecated, use ComplexF64 instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:12
┌ Warning: `dec(n)` is deprecated, use `string(n)` instead.
│   caller = top-level scope at <missing>:50
└ @ Core <missing>:50
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:53
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = Type at ZipFile.jl:174 [inlined]
└ @ Core ZipFile.jl:174
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = ZipFile.WritableFile(::IOStream, ::String, ::UInt16, ::UInt16, ::UInt16, ::UInt32, ::UInt32, ::UInt32, ::UInt32, ::Int64, ::IOStream, ::Bool) at ZipFile.jl:152
└ @ ZipFile ZipFile.jl:152
ERROR: error in running finalizer: MethodError(f=typeof(ZipFile._writele)(), args=(Base.IOStream(handle=0x00007f44edd98410, ios=Array{UInt8, (152,)}[0x50, 0x60, 0x98, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], name="<file /tmp/tmpHN5x5S/big.npz>", mark=-1), Base.ReinterpretArray{UInt8, 1, UInt32, Array{UInt32, 1}}(parent=Array{UInt32, (1,)}[0x00000000])), world=0x0000000000006a5f)
error in running finalizer: MethodError(f=typeof(ZipFile._writele)(), args=(Base.IOStream(handle=0x00007f44edd98410, ios=Array{UInt8, (152,)}[0x50, 0x60, 0x98, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], name="<file /tmp/tmpHN5x5S/big.npz>", mark=-1), Base.ReinterpretArray{UInt8, 1, UInt32, Array{UInt32, 1}}(parent=Array{UInt32, (1,)}[0x06054b50])), world=0x0000000000006a5f)
LoadError: MethodError: no method matching _writele(::IOStream, ::Base.ReinterpretArray{UInt8,1,UInt32,Array{UInt32,1}})
Closest candidates are:
  _writele(::IO, !Matched::Array{UInt8,1}) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:222
  _writele(::IO, !Matched::UInt16) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:229
  _writele(::IO, !Matched::UInt32) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:230
Stacktrace:
 [1] _writele(::IOStream, ::UInt32) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:230
 [2] #addfile#3(::UInt16, ::Float64, ::Function, ::ZipFile.Writer, ::String) at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:507
 [3] addfile at /home/vagrant/.julia/v0.7/ZipFile/src/ZipFile.jl:493 [inlined]
 [4] npzwrite(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.7/NPZ/src/NPZ.jl:279
 [5] top-level scope
 [6] include at ./boot.jl:306 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl:53
┌ Error: ------------------------------------------------------------
│ # Testing failed for NPZ
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/NPZ/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:309 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: NPZ had test errors

>>> End of log
