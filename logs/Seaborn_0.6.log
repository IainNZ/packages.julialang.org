>>> 'Pkg.add("Seaborn")' log
INFO: Cloning cache of Seaborn from https://github.com/JuliaPy/Seaborn.jl.git
INFO: Installing Conda v0.8.1
INFO: Installing DataValues v0.3.3
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing Pandas v0.6.3
INFO: Installing PyCall v1.17.1
INFO: Installing PyPlot v2.5.0
INFO: Installing Seaborn v0.2.0
INFO: Installing TableTraits v0.2.0
INFO: Installing TableTraitsUtils v0.1.3
INFO: Installing VersionParsing v1.1.1
INFO: Building Conda
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.15) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Seaborn
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Seaborn")' log
Julia Version 0.6.3
Commit d55cadc350 (2018-05-28 20:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (905.9921875 MB free)
Uptime: 47019.0 sec
Load Avg:  0.95458984375  1.01904296875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3490 MHz    2826277 s        114 s     222298 s     927988 s         11 s
#2  3490 MHz     611890 s       5680 s      79374 s    3902294 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
3 required packages:
 - JSON                          0.17.2
 - POMDPModels                   0.2.2
 - Seaborn                       0.2.0
64 additional packages:
 - AbstractTrees                 0.1.0
 - AssetRegistry                 0.0.2
 - AutoHashEquals                0.2.0
 - BinDeps                       0.8.8
 - BinaryProvider                0.3.3
 - Blink                         0.6.2
 - CPUTime                       0.1.0
 - Calculus                      0.4.0
 - CategoricalArrays             0.3.10
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.69.0
 - Conda                         0.8.1
 - D3Trees                       0.2.0
 - DataFrames                    0.11.6
 - DataStreams                   0.3.6
 - DataStructures                0.8.3
 - DataValues                    0.3.3
 - DiscreteValueIteration        0.0.0-             master (unregistered)
 - Distributions                 0.15.0
 - FixedPointNumbers             0.4.6
 - Hiccup                        0.1.1
 - HttpCommon                    0.4.0
 - HttpParser                    0.4.0
 - HttpServer                    0.3.1
 - IteratorInterfaceExtensions   0.0.2
 - Iterators                     0.3.1
 - LaTeXStrings                  1.0.0
 - Lazy                          0.12.1
 - MCTS                          0.0.0-             master (unregistered)
 - MacroTools                    0.4.2
 - MbedTLS                       0.5.11
 - Missings                      0.2.10
 - Mustache                      0.3.3
 - Mux                           0.3.0
 - NamedTuples                   4.0.2
 - Nullables                     0.0.5
 - PDMats                        0.8.0
 - POMDPToolbox                  0.2.7
 - POMDPs                        0.6.7
 - Pandas                        0.6.3
 - Pidfile                       1.0.0
 - ProgressMeter                 0.5.6
 - PyCall                        1.17.1
 - PyPlot                        2.5.0
 - QuadGK                        0.3.0
 - Reexport                      0.1.0
 - Requires                      0.4.4
 - Rmath                         0.4.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.6.0
 - StaticArrays                  0.7.2
 - StatsBase                     0.23.1
 - StatsFuns                     0.6.1
 - TableTraits                   0.2.0
 - TableTraitsUtils              0.1.3
 - TikzPictures                  1.2.0
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - VersionParsing                1.1.1
 - WeakRefStrings                0.4.7
 - WebSockets                    0.5.0
INFO: Testing Seaborn
WARNING: No working GUI backend found for matplotlib
WARNING: No working GUI backend found for matplotlib
Info: Installing pandas via the Conda pandas package...
Solving environment: ...working... done
pandas-0.23.2        | 24.7 MB |            |   0% pandas-0.23.2        | 24.7 MB |            |   0% pandas-0.23.2        | 24.7 MB |            |   1% pandas-0.23.2        | 24.7 MB | 3          |   3% pandas-0.23.2        | 24.7 MB | 9          |  10% pandas-0.23.2        | 24.7 MB | ##         |  21% pandas-0.23.2        | 24.7 MB | ###3       |  33% pandas-0.23.2        | 24.7 MB | ####5      |  46% pandas-0.23.2        | 24.7 MB | #####5     |  56% pandas-0.23.2        | 24.7 MB | #######2   |  72% pandas-0.23.2        | 24.7 MB | ########3  |  83% pandas-0.23.2        | 24.7 MB | #########1 |  91% pandas-0.23.2        | 24.7 MB | #########7 |  97% pandas-0.23.2        | 24.7 MB | ########## | 100% 
scikit-learn-0.19.1  |  5.3 MB |            |   0% scikit-learn-0.19.1  |  5.3 MB | ####1      |  42% scikit-learn-0.19.1  |  5.3 MB | #######5   |  76% scikit-learn-0.19.1  |  5.3 MB | #########  |  91% scikit-learn-0.19.1  |  5.3 MB | ########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - pandas


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    pandas-0.23.2              |           py27_0        24.7 MB  conda-forge
    scikit-learn-0.19.1        |   py27h445a80a_0         5.3 MB
    ------------------------------------------------------------
                                           Total:        30.0 MB

The following NEW packages will be INSTALLED:

    pandas:       0.23.2-py27_0                         conda-forge

The following packages will be DOWNGRADED:

    blas:         1.1-openblas                          conda-forge --> 1.0-mkl              
    numpy:        1.14.5-py27_blas_openblashd3ea46f_200 conda-forge [blas_openblas] --> 1.14.3-py27hcd700cb_2
    scikit-learn: 0.19.1-py27_blas_openblas_201         conda-forge [blas_openblas] --> 0.19.1-py27h445a80a_0
    scipy:        1.1.0-py27_blas_openblas_200          conda-forge [blas_openblas] --> 1.1.0-py27hfc37229_0 


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
Info: Installing matplotlib via the Conda matplotlib package...
Solving environment: ...working... done

# All requested packages already installed.

ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package matplotlib could not be found by pyimport. Usually this means
that you did not install matplotlib in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the matplotlib module, you can
use `pyimport_conda("matplotlib", PKG)`, where PKG is the Anaconda
package the contains the module matplotlib, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError('No module named numpy',)
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/__init__.py", line 127, in <module>
    from . import cbook
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/cbook/__init__.py", line 35, in <module>
    import numpy as np

Stacktrace:
 [1] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:473
 [2] pyimport_conda(::String, ::String, ::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:643
 [3] __init__() at /home/vagrant/.julia/v0.6/PyPlot/src/init.jl:175
 [4] _include_from_serialized(::String) at ./loading.jl:157
 [5] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [6] _require_search_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:236
 [7] _require(::Symbol) at ./loading.jl:441
 [8] require(::Symbol) at ./loading.jl:405
 [9] _include_from_serialized(::String) at ./loading.jl:157
 [10] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [11] _require(::Symbol) at ./loading.jl:498
 [12] require(::Symbol) at ./loading.jl:405
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
during initialization of module PyPlot
while loading /home/vagrant/.julia/v0.6/Seaborn/test/runtests.jl, in expression starting on line 1
===============================[ ERROR: Seaborn ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cgeneric -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Seaborn/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Seaborn had test errors

>>> End of log
