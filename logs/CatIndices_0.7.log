>>> 'Pkg.add("CatIndices")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing CatIndices v0.1.0
[ Info: Installing CustomUnitRanges v0.1.0
[ Info: Installing OffsetArrays v0.5.0
[ Info: Package database updated

>>> 'Pkg.test("CatIndices")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4959
Commit 509d6a1a88 (2018-04-27 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3495 MHz    1669680 s       7497 s     125762 s     615208 s         12 s
       #2  3495 MHz     372082 s       2095 s      47979 s    2335430 s          0 s
       
  Memory: 2.939197540283203 GB (840.48046875 MB free)
  Uptime: 28046.0 sec
  Load Avg:  1.0029296875  1.0146484375  1.04541015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CatIndices                    0.1.0
 - JSON                          0.17.2
4 additional packages:
 - Compat                        0.64.0
 - CustomUnitRanges              0.1.0
 - Nullables                     0.0.5
 - OffsetArrays                  0.5.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing CatIndices
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl:2
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = copyelts(::UnitRange{Int64}) at bidirectional.jl:16
└ @ CatIndices bidirectional.jl:16
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = top-level scope
└ @ Core :0
ERROR: LoadError: MethodError: no method matching size(::BidirectionalVector{Int64})
Closest candidates are:
  size(::AbstractArray{T,N}, !Matched::Any) where {T, N} at abstractarray.jl:46
  size(::Any, !Matched::Integer, !Matched::Integer) at deprecated.jl:55
  size(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) at deprecated.jl:55
  ...
Stacktrace:
 [1] axes at ./abstractarray.jl:83 [inlined]
 [2] _length at ./abstractarray.jl:166 [inlined]
 [3] isempty(::BidirectionalVector{Int64}) at ./abstractarray.jl:876
 [4] typeinfo_prefix(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::BidirectionalVector{Int64}) at ./arrayshow.jl:487
 [5] show_vector(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::BidirectionalVector{Int64}, ::Char, ::Char) at ./arrayshow.jl:432 (repeats 2 times)
 [6] show at ./arrayshow.jl:446 [inlined]
 [7] show_delim_array(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::Tuple{BidirectionalVector{Int64}}, ::Char, ::Char, ::Char, ::Bool, ::Int64, ::Int64) at ./show.jl:693
 [8] show_delim_array at ./show.jl:679 [inlined]
 [9] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::Tuple{BidirectionalVector{Int64}}) at ./show.jl:711
 [10] show_default(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Any) at ./show.jl:333
 [11] show(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Any) at ./show.jl:316
 [12] #sprint#352(::Nothing, ::Int64, ::Function, ::Function, ::MethodError, ::Vararg{MethodError,N} where N) at ./strings/io.jl:99
 [13] #sprint at ./<missing>:0 [inlined]
 [14] #repr#354 at ./strings/io.jl:187 [inlined]
 [15] repr at ./strings/io.jl:187 [inlined]
 [16] Test.Error(::Symbol, ::Expr, ::MethodError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}, ::LineNumberNode) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:145
 [17] do_test(::Test.Threw, ::Expr) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Test/src/Test.jl:457
 [18] top-level scope
 [19] include at ./boot.jl:314 [inlined]
 [20] include_relative(::Module, ::String) at ./loading.jl:1067
 [21] include(::Module, ::String) at ./sysimg.jl:29
 [22] exec_options(::Base.JLOptions) at ./client.jl:327
 [23] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for CatIndices
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: CatIndices had test errors

>>> End of log
