>>> 'Pkg.add("CatIndices")' log
[ Info: Installing CatIndices v0.1.0
[ Info: Installing CustomUnitRanges v0.1.0
[ Info: Installing OffsetArrays v0.4.2
[ Info: Package database updated

>>> 'Pkg.test("CatIndices")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1202086 s         98 s      65480 s     272877 s         10 s
       #2  3499 MHz     208479 s         57 s      23129 s    1568055 s          0 s
       
  Memory: 2.93927001953125 GB (806.5234375 MB free)
  Uptime: 18228.0 sec
  Load Avg:  0.96728515625  0.97412109375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CatIndices                    0.1.0
 - JSON                          0.16.4
4 additional packages:
 - Compat                        0.48.0
 - CustomUnitRanges              0.1.0
 - Nullables                     0.0.3
 - OffsetArrays                  0.4.2
[ Info: Testing CatIndices
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl:2
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = copyelts(::UnitRange{Int64}) at bidirectional.jl:16
└ @ CatIndices bidirectional.jl:16
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = top-level scope
└ @ Core :0
Error During Test at /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl:14
  Test threw an exception of type MethodError
  Expression: indices(v, 1) == 1:3
  MethodError: no method matching size(::BidirectionalVector{Int64})
  Closest candidates are:
    size(::AbstractArray{T,N}, !Matched::Any) where {T, N} at abstractarray.jl:43
    size(::Any, !Matched::Integer, !Matched::Integer, !Matched::Integer...) where N at abstractarray.jl:44
    size(!Matched::BitArray{1}) at bitarray.jl:70
    ...
  Stacktrace:
   [1] axes at ./abstractarray.jl:80 [inlined]
   [2] axes at ./abstractarray.jl:62 [inlined]
   [3] indices(::BidirectionalVector{Int64}, ::Int64) at ./deprecated.jl:57
   [4] top-level scope
   [5] include at ./boot.jl:292 [inlined]
   [6] include_relative(::Module, ::String) at ./loading.jl:1011
   [7] include(::Module, ::String) at ./sysimg.jl:26
   [8] process_options(::Base.JLOptions) at ./client.jl:324
   [9] _start() at ./client.jl:375
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for CatIndices
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CatIndices/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: CatIndices had test errors

>>> End of log
