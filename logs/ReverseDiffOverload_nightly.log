>>> 'Pkg.add("ReverseDiffOverload")' log
INFO: Installing ArrayViews v0.4.8
INFO: Installing Calculus v0.1.5
INFO: Installing Compat v0.2.5
INFO: Installing Distributions v0.6.2
INFO: Installing JSON v0.3.9
INFO: Installing PDMats v0.3.1
INFO: Installing ReverseDiffOverload v0.0.1
INFO: Installing StatsBase v0.6.10
INFO: Package database updated

>>> 'using ReverseDiffOverload' log

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:108.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:121.
Use "[]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:41.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:58.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/deparse.jl:1.
Use "Dict{Any,Any}(a=>b, ...)" instead.
Julia Version 0.4.0-dev+2168
Commit 1fb4e6d (2014-12-16 06:26 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:108.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:121.
Use "[]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:41.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:58.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/deparse.jl:1.
Use "Dict{Any,Any}(a=>b, ...)" instead.
dot(v1, x)
dot(x, y)
x+y
dot(v1, x+y)
dot(v1, x+y)
x+(-y)
x-y
dot(v1, x-y)
dot(v1, x-y)
dot(v1, -x)
x*y
dot(v1, x'*y)
sum(x*y)
dot(v1, x*y)
dot(v1, x*y)
dot(v1, x y)
dot(v1, vec(x/y))
x+x*x*exp(x)
x .^ y
x .^ y
dot(v1, x .* y)
dot(v1, x .^ y)
first(y'*x*y)
det(x)
trace(x)
det(inv(x))
sum(x)
dot([1.1, 2.1], vec(x))
dot(v1, exp(x))
dot(v1, sin(x))
dot(v1, cos(x))

>>> end of log
