>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.15.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (676.4609375 MB free)
Uptime: 19661.0 sec
Load Avg:  0.96337890625  1.02099609375  1.04052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1144292 s       1077 s      99546 s     473565 s         21 s
#2  3499 MHz     394603 s       4686 s      54296 s    1467782 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.12.0
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.25.2
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.15.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  2.117395 seconds (24.95 M allocations: 652.546 MB, 9.89% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliaXyhyfu",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-05-29T09:49:42.975]: Test high-level to sink from source; e.g. CSV.write
[2017-05-29T09:49:43.047]: Sink: CSV.Sink args => Source: DataFrame args
[2017-05-29T09:49:44.057]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-05-29T09:49:44.155]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-05-29T09:49:44.555]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-05-29T09:49:44.606]: Sink: CSV.Sink => Source: DataFrame args
[2017-05-29T09:49:44.705]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-05-29T09:49:44.777]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-05-29T09:49:44.831]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-05-29T09:49:44.864]: Sink: CSV.Sink args => Source: DataFrame
[2017-05-29T09:49:44.945]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-05-29T09:49:45]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-05-29T09:49:45.046]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-05-29T09:49:45.085]: Sink: CSV.Sink => Source: DataFrame
[2017-05-29T09:49:45.122]: Sink: CSV.Sink => Source: DataFrame + append
[2017-05-29T09:49:45.179]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-05-29T09:49:45.211]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-05-29T09:49:45.26]: finished...
[2017-05-29T09:49:45.264]: Test high-level from source to sink; e.g. CSV.read
[2017-05-29T09:49:45.264]: Source: CSV.Source args => Sink: DataFrame args
[2017-05-29T09:49:45.623]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-05-29T09:49:45.85]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-05-29T09:49:46.081]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-05-29T09:49:46.187]: Source: CSV.Source args => Sink: DataFrame
[2017-05-29T09:49:46.372]: Source: CSV.Source args => Sink: DataFrame + append
[2017-05-29T09:49:46.541]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-05-29T09:49:46.678]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-05-29T09:49:46.768]: Source: CSV.Source => Sink: DataFrame args
[2017-05-29T09:49:46.882]: Source: CSV.Source => Sink: DataFrame args + append
[2017-05-29T09:49:47.017]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-05-29T09:49:47.128]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-05-29T09:49:47.229]: Source: CSV.Source => Sink: DataFrame
[2017-05-29T09:49:47.337]: Source: CSV.Source => Sink: DataFrame + append
[2017-05-29T09:49:47.473]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-05-29T09:49:47.579]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-05-29T09:49:47.682]: Test high-level from source to sink; e.g. CSV.read
[2017-05-29T09:49:47.682]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-05-29T09:49:47.93]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-05-29T09:49:48.12]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-05-29T09:49:48.365]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-05-29T09:49:48.524]: Source: CSV.Source args => Sink: CSV.Sink
[2017-05-29T09:49:48.73]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-05-29T09:49:48.926]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-05-29T09:49:49.112]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-05-29T09:49:49.28]: Source: CSV.Source => Sink: CSV.Sink args
[2017-05-29T09:49:49.407]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-05-29T09:49:49.579]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-05-29T09:49:49.738]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-05-29T09:49:49.893]: Source: CSV.Source => Sink: CSV.Sink
[2017-05-29T09:49:50.06]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-05-29T09:49:50.212]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-05-29T09:49:50.3]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-05-29T09:49:50.444]: Test high-level to sink from source; e.g. CSV.write
[2017-05-29T09:49:50.447]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-05-29T09:49:50.567]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-05-29T09:49:50.684]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-05-29T09:49:50.795]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-05-29T09:49:50.888]: Sink: CSV.Sink => Source: CSV.Source args
[2017-05-29T09:49:50.989]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-05-29T09:49:51.103]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-05-29T09:49:51.198]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-05-29T09:49:51.29]: Sink: CSV.Sink args => Source: CSV.Source
[2017-05-29T09:49:51.455]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-05-29T09:49:51.596]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-05-29T09:49:51.694]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-05-29T09:49:51.782]: Sink: CSV.Sink => Source: CSV.Source
[2017-05-29T09:49:51.953]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-05-29T09:49:52.149]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-05-29T09:49:52.31]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-05-29T09:49:52.471]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
