>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.6
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.4.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.16.1
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (672.109375 MB free)
Uptime: 21360.0 sec
Load Avg:  0.98583984375  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1152094 s       1185 s     102704 s     637238 s         24 s
#2  3499 MHz     536624 s       5784 s      52958 s    1475399 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.12.0
14 additional packages:
 - CategoricalArrays             0.1.6
 - Compat                        0.26.0
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.4.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.16.1
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.816578 seconds (24.95 M allocations: 652.546 MB, 11.28% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliamygMhY",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-06-30T10:18:11.935]: Test high-level to sink from source; e.g. CSV.write
[2017-06-30T10:18:12.008]: Sink: CSV.Sink args => Source: DataFrame args
[2017-06-30T10:18:12.898]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-06-30T10:18:12.951]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-06-30T10:18:13.205]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-06-30T10:18:13.239]: Sink: CSV.Sink => Source: DataFrame args
[2017-06-30T10:18:13.304]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-06-30T10:18:13.447]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-06-30T10:18:13.534]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-06-30T10:18:13.59]: Sink: CSV.Sink args => Source: DataFrame
[2017-06-30T10:18:13.678]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-06-30T10:18:13.774]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-06-30T10:18:13.856]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-06-30T10:18:13.918]: Sink: CSV.Sink => Source: DataFrame
[2017-06-30T10:18:13.979]: Sink: CSV.Sink => Source: DataFrame + append
[2017-06-30T10:18:14.072]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-06-30T10:18:14.125]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-06-30T10:18:14.18]: finished...
[2017-06-30T10:18:14.184]: Test high-level from source to sink; e.g. CSV.read
[2017-06-30T10:18:14.185]: Source: CSV.Source args => Sink: DataFrame args
[2017-06-30T10:18:14.525]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-06-30T10:18:14.698]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-06-30T10:18:14.923]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-06-30T10:18:15.022]: Source: CSV.Source args => Sink: DataFrame
[2017-06-30T10:18:15.206]: Source: CSV.Source args => Sink: DataFrame + append
[2017-06-30T10:18:15.37]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-06-30T10:18:15.509]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-06-30T10:18:15.605]: Source: CSV.Source => Sink: DataFrame args
[2017-06-30T10:18:15.714]: Source: CSV.Source => Sink: DataFrame args + append
[2017-06-30T10:18:15.851]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-06-30T10:18:15.954]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-06-30T10:18:16.024]: Source: CSV.Source => Sink: DataFrame
[2017-06-30T10:18:16.084]: Source: CSV.Source => Sink: DataFrame + append
[2017-06-30T10:18:16.162]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-06-30T10:18:16.221]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-06-30T10:18:16.275]: Test high-level from source to sink; e.g. CSV.read
[2017-06-30T10:18:16.275]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-06-30T10:18:16.457]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-06-30T10:18:16.565]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-06-30T10:18:16.716]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-06-30T10:18:16.843]: Source: CSV.Source args => Sink: CSV.Sink
[2017-06-30T10:18:17.046]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-06-30T10:18:17.221]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-06-30T10:18:17.395]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-06-30T10:18:17.542]: Source: CSV.Source => Sink: CSV.Sink args
[2017-06-30T10:18:17.686]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-06-30T10:18:17.854]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-06-30T10:18:17.998]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-06-30T10:18:18.137]: Source: CSV.Source => Sink: CSV.Sink
[2017-06-30T10:18:18.28]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-06-30T10:18:18.454]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-06-30T10:18:18.59]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-06-30T10:18:18.727]: Test high-level to sink from source; e.g. CSV.write
[2017-06-30T10:18:18.727]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-06-30T10:18:18.908]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-06-30T10:18:19.108]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-06-30T10:18:19.3]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-06-30T10:18:19.468]: Sink: CSV.Sink => Source: CSV.Source args
[2017-06-30T10:18:19.651]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-06-30T10:18:19.846]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-06-30T10:18:20.019]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-06-30T10:18:20.182]: Sink: CSV.Sink args => Source: CSV.Source
[2017-06-30T10:18:20.35]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-06-30T10:18:20.523]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-06-30T10:18:20.683]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-06-30T10:18:20.812]: Sink: CSV.Sink => Source: CSV.Source
[2017-06-30T10:18:20.913]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-06-30T10:18:21.018]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-06-30T10:18:21.138]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-06-30T10:18:21.281]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
