>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.15.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (536.4609375 MB free)
Uptime: 20747.0 sec
Load Avg:  0.94091796875  0.97509765625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1172812 s       6134 s     104060 s     524255 s         30 s
#2  3500 MHz     345750 s         42 s      52990 s    1628355 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.12.0
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.25.2
 - DataArrays                    0.3.12
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.15.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.746815 seconds (24.95 M allocations: 652.546 MB, 10.64% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliaaQzyzk",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-05-22T10:08:02.517]: Test high-level to sink from source; e.g. CSV.write
[2017-05-22T10:08:02.6]: Sink: CSV.Sink args => Source: DataFrame args
[2017-05-22T10:08:03.761]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-05-22T10:08:03.861]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-05-22T10:08:04.304]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-05-22T10:08:04.358]: Sink: CSV.Sink => Source: DataFrame args
[2017-05-22T10:08:04.46]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-05-22T10:08:04.552]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-05-22T10:08:04.631]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-05-22T10:08:04.683]: Sink: CSV.Sink args => Source: DataFrame
[2017-05-22T10:08:04.768]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-05-22T10:08:04.888]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-05-22T10:08:04.976]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-05-22T10:08:05.045]: Sink: CSV.Sink => Source: DataFrame
[2017-05-22T10:08:05.109]: Sink: CSV.Sink => Source: DataFrame + append
[2017-05-22T10:08:05.204]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-05-22T10:08:05.255]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-05-22T10:08:05.319]: finished...
[2017-05-22T10:08:05.323]: Test high-level from source to sink; e.g. CSV.read
[2017-05-22T10:08:05.323]: Source: CSV.Source args => Sink: DataFrame args
[2017-05-22T10:08:05.763]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-05-22T10:08:06.028]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-05-22T10:08:06.202]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-05-22T10:08:06.256]: Source: CSV.Source args => Sink: DataFrame
[2017-05-22T10:08:06.435]: Source: CSV.Source args => Sink: DataFrame + append
[2017-05-22T10:08:06.587]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-05-22T10:08:06.725]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-05-22T10:08:06.829]: Source: CSV.Source => Sink: DataFrame args
[2017-05-22T10:08:06.946]: Source: CSV.Source => Sink: DataFrame args + append
[2017-05-22T10:08:07.092]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-05-22T10:08:07.173]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-05-22T10:08:07.259]: Source: CSV.Source => Sink: DataFrame
[2017-05-22T10:08:07.355]: Source: CSV.Source => Sink: DataFrame + append
[2017-05-22T10:08:07.494]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-05-22T10:08:07.596]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-05-22T10:08:07.695]: Test high-level from source to sink; e.g. CSV.read
[2017-05-22T10:08:07.696]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-05-22T10:08:07.934]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-05-22T10:08:08.128]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-05-22T10:08:08.387]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-05-22T10:08:08.524]: Source: CSV.Source args => Sink: CSV.Sink
[2017-05-22T10:08:08.674]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-05-22T10:08:08.858]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-05-22T10:08:08.981]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-05-22T10:08:09.125]: Source: CSV.Source => Sink: CSV.Sink args
[2017-05-22T10:08:09.278]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-05-22T10:08:09.469]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-05-22T10:08:09.595]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-05-22T10:08:09.734]: Source: CSV.Source => Sink: CSV.Sink
[2017-05-22T10:08:09.874]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-05-22T10:08:10.035]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-05-22T10:08:10.168]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-05-22T10:08:10.257]: Test high-level to sink from source; e.g. CSV.write
[2017-05-22T10:08:10.257]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-05-22T10:08:10.372]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-05-22T10:08:10.489]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-05-22T10:08:10.602]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-05-22T10:08:10.695]: Sink: CSV.Sink => Source: CSV.Source args
[2017-05-22T10:08:10.864]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-05-22T10:08:11.04]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-05-22T10:08:11.187]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-05-22T10:08:11.345]: Sink: CSV.Sink args => Source: CSV.Source
[2017-05-22T10:08:11.506]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-05-22T10:08:11.691]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-05-22T10:08:11.854]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-05-22T10:08:11.953]: Sink: CSV.Sink => Source: CSV.Source
[2017-05-22T10:08:12.118]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-05-22T10:08:12.298]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-05-22T10:08:12.444]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-05-22T10:08:12.601]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
