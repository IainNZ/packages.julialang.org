>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.6
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.6.1
INFO: Installing FileIO v0.5.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (585.14453125 MB free)
Uptime: 20787.0 sec
Load Avg:  1.0029296875  0.9921875  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1128797 s       2115 s     111802 s     597024 s         26 s
#2  3500 MHz     482598 s       4114 s      54636 s    1462836 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.13.0
14 additional packages:
 - CategoricalArrays             0.1.6
 - Compat                        0.30.0
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.6.1
 - FileIO                        0.5.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.2.0
 - StatsBase                     0.17.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.580336 seconds (24.95 M allocations: 652.546 MB, 11.16% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/julia5NrAtu",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-08-15T09:49:37.552]: Test high-level to sink from source; e.g. CSV.write
[2017-08-15T09:49:37.608]: Sink: CSV.Sink args => Source: DataFrame args
[2017-08-15T09:49:38.246]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-08-15T09:49:38.305]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-08-15T09:49:38.639]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-08-15T09:49:38.682]: Sink: CSV.Sink => Source: DataFrame args
[2017-08-15T09:49:38.749]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-08-15T09:49:38.831]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-08-15T09:49:38.917]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-08-15T09:49:38.973]: Sink: CSV.Sink args => Source: DataFrame
[2017-08-15T09:49:39.06]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-08-15T09:49:39.157]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-08-15T09:49:39.236]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-08-15T09:49:39.303]: Sink: CSV.Sink => Source: DataFrame
[2017-08-15T09:49:39.366]: Sink: CSV.Sink => Source: DataFrame + append
[2017-08-15T09:49:39.461]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-08-15T09:49:39.517]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-08-15T09:49:39.574]: finished...
[2017-08-15T09:49:39.611]: Test high-level from source to sink; e.g. CSV.read
[2017-08-15T09:49:39.611]: Source: CSV.Source args => Sink: DataFrame args
[2017-08-15T09:49:40.092]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-08-15T09:49:40.349]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-08-15T09:49:40.572]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-08-15T09:49:40.671]: Source: CSV.Source args => Sink: DataFrame
[2017-08-15T09:49:40.793]: Source: CSV.Source args => Sink: DataFrame + append
[2017-08-15T09:49:40.946]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-08-15T09:49:41.069]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-08-15T09:49:41.161]: Source: CSV.Source => Sink: DataFrame args
[2017-08-15T09:49:41.262]: Source: CSV.Source => Sink: DataFrame args + append
[2017-08-15T09:49:41.396]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-08-15T09:49:41.489]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-08-15T09:49:41.577]: Source: CSV.Source => Sink: DataFrame
[2017-08-15T09:49:41.689]: Source: CSV.Source => Sink: DataFrame + append
[2017-08-15T09:49:41.834]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-08-15T09:49:41.939]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-08-15T09:49:42.039]: Test high-level from source to sink; e.g. CSV.read
[2017-08-15T09:49:42.039]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-08-15T09:49:42.277]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-08-15T09:49:42.482]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-08-15T09:49:42.748]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-08-15T09:49:42.867]: Source: CSV.Source args => Sink: CSV.Sink
[2017-08-15T09:49:42.986]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-08-15T09:49:43.098]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-08-15T09:49:43.298]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-08-15T09:49:43.47]: Source: CSV.Source => Sink: CSV.Sink args
[2017-08-15T09:49:43.648]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-08-15T09:49:43.841]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-08-15T09:49:44.005]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-08-15T09:49:44.166]: Source: CSV.Source => Sink: CSV.Sink
[2017-08-15T09:49:44.334]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-08-15T09:49:44.543]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-08-15T09:49:44.686]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-08-15T09:49:44.776]: Test high-level to sink from source; e.g. CSV.write
[2017-08-15T09:49:44.776]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-08-15T09:49:44.948]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-08-15T09:49:45.136]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-08-15T09:49:45.355]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-08-15T09:49:45.484]: Sink: CSV.Sink => Source: CSV.Source args
[2017-08-15T09:49:45.652]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-08-15T09:49:45.886]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-08-15T09:49:45.99]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-08-15T09:49:46.108]: Sink: CSV.Sink args => Source: CSV.Source
[2017-08-15T09:49:46.244]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-08-15T09:49:46.41]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-08-15T09:49:46.583]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-08-15T09:49:46.742]: Sink: CSV.Sink => Source: CSV.Source
[2017-08-15T09:49:46.909]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-08-15T09:49:47.102]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-08-15T09:49:47.254]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-08-15T09:49:47.398]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
