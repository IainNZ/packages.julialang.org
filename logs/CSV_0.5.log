>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.4
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.4.0
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.16.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (676.63671875 MB free)
Uptime: 21464.0 sec
Load Avg:  1.06396484375  1.029296875  1.048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1204366 s       3230 s     103088 s     559890 s         87 s
#2  3499 MHz     472826 s       3170 s      58281 s    1528466 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.12.0
14 additional packages:
 - CategoricalArrays             0.1.4
 - Compat                        0.26.0
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.4.0
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.16.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:573 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.269400 seconds (24.95 M allocations: 652.546 MB, 11.36% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliax71nxI",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-06-18T10:19:42.628]: Test high-level to sink from source; e.g. CSV.write
[2017-06-18T10:19:42.673]: Sink: CSV.Sink args => Source: DataFrame args
[2017-06-18T10:19:43.298]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-06-18T10:19:43.352]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-06-18T10:19:43.602]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-06-18T10:19:43.634]: Sink: CSV.Sink => Source: DataFrame args
[2017-06-18T10:19:43.695]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-06-18T10:19:43.757]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-06-18T10:19:43.804]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-06-18T10:19:43.837]: Sink: CSV.Sink args => Source: DataFrame
[2017-06-18T10:19:43.887]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-06-18T10:19:43.978]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-06-18T10:19:44.057]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-06-18T10:19:44.125]: Sink: CSV.Sink => Source: DataFrame
[2017-06-18T10:19:44.169]: Sink: CSV.Sink => Source: DataFrame + append
[2017-06-18T10:19:44.245]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-06-18T10:19:44.303]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-06-18T10:19:44.358]: finished...
[2017-06-18T10:19:44.364]: Test high-level from source to sink; e.g. CSV.read
[2017-06-18T10:19:44.364]: Source: CSV.Source args => Sink: DataFrame args
[2017-06-18T10:19:44.788]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-06-18T10:19:45.045]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-06-18T10:19:45.273]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-06-18T10:19:45.372]: Source: CSV.Source args => Sink: DataFrame
[2017-06-18T10:19:45.553]: Source: CSV.Source args => Sink: DataFrame + append
[2017-06-18T10:19:45.713]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-06-18T10:19:45.849]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-06-18T10:19:45.95]: Source: CSV.Source => Sink: DataFrame args
[2017-06-18T10:19:46.052]: Source: CSV.Source => Sink: DataFrame args + append
[2017-06-18T10:19:46.176]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-06-18T10:19:46.274]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-06-18T10:19:46.37]: Source: CSV.Source => Sink: DataFrame
[2017-06-18T10:19:46.477]: Source: CSV.Source => Sink: DataFrame + append
[2017-06-18T10:19:46.548]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-06-18T10:19:46.598]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-06-18T10:19:46.649]: Test high-level from source to sink; e.g. CSV.read
[2017-06-18T10:19:46.65]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-06-18T10:19:46.78]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-06-18T10:19:46.886]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-06-18T10:19:47.045]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-06-18T10:19:47.147]: Source: CSV.Source args => Sink: CSV.Sink
[2017-06-18T10:19:47.262]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-06-18T10:19:47.372]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-06-18T10:19:47.481]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-06-18T10:19:47.585]: Source: CSV.Source => Sink: CSV.Sink args
[2017-06-18T10:19:47.679]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-06-18T10:19:47.801]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-06-18T10:19:47.918]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-06-18T10:19:48.002]: Source: CSV.Source => Sink: CSV.Sink
[2017-06-18T10:19:48.095]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-06-18T10:19:48.209]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-06-18T10:19:48.294]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-06-18T10:19:48.392]: Test high-level to sink from source; e.g. CSV.write
[2017-06-18T10:19:48.393]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-06-18T10:19:48.605]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-06-18T10:19:48.812]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-06-18T10:19:48.998]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-06-18T10:19:49.149]: Sink: CSV.Sink => Source: CSV.Source args
[2017-06-18T10:19:49.33]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-06-18T10:19:49.512]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-06-18T10:19:49.607]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-06-18T10:19:49.694]: Sink: CSV.Sink args => Source: CSV.Source
[2017-06-18T10:19:49.785]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-06-18T10:19:49.892]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-06-18T10:19:50.017]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-06-18T10:19:50.102]: Sink: CSV.Sink => Source: CSV.Source
[2017-06-18T10:19:50.199]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-06-18T10:19:50.308]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-06-18T10:19:50.399]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-06-18T10:19:50.486]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
