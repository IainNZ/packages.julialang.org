>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (586.9609375 MB free)
Uptime: 19047.0 sec
Load Avg:  0.541015625  0.599609375  0.84716796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1086360 s       1254 s      90848 s     481806 s         15 s
#2  3500 MHz     349917 s       4887 s      50153 s    1455459 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.9.1
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.24.0
 - DataArrays                    0.3.12
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.0
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.395520 seconds (24.95 M allocations: 652.546 MB, 13.01% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliaI0P1FA",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-04-28T09:39:28.046]: Test high-level to sink from source; e.g. CSV.write
[2017-04-28T09:39:28.119]: Sink: CSV.Sink args => Source: DataFrame args
[2017-04-28T09:39:29.123]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-04-28T09:39:29.21]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-04-28T09:39:29.595]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-04-28T09:39:29.643]: Sink: CSV.Sink => Source: DataFrame args
[2017-04-28T09:39:29.738]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-04-28T09:39:29.822]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-04-28T09:39:29.899]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-04-28T09:39:29.948]: Sink: CSV.Sink args => Source: DataFrame
[2017-04-28T09:39:30.026]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-04-28T09:39:30.116]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-04-28T09:39:30.185]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-04-28T09:39:30.254]: Sink: CSV.Sink => Source: DataFrame
[2017-04-28T09:39:30.317]: Sink: CSV.Sink => Source: DataFrame + append
[2017-04-28T09:39:30.416]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-04-28T09:39:30.471]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-04-28T09:39:30.53]: finished...
[2017-04-28T09:39:30.535]: Test high-level from source to sink; e.g. CSV.read
[2017-04-28T09:39:30.535]: Source: CSV.Source args => Sink: DataFrame args
[2017-04-28T09:39:30.953]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-04-28T09:39:31.19]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-04-28T09:39:31.4]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-04-28T09:39:31.496]: Source: CSV.Source args => Sink: DataFrame
[2017-04-28T09:39:31.666]: Source: CSV.Source args => Sink: DataFrame + append
[2017-04-28T09:39:31.815]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-04-28T09:39:31.954]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-04-28T09:39:32.016]: Source: CSV.Source => Sink: DataFrame args
[2017-04-28T09:39:32.076]: Source: CSV.Source => Sink: DataFrame args + append
[2017-04-28T09:39:32.153]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-04-28T09:39:32.211]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-04-28T09:39:32.265]: Source: CSV.Source => Sink: DataFrame
[2017-04-28T09:39:32.322]: Source: CSV.Source => Sink: DataFrame + append
[2017-04-28T09:39:32.396]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-04-28T09:39:32.449]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-04-28T09:39:32.501]: Test high-level from source to sink; e.g. CSV.read
[2017-04-28T09:39:32.501]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-04-28T09:39:32.634]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-04-28T09:39:32.743]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-04-28T09:39:32.889]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-04-28T09:39:32.974]: Source: CSV.Source args => Sink: CSV.Sink
[2017-04-28T09:39:33.086]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-04-28T09:39:33.265]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-04-28T09:39:33.44]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-04-28T09:39:33.588]: Source: CSV.Source => Sink: CSV.Sink args
[2017-04-28T09:39:33.74]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-04-28T09:39:33.911]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-04-28T09:39:34.054]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-04-28T09:39:34.191]: Source: CSV.Source => Sink: CSV.Sink
[2017-04-28T09:39:34.337]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-04-28T09:39:34.517]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-04-28T09:39:34.655]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-04-28T09:39:34.797]: Test high-level to sink from source; e.g. CSV.write
[2017-04-28T09:39:34.798]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-04-28T09:39:35.002]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-04-28T09:39:35.196]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-04-28T09:39:35.377]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-04-28T09:39:35.533]: Sink: CSV.Sink => Source: CSV.Source args
[2017-04-28T09:39:35.708]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-04-28T09:39:35.83]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-04-28T09:39:35.976]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-04-28T09:39:36.127]: Sink: CSV.Sink args => Source: CSV.Source
[2017-04-28T09:39:36.293]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-04-28T09:39:36.488]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-04-28T09:39:36.637]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-04-28T09:39:36.722]: Sink: CSV.Sink => Source: CSV.Source
[2017-04-28T09:39:36.854]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-04-28T09:39:37.048]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-04-28T09:39:37.201]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-04-28T09:39:37.349]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
