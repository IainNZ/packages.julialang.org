>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.0
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (568.0546875 MB free)
Uptime: 18901.0 sec
Load Avg:  1.041015625  1.001953125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1145172 s       4870 s      97813 s     375990 s         25 s
#2  3500 MHz     287770 s       1762 s      52367 s    1508442 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.9.0
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.23.0
 - DataArrays                    0.3.12
 - DataFrames                    0.9.0
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.0
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.120889 seconds (24.95 M allocations: 652.546 MB, 13.24% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/julia2zwlBW",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-04-18T09:37:01.533]: Test high-level to sink from source; e.g. CSV.write
[2017-04-18T09:37:01.583]: Sink: CSV.Sink args => Source: DataFrame args
[2017-04-18T09:37:02.273]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-04-18T09:37:02.332]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-04-18T09:37:02.623]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-04-18T09:37:02.654]: Sink: CSV.Sink => Source: DataFrame args
[2017-04-18T09:37:02.748]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-04-18T09:37:02.845]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-04-18T09:37:02.931]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-04-18T09:37:02.985]: Sink: CSV.Sink args => Source: DataFrame
[2017-04-18T09:37:03.076]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-04-18T09:37:03.171]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-04-18T09:37:03.245]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-04-18T09:37:03.305]: Sink: CSV.Sink => Source: DataFrame
[2017-04-18T09:37:03.362]: Sink: CSV.Sink => Source: DataFrame + append
[2017-04-18T09:37:03.451]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-04-18T09:37:03.502]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-04-18T09:37:03.553]: finished...
[2017-04-18T09:37:03.558]: Test high-level from source to sink; e.g. CSV.read
[2017-04-18T09:37:03.559]: Source: CSV.Source args => Sink: DataFrame args
[2017-04-18T09:37:03.956]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-04-18T09:37:04.186]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-04-18T09:37:04.413]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-04-18T09:37:04.51]: Source: CSV.Source args => Sink: DataFrame
[2017-04-18T09:37:04.674]: Source: CSV.Source args => Sink: DataFrame + append
[2017-04-18T09:37:04.825]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-04-18T09:37:04.949]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-04-18T09:37:05.049]: Source: CSV.Source => Sink: DataFrame args
[2017-04-18T09:37:05.16]: Source: CSV.Source => Sink: DataFrame args + append
[2017-04-18T09:37:05.233]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-04-18T09:37:05.295]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-04-18T09:37:05.349]: Source: CSV.Source => Sink: DataFrame
[2017-04-18T09:37:05.409]: Source: CSV.Source => Sink: DataFrame + append
[2017-04-18T09:37:05.488]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-04-18T09:37:05.6]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-04-18T09:37:05.691]: Test high-level from source to sink; e.g. CSV.read
[2017-04-18T09:37:05.692]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-04-18T09:37:05.933]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-04-18T09:37:06.128]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-04-18T09:37:06.397]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-04-18T09:37:06.556]: Source: CSV.Source args => Sink: CSV.Sink
[2017-04-18T09:37:06.763]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-04-18T09:37:06.964]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-04-18T09:37:07.165]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-04-18T09:37:07.332]: Source: CSV.Source => Sink: CSV.Sink args
[2017-04-18T09:37:07.502]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-04-18T09:37:07.695]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-04-18T09:37:07.856]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-04-18T09:37:08.01]: Source: CSV.Source => Sink: CSV.Sink
[2017-04-18T09:37:08.167]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-04-18T09:37:08.372]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-04-18T09:37:08.532]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-04-18T09:37:08.69]: Test high-level to sink from source; e.g. CSV.write
[2017-04-18T09:37:08.69]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-04-18T09:37:08.891]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-04-18T09:37:09.096]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-04-18T09:37:09.29]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-04-18T09:37:09.429]: Sink: CSV.Sink => Source: CSV.Source args
[2017-04-18T09:37:09.545]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-04-18T09:37:09.716]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-04-18T09:37:09.847]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-04-18T09:37:09.94]: Sink: CSV.Sink args => Source: CSV.Source
[2017-04-18T09:37:10.033]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-04-18T09:37:10.142]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-04-18T09:37:10.242]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-04-18T09:37:10.331]: Sink: CSV.Sink => Source: CSV.Source
[2017-04-18T09:37:10.447]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-04-18T09:37:10.559]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-04-18T09:37:10.65]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-04-18T09:37:10.738]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
