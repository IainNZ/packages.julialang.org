>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.6
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.6.0
INFO: Installing FileIO v0.5.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.17.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (583.49609375 MB free)
Uptime: 21099.0 sec
Load Avg:  1.0087890625  1.00732421875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1194094 s       1636 s     100458 s     563275 s         36 s
#2  3500 MHz     501914 s       4916 s      54254 s    1494984 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.13.0
14 additional packages:
 - CategoricalArrays             0.1.6
 - Compat                        0.26.0
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.6.0
 - FileIO                        0.5.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.17.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
Test Summary: | Pass  Total
  empty fields |    1      1
Test Summary:          | Pass  Total
  misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
  quoted numbers detected as string column |    3      3
  1.412584 seconds (24.95 M allocations: 652.546 MB, 14.86% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.5/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english")
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: Base.Dates.DateFormat(Base.Dates.Slot[Base.Dates.DelimitedSlot{Base.Dates.Year}(Base.Dates.Year,'y',4,"-"),Base.Dates.DelimitedSlot{Base.Dates.Month}(Base.Dates.Month,'m',2,"-"),Base.Dates.DelimitedSlot{Base.Dates.Day}(Base.Dates.Day,'d',2,r"(?=\s|$)")],"","english"),IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1),"/tmp/juliaqh63vN",0,false,String[],false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.5/CSV/test/datastreams.jl:15.
[2017-07-13T10:13:44.021]: Test high-level to sink from source; e.g. CSV.write
[2017-07-13T10:13:44.084]: Sink: CSV.Sink args => Source: DataFrame args
[2017-07-13T10:13:45.113]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-07-13T10:13:45.168]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-07-13T10:13:45.431]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-07-13T10:13:45.462]: Sink: CSV.Sink => Source: DataFrame args
[2017-07-13T10:13:45.523]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-07-13T10:13:45.576]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-07-13T10:13:45.628]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-07-13T10:13:45.66]: Sink: CSV.Sink args => Source: DataFrame
[2017-07-13T10:13:45.72]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-07-13T10:13:45.799]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-07-13T10:13:45.867]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-07-13T10:13:45.932]: Sink: CSV.Sink => Source: DataFrame
[2017-07-13T10:13:45.995]: Sink: CSV.Sink => Source: DataFrame + append
[2017-07-13T10:13:46.09]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-07-13T10:13:46.144]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-07-13T10:13:46.188]: finished...
[2017-07-13T10:13:46.193]: Test high-level from source to sink; e.g. CSV.read
[2017-07-13T10:13:46.193]: Source: CSV.Source args => Sink: DataFrame args
[2017-07-13T10:13:46.556]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-07-13T10:13:46.797]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-07-13T10:13:47.012]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-07-13T10:13:47.103]: Source: CSV.Source args => Sink: DataFrame
[2017-07-13T10:13:47.275]: Source: CSV.Source args => Sink: DataFrame + append
[2017-07-13T10:13:47.436]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-07-13T10:13:47.572]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-07-13T10:13:47.669]: Source: CSV.Source => Sink: DataFrame args
[2017-07-13T10:13:47.786]: Source: CSV.Source => Sink: DataFrame args + append
[2017-07-13T10:13:47.919]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-07-13T10:13:48.021]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-07-13T10:13:48.123]: Source: CSV.Source => Sink: DataFrame
[2017-07-13T10:13:48.232]: Source: CSV.Source => Sink: DataFrame + append
[2017-07-13T10:13:48.366]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-07-13T10:13:48.465]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-07-13T10:13:48.566]: Test high-level from source to sink; e.g. CSV.read
[2017-07-13T10:13:48.567]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-07-13T10:13:48.797]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-07-13T10:13:48.97]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-07-13T10:13:49.233]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-07-13T10:13:49.388]: Source: CSV.Source args => Sink: CSV.Sink
[2017-07-13T10:13:49.596]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-07-13T10:13:49.752]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-07-13T10:13:49.951]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-07-13T10:13:50.123]: Source: CSV.Source => Sink: CSV.Sink args
[2017-07-13T10:13:50.289]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-07-13T10:13:50.468]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-07-13T10:13:50.618]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-07-13T10:13:50.772]: Source: CSV.Source => Sink: CSV.Sink
[2017-07-13T10:13:50.938]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-07-13T10:13:51.148]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-07-13T10:13:51.311]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-07-13T10:13:51.46]: Test high-level to sink from source; e.g. CSV.write
[2017-07-13T10:13:51.46]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-07-13T10:13:51.666]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-07-13T10:13:51.881]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-07-13T10:13:52.061]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-07-13T10:13:52.212]: Sink: CSV.Sink => Source: CSV.Source args
[2017-07-13T10:13:52.403]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-07-13T10:13:52.61]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-07-13T10:13:52.784]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-07-13T10:13:52.951]: Sink: CSV.Sink args => Source: CSV.Source
[2017-07-13T10:13:53.114]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-07-13T10:13:53.297]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-07-13T10:13:53.471]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-07-13T10:13:53.627]: Sink: CSV.Sink => Source: CSV.Source
[2017-07-13T10:13:53.789]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-07-13T10:13:53.984]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-07-13T10:13:54.15]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-07-13T10:13:54.304]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
