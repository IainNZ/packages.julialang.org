>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.8.0
INFO: Installing DiffEqParamEstim v0.4.0
INFO: Installing Distributions v0.13.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.15.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1755.453125 MB free)
Uptime: 43296.0 sec
Load Avg:  1.0029296875  1.001953125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2754361 s         98 s     125079 s     801506 s         39 s
#2  3501 MHz     871109 s       6503 s      93378 s    3250972 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.4.0
 - JSON                          0.12.0
33 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.8.0
 - Distributions                 0.13.0
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.15.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.6.0
INFO: Installing DiffEqNoiseProcess v0.1.1
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Iterators v0.3.1
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.4.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
Use LM to fit the parameter
     0     2.814139e+03              NaN
 * lambda: 10000.0

     1     2.814136e+03     8.741047e+02
 * g(x): 874.1046736410519
 * lambda: 1000.0
 * dx: [1.77026e-6]

     2     2.814105e+03     8.733328e+02
 * g(x): 873.3327529790649
 * lambda: 100.0
 * dx: [1.76867e-5]

     3     2.813799e+03     8.656659e+02
 * g(x): 865.6658768154822
 * lambda: 10.0
 * dx: [0.000175298]

     4     2.809954e+03     8.071142e+02
 * g(x): 807.1141583744113
 * lambda: 1.0
 * dx: [0.00161007]

     5     2.787089e+03     5.298722e+02
 * g(x): 529.8722227224919
 * lambda: 0.1
 * dx: [0.0101498]

     6     2.732689e+03     1.038596e+02
 * g(x): 103.85961357768957
 * lambda: 0.010000000000000002
 * dx: [0.0212743]

     7     2.646523e+03     6.405987e+01
 * g(x): 64.05987456643521
 * lambda: 0.0010000000000000002
 * dx: [0.0283652]

     8     2.533681e+03     7.430676e+01
 * g(x): 74.30676226081583
 * lambda: 0.00010000000000000003
 * dx: [0.0340776]

     9     2.400807e+03     8.810092e+01
 * g(x): 88.10091696709301
 * lambda: 1.0000000000000004e-5
 * dx: [0.0376845]

    10     2.254393e+03     2.012719e+02
 * g(x): 201.27189569283257
 * lambda: 1.0000000000000004e-6
 * dx: [0.0398835]

    11     1.996182e+03     1.155661e+02
 * g(x): 115.56605935700165
 * lambda: 1.0000000000000005e-7
 * dx: [0.0483183]

    12     1.491857e+03     2.608050e+02
 * g(x): 260.8049956312373
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638888]

    13     7.705747e+02     8.181375e+02
 * g(x): 818.1374978629424
 * lambda: 1.0000000000000005e-9
 * dx: [0.0759125]

    14     1.218272e+02     8.055803e+02
 * g(x): 805.5803455704585
 * lambda: 1.0000000000000006e-10
 * dx: [0.0872763]

    15     1.044437e+00     1.882352e+02
 * g(x): 188.23522836380835
 * lambda: 1.0000000000000006e-11
 * dx: [0.0466032]

    16     3.943353e-02     3.318195e-01
 * g(x): 0.33181946459444933
 * lambda: 1.0000000000000006e-12
 * dx: [0.00472096]

    17     3.942738e-02     1.280344e-06
 * g(x): 1.2803444424669408e-6
 * lambda: 1.0000000000000007e-13
 * dx: [1.1706e-5]

    18     3.942738e-02     4.584148e-09
 * g(x): 4.5841476170593864e-9
 * lambda: 1.0000000000000008e-14
 * dx: [1.01855e-8]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] ≈ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.457643e+03              NaN
 * lambda: 10000.0

     1     1.457580e+03     2.845993e+03
 * g(x): 2845.9930440296434
 * lambda: 1000.0
 * dx: [1.06516e-5, 9.38307e-6]

     2     1.456951e+03     2.843205e+03
 * g(x): 2843.205416132273
 * lambda: 100.0
 * dx: [0.000106405, 9.34172e-5]

     3     1.450718e+03     2.815727e+03
 * g(x): 2815.7271194711784
 * lambda: 10.0
 * dx: [0.0010532, 0.000893521]

     4     1.393198e+03     2.576534e+03
 * g(x): 2576.5337459365232
 * lambda: 1.0
 * dx: [0.00959627, 0.00553382]

     5     1.072207e+03     1.713805e+03
 * g(x): 1713.8048391556854
 * lambda: 0.1
 * dx: [0.0570951, -0.0448956]

     6     5.063143e+02     1.213967e+03
 * g(x): 1213.9674875500293
 * lambda: 0.010000000000000002
 * dx: [0.136292, -0.163411]

     7     4.028348e+01     2.132878e+02
 * g(x): 213.28783647588898
 * lambda: 0.0010000000000000002
 * dx: [0.0449005, 0.327335]

     8     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 0.010000000000000002
 * dx: [-0.000529336, -0.000894698]

     9     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 0.10000000000000002
 * dx: [-0.000522233, -0.000886175]

    10     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 1.0000000000000002
 * dx: [-0.000459728, -0.000809218]

    11     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 10.000000000000002
 * dx: [-0.000199942, -0.000434893]

    12     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 100.00000000000001
 * dx: [-2.71772e-5, -7.78409e-5]

    13     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 1000.0000000000001
 * dx: [-2.7657e-6, -8.45878e-6]

    14     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 10000.000000000002
 * dx: [-2.76909e-7, -8.53289e-7]

    15     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 100000.00000000001
 * dx: [-2.76941e-8, -8.54037e-8]

    16     4.028348e+01     8.801420e+01
 * g(x): 88.01420036480081
 * lambda: 1.0000000000000001e6
 * dx: [-2.76944e-9, -8.54112e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Tests on ODEs: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: assertion failed: |param - [1.5; 3.0]| <= 0.002
    param = [1.54905, 2.72556]
    [1.5; 3.0] = [1.5, 3.0]
    difference = 0.27444116015000786 > 0.002
  Stacktrace:
   [1] test_approx_eq(::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::String, ::String) at ./deprecated.jl:1011
   [2] include_from_node1(::String) at ./loading.jl:569
   [3] include(::String) at ./sysimg.jl:14
   [4] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
   [5] macro expansion at ./test.jl:856 [inlined]
   [6] macro expansion at ./util.jl:237 [inlined]
   [7] anonymous at ./<missing>:?
   [8] include_from_node1(::String) at ./loading.jl:569
   [9] include(::String) at ./sysimg.jl:14
   [10] process_options(::Base.JLOptions) at ./client.jl:305
   [11] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Test Summary: | Error  Total
Tests on ODEs |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl, in expression starting on line 3
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.6.0
INFO: Removing DiffEqNoiseProcess v0.1.1
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Iterators v0.3.1
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.4.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors

>>> End of log
