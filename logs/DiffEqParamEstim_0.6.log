>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.0.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Iterators v0.3.1
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.4.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-pre.beta.435
Commit da69be2 (2017-04-30 02:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1800.67578125 MB free)
Uptime: 41882.0 sec
Load Avg:  0.9521484375  0.98486328125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2638970 s       3570 s     116899 s     829968 s         32 s
#2  3500 MHz     860229 s       2938 s      75720 s    3145663 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.9.1
30 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.0.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Iterators                     0.3.1
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.4.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Downgrading DiffEqBase: v1.0.1 => v0.15.0
INFO: Installing DiffEqMonteCarlo v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Juno v0.2.7
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing Media v0.2.7
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v1.8.0
INFO: Installing ParameterizedFunctions v1.3.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Downgrading RecursiveArrayTools: v0.4.1 => v0.3.0
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.0
INFO: Installing StochasticDiffEq v1.4.0
INFO: Installing SymEngine v0.1.5
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim

WARNING: deprecated syntax "abstract AbstractVectorOfArray{T,N}<:AbstractArray{T,N}" at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/vector_of_array.jl:2.
Use "abstract type AbstractVectorOfArray{T,N}<:AbstractArray{T,N} end" instead.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base..\(...)".
Use "function Base.broadcast(::typeof(Base.\), ...)" instead.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.

WARNING: deprecated syntax "inner constructor ODEIntegrator(...) around /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/type.jl:75".
Use "ODEIntegrator{algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}(...) where {algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}" instead.
Use LM to fit the parameter
     0     2.814532e+03              NaN
 * lambda: 10000.0

     1     2.814528e+03     8.777032e+02
 * g(x): 877.7032430245803
 * lambda: 1000.0
 * dx: [1.77754e-6]

     2     2.814497e+03     8.769277e+02
 * g(x): 876.9276508631835
 * lambda: 100.0
 * dx: [1.77596e-5]

     3     2.814188e+03     8.692324e+02
 * g(x): 869.232400628764
 * lambda: 10.0
 * dx: [0.00017602]

     4     2.810315e+03     8.103930e+02
 * g(x): 810.3930418008451
 * lambda: 1.0
 * dx: [0.00161672]

     5     2.787277e+03     5.318694e+02
 * g(x): 531.8694210421866
 * lambda: 0.1
 * dx: [0.0101859]

     6     2.732407e+03     1.041457e+02
 * g(x): 104.14570885766878
 * lambda: 0.010000000000000002
 * dx: [0.0213538]

     7     2.645455e+03     6.455790e+01
 * g(x): 64.55790118636749
 * lambda: 0.0010000000000000002
 * dx: [0.0285057]

     8     2.531826e+03     7.452193e+01
 * g(x): 74.52192751617471
 * lambda: 0.00010000000000000003
 * dx: [0.0342031]

     9     2.397391e+03     1.227208e+02
 * g(x): 122.72080402888757
 * lambda: 1.0000000000000004e-5
 * dx: [0.0380558]

    10     2.246053e+03     1.191396e+02
 * g(x): 119.13955084848837
 * lambda: 1.0000000000000004e-6
 * dx: [0.0410019]

    11     1.979147e+03     1.122062e+02
 * g(x): 112.20620264062983
 * lambda: 1.0000000000000005e-7
 * dx: [0.0489515]

    12     1.472434e+03     2.536777e+02
 * g(x): 253.6777177644015
 * lambda: 1.0000000000000005e-8
 * dx: [0.0635763]

    13     7.480724e+02     8.310743e+02
 * g(x): 831.0742709260835
 * lambda: 1.0000000000000005e-9
 * dx: [0.0763328]

    14     1.164908e+02     8.677883e+02
 * g(x): 867.7882740716593
 * lambda: 1.0000000000000006e-10
 * dx: [0.085927]

    15     9.245578e-01     1.777136e+02
 * g(x): 177.71358397558782
 * lambda: 1.0000000000000006e-11
 * dx: [0.0457652]

    16     4.033547e-02     2.854784e-01
 * g(x): 0.28547838429927463
 * lambda: 1.0000000000000006e-12
 * dx: [0.00442941]

    17     4.033081e-02     9.207264e-07
 * g(x): 9.207264028976425e-7
 * lambda: 1.0000000000000007e-13
 * dx: [1.01909e-5]

    18     4.033081e-02     1.571381e-08
 * g(x): 1.5713809475847995e-8
 * lambda: 1.0000000000000008e-14
 * dx: [8.91605e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] â‰ˆ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.457585e+03              NaN
 * lambda: 10000.0

     1     1.457522e+03     2.843265e+03
 * g(x): 2843.2650041050865
 * lambda: 1000.0
 * dx: [1.06414e-5, 9.34904e-6]

     2     1.456895e+03     2.840480e+03
 * g(x): 2840.4804694565146
 * lambda: 100.0
 * dx: [0.000106303, 9.30782e-5]

     3     1.450675e+03     2.813033e+03
 * g(x): 2813.0328284875613
 * lambda: 10.0
 * dx: [0.0010522, 0.000890196]

     4     1.393279e+03     2.574108e+03
 * g(x): 2574.108306850796
 * lambda: 1.0
 * dx: [0.00958733, 0.00550634]

     5     1.073041e+03     1.712211e+03
 * g(x): 1712.2106696467072
 * lambda: 0.1
 * dx: [0.0570489, -0.0450079]

     6     5.084713e+02     1.212618e+03
 * g(x): 1212.6181124394084
 * lambda: 0.010000000000000002
 * dx: [0.136252, -0.163957]

     7     4.195473e+01     2.154333e+02
 * g(x): 215.4332546051622
 * lambda: 0.0010000000000000002
 * dx: [0.046344, 0.32241]

     8     3.528037e+00     3.116713e+02
 * g(x): 311.67131610661045
 * lambda: 0.00010000000000000003
 * dx: [-0.0593186, 0.281907]

     9     4.146414e-02     4.666888e+00
 * g(x): 4.666887895096512
 * lambda: 1.0000000000000004e-5
 * dx: [0.00929782, -0.00296569]

    10     4.033081e-02     2.182684e-02
 * g(x): 0.02182683761344506
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000269275, 0.00111692]

    11     4.033079e-02     4.077268e-07
 * g(x): 4.077268330737738e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.34404e-6, 5.13195e-6]

    12     4.033079e-02     2.156454e-05
 * g(x): 2.1564544139041075e-5
 * lambda: 1.0000000000000006e-6
 * dx: [-2.91088e-9, 1.61802e-8]

WARNING: @test_approx_eq_eps is deprecated, use `@test param â‰ˆ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5; 3.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 104
Use LM to fit the parameter
     0     8.966160e+02              NaN
 * lambda: 10000.0

     1     8.964891e+02     2.413708e+03
 * g(x): 2413.7076242288995
 * lambda: 1000.0
 * dx: [1.18796e-5, -8.7293e-7, 4.36494e-5, 1.7161e-5]

     2     8.952224e+02     2.409052e+03
 * g(x): 2409.0524016956215
 * lambda: 100.0
 * dx: [0.000118564, -8.39922e-6, 0.00043574, 0.000171236]

     3     8.827675e+02     2.363525e+03
 * g(x): 2363.5250089908577
 * lambda: 10.0
 * dx: [0.00116299, -5.18385e-5, 0.00428416, 0.00167574]

     4     7.767656e+02     1.999066e+03
 * g(x): 1999.066461092401
 * lambda: 1.0
 * dx: [0.00978986, 0.00190894, 0.0369354, 0.0137292]

     5     3.467536e+02     1.021613e+03
 * g(x): 1021.612808772353
 * lambda: 0.1
 * dx: [0.0387563, 0.0569742, 0.202123, 0.0332037]

     6     1.776268e+01     1.667964e+02
 * g(x): 166.79643804941304
 * lambda: 0.010000000000000002
 * dx: [0.0431989, 0.0892467, 0.445515, -0.0900714]

     7     2.564233e+00     1.388458e+02
 * g(x): 138.84579757199492
 * lambda: 0.0010000000000000002
 * dx: [0.0430004, 0.0132772, -0.098226, -0.0905325]

     8     1.925788e-01     5.494048e+01
 * g(x): 54.940483067083704
 * lambda: 0.00010000000000000003
 * dx: [0.0531626, 0.0363734, -0.16409, -0.0567932]

     9     4.275830e-02     7.243548e+00
 * g(x): 7.2435475036576555
 * lambda: 1.0000000000000004e-5
 * dx: [0.0100539, 0.00286475, -0.0235501, -0.0102959]

    10     3.940282e-02     1.708905e-02
 * g(x): 0.017089054089966547
 * lambda: 1.0000000000000004e-6
 * dx: [0.00171019, 0.000654842, -0.00573329, -0.00198034]

    11     3.940264e-02     1.200014e-06
 * g(x): 1.2000137961099e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.26595e-5, 6.52819e-8, -3.7007e-5, -1.46415e-5]

    12     3.940264e-02     7.665621e-08
 * g(x): 7.66562130438686e-8
 * lambda: 1.0000000000000005e-8
 * dx: [4.97786e-8, 3.14482e-8, -1.52421e-7, -5.03723e-8]

    13     3.940264e-02     2.735199e-07
 * g(x): 2.735198637304759e-7
 * lambda: 1.0000000000000005e-7
 * dx: [9.08533e-10, 7.34026e-10, -2.55574e-9, -9.69115e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param â‰ˆ [1.5; 1.0; 3.0; 1.0] atol=0.01` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 131
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5; 1.0; 3.0; 1.0] atol=0.5` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 137
Test Summary: |
Tests on ODEs | No tests
 64.306755 seconds (33.33 M allocations: 3.011 GiB, 2.12% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:4 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/parameterized_function_type.jl, in expression starting on line 25
Test Summary:              |
ParameterizedFunction Type | No tests
  6.287501 seconds (1.85 M allocations: 257.116 MiB, 1.20% gc time)
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 25
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:15
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:32
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:33
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
Test Summary: |
Test on Monte | No tests
 27.474309 seconds (9.83 M allocations: 942.504 MiB, 1.32% gc time)
INFO: DiffEqParamEstim tests passed
INFO: Upgrading DiffEqBase: v0.15.0 => v1.0.1
INFO: Upgrading RecursiveArrayTools: v0.3.0 => v0.4.1
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Juno v0.2.7
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing Media v0.2.7
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v1.8.0
INFO: Removing ParameterizedFunctions v1.3.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.0
INFO: Removing StochasticDiffEq v1.4.0
INFO: Removing SymEngine v0.1.5

>>> End of log
