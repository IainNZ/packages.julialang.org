>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.12.0
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.13.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v2.1.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.10.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Installing StatsBase v0.16.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1717.9765625 MB free)
Uptime: 46096.0 sec
Load Avg:  0.9970703125  0.9853515625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz    2984722 s       6974 s     137990 s     815313 s         45 s
#2  3511 MHz     946894 s         96 s     110644 s    3430025 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
38 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.12.0
 - Distributions                 0.13.0
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.5
 - LineSearches                  2.1.1
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.10.0
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
 - StatsBase                     0.16.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Iterators v0.3.1
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.10.1
INFO: Installing OrdinaryDiffEq v2.8.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing PolynomialFactors v0.0.6
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.6.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.815442e+03              NaN
 * lambda: 10000.0

     1     2.815439e+03     8.783868e+02
 * g(x): 878.386831692426
 * lambda: 1000.0
 * dx: [1.77893e-6]

     2     2.815407e+03     8.776093e+02
 * g(x): 877.6092963904049
 * lambda: 100.0
 * dx: [1.77734e-5]

     3     2.815098e+03     8.699064e+02
 * g(x): 869.9064469643974
 * lambda: 10.0
 * dx: [0.000176157]

     4     2.811222e+03     8.110075e+02
 * g(x): 811.0075218778875
 * lambda: 1.0
 * dx: [0.00161796]

     5     2.788166e+03     5.321350e+02
 * g(x): 532.1350259318436
 * lambda: 0.1
 * dx: [0.0101907]

     6     2.733299e+03     1.041194e+02
 * g(x): 104.11936244547266
 * lambda: 0.010000000000000002
 * dx: [0.0213543]

     7     2.646371e+03     6.452410e+01
 * g(x): 64.52410059944653
 * lambda: 0.0010000000000000002
 * dx: [0.0285006]

     8     2.532698e+03     7.452760e+01
 * g(x): 74.52759615204278
 * lambda: 0.00010000000000000003
 * dx: [0.0342054]

     9     2.398082e+03     1.232243e+02
 * g(x): 123.22433869804212
 * lambda: 1.0000000000000004e-5
 * dx: [0.0380781]

    10     2.246282e+03     1.145113e+02
 * g(x): 114.51132326038176
 * lambda: 1.0000000000000004e-6
 * dx: [0.0410712]

    11     1.978350e+03     1.123824e+02
 * g(x): 112.38238377472035
 * lambda: 1.0000000000000005e-7
 * dx: [0.0490342]

    12     1.470448e+03     2.528753e+02
 * g(x): 252.8753451882376
 * lambda: 1.0000000000000005e-8
 * dx: [0.063603]

    13     7.442236e+02     8.349125e+02
 * g(x): 834.9124977726341
 * lambda: 1.0000000000000005e-9
 * dx: [0.076466]

    14     1.153735e+02     8.786442e+02
 * g(x): 878.6442050396026
 * lambda: 1.0000000000000006e-10
 * dx: [0.0857177]

    15     8.908925e-01     1.757799e+02
 * g(x): 175.7798514405677
 * lambda: 1.0000000000000006e-11
 * dx: [0.0455872]

    16     3.973633e-02     2.736387e-01
 * g(x): 0.2736386595001499
 * lambda: 1.0000000000000006e-12
 * dx: [0.00434719]

    17     3.973419e-02     4.831985e-07
 * g(x): 4.831985347952816e-7
 * lambda: 1.0000000000000007e-13
 * dx: [6.90359e-6]

    18     3.973419e-02     1.388001e-08
 * g(x): 1.3880009475109034e-8
 * lambda: 1.0000000000000008e-14
 * dx: [1.02515e-9]

     0     1.457770e+03              NaN
 * lambda: 10000.0

     1     1.457707e+03     2.845996e+03
 * g(x): 2845.9957874906218
 * lambda: 1000.0
 * dx: [1.06516e-5, 9.37869e-6]

     2     1.457078e+03     2.843207e+03
 * g(x): 2843.207308536347
 * lambda: 100.0
 * dx: [0.000106405, 9.33734e-5]

     3     1.450846e+03     2.815730e+03
 * g(x): 2815.72966494762
 * lambda: 10.0
 * dx: [0.0010532, 0.000893094]

     4     1.393330e+03     2.576526e+03
 * g(x): 2576.5264696639933
 * lambda: 1.0
 * dx: [0.00959625, 0.00552993]

     5     1.072428e+03     1.713767e+03
 * g(x): 1713.7674508994385
 * lambda: 0.1
 * dx: [0.0570938, -0.0449306]

     6     5.068203e+02     1.213811e+03
 * g(x): 1213.8109501483864
 * lambda: 0.010000000000000002
 * dx: [0.136298, -0.163595]

     7     4.083308e+01     2.138175e+02
 * g(x): 213.81749809279273
 * lambda: 0.0010000000000000002
 * dx: [0.0453654, 0.325735]

     8     3.080725e+00     2.920731e+02
 * g(x): 292.0731469136292
 * lambda: 0.00010000000000000003
 * dx: [-0.057929, 0.27762]

     9     4.068097e-02     2.569847e+00
 * g(x): 2.5698473704028864
 * lambda: 1.0000000000000004e-5
 * dx: [0.00862889, -0.00259725]

    10     3.973375e-02     2.604779e-02
 * g(x): 0.026047794915909805
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000242741, 0.00121234]

    11     3.973373e-02     1.734696e-08
 * g(x): 1.7346963199216248e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-6.03079e-7, 2.50716e-7]

    12     3.973373e-02     1.045224e-08
 * g(x): 1.0452239240787975e-8
 * lambda: 1.0000000000000005e-8
 * dx: [1.47982e-10, -1.38808e-9]

     0     8.960257e+02              NaN
 * lambda: 10000.0

     1     8.958986e+02     2.416246e+03
 * g(x): 2416.2456293764108
 * lambda: 1000.0
 * dx: [1.18921e-5, -9.45292e-7, 4.37013e-5, 1.71695e-5]

     2     8.946293e+02     2.411583e+03
 * g(x): 2411.583172698118
 * lambda: 100.0
 * dx: [0.000118688, -9.12171e-6, 0.000436262, 0.000171321]

     3     8.821497e+02     2.365983e+03
 * g(x): 2365.982558579112
 * lambda: 10.0
 * dx: [0.0011642, -5.89529e-5, 0.00428917, 0.00167655]

     4     7.759680e+02     2.000939e+03
 * g(x): 2000.9394117412594
 * lambda: 1.0
 * dx: [0.00979895, 0.00184672, 0.0369747, 0.013734]

     5     3.458403e+02     1.021672e+03
 * g(x): 1021.6724831225205
 * lambda: 0.1
 * dx: [0.0387578, 0.0566677, 0.202287, 0.0331637]

     6     1.716697e+01     1.617078e+02
 * g(x): 161.70781582482627
 * lambda: 0.010000000000000002
 * dx: [0.0430717, 0.0882049, 0.444198, -0.0908742]

     7     2.496944e+00     1.346438e+02
 * g(x): 134.6438464722933
 * lambda: 0.0010000000000000002
 * dx: [0.0426606, 0.0135678, -0.0962076, -0.0892231]

     8     1.855428e-01     4.829625e+01
 * g(x): 48.296248112711844
 * lambda: 0.00010000000000000003
 * dx: [0.0524103, 0.035978, -0.161839, -0.0560463]

     9     4.321626e-02     7.553598e+00
 * g(x): 7.5535977633953975
 * lambda: 1.0000000000000004e-5
 * dx: [0.0098986, 0.00278368, -0.0234011, -0.0102311]

    10     3.965050e-02     4.220064e-02
 * g(x): 0.04220063625251441
 * lambda: 1.0000000000000004e-6
 * dx: [0.00172666, 0.000655395, -0.00581942, -0.00200714]

    11     3.965039e-02     1.007347e-06
 * g(x): 1.00734720021034e-6
 * lambda: 1.0000000000000005e-7
 * dx: [5.63323e-6, -2.56044e-6, -1.27289e-5, -6.17179e-6]

    12     3.965039e-02     5.430930e-08
 * g(x): 5.430929617133984e-8
 * lambda: 1.0000000000000005e-8
 * dx: [2.45726e-9, 2.40332e-9, -5.60626e-9, -2.49781e-9]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Total
Tests on ODEs |   16     16
 84.701074 seconds (60.52 M allocations: 5.659 GiB, 2.60% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | Pass  Total
ParameterizedFunction Type |    1      1
  5.531753 seconds (2.77 M allocations: 345.875 MiB, 2.07% gc time)
Test Summary: | Pass  Total
Test on Monte |    1      1
 17.837529 seconds (8.16 M allocations: 1007.786 MiB, 3.35% gc time)
elapsed time: 110.24947374 seconds
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Iterators v0.3.1
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.10.1
INFO: Removing OrdinaryDiffEq v2.8.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing PolynomialFactors v0.0.6
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.6.0
INFO: Removing SymEngine v0.2.0

>>> End of log
