>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.6.0
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.15.0
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.14.1
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.6
INFO: Installing LineSearches v2.2.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.11.1
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.6.0
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1752.765625 MB free)
Uptime: 41571.0 sec
Load Avg:  0.9970703125  1.00048828125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2641980 s       5585 s     127739 s     737242 s         19 s
#2  3500 MHz     785494 s         42 s      89120 s    3170680 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
38 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.6.0
 - DiffBase                      0.2.0
 - DiffEqBase                    1.15.0
 - Distributions                 0.14.1
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.6
 - LineSearches                  2.2.1
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.11.1
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.6.0
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.3.2
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.1.0
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.11.0
INFO: Installing OrdinaryDiffEq v2.11.0
INFO: Installing ParameterizedFunctions v2.1.2
INFO: Installing RandomNumbers v0.1.0
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.4.0
INFO: Installing StochasticDiffEq v2.9.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.814245e+03              NaN
 * lambda: 10000.0

     1     2.814242e+03     8.735417e+02
 * g(x): 873.5417478924908
 * lambda: 1000.0
 * dx: [1.76912e-6]

     2     2.814211e+03     8.727717e+02
 * g(x): 872.771728482278
 * lambda: 100.0
 * dx: [1.76754e-5]

     3     2.813905e+03     8.651091e+02
 * g(x): 865.1090708490651
 * lambda: 10.0
 * dx: [0.000175185]

     4     2.810062e+03     8.066215e+02
 * g(x): 806.6215133343715
 * lambda: 1.0
 * dx: [0.00160907]

     5     2.787200e+03     5.297131e+02
 * g(x): 529.7130919015401
 * lambda: 0.1
 * dx: [0.0101469]

     6     2.732681e+03     1.039740e+02
 * g(x): 103.97401416400045
 * lambda: 0.010000000000000002
 * dx: [0.0212894]

     7     2.646103e+03     6.433434e+01
 * g(x): 64.33433686068203
 * lambda: 0.0010000000000000002
 * dx: [0.0284259]

     8     2.532599e+03     7.463837e+01
 * g(x): 74.638370682122
 * lambda: 0.00010000000000000003
 * dx: [0.0341773]

     9     2.398660e+03     1.027661e+02
 * g(x): 102.76606846100563
 * lambda: 1.0000000000000004e-5
 * dx: [0.0379093]

    10     2.250101e+03     1.774432e+02
 * g(x): 177.4431508423369
 * lambda: 1.0000000000000004e-6
 * dx: [0.0403913]

    11     1.988252e+03     1.136073e+02
 * g(x): 113.60728291238567
 * lambda: 1.0000000000000005e-7
 * dx: [0.0485747]

    12     1.483197e+03     2.602542e+02
 * g(x): 260.25424333774856
 * lambda: 1.0000000000000005e-8
 * dx: [0.0637422]

    13     7.609360e+02     8.231343e+02
 * g(x): 823.1342697177032
 * lambda: 1.0000000000000005e-9
 * dx: [0.0760772]

    14     1.181587e+02     8.254419e+02
 * g(x): 825.4419239670326
 * lambda: 1.0000000000000006e-10
 * dx: [0.0869649]

    15     9.518971e-01     1.810937e+02
 * g(x): 181.0937187578291
 * lambda: 1.0000000000000006e-11
 * dx: [0.046041]

    16     3.868040e-02     2.966284e-01
 * g(x): 0.2966284109922044
 * lambda: 1.0000000000000006e-12
 * dx: [0.00450144]

    17     3.867595e-02     9.169305e-07
 * g(x): 9.169304840961345e-7
 * lambda: 1.0000000000000007e-13
 * dx: [9.94933e-6]

    18     3.867595e-02     6.374976e-09
 * g(x): 6.374976213585626e-9
 * lambda: 1.0000000000000007e-13
 * dx: [7.75467e-9]

     0     1.457563e+03              NaN
 * lambda: 10000.0

     1     1.457500e+03     2.842843e+03
 * g(x): 2842.8427606560936
 * lambda: 1000.0
 * dx: [1.06398e-5, 9.32786e-6]

     2     1.456873e+03     2.840060e+03
 * g(x): 2840.0597251656764
 * lambda: 100.0
 * dx: [0.000106288, 9.28658e-5]

     3     1.450656e+03     2.812627e+03
 * g(x): 2812.627395176316
 * lambda: 10.0
 * dx: [0.00105205, 0.000888116]

     4     1.393277e+03     2.573828e+03
 * g(x): 2573.827958215455
 * lambda: 1.0
 * dx: [0.00958633, 0.00548852]

     5     1.073002e+03     1.712419e+03
 * g(x): 1712.4185732360181
 * lambda: 0.1
 * dx: [0.0570564, -0.0450947]

     6     5.081120e+02     1.213104e+03
 * g(x): 1213.1036502019658
 * lambda: 0.010000000000000002
 * dx: [0.136317, -0.164022]

     7     4.235496e+01     2.157035e+02
 * g(x): 215.70348563377345
 * lambda: 0.0010000000000000002
 * dx: [0.0467111, 0.321025]

     8     3.724064e+00     3.199443e+02
 * g(x): 319.94429823516117
 * lambda: 0.00010000000000000003
 * dx: [-0.060038, 0.283339]

     9     3.984729e-02     4.644476e+00
 * g(x): 4.644475794910928
 * lambda: 1.0000000000000004e-5
 * dx: [0.00955348, -0.00302784]

    10     3.866351e-02     2.359978e-02
 * g(x): 0.023599779972152013
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000274914, 0.00114055]

    11     3.866347e-02     6.670962e-07
 * g(x): 6.670961673060916e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.60156e-6, 6.36512e-6]

    12     3.866347e-02     3.249367e-05
 * g(x): 3.249366718272029e-5
 * lambda: 1.0000000000000006e-6
 * dx: [-4.81514e-9, 2.72534e-8]

     0     8.962465e+02              NaN
 * lambda: 10000.0

     1     8.961195e+02     2.414803e+03
 * g(x): 2414.802645489216
 * lambda: 1000.0
 * dx: [1.1885e-5, -9.06997e-7, 4.365e-5, 1.71731e-5]

     2     8.948519e+02     2.410144e+03
 * g(x): 2410.1443175283985
 * lambda: 100.0
 * dx: [0.000118618, -8.73788e-6, 0.00043575, 0.000171357]

     3     8.823881e+02     2.364586e+03
 * g(x): 2364.5855307939655
 * lambda: 10.0
 * dx: [0.00116351, -5.51835e-5, 0.00428417, 0.00167692]

     4     7.763218e+02     1.999907e+03
 * g(x): 1999.9071952768975
 * lambda: 1.0
 * dx: [0.00979398, 0.00187856, 0.0369329, 0.0137391]

     5     3.463341e+02     1.021783e+03
 * g(x): 1021.7827020451907
 * lambda: 0.1
 * dx: [0.0387638, 0.0568126, 0.202067, 0.0332319]

     6     1.774648e+01     1.677543e+02
 * g(x): 167.75425330671334
 * lambda: 0.010000000000000002
 * dx: [0.0431225, 0.0890067, 0.445713, -0.0899181]

     7     2.523922e+00     1.378091e+02
 * g(x): 137.80911714783647
 * lambda: 0.0010000000000000002
 * dx: [0.0426144, 0.01293, -0.097305, -0.0901991]

     8     1.860609e-01     4.995897e+01
 * g(x): 49.958972030004055
 * lambda: 0.00010000000000000003
 * dx: [0.0526286, 0.0360555, -0.162443, -0.0562413]

     9     4.225556e-02     7.366968e+00
 * g(x): 7.36696848462231
 * lambda: 1.0000000000000004e-5
 * dx: [0.00987733, 0.0027425, -0.023263, -0.0101984]

    10     3.860317e-02     3.534529e-02
 * g(x): 0.03534528780095936
 * lambda: 1.0000000000000004e-6
 * dx: [0.0018157, 0.000728847, -0.00609426, -0.00208549]

    11     3.860292e-02     1.408481e-06
 * g(x): 1.4084808465097964e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.87412e-5, 4.7403e-6, -5.40576e-5, -1.96246e-5]

    12     3.860292e-02     4.938013e-09
 * g(x): 4.938013220545656e-9
 * lambda: 1.0000000000000005e-8
 * dx: [1.2088e-7, 7.5496e-8, -3.79665e-7, -1.18908e-7]

    13     3.860292e-02     6.828214e-07
 * g(x): 6.828213851006737e-7
 * lambda: 1.0000000000000005e-7
 * dx: [2.44269e-9, 1.36021e-9, -7.56219e-9, -2.45617e-9]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Tests on ODEs: Test Failed
  Expression: â‰ˆ(minx[1], 1.5, atol=0.01)
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:569
 [2] include(::String) at ./sysimg.jl:14
 [3] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:9 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] anonymous at ./<missing>:?
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Fail  Total
Tests on ODEs |   15     1     16
ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl, in expression starting on line 4
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.3.2
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.1.0
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.11.0
INFO: Removing OrdinaryDiffEq v2.11.0
INFO: Removing ParameterizedFunctions v2.1.2
INFO: Removing RandomNumbers v0.1.0
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.4.0
INFO: Removing StochasticDiffEq v2.9.0
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors

>>> End of log
