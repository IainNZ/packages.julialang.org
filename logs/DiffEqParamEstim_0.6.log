>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.1.0
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Iterators v0.3.1
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.5.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-pre.beta.459
Commit 609b3d1 (2017-05-02 04:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1752.03515625 MB free)
Uptime: 40772.0 sec
Load Avg:  1.0029296875  0.99365234375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz    2649262 s       6769 s     116139 s     695864 s         34 s
#2  3491 MHz     805096 s        131 s      73368 s    3091659 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.10.0
30 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.1.0
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Iterators                     0.3.1
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.5.0
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Downgrading DiffEqBase: v1.1.0 => v0.15.0
INFO: Installing DiffEqMonteCarlo v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Juno v0.2.7
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing Media v0.2.7
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v1.8.0
INFO: Installing ParameterizedFunctions v1.3.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Downgrading RecursiveArrayTools: v0.5.0 => v0.3.0
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.0
INFO: Installing StochasticDiffEq v1.4.0
INFO: Installing SymEngine v0.1.5
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim

WARNING: deprecated syntax "abstract AbstractVectorOfArray{T,N}<:AbstractArray{T,N}" at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/vector_of_array.jl:2.
Use "abstract type AbstractVectorOfArray{T,N}<:AbstractArray{T,N} end" instead.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base..\(...)".
Use "function Base.broadcast(::typeof(Base.\), ...)" instead.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.

WARNING: deprecated syntax "inner constructor ODEIntegrator(...) around /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/type.jl:75".
Use "ODEIntegrator{algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}(...) where {algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}" instead.
Use LM to fit the parameter
     0     2.814843e+03              NaN
 * lambda: 10000.0

     1     2.814840e+03     8.735841e+02
 * g(x): 873.5841163389143
 * lambda: 1000.0
 * dx: [1.7692e-6]

     2     2.814809e+03     8.728108e+02
 * g(x): 872.8108322542571
 * lambda: 100.0
 * dx: [1.76762e-5]

     3     2.814502e+03     8.651512e+02
 * g(x): 865.1511687524346
 * lambda: 10.0
 * dx: [0.000175194]

     4     2.810660e+03     8.066462e+02
 * g(x): 806.6461691715463
 * lambda: 1.0
 * dx: [0.00160912]

     5     2.787810e+03     5.296506e+02
 * g(x): 529.6506066868942
 * lambda: 0.1
 * dx: [0.0101458]

     6     2.733413e+03     1.038742e+02
 * g(x): 103.8742038364357
 * lambda: 0.010000000000000002
 * dx: [0.0212727]

     7     2.647226e+03     6.408787e+01
 * g(x): 64.08787009294383
 * lambda: 0.0010000000000000002
 * dx: [0.0283691]

     8     2.534418e+03     7.430705e+01
 * g(x): 74.30704551696071
 * lambda: 0.00010000000000000003
 * dx: [0.0340772]

     9     2.401732e+03     8.776416e+01
 * g(x): 87.76416146404023
 * lambda: 1.0000000000000004e-5
 * dx: [0.0376603]

    10     2.255558e+03     2.012799e+02
 * g(x): 201.27993275445814
 * lambda: 1.0000000000000004e-6
 * dx: [0.0398434]

    11     1.997685e+03     1.156427e+02
 * g(x): 115.64267608718103
 * lambda: 1.0000000000000005e-7
 * dx: [0.0482891]

    12     1.493567e+03     2.606571e+02
 * g(x): 260.65712189097934
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638987]

    13     7.728653e+02     8.166925e+02
 * g(x): 816.6924889096484
 * lambda: 1.0000000000000005e-9
 * dx: [0.0758619]

    14     1.225241e+02     8.037790e+02
 * g(x): 803.7790184826026
 * lambda: 1.0000000000000006e-10
 * dx: [0.0873475]

    15     1.032563e+00     1.898442e+02
 * g(x): 189.8442041706213
 * lambda: 1.0000000000000006e-11
 * dx: [0.0467511]

    16     4.020700e-02     3.273316e-01
 * g(x): 0.32733158608745094
 * lambda: 1.0000000000000006e-12
 * dx: [0.00469437]

    17     4.020559e-02     2.388555e-07
 * g(x): 2.3885545874513525e-7
 * lambda: 1.0000000000000007e-13
 * dx: [5.62139e-6]

    18     4.020559e-02     3.623156e-08
 * g(x): 3.623155753196272e-8
 * lambda: 1.0000000000000008e-14
 * dx: [-1.86964e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] â‰ˆ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] â‰ˆ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.458292e+03              NaN
 * lambda: 10000.0

     1     1.458229e+03     2.845847e+03
 * g(x): 2845.846617186161
 * lambda: 1000.0
 * dx: [1.0651e-5, 9.36393e-6]

     2     1.457600e+03     2.843058e+03
 * g(x): 2843.057963156849
 * lambda: 100.0
 * dx: [0.0001064, 9.32257e-5]

     3     1.451369e+03     2.815588e+03
 * g(x): 2815.588073991012
 * lambda: 10.0
 * dx: [0.00105315, 0.000891639]

     4     1.393863e+03     2.576446e+03
 * g(x): 2576.445757366744
 * lambda: 1.0
 * dx: [0.00959598, 0.00551704]

     5     1.072985e+03     1.713921e+03
 * g(x): 1713.9206720581356
 * lambda: 0.1
 * dx: [0.057099, -0.0450036]

     6     5.073236e+02     1.213883e+03
 * g(x): 1213.8827956753166
 * lambda: 0.010000000000000002
 * dx: [0.136332, -0.163702]

     7     4.129879e+01     2.145682e+02
 * g(x): 214.56822678031472
 * lambda: 0.0010000000000000002
 * dx: [0.0457898, 0.324348]

     8     3.291143e+00     3.013179e+02
 * g(x): 301.31785944502417
 * lambda: 0.00010000000000000003
 * dx: [-0.0586629, 0.279451]

     9     4.149184e-02     2.753251e+00
 * g(x): 2.7532505892829695
 * lambda: 1.0000000000000004e-5
 * dx: [0.00898123, -0.00302218]

    10     4.020557e-02     3.661068e-02
 * g(x): 0.03661067974245802
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000283318, 0.00141324]

    11     4.020553e-02     5.050720e-07
 * g(x): 5.050720354171645e-7
 * lambda: 1.0000000000000005e-7
 * dx: [1.82443e-7, -6.11112e-6]

    12     4.020553e-02     1.369976e-05
 * g(x): 1.3699762370478208e-5
 * lambda: 1.0000000000000006e-6
 * dx: [-3.80337e-9, 2.55561e-8]

WARNING: @test_approx_eq_eps is deprecated, use `@test param â‰ˆ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5; 3.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 104
Use LM to fit the parameter
     0     8.965917e+02              NaN
 * lambda: 10000.0

     1     8.964645e+02     2.416355e+03
 * g(x): 2416.3552835668515
 * lambda: 1000.0
 * dx: [1.18926e-5, -9.25819e-7, 4.36962e-5, 1.71741e-5]

     2     8.951952e+02     2.411696e+03
 * g(x): 2411.695861837852
 * lambda: 100.0
 * dx: [0.000118694, -8.92564e-6, 0.000436212, 0.000171367]

     3     8.827147e+02     2.366101e+03
 * g(x): 2366.1006481360455
 * lambda: 10.0
 * dx: [0.00116426, -5.70305e-5, 0.00428871, 0.001677]

     4     7.765166e+02     2.001108e+03
 * g(x): 2001.1084175142666
 * lambda: 1.0
 * dx: [0.00979979, 0.00186412, 0.0369722, 0.0137382]

     5     3.462014e+02     1.022167e+03
 * g(x): 1022.1670295498973
 * lambda: 0.1
 * dx: [0.0387725, 0.0567587, 0.20228, 0.0331872]

     6     1.744864e+01     1.631311e+02
 * g(x): 163.131111730479
 * lambda: 0.010000000000000002
 * dx: [0.0431633, 0.0884539, 0.444452, -0.0907738]

     7     2.560806e+00     1.377593e+02
 * g(x): 137.7592901136915
 * lambda: 0.0010000000000000002
 * dx: [0.0431412, 0.0137212, -0.0983, -0.0900759]

     8     1.942386e-01     5.543176e+01
 * g(x): 55.43175654540618
 * lambda: 0.00010000000000000003
 * dx: [0.0531448, 0.0363497, -0.163962, -0.0568176]

     9     4.295871e-02     7.350396e+00
 * g(x): 7.350395771706871
 * lambda: 1.0000000000000004e-5
 * dx: [0.0100632, 0.00291582, -0.023575, -0.0102781]

    10     3.978077e-02     1.508906e-02
 * g(x): 0.015089061864071718
 * lambda: 1.0000000000000004e-6
 * dx: [0.00156878, 0.000550597, -0.00529562, -0.0018486]

    11     3.978064e-02     4.595929e-06
 * g(x): 4.595928928208259e-6
 * lambda: 1.0000000000000005e-7
 * dx: [-5.28099e-6, -9.47929e-6, 1.95265e-5, 3.5436e-6]

    12     3.978064e-02     7.666016e-08
 * g(x): 7.666015888752042e-8
 * lambda: 1.0000000000000005e-8
 * dx: [8.319e-8, 5.0582e-8, -2.63819e-7, -8.21881e-8]

    13     3.978064e-02     4.285951e-07
 * g(x): 4.285950921389947e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-5.61581e-10, -3.85258e-11, 2.09087e-9, 5.18762e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param â‰ˆ [1.5; 1.0; 3.0; 1.0] atol=0.01` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 131
Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5; 1.0; 3.0; 1.0] atol=0.5` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 137
Test Summary: |
Tests on ODEs | No tests
 55.431830 seconds (31.30 M allocations: 2.831 GiB, 2.09% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:4 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/parameterized_function_type.jl, in expression starting on line 25
Test Summary:              |
ParameterizedFunction Type | No tests
  4.133490 seconds (1.84 M allocations: 256.694 MiB, 1.41% gc time)
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer â‰ˆ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 25
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:15
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:856 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:552
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:32
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:856 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:552
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:33
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:856 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:552
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
Test Summary: |
Test on Monte | No tests
 23.065656 seconds (9.76 M allocations: 938.484 MiB, 1.39% gc time)
INFO: DiffEqParamEstim tests passed
INFO: Upgrading DiffEqBase: v0.15.0 => v1.1.0
INFO: Upgrading RecursiveArrayTools: v0.3.0 => v0.5.0
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Juno v0.2.7
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing Media v0.2.7
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v1.8.0
INFO: Removing ParameterizedFunctions v1.3.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.0
INFO: Removing StochasticDiffEq v1.4.0
INFO: Removing SymEngine v0.1.5

>>> End of log
