>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.6.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1751.33203125 MB free)
Uptime: 42822.0 sec
Load Avg:  0.99609375  0.9853515625  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2788600 s       7958 s     137434 s     721049 s         33 s
#2  3500 MHz     798561 s        160 s      78534 s    3318929 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.12.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.6.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.5.0
INFO: Installing DiffEqNoiseProcess v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing InplaceOps v0.1.0
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.3.1
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.816047e+03              NaN
 * lambda: 10000.0

     1     2.816044e+03     8.763413e+02
 * g(x): 876.3413441020613
 * lambda: 1000.0
 * dx: [1.77479e-6]

     2     2.816013e+03     8.755669e+02
 * g(x): 875.5669318814683
 * lambda: 100.0
 * dx: [1.7732e-5]

     3     2.815704e+03     8.678812e+02
 * g(x): 867.8812465174298
 * lambda: 10.0
 * dx: [0.000175747]

     4     2.811838e+03     8.091591e+02
 * g(x): 809.1591210187289
 * lambda: 1.0
 * dx: [0.00161421]

     5     2.788850e+03     5.312447e+02
 * g(x): 531.2446759335926
 * lambda: 0.1
 * dx: [0.0101746]

     6     2.734034e+03     1.041314e+02
 * g(x): 104.13137173766239
 * lambda: 0.010000000000000002
 * dx: [0.0213407]

     7     2.647002e+03     6.461129e+01
 * g(x): 64.61129292925055
 * lambda: 0.0010000000000000002
 * dx: [0.0285087]

     8     2.533012e+03     7.470621e+01
 * g(x): 74.7062128544907
 * lambda: 0.00010000000000000003
 * dx: [0.0342478]

     9     2.397921e+03     1.252132e+02
 * g(x): 125.21317537311404
 * lambda: 1.0000000000000004e-5
 * dx: [0.038147]

    10     2.245169e+03     9.942597e+01
 * g(x): 99.42596926263649
 * lambda: 1.0000000000000004e-6
 * dx: [0.0412286]

    11     1.975464e+03     1.124187e+02
 * g(x): 112.41874603267647
 * lambda: 1.0000000000000005e-7
 * dx: [0.049183]

    12     1.467010e+03     2.487365e+02
 * g(x): 248.73648169599372
 * lambda: 1.0000000000000005e-8
 * dx: [0.0635597]

    13     7.407470e+02     8.364413e+02
 * g(x): 836.4413090063983
 * lambda: 1.0000000000000005e-9
 * dx: [0.0765129]

    14     1.151480e+02     8.887976e+02
 * g(x): 888.7976388726122
 * lambda: 1.0000000000000006e-10
 * dx: [0.0854013]

    15     8.820576e-01     1.753767e+02
 * g(x): 175.3766877004216
 * lambda: 1.0000000000000006e-11
 * dx: [0.0455586]

    16     4.092455e-02     2.698948e-01
 * g(x): 0.26989475764099535
 * lambda: 1.0000000000000006e-12
 * dx: [0.00432195]

    17     4.092283e-02     3.277649e-07
 * g(x): 3.277649269772809e-7
 * lambda: 1.0000000000000007e-13
 * dx: [6.1949e-6]

    18     4.092283e-02     4.926475e-08
 * g(x): 4.926475172251088e-8
 * lambda: 1.0000000000000008e-14
 * dx: [1.25155e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] ≈ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.457824e+03              NaN
 * lambda: 10000.0

     1     1.457761e+03     2.846141e+03
 * g(x): 2846.1411900311587
 * lambda: 1000.0
 * dx: [1.06521e-5, 9.42108e-6]

     2     1.457132e+03     2.843351e+03
 * g(x): 2843.351401295326
 * lambda: 100.0
 * dx: [0.000106411, 9.37967e-5]

     3     1.450897e+03     2.815853e+03
 * g(x): 2815.8530256236936
 * lambda: 10.0
 * dx: [0.00105325, 0.000897263]

     4     1.393367e+03     2.576485e+03
 * g(x): 2576.4851163344847
 * lambda: 1.0
 * dx: [0.00959602, 0.00556653]

     5     1.072561e+03     1.713004e+03
 * g(x): 1713.0037186372574
 * lambda: 0.1
 * dx: [0.0570693, -0.0447124]

     6     5.074157e+02     1.212788e+03
 * g(x): 1212.788108009544
 * lambda: 0.010000000000000002
 * dx: [0.136144, -0.163267]

     7     3.971514e+01     2.130343e+02
 * g(x): 213.03427408562405
 * lambda: 0.0010000000000000002
 * dx: [0.0442401, 0.329939]

     8     2.355911e+00     2.568286e+02
 * g(x): 256.82856558822476
 * lambda: 0.00010000000000000003
 * dx: [-0.0557662, 0.274338]

     9     4.123509e-02     4.862893e+00
 * g(x): 4.8628927469013234
 * lambda: 1.0000000000000004e-5
 * dx: [0.00761301, -0.002588]

    10     4.052894e-02     3.877357e-03
 * g(x): 0.003877357296737216
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000196425, 0.000587258]

    11     4.052894e-02     2.272289e-08
 * g(x): 2.2722886239279205e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-2.42071e-7, 6.95013e-7]

    12     4.052894e-02     2.932288e-06
 * g(x): 2.932288220347523e-6
 * lambda: 1.0000000000000006e-6
 * dx: [-9.15278e-11, 1.7348e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 3.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 104
Use LM to fit the parameter
     0     8.968046e+02              NaN
 * lambda: 10000.0

     1     8.966777e+02     2.414229e+03
 * g(x): 2414.22899629723
 * lambda: 1000.0
 * dx: [1.18821e-5, -9.09084e-7, 4.3701e-5, 1.71393e-5]

     2     8.954103e+02     2.409569e+03
 * g(x): 2409.56903022034
 * lambda: 100.0
 * dx: [0.000118589, -8.75859e-6, 0.000436257, 0.000171019]

     3     8.829492e+02     2.364013e+03
 * g(x): 2364.0134173073793
 * lambda: 10.0
 * dx: [0.00116323, -5.53578e-5, 0.00428919, 0.00167357]

     4     7.769106e+02     1.999339e+03
 * g(x): 1999.3393497452048
 * lambda: 1.0
 * dx: [0.0097911, 0.00187835, 0.036978, 0.0137081]

     5     3.467664e+02     1.020879e+03
 * g(x): 1020.8792513945873
 * lambda: 0.1
 * dx: [0.0387353, 0.0568407, 0.202411, 0.0330471]

     6     1.695926e+01     1.575757e+02
 * g(x): 157.57568510441183
 * lambda: 0.010000000000000002
 * dx: [0.0432408, 0.0882985, 0.443315, -0.0915696]

     7     2.508524e+00     1.346338e+02
 * g(x): 134.6338402186454
 * lambda: 0.0010000000000000002
 * dx: [0.0431654, 0.0141349, -0.0968294, -0.0892305]

     8     1.868592e-01     5.063857e+01
 * g(x): 50.63857051373817
 * lambda: 0.00010000000000000003
 * dx: [0.0526261, 0.0361914, -0.162334, -0.0562617]

     9     4.360184e-02     7.503059e+00
 * g(x): 7.503058821437861
 * lambda: 1.0000000000000004e-5
 * dx: [0.00992841, 0.00282956, -0.023394, -0.0102061]

    10     4.023843e-02     2.890113e-02
 * g(x): 0.028901134994020028
 * lambda: 1.0000000000000004e-6
 * dx: [0.0016362, 0.000596248, -0.0055248, -0.00191454]

    11     4.023836e-02     2.633703e-07
 * g(x): 2.6337030412104667e-7
 * lambda: 1.0000000000000005e-7
 * dx: [2.37349e-6, -3.66263e-6, -3.18722e-6, -3.20854e-6]

    12     4.023836e-02     8.363797e-06
 * g(x): 8.36379729429737e-6
 * lambda: 1.0000000000000006e-6
 * dx: [-1.5239e-9, -7.91157e-10, 5.51606e-9, 1.68931e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 1.0; 3.0; 1.0] atol=0.01` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 131
Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 1.0; 3.0; 1.0] atol=0.5` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 137
Test Summary: |
Tests on ODEs | No tests
 51.136179 seconds (32.96 M allocations: 2.927 GiB, 2.60% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:4 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/parameterized_function_type.jl, in expression starting on line 25
Test Summary:              |
ParameterizedFunction Type | No tests
  5.266128 seconds (1.90 M allocations: 256.679 MiB, 1.30% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: no method matching DiffEqBase.MonteCarloProblem(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.##160#162{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}},Void,UniformScaling{Int64}}, ::DiffEqBase.##138#144, ::DiffEqBase.##137#143)
  Closest candidates are:
    DiffEqBase.MonteCarloProblem(::T, ::T2, ::T3, !Matched::T4, !Matched::T5) where {T, T2, T3, T4, T5} at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/monte_problems.jl:2
    DiffEqBase.MonteCarloProblem(::DiffEqBase.DEProblem; output_func, prob_func, reduction, u_init) at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/monte_problems.jl:9
  Stacktrace:
   [1] problem_new_parameters(::DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DiffEqBase/src/parameters_interface.jl:86
   [2] (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DiffEqParamEstim/src/build_loss_objective.jl:25
   [3] finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.6/Calculus/src/finite_difference.jl:126
   [4] g! at /home/vagrant/.julia/v0.6/Optim/src/types.jl:192 [inlined]
   [5] (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/types.jl:196
   [6] initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/bfgs.jl:38
   [7] optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:172
   [8] optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:116
   [9] optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:165
   [10] include_from_node1(::String) at ./loading.jl:552
   [11] include(::String) at ./sysimg.jl:14
   [12] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   [13] macro expansion at ./test.jl:856 [inlined]
   [14] macro expansion at ./util.jl:237 [inlined]
   [15] anonymous at ./<missing>:?
   [16] include_from_node1(::String) at ./loading.jl:552
   [17] include(::String) at ./sysimg.jl:14
   [18] process_options(::Base.JLOptions) at ./client.jl:305
   [19] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.5.0
INFO: Removing DiffEqNoiseProcess v0.1.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing InplaceOps v0.1.0
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.3.1
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors

>>> End of log
