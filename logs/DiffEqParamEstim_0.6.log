>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing AbstractFFTs v0.1.0
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.14.1
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.14.0
INFO: Installing FFTW v0.0.2
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v2.2.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.11.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building FFTW
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1761.69921875 MB free)
Uptime: 46266.0 sec
Load Avg:  0.9423828125  0.96923828125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2901641 s       5823 s     148539 s     930190 s         50 s
#2  3499 MHz    1033432 s       1328 s      83654 s    3399270 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
40 additional packages:
 - AbstractFFTs                  0.1.0
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.14.1
 - Distributions                 0.14.0
 - FFTW                          0.0.2
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.5
 - LineSearches                  2.2.1
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.11.0
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.3.2
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.1.0
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.11.0
INFO: Installing OrdinaryDiffEq v2.9.0
INFO: Installing ParameterizedFunctions v2.1.1
INFO: Installing RandomNumbers v0.1.0
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.4.0
INFO: Installing StochasticDiffEq v2.7.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.813695e+03              NaN
 * lambda: 10000.0

     1     2.813692e+03     8.741978e+02
 * g(x): 874.197815016516
 * lambda: 1000.0
 * dx: [1.77045e-6]

     2     2.813661e+03     8.734234e+02
 * g(x): 873.4234283219645
 * lambda: 100.0
 * dx: [1.76886e-5]

     3     2.813354e+03     8.657631e+02
 * g(x): 865.763142275197
 * lambda: 10.0
 * dx: [0.000175317]

     4     2.809506e+03     8.072096e+02
 * g(x): 807.2095628162838
 * lambda: 1.0
 * dx: [0.00161026]

     5     2.786618e+03     5.300749e+02
 * g(x): 530.074879930885
 * lambda: 0.1
 * dx: [0.0101534]

     6     2.732115e+03     1.039410e+02
 * g(x): 103.9409988431373
 * lambda: 0.010000000000000002
 * dx: [0.0212904]

     7     2.645749e+03     6.420651e+01
 * g(x): 64.20650867764388
 * lambda: 0.0010000000000000002
 * dx: [0.0284017]

     8     2.532790e+03     7.436654e+01
 * g(x): 74.36653951468006
 * lambda: 0.00010000000000000003
 * dx: [0.0341032]

     9     2.399734e+03     9.475060e+01
 * g(x): 94.75059886849331
 * lambda: 1.0000000000000004e-5
 * dx: [0.0377468]

    10     2.252918e+03     1.974205e+02
 * g(x): 197.42046708805154
 * lambda: 1.0000000000000004e-6
 * dx: [0.0399978]

    11     1.993843e+03     1.148950e+02
 * g(x): 114.89497167491184
 * lambda: 1.0000000000000005e-7
 * dx: [0.048376]

    12     1.489685e+03     2.608050e+02
 * g(x): 260.8050349389649
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638349]

    13     7.688604e+02     8.183849e+02
 * g(x): 818.3849314109965
 * lambda: 1.0000000000000005e-9
 * dx: [0.0759173]

    14     1.215553e+02     8.097191e+02
 * g(x): 809.7190995842278
 * lambda: 1.0000000000000006e-10
 * dx: [0.0871384]

    15     1.019310e+00     1.878734e+02
 * g(x): 187.87343259448622
 * lambda: 1.0000000000000006e-11
 * dx: [0.0465915]

    16     4.439130e-02     3.205368e-01
 * g(x): 0.3205368333269789
 * lambda: 1.0000000000000006e-12
 * dx: [0.00465245]

    17     4.438929e-02     4.532149e-07
 * g(x): 4.5321485264704364e-7
 * lambda: 1.0000000000000007e-13
 * dx: [6.69238e-6]

    18     4.438929e-02     2.360989e-05
 * g(x): 2.3609886699804683e-5
 * lambda: 1.0000000000000006e-12
 * dx: [-5.26653e-10]

     0     1.457510e+03              NaN
 * lambda: 10000.0

     1     1.457447e+03     2.843418e+03
 * g(x): 2843.4175949958244
 * lambda: 1000.0
 * dx: [1.06419e-5, 9.34523e-6]

     2     1.456819e+03     2.840633e+03
 * g(x): 2840.633352723102
 * lambda: 100.0
 * dx: [0.000106309, 9.30392e-5]

     3     1.450599e+03     2.813188e+03
 * g(x): 2813.188292255502
 * lambda: 10.0
 * dx: [0.00105226, 0.000889818]

     4     1.393194e+03     2.574285e+03
 * g(x): 2574.285355334613
 * lambda: 1.0
 * dx: [0.009588, 0.00550274]

     5     1.072822e+03     1.712510e+03
 * g(x): 1712.5099890050724
 * lambda: 0.1
 * dx: [0.0570584, -0.0450212]

     6     5.078242e+02     1.212805e+03
 * g(x): 1212.8051488511649
 * lambda: 0.010000000000000002
 * dx: [0.136265, -0.163742]

     7     4.145207e+01     2.147711e+02
 * g(x): 214.77110416129284
 * lambda: 0.0010000000000000002
 * dx: [0.0459279, 0.323828]

     8     3.317122e+00     3.027739e+02
 * g(x): 302.7738542726021
 * lambda: 0.00010000000000000003
 * dx: [-0.0587109, 0.279983]

     9     4.557035e-02     2.694924e+00
 * g(x): 2.69492397459425
 * lambda: 1.0000000000000004e-5
 * dx: [0.00899107, -0.00290319]

    10     4.438927e-02     3.310466e-02
 * g(x): 0.033104661412597935
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000270979, 0.00135039]

    11     4.438924e-02     3.667478e-08
 * g(x): 3.667477999069746e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-9.86578e-7, 1.32437e-6]

    12     4.438924e-02     4.722673e-08
 * g(x): 4.722673196955185e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-5.21313e-10, 3.56735e-9]

     0     8.964162e+02              NaN
 * lambda: 10000.0

     1     8.962892e+02     2.414799e+03
 * g(x): 2414.799102424765
 * lambda: 1000.0
 * dx: [1.18849e-5, -8.66743e-7, 4.36706e-5, 1.7174e-5]

     2     8.950211e+02     2.410144e+03
 * g(x): 2410.1438926588908
 * lambda: 100.0
 * dx: [0.000118618, -8.33572e-6, 0.000435956, 0.000171365]

     3     8.825533e+02     2.364586e+03
 * g(x): 2364.5856700458394
 * lambda: 10.0
 * dx: [0.00116352, -5.12293e-5, 0.00428623, 0.00167701]

     4     7.764475e+02     1.999942e+03
 * g(x): 1999.9420775771016
 * lambda: 1.0
 * dx: [0.00979412, 0.00191532, 0.036954, 0.0137397]

     5     3.462699e+02     1.022112e+03
 * g(x): 1022.1117359736982
 * lambda: 0.1
 * dx: [0.0387654, 0.0570134, 0.20221, 0.0332381]

     6     1.770622e+01     1.665521e+02
 * g(x): 166.55207403662828
 * lambda: 0.010000000000000002
 * dx: [0.0431241, 0.0891499, 0.445605, -0.0900772]

     7     2.526902e+00     1.386745e+02
 * g(x): 138.67450402979745
 * lambda: 0.0010000000000000002
 * dx: [0.0428576, 0.0131086, -0.0983345, -0.090371]

     8     1.931472e-01     5.260598e+01
 * g(x): 52.60598466102094
 * lambda: 0.00010000000000000003
 * dx: [0.0527258, 0.0360955, -0.162566, -0.0563757]

     9     4.705426e-02     7.722406e+00
 * g(x): 7.722406469546899
 * lambda: 1.0000000000000004e-5
 * dx: [0.0100661, 0.00298034, -0.0237396, -0.010287]

    10     4.391463e-02     2.109307e-02
 * g(x): 0.02109306582898146
 * lambda: 1.0000000000000004e-6
 * dx: [0.00139016, 0.00040407, -0.00476684, -0.00168998]

    11     4.391453e-02     3.245954e-06
 * g(x): 3.2459538265583454e-6
 * lambda: 1.0000000000000005e-7
 * dx: [-6.23605e-6, -7.72502e-6, 2.39076e-5, 5.65322e-6]

    12     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 1.0000000000000006e-6
 * dx: [1.03188e-7, 6.20994e-8, -3.30243e-7, -1.01824e-7]

    13     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 1.0000000000000006e-5
 * dx: [1.03174e-7, 6.20898e-8, -3.302e-7, -1.01809e-7]

    14     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 0.00010000000000000006
 * dx: [1.03026e-7, 6.19941e-8, -3.29771e-7, -1.01654e-7]

    15     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 0.0010000000000000007
 * dx: [1.01572e-7, 6.10519e-8, -3.25555e-7, -1.00128e-7]

    16     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 0.010000000000000007
 * dx: [8.90061e-8, 5.29091e-8, -2.891e-7, -8.69405e-8]

    17     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 0.10000000000000007
 * dx: [3.96549e-8, 2.10172e-8, -1.45663e-7, -3.52154e-8]

    18     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 1.0000000000000007
 * dx: [5.76326e-9, 2.07237e-10, -4.36433e-8, -5.53524e-10]

    19     4.391453e-02     3.616975e-05
 * g(x): 3.61697510352782e-5
 * lambda: 10.000000000000007
 * dx: [3.52014e-10, 2.02317e-11, -1.35797e-8, 1.71244e-9]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Total
Tests on ODEs |   16     16
 90.183319 seconds (78.35 M allocations: 8.848 GiB, 2.74% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | Pass  Total
ParameterizedFunction Type |    1      1
  6.419599 seconds (3.41 M allocations: 605.449 MiB, 2.33% gc time)
Test Summary: | Pass  Total
Test on Monte |    1      1
 17.768923 seconds (10.54 M allocations: 1.896 GiB, 4.10% gc time)
elapsed time: 116.464704006 seconds
INFO: DiffEqParamEstim tests passed
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.3.2
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.1.0
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.11.0
INFO: Removing OrdinaryDiffEq v2.9.0
INFO: Removing ParameterizedFunctions v2.1.1
INFO: Removing RandomNumbers v0.1.0
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.4.0
INFO: Removing StochasticDiffEq v2.7.1
INFO: Removing SymEngine v0.2.0

>>> End of log
