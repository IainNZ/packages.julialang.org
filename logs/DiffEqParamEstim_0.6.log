>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v0.15.0
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Iterators v0.3.1
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.3.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-pre.beta.353
Commit 0929951 (2017-04-26 22:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1807.14453125 MB free)
Uptime: 39002.0 sec
Load Avg:  0.9970703125  0.9970703125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2584280 s       6466 s     114993 s     600262 s         27 s
#2  3500 MHz     724457 s         95 s      70126 s    3014085 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.9.1
30 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    0.15.0
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Iterators                     0.3.1
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.3.0
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Juno v0.2.7
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing Media v0.2.7
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v1.8.0
INFO: Installing ParameterizedFunctions v1.3.0
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.0
INFO: Installing StochasticDiffEq v1.4.0
INFO: Installing SymEngine v0.1.5
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
WARNING: Method definition (::Type{RecursiveArrayTools.ArrayPartition{T} where T})(Any) in module RecursiveArrayTools at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:2 overwritten at /home/vagrant/.julia/v0.6/RecursiveArrayTools/src/array_partition.jl:6.
Use LM to fit the parameter
     0     2.814533e+03              NaN
 * lambda: 10000.0

     1     2.814530e+03     8.771052e+02
 * g(x): 877.1052205468652
 * lambda: 1000.0
 * dx: [1.77633e-6]

     2     2.814499e+03     8.763328e+02
 * g(x): 876.3327620953467
 * lambda: 100.0
 * dx: [1.77475e-5]

     3     2.814190e+03     8.686385e+02
 * g(x): 868.6385447869528
 * lambda: 10.0
 * dx: [0.0001759]

     4     2.810323e+03     8.098594e+02
 * g(x): 809.859437910645
 * lambda: 1.0
 * dx: [0.00161563]

     5     2.787310e+03     5.315515e+02
 * g(x): 531.5514624499343
 * lambda: 0.1
 * dx: [0.0101801]

     6     2.732472e+03     1.041286e+02
 * g(x): 104.12864316327003
 * lambda: 0.010000000000000002
 * dx: [0.0213458]

     7     2.645459e+03     6.459531e+01
 * g(x): 64.59530914888009
 * lambda: 0.0010000000000000002
 * dx: [0.028509]

     8     2.531618e+03     7.463720e+01
 * g(x): 74.63719752402447
 * lambda: 0.00010000000000000003
 * dx: [0.0342324]

     9     2.396906e+03     1.246466e+02
 * g(x): 124.64662983184205
 * lambda: 1.0000000000000004e-5
 * dx: [0.0381023]

    10     2.245046e+03     1.075285e+02
 * g(x): 107.52850763155986
 * lambda: 1.0000000000000004e-6
 * dx: [0.0411027]

    11     1.977218e+03     1.120128e+02
 * g(x): 112.01277798758535
 * lambda: 1.0000000000000005e-7
 * dx: [0.049021]

    12     1.469705e+03     2.517730e+02
 * g(x): 251.77299509037798
 * lambda: 1.0000000000000005e-8
 * dx: [0.0635593]

    13     7.435764e+02     8.347966e+02
 * g(x): 834.7966380289582
 * lambda: 1.0000000000000005e-9
 * dx: [0.0764616]

    14     1.151232e+02     8.784741e+02
 * g(x): 878.4740817672191
 * lambda: 1.0000000000000006e-10
 * dx: [0.0856963]

    15     8.789010e-01     1.754561e+02
 * g(x): 175.45614049801398
 * lambda: 1.0000000000000006e-11
 * dx: [0.0455509]

    16     4.121146e-02     2.689732e-01
 * g(x): 0.2689732215701457
 * lambda: 1.0000000000000006e-12
 * dx: [0.00431369]

    17     4.121049e-02     2.323090e-07
 * g(x): 2.32308955627758e-7
 * lambda: 1.0000000000000007e-13
 * dx: [4.65516e-6]

    18     4.121049e-02     6.399829e-05
 * g(x): 6.399828648717687e-5
 * lambda: 1.0000000000000006e-12
 * dx: [-1.42743e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] ≈ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.457300e+03              NaN
 * lambda: 10000.0

     1     1.457237e+03     2.845037e+03
 * g(x): 2845.036877167712
 * lambda: 1000.0
 * dx: [1.0648e-5, 9.38732e-6]

     2     1.456608e+03     2.842249e+03
 * g(x): 2842.248936266604
 * lambda: 100.0
 * dx: [0.00010637, 9.34594e-5]

     3     1.450379e+03     2.814779e+03
 * g(x): 2814.778743671468
 * lambda: 10.0
 * dx: [0.00105285, 0.000893949]

     4     1.392897e+03     2.575633e+03
 * g(x): 2575.633267427025
 * lambda: 1.0
 * dx: [0.00959292, 0.00553833]

     5     1.072153e+03     1.713003e+03
 * g(x): 1713.0026387536016
 * lambda: 0.1
 * dx: [0.0570712, -0.0448461]

     6     5.066739e+02     1.213334e+03
 * g(x): 1213.333826395115
 * lambda: 0.010000000000000002
 * dx: [0.136231, -0.163401]

     7     4.019444e+01     2.132499e+02
 * g(x): 213.2498714610069
 * lambda: 0.0010000000000000002
 * dx: [0.0447277, 0.328046]

     8     2.630075e+00     2.703132e+02
 * g(x): 270.31323984196626
 * lambda: 0.00010000000000000003
 * dx: [-0.0568068, 0.276082]

     9     4.184541e-02     3.146721e+00
 * g(x): 3.1467207862232094
 * lambda: 1.0000000000000004e-5
 * dx: [0.00806802, -0.00299947]

    10     4.115388e-02     1.246968e-02
 * g(x): 0.012469676445320044
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000211756, 0.000911291]

    11     4.115388e-02     2.757444e-08
 * g(x): 2.757444450551816e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-2.93655e-7, 1.08205e-7]

    12     4.115388e-02     3.091123e-09
 * g(x): 3.091123357279457e-9
 * lambda: 1.0000000000000005e-8
 * dx: [6.99627e-12, 1.69907e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 3.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 104
Use LM to fit the parameter
     0     8.960981e+02              NaN
 * lambda: 10000.0

     1     8.959710e+02     2.415055e+03
 * g(x): 2415.0548275263895
 * lambda: 1000.0
 * dx: [1.18862e-5, -9.00546e-7, 4.37028e-5, 1.71537e-5]

     2     8.947028e+02     2.410396e+03
 * g(x): 2410.3960829522885
 * lambda: 100.0
 * dx: [0.00011863, -8.67325e-6, 0.000436277, 0.000171162]

     3     8.822333e+02     2.364826e+03
 * g(x): 2364.82641924385
 * lambda: 10.0
 * dx: [0.00116363, -5.44945e-5, 0.00428937, 0.00167499]

     4     7.761225e+02     2.000057e+03
 * g(x): 2000.0573551479183
 * lambda: 1.0
 * dx: [0.00979462, 0.00188631, 0.0369802, 0.0137205]

     5     3.460190e+02     1.021494e+03
 * g(x): 1021.4944800806132
 * lambda: 0.1
 * dx: [0.0387522, 0.0568861, 0.202402, 0.0330944]

     6     1.704074e+01     1.591968e+02
 * g(x): 159.19681868817452
 * lambda: 0.010000000000000002
 * dx: [0.0431832, 0.0884207, 0.443533, -0.0914102]

     7     2.513843e+00     1.348498e+02
 * g(x): 134.84975730952087
 * lambda: 0.0010000000000000002
 * dx: [0.0429758, 0.0139234, -0.096912, -0.0892231]

     8     1.905287e-01     5.224355e+01
 * g(x): 52.24355077511384
 * lambda: 0.00010000000000000003
 * dx: [0.052758, 0.0362167, -0.16286, -0.056433]

     9     4.422533e-02     7.346118e+00
 * g(x): 7.34611769352395
 * lambda: 1.0000000000000004e-5
 * dx: [0.00990869, 0.00280544, -0.0232778, -0.0101766]

    10     4.086194e-02     2.105736e-02
 * g(x): 0.021057359769126816
 * lambda: 1.0000000000000004e-6
 * dx: [0.00167086, 0.000627413, -0.00563193, -0.00194383]

    11     4.086183e-02     6.503451e-07
 * g(x): 6.503451053241349e-7
 * lambda: 1.0000000000000005e-7
 * dx: [6.21136e-7, -5.85152e-6, 2.92315e-6, -1.95088e-6]

    12     4.086183e-02     7.415077e-08
 * g(x): 7.415077263317471e-8
 * lambda: 1.0000000000000005e-8
 * dx: [2.43042e-8, 1.53206e-8, -7.75369e-8, -2.39401e-8]

    13     4.086183e-02     1.328010e-07
 * g(x): 1.3280097155288217e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-3.93007e-10, -2.75406e-10, 1.17118e-9, 3.9869e-10]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 1.0; 3.0; 1.0] atol=0.01` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 131
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 1.0; 3.0; 1.0] atol=0.5` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 137
Test Summary: |
Tests on ODEs | No tests
 44.419224 seconds (32.51 M allocations: 2.940 GiB, 2.49% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:4 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/parameterized_function_type.jl, in expression starting on line 25
Test Summary:              |
ParameterizedFunction Type | No tests
  5.195290 seconds (1.85 M allocations: 257.093 MiB, 1.48% gc time)
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [6] macro expansion at ./test.jl:853 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 25
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:15
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:32
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] sde_determine_initdt(::Array{Float64,1}, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::Rational{Int64}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/initdt.jl:33
 [4] #init#59(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::StochasticDiffEq.#ODE_DEFAULT_NORM, ::StochasticDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK, ::StochasticDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::StochasticDiffEq.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:112
 [5] init(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:51
 [6] #solve#58(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [7] solve(::DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,true,:White,DiffEqBase.ParameterizedFunction{true,##266#267,Array{Float64,1}},DiffEqBase.ParameterizedFunction{true,##270#271,Array{Any,1}},DiffEqBase.#white_noise_func_wrapper!,DiffEqBase.CallbackSet{Tuple{},Tuple{}},Void}, ::StochasticDiffEq.SRIW1{StochasticDiffEq.RSWM{:RSwM3,Float64}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:10
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
 [11] macro expansion at ./test.jl:853 [inlined]
 [12] macro expansion at ./util.jl:237 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 34
Test Summary: |
Test on Monte | No tests
 15.625519 seconds (9.82 M allocations: 941.832 MiB, 2.02% gc time)
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Juno v0.2.7
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing Media v0.2.7
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v1.8.0
INFO: Removing ParameterizedFunctions v1.3.0
INFO: Removing PolynomialFactors v0.0.4
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.0
INFO: Removing StochasticDiffEq v1.4.0
INFO: Removing SymEngine v0.1.5

>>> End of log
