>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.12.0
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.13.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v2.1.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.10.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Installing StatsBase v0.16.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-rc3.0
Commit ad290e9 (2017-06-07 11:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1747.25390625 MB free)
Uptime: 45953.0 sec
Load Avg:  1.19775390625  1.03466796875  1.05908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2936136 s        960 s     151541 s     868964 s         72 s
#2  3499 MHz    1019073 s      11689 s     103796 s    3336994 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
38 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.12.0
 - Distributions                 0.13.0
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.5
 - LineSearches                  2.1.1
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.10.0
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
 - StatsBase                     0.16.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Iterators v0.3.1
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.10.1
INFO: Installing OrdinaryDiffEq v2.8.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing PolynomialFactors v0.0.6
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.6.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.814268e+03              NaN
 * lambda: 10000.0

     1     2.814265e+03     8.758112e+02
 * g(x): 875.811245724587
 * lambda: 1000.0
 * dx: [1.77371e-6]

     2     2.814234e+03     8.750394e+02
 * g(x): 875.0393727242231
 * lambda: 100.0
 * dx: [1.77213e-5]

     3     2.813926e+03     8.673602e+02
 * g(x): 867.3602275829867
 * lambda: 10.0
 * dx: [0.000175641]

     4     2.810068e+03     8.086815e+02
 * g(x): 808.6814662255574
 * lambda: 1.0
 * dx: [0.00161325]

     5     2.787113e+03     5.308416e+02
 * g(x): 530.8415520893832
 * lambda: 0.1
 * dx: [0.0101673]

     6     2.732407e+03     1.040644e+02
 * g(x): 104.06435316999398
 * lambda: 0.010000000000000002
 * dx: [0.0213236]

     7     2.645611e+03     6.446297e+01
 * g(x): 64.46296644220364
 * lambda: 0.0010000000000000002
 * dx: [0.0284702]

     8     2.531980e+03     7.461138e+01
 * g(x): 74.61137709395967
 * lambda: 0.00010000000000000003
 * dx: [0.0341988]

     9     2.397607e+03     1.140794e+02
 * g(x): 114.07938674242168
 * lambda: 1.0000000000000004e-5
 * dx: [0.0380133]

    10     2.247163e+03     1.435237e+02
 * g(x): 143.52368279619662
 * lambda: 1.0000000000000004e-6
 * dx: [0.0408045]

    11     1.982119e+03     1.126207e+02
 * g(x): 112.62065494788425
 * lambda: 1.0000000000000005e-7
 * dx: [0.0488141]

    12     1.476014e+03     2.567784e+02
 * g(x): 256.77839878828973
 * lambda: 1.0000000000000005e-8
 * dx: [0.0636263]

    13     7.518991e+02     8.292259e+02
 * g(x): 829.2258718591055
 * lambda: 1.0000000000000005e-9
 * dx: [0.0762766]

    14     1.167890e+02     8.534634e+02
 * g(x): 853.463426126054
 * lambda: 1.0000000000000006e-10
 * dx: [0.0862746]

    15     9.253521e-01     1.784041e+02
 * g(x): 178.40405112050135
 * lambda: 1.0000000000000006e-11
 * dx: [0.0458139]

    16     3.828306e-02     2.868065e-01
 * g(x): 0.28680646651168246
 * lambda: 1.0000000000000006e-12
 * dx: [0.00443672]

    17     3.827896e-02     8.014833e-07
 * g(x): 8.014832862945909e-7
 * lambda: 1.0000000000000007e-13
 * dx: [9.55714e-6]

    18     3.827896e-02     2.457918e-08
 * g(x): 2.4579179358497072e-8
 * lambda: 1.0000000000000008e-14
 * dx: [7.22463e-9]

     0     1.457333e+03              NaN
 * lambda: 10000.0

     1     1.457270e+03     2.843298e+03
 * g(x): 2843.298417198827
 * lambda: 1000.0
 * dx: [1.06415e-5, 9.33523e-6]

     2     1.456643e+03     2.840514e+03
 * g(x): 2840.5138710602687
 * lambda: 100.0
 * dx: [0.000106305, 9.2939e-5]

     3     1.450423e+03     2.813077e+03
 * g(x): 2813.076842317605
 * lambda: 10.0
 * dx: [0.00105221, 0.000888838]

     4     1.393025e+03     2.574223e+03
 * g(x): 2574.222645423474
 * lambda: 1.0
 * dx: [0.00958778, 0.00549449]

     5     1.072636e+03     1.712635e+03
 * g(x): 1712.6352694964164
 * lambda: 0.1
 * dx: [0.0570625, -0.0450691]

     6     5.076695e+02     1.213255e+03
 * g(x): 1213.2554159014949
 * lambda: 0.010000000000000002
 * dx: [0.136316, -0.16394]

     7     4.206473e+01     2.150148e+02
 * g(x): 215.01480410615554
 * lambda: 0.0010000000000000002
 * dx: [0.0464239, 0.321876]

     8     3.594274e+00     3.140731e+02
 * g(x): 314.0731331691867
 * lambda: 0.00010000000000000003
 * dx: [-0.0596223, 0.282307]

     9     1.545694e-01     8.528506e+00
 * g(x): 8.528505943420779
 * lambda: 1.0000000000000004e-5
 * dx: [0.00649612, 0.0131842]

    10     4.611668e-02     1.564371e+01
 * g(x): 15.64371140355975
 * lambda: 1.0000000000000004e-6
 * dx: [0.00266907, -0.0129287]

    11     3.826469e-02     5.869298e-02
 * g(x): 0.05869298203150908
 * lambda: 1.0000000000000005e-7
 * dx: [-3.8304e-5, -0.00207836]

    12     3.826458e-02     5.485631e-08
 * g(x): 5.485630616419712e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-1.37839e-6, -1.24783e-6]

    13     3.826458e-02     2.321320e-08
 * g(x): 2.321320291542861e-8
 * lambda: 1.0000000000000005e-9
 * dx: [-3.48127e-10, -4.63267e-9]

     0     8.959922e+02              NaN
 * lambda: 10000.0

     1     8.958652e+02     2.414629e+03
 * g(x): 2414.629040383616
 * lambda: 1000.0
 * dx: [1.18841e-5, -9.02506e-7, 4.36575e-5, 1.71679e-5]

     2     8.945977e+02     2.409971e+03
 * g(x): 2409.970933712547
 * lambda: 100.0
 * dx: [0.000118609, -8.69457e-6, 0.000435823, 0.000171305]

     3     8.821350e+02     2.364413e+03
 * g(x): 2364.413073192919
 * lambda: 10.0
 * dx: [0.00116343, -5.47508e-5, 0.00428489, 0.0016764]

     4     7.760879e+02     1.999724e+03
 * g(x): 1999.723590116416
 * lambda: 1.0
 * dx: [0.00979307, 0.00188288, 0.0369395, 0.0137341]

     5     3.463236e+02     1.021450e+03
 * g(x): 1021.4501262969263
 * lambda: 0.1
 * dx: [0.0387542, 0.0568389, 0.202084, 0.0331994]

     6     1.772728e+01     1.665424e+02
 * g(x): 166.54240844671097
 * lambda: 0.010000000000000002
 * dx: [0.0431685, 0.0890809, 0.445163, -0.0901556]

     7     2.563525e+00     1.387480e+02
 * g(x): 138.74803016863274
 * lambda: 0.0010000000000000002
 * dx: [0.0430356, 0.0134983, -0.098212, -0.0905042]

     8     1.913766e-01     5.577738e+01
 * g(x): 55.77737622506575
 * lambda: 0.00010000000000000003
 * dx: [0.053192, 0.036364, -0.164189, -0.0568526]

     9     4.091576e-02     7.023595e+00
 * g(x): 7.02359515020987
 * lambda: 1.0000000000000004e-5
 * dx: [0.00992455, 0.00278852, -0.0231364, -0.0101578]

    10     3.754326e-02     2.129202e-02
 * g(x): 0.021292018410632
 * lambda: 1.0000000000000004e-6
 * dx: [0.00176973, 0.000715783, -0.00591858, -0.0020285]

    11     3.754304e-02     1.131868e-06
 * g(x): 1.131867721770874e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.41088e-5, 4.06053e-7, -4.23184e-5, -1.62348e-5]

    12     3.754304e-02     8.422763e-09
 * g(x): 8.422763042581494e-9
 * lambda: 1.0000000000000005e-8
 * dx: [6.68114e-8, 4.35198e-8, -2.12326e-7, -6.60768e-8]

    13     3.754304e-02     3.159418e-07
 * g(x): 3.159418040799e-7
 * lambda: 1.0000000000000005e-7
 * dx: [3.01175e-10, 8.72233e-11, -1.05729e-9, -2.76875e-10]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Total
Tests on ODEs |   16     16
 75.733860 seconds (54.58 M allocations: 5.113 GiB, 2.51% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | Pass  Total
ParameterizedFunction Type |    1      1
  5.260632 seconds (2.77 M allocations: 346.136 MiB, 2.02% gc time)
Test Summary: | Pass  Total
Test on Monte |    1      1
 15.509851 seconds (8.10 M allocations: 1005.689 MiB, 4.07% gc time)
elapsed time: 98.354267887 seconds
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Iterators v0.3.1
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.10.1
INFO: Removing OrdinaryDiffEq v2.8.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing PolynomialFactors v0.0.6
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.6.0
INFO: Removing SymEngine v0.2.0

>>> End of log
