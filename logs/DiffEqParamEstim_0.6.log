>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.5.0
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.6.1
INFO: Installing DiffEqParamEstim v0.3.0
INFO: Installing Distributions v0.12.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.7.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.14.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1753.30078125 MB free)
Uptime: 42345.0 sec
Load Avg:  1.04736328125  1.0146484375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2711423 s       4886 s     130353 s     779407 s         30 s
#2  3500 MHz     891797 s       1730 s      85812 s    3170020 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.3.0
 - JSON                          0.12.0
34 additional packages:
 - BinDeps                       0.5.0
 - Calculus                      0.2.2
 - Compat                        0.25.1
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.6.1
 - Distributions                 0.12.5
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LearnBase                     0.1.5
 - LineSearches                  0.1.5
 - LossFunctions                 0.1.0
 - LsqFit                        0.2.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.7.1
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.14.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.5.0
INFO: Installing DiffEqNoiseProcess v0.1.1
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v2.3.2
INFO: Installing ParameterizedFunctions v2.0.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.813676e+03              NaN
 * lambda: 10000.0

     1     2.813673e+03     8.747174e+02
 * g(x): 874.7174406020318
 * lambda: 1000.0
 * dx: [1.7715e-6]

     2     2.813642e+03     8.739463e+02
 * g(x): 873.9462980285292
 * lambda: 100.0
 * dx: [1.76992e-5]

     3     2.813335e+03     8.662696e+02
 * g(x): 866.2695607225032
 * lambda: 10.0
 * dx: [0.00017542]

     4     2.809480e+03     8.076795e+02
 * g(x): 807.6794810236782
 * lambda: 1.0
 * dx: [0.00161121]

     5     2.786566e+03     5.303696e+02
 * g(x): 530.3695578430409
 * lambda: 0.1
 * dx: [0.0101587]

     6     2.731938e+03     1.040288e+02
 * g(x): 104.02879290417307
 * lambda: 0.010000000000000002
 * dx: [0.0213095]

     7     2.645266e+03     6.439873e+01
 * g(x): 64.39873459508041
 * lambda: 0.0010000000000000002
 * dx: [0.0284494]

     8     2.531846e+03     7.456131e+01
 * g(x): 74.56130715015637
 * lambda: 0.00010000000000000003
 * dx: [0.0341717]

     9     2.397963e+03     1.072014e+02
 * g(x): 107.20144638701115
 * lambda: 1.0000000000000004e-5
 * dx: [0.0379179]

    10     2.248910e+03     1.696843e+02
 * g(x): 169.68426682181223
 * lambda: 1.0000000000000004e-6
 * dx: [0.0404919]

    11     1.985711e+03     1.136359e+02
 * g(x): 113.63589465219215
 * lambda: 1.0000000000000005e-7
 * dx: [0.0486753]

    12     1.479378e+03     2.606104e+02
 * g(x): 260.6103755036353
 * lambda: 1.0000000000000005e-8
 * dx: [0.0637775]

    13     7.563041e+02     8.261610e+02
 * g(x): 826.1610321226889
 * lambda: 1.0000000000000005e-9
 * dx: [0.076178]

    14     1.173302e+02     8.355974e+02
 * g(x): 835.5973912230847
 * lambda: 1.0000000000000006e-10
 * dx: [0.0866477]

    15     9.348271e-01     1.795824e+02
 * g(x): 179.58242262450585
 * lambda: 1.0000000000000006e-11
 * dx: [0.0459005]

    16     4.025289e-02     2.899313e-01
 * g(x): 0.2899312682006562
 * lambda: 1.0000000000000006e-12
 * dx: [0.00445577]

    17     4.024966e-02     6.620551e-07
 * g(x): 6.620550820346516e-7
 * lambda: 1.0000000000000007e-13
 * dx: [8.48397e-6]

    18     4.024966e-02     1.728655e-04
 * g(x): 0.0001728654713464839
 * lambda: 1.0000000000000006e-12
 * dx: [3.85581e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param[1] ≈ 1.5 atol=0.001` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 26

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use Optim Brent to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 58
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 62
Use Two Stage Method to fit the parameter
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer[1] ≈ 1.5 atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 83
Multivariate
Use LM to fit the parameter
     0     1.457005e+03              NaN
 * lambda: 10000.0

     1     1.456942e+03     2.844730e+03
 * g(x): 2844.730080760153
 * lambda: 1000.0
 * dx: [1.06468e-5, 9.38924e-6]

     2     1.456314e+03     2.841942e+03
 * g(x): 2841.9424053325997
 * lambda: 100.0
 * dx: [0.000106358, 9.34785e-5]

     3     1.450086e+03     2.814474e+03
 * g(x): 2814.4741116278105
 * lambda: 10.0
 * dx: [0.00105273, 0.000894143]

     4     1.392616e+03     2.575338e+03
 * g(x): 2575.337502450277
 * lambda: 1.0
 * dx: [0.00959182, 0.00554027]

     5     1.071980e+03     1.712708e+03
 * g(x): 1712.707986363776
 * lambda: 0.1
 * dx: [0.0570624, -0.0448257]

     6     5.068993e+02     1.212877e+03
 * g(x): 1212.8771368248867
 * lambda: 0.010000000000000002
 * dx: [0.136194, -0.163419]

     7     4.025711e+01     2.131182e+02
 * g(x): 213.11817053993178
 * lambda: 0.0010000000000000002
 * dx: [0.0447466, 0.327857]

     8     2.629933e+00     2.702087e+02
 * g(x): 270.20870304262735
 * lambda: 0.00010000000000000003
 * dx: [-0.056729, 0.276281]

     9     4.074021e-02     3.110594e+00
 * g(x): 3.110593993744717
 * lambda: 1.0000000000000004e-5
 * dx: [0.00804921, -0.00288773]

    10     4.017842e-02     1.001136e-02
 * g(x): 0.010011357408436006
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000190786, 0.000823091]

    11     4.017842e-02     2.049886e-08
 * g(x): 2.049886216326513e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-5.49749e-7, 1.87769e-6]

    12     4.017842e-02     4.513060e-08
 * g(x): 4.5130603032461636e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-7.24939e-10, 3.51757e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 3.0] atol=0.002` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 99
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 3.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 104
Use LM to fit the parameter
     0     8.959283e+02              NaN
 * lambda: 10000.0

     1     8.958013e+02     2.414412e+03
 * g(x): 2414.4119560815143
 * lambda: 1000.0
 * dx: [1.1883e-5, -9.03592e-7, 4.36882e-5, 1.71498e-5]

     2     8.945338e+02     2.409754e+03
 * g(x): 2409.7537912334274
 * lambda: 100.0
 * dx: [0.000118598, -8.70376e-6, 0.000436131, 0.000171124]

     3     8.820714e+02     2.364195e+03
 * g(x): 2364.1951196185973
 * lambda: 10.0
 * dx: [0.00116332, -5.48662e-5, 0.0042879, 0.00167461]

     4     7.760297e+02     1.999492e+03
 * g(x): 1999.4917511525355
 * lambda: 1.0
 * dx: [0.00979187, 0.00188264, 0.0369665, 0.0137174]

     5     3.462120e+02     1.020941e+03
 * g(x): 1020.9413671660324
 * lambda: 0.1
 * dx: [0.0387384, 0.0568431, 0.202297, 0.0330911]

     6     1.714853e+01     1.603607e+02
 * g(x): 160.36069476670133
 * lambda: 0.010000000000000002
 * dx: [0.0431785, 0.088507, 0.443706, -0.0911154]

     7     2.512206e+00     1.351542e+02
 * g(x): 135.15421805763674
 * lambda: 0.0010000000000000002
 * dx: [0.0429893, 0.0140283, -0.0966619, -0.089453]

     8     1.871732e-01     5.153405e+01
 * g(x): 51.53404534285351
 * lambda: 0.00010000000000000003
 * dx: [0.0527062, 0.0361868, -0.162705, -0.0563585]

     9     4.330940e-02     7.135816e+00
 * g(x): 7.135815885705898
 * lambda: 1.0000000000000004e-5
 * dx: [0.00979116, 0.00269776, -0.0229463, -0.0100819]

    10     3.968783e-02     2.795401e-02
 * g(x): 0.027954006468418724
 * lambda: 1.0000000000000004e-6
 * dx: [0.00187258, 0.000783951, -0.0062577, -0.00212906]

    11     3.968767e-02     6.739441e-07
 * g(x): 6.739441449354899e-7
 * lambda: 1.0000000000000005e-7
 * dx: [3.35137e-6, -6.82699e-6, -6.00936e-6, -4.87694e-6]

    12     3.968767e-02     1.075147e-05
 * g(x): 1.0751469261660596e-5
 * lambda: 1.0000000000000006e-6
 * dx: [1.60174e-8, 1.02001e-8, -5.14719e-8, -1.59844e-8]

    13     3.968767e-02     1.075147e-05
 * g(x): 1.0751469261660596e-5
 * lambda: 1.0000000000000006e-5
 * dx: [1.60151e-8, 1.01986e-8, -5.14652e-8, -1.5982e-8]

    14     3.968767e-02     1.075147e-05
 * g(x): 1.0751469261660596e-5
 * lambda: 0.00010000000000000006
 * dx: [1.59921e-8, 1.01837e-8, -5.13984e-8, -1.59579e-8]

    15     3.968767e-02     4.749169e-08
 * g(x): 4.749169248141616e-8
 * lambda: 1.0000000000000006e-5
 * dx: [1.57653e-8, 1.00368e-8, -5.07408e-8, -1.57199e-8]

    16     3.968767e-02     3.162129e-08
 * g(x): 3.1621294027672775e-8
 * lambda: 1.0000000000000006e-6
 * dx: [-1.62438e-9, -1.02099e-9, 4.78081e-9, 1.71496e-9]

WARNING: @test_approx_eq_eps is deprecated, use `@test param ≈ [1.5; 1.0; 3.0; 1.0] atol=0.01` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 131
Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5; 1.0; 3.0; 1.0] atol=0.5` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:3 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/tests_on_odes.jl, in expression starting on line 137
Test Summary: |
Tests on ODEs | No tests
 48.520805 seconds (34.55 M allocations: 3.066 GiB, 2.68% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: @test_approx_eq_eps is deprecated, use `@test result.minimizer ≈ [1.5, 1.0] atol=0.3` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1031
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:4 [inlined]
 [6] macro expansion at ./test.jl:856 [inlined]
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:552
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/parameterized_function_type.jl, in expression starting on line 25
Test Summary:              |
ParameterizedFunction Type | No tests
  5.829715 seconds (1.90 M allocations: 256.704 MiB, 1.18% gc time)
Test on Monte: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: no method matching DiffEqBase.MonteCarloProblem(::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.##160#162{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},SubArray{Float64,1,Array{Float64,1},Tuple{UnitRange{Int64}},true}},Void,UniformScaling{Int64}}, ::DiffEqBase.##138#144, ::DiffEqBase.##137#143)
  Closest candidates are:
    DiffEqBase.MonteCarloProblem(::T, ::T2, ::T3, !Matched::T4, !Matched::T5) where {T, T2, T3, T4, T5} at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/monte_problems.jl:2
    DiffEqBase.MonteCarloProblem(::DiffEqBase.DEProblem; output_func, prob_func, reduction, u_init) at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/monte_problems.jl:9
  Stacktrace:
   [1] problem_new_parameters(::DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DiffEqBase/src/parameters_interface.jl:86
   [2] (::DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}})(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DiffEqParamEstim/src/build_loss_objective.jl:25
   [3] finite_difference!(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.6/Calculus/src/finite_difference.jl:126
   [4] g! at /home/vagrant/.julia/v0.6/Optim/src/types.jl:192 [inlined]
   [5] (::Optim.#fg!#3{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13},Optim.#g!#2{DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/types.jl:196
   [6] initial_state(::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}, ::Optim.OnceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/bfgs.jl:38
   [7] optimize(::Optim.OnceDifferentiable, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:172
   [8] optimize(::DiffEqParamEstim.DiffEqObjective{DiffEqParamEstim.##6#10{Bool,Int64,DiffEqBase.#problem_new_parameters,Array{Any,1},DiffEqBase.MonteCarloProblem{DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqBase.ParameterizedFunction{true,##10#11,Array{Float64,1}},Void,UniformScaling{Int64}},DiffEqBase.##138#144,DiffEqBase.##137#143,DiffEqBase.##139#145,Array{Any,1}},OrdinaryDiffEq.Tsit5,DiffEqParamEstim.CostVData{Array{Float64,1},Array{Float64,2},DataType}},DiffEqParamEstim.##9#13}, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:116
   [9] optimize(::Function, ::Array{Float64,1}, ::Optim.BFGS{LineSearches.#hagerzhang!,Optim.##37#39}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:165
   [10] include_from_node1(::String) at ./loading.jl:552
   [11] include(::String) at ./sysimg.jl:14
   [12] macro expansion at /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl:5 [inlined]
   [13] macro expansion at ./test.jl:856 [inlined]
   [14] macro expansion at ./util.jl:237 [inlined]
   [15] anonymous at ./<missing>:?
   [16] include_from_node1(::String) at ./loading.jl:552
   [17] include(::String) at ./sysimg.jl:14
   [18] process_options(::Base.JLOptions) at ./client.jl:305
   [19] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/test_on_monte.jl, in expression starting on line 24
Test Summary: | Error  Total
Test on Monte |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl, in expression starting on line 5
==========================[ ERROR: DiffEqParamEstim ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqParamEstim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.5.0
INFO: Removing DiffEqNoiseProcess v0.1.1
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v2.3.2
INFO: Removing ParameterizedFunctions v2.0.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
ERROR: DiffEqParamEstim had test errors

>>> End of log
