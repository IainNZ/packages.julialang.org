>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.12.0
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.13.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.5
INFO: Installing LineSearches v2.2.0
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.10.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Installing StatsBase v0.16.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1703.73046875 MB free)
Uptime: 45915.0 sec
Load Avg:  1.09716796875  1.04833984375  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2936584 s       6044 s     140906 s     851743 s         39 s
#2  3500 MHz     959869 s        164 s     111971 s    3400068 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
38 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.12.0
 - Distributions                 0.13.0
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.5
 - LineSearches                  2.2.0
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.10.0
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
 - StatsBase                     0.16.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.2.0
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Iterators v0.3.1
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.10.1
INFO: Installing OrdinaryDiffEq v2.8.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing PolynomialFactors v0.0.6
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.3.1
INFO: Installing StochasticDiffEq v2.6.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:23
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
WARNING: StatsBase.WeightVec is deprecated, use StatsBase.Weights{#7#S, #8#T, #9#V} where #9#V<:AbstractArray{#8#T, 1} where #8#T<:Real where #7#S<:Real instead.
  likely near /home/vagrant/.julia/v0.6/LossFunctions/src/averagemode.jl:30
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.815310e+03              NaN
 * lambda: 10000.0

     1     2.815307e+03     8.765067e+02
 * g(x): 876.5066863196316
 * lambda: 1000.0
 * dx: [1.77512e-6]

     2     2.815276e+03     8.757327e+02
 * g(x): 875.7326900393864
 * lambda: 100.0
 * dx: [1.77354e-5]

     3     2.814967e+03     8.680441e+02
 * g(x): 868.0441422713704
 * lambda: 10.0
 * dx: [0.00017578]

     4     2.811101e+03     8.093025e+02
 * g(x): 809.302549253335
 * lambda: 1.0
 * dx: [0.0016145]

     5     2.788103e+03     5.313824e+02
 * g(x): 531.3824420164101
 * lambda: 0.1
 * dx: [0.010177]

     6     2.733295e+03     1.041103e+02
 * g(x): 104.11030966826411
 * lambda: 0.010000000000000002
 * dx: [0.0213396]

     7     2.646273e+03     6.459213e+01
 * g(x): 64.5921284247183
 * lambda: 0.0010000000000000002
 * dx: [0.0285052]

     8     2.532190e+03     7.473410e+01
 * g(x): 74.73410376857271
 * lambda: 0.00010000000000000003
 * dx: [0.0342552]

     9     2.396802e+03     1.260244e+02
 * g(x): 126.02438053357827
 * lambda: 1.0000000000000004e-5
 * dx: [0.038187]

    10     2.243564e+03     9.172354e+01
 * g(x): 91.72353664849477
 * lambda: 1.0000000000000004e-6
 * dx: [0.0413059]

    11     1.973171e+03     1.123518e+02
 * g(x): 112.3518475170028
 * lambda: 1.0000000000000005e-7
 * dx: [0.0492457]

    12     1.464728e+03     2.459012e+02
 * g(x): 245.90124853138812
 * lambda: 1.0000000000000005e-8
 * dx: [0.063512]

    13     7.382740e+02     8.375196e+02
 * g(x): 837.519622672873
 * lambda: 1.0000000000000005e-9
 * dx: [0.0765484]

    14     1.148947e+02     8.920378e+02
 * g(x): 892.0378345332274
 * lambda: 1.0000000000000006e-10
 * dx: [0.0852274]

    15     8.872312e-01     1.747876e+02
 * g(x): 174.78758389098192
 * lambda: 1.0000000000000006e-11
 * dx: [0.0454972]

    16     4.094913e-02     2.718741e-01
 * g(x): 0.2718740568941087
 * lambda: 1.0000000000000006e-12
 * dx: [0.00433465]

    17     4.094695e-02     3.669151e-07
 * g(x): 3.6691508209507617e-7
 * lambda: 1.0000000000000007e-13
 * dx: [6.9752e-6]

    18     4.094695e-02     8.317431e-08
 * g(x): 8.31743147688968e-8
 * lambda: 1.0000000000000008e-14
 * dx: [1.14684e-9]

     0     1.456770e+03              NaN
 * lambda: 10000.0

     1     1.456707e+03     2.846157e+03
 * g(x): 2846.1565032402204
 * lambda: 1000.0
 * dx: [1.06522e-5, 9.41666e-6]

     2     1.456078e+03     2.843367e+03
 * g(x): 2843.3670166707616
 * lambda: 100.0
 * dx: [0.000106411, 9.37516e-5]

     3     1.449843e+03     2.815873e+03
 * g(x): 2815.87294721337
 * lambda: 10.0
 * dx: [0.00105326, 0.000896833]

     4     1.392313e+03     2.576520e+03
 * g(x): 2576.519677273821
 * lambda: 1.0
 * dx: [0.00959616, 0.0055626]

     5     1.071469e+03     1.713127e+03
 * g(x): 1713.1271436706074
 * lambda: 0.1
 * dx: [0.0570732, -0.0447353]

     6     5.063754e+02     1.213073e+03
 * g(x): 1213.073102866343
 * lambda: 0.010000000000000002
 * dx: [0.136174, -0.163352]

     7     3.982600e+01     2.127217e+02
 * g(x): 212.72165164401315
 * lambda: 0.0010000000000000002
 * dx: [0.0444939, 0.328655]

     8     2.482969e+00     2.628355e+02
 * g(x): 262.8354671421426
 * lambda: 0.00010000000000000003
 * dx: [-0.0561556, 0.274721]

     9     4.168360e-02     2.893890e+00
 * g(x): 2.89388952614129
 * lambda: 1.0000000000000004e-5
 * dx: [0.00783512, -0.00295928]

    10     4.094128e-02     1.743282e-02
 * g(x): 0.017432815397141033
 * lambda: 1.0000000000000004e-6
 * dx: [-0.00021844, 0.00100409]

    11     4.094127e-02     4.319872e-08
 * g(x): 4.319872093372368e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-4.42332e-7, 3.43545e-7]

    12     4.094127e-02     2.104769e-09
 * g(x): 2.104769469823964e-9
 * lambda: 1.0000000000000005e-8
 * dx: [-2.32214e-11, -1.09786e-10]

     0     8.954474e+02              NaN
 * lambda: 10000.0

     1     8.953204e+02     2.414836e+03
 * g(x): 2414.8364203932033
 * lambda: 1000.0
 * dx: [1.18851e-5, -9.45142e-7, 4.36986e-5, 1.71459e-5]

     2     8.940526e+02     2.410179e+03
 * g(x): 2410.178660129876
 * lambda: 100.0
 * dx: [0.000118619, -9.1219e-6, 0.000436233, 0.000171085]

     3     8.815873e+02     2.364598e+03
 * g(x): 2364.597557825212
 * lambda: 10.0
 * dx: [0.00116352, -5.89368e-5, 0.00428886, 0.00167422]

     4     7.755358e+02     1.999724e+03
 * g(x): 1999.7239711570894
 * lambda: 1.0
 * dx: [0.00979299, 0.00184593, 0.036972, 0.0137134]

     5     3.458546e+02     1.020520e+03
 * g(x): 1020.5196935295752
 * lambda: 0.1
 * dx: [0.0387283, 0.0566447, 0.202268, 0.0330687]

     6     1.697281e+01     1.590817e+02
 * g(x): 159.0817171154987
 * lambda: 0.010000000000000002
 * dx: [0.0431418, 0.0879908, 0.443167, -0.0912022]

     7     2.489802e+00     1.340634e+02
 * g(x): 134.06341547994256
 * lambda: 0.0010000000000000002
 * dx: [0.0428942, 0.013906, -0.0961681, -0.0890653]

     8     1.852962e-01     5.089347e+01
 * g(x): 50.89346896399681
 * lambda: 0.00010000000000000003
 * dx: [0.0525126, 0.0360243, -0.162119, -0.0562221]

     9     4.411578e-02     7.535206e+00
 * g(x): 7.535205738496671
 * lambda: 1.0000000000000004e-5
 * dx: [0.00986467, 0.0028253, -0.023238, -0.0101286]

    10     4.088485e-02     2.813944e-02
 * g(x): 0.028139443771356132
 * lambda: 1.0000000000000004e-6
 * dx: [0.00153549, 0.00052938, -0.00521753, -0.00181888]

    11     4.088476e-02     1.147934e-06
 * g(x): 1.1479344690368265e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.00421e-5, 1.35611e-6, -2.80695e-5, -1.05722e-5]

    12     4.088476e-02     4.600278e-08
 * g(x): 4.600278424859994e-8
 * lambda: 1.0000000000000005e-8
 * dx: [1.47239e-8, 7.0881e-9, -4.80711e-8, -1.41879e-8]

    13     4.088476e-02     8.110069e-08
 * g(x): 8.110069354971827e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-5.84611e-14, -7.34767e-11, -6.60905e-11, 1.00665e-11]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Total
Tests on ODEs |   16     16
 89.339106 seconds (51.95 M allocations: 4.858 GiB, 2.17% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | Pass  Total
ParameterizedFunction Type |    1      1
  7.006542 seconds (2.77 M allocations: 345.882 MiB, 1.92% gc time)
Test Summary: | Pass  Total
Test on Monte |    1      1
 15.545825 seconds (8.18 M allocations: 1009.517 MiB, 3.74% gc time)
elapsed time: 114.034670678 seconds
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.2.0
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.0.2
INFO: Removing Iterators v0.3.1
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.10.1
INFO: Removing OrdinaryDiffEq v2.8.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing PolynomialFactors v0.0.6
INFO: Removing Polynomials v0.1.5
INFO: Removing Primes v0.1.3
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.3.1
INFO: Removing StochasticDiffEq v2.6.0
INFO: Removing SymEngine v0.2.0

>>> End of log
