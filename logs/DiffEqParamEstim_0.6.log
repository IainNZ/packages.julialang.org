>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Installing AbstractFFTs v0.1.0
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.15.0
INFO: Installing DiffEqParamEstim v0.5.0
INFO: Installing Distributions v0.14.0
INFO: Installing FFTW v0.0.2
INFO: Installing ForwardDiff v0.5.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LearnBase v0.1.6
INFO: Installing LineSearches v2.2.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing LossFunctions v0.1.0
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NaNMath v0.2.5
INFO: Installing Optim v0.9.2
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.2.0
INFO: Installing RecursiveArrayTools v0.11.1
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.1
INFO: Installing StatsBase v0.17.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building FFTW
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1730.921875 MB free)
Uptime: 47001.0 sec
Load Avg:  0.9970703125  0.98974609375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2992778 s         88 s     146557 s     905366 s         35 s
#2  3500 MHz    1010633 s       6132 s      90443 s    3498228 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqParamEstim              0.5.0
 - JSON                          0.12.0
40 additional packages:
 - AbstractFFTs                  0.1.0
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.26.0
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.15.0
 - Distributions                 0.14.0
 - FFTW                          0.0.2
 - ForwardDiff                   0.5.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LearnBase                     0.1.6
 - LineSearches                  2.2.1
 - LinearMaps                    0.3.0
 - LossFunctions                 0.1.0
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - NLSolversBase                 2.1.3
 - NaNMath                       0.2.5
 - Optim                         0.9.2
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - RealInterface                 0.0.2
 - RecipesBase                   0.2.0
 - RecursiveArrayTools           0.11.1
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.1
 - StatsBase                     0.17.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqMonteCarlo v0.7.0
INFO: Installing DiffEqNoiseProcess v0.3.2
INFO: Installing Distances v0.4.1
INFO: Installing GenericSVD v0.1.0
INFO: Installing LeastSquaresOptim v0.4.0
INFO: Installing MathProgBase v0.6.4
INFO: Installing NLopt v0.3.4
INFO: Installing NLsolve v0.11.0
INFO: Installing OrdinaryDiffEq v2.11.0
INFO: Installing ParameterizedFunctions v2.1.2
INFO: Installing RandomNumbers v0.1.0
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Roots v0.4.0
INFO: Installing StochasticDiffEq v2.9.0
INFO: Installing SymEngine v0.2.0
INFO: Building Conda
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building NLopt
dpkg-preconfigure: unable to re-open stdin: No such file or directory
INFO: Building SymEngine
INFO: Testing DiffEqParamEstim
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LM to fit the parameter
     0     2.813118e+03              NaN
 * lambda: 10000.0

     1     2.813115e+03     8.750849e+02
 * g(x): 875.0849013588181
 * lambda: 1000.0
 * dx: [1.77224e-6]

     2     2.813084e+03     8.743083e+02
 * g(x): 874.3083206642243
 * lambda: 100.0
 * dx: [1.77065e-5]

     3     2.812776e+03     8.666380e+02
 * g(x): 866.6379522244496
 * lambda: 10.0
 * dx: [0.000175495]

     4     2.808923e+03     8.080087e+02
 * g(x): 808.0086970736626
 * lambda: 1.0
 * dx: [0.00161188]

     5     2.786013e+03     5.303820e+02
 * g(x): 530.3819609760667
 * lambda: 0.1
 * dx: [0.010159]

     6     2.731484e+03     1.039457e+02
 * g(x): 103.94567812989109
 * lambda: 0.010000000000000002
 * dx: [0.0212971]

     7     2.645146e+03     6.417983e+01
 * g(x): 64.17982956302863
 * lambda: 0.0010000000000000002
 * dx: [0.0284003]

     8     2.532306e+03     7.429961e+01
 * g(x): 74.29960800806059
 * lambda: 0.00010000000000000003
 * dx: [0.0340886]

     9     2.399521e+03     9.444655e+01
 * g(x): 94.4465466217806
 * lambda: 1.0000000000000004e-5
 * dx: [0.0377129]

    10     2.253217e+03     1.984930e+02
 * g(x): 198.49304489763512
 * lambda: 1.0000000000000004e-6
 * dx: [0.0399153]

    11     1.995090e+03     1.148199e+02
 * g(x): 114.81985385643293
 * lambda: 1.0000000000000005e-7
 * dx: [0.0482946]

    12     1.491392e+03     2.603004e+02
 * g(x): 260.3004421060126
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638342]

    13     7.709313e+02     8.168768e+02
 * g(x): 816.8768213182691
 * lambda: 1.0000000000000005e-9
 * dx: [0.0758662]

    14     1.219736e+02     8.056841e+02
 * g(x): 805.6840576658147
 * lambda: 1.0000000000000006e-10
 * dx: [0.0872636]

    15     1.028394e+00     1.886767e+02
 * g(x): 188.67669523918875
 * lambda: 1.0000000000000006e-11
 * dx: [0.0466478]

    16     3.270737e-02     3.282289e-01
 * g(x): 0.32822888363111424
 * lambda: 1.0000000000000006e-12
 * dx: [0.00469943]

    17     3.270177e-02     1.061955e-06
 * g(x): 1.0619552690549483e-6
 * lambda: 1.0000000000000007e-13
 * dx: [1.1166e-5]

    18     3.270177e-02     1.964830e-08
 * g(x): 1.9648302984620614e-8
 * lambda: 1.0000000000000007e-13
 * dx: [9.66039e-9]

     0     1.457291e+03              NaN
 * lambda: 10000.0

     1     1.457228e+03     2.843549e+03
 * g(x): 2843.5488478161697
 * lambda: 1000.0
 * dx: [1.06424e-5, 9.33514e-6]

     2     1.456600e+03     2.840766e+03
 * g(x): 2840.7656931811143
 * lambda: 100.0
 * dx: [0.000106314, 9.29387e-5]

     3     1.450380e+03     2.813324e+03
 * g(x): 2813.324039840757
 * lambda: 10.0
 * dx: [0.00105231, 0.000888827]

     4     1.392972e+03     2.574448e+03
 * g(x): 2574.448143349685
 * lambda: 1.0
 * dx: [0.00958862, 0.00549424]

     5     1.072555e+03     1.712796e+03
 * g(x): 1712.795804407409
 * lambda: 0.1
 * dx: [0.0570672, -0.0450761]

     6     5.075666e+02     1.213089e+03
 * g(x): 1213.088801561988
 * lambda: 0.010000000000000002
 * dx: [0.136308, -0.163886]

     7     4.190647e+01     2.149588e+02
 * g(x): 214.95883239884802
 * lambda: 0.0010000000000000002
 * dx: [0.0463128, 0.322329]

     8     3.529895e+00     3.119514e+02
 * g(x): 311.9514126564544
 * lambda: 0.00010000000000000003
 * dx: [-0.0594693, 0.281762]

     9     3.355993e-02     2.739302e+00
 * g(x): 2.7393018063897823
 * lambda: 1.0000000000000004e-5
 * dx: [0.00929078, -0.00301225]

    10     3.267474e-02     2.511926e-02
 * g(x): 0.025119263651998125
 * lambda: 1.0000000000000004e-6
 * dx: [-0.0002342, 0.00116484]

    11     3.267470e-02     7.175386e-07
 * g(x): 7.175386032010067e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.61469e-6, 6.48978e-6]

    12     3.267470e-02     3.488848e-08
 * g(x): 3.488847610810808e-8
 * lambda: 1.0000000000000005e-8
 * dx: [-4.68234e-9, 2.68152e-8]

     0     8.959488e+02              NaN
 * lambda: 10000.0

     1     8.958218e+02     2.414912e+03
 * g(x): 2414.9116566842467
 * lambda: 1000.0
 * dx: [1.18855e-5, -9.01062e-7, 4.3662e-5, 1.71721e-5]

     2     8.945539e+02     2.410256e+03
 * g(x): 2410.2559851310443
 * lambda: 100.0
 * dx: [0.000118623, -8.67855e-6, 0.000435869, 0.000171347]

     3     8.820876e+02     2.364692e+03
 * g(x): 2364.6922240198965
 * lambda: 10.0
 * dx: [0.00116357, -5.45911e-5, 0.00428537, 0.00167682]

     4     7.760017e+02     1.999975e+03
 * g(x): 1999.9750676221713
 * lambda: 1.0
 * dx: [0.00979429, 0.0018843, 0.0369443, 0.0137379]

     5     3.459965e+02     1.021788e+03
 * g(x): 1021.7881000309474
 * lambda: 0.1
 * dx: [0.038761, 0.0568466, 0.202133, 0.0332244]

     6     1.759267e+01     1.665514e+02
 * g(x): 166.55139341230517
 * lambda: 0.010000000000000002
 * dx: [0.0430649, 0.0889059, 0.445557, -0.0900588]

     7     2.499443e+00     1.370313e+02
 * g(x): 137.03128962572092
 * lambda: 0.0010000000000000002
 * dx: [0.0425633, 0.0130028, -0.0971098, -0.0899283]

     8     1.774068e-01     4.964388e+01
 * g(x): 49.643883146213525
 * lambda: 0.00010000000000000003
 * dx: [0.0525265, 0.035982, -0.162175, -0.0561653]

     9     3.598071e-02     6.894792e+00
 * g(x): 6.894792483180381
 * lambda: 1.0000000000000004e-5
 * dx: [0.00963496, 0.00257892, -0.0225395, -0.00997921]

    10     3.244444e-02     4.752898e-02
 * g(x): 0.04752897772882836
 * lambda: 1.0000000000000004e-6
 * dx: [0.00189167, 0.000825572, -0.00631514, -0.00213585]

    11     3.244431e-02     1.165941e-06
 * g(x): 1.1659405629860231e-6
 * lambda: 1.0000000000000005e-7
 * dx: [5.81668e-6, -3.28446e-6, -1.26371e-5, -6.64108e-6]

    12     3.244431e-02     1.022419e-08
 * g(x): 1.0224192825702971e-8
 * lambda: 1.0000000000000005e-8
 * dx: [1.16003e-9, 2.70347e-9, -2.86572e-9, -7.65641e-10]

Use LeastSquaresOptim to fit the parameter

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias Cenum Cint" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:56.
Use "const Cenum = Cint" instead.

WARNING: deprecated syntax "typealias _Opt Ptr{Void}" at /home/vagrant/.julia/v0.6/NLopt/src/NLopt.jl:132.
Use "const _Opt = Ptr{Void}" instead.
Use NLOpt to fit the parameter
Use Two Stage Method to fit the parameter
Test Summary: | Pass  Total
Tests on ODEs |   16     16
 82.318172 seconds (83.64 M allocations: 7.358 GiB, 2.80% gc time)
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Test Summary:              | Pass  Total
ParameterizedFunction Type |    1      1
  7.492647 seconds (6.26 M allocations: 674.015 MiB, 2.55% gc time)
Test Summary: | Pass  Total
Test on Monte |    1      1
 16.790892 seconds (14.86 M allocations: 2.640 GiB, 4.99% gc time)
elapsed time: 108.646386681 seconds
INFO: DiffEqParamEstim tests passed
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqMonteCarlo v0.7.0
INFO: Removing DiffEqNoiseProcess v0.3.2
INFO: Removing Distances v0.4.1
INFO: Removing GenericSVD v0.1.0
INFO: Removing LeastSquaresOptim v0.4.0
INFO: Removing MathProgBase v0.6.4
INFO: Removing NLopt v0.3.4
INFO: Removing NLsolve v0.11.0
INFO: Removing OrdinaryDiffEq v2.11.0
INFO: Removing ParameterizedFunctions v2.1.2
INFO: Removing RandomNumbers v0.1.0
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Roots v0.4.0
INFO: Removing StochasticDiffEq v2.9.0
INFO: Removing SymEngine v0.2.0

>>> End of log
