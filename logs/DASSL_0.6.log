>>> 'Pkg.add("DASSL")' log
INFO: Cloning cache of DASSL from https://github.com/JuliaDiffEq/DASSL.jl.git
INFO: Installing DASSL v0.3.0
INFO: Installing DiffEqBase v1.22.0
INFO: Installing FactCheck v0.4.3
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LinearMaps v1.0.1
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing RecipesBase v0.2.2
INFO: Installing RecursiveArrayTools v0.12.2
INFO: Installing Reexport v0.0.3
INFO: Installing SimpleTraits v0.5.1
INFO: Installing StaticArrays v0.6.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DASSL
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DASSL")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1685.01953125 MB free)
Uptime: 41519.0 sec
Load Avg:  1.03662109375  1.28955078125  1.576171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2654392 s       6220 s     122500 s     777396 s         33 s
#2  3503 MHz     858570 s        134 s      68457 s    3116299 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DASSL                         0.3.0
 - JSON                          0.13.0
13 additional packages:
 - Compat                        0.31.0
 - DiffEqBase                    1.22.0
 - FactCheck                     0.4.3
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LinearMaps                    1.0.1
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - RecipesBase                   0.2.2
 - RecursiveArrayTools           0.12.2
 - Reexport                      0.0.3
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.2
INFO: Computing test dependencies for DASSL...
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Conda v0.7.0
INFO: Installing DataStructures v0.6.1
INFO: Installing DiffEqPDEBase v0.3.4
INFO: Installing DiffEqProblemLibrary v0.10.0
INFO: Installing Distributions v0.14.2
INFO: Installing EllipsisNotation v0.2.2
INFO: Installing PDMats v0.7.0
INFO: Installing ParameterizedFunctions v2.2.0
INFO: Installing QuadGK v0.1.3
INFO: Installing Rmath v0.3.0
INFO: Installing SHA v0.5.1
INFO: Installing SpecialFunctions v0.3.1
INFO: Installing StatsBase v0.18.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.2.0
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Testing DASSL

WARNING: deprecated syntax "abstract DASSLDAEAlgorithm<:AbstractODEAlgorithm" at /home/vagrant/.julia/v0.6/DASSL/src/common.jl:2.
Use "abstract type DASSLDAEAlgorithm<:AbstractODEAlgorithm end" instead.

WARNING: deprecated syntax "abstract Result" at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:46.
Use "abstract type Result end" instead.
Testing maxorder
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#14(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:155
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#15(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#14(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:156
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#15(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#14(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:157
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#15(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Task iteration is now deprecated. Use Channels for inter-task communication.  A for-loop on a Channel object is terminated by calling `close` on the object.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] start at ./deprecated.jl:977 [inlined]
 [3] #dasslSolve#14(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:161
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#15(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] consume(::Task) at ./deprecated.jl:946
 [3] done at ./deprecated.jl:983 [inlined]
 [4] #dasslSolve#14(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:161
 [5] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [6] #dasslSolve#15(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [7] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [8] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [9] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:48
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:50
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] dassl_weights(::Array{Float64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:589
 [4] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [5] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [6] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:692
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#27{DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#26{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:57
 [3] max at ./operators.jl:424 [inlined]
 [4] (::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:692
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#27{DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#26{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [7] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] (::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:698
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#27{DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#26{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] newton_iteration(::DASSL.##28#31{DASSL.#f_newton#26{#F#17,Float64}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:543
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#27{DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#26{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:502
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##6#8{DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##7#9{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:454
 [4] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [5] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [6] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] produce(::Tuple{Float64,Array{Float64,1},Array{Float64,1}}) at ./deprecated.jl:900
 [3] #dasslStep#5(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#34{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:136
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##12#13{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:22
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:23
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
ERROR: LoadError: DimensionMismatch("Cannot left-divide transposed vector by matrix")
Stacktrace:
 [1] /(::Array{Float64,1}, ::Array{Float64,1}) at ./linalg/generic.jl:823
 [2] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:23
 [3] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
================================[ ERROR: DASSL ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.6.0
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Conda v0.7.0
INFO: Removing DataStructures v0.6.1
INFO: Removing DiffEqPDEBase v0.3.4
INFO: Removing DiffEqProblemLibrary v0.10.0
INFO: Removing Distributions v0.14.2
INFO: Removing EllipsisNotation v0.2.2
INFO: Removing PDMats v0.7.0
INFO: Removing ParameterizedFunctions v2.2.0
INFO: Removing QuadGK v0.1.3
INFO: Removing Rmath v0.3.0
INFO: Removing SHA v0.5.1
INFO: Removing SpecialFunctions v0.3.1
INFO: Removing StatsBase v0.18.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.2.0
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DASSL had test errors

>>> End of log
