>>> 'Pkg.add("DASSL")' log
INFO: Cloning cache of DASSL from https://github.com/JuliaDiffEq/DASSL.jl.git
INFO: Installing DASSL v1.0.0
INFO: Installing DiffEqBase v3.9.0
INFO: Installing FactCheck v0.4.3
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing NamedTuples v4.0.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SimpleTraits v0.6.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing TableTraits v0.2.0
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DASSL
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DASSL")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1660.3203125 MB free)
Uptime: 58816.0 sec
Load Avg:  1.01123046875  1.046875  1.29541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3548208 s       2813 s     246707 s    1304156 s         50 s
#2  3500 MHz    1175022 s       4030 s     128113 s    4449667 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DASSL                         1.0.0
 - JSON                          0.17.2
16 additional packages:
 - Compat                        0.63.0
 - DiffEqBase                    3.9.0
 - FactCheck                     0.4.3
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SimpleTraits                  0.6.0
 - StaticArrays                  0.7.0
 - TableTraits                   0.2.0
INFO: Computing test dependencies for DASSL...
INFO: Installing BinDeps v0.8.7
INFO: Installing Calculus v0.2.2
INFO: Installing Conda v0.7.1
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffEqBiological v2.1.0
INFO: Installing DiffEqJump v4.0.0
INFO: Installing DiffEqOperators v1.2.0
INFO: Installing DiffEqProblemLibrary v2.1.0
INFO: Installing Distributions v0.15.0
INFO: Installing Missings v0.2.9
INFO: Installing PDMats v0.8.0
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing QuadGK v0.2.1
INFO: Installing RandomNumbers v0.1.1
INFO: Installing Rmath v0.3.2
INFO: Installing SHA v0.5.6
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StatsBase v0.20.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.3.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building SymEngine
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Testing DASSL

WARNING: deprecated syntax "abstract Result" at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:46.
Use "abstract type Result end" instead.
Testing maxorder
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#16(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:155
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#17(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#16(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:156
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#17(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslSolve#16(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:157
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#17(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Task iteration is now deprecated. Use Channels for inter-task communication.  A for-loop on a Channel object is terminated by calling `close` on the object.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] start at ./deprecated.jl:986 [inlined]
 [3] #dasslSolve#16(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:161
 [4] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [5] #dasslSolve#17(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [6] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [7] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [8] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: consume is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] consume(::Task) at ./deprecated.jl:955
 [3] done at ./deprecated.jl:992 [inlined]
 [4] #dasslSolve#16(::Array{Float64,1}, ::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:161
 [5] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 [6] #dasslSolve#17(::Array{Any,1}, ::Function, ::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:174
 [7] (::DASSL.#kw##dasslSolve)(::Array{Any,1}, ::DASSL.#dasslSolve, ::Function, ::Float64, ::Array{Float64,1}) at ./<missing>:0
 [8] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:21
 [9] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:48
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Array{Float64,1}}, ::Int64) at ./deprecated.jl:57
 [3] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:50
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] dassl_weights(::Array{Float64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:589
 [4] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [5] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [6] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:692
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#29{DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#28{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: max(x::AbstractArray{T1}, y::AbstractArray{T2}) where {T1 <: Real, T2 <: Real} is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:57
 [3] max at ./operators.jl:424 [inlined]
 [4] (::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:692
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#29{DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#28{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [7] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] (::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:698
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#29{DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#28{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] newton_iteration(::DASSL.##30#33{DASSL.#f_newton#28{#F#17,Float64}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:543
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#29{DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#28{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:502
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:447
 [6] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##8#10{DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##9#11{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:454
 [4] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:65
 [5] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [6] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: produce is now deprecated. Use Channels for inter-task communication.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] produce(::Tuple{Float64,Array{Float64,1},Array{Float64,1}}) at ./deprecated.jl:909
 [3] #dasslStep#7(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#36{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:136
 [4] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] (::DASSL.##14#15{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:150
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:22
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:23
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
ERROR: LoadError: DimensionMismatch("Cannot left-divide transposed vector by matrix")
Stacktrace:
 [1] /(::Array{Float64,1}, ::Array{Float64,1}) at ./linalg/generic.jl:838
 [2] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:23
 [3] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
================================[ ERROR: DASSL ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.8.7
INFO: Removing Calculus v0.2.2
INFO: Removing Conda v0.7.1
INFO: Removing DataStructures v0.7.4
INFO: Removing DiffEqBiological v2.1.0
INFO: Removing DiffEqJump v4.0.0
INFO: Removing DiffEqOperators v1.2.0
INFO: Removing DiffEqProblemLibrary v2.1.0
INFO: Removing Distributions v0.15.0
INFO: Removing Missings v0.2.9
INFO: Removing PDMats v0.8.0
INFO: Removing ParameterizedFunctions v3.0.0
INFO: Removing QuadGK v0.2.1
INFO: Removing RandomNumbers v0.1.1
INFO: Removing Rmath v0.3.2
INFO: Removing SHA v0.5.6
INFO: Removing SortingAlgorithms v0.2.0
INFO: Removing SpecialFunctions v0.4.0
INFO: Removing StatsBase v0.20.1
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.3.0
INFO: Removing URIParser v0.3.1
ERROR: DASSL had test errors

>>> End of log
