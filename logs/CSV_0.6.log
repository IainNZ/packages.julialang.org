>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.6
INFO: Installing DataArrays v0.6.2
INFO: Installing DataFrames v0.10.0
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.6.1
INFO: Installing FileIO v0.5.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.18.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1285.09375 MB free)
Uptime: 34436.0 sec
Load Avg:  1.0693359375  1.03662109375  1.048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    2093814 s       6658 s      99569 s     744291 s         28 s
#2  3508 MHz     546226 s         75 s      52534 s    2784987 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.13.0
14 additional packages:
 - CategoricalArrays             0.1.6
 - Compat                        0.29.0
 - DataArrays                    0.6.2
 - DataFrames                    0.10.0
 - DataStreams                   0.1.3
 - DataStructures                0.6.1
 - FileIO                        0.5.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.2.0
 - StatsBase                     0.18.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
Test Summary: | Pass  Total
empty fields  |    1      1
Test Summary:          | Pass  Total
misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
quoted numbers detected as string column |    3      3
  1.206343 seconds (9.98 M allocations: 271.484 MiB, 11.15% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.6/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd"
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "/tmp/juliaY9mNaM", 0, false, String[], false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema{RowsAreKnown} where RowsAreKnown, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.6/CSV/test/datastreams.jl:15.
[2017-08-04T13:42:44.347]: Test high-level to sink from source; e.g. CSV.write
[2017-08-04T13:42:44.463]: Sink: CSV.Sink args => Source: DataFrame args
[2017-08-04T13:42:45.699]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-08-04T13:42:45.809]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-08-04T13:42:49.623]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-08-04T13:42:49.687]: Sink: CSV.Sink => Source: DataFrame args
[2017-08-04T13:42:49.799]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-08-04T13:42:49.906]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-08-04T13:42:50.002]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-08-04T13:42:50.066]: Sink: CSV.Sink args => Source: DataFrame
[2017-08-04T13:42:50.15]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-08-04T13:42:50.267]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-08-04T13:42:50.339]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-08-04T13:42:50.399]: Sink: CSV.Sink => Source: DataFrame
[2017-08-04T13:42:50.465]: Sink: CSV.Sink => Source: DataFrame + append
[2017-08-04T13:42:50.573]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-08-04T13:42:50.632]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-08-04T13:42:50.69]: finished...
[2017-08-04T13:42:50.706]: Test high-level from source to sink; e.g. CSV.read
[2017-08-04T13:42:50.706]: Source: CSV.Source args => Sink: DataFrame args
[2017-08-04T13:42:51.329]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-08-04T13:42:51.623]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-08-04T13:42:51.77]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-08-04T13:42:51.837]: Source: CSV.Source args => Sink: DataFrame
[2017-08-04T13:42:51.958]: Source: CSV.Source args => Sink: DataFrame + append
[2017-08-04T13:42:52.14]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-08-04T13:42:52.302]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-08-04T13:42:52.425]: Source: CSV.Source => Sink: DataFrame args
[2017-08-04T13:42:52.563]: Source: CSV.Source => Sink: DataFrame args + append
[2017-08-04T13:42:52.724]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-08-04T13:42:52.854]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-08-04T13:42:52.976]: Source: CSV.Source => Sink: DataFrame
[2017-08-04T13:42:53.108]: Source: CSV.Source => Sink: DataFrame + append
[2017-08-04T13:42:53.281]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-08-04T13:42:53.409]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-08-04T13:42:53.537]: Test high-level from source to sink; e.g. CSV.read
[2017-08-04T13:42:53.537]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-08-04T13:42:53.785]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-08-04T13:42:54.018]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-08-04T13:42:54.277]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-08-04T13:42:54.457]: Source: CSV.Source args => Sink: CSV.Sink
[2017-08-04T13:42:54.68]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-08-04T13:42:54.914]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-08-04T13:42:55.13]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-08-04T13:42:55.313]: Source: CSV.Source => Sink: CSV.Sink args
[2017-08-04T13:42:55.507]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-08-04T13:42:55.726]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-08-04T13:42:55.904]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-08-04T13:42:56.112]: Source: CSV.Source => Sink: CSV.Sink
[2017-08-04T13:42:56.32]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-08-04T13:42:56.566]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-08-04T13:42:56.751]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-08-04T13:42:56.94]: Test high-level to sink from source; e.g. CSV.write
[2017-08-04T13:42:56.94]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-08-04T13:42:57.163]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-08-04T13:42:57.398]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-08-04T13:42:57.595]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-08-04T13:42:57.78]: Sink: CSV.Sink => Source: CSV.Source args
[2017-08-04T13:42:57.978]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-08-04T13:42:58.214]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-08-04T13:42:58.425]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-08-04T13:42:58.625]: Sink: CSV.Sink args => Source: CSV.Source
[2017-08-04T13:42:58.817]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-08-04T13:42:59.047]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-08-04T13:42:59.25]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-08-04T13:42:59.467]: Sink: CSV.Sink => Source: CSV.Source
[2017-08-04T13:42:59.67]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-08-04T13:42:59.874]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-08-04T13:43:00.034]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-08-04T13:43:00.243]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
