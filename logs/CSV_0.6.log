>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.6
INFO: Installing DataArrays v0.6.2
INFO: Installing DataFrames v0.10.0
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.6.1
INFO: Installing FileIO v0.5.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.18.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSV")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1312.8359375 MB free)
Uptime: 33898.0 sec
Load Avg:  0.93994140625  0.97705078125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2112184 s       4738 s      91851 s     672217 s         30 s
#2  3499 MHz     466109 s         98 s      54929 s    2806570 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.13.0
14 additional packages:
 - CategoricalArrays             0.1.6
 - Compat                        0.28.0
 - DataArrays                    0.6.2
 - DataFrames                    0.10.0
 - DataStreams                   0.1.3
 - DataStructures                0.6.1
 - FileIO                        0.5.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.2.0
 - StatsBase                     0.18.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
Test Summary: | Pass  Total
empty fields  |    1      1
Test Summary:          | Pass  Total
misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
quoted numbers detected as string column |    3      3
  1.672646 seconds (9.98 M allocations: 271.484 MiB, 2.57% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.6/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd"
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "/tmp/juliaxy4HwB", 0, false, String[], false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema{RowsAreKnown} where RowsAreKnown, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.6/CSV/test/datastreams.jl:15.
[2017-08-01T13:38:45.343]: Test high-level to sink from source; e.g. CSV.write
[2017-08-01T13:38:45.45]: Sink: CSV.Sink args => Source: DataFrame args
[2017-08-01T13:38:46.61]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-08-01T13:38:46.698]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-08-01T13:38:50.326]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-08-01T13:38:50.362]: Sink: CSV.Sink => Source: DataFrame args
[2017-08-01T13:38:50.428]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-08-01T13:38:50.523]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-08-01T13:38:50.612]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-08-01T13:38:50.671]: Sink: CSV.Sink args => Source: DataFrame
[2017-08-01T13:38:50.737]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-08-01T13:38:50.849]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-08-01T13:38:50.896]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-08-01T13:38:50.952]: Sink: CSV.Sink => Source: DataFrame
[2017-08-01T13:38:51.018]: Sink: CSV.Sink => Source: DataFrame + append
[2017-08-01T13:38:51.12]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-08-01T13:38:51.181]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-08-01T13:38:51.241]: finished...
[2017-08-01T13:38:51.256]: Test high-level from source to sink; e.g. CSV.read
[2017-08-01T13:38:51.256]: Source: CSV.Source args => Sink: DataFrame args
[2017-08-01T13:38:51.649]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-08-01T13:38:51.914]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-08-01T13:38:52.134]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-08-01T13:38:52.248]: Source: CSV.Source args => Sink: DataFrame
[2017-08-01T13:38:52.451]: Source: CSV.Source args => Sink: DataFrame + append
[2017-08-01T13:38:52.637]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-08-01T13:38:52.79]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-08-01T13:38:52.893]: Source: CSV.Source => Sink: DataFrame args
[2017-08-01T13:38:53.009]: Source: CSV.Source => Sink: DataFrame args + append
[2017-08-01T13:38:53.145]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-08-01T13:38:53.253]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-08-01T13:38:53.358]: Source: CSV.Source => Sink: DataFrame
[2017-08-01T13:38:53.465]: Source: CSV.Source => Sink: DataFrame + append
[2017-08-01T13:38:53.61]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-08-01T13:38:53.715]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-08-01T13:38:53.819]: Test high-level from source to sink; e.g. CSV.read
[2017-08-01T13:38:53.819]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-08-01T13:38:54.03]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-08-01T13:38:54.223]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-08-01T13:38:54.446]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-08-01T13:38:54.607]: Source: CSV.Source args => Sink: CSV.Sink
[2017-08-01T13:38:54.802]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-08-01T13:38:55.012]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-08-01T13:38:55.203]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-08-01T13:38:55.364]: Source: CSV.Source => Sink: CSV.Sink args
[2017-08-01T13:38:55.535]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-08-01T13:38:55.728]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-08-01T13:38:55.891]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-08-01T13:38:56.056]: Source: CSV.Source => Sink: CSV.Sink
[2017-08-01T13:38:56.235]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-08-01T13:38:56.442]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-08-01T13:38:56.612]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-08-01T13:38:56.801]: Test high-level to sink from source; e.g. CSV.write
[2017-08-01T13:38:56.802]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-08-01T13:38:56.936]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-08-01T13:38:57.075]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-08-01T13:38:57.222]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-08-01T13:38:57.398]: Sink: CSV.Sink => Source: CSV.Source args
[2017-08-01T13:38:57.551]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-08-01T13:38:57.715]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-08-01T13:38:57.903]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-08-01T13:38:58.08]: Sink: CSV.Sink args => Source: CSV.Source
[2017-08-01T13:38:58.25]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-08-01T13:38:58.458]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-08-01T13:38:58.635]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-08-01T13:38:58.808]: Sink: CSV.Sink => Source: CSV.Source
[2017-08-01T13:38:58.989]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-08-01T13:38:59.197]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-08-01T13:38:59.373]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-08-01T13:38:59.55]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
