>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.4.0
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.6.0-pre.beta.445
Commit 41757ef (2017-05-01 00:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (597.734375 MB free)
Uptime: 30697.0 sec
Load Avg:  1.09130859375  1.01220703125  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1805203 s       5928 s      87668 s     724500 s         30 s
#2  3500 MHz     419321 s         98 s      50174 s    2541656 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.9.1
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.24.0
 - DataArrays                    0.4.0
 - DataFrames                    0.9.1
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.0
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
Test Summary: | Pass  Total
empty fields  |    1      1
Test Summary:          | Pass  Total
misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
quoted numbers detected as string column |    3      3
  1.066291 seconds (9.98 M allocations: 271.481 MiB, 3.26% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.6/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd"
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "/tmp/juliarjYkm6", 0, false, String[], false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema{RowsAreKnown} where RowsAreKnown, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.6/CSV/test/datastreams.jl:15.
[2017-05-01T12:55:09.692]: Test high-level to sink from source; e.g. CSV.write
[2017-05-01T12:55:09.798]: Sink: CSV.Sink args => Source: DataFrame args
[2017-05-01T12:55:10.661]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-05-01T12:55:10.723]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-05-01T12:55:13.205]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-05-01T12:55:13.242]: Sink: CSV.Sink => Source: DataFrame args
[2017-05-01T12:55:13.34]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-05-01T12:55:13.447]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-05-01T12:55:13.543]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-05-01T12:55:13.604]: Sink: CSV.Sink args => Source: DataFrame
[2017-05-01T12:55:13.681]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-05-01T12:55:13.744]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-05-01T12:55:13.798]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-05-01T12:55:13.834]: Sink: CSV.Sink => Source: DataFrame
[2017-05-01T12:55:13.876]: Sink: CSV.Sink => Source: DataFrame + append
[2017-05-01T12:55:13.939]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-05-01T12:55:13.974]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-05-01T12:55:14.01]: finished...
[2017-05-01T12:55:14.02]: Test high-level from source to sink; e.g. CSV.read
[2017-05-01T12:55:14.02]: Source: CSV.Source args => Sink: DataFrame args
[2017-05-01T12:55:14.44]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-05-01T12:55:14.618]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-05-01T12:55:14.758]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-05-01T12:55:14.824]: Source: CSV.Source args => Sink: DataFrame
[2017-05-01T12:55:14.943]: Source: CSV.Source args => Sink: DataFrame + append
[2017-05-01T12:55:15.054]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-05-01T12:55:15.142]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-05-01T12:55:15.209]: Source: CSV.Source => Sink: DataFrame args
[2017-05-01T12:55:15.291]: Source: CSV.Source => Sink: DataFrame args + append
[2017-05-01T12:55:15.381]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-05-01T12:55:15.452]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-05-01T12:55:15.52]: Source: CSV.Source => Sink: DataFrame
[2017-05-01T12:55:15.593]: Source: CSV.Source => Sink: DataFrame + append
[2017-05-01T12:55:15.688]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-05-01T12:55:15.774]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-05-01T12:55:15.851]: Test high-level from source to sink; e.g. CSV.read
[2017-05-01T12:55:15.852]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-05-01T12:55:16.053]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-05-01T12:55:16.261]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-05-01T12:55:16.482]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-05-01T12:55:16.632]: Source: CSV.Source args => Sink: CSV.Sink
[2017-05-01T12:55:16.828]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-05-01T12:55:17.024]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-05-01T12:55:17.224]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-05-01T12:55:17.411]: Source: CSV.Source => Sink: CSV.Sink args
[2017-05-01T12:55:17.607]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-05-01T12:55:17.831]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-05-01T12:55:18.024]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-05-01T12:55:18.216]: Source: CSV.Source => Sink: CSV.Sink
[2017-05-01T12:55:18.39]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-05-01T12:55:18.564]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-05-01T12:55:18.735]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-05-01T12:55:18.924]: Test high-level to sink from source; e.g. CSV.write
[2017-05-01T12:55:18.924]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-05-01T12:55:19.147]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-05-01T12:55:19.399]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-05-01T12:55:19.548]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-05-01T12:55:19.691]: Sink: CSV.Sink => Source: CSV.Source args
[2017-05-01T12:55:19.898]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-05-01T12:55:20.117]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-05-01T12:55:20.291]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-05-01T12:55:20.445]: Sink: CSV.Sink args => Source: CSV.Source
[2017-05-01T12:55:20.598]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-05-01T12:55:20.797]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-05-01T12:55:20.967]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-05-01T12:55:21.127]: Sink: CSV.Sink => Source: CSV.Source
[2017-05-01T12:55:21.31]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-05-01T12:55:21.523]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-05-01T12:55:21.697]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-05-01T12:55:21.868]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
