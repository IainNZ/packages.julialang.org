>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.5.2
INFO: Installing DataFrames v0.10.0
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.15.0
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (688.484375 MB free)
Uptime: 30671.0 sec
Load Avg:  1.03564453125  1.0263671875  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz    1929737 s        126 s      92509 s     550733 s         42 s
#2  3492 MHz     358372 s       6076 s      48625 s    2598516 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.12.0
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.25.2
 - DataArrays                    0.5.2
 - DataFrames                    0.10.0
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.1
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.15.0
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.3
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:238 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
Test Summary: | Pass  Total
empty fields  |    1      1
Test Summary:          | Pass  Total
misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
quoted numbers detected as string column |    3      3
  1.346021 seconds (9.98 M allocations: 271.481 MiB, 3.30% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.6/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd"
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "/tmp/juliaA5Z8OE", 0, false, String[], false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema{RowsAreKnown} where RowsAreKnown, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.6/CSV/test/datastreams.jl:15.
[2017-06-05T12:54:59.047]: Test high-level to sink from source; e.g. CSV.write
[2017-06-05T12:54:59.109]: Sink: CSV.Sink args => Source: DataFrame args
[2017-06-05T12:54:59.831]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-06-05T12:54:59.935]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-06-05T12:55:02.788]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-06-05T12:55:02.852]: Sink: CSV.Sink => Source: DataFrame args
[2017-06-05T12:55:02.968]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-06-05T12:55:03.061]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-06-05T12:55:03.159]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-06-05T12:55:03.226]: Sink: CSV.Sink args => Source: DataFrame
[2017-06-05T12:55:03.309]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-06-05T12:55:03.42]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-06-05T12:55:03.504]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-06-05T12:55:03.566]: Sink: CSV.Sink => Source: DataFrame
[2017-06-05T12:55:03.638]: Sink: CSV.Sink => Source: DataFrame + append
[2017-06-05T12:55:03.726]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-06-05T12:55:03.775]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-06-05T12:55:03.829]: finished...
[2017-06-05T12:55:03.843]: Test high-level from source to sink; e.g. CSV.read
[2017-06-05T12:55:03.843]: Source: CSV.Source args => Sink: DataFrame args
[2017-06-05T12:55:04.411]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-06-05T12:55:04.678]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-06-05T12:55:04.867]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-06-05T12:55:04.953]: Source: CSV.Source args => Sink: DataFrame
[2017-06-05T12:55:05.169]: Source: CSV.Source args => Sink: DataFrame + append
[2017-06-05T12:55:05.349]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-06-05T12:55:05.454]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-06-05T12:55:05.573]: Source: CSV.Source => Sink: DataFrame args
[2017-06-05T12:55:05.683]: Source: CSV.Source => Sink: DataFrame args + append
[2017-06-05T12:55:05.823]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-06-05T12:55:05.933]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-06-05T12:55:06.038]: Source: CSV.Source => Sink: DataFrame
[2017-06-05T12:55:06.148]: Source: CSV.Source => Sink: DataFrame + append
[2017-06-05T12:55:06.291]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-06-05T12:55:06.395]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-06-05T12:55:06.499]: Test high-level from source to sink; e.g. CSV.read
[2017-06-05T12:55:06.5]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-06-05T12:55:06.707]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-06-05T12:55:06.841]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-06-05T12:55:07.016]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-06-05T12:55:07.178]: Source: CSV.Source args => Sink: CSV.Sink
[2017-06-05T12:55:07.376]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-06-05T12:55:07.577]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-06-05T12:55:07.739]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-06-05T12:55:07.852]: Source: CSV.Source => Sink: CSV.Sink args
[2017-06-05T12:55:08.036]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-06-05T12:55:08.243]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-06-05T12:55:08.426]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-06-05T12:55:08.604]: Source: CSV.Source => Sink: CSV.Sink
[2017-06-05T12:55:08.797]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-06-05T12:55:09.013]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-06-05T12:55:09.198]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-06-05T12:55:09.382]: Test high-level to sink from source; e.g. CSV.write
[2017-06-05T12:55:09.382]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-06-05T12:55:09.602]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-06-05T12:55:09.836]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-06-05T12:55:10.039]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-06-05T12:55:10.229]: Sink: CSV.Sink => Source: CSV.Source args
[2017-06-05T12:55:10.437]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-06-05T12:55:10.67]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-06-05T12:55:10.866]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-06-05T12:55:11.064]: Sink: CSV.Sink args => Source: CSV.Source
[2017-06-05T12:55:11.249]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-06-05T12:55:11.475]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-06-05T12:55:11.647]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-06-05T12:55:11.777]: Sink: CSV.Sink => Source: CSV.Source
[2017-06-05T12:55:11.934]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-06-05T12:55:12.173]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-06-05T12:55:12.365]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-06-05T12:55:12.551]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.3
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
