>>> 'Pkg.add("CSV")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Installing CSV v0.1.4
INFO: Installing CategoricalArrays v0.1.3
INFO: Installing DataArrays v0.4.0
INFO: Installing DataFrames v0.9.0
INFO: Installing DataStreams v0.1.3
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GZip v0.3.0
INFO: Installing NullableArrays v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing WeakRefStrings v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CSV")' log
Julia Version 0.6.0-pre.beta.33
Commit 9ed7d82 (2017-04-05 21:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (566.78515625 MB free)
Uptime: 16141.0 sec
Load Avg:  0.98291015625  0.9853515625  1.02783203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     885982 s       7057 s      74310 s     441163 s         50 s
#2  3500 MHz     232341 s         85 s      39198 s    1306729 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CSV                           0.1.4
 - JSON                          0.8.3
14 additional packages:
 - CategoricalArrays             0.1.3
 - Compat                        0.22.0
 - DataArrays                    0.4.0
 - DataFrames                    0.9.0
 - DataStreams                   0.1.3
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - GZip                          0.3.0
 - NullableArrays                0.1.0
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for CSV...
INFO: Cloning cache of DataStreamsIntegrationTests from https://github.com/JuliaData/DataStreamsIntegrationTests.jl.git
INFO: Installing BufferedStreams v0.3.2
INFO: Installing DataStreamsIntegrationTests v0.0.2
INFO: Installing Libz v0.2.4
INFO: Testing CSV
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:244 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:244 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:244 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:244 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:128.
Test Summary: | Pass  Total
empty fields  |    1      1
Test Summary:          | Pass  Total
misformatted CSV lines |    4      4
Test Summary:                            | Pass  Total
quoted numbers detected as string column |    3      3
  1.094245 seconds (9.98 M allocations: 271.480 MiB, 3.27% gc time)
f = CSV.Source: /home/vagrant/.julia/v0.6/CSV/test/test_files/test_basic_pipe.csv
    CSV.Options:
        delim: '|'
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd"
Data.Schema{true}:
rows: 2	cols: 3
Columns:
 "col1"  Nullable{Int64}
 "col2"  Nullable{Int64}
 "col3"  Nullable{Int64}
f = CSV.Sink(    CSV.Options:
        delim: ','
        quotechar: '"'
        escapechar: '\\'
        null: ""
        dateformat: dateformat"yyyy-mm-dd", IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1), "/tmp/juliaDavRrE", 0, false, String[], false)
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema{RowsAreKnown} where RowsAreKnown, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:300 overwritten in module Main at /home/vagrant/.julia/v0.6/CSV/test/datastreams.jl:15.
[2017-04-06T08:52:53.895]: Test high-level to sink from source; e.g. CSV.write
[2017-04-06T08:52:53.986]: Sink: CSV.Sink args => Source: DataFrame args
[2017-04-06T08:52:54.711]: Sink: CSV.Sink args => Source: DataFrame args + append
[2017-04-06T08:52:54.773]: Sink: CSV.Sink args => Source: DataFrame args + transforms
[2017-04-06T08:52:56.252]: Sink: CSV.Sink args => Source: DataFrame args + append + transforms
[2017-04-06T08:52:56.287]: Sink: CSV.Sink => Source: DataFrame args
[2017-04-06T08:52:56.362]: Sink: CSV.Sink => Source: DataFrame args + append
[2017-04-06T08:52:56.46]: Sink: CSV.Sink => Source: DataFrame args + transforms
[2017-04-06T08:52:56.548]: Sink: CSV.Sink => Source: DataFrame args + append + transforms`
[2017-04-06T08:52:56.613]: Sink: CSV.Sink args => Source: DataFrame
[2017-04-06T08:52:56.704]: Sink: CSV.Sink args => Source: DataFrame + append
[2017-04-06T08:52:56.813]: Sink: CSV.Sink args => Source: DataFrame + transforms
[2017-04-06T08:52:56.894]: Sink: CSV.Sink args => Source: DataFrame + append + transforms
[2017-04-06T08:52:56.953]: Sink: CSV.Sink => Source: DataFrame
[2017-04-06T08:52:57.021]: Sink: CSV.Sink => Source: DataFrame + append
[2017-04-06T08:52:57.127]: Sink: CSV.Sink => Source: DataFrame + transforms
[2017-04-06T08:52:57.184]: Sink: CSV.Sink => Source: DataFrame + append + transforms
[2017-04-06T08:52:57.243]: finished...
[2017-04-06T08:52:57.258]: Test high-level from source to sink; e.g. CSV.read
[2017-04-06T08:52:57.259]: Source: CSV.Source args => Sink: DataFrame args
[2017-04-06T08:52:58.015]: Source: CSV.Source args => Sink: DataFrame args + append
[2017-04-06T08:52:58.194]: Source: CSV.Source args => Sink: DataFrame args + transforms
[2017-04-06T08:52:58.354]: Source: CSV.Source args => Sink: DataFrame args + append + transforms
[2017-04-06T08:52:58.422]: Source: CSV.Source args => Sink: DataFrame
[2017-04-06T08:52:58.668]: Source: CSV.Source args => Sink: DataFrame + append
[2017-04-06T08:52:58.856]: Source: CSV.Source args => Sink: DataFrame + transforms
[2017-04-06T08:52:59.01]: Source: CSV.Source args => Sink: DataFrame + append + transforms`
[2017-04-06T08:52:59.104]: Source: CSV.Source => Sink: DataFrame args
[2017-04-06T08:52:59.191]: Source: CSV.Source => Sink: DataFrame args + append
[2017-04-06T08:52:59.333]: Source: CSV.Source => Sink: DataFrame args + transforms
[2017-04-06T08:52:59.429]: Source: CSV.Source => Sink: DataFrame args + append + transforms
[2017-04-06T08:52:59.492]: Source: CSV.Source => Sink: DataFrame
[2017-04-06T08:52:59.564]: Source: CSV.Source => Sink: DataFrame + append
[2017-04-06T08:52:59.667]: Source: CSV.Source => Sink: DataFrame + transforms
[2017-04-06T08:52:59.737]: Source: CSV.Source => Sink: DataFrame + append + transforms
[2017-04-06T08:52:59.801]: Test high-level from source to sink; e.g. CSV.read
[2017-04-06T08:52:59.802]: Source: CSV.Source args => Sink: CSV.Sink args
[2017-04-06T08:52:59.948]: Source: CSV.Source args => Sink: CSV.Sink args + append
[2017-04-06T08:53:00.174]: Source: CSV.Source args => Sink: CSV.Sink args + transforms
[2017-04-06T08:53:00.402]: Source: CSV.Source args => Sink: CSV.Sink args + append + transforms
[2017-04-06T08:53:00.532]: Source: CSV.Source args => Sink: CSV.Sink
[2017-04-06T08:53:00.76]: Source: CSV.Source args => Sink: CSV.Sink + append
[2017-04-06T08:53:00.98]: Source: CSV.Source args => Sink: CSV.Sink + transforms
[2017-04-06T08:53:01.207]: Source: CSV.Source args => Sink: CSV.Sink + append + transforms`
[2017-04-06T08:53:01.386]: Source: CSV.Source => Sink: CSV.Sink args
[2017-04-06T08:53:01.578]: Source: CSV.Source => Sink: CSV.Sink args + append
[2017-04-06T08:53:01.798]: Source: CSV.Source => Sink: CSV.Sink args + transforms
[2017-04-06T08:53:01.976]: Source: CSV.Source => Sink: CSV.Sink args + append + transforms
[2017-04-06T08:53:02.168]: Source: CSV.Source => Sink: CSV.Sink
[2017-04-06T08:53:02.348]: Source: CSV.Source => Sink: CSV.Sink + append
[2017-04-06T08:53:02.577]: Source: CSV.Source => Sink: CSV.Sink + transforms
[2017-04-06T08:53:02.756]: Source: CSV.Source => Sink: CSV.Sink + append + transforms
[2017-04-06T08:53:02.887]: Test high-level to sink from source; e.g. CSV.write
[2017-04-06T08:53:02.887]: Sink: CSV.Sink args => Source: CSV.Source args
[2017-04-06T08:53:03.032]: Sink: CSV.Sink args => Source: CSV.Source args + append
[2017-04-06T08:53:03.182]: Sink: CSV.Sink args => Source: CSV.Source args + transforms
[2017-04-06T08:53:03.308]: Sink: CSV.Sink args => Source: CSV.Source args + append + transforms
[2017-04-06T08:53:03.463]: Sink: CSV.Sink => Source: CSV.Source args
[2017-04-06T08:53:03.661]: Sink: CSV.Sink => Source: CSV.Source args + append
[2017-04-06T08:53:03.85]: Sink: CSV.Sink => Source: CSV.Source args + transforms
[2017-04-06T08:53:04.039]: Sink: CSV.Sink => Source: CSV.Source args + append + transforms`
[2017-04-06T08:53:04.208]: Sink: CSV.Sink args => Source: CSV.Source
[2017-04-06T08:53:04.383]: Sink: CSV.Sink args => Source: CSV.Source + append
[2017-04-06T08:53:04.596]: Sink: CSV.Sink args => Source: CSV.Source + transforms
[2017-04-06T08:53:04.778]: Sink: CSV.Sink args => Source: CSV.Source + append + transforms
[2017-04-06T08:53:04.897]: Sink: CSV.Sink => Source: CSV.Source
[2017-04-06T08:53:05.024]: Sink: CSV.Sink => Source: CSV.Source + append
[2017-04-06T08:53:05.221]: Sink: CSV.Sink => Source: CSV.Source + transforms
[2017-04-06T08:53:05.396]: Sink: CSV.Sink => Source: CSV.Source + append + transforms
[2017-04-06T08:53:05.515]: finished...
INFO: CSV tests passed
INFO: Removing BufferedStreams v0.3.2
INFO: Removing DataStreamsIntegrationTests v0.0.2
INFO: Removing Libz v0.2.4

>>> End of log
