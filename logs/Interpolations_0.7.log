>>> 'Pkg.add("Interpolations")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing AxisAlgorithms v0.2.0
[ Info: Installing Calculus v0.3.0
[ Info: Installing DualNumbers v0.3.0
[ Info: Installing Interpolations v0.7.3
[ Info: Installing NaNMath v0.3.1
[ Info: Installing Ratios v0.2.0
[ Info: Installing ShowItLikeYouBuildIt v0.2.0
[ Info: Installing WoodburyMatrices v0.2.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Interpolations
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Interpolations")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4960
Commit 8770821e88 (2018-04-30 21:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3504 MHz    1865027 s        119 s     142042 s     466023 s         17 s
       #2  3504 MHz     416371 s       6819 s      54445 s    2379472 s          0 s
       
  Memory: 2.939197540283203 GB (1815.39453125 MB free)
  Uptime: 29079.0 sec
  Load Avg:  0.99560546875  0.998046875  1.02392578125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Interpolations                0.7.3
 - JSON                          0.17.2
9 additional packages:
 - AxisAlgorithms                0.2.0
 - Calculus                      0.3.0
 - Compat                        0.64.0
 - DualNumbers                   0.3.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - Ratios                        0.2.0
 - ShowItLikeYouBuildIt          0.2.0
 - WoodburyMatrices              0.2.2
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for Interpolations...
[ Info: Installing OffsetArrays v0.5.0
[ Info: Testing Interpolations
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Interpolations/test/runtests.jl:3
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Interpolations/test/extrapolation/runtests.jl:3
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = prefilter at prefiltering.jl:32 [inlined]
└ @ Core prefiltering.jl:32
┌ Warning: using similar(f, shape) to call `f` with axes `shape` is deprecated; call `f` directly and/or add methods such that it supports axes
│   caller = prefilter at prefiltering.jl:32 [inlined]
└ @ Core prefiltering.jl:32
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(undef, d)` instead.
│   caller = #59 at prefiltering.jl:32 [inlined]
└ @ Core prefiltering.jl:32
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = prefilter at prefiltering.jl:33 [inlined]
└ @ Core prefiltering.jl:33
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = Interpolations.BSplineInterpolation(::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Linear}, ::Interpolations.OnGrid, ::Val{0}) at b-splines.jl:21
└ @ Interpolations b-splines.jl:21
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = Interpolations.BSplineInterpolation(::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Linear}, ::Interpolations.OnGrid, ::Val{0}) at b-splines.jl:22
└ @ Interpolations b-splines.jl:22
ERROR: LoadError: LoadError: UndefVarError: Inference not defined
Stacktrace:
 [1] getproperty at ./sysimg.jl:13 [inlined]
 [2] Interpolations.BSplineInterpolation(::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Linear}, ::Interpolations.OnGrid, ::Val{0}) at /home/vagrant/.julia/v0.7/Interpolations/src/b-splines/b-splines.jl:28
 [3] interpolate(::Type{Float64}, ::Type{Float64}, ::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Linear}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.7/Interpolations/src/b-splines/b-splines.jl:74
 [4] interpolate(::Array{Float64,1}, ::Interpolations.BSpline{Interpolations.Linear}, ::Interpolations.OnGrid) at /home/vagrant/.julia/v0.7/Interpolations/src/b-splines/b-splines.jl:77
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include at ./sysimg.jl:29 [inlined]
 [9] include(::String) at /home/vagrant/.julia/v0.7/Interpolations/test/runtests.jl:1
 [10] top-level scope
 [11] include at ./boot.jl:314 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] exec_options(::Base.JLOptions) at ./client.jl:327
 [15] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/Interpolations/test/extrapolation/runtests.jl:11
in expression starting at /home/vagrant/.julia/v0.7/Interpolations/test/runtests.jl:8
┌ Error: ------------------------------------------------------------
│ # Testing failed for Interpolations
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Interpolations/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing OffsetArrays v0.5.0
ERROR: Interpolations had test errors

>>> End of log
