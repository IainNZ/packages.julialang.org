>>> 'Pkg.add("MINPACK")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of MINPACK from https://github.com/sglyon/MINPACK.jl.git
[ Info: Installing Distances v0.5.0
[ Info: Installing MINPACK v0.1.0
[ Info: Building MINPACK
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope at build.jl:4
└ @ Core build.jl:4
┌ Warning: `is_linux` is deprecated, use `Sys.islinux` instead.
│   caller = top-level scope at build.jl:11
└ @ Core build.jl:11
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   604    0   604    0     0   4005      0 --:--:-- --:--:-- --:--:--  4000
100  116k  100  116k    0     0   266k      0 --:--:-- --:--:-- --:--:--  266k
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MINPACK
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MINPACK")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4419
Commit 23453713d4 (2018-02-28 05:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    3405644 s         84 s     194254 s    1111383 s        104 s
       #2  3507 MHz     937046 s       6479 s     108404 s    4350661 s          0 s
       
  Memory: 2.93927001953125 GB (736.05859375 MB free)
  Uptime: 55160.0 sec
  Load Avg:  0.9970703125  0.98388671875  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.1
 - MINPACK                       0.1.0
3 additional packages:
 - Compat                        0.55.1
 - Distances                     0.5.0
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing MINPACK
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:35.
│ Use `struct` instead.
└ @ nothing runtests.jl:35
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:13.
│ Use `struct` instead.
└ @ nothing MINPACK.jl:13
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:24.
│ Use `mutable struct` instead.
└ @ nothing MINPACK.jl:24
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:83.
│ Use `struct` instead.
└ @ nothing MINPACK.jl:83
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.@printf into MINPACK.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:20
WARNING: importing deprecated binding Base.Void into MINPACK.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:49
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:51
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:51
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/MINPACK.jl:95
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:3
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:18
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:34
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:34
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:88
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:111
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:127
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:127
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:186
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:201
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:214
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:214
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:248
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:262
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:283
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:283
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:322
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:336
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:359
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:359
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:424
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:448
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:470
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:470
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:537
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:545
┌ Warning: `cfunction(f, r, a::Tuple)` is deprecated, use `cfunction(f, r, Tuple{a...})` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:547
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/src/wrappers.jl:547
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:2
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:78.
└ @ nothing runtests.jl:78
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:79.
└ @ nothing runtests.jl:79
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:94.
└ @ nothing runtests.jl:94
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:95.
└ @ nothing runtests.jl:95
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:96.
└ @ nothing runtests.jl:96
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:97.
└ @ nothing runtests.jl:97
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:127.
└ @ nothing runtests.jl:127
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:128.
└ @ nothing runtests.jl:128
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:129.
└ @ nothing runtests.jl:129
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:163.
└ @ nothing runtests.jl:163
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:238.
└ @ nothing runtests.jl:238
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:314.
└ @ nothing runtests.jl:314
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:355.
└ @ nothing runtests.jl:355
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:480.
└ @ nothing runtests.jl:480
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:481.
└ @ nothing runtests.jl:481
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in top-level scope at /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in top-level scope at /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in top-level scope at /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in top-level scope at /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl
Function                                          Dim    NFEV    NJEV   Final inf-norm     total time
--------------------------------------------------------------------------------------
WARNING: importing deprecated binding Base.STDOUT into MINPACK.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: importing deprecated binding Base.norm into MINPACK.
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.STDOUT is deprecated, use stdout instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in #fsolve at <missing>
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = push!(::MINPACK.AlgoTrace, ::Array{Float64,1}, ::Array{Float64,1}, ::Int32) at MINPACK.jl:77
└ @ MINPACK MINPACK.jl:77
Rosenbrock-hybr                                     2      16       3     0.000000e+00   1.022286e+00
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.STDOUT is deprecated, use stdout instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
in #fsolve at <missing>
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
Rosenbrock-hybr-no_g                                2      16       3     0.000000e+00   4.193546e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#9")), ::getfield(, Symbol("#g!#10")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Rosenbrock-lm                                       2      21      16     0.000000e+00   1.914599e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = lmdif1(::Function, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:292
└ @ MINPACK wrappers.jl:292
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = lmdif1(::Function, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:294
└ @ MINPACK wrappers.jl:294
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = lmdif1(::Function, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:295
└ @ MINPACK wrappers.jl:295
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
Rosenbrock-lm-no_g                                  2      22      16     0.000000e+00   1.222754e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Powell singular-hybr                                4     105       6     6.035768e-35   4.866602e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Powell singular-hybr-no_g                           4      96       3     1.378751e-34   3.209170e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#12")), ::getfield(, Symbol("#g!#13")), ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Powell singular-lm                                  4      59      58     6.090325e-34   1.919164e-01
Powell singular-lm-no_g                             4     235     192     1.080555e-23   4.682124e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Powell badly scaled-hybr                            2     169       6     1.712673e-09   6.779676e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Powell badly scaled-hybr-no_g                       2     169       6     1.712421e-09   4.224258e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#15")){Float64,Float64}, ::getfield(, Symbol("#g!#16")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Powell badly scaled-lm                              2      19      17     1.110223e-16   1.630977e-01
Powell badly scaled-lm-no_g                         2      19      17     0.000000e+00   5.248621e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Wood-hybr                                           4      86       2     3.364109e-11   4.367310e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Wood-hybr-no_g                                      4      86       2     3.373679e-11   3.111712e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#18")){Float64,Float64,Float64,Float64}, ::getfield(, Symbol("#g!#19")){Float64,Float64,Float64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Wood-lm                                             4      32      27     1.920686e-14   2.408509e-01
Wood-lm-no_g                                        4      32      27     1.310063e-14   8.777839e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Helical Valley-hybr                                 3      18       3     2.565742e-13   4.084104e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Helical Valley-hybr-no_g                            3      18       3     2.565742e-13   2.772345e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#21")){Float64,Float64,Float64}, ::getfield(, Symbol("#g!#22")){Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Helical Valley-lm                                   3      11       8     9.936523e-17   1.521301e-01
Helical Valley-lm-no_g                              3      11       8     8.661763e-17   3.503221e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Watson6-hybr                                        6      60       6     3.118270e-13   5.685607e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Watson6-hybr-no_g                                   6      60       6     2.739822e-13   2.736298e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#24")){Int64,Float64}, ::getfield(, Symbol("#g!#25")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Watson6-lm                                          6      45      37     1.582588e-14   2.373062e-01
Watson6-lm-no_g                                     6      45      37     6.992670e-15   1.154394e-01
Watson9-hybr                                        9      92       4     3.728515e-12   2.291046e-01
Watson9-hybr-no_g                                   9      95       8     1.715425e-15   2.168803e-01
Watson9-lm                                          9      64      50     2.631359e-14   1.705853e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Chebyquad-hybr                                      5      10       1     5.969114e-13   3.202526e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Chebyquad-hybr-no_g                                 5      12       1     3.567124e-12   1.420907e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#27")){Int64,Float64}, ::getfield(, Symbol("#g!#28")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Chebyquad-lm                                        5       8       6     1.665335e-16   1.561830e-01
Chebyquad-lm-no_g                                   5       8       6     1.249001e-16   2.920602e-02
Chebyquad-hybr                                      6      13       2     1.317492e-11   4.832084e-02
Chebyquad-hybr-no_g                                 6      13       2     6.447310e-10   3.320014e-02
Chebyquad-lm                                        6      11       7     2.324529e-16   5.479902e-02
Chebyquad-lm-no_g                                   6      11       7     1.249001e-16   3.613613e-02
Chebyquad-hybr                                      7      12       1     4.102544e-12   4.565790e-02
Chebyquad-hybr-no_g                                 7      14       1     2.108302e-10   3.339715e-02
Chebyquad-lm                                        7       9       7     1.665335e-16   4.684720e-02
Chebyquad-lm-no_g                                   7       9       7     2.696256e-16   2.900424e-02
Chebyquad-hybr                                      9      23       2     4.022407e-10   7.820966e-02
Chebyquad-hybr-no_g                                 9      23       2     3.988115e-09   6.071359e-02
Chebyquad-lm                                        9      12       9     2.343804e-16   6.210701e-02
Chebyquad-lm-no_g                                   9      12       9     1.727014e-16   3.942614e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
WARNING: Base.diagind is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.diagind is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.diagind is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Brown almost-linear10-hybr                         10      11       2     4.996004e-15   3.834056e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Brown almost-linear10-hybr-no_g                    10      11       2     5.995204e-15   1.118671e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#30")){Int64}, ::getfield(, Symbol("#g!#31")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Brown almost-linear10-lm                           10      15      13     5.551115e-16   1.121240e-01
Brown almost-linear10-lm-no_g                      10       7       5     1.000000e+00   1.482077e-02
Brown almost-linear30-hybr                         30      12       2     3.474998e-14   3.066001e-02
Brown almost-linear30-hybr-no_g                    30      24       3     2.953193e-14   4.488580e-02
Brown almost-linear30-lm                           30      19      14     1.654232e-14   7.745685e-02
Brown almost-linear30-lm-no_g                      30      11      10     1.354472e-14   3.730681e-02
Brown almost-linear40-hybr                         40      12       2     1.576517e-14   5.005509e-02
Brown almost-linear40-hybr-no_g                    40      30       3     2.353673e-14   7.358426e-02
Brown almost-linear40-lm                           40      19      14     2.409184e-14   8.013990e-02
Brown almost-linear40-lm-no_g                      40      11      10     7.327472e-15   3.843939e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Discrete boundary value-hybr                       10       6       1     1.582068e-15   3.219658e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Discrete boundary value-hybr-no_g                  10       6       1     1.582068e-15   8.893246e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#33")){Int64,Float64}, ::getfield(, Symbol("#g!#34")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Discrete boundary value-lm                         10       5       4     2.428613e-17   8.402606e-02
Discrete boundary value-lm-no_g                    10       5       4     3.122502e-17   1.391804e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Discrete integral equation-hybr                     1       6       1     2.775558e-17   2.543410e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Discrete integral equation-hybr-no_g                1       6       1     2.775558e-17   1.314758e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#37")){Int64,Float64}, ::getfield(, Symbol("#g!#38")){Int64,Float64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Discrete integral equation-lm                       1       5       4     0.000000e+00   1.334318e-01
Discrete integral equation-lm-no_g                  1       5       4     2.775558e-17   2.089586e-02
Discrete integral equation-hybr                    10       6       1     3.164136e-15   3.350126e-02
Discrete integral equation-hybr-no_g               10       6       1     3.219647e-15   1.773786e-02
Discrete integral equation-lm                      10       5       4     2.775558e-17   4.049451e-02
Discrete integral equation-lm-no_g                 10       5       4     5.551115e-17   2.183379e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#41")){Int64}, ::getfield(, Symbol("#g!#42")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Trigonometric-lm                                   10      28      16     4.295512e-03   6.207121e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Trigonometric-lm-no_g                              10      29      16     4.295461e-03   1.617563e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Variably dimensioned-hybr                          10      22       1     0.000000e+00   3.350369e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Variably dimensioned-hybr-no_g                     10      22       1     2.282952e-12   1.597580e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#44")){Int64}, ::getfield(, Symbol("#g!#45")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Variably dimensioned-lm                            10      16      15     0.000000e+00   2.552944e-01
Variably dimensioned-lm-no_g                       10      16      15     0.000000e+00   4.603660e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Broyden tridiagonal-hybr                           10      12       1     2.377046e-10   3.270754e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Broyden tridiagonal-hybr-no_g                      10      12       1     2.377046e-10   1.476154e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#48")){Int64}, ::getfield(, Symbol("#g!#49")){Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Broyden tridiagonal-lm                             10       6       5     4.440892e-16   1.426771e-01
Broyden tridiagonal-lm-no_g                        10       6       5     6.661338e-16   2.463323e-02
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:138
└ @ MINPACK wrappers.jl:138
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Integer) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:145
└ @ MINPACK wrappers.jl:145
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:146
└ @ MINPACK wrappers.jl:146
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:147
└ @ MINPACK wrappers.jl:147
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:148
└ @ MINPACK wrappers.jl:148
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:149
└ @ MINPACK wrappers.jl:149
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #hybrj#4(::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Array{Float64,1}, ::Int64, ::Float64, ::Int64, ::Int32, ::typeof(MINPACK.hybrj), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:150
└ @ MINPACK wrappers.jl:150
Broyden banded-hybr                                10      20       1     1.406736e-09   3.990390e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
Broyden banded-hybr-no_g                           10      20       1     1.406737e-09   1.565451e-01
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
WARNING: Base.norm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MINPACK/test/runtests.jl:40
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:484
└ @ MINPACK wrappers.jl:484
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:486
└ @ MINPACK wrappers.jl:486
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:487
└ @ MINPACK wrappers.jl:487
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at MINPACK.jl:44 [inlined]
└ @ Core MINPACK.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:492
└ @ MINPACK wrappers.jl:492
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(uninitialized, m, n)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:495
└ @ MINPACK wrappers.jl:495
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:496
└ @ MINPACK wrappers.jl:496
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:497
└ @ MINPACK wrappers.jl:497
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:498
└ @ MINPACK wrappers.jl:498
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:499
└ @ MINPACK wrappers.jl:499
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:500
└ @ MINPACK wrappers.jl:500
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = #lmder#6(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::typeof(MINPACK.lmder), ::getfield(, Symbol("#f!#51")){Int64,Int64,Int64}, ::getfield(, Symbol("#g!#52")){Int64,Int64,Int64}, ::Array{Float64,1}, ::Int64, ::Float64, ::Bool, ::Bool, ::Int64, ::Base.PipeEndpoint) at wrappers.jl:501
└ @ MINPACK wrappers.jl:501
Broyden banded-lm                                  10       7       6     4.440892e-16   1.474520e-01
Broyden banded-lm-no_g                             10       7       6     6.661338e-16   2.651750e-02
Test Summary: | Pass  Total
minpack       |   81     81
[ Info: MINPACK tests passed

>>> End of log
