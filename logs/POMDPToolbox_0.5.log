>>> 'Pkg.add("POMDPToolbox")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Distributions v0.12.5
INFO: Installing Iterators v0.3.1
INFO: Installing PDMats v0.6.0
INFO: Installing POMDPToolbox v0.1.0
INFO: Installing POMDPs v0.5.0
INFO: Installing ProgressMeter v0.3.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of POMDPToolbox
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("POMDPToolbox")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (689.67578125 MB free)
Uptime: 23392.0 sec
Load Avg:  0.94677734375  0.97314453125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1399542 s         57 s     151329 s     506765 s         44 s
#2  3500 MHz     412517 s       6444 s      66860 s    1802030 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - POMDPToolbox                  0.1.0
16 additional packages:
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - Distributions                 0.12.5
 - Iterators                     0.3.1
 - PDMats                        0.6.0
 - POMDPs                        0.5.0
 - ProgressMeter                 0.3.4
 - QuadGK                        0.1.2
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SpecialFunctions              0.1.1
 - StatsBase                     0.14.0
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for POMDPToolbox...
INFO: Installing AutoHashEquals v0.1.1
INFO: Installing LaTeXStrings v0.2.1
INFO: Installing POMDPModels v0.1.2
INFO: Installing TikzPictures v0.3.5
INFO: Building Rmath
INFO: Testing POMDPToolbox

INFO: POMDPs.jl requirements for simulate(::HistoryRecorder, ::POMDP, ::Policy, ::Updater, ::Any) and dependencies. ([✔] = implemented correctly; [X] = missing)

For simulate(::HistoryRecorder, ::POMDP, ::Policy, ::Updater, ::Any):
  [✔] rand(::MersenneTwister, ::BoolDistribution)
  [✔] initialize_belief(::VoidUpdater, ::BoolDistribution)
  [✔] isterminal(::BabyPOMDP, ::Bool)
  [✔] discount(::BabyPOMDP)
  [✔] generate_sor(::BabyPOMDP, ::Bool, ::Bool, ::MersenneTwister)
  [✔] action(::RandomPolicy, ::Void)
  [✔] update(::VoidUpdater, ::Void, ::Bool, ::Bool)


INFO: POMDPs.jl requirements for simulate(::HistoryRecorder, ::MDP, ::Policy, ::Any) and dependencies. ([✔] = implemented correctly; [X] = missing)

For simulate(::HistoryRecorder, ::MDP, ::Policy, ::Any):
  [✔] isterminal(::GridWorld, ::GridWorldState)
  [✔] action(::RandomPolicy, ::GridWorldState)
  [✔] generate_sr(::GridWorld, ::GridWorldState, ::Symbol, ::MersenneTwister)
  [✔] discount(::GridWorld)

WARNING: POMDPToolbox.SIRParticleUpdater is deprecated. Please use https://github.com/JuliaPOMDP/ParticleFilters.jl instead.
There should NOT be a warning between here
and here.
There should be a warning below.
WARNING: You are using a Distributions.Multinomial{Float64} distribution from Distributions.jl. This will work, but simulations will not be repeatable because Distributions.jl does not support arbitrary random number generators (i.e. there is no `rand(rng::AbstractRNG, d::Distributions.Multinomial{Float64})`)

For more information, or to encourage Distributions.jl to support this, see https://github.com/JuliaStats/Distributions.jl/issues/436

To disable this warning, use `rand(rng::AbstractRNG, d::Distributions.Multinomial{Float64}) = rand(d)` (you will still not be able to repeat simulations).

There should NOT be a warning between here
and here.
INFO: POMDPToolbox tests passed
INFO: Removing AutoHashEquals v0.1.1
INFO: Removing LaTeXStrings v0.2.1
INFO: Removing POMDPModels v0.1.2
INFO: Removing TikzPictures v0.3.5

>>> End of log
