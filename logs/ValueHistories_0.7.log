>>> 'Pkg.add("ValueHistories")' log
┌ Info: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ValueHistories v0.4.0           @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of ValueHistories
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4164762 s        205 s     204673 s     779060 s         12 s
       #2  3500 MHz     575415 s       7117 s      71112 s    5493915 s          0 s
       
  Memory: 2.93927001953125 GB (855.953125 MB free)
  Uptime: 62263.0 sec
  Load Avg:  0.923828125  0.96875  0.99169921875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - ValueHistories                0.4.0
5 additional packages:
 - Compat                        0.44.0
 - DataStructures                0.7.4
 - Nullables                     0.0.2
 - RecipesBase                   0.2.3
 - tmpheHvae                     0.0.0-             non-repo (unregistered)
[ Info: Testing ValueHistories                     @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/ValueHistories/test/runtests.jl:2
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = macro expansion at tst_history.jl:44 [inlined]
└                                                       @ Core tst_history.jl:44
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = History(::Type{String}, ::Type{UInt8}) at history.jl:7
└                                                  @ ValueHistories history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = History(::Type{String}, ::Type{UInt8}) at history.jl:7
└                                                  @ ValueHistories history.jl:7
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = get(::QHistory{Int64,Float64}) at qhistory.jl:42
└                                                @ ValueHistories qhistory.jl:42
QHistory
    types: UInt8, String
    length: 100
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = get(::QHistory{UInt8,String}) at qhistory.jl:42
└                                                @ ValueHistories qhistory.jl:42
Test Summary:       | Pass  Total
[->] tst_history.jl | 1028   1028
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
MVHistory{History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{History}
  :myint2 => 5 elements {Int64,Int64}
  :myf => 56 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = get(::MVHistory{History}, ::Symbol) at mvhistory.jl:57
└                                               @ ValueHistories mvhistory.jl:57
┌ Warning: `a::AbstractArray + b::Number` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = macro expansion at tst_mvhistory.jl:47 [inlined]
└                                                     @ Core tst_mvhistory.jl:47
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = get(::MVHistory{QHistory}, ::Symbol) at mvhistory.jl:57
└                                               @ ValueHistories mvhistory.jl:57
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = increment!(::MVHistory{History}, ::Symbol, ::Int64, ::Int64) at mvhistory.jl:110
└                                              @ ValueHistories mvhistory.jl:110
Test Summary:         | Pass  Total
[->] tst_mvhistory.jl |  543    543
   --> Baseline: 100 loops that accumulates a Float64
  0.019843 seconds (9.37 k allocations: 546.709 KiB)
  0.000008 seconds (5 allocations: 176 bytes)
   --> History: 100 loops tracking accumulator as Float64
  0.015486 seconds (9.31 k allocations: 545.289 KiB)
  0.000020 seconds (17 allocations: 4.547 KiB)
   --> History: Converting result into arrays
  0.000030 seconds (7 allocations: 256 bytes)
  0.000382 seconds (7 allocations: 256 bytes)
   --> QHistory: 100 loops tracking accumulator as Float64
  0.016042 seconds (9.30 k allocations: 540.805 KiB)
  0.000130 seconds (5 allocations: 176 bytes)
   --> QHistory: Converting result into arrays
  0.000714 seconds (996 allocations: 38.594 KiB)
  0.001003 seconds (996 allocations: 38.594 KiB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = Type at history.jl:7 [inlined]
└                                                            @ Core history.jl:7
  0.056890 seconds (37.52 k allocations: 2.225 MiB)
  0.000847 seconds (1.00 k allocations: 78.266 KiB)
   --> MVHistory: Converting result into arrays
  0.031752 seconds (5.00 k allocations: 312.732 KiB)
  0.000733 seconds (430 allocations: 24.625 KiB)
Test Summary:      |
[->] bm_history.jl | No tests
[ Info: ValueHistories tests passed                @ Base.Pkg.Entry entry.jl:737

>>> End of log
