>>> 'Pkg.add("OrdinaryDiffEq")' log
INFO: Installing Calculus v0.2.2
INFO: Installing Combinatorics v0.4.0
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.9.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.5.0
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Iterators v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v2.1.1
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NLSolversBase v2.1.1
INFO: Installing NLsolve v0.10.1
INFO: Installing NaNMath v0.2.5
INFO: Installing OrdinaryDiffEq v2.5.0
INFO: Installing Parameters v0.7.2
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing Ranges v0.0.1
INFO: Installing RealInterface v0.0.2
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing Roots v0.3.1
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Package database updated

>>> 'Pkg.test("OrdinaryDiffEq")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (862.02734375 MB free)
Uptime: 33623.0 sec
Load Avg:  0.99462890625  0.98095703125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2135030 s       6647 s      97609 s     594132 s         27 s
#2  3500 MHz     520544 s         78 s      52241 s    2721451 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - OrdinaryDiffEq                2.5.0
31 additional packages:
 - Calculus                      0.2.2
 - Combinatorics                 0.4.0
 - CommonSubexpressions          0.0.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.9.0
 - Distances                     0.4.1
 - ForwardDiff                   0.5.0
 - GenericSVD                    0.0.2
 - Hiccup                        0.1.1
 - Iterators                     0.3.1
 - Juno                          0.2.7
 - LineSearches                  2.1.1
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NLSolversBase                 2.1.1
 - NLsolve                       0.10.1
 - NaNMath                       0.2.5
 - Parameters                    0.7.2
 - PolynomialFactors             0.0.5
 - Polynomials                   0.1.5
 - Primes                        0.1.3
 - Ranges                        0.0.1
 - RealInterface                 0.0.2
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - Roots                         0.3.1
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
INFO: Computing test dependencies for OrdinaryDiffEq...
INFO: Cloning cache of DiffEqDevTools from https://github.com/JuliaDiffEq/DiffEqDevTools.jl.git
INFO: Cloning cache of SpecialMatrices from https://github.com/jiahao/SpecialMatrices.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.2.1
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqDevTools v0.8.1
INFO: Installing DiffEqPDEBase v0.3.2
INFO: Installing DiffEqProblemLibrary v0.7.0
INFO: Installing Distributions v0.13.0
INFO: Installing EllipsisNotation v0.1.0
INFO: Installing FileIO v0.3.1
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.2
INFO: Installing ODEInterface v0.1.2
INFO: Installing ODEInterfaceDiffEq v0.4.1
INFO: Installing PDMats v0.6.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing QuadGK v0.1.2
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.3
INFO: Installing SpecialMatrices v0.1.3
INFO: Installing StatsBase v0.15.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Installing Unitful v0.2.3
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building HDF5
INFO: Building ODEInterface
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4678.37:

      CALL BLDFSC ('INITIAL ', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)       
                                     1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4853.40:

         CALL BLDFSC ('ACCEPTED', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)    
                                        1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4678.37:

      CALL BLDFSC ('INITIAL ', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)       
                                     1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4853.40:

         CALL BLDFSC ('ACCEPTED', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)    
                                        1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
INFO: Testing OrdinaryDiffEq
Test Summary:  | Pass  Total
Discrete Tests |    9      9
 21.011012 seconds (9.94 M allocations: 1.336 GiB, 2.15% gc time)
Test Summary: |
Linear Tests  | No tests
  6.227515 seconds (2.65 M allocations: 507.736 MiB, 1.86% gc time)
Convergence Test on Linear
Special RKs
Convergence Test on Stiff
Special RKs
Convergence Test on Stiff
Test Summary:     | Pass  Total
Convergence Tests |   16     16
 30.617351 seconds (13.63 M allocations: 1.669 GiB, 2.90% gc time)
Test Summary:  | Pass  Total
Adaptive Tests |    2      2
  8.157428 seconds (2.98 M allocations: 480.468 MiB, 2.30% gc time)
Test Summary: | Pass  Total
Tstops Tests  |    6      6
  4.878018 seconds (2.50 M allocations: 501.401 MiB, 3.49% gc time)
Test Summary:   | Pass  Total
Backwards Tests |    4      4
  9.645027 seconds (3.19 M allocations: 317.172 MiB, 1.89% gc time)
Solve and Plot
Solve and Plot
Test Summary:    | Pass  Total
Initial Dt Tests |    7      7
  9.786846 seconds (3.60 M allocations: 554.618 MiB, 2.18% gc time)
Test Summary:    | Pass  Total
Rosenbrock Tests |   12     12
 23.312556 seconds (11.48 M allocations: 1.639 GiB, 4.28% gc time)
Test Summary:               | Pass  Total
Differentiation Trait Tests |    7      7
 14.876015 seconds (4.99 M allocations: 911.339 MiB, 2.49% gc time)
Test Summary:             | Pass  Total
Partitioned Methods Tests |    2      2
  7.694808 seconds (3.06 M allocations: 371.430 MiB, 2.40% gc time)
Test Summary:       | Pass  Total
Split Methods Tests |    4      4
  7.955026 seconds (2.72 M allocations: 432.860 MiB, 2.33% gc time)
Test Summary: | Pass  Total
SSPRK Tests   |   21     21
 55.777852 seconds (16.53 M allocations: 2.356 GiB, 3.07% gc time)
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Euler, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.Euler, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 87
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Midpoint, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.Midpoint, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 90
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.SSPRK22, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.SSPRK22, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 93
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.SSPRK33, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.SSPRK33, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 96
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.SSPRK104, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.SSPRK104, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 99
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.RK4, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.RK4, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 102
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.DP5, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.DP5, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 105
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.BS3, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.BS3, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 108
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Tsit5, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Tsit5, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 111
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.TanYam7, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.TanYam7, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 114
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.TsitPap8, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.TsitPap8, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 117
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Feagin10, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.Feagin10, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 120
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Vern6, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Vern6, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 123
WARNING: redefining constant linear_bigα
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.BS5, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.BS5, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 143
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Vern7, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Vern7, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 152
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Vern8, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Vern8, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 155
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Vern9, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Vern9, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 158
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!}}, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 161
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Rosenbrock32{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.Rosenbrock32{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 164
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.ImplicitEuler{OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.ImplicitEuler{OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 167
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.Trapezoid{OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.Trapezoid{OrdinaryDiffEq.NLSOLVEJL_SETUP{0,true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 170
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.DP8, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] (::#kw##regression_test)(::Array{Any,1}, ::#regression_test, ::OrdinaryDiffEq.DP8, ::Float64, ::Float64) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 173
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #44 at ./<missing>:0 [inlined]
 [4] macro expansion at ./broadcast.jl:153 [inlined]
 [5] macro expansion at ./simdloop.jl:73 [inlined]
 [6] macro expansion at ./broadcast.jl:147 [inlined]
 [7] _broadcast!(::##44#45, ::Array{Float64,1}, ::Tuple{Tuple{Bool}}, ::Tuple{Tuple{Int64}}, ::Array{Array{Float64,2},1}, ::Tuple{}, ::Type{Val{0}}, ::CartesianRange{CartesianIndex{1}}) at ./broadcast.jl:139
 [8] broadcast_t(::Function, ::Type{T} where T, ::Tuple{Base.OneTo{Int64}}, ::CartesianRange{CartesianIndex{1}}, ::Array{Array{Float64,2},1}) at ./broadcast.jl:268
 [9] broadcast_c at ./broadcast.jl:314 [inlined]
 [10] broadcast(::Function, ::Array{Array{Float64,2},1}) at ./broadcast.jl:434
 [11] #regression_test#43(::Bool, ::Function, ::OrdinaryDiffEq.ExplicitRK{DiffEqBase.ExplicitRKTableau{Array{Float64,2},Array{Float64,1},true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:45
 [12] regression_test(::OrdinaryDiffEq.ExplicitRK{DiffEqBase.ExplicitRKTableau{Array{Float64,2},Array{Float64,1},true}}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl:25
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] macro expansion at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:29 [inlined]
 [16] macro expansion at ./test.jl:856 [inlined]
 [17] macro expansion at ./util.jl:237 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:569
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 182
Test Summary: | Pass  Total
Dense Tests   |  148    148
132.708354 seconds (40.91 M allocations: 3.671 GiB, 1.57% gc time)
  0.000421 seconds (539 allocations: 50.234 KiB)
  0.000349 seconds (338 allocations: 22.719 KiB)
Test Summary:  | Pass  Total
In-Place Tests |    2      2
  6.984375 seconds (2.48 M allocations: 1.152 GiB, 18.40% gc time)
Test Summary:         | Pass  Total
Time Derivative Tests |   25     25
 77.173665 seconds (23.27 M allocations: 3.134 GiB, 2.27% gc time)
Test Summary: | Pass  Total
Events Tests  |    9      9
 47.682539 seconds (16.07 M allocations: 1.766 GiB, 2.60% gc time)
OrdinaryDiffEq.Euler()
OrdinaryDiffEq.Midpoint()
OrdinaryDiffEq.RK4()
OrdinaryDiffEq.SSPRK104()
OrdinaryDiffEq.SSPRK22()
OrdinaryDiffEq.SSPRK33()
OrdinaryDiffEq.BS3()
OrdinaryDiffEq.BS5()
OrdinaryDiffEq.DP5()
OrdinaryDiffEq.DP5Threaded()
OrdinaryDiffEq.DP8()
OrdinaryDiffEq.Feagin10()
OrdinaryDiffEq.Feagin12()
OrdinaryDiffEq.Feagin14()
OrdinaryDiffEq.TanYam7()
OrdinaryDiffEq.Tsit5()
OrdinaryDiffEq.TsitPap8()
OrdinaryDiffEq.Vern6()
OrdinaryDiffEq.Vern7()
OrdinaryDiffEq.Vern8()
OrdinaryDiffEq.Vern9()
Test Summary: |
Cache Tests   | No tests
 90.679039 seconds (42.57 M allocations: 3.625 GiB, 2.83% gc time)
Test Summary: | Pass  Total
saveat Tests  |   31     31
  8.749315 seconds (3.95 M allocations: 831.781 MiB, 5.02% gc time)
Test Summary:     | Pass  Total
Number Type Tests |    5      5
 15.299090 seconds (5.25 M allocations: 975.270 MiB, 3.76% gc time)
Test Summary:      |
Static Array Tests | No tests
 10.264600 seconds (3.75 M allocations: 497.143 MiB, 3.72% gc time)
Test Summary:    | Pass  Total
Data Array Tests |   10     10
 18.362406 seconds (5.74 M allocations: 804.053 MiB, 2.91% gc time)
Test Summary:      | Pass  Total
Ndim Complex Tests |    1      1
 11.502569 seconds (3.67 M allocations: 400.092 MiB, 6.80% gc time)
(tprev, t) = (0.0, 0.0625)
(tprev, t) = (0.0625, 0.2749005911245672)
(tprev, t) = (0.2749005911245672, 0.5)
(tprev, t) = (0.5, 0.8314901263174446)
(tprev, t) = (0.8314901263174446, 1.0)
Test Summary:  | Pass  Total
Iterator Tests |   14     14
 12.793260 seconds (3.03 M allocations: 435.122 MiB, 2.28% gc time)
  1.657139 seconds (697.92 k allocations: 109.768 MiB, 4.07% gc time)
  0.396883 seconds (320.38 k allocations: 91.049 MiB, 16.02% gc time)
Test Summary:             | Pass  Total
Composite Algorithm Tests |    3      3
  7.694958 seconds (3.07 M allocations: 526.788 MiB, 4.27% gc time)
elapsed time: 642.214871781 seconds
INFO: OrdinaryDiffEq tests passed
INFO: Removing BinDeps v0.6.0
INFO: Removing Blosc v0.2.1
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqDevTools v0.8.1
INFO: Removing DiffEqPDEBase v0.3.2
INFO: Removing DiffEqProblemLibrary v0.7.0
INFO: Removing Distributions v0.13.0
INFO: Removing EllipsisNotation v0.1.0
INFO: Removing FileIO v0.3.1
INFO: Removing HDF5 v0.8.1
INFO: Removing JLD v0.6.10
INFO: Removing LegacyStrings v0.2.2
INFO: Removing ODEInterface v0.1.2
INFO: Removing ODEInterfaceDiffEq v0.4.1
INFO: Removing PDMats v0.6.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing QuadGK v0.1.2
INFO: Removing Rmath v0.1.6
INFO: Removing SHA v0.3.3
INFO: Removing SpecialMatrices v0.1.3
INFO: Removing StatsBase v0.15.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.1.8
INFO: Removing Unitful v0.2.3
INFO: Removing VectorizedRoutines v0.0.2

>>> End of log
