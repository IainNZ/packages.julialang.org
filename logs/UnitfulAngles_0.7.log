>>> 'Pkg.add("UnitfulAngles")' log
[ Info: Cloning cache of UnitfulAngles from https://github.com/yakir12/UnitfulAngles.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Unitful v0.6.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing UnitfulAngles v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of UnitfulAngles
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("UnitfulAngles")' log
Julia Version 0.7.0-DEV.3309
Commit b96097b66f (2018-01-07 00:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4296251 s        112 s     208125 s     917726 s         32 s
       #2  3499 MHz     735494 s        101 s      74106 s    5541244 s          0 s
       
  Memory: 2.93927001953125 GB (801.82421875 MB free)
  Uptime: 64389.0 sec
  Load Avg:  0.9970703125  1.0146484375  0.99560546875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - UnitfulAngles                 0.1.0
4 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
 - Unitful                       0.6.1
 - tmpKrnEES                     0.0.0-             non-repo (unregistered)
[ Info: Testing UnitfulAngles @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(halfTurn)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:31.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(halfTurn)}) where T` instead.
└ @ nothing UnitfulAngles.jl:31
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:32.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:32
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax cos{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `cos(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(halfTurn)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:31.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(halfTurn)}) where T` instead.
└ @ nothing UnitfulAngles.jl:31
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:32.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:32
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax sin{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:34.
│ Use `sin(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:34
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:40.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:40
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax tan{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `tan(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:40.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:40
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax sec{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `sec(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:40.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:40
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax csc{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `csc(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(diameterPart)})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:40.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(diameterPart)}) where T` instead.
└ @ nothing UnitfulAngles.jl:40
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
┌ Warning: Deprecated syntax `parametric method syntax cot{T}(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:42.
│ Use `cot(x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:42
WARNING: importing deprecated binding Base.Dates into UnitfulAngles.
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:DiameterPart, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:DiameterPart, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Degree, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Degree, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Radian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Radian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Turn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HalfTurn, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Quadrant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Sextant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Octant, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:ClockPosition, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:HourAngle, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:CompassPoint, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Hexacontade, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:BinaryRadian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Gradian, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcminute, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:59
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())})` around /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65.
│ Use `convert(#unused#::Type{Dates.Time}, x::Quantity{T, typeof(NoDims), typeof(Unitful.FreeUnits{(Unitful.Unit{:Arcsecond, Unitful.Dimensions{()}}(tens=0, power=Base.Rational{Int64}(num=1, den=1)),), Unitful.Dimensions{()}}())}) where T` instead.
└ @ nothing UnitfulAngles.jl:65
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/src/UnitfulAngles.jl:65
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/UnitfulAngles/test/runtests.jl:3
ERROR: LoadError: LoadError: Symbol turn could not be found in registered unit modules.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] replace_value(::Symbol) at /home/vagrant/.julia/v0.7/Unitful/src/user.jl:494
 [3] @u_str(::LineNumberNode, ::Module, ::Any) at /home/vagrant/.julia/v0.7/Unitful/src/user.jl:462
 [4] include at ./boot.jl:295 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:521
 [6] include(::Module, ::String) at ./sysimg.jl:26
 [7] process_options(::Base.JLOptions) at ./client.jl:324
 [8] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/UnitfulAngles/test/runtests.jl:5
in expression starting at /home/vagrant/.julia/v0.7/UnitfulAngles/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for UnitfulAngles
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/UnitfulAngles/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: UnitfulAngles had test errors

>>> End of log
