>>> 'Pkg.add("GeneticVariation")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Automa from https://github.com/BioJulia/Automa.jl.git
[ Info: Cloning cache of BGZFStreams from https://github.com/BioJulia/BGZFStreams.jl.git
[ Info: Cloning cache of BioCore from https://github.com/BioJulia/BioCore.jl.git
[ Info: Cloning cache of BioSequences from https://github.com/BioJulia/BioSequences.jl.git
[ Info: Cloning cache of BioSymbols from https://github.com/BioJulia/BioSymbols.jl.git
[ Info: Cloning cache of Combinatorics from https://github.com/JuliaMath/Combinatorics.jl.git
[ Info: Cloning cache of GeneticVariation from https://github.com/BioJulia/GeneticVariation.jl.git
[ Info: Cloning cache of IndexableBitVectors from https://github.com/BioJulia/IndexableBitVectors.jl.git
[ Info: Cloning cache of IntervalTrees from https://github.com/BioJulia/IntervalTrees.jl.git
[ Info: Cloning cache of Polynomials from https://github.com/JuliaMath/Polynomials.jl.git
[ Info: Cloning cache of Twiddle from https://github.com/Ward9250/Twiddle.jl.git
[ Info: Installing Automa v0.6.1
[ Info: Installing BGZFStreams v0.1.4
[ Info: Installing BioCore v1.3.0
[ Info: Installing BioSequences v0.8.3
[ Info: Installing BioSymbols v2.0.0
[ Info: Installing BufferedStreams v0.4.0
[ Info: Installing Combinatorics v0.6.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing GeneticVariation v0.3.1
[ Info: Installing IndexableBitVectors v0.1.2
[ Info: Installing IntervalTrees v0.4.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing Libz v0.2.4
[ Info: Installing Polynomials v0.3.0
[ Info: Installing TranscodingStreams v0.5.2
[ Info: Installing Twiddle v0.4.0
[ Info: Package database updated

>>> 'Pkg.test("GeneticVariation")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4931
Commit de705f3b69 (2018-04-22 20:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     250737 s         99 s      20727 s      94073 s          2 s
       #2  3499 MHz      39684 s         48 s       7031 s     366826 s          0 s
       
  Memory: 2.939197540283203 GB (694.46875 MB free)
  Uptime: 4194.0 sec
  Load Avg:  0.9697265625  0.9599609375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - GeneticVariation              0.3.1
 - JSON                          0.17.2
17 additional packages:
 - Automa                        0.6.1
 - BGZFStreams                   0.1.4
 - BioCore                       1.3.0
 - BioSequences                  0.8.3
 - BioSymbols                    2.0.0
 - BufferedStreams               0.4.0
 - Combinatorics                 0.6.0
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - IndexableBitVectors           0.1.2
 - IntervalTrees                 0.4.1
 - IterTools                     0.2.1
 - Libz                          0.2.4
 - Nullables                     0.0.5
 - Polynomials                   0.3.0
 - TranscodingStreams            0.5.2
 - Twiddle                       0.4.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for GeneticVariation...
[ Info: Cloning cache of YAML from https://github.com/dcjones/YAML.jl.git
[ Info: Installing Codecs v0.4.0
[ Info: Installing YAML v0.2.1
[ Info: Testing GeneticVariation
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/GeneticVariation/test/runtests.jl:3
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/BioCore/src/Exceptions.jl:11.
│ Use `struct` instead.
└ @ nothing Exceptions.jl:11
┌ Warning: Deprecated syntax `parametric method syntax Base.open{T <: AbstractFormattedIO}(f::Function, ::Type{T}, args...; kwargs...)` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:41.
│ Use `Base.open(f::Function, #s1::Type{T}, args...; kwargs...) where T <: AbstractFormattedIO` instead.
└ @ nothing IO.jl:41
┌ Warning: Deprecated syntax `parametric method syntax Base.iteratorsize{T <: AbstractReader}(::Type{T})` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:57.
│ Use `Base.iteratorsize(#unused#::Type{T}) where T <: AbstractReader` instead.
└ @ nothing IO.jl:57
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:57
┌ Warning: Deprecated syntax `parametric method syntax Base.open{T <: AbstractReader}(::Type{T}, filepath::AbstractString, args...; kwargs...)` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:60.
│ Use `Base.open(#s6::Type{T}, filepath::AbstractString, args...; kwargs...) where T <: AbstractReader` instead.
└ @ nothing IO.jl:60
┌ Warning: Deprecated syntax `parametric method syntax Base.open{T <: AbstractWriter}(::Type{T}, filepath::AbstractString, args...; kwargs...)` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:72.
│ Use `Base.open(#s6::Type{T}, filepath::AbstractString, args...; kwargs...) where T <: AbstractWriter` instead.
└ @ nothing IO.jl:72
┌ Warning: Deprecated syntax `parametric method syntax Base.open{F <: FileFormat}(::AbstractString, ::Type{F})` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:87.
│ Use `Base.open(#unused#::AbstractString, #unused#::Type{F}) where F <: FileFormat` instead.
└ @ nothing IO.jl:87
┌ Warning: Deprecated syntax `parametric method syntax Base.open{F <: FileFormat}(::AbstractString, ::AbstractString, ::Type{F})` around /home/vagrant/.julia/v0.7/BioCore/src/IO.jl:91.
│ Use `Base.open(#unused#::AbstractString, #unused#::AbstractString, #unused#::Type{F}) where F <: FileFormat` instead.
└ @ nothing IO.jl:91
WARNING: importing deprecated binding Base.Void into Mem.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/Mem.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/Mem.jl:10
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/Mem.jl:10
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BioCore/src/Ragel.jl:17.
│ Use `mutable struct` instead.
└ @ nothing Ragel.jl:17
WARNING: importing deprecated binding Base.Void into RecordHelper.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/RecordHelper.jl:11
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/RecordHelper.jl:11
┌ Warning: Deprecated syntax `parametric method syntax unsafe_parse_decimal{T <: Unsigned}(::Type{T}, data::Vector{UInt8}, range::UnitRange{Int})` around /home/vagrant/.julia/v0.7/BioCore/src/RecordHelper.jl:21.
│ Use `unsafe_parse_decimal(#unused#::Type{T}, data::Vector{UInt8}, range::UnitRange{Int}) where T <: Unsigned` instead.
└ @ nothing RecordHelper.jl:21
┌ Warning: Deprecated syntax `parametric method syntax unsafe_parse_decimal{T <: Signed}(::Type{T}, data::Vector{UInt8}, range::UnitRange{Int})` around /home/vagrant/.julia/v0.7/BioCore/src/RecordHelper.jl:31.
│ Use `unsafe_parse_decimal(#unused#::Type{T}, data::Vector{UInt8}, range::UnitRange{Int}) where T <: Signed` instead.
└ @ nothing RecordHelper.jl:31
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BioCore/src/StringFields.jl:18.
│ Use `mutable struct` instead.
└ @ nothing StringFields.jl:18
WARNING: importing deprecated binding Base.Void into StringFields.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/StringFields.jl:148
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/StringFields.jl:148
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/StringFields.jl:163
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/BioCore/src/StringFields.jl:163
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Vector{T}(m::Integer) where T` is deprecated, use `Vector{T}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.rank into IndexableBitVectors.
┌ Warning: Deprecated syntax `parametric method syntax bitat{T <: Unsigned}(::Type{T}, chunk::T, i::Int)` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/utils.jl:3.
│ Use `bitat(#unused#::Type{T}, chunk::T, i::Int) where T <: Unsigned` instead.
└ @ nothing utils.jl:3
┌ Warning: Deprecated syntax `parametric method syntax bitsof{T <: Unsigned}(::Type{T})` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/utils.jl:6.
│ Use `bitsof(#unused#::Type{T}) where T <: Unsigned` instead.
└ @ nothing utils.jl:6
┌ Warning: Deprecated syntax `parametric method syntax lmask{T <: Unsigned}(typ::Type{T}, n::Int)` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/utils.jl:11.
│ Use `lmask(typ::Type{T}, n::Int) where T <: Unsigned` instead.
└ @ nothing utils.jl:11
┌ Warning: Deprecated syntax `parametric method syntax rmask{T <: Unsigned}(typ::Type{T}, n::Int)` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/utils.jl:12.
│ Use `rmask(typ::Type{T}, n::Int) where T <: Unsigned` instead.
└ @ nothing utils.jl:12
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/compactbitvector.jl:25.
│ Use `mutable struct` instead.
└ @ nothing compactbitvector.jl:25
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/compactbitvector.jl:48.
│ Use `struct` instead.
└ @ nothing compactbitvector.jl:48
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/compactbitvector.jl:49.
│ Use `struct` instead.
└ @ nothing compactbitvector.jl:49
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/sucvector.jl:11.
│ Use `struct` instead.
└ @ nothing sucvector.jl:11
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/sucvector.jl:58.
│ Use `mutable struct` instead.
└ @ nothing sucvector.jl:58
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:31.
│ Use `struct` instead.
└ @ nothing rrr.jl:31
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:53.
│ Use `mutable struct` instead.
└ @ nothing rrr.jl:53
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:118.
│ Use `mutable struct` instead.
└ @ nothing rrr.jl:118
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:385.
│ Use `struct` instead.
└ @ nothing rrr.jl:385
┌ Warning: Deprecated syntax `parametric method syntax make_rrr{T <: Union{RRR, LargeRRR}}(::Type{T}, src::AbstractVector{Bool})` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:182.
│ Use `make_rrr(#unused#::Type{T}, src::AbstractVector{Bool}) where T <: Union{RRR, LargeRRR}` instead.
└ @ nothing rrr.jl:182
┌ Warning: Deprecated syntax `parametric method syntax read_rindex{T <: Unsigned}(rs::Vector{T}, offset::Int, len::Int)` around /home/vagrant/.julia/v0.7/IndexableBitVectors/src/rrr.jl:301.
│ Use `read_rindex(rs::Vector{T}, offset::Int, len::Int) where T <: Unsigned` instead.
└ @ nothing rrr.jl:301
WARNING: Base.rank is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/IndexableBitVectors/src/derived.jl:8
WARNING: importing deprecated binding Base.Range into IntervalTrees.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/IntervalTrees/src/IntervalTrees.jl:43
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/IntervalTrees/src/IntervalTrees.jl:44
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/IntervalTrees/src/IntervalTrees.jl:57
WARNING: importing deprecated binding Base.Nullable into IntervalTrees.
ERROR: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:314 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] top-level scope
 [6] eval at ./boot.jl:317 [inlined]
 [7] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/IntervalTrees/src/IntervalTrees.jl:86
ERROR: LoadError: Failed to precompile IntervalTrees to /home/vagrant/.julia/compiled/v0.7/IntervalTrees.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:974
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:317 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BioSequences/src/BioSequences.jl:197
ERROR: LoadError: Failed to precompile BioSequences to /home/vagrant/.julia/compiled/v0.7/BioSequences.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/GeneticVariation/test/runtests.jl:9
┌ Error: ------------------------------------------------------------
│ # Testing failed for GeneticVariation
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/GeneticVariation/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing Codecs v0.4.0
[ Info: Removing YAML v0.2.1
ERROR: GeneticVariation had test errors

>>> End of log
