>>> 'Pkg.add("Unmarshal")' log
[ Info: Cloning cache of Unmarshal from https://github.com/lwabeke/Unmarshal.jl.git
[ Info: Installing Unmarshal v0.0.4
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Unmarshal
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Unmarshal")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    4221269 s       7349 s     206787 s     867169 s         34 s
       #2  3499 MHz     715550 s         50 s      62140 s    5404764 s          0 s
       
  Memory: 2.93927001953125 GB (1006.12890625 MB free)
  Uptime: 62774.0 sec
  Load Avg:  1.01123046875  1.0166015625  1.00830078125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Unmarshal                     0.0.4
3 additional packages:
 - Compat                        0.48.0
 - Nullables                     0.0.3
 - tmpZJ69XI                     0.0.0-             non-repo (unregistered)
[ Info: Computing test dependencies for Unmarshal...
[ Info: No packages to install, update or remove
[ Info: Testing Unmarshal
┌ Warning: Deprecated syntax `((unmarshal(fieldtype(T, 1), field, verbose, verboseLvl) for field = parsedJson)...)` at /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:106.
│ Use `((unmarshal(fieldtype(T, 1), field, verbose, verboseLvl) for field = parsedJson)...,)` instead.
└ @ nothing Unmarshal.jl:106
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{E}(::Type{Vector{E}}, parsedJson::Vector, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:46.
│ Use `unmarshal(#s1::Type{Vector{E}}, parsedJson::Vector, verbose::Bool = false, verboseLvl::Int = 0) where E` instead.
└ @ nothing Unmarshal.jl:46
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{E}(::Type{Array{E}}, xs::Vector, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:54.
│ Use `unmarshal(#s1::Type{Array{E}}, xs::Vector, verbose::Bool = false, verboseLvl::Int = 0) where E` instead.
└ @ nothing Unmarshal.jl:54
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{E, N}(::Type{Array{E, N}}, parsedJson::Vector, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:57.
│ Use `unmarshal(#s1::Type{Array{E, N}}, parsedJson::Vector, verbose::Bool = false, verboseLvl::Int = 0) where {E, N}` instead.
└ @ nothing Unmarshal.jl:57
WARNING: importing deprecated binding Base.Associative into Unmarshal.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:66
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:66
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:66
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{T <: Tuple, N}(DT::Type{T}, parsedJson::Array{Any, N}, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:101.
│ Use `unmarshal(DT::Type{T}, parsedJson::Array{Any, N}, verbose::Bool = false, verboseLvl::Int = 0) where {T <: Tuple, N}` instead.
└ @ nothing Unmarshal.jl:101
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{T <: Number}(::Type{T}, x::Number, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:109.
│ Use `unmarshal(#s1::Type{T}, x::Number, verbose::Bool = false, verboseLvl::Int = 0) where T <: Number` instead.
└ @ nothing Unmarshal.jl:109
┌ Warning: Deprecated syntax `parametric method syntax unmarshal{T}(::Type{Nullable{T}}, x, verbose::Bool = false, verboseLvl::Int = 0)` around /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:110.
│ Use `unmarshal(#s1::Type{Nullable{T}}, x, verbose::Bool = false, verboseLvl::Int = 0) where T` instead.
└ @ nothing Unmarshal.jl:110
WARNING: importing deprecated binding Base.Nullable into Unmarshal.
ERROR: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1011
 [4] _require(::Base.PkgId) at ./loading.jl:938
 [5] require(::Module, ::Symbol) at ./loading.jl:819
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1011
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Unmarshal/src/Unmarshal.jl:110
in expression starting at /home/vagrant/.julia/v0.7/Unmarshal/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Unmarshal
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Unmarshal/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
[ Info: No packages to install, update or remove
ERROR: Unmarshal had test errors

>>> End of log
