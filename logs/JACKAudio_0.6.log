>>> 'Pkg.add("JACKAudio")' log
INFO: Cloning cache of JACKAudio from https://github.com/JuliaAudio/JACKAudio.jl.git
INFO: Cloning cache of SampledSignals from https://github.com/JuliaAudio/SampledSignals.jl.git
INFO: Installing AbstractFFTs v0.2.0
INFO: Installing BinDeps v0.6.0
INFO: Installing DSP v0.3.2
INFO: Installing FFTW v0.0.2
INFO: Installing FixedPointNumbers v0.3.8
INFO: Installing JACKAudio v0.1.1
INFO: Installing Polynomials v0.1.5
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.3
INFO: Installing SIUnits v0.1.0
INFO: Installing SampledSignals v1.0.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing TexExtensions v0.1.0
INFO: Installing URIParser v0.1.8
INFO: Building FFTW
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/FFTW/deps/build.jl:73
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JACKAudio
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JACKAudio")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1498.25 MB free)
Uptime: 76252.0 sec
Load Avg:  1.02783203125  1.001953125  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4857902 s       1196 s     216846 s    1373394 s         43 s
#2  3500 MHz    1363857 s       6129 s     135151 s    5978077 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JACKAudio                     0.1.1
 - JSON                          0.13.0
14 additional packages:
 - AbstractFFTs                  0.2.0
 - BinDeps                       0.6.0
 - Compat                        0.27.0
 - DSP                           0.3.2
 - FFTW                          0.0.2
 - FixedPointNumbers             0.3.8
 - Polynomials                   0.1.5
 - Reexport                      0.0.3
 - SHA                           0.3.3
 - SIUnits                       0.1.0
 - SampledSignals                1.0.0
 - SpecialFunctions              0.2.0
 - TexExtensions                 0.1.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for JACKAudio...
INFO: Installing BaseTestNext v0.2.2
INFO: Testing JACKAudio
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.

WARNING: deprecated syntax "typealias ClientPtr Ptr{Void}" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:2.
Use "const ClientPtr = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias PortPtr Ptr{Void}" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:3.
Use "const PortPtr = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias CFunPtr Ptr{Void}" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:4.
Use "const CFunPtr = Ptr{Void}" instead.

WARNING: deprecated syntax "typealias NFrames UInt32" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:5.
Use "const NFrames = UInt32" instead.

WARNING: deprecated syntax "typealias JACKSample Cfloat" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:6.
Use "const JACKSample = Cfloat" instead.

WARNING: deprecated syntax "typealias RingBufPtr Ptr{RingBuf}" at /home/vagrant/.julia/v0.6/JACKAudio/src/libjack.jl:20.
Use "const RingBufPtr = Ptr{RingBuf}" instead.
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:521
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:81
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:81
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:81
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:81
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl:521
ERROR: LoadError: UndefVarError: SingleAsyncWork not defined
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:569
 [2] include(::String) at ./sysimg.jl:14
 [3] anonymous at ./<missing>:2
while loading /home/vagrant/.julia/v0.6/JACKAudio/src/JACKAudio.jl, in expression starting on line 521
ERROR: LoadError: Failed to precompile JACKAudio to /home/vagrant/.julia/lib/v0.6/JACKAudio.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:703
 [2] _require(::Symbol) at ./loading.jl:490
 [3] require(::Symbol) at ./loading.jl:398
 [4] include_from_node1(::String) at ./loading.jl:569
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/JACKAudio/test/runtests.jl, in expression starting on line 11
==============================[ ERROR: JACKAudio ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/JACKAudio/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
ERROR: JACKAudio had test errors

>>> End of log
