>>> 'Pkg.add("JavaCall")' log
INFO: Cloning cache of JavaCall from https://github.com/JuliaInterop/JavaCall.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing JavaCall v0.5.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JavaCall
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JavaCall")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1477.1015625 MB free)
Uptime: 76640.0 sec
Load Avg:  1.0078125  1.02783203125  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4939954 s         89 s     228040 s    1318903 s         42 s
#2  3500 MHz    1245271 s       6133 s     123779 s    6162175 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - JavaCall                      0.5.0
2 additional packages:
 - Compat                        0.26.0
 - DataStructures                0.5.3
INFO: Testing JavaCall

WARNING: deprecated syntax "inner constructor JavaObject(...) around /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:30".
Use "JavaObject{T}(...) where T" instead.

WARNING: deprecated syntax "inner constructor JavaObject(...) around /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:35".
Use "JavaObject{T}(...) where T" instead.
Loaded /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server/libjvm.so
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
In Java, recd: 10
In Java, recd: 10
In Java, recd: 10
In Java, recd: 2147483647
In Java, recd: 9223372036854775807
In Java, recd: Hello Java
In Java, recd: 10.02
In Java, recd: 10.02
In Java, recd: 1.7976931348623157E308
In Java, recd: 3.4028235E38
In Java, recd: null
[GC (Allocation Failure)  12287K->11816K(47104K), 0.0047342 secs]
[GC (Allocation Failure)  24095K->24021K(47104K), 0.0035204 secs]
[Full GC (Ergonomics)  24021K->23979K(64000K), 0.0055819 secs]
[GC (Allocation Failure)  36261K->36228K(64000K), 0.0035679 secs]
[GC (Allocation Failure)  48497K->38261K(76288K), 0.0020920 secs]
[Full GC (Ergonomics)  38261K->4585K(64000K), 0.0056496 secs]
[GC (Allocation Failure)  29142K->29050K(64000K), 0.0051579 secs]
[Full GC (Ergonomics)  29050K->29048K(101376K), 0.0041850 secs]
[GC (Allocation Failure)  53619K->37993K(129024K), 0.0033987 secs]
[GC (Allocation Failure)  76896K->32657K(131072K), 0.0018740 secs]
[GC (Allocation Failure)  71569K->71489K(148480K), 0.0111074 secs]
[Full GC (Ergonomics)  71489K->42943K(171008K), 0.0100941 secs]
[GC (Allocation Failure)  99775K->78035K(174080K), 0.0077244 secs]
[GC (Allocation Failure)  134867K->61349K(193536K), 0.0022197 secs]
[GC (Allocation Failure)  136613K->92363K(195584K), 0.0079102 secs]
[GC (Allocation Failure)  167627K->70907K(217088K), 0.0011285 secs]
[GC (Allocation Failure)  166651K->78315K(220160K), 0.0025608 secs]
[GC (Allocation Failure)  174059K->110228K(237056K), 0.0096861 secs]
[Full GC (Ergonomics)  110228K->41416K(239616K), 0.0124337 secs]
[GC (Allocation Failure)  156104K->64142K(244224K), 0.0070583 secs]
[GC (Allocation Failure)  178830K->70625K(274432K), 0.0096119 secs]
[GC (Allocation Failure)  212961K->60663K(278528K), 0.0044363 secs]
[GC (Allocation Failure)  202999K->70077K(299520K), 0.0082517 secs]
[GC (Allocation Failure)  233405K->81669K(302592K), 0.0183439 secs]
[GC (Allocation Failure)  244997K->49795K(311808K), 0.0027697 secs]
[GC (Allocation Failure)  215683K->64005K(287744K), 0.0045374 secs]
[GC (Allocation Failure)  229893K->78111K(304640K), 0.0083480 secs]
Exception in thread "main" java.lang.NoSuchMethodError: sinx
Exception in thread "main" java.lang.NoSuchMethodError: sinx
INFO: JavaCall tests passed

>>> End of log
