>>> 'Pkg.add("DynamicMovementPrimitives")' log
[ Info: Cloning cache of DynamicMovementPrimitives from https://github.com/baggepinnen/DynamicMovementPrimitives.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of ODE from https://github.com/JuliaDiffEq/ODE.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing DiffEqBase v2.9.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DynamicMovementPrimitives v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FunctionWrappers v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LinearMaps v1.0.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MacroTools v0.4.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ODE v0.7.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecursiveArrayTools v0.14.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Reexport v0.1.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Requires v0.4.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SimpleTraits v0.5.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of DynamicMovementPrimitives
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("DynamicMovementPrimitives")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz    3757818 s        104 s     185815 s     951509 s         30 s
       #2  3503 MHz     740290 s         82 s      75001 s    4879757 s          0 s
       
  Memory: 2.93927001953125 GB (999.890625 MB free)
  Uptime: 58001.0 sec
  Load Avg:  1.02392578125  1.0244140625  0.98681640625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - DynamicMovementPrimitives     0.2.0
 - JSON                          0.16.3
14 additional packages:
 - Compat                        0.42.0
 - DiffEqBase                    2.9.0
 - FunctionWrappers              0.1.0
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Nullables                     0.0.2
 - ODE                           0.7.0
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.1
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.6
[ Info: Testing DynamicMovementPrimitives @ Base.Pkg.Entry entry.jl:723
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
[ Warning: Replacing module `StaticArrays` @ Base loading.jl:350
[ Warning: Replacing module `Requires` @ Base loading.jl:350
[ Warning: Replacing module `RecipesBase` @ Base loading.jl:350
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:4.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:4
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:5.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:5
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:6.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:6
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:7.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:7
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:8.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:8
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:9.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:9
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/algorithm_types.jl:10.
│ Use `struct` instead.
└ @ nothing algorithm_types.jl:10
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{N, S, T}(b::Tableau{N, S, T})` around /home/vagrant/.julia/v0.7/ODE/src/ODE.jl:71.
│ Use `Base.eltype(b::Tableau{N, S, T}) where {N, S, T}` instead.
└ @ nothing ODE.jl:71
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{Tnew <: Real}(::Type{Tnew}, tab::Tableau)` around /home/vagrant/.julia/v0.7/ODE/src/ODE.jl:75.
│ Use `Base.convert(#unused#::Type{Tnew}, tab::Tableau) where Tnew <: Real` instead.
└ @ nothing ODE.jl:75
┌ Warning: Deprecated syntax `parametric method syntax hinit{T}(F, x0, t0::T, tend, p, reltol, abstol)` around /home/vagrant/.julia/v0.7/ODE/src/ODE.jl:86.
│ Use `hinit(F, x0, t0::T, tend, p, reltol, abstol) where T` instead.
└ @ nothing ODE.jl:86
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:9.
│ Use `struct` instead.
└ @ nothing runge_kutta.jl:9
┌ Warning: Deprecated syntax `parametric method syntax (::Type{TableauRKExplicit{Name, S, T}}){Name, S, T}(order, a, b, c)` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:17.
│ Use `(::Type{TableauRKExplicit{Name, S, T}})(order, a, b, c) where {Name, S, T}` instead.
└ @ nothing runge_kutta.jl:17
┌ Warning: Deprecated syntax `parametric method syntax TableauRKExplicit{T}(name::Symbol, order::Tuple{Vararg{Int}}, a::Matrix{T}, b::Matrix{T}, c::Vector{T})` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:34.
│ Use `TableauRKExplicit(name::Symbol, order::Tuple{Vararg{Int}}, a::Matrix{T}, b::Matrix{T}, c::Vector{T}) where T` instead.
└ @ nothing runge_kutta.jl:34
┌ Warning: Deprecated syntax `parametric method syntax conv_field{T, N}(D, a::Array{T, N})` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:41.
│ Use `conv_field(D, a::Array{T, N}) where {T, N}` instead.
└ @ nothing runge_kutta.jl:41
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{Tnew <: Real, Name, S, T}(::Type{Tnew}, tab::TableauRKExplicit{Name, S, T})` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:44.
│ Use `Base.convert(#unused#::Type{Tnew}, tab::TableauRKExplicit{Name, S, T}) where {Tnew <: Real, Name, S, T}` instead.
└ @ nothing runge_kutta.jl:44
┌ Warning: Deprecated syntax `parametric method syntax oderk_fixed{N, S}(fn, y0::AbstractVector, tspan, btab_::TableauRKExplicit{N, S})` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:185.
│ Use `oderk_fixed(fn, y0::AbstractVector, tspan, btab_::TableauRKExplicit{N, S}) where {N, S}` instead.
└ @ nothing runge_kutta.jl:185
┌ Warning: Deprecated syntax `parametric method syntax oderk_adapt{N, S}(fn, y0::AbstractVector, tspan, btab_::TableauRKExplicit{N, S}; reltol = 1e-05, abstol = 1e-08, norm = Base.norm, minstep = /(abs(-(tspan[end], tspan[1])), 1e+18), maxstep = /(abs(-(tspan[end], tspan[1])), 2.5), initstep = 0, points = :all)` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:244.
│ Use `oderk_adapt(fn, y0::AbstractVector, tspan, btab_::TableauRKExplicit{N, S}; reltol = 1e-05, abstol = 1e-08, norm = Base.norm, minstep = /(abs(-(tspan[end], tspan[1])), 1e+18), maxstep = /(abs(-(tspan[end], tspan[1])), 2.5), initstep = 0, points = :all) where {N, S}` instead.
└ @ nothing runge_kutta.jl:244
┌ Warning: Deprecated syntax `parametric method syntax rk_embedded_step!{N, S}(ytrial, yerr, ks, ytmp, y, fn, t, dt, dof, btab::TableauRKExplicit{N, S})` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:374.
│ Use `rk_embedded_step!(ytrial, yerr, ks, ytmp, y, fn, t, dt, dof, btab::TableauRKExplicit{N, S}) where {N, S}` instead.
└ @ nothing runge_kutta.jl:374
┌ Warning: Deprecated syntax `parametric method syntax stepsize_hw92!{T}(dt::T, tdir, x0, xtrial, xerr, order, timeout, dof, abstol, reltol, maxstep, norm)` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:413.
│ Use `stepsize_hw92!(dt::T, tdir, x0, xtrial, xerr, order, timeout, dof, abstol, reltol, maxstep, norm) where T` instead.
└ @ nothing runge_kutta.jl:413
┌ Warning: Deprecated syntax `parametric method syntax calc_next_k!{Ty}(ks::Vector, ytmp::Ty, y, s, fn, t, dt, dof, btab)` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:444.
│ Use `calc_next_k!(ks::Vector, ytmp::Ty, y, s, fn, t, dt, dof, btab) where Ty` instead.
└ @ nothing runge_kutta.jl:444
┌ Warning: Deprecated syntax `parametric method syntax allocate!{T}(vec::Vector{T}, y0, dof)` around /home/vagrant/.julia/v0.7/ODE/src/runge_kutta.jl:456.
│ Use `allocate!(vec::Vector{T}, y0, dof) where T` instead.
└ @ nothing runge_kutta.jl:456
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/ODE/src/ODE.jl:269. @ nothing ODE.jl:269
[ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/ODE/src/ODE.jl:270. @ nothing ODE.jl:270
┌ Warning: Deprecated syntax `parametric method syntax solve{uType, tType, isinplace, AlgType <: ODEjlAlgorithm}(prob::AbstractODEProblem{uType, tType, isinplace}, alg::AlgType, timeseries = [], ts = [], ks = []; verbose = true, save_timeseries = nothing, saveat = tType[], reltol = 1e-05, abstol = 1e-08, save_everystep = isempty(saveat), dense = save_everystep, save_start = true, callback = nothing, dtmin = /(abs(-(prob.tspan[2], prob.tspan[1])), 1e-09), dtmax = /(abs(-(prob.tspan[2], prob.tspan[1])), 2.5), timeseries_errors = true, dense_errors = false, dt = 0.0, norm = Base.vecnorm, kwargs...)` around /home/vagrant/.julia/v0.7/ODE/src/common.jl:17.
│ Use `solve(prob::AbstractODEProblem{uType, tType, isinplace}, alg::AlgType, timeseries = [], ts = [], ks = []; verbose = true, save_timeseries = nothing, saveat = tType[], reltol = 1e-05, abstol = 1e-08, save_everystep = isempty(saveat), dense = save_everystep, save_start = true, callback = nothing, dtmin = /(abs(-(prob.tspan[2], prob.tspan[1])), 1e-09), dtmax = /(abs(-(prob.tspan[2], prob.tspan[1])), 2.5), timeseries_errors = true, dense_errors = false, dt = 0.0, norm = Base.vecnorm, kwargs...) where {uType, tType, isinplace, AlgType <: ODEjlAlgorithm}` instead.
└ @ nothing common.jl:17
WARNING: Method definition __init__() in module Requires at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
WARNING: Method definition __init__() in module RecursiveArrayTools at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9 overwritten in module DiffEqBase at /home/vagrant/.julia/v0.7/Requires/src/init.jl:9.
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = @require(::LineNumberNode, ::Module, ::Any, ::Any) at require.jl:51
└ @ Requires require.jl:51
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/DynamicMovementPrimitives/test/runtests.jl:2
┌ Warning: `Array{T}(d::NTuple{N, Int}) where {T, N}` is deprecated, use `Array{T}(uninitialized, d)` instead.
│   caller = #s168#222(::Type, ::Type, ::Type{T} where T<:Tuple, ::Tuple{DataType}) at broadcast.jl:80
└ @ StaticArrays broadcast.jl:80
┌ Warning: `isleaftype` is deprecated, use `isconcrete` instead.
│   caller = make_consistent_types at ODE.jl:159 [inlined]
└ @ Core ODE.jl:159
┌ Warning: `isleaftype` is deprecated, use `isconcrete` instead.
│   caller = make_consistent_types at ODE.jl:160 [inlined]
└ @ Core ODE.jl:160
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = convert(::Type{Float64}, ::ODE.TableauRKExplicit{:dopri,7,Rational{Int64}}) at runge_kutta.jl:45
└ @ ODE runge_kutta.jl:45
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #oderk_adapt#13(::Float64, ::Float64, ::Function, ::Float64, ::Float64, ::Int64, ::Symbol, ::Function, ::getfield(DynamicMovementPrimitives, Symbol("#time_derivative#30")){DMP,Array{Float64,1},Float64,Float64}, ::Array{Float64,1}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::ODE.TableauRKExplicit{:dopri,7,Rational{Int64}}) at runge_kutta.jl:264
└ @ ODE runge_kutta.jl:264
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = #oderk_adapt#13(::Float64, ::Float64, ::Function, ::Float64, ::Float64, ::Int64, ::Symbol, ::Function, ::getfield(DynamicMovementPrimitives, Symbol("#time_derivative#30")){DMP,Array{Float64,1},Float64,Float64}, ::Array{Float64,1}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::ODE.TableauRKExplicit{:dopri,7,Rational{Int64}}) at runge_kutta.jl:270
└ @ ODE runge_kutta.jl:270
ERROR: LoadError: ArgumentError: Module TwoLink not found in current path.
Run `Pkg.add("TwoLink")` to install the TwoLink package.
Stacktrace:
 [1] _require(::Symbol) at ./loading.jl:411
 [2] require(::Symbol) at ./loading.jl:333
 [3] include at ./boot.jl:295 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:521
 [5] include(::Module, ::String) at ./sysimg.jl:26
 [6] process_options(::Base.JLOptions) at ./client.jl:323
 [7] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/DynamicMovementPrimitives/test/runtests.jl:129
┌ Error: ------------------------------------------------------------
│ # Testing failed for DynamicMovementPrimitives
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/DynamicMovementPrimitives/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: DynamicMovementPrimitives had test errors

>>> End of log
