>>> 'Pkg.add("BenchmarkTools")' log
┌ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3           @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     797994 s         58 s      47754 s     304089 s          3 s
       #2  3500 MHz     173450 s         94 s      22027 s    1119574 s          0 s
       
  Memory: 2.93927001953125 GB (1029.55859375 MB free)
  Uptime: 13328.0 sec
  Load Avg:  1.314453125  1.06494140625  1.0029296875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
[ Info: Testing BenchmarkTools                     @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
done (took 8.01481566 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.814094573 seconds)
Testing BenchmarkGroup...done (took 11.153584015 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.595635354 seconds)
(2/3) tuning 5...
done (took 0.315493446 seconds)
(3/3) tuning 20...
done (took 0.33413795 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.857654086 seconds)
  (2/3) tuning 5...
  done (took 0.502147363 seconds)
  (3/3) tuning 20...
  done (took 0.671875011 seconds)
done (took 2.399294681 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.409131324 seconds)
  (2/5) tuning "macro"...
  done (took 0.634634342 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.299190789 seconds)
  (4/5) tuning "block"...
  done (took 0.55015481 seconds)
  (5/5) tuning "nothing"...
  done (took 0.377699585 seconds)
done (took 7.541340436 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.017685418 seconds)
  (2/3) tuning 5...
  done (took 0.014761125 seconds)
  (3/3) tuning 20...
  done (took 0.017116864 seconds)
done (took 0.410296499 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.797731277 seconds)
  (2/3) benchmarking 5...
  done (took 1.032400174 seconds)
  (3/3) benchmarking 20...
  done (took 3.536958576 seconds)
done (took 6.744597007 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 2.739385618 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.466257619 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 2.227818478 seconds)
  (4/5) benchmarking "block"...
  done (took 1.157134168 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.612335603 seconds)
done (took 12.544727439 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.465596943 seconds)
  (2/3) benchmarking 5...
  done (took 0.424426687 seconds)
  (3/3) benchmarking 20...
  done (took 0.463081905 seconds)
done (took 1.732765064 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.369757606 seconds)
  (2/3) benchmarking 5...
  done (took 0.642484147 seconds)
  (3/3) benchmarking 20...
  done (took 1.217993256 seconds)
done (took 3.765920815 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.112734603 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.127280905 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.111921929 seconds)
  (4/5) benchmarking "block"...
  done (took 1.163924325 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.246564168 seconds)
done (took 5.20767859 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.32204879 seconds)
  (2/3) benchmarking 5...
  done (took 0.440002639 seconds)
  (3/3) benchmarking 20...
  done (took 0.499506623 seconds)
done (took 1.602369514 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.374109143 seconds)
  (2/3) benchmarking 5...
  done (took 0.175061286 seconds)
  (3/3) benchmarking 20...
  done (took 0.183878016 seconds)
done (took 1.255461958 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.119902091 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.120120914 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.115618744 seconds)
  (4/5) benchmarking "block"...
  done (took 0.158306608 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.190034402 seconds)
done (took 1.084225559 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.185917532 seconds)
  (2/3) benchmarking 5...
  done (took 0.19629142 seconds)
  (3/3) benchmarking 20...
  done (took 0.195255889 seconds)
done (took 0.949149425 seconds)
(1/3) benchmarking 10...
done (took 0.305063528 seconds)
(2/3) benchmarking 5...
done (took 0.257001912 seconds)
(3/3) benchmarking 20...
done (took 0.310742359 seconds)
(1/3) benchmarking 10...
done (took 0.305599771 seconds)
(2/3) benchmarking 5...
done (took 0.257710195 seconds)
(3/3) benchmarking 20...
done (took 0.300831447 seconds)
(1/3) benchmarking 10...
done (took 0.000272681 seconds)
(2/3) benchmarking 5...
done (took 0.000488181 seconds)
(3/3) benchmarking 20...
done (took 0.000480418 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└                                                           @ Core <missing>:177
done (took 92.314526153 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2734
└                                                      @ Base deprecated.jl:2734
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 8.265955656 seconds)
[ Info: BenchmarkTools tests passed                @ Base.Pkg.Entry entry.jl:737

>>> End of log
