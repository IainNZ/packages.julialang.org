>>> 'Pkg.add("BenchmarkTools")' log
[ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     777876 s        103 s      46768 s     265839 s          7 s
       #2  3499 MHz     169301 s         48 s      21806 s    1049645 s          0 s
       
  Memory: 2.93927001953125 GB (882.03515625 MB free)
  Uptime: 12587.0 sec
  Load Avg:  1.0029296875  0.9931640625  1.0185546875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing BenchmarkTools @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
done (took 5.561620324 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.050306014 seconds)
Testing BenchmarkGroup...done (took 8.729811793 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.86630566 seconds)
(2/3) tuning 5...
done (took 0.448495324 seconds)
(3/3) tuning 20...
done (took 0.35885832 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.717472796 seconds)
  (2/3) tuning 5...
  done (took 0.549608818 seconds)
  (3/3) tuning 20...
  done (took 0.662752142 seconds)
done (took 2.25513766 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.507039685 seconds)
  (2/5) tuning "macro"...
  done (took 0.626217473 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.293656148 seconds)
  (4/5) tuning "block"...
  done (took 0.550838024 seconds)
  (5/5) tuning "nothing"...
  done (took 0.364093745 seconds)
done (took 7.613546467 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.011259004 seconds)
  (2/3) tuning 5...
  done (took 0.011853735 seconds)
  (3/3) tuning 20...
  done (took 0.011796298 seconds)
done (took 0.313985134 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.321653671 seconds)
  (2/3) benchmarking 5...
  done (took 0.785122348 seconds)
  (3/3) benchmarking 20...
  done (took 3.376505639 seconds)
done (took 5.770258392 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 2.634115593 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.492479408 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.581435101 seconds)
  (4/5) benchmarking "block"...
  done (took 1.253553868 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.53542276 seconds)
done (took 11.860795188 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.383454224 seconds)
  (2/3) benchmarking 5...
  done (took 0.435668678 seconds)
  (3/3) benchmarking 20...
  done (took 0.42371372 seconds)
done (took 1.581964244 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.38179986 seconds)
  (2/3) benchmarking 5...
  done (took 0.585267487 seconds)
  (3/3) benchmarking 20...
  done (took 1.175875259 seconds)
done (took 3.696455561 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.118566899 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.115677947 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.075631505 seconds)
  (4/5) benchmarking "block"...
  done (took 0.752954364 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.156646137 seconds)
done (took 4.66129352 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.475042256 seconds)
  (2/3) benchmarking 5...
  done (took 0.438259118 seconds)
  (3/3) benchmarking 20...
  done (took 0.459899181 seconds)
done (took 1.721761924 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.245550517 seconds)
  (2/3) benchmarking 5...
  done (took 0.119308701 seconds)
  (3/3) benchmarking 20...
  done (took 0.12184831 seconds)
done (took 0.92253713 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.082131631 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.073999587 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.075079563 seconds)
  (4/5) benchmarking "block"...
  done (took 0.159345216 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.154749512 seconds)
done (took 0.892077983 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.182773762 seconds)
  (2/3) benchmarking 5...
  done (took 0.18255869 seconds)
  (3/3) benchmarking 20...
  done (took 0.177428093 seconds)
done (took 0.930087324 seconds)
(1/3) benchmarking 10...
done (took 0.299684417 seconds)
(2/3) benchmarking 5...
done (took 0.255929337 seconds)
(3/3) benchmarking 20...
done (took 0.185350549 seconds)
(1/3) benchmarking 10...
done (took 0.178836521 seconds)
(2/3) benchmarking 5...
done (took 0.162242505 seconds)
(3/3) benchmarking 20...
done (took 0.183597502 seconds)
(1/3) benchmarking 10...
done (took 0.000233227 seconds)
(2/3) benchmarking 5...
done (took 0.00017488 seconds)
(3/3) benchmarking 20...
done (took 0.000317204 seconds)
done (took 82.721646907 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#959(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:3644
└ @ Base deprecated.jl:3644
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 8.173326483 seconds)
[ Info: BenchmarkTools tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
