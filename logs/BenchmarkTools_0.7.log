>>> 'Pkg.add("BenchmarkTools")' log
[ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3309
Commit b96097b66f (2018-01-07 00:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     781452 s        101 s      47912 s     233616 s          9 s
       #2  3500 MHz     160130 s         70 s      21196 s    1047720 s          0 s
       
  Memory: 2.93927001953125 GB (863.76953125 MB free)
  Uptime: 12461.0 sec
  Load Avg:  0.95947265625  0.95263671875  0.95166015625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
[ Info: Testing BenchmarkTools @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
done (took 8.285892841 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.856049414 seconds)
Testing BenchmarkGroup...done (took 8.87904814 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.847537955 seconds)
(2/3) tuning 5...
done (took 0.289549481 seconds)
(3/3) tuning 20...
done (took 0.250592554 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.874343049 seconds)
  (2/3) tuning 5...
  done (took 0.547411888 seconds)
  (3/3) tuning 20...
  done (took 0.686706725 seconds)
done (took 2.459856026 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.404302305 seconds)
  (2/5) tuning "macro"...
  done (took 0.932291944 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.397484369 seconds)
  (4/5) tuning "block"...
  done (took 0.514619926 seconds)
  (5/5) tuning "nothing"...
  done (took 0.366030225 seconds)
done (took 7.896201779 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.017076992 seconds)
  (2/3) tuning 5...
  done (took 0.01487085 seconds)
  (3/3) tuning 20...
  done (took 0.017056364 seconds)
done (took 0.405144 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.750680196 seconds)
  (2/3) benchmarking 5...
  done (took 0.95499693 seconds)
  (3/3) benchmarking 20...
  done (took 3.504477765 seconds)
done (took 6.580261277 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 2.357669023 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.325522504 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 2.103613903 seconds)
  (4/5) benchmarking "block"...
  done (took 1.426207792 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.412082892 seconds)
done (took 11.901628451 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.385287992 seconds)
  (2/3) benchmarking 5...
  done (took 0.346619741 seconds)
  (3/3) benchmarking 20...
  done (took 0.408678125 seconds)
done (took 1.401945969 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.072849463 seconds)
  (2/3) benchmarking 5...
  done (took 0.383694643 seconds)
  (3/3) benchmarking 20...
  done (took 1.147048078 seconds)
done (took 3.05726118 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.113110752 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.119877915 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.124252097 seconds)
  (4/5) benchmarking "block"...
  done (took 1.178461329 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.257305926 seconds)
done (took 5.249602551 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.493958005 seconds)
  (2/3) benchmarking 5...
  done (took 0.436078037 seconds)
  (3/3) benchmarking 20...
  done (took 0.400002701 seconds)
done (took 1.721067 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.371957343 seconds)
  (2/3) benchmarking 5...
  done (took 0.18063501 seconds)
  (3/3) benchmarking 20...
  done (took 0.180098561 seconds)
done (took 1.267106933 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.121612326 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.113645123 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.107376164 seconds)
  (4/5) benchmarking "block"...
  done (took 0.143560257 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.164085125 seconds)
done (took 1.038346153 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.207347901 seconds)
  (2/3) benchmarking 5...
  done (took 0.126248276 seconds)
  (3/3) benchmarking 20...
  done (took 0.160304767 seconds)
done (took 0.886464962 seconds)
(1/3) benchmarking 10...
done (took 0.178812307 seconds)
(2/3) benchmarking 5...
done (took 0.157663668 seconds)
(3/3) benchmarking 20...
done (took 0.178818111 seconds)
(1/3) benchmarking 10...
done (took 0.270081238 seconds)
(2/3) benchmarking 5...
done (took 0.158286826 seconds)
(3/3) benchmarking 20...
done (took 0.177496914 seconds)
(1/3) benchmarking 10...
done (took 0.000248888 seconds)
(2/3) benchmarking 5...
done (took 0.000129956 seconds)
(3/3) benchmarking 20...
done (took 0.00011699 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└ @ Core <missing>:177
done (took 86.998768845 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#963(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:3651
└ @ Base deprecated.jl:3651
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 6.03199635 seconds)
[ Info: BenchmarkTools tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
