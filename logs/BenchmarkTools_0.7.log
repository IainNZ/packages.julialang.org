>>> 'Pkg.add("BenchmarkTools")' log
[ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[ Info: Installing BenchmarkTools v0.2.3
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     774564 s         62 s      47717 s     211057 s          8 s
       #2  3500 MHz     176841 s         88 s      21046 s     993854 s          0 s
       
  Memory: 2.93927001953125 GB (837.23046875 MB free)
  Uptime: 12119.0 sec
  Load Avg:  0.974609375  0.9658203125  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Testing BenchmarkTools
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
done (took 7.828662736 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.334722769 seconds)
Testing BenchmarkGroup...done (took 7.590085336 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.768873773 seconds)
(2/3) tuning 5...
done (took 0.294217057 seconds)
(3/3) tuning 20...
done (took 0.24844645 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.676216991 seconds)
  (2/3) tuning 5...
  done (took 0.52846778 seconds)
  (3/3) tuning 20...
  done (took 0.686226125 seconds)
done (took 2.161681434 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.402226794 seconds)
  (2/5) tuning "macro"...
  done (took 0.990161445 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.394851231 seconds)
  (4/5) tuning "block"...
  done (took 0.419920336 seconds)
  (5/5) tuning "nothing"...
  done (took 0.359815169 seconds)
done (took 7.839143795 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.017588355 seconds)
  (2/3) tuning 5...
  done (took 0.014559309 seconds)
  (3/3) tuning 20...
  done (took 0.017471971 seconds)
done (took 0.407495561 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.801838919 seconds)
  (2/3) benchmarking 5...
  done (took 0.649024701 seconds)
  (3/3) benchmarking 20...
  done (took 3.37762431 seconds)
done (took 6.207065786 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.6908254 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.341575683 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.67478978 seconds)
  (4/5) benchmarking "block"...
  done (took 1.081299547 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.427839003 seconds)
done (took 10.487743474 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.266806202 seconds)
  (2/3) benchmarking 5...
  done (took 0.32635664 seconds)
  (3/3) benchmarking 20...
  done (took 0.399862019 seconds)
done (took 1.27347103 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.344119347 seconds)
  (2/3) benchmarking 5...
  done (took 0.387811918 seconds)
  (3/3) benchmarking 20...
  done (took 1.109641666 seconds)
done (took 3.366911037 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.070698869 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.075542561 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.116181433 seconds)
  (4/5) benchmarking "block"...
  done (took 1.152238201 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.237292456 seconds)
done (took 4.983026835 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.46488511 seconds)
  (2/3) benchmarking 5...
  done (took 0.379260426 seconds)
  (3/3) benchmarking 20...
  done (took 0.373822256 seconds)
done (took 1.595866275 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.296547776 seconds)
  (2/3) benchmarking 5...
  done (took 0.110860221 seconds)
  (3/3) benchmarking 20...
  done (took 0.102064022 seconds)
done (took 0.95494786 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.07674964 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.074157717 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.073355088 seconds)
  (4/5) benchmarking "block"...
  done (took 0.146932473 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.148924894 seconds)
done (took 0.811645644 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.111291022 seconds)
  (2/3) benchmarking 5...
  done (took 0.116302447 seconds)
  (3/3) benchmarking 20...
  done (took 0.112520154 seconds)
done (took 0.627103963 seconds)
(1/3) benchmarking 10...
done (took 0.179686947 seconds)
(2/3) benchmarking 5...
done (took 0.158321312 seconds)
(3/3) benchmarking 20...
done (took 0.176124264 seconds)
(1/3) benchmarking 10...
done (took 0.225761243 seconds)
(2/3) benchmarking 5...
done (took 0.212476267 seconds)
(3/3) benchmarking 20...
done (took 0.2596768 seconds)
(1/3) benchmarking 10...
done (took 0.000263394 seconds)
(2/3) benchmarking 5...
done (took 0.000421126 seconds)
(3/3) benchmarking 20...
done (took 0.00016648 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└ @ Core <missing>:177
done (took 85.997001014 seconds)
Testing serialization...Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1164
└ @ Base deprecated.jl:1164
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 8.546918071 seconds)
[ Info: BenchmarkTools tests passed

>>> End of log
