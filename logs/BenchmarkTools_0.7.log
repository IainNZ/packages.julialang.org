>>> 'Pkg.add("BenchmarkTools")' log
┌ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3           @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     722532 s        114 s      43577 s     223896 s          6 s
       #2  3500 MHz     119547 s         41 s      18702 s    1022782 s          0 s
       
  Memory: 2.93927001953125 GB (999.12109375 MB free)
  Uptime: 11751.0 sec
  Load Avg:  1.0068359375  1.0146484375  0.9970703125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.44.0
 - Nullables                     0.0.2
[ Info: Testing BenchmarkTools                     @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
done (took 8.421665106 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.391377064 seconds)
Testing BenchmarkGroup...done (took 8.68746116 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.542440986 seconds)
(2/3) tuning 5...
done (took 0.320134131 seconds)
(3/3) tuning 20...
done (took 0.276890848 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.606076392 seconds)
  (2/3) tuning 5...
  done (took 0.5583261 seconds)
  (3/3) tuning 20...
  done (took 0.679924485 seconds)
done (took 2.12893862 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.40834789 seconds)
  (2/5) tuning "macro"...
  done (took 0.622654252 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.297228803 seconds)
  (4/5) tuning "block"...
  done (took 0.450118698 seconds)
  (5/5) tuning "nothing"...
  done (took 0.28768955 seconds)
done (took 7.335345168 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.01089563 seconds)
  (2/3) tuning 5...
  done (took 0.010149741 seconds)
  (3/3) tuning 20...
  done (took 0.011255905 seconds)
done (took 0.309638072 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.328665754 seconds)
  (2/3) benchmarking 5...
  done (took 0.605755705 seconds)
  (3/3) benchmarking 20...
  done (took 3.379654036 seconds)
done (took 5.593555164 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.820104494 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.339614603 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.392333693 seconds)
  (4/5) benchmarking "block"...
  done (took 1.254563384 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.441754082 seconds)
done (took 10.529431245 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.271640724 seconds)
  (2/3) benchmarking 5...
  done (took 0.256814699 seconds)
  (3/3) benchmarking 20...
  done (took 0.279787389 seconds)
done (took 1.081726183 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.084709732 seconds)
  (2/3) benchmarking 5...
  done (took 0.371593163 seconds)
  (3/3) benchmarking 20...
  done (took 1.11117539 seconds)
done (took 3.029758717 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.114208864 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.07193919 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.025766209 seconds)
  (4/5) benchmarking "block"...
  done (took 0.73538199 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.165494401 seconds)
done (took 4.447098352 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.287953072 seconds)
  (2/3) benchmarking 5...
  done (took 0.271771614 seconds)
  (3/3) benchmarking 20...
  done (took 0.314208775 seconds)
done (took 1.161479175 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.399190488 seconds)
  (2/3) benchmarking 5...
  done (took 0.182497099 seconds)
  (3/3) benchmarking 20...
  done (took 0.189336746 seconds)
done (took 1.366494453 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.101452248 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.106933797 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.104868044 seconds)
  (4/5) benchmarking "block"...
  done (took 0.140866521 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.153018 seconds)
done (took 0.964190987 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.138310274 seconds)
  (2/3) benchmarking 5...
  done (took 0.113010915 seconds)
  (3/3) benchmarking 20...
  done (took 0.11324182 seconds)
done (took 0.694480326 seconds)
(1/3) benchmarking 10...
done (took 0.175833079 seconds)
(2/3) benchmarking 5...
done (took 0.165207673 seconds)
(3/3) benchmarking 20...
done (took 0.186210782 seconds)
(1/3) benchmarking 10...
done (took 0.173606199 seconds)
(2/3) benchmarking 5...
done (took 0.15782047 seconds)
(3/3) benchmarking 20...
done (took 0.178871227 seconds)
(1/3) benchmarking 10...
done (took 0.00017681 seconds)
(2/3) benchmarking 5...
done (took 0.000356718 seconds)
(3/3) benchmarking 20...
done (took 0.000420131 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└                                                           @ Core <missing>:177
done (took 79.573836545 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2734
└                                                      @ Base deprecated.jl:2734
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 5.706838031 seconds)
[ Info: BenchmarkTools tests passed                @ Base.Pkg.Entry entry.jl:737

>>> End of log
