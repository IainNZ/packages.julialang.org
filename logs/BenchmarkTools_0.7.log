>>> 'Pkg.add("BenchmarkTools")' log
[ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz     784506 s         91 s      46101 s     262798 s         10 s
       #2  3503 MHz     150997 s         77 s      21108 s    1085094 s          0 s
       
  Memory: 2.93927001953125 GB (863.421875 MB free)
  Uptime: 12770.0 sec
  Load Avg:  1.07177734375  1.001953125  1.0185546875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing BenchmarkTools @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
done (took 7.825899453 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.70990451 seconds)
Testing BenchmarkGroup...done (took 8.906078016 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.524011315 seconds)
(2/3) tuning 5...
done (took 0.307385552 seconds)
(3/3) tuning 20...
done (took 0.265464125 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.594770433 seconds)
  (2/3) tuning 5...
  done (took 0.510535598 seconds)
  (3/3) tuning 20...
  done (took 0.68294859 seconds)
done (took 2.050463816 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.400808402 seconds)
  (2/5) tuning "macro"...
  done (took 0.631129379 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.301274395 seconds)
  (4/5) tuning "block"...
  done (took 0.557117032 seconds)
  (5/5) tuning "nothing"...
  done (took 0.371462253 seconds)
done (took 7.534498656 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.0114248 seconds)
  (2/3) tuning 5...
  done (took 0.00999586 seconds)
  (3/3) tuning 20...
  done (took 0.010995456 seconds)
done (took 0.300197066 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.739695813 seconds)
  (2/3) benchmarking 5...
  done (took 0.937611228 seconds)
  (3/3) benchmarking 20...
  done (took 3.510080529 seconds)
done (took 6.570670608 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.561242743 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.356468203 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 2.178507351 seconds)
  (4/5) benchmarking "block"...
  done (took 1.198675768 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.385284729 seconds)
done (took 10.962611209 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.317413648 seconds)
  (2/3) benchmarking 5...
  done (took 0.391894006 seconds)
  (3/3) benchmarking 20...
  done (took 0.362143843 seconds)
done (took 1.320193219 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.367050394 seconds)
  (2/3) benchmarking 5...
  done (took 0.630109078 seconds)
  (3/3) benchmarking 20...
  done (took 1.193142012 seconds)
done (took 3.690896077 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.119295903 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.07126449 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.108237794 seconds)
  (4/5) benchmarking "block"...
  done (took 0.890311718 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.211761578 seconds)
done (took 4.851485798 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.323082306 seconds)
  (2/3) benchmarking 5...
  done (took 0.314774367 seconds)
  (3/3) benchmarking 20...
  done (took 0.418134934 seconds)
done (took 1.404699325 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.290240701 seconds)
  (2/3) benchmarking 5...
  done (took 0.17354319 seconds)
  (3/3) benchmarking 20...
  done (took 0.123548077 seconds)
done (took 1.004065071 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.080568593 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.077333981 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.079134709 seconds)
  (4/5) benchmarking "block"...
  done (took 0.104142492 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.113494364 seconds)
done (took 0.796176717 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.193146138 seconds)
  (2/3) benchmarking 5...
  done (took 0.117553071 seconds)
  (3/3) benchmarking 20...
  done (took 0.12526869 seconds)
done (took 0.72233396 seconds)
(1/3) benchmarking 10...
done (took 0.279829809 seconds)
(2/3) benchmarking 5...
done (took 0.160405561 seconds)
(3/3) benchmarking 20...
done (took 0.297065661 seconds)
(1/3) benchmarking 10...
done (took 0.231621014 seconds)
(2/3) benchmarking 5...
done (took 0.254420226 seconds)
(3/3) benchmarking 20...
done (took 0.300124864 seconds)
(1/3) benchmarking 10...
done (took 0.000285149 seconds)
(2/3) benchmarking 5...
done (took 0.000181343 seconds)
(3/3) benchmarking 20...
done (took 0.000183198 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└ @ Core <missing>:177
done (took 88.017207038 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#963(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:3651
└ @ Base deprecated.jl:3651
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 8.155377675 seconds)
[ Info: BenchmarkTools tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
