>>> 'Pkg.add("BenchmarkTools")' log
┌ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BenchmarkTools v0.2.3           @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BenchmarkTools
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     763858 s         57 s      46160 s     272941 s          6 s
       #2  3500 MHz     191308 s         96 s      22024 s    1021383 s          0 s
       
  Memory: 2.93927001953125 GB (1044.08984375 MB free)
  Uptime: 12542.0 sec
  Load Avg:  0.98681640625  0.9794921875  1.01318359375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Testing BenchmarkTools                     @ Base.Pkg.Entry entry.jl:723
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
done (took 7.226556517 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 1.699416731 seconds)
Testing BenchmarkGroup...done (took 6.772450046 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.523783478 seconds)
(2/3) tuning 5...
done (took 0.306751181 seconds)
(3/3) tuning 20...
done (took 0.277900775 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.674649353 seconds)
  (2/3) tuning 5...
  done (took 0.768387509 seconds)
  (3/3) tuning 20...
  done (took 0.946754095 seconds)
done (took 2.669212288 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.531975735 seconds)
  (2/5) tuning "macro"...
  done (took 0.969077455 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.390048762 seconds)
  (4/5) tuning "block"...
  done (took 0.508971241 seconds)
  (5/5) tuning "nothing"...
  done (took 0.351674 seconds)
done (took 8.074550731 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.011321941 seconds)
  (2/3) tuning 5...
  done (took 0.010211718 seconds)
  (3/3) tuning 20...
  done (took 0.011488336 seconds)
done (took 0.280824723 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.336106837 seconds)
  (2/3) benchmarking 5...
  done (took 0.820770251 seconds)
  (3/3) benchmarking 20...
  done (took 3.349763536 seconds)
done (took 5.779041427 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 2.359520849 seconds)
  (2/5) benchmarking "macro"...
  done (took 4.379877775 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.380118185 seconds)
  (4/5) benchmarking "block"...
  done (took 1.095142984 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.390862787 seconds)
done (took 9.975406157 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.265963094 seconds)
  (2/3) benchmarking 5...
  done (took 0.242399363 seconds)
  (3/3) benchmarking 20...
  done (took 0.261604003 seconds)
done (took 1.012077235 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.352551347 seconds)
  (2/3) benchmarking 5...
  done (took 0.399052146 seconds)
  (3/3) benchmarking 20...
  done (took 1.105249209 seconds)
done (took 3.28733405 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.070743762 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.109086782 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.114003482 seconds)
  (4/5) benchmarking "block"...
  done (took 1.157864723 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.255025231 seconds)
done (took 5.038949808 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.450356996 seconds)
  (2/3) benchmarking 5...
  done (took 0.265481438 seconds)
  (3/3) benchmarking 20...
  done (took 0.439385767 seconds)
done (took 1.537934761 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.345506335 seconds)
  (2/3) benchmarking 5...
  done (took 0.180578325 seconds)
  (3/3) benchmarking 20...
  done (took 0.178741808 seconds)
done (took 1.194737276 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.09996434 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.107764732 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.106093254 seconds)
  (4/5) benchmarking "block"...
  done (took 0.150235124 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.197948873 seconds)
done (took 0.921721385 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.105751781 seconds)
  (2/3) benchmarking 5...
  done (took 0.173334398 seconds)
  (3/3) benchmarking 20...
  done (took 0.172223106 seconds)
done (took 0.737050607 seconds)
(1/3) benchmarking 10...
done (took 0.28584976 seconds)
(2/3) benchmarking 5...
done (took 0.258065817 seconds)
(3/3) benchmarking 20...
done (took 0.294031522 seconds)
(1/3) benchmarking 10...
done (took 0.293999298 seconds)
(2/3) benchmarking 5...
done (took 0.249073109 seconds)
(3/3) benchmarking 20...
done (took 0.299098046 seconds)
(1/3) benchmarking 10...
done (took 0.000332952 seconds)
(2/3) benchmarking 5...
done (took 0.000388443 seconds)
(3/3) benchmarking 20...
done (took 0.000595922 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└                                                           @ Core <missing>:177
done (took 82.774502759 seconds)
Testing serialization...WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/BenchmarkTools/test/SerializationTests.jl:21
Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2734
└                                                      @ Base deprecated.jl:2734
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 7.490591935 seconds)
[ Info: BenchmarkTools tests passed                @ Base.Pkg.Entry entry.jl:737

>>> End of log
