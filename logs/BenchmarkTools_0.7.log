>>> 'Pkg.add("BenchmarkTools")' log
[ Info: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[ Info: Installing BenchmarkTools v0.2.3
[ Info: Package database updated

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     762191 s        115 s      48520 s     275965 s         10 s
       #2  3499 MHz     189366 s         42 s      22184 s    1048146 s          0 s
       
  Memory: 2.93927001953125 GB (985.16015625 MB free)
  Uptime: 12832.0 sec
  Load Avg:  0.99169921875  1.0078125  0.96533203125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BenchmarkTools                0.2.3
 - JSON                          0.16.4
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Testing BenchmarkTools
Testing Parameters...┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
done (took 8.511991416 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 3.029061833 seconds)
Testing BenchmarkGroup...done (took 9.074076328 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.592253087 seconds)
(2/3) tuning 5...
done (took 0.323282582 seconds)
(3/3) tuning 20...
done (took 0.338744131 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.726340706 seconds)
  (2/3) tuning 5...
  done (took 0.821305376 seconds)
  (3/3) tuning 20...
  done (took 0.804659872 seconds)
done (took 2.632429701 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 0.487478463 seconds)
  (2/5) tuning "macro"...
  done (took 1.000961556 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.410471546 seconds)
  (4/5) tuning "block"...
  done (took 0.409671142 seconds)
  (5/5) tuning "nothing"...
  done (took 0.383410292 seconds)
done (took 7.975260034 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.017117377 seconds)
  (2/3) tuning 5...
  done (took 0.014757225 seconds)
  (3/3) tuning 20...
  done (took 0.016957831 seconds)
done (took 0.38193132 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.468867254 seconds)
  (2/3) benchmarking 5...
  done (took 0.864534673 seconds)
  (3/3) benchmarking 20...
  done (took 3.498879745 seconds)
done (took 6.091360399 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 2.049112463 seconds)
  (2/5) benchmarking "macro"...
  done (took 5.354099296 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 2.192482657 seconds)
  (4/5) benchmarking "block"...
  done (took 1.60445019 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.562599115 seconds)
done (took 12.027670827 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.328630381 seconds)
  (2/3) benchmarking 5...
  done (took 0.404046567 seconds)
  (3/3) benchmarking 20...
  done (took 0.450286043 seconds)
done (took 1.461044215 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.355361725 seconds)
  (2/3) benchmarking 5...
  done (took 0.645812527 seconds)
  (3/3) benchmarking 20...
  done (took 1.139522488 seconds)
done (took 3.669618216 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.116252927 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.116698588 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.110979937 seconds)
  (4/5) benchmarking "block"...
  done (took 1.149192481 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.259980557 seconds)
done (took 5.221238448 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.497254637 seconds)
  (2/3) benchmarking 5...
  done (took 0.444184908 seconds)
  (3/3) benchmarking 20...
  done (took 0.488821401 seconds)
done (took 1.821015154 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.297843916 seconds)
  (2/3) benchmarking 5...
  done (took 0.185469591 seconds)
  (3/3) benchmarking 20...
  done (took 0.188905109 seconds)
done (took 1.119328461 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.10557695 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.101408521 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.111139487 seconds)
  (4/5) benchmarking "block"...
  done (took 0.182363227 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.206999624 seconds)
done (took 1.099724146 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.185063202 seconds)
  (2/3) benchmarking 5...
  done (took 0.113665382 seconds)
  (3/3) benchmarking 20...
  done (took 0.1114139 seconds)
done (took 0.781655211 seconds)
(1/3) benchmarking 10...
done (took 0.193231096 seconds)
(2/3) benchmarking 5...
done (took 0.175285294 seconds)
(3/3) benchmarking 20...
done (took 0.189860254 seconds)
(1/3) benchmarking 10...
done (took 0.301134431 seconds)
(2/3) benchmarking 5...
done (took 0.253029394 seconds)
(3/3) benchmarking 20...
done (took 0.298375993 seconds)
(1/3) benchmarking 10...
done (took 0.000246135 seconds)
(2/3) benchmarking 5...
done (took 0.000524977 seconds)
(3/3) benchmarking 20...
done (took 0.000380688 seconds)
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = top-level scope at <missing>:177
└ @ Core <missing>:177
done (took 88.544777093 seconds)
Testing serialization...Test Summary:                | Pass  Total
Successful (de)serialization |    7      7
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2530
└ @ Base deprecated.jl:2530
Test Summary:        | Pass  Total
Deprecated behaviors |   11     11
Test Summary:  | Pass  Total
Error checking |    2      2
done (took 7.945848391 seconds)
[ Info: BenchmarkTools tests passed

>>> End of log
