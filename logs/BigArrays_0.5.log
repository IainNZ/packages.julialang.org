>>> 'Pkg.add("BigArrays")' log
INFO: Cloning cache of BigArrays from https://github.com/seung-lab/BigArrays.jl.git
INFO: Cloning cache of EMIRT from https://github.com/seung-lab/EMIRT.jl.git
INFO: Cloning cache of Memoize from https://github.com/simonster/Memoize.jl.git
INFO: Installing BigArrays v0.5.3
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.3.0
INFO: Installing BufferedStreams v0.3.3
INFO: Installing ColorTypes v0.5.2
INFO: Installing Colors v0.7.4
INFO: Installing EMIRT v0.5.0
INFO: Installing FileIO v0.5.2
INFO: Installing FixedPointNumbers v0.3.9
INFO: Installing HDF5 v0.8.8
INFO: Installing Libz v0.2.4
INFO: Installing Memoize v0.2.0
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building Blosc
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("BigArrays")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (810.859375 MB free)
Uptime: 10079.0 sec
Load Avg:  0.94091796875  0.95654296875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     562961 s        104 s      57870 s     264794 s         14 s
#2  3500 MHz     167693 s         45 s      33288 s     786563 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - BigArrays                     0.5.3
 - JSON                          0.14.0
15 additional packages:
 - BinDeps                       0.6.0
 - Blosc                         0.3.0
 - BufferedStreams               0.3.3
 - ColorTypes                    0.5.2
 - Colors                        0.7.4
 - Compat                        0.37.0
 - EMIRT                         0.5.0
 - FileIO                        0.5.2
 - FixedPointNumbers             0.3.9
 - HDF5                          0.8.8
 - Libz                          0.2.4
 - Memoize                       0.2.0
 - Reexport                      0.0.3
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Testing BigArrays
WARNING: Method definition (::Type{EMIRT.Tdjsets})(Array{UInt32, 1}, Array{UInt32, 1}) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:6 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:6.
WARNING: Method definition (::Type{EMIRT.Tdjsets})(Any, Any) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:6 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:6.
WARNING: Method definition (::Type{EMIRT.Tdjsets})(Any) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:12 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:12.
WARNING: Method definition find!(EMIRT.Tdjsets, UInt32) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:19 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:19.
WARNING: Method definition union!(EMIRT.Tdjsets, UInt32, UInt32) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:40 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:40.
WARNING: Method definition setallroot!(EMIRT.Tdjsets) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:61 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:61.
WARNING: Method definition get_pair_num(Base.Dict{UInt32, UInt32}, Base.Dict{UInt32, UInt32}) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:80 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:80.
WARNING: Method definition get_pair_num(Base.Dict{UInt32, UInt32}, Base.Dict{UInt32, UInt32}, Bool) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:80 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:80.
WARNING: replacing docs for 'EMIRT.get_pair_num :: Union{Tuple{Dict{UInt32,UInt32},Dict{UInt32,UInt32},Bool},Tuple{Dict{UInt32,UInt32},Dict{UInt32,UInt32}}}' in module 'EMIRT'.
WARNING: Method definition union!(Base.Dict{UInt32, UInt32}, Base.Dict{UInt32, UInt32}) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:101 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:101.
WARNING: Method definition (::Type{EMIRT.Tdomains})(Array{Base.Dict{UInt32, UInt32}, 1}, EMIRT.Tdjsets) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:119 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:119.
WARNING: Method definition (::Type{EMIRT.Tdomains})(Any, Any) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:119 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:119.
WARNING: Method definition (::Type{EMIRT.Tdomains})(Array{#T<:Any, 3}) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:127 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:127.
WARNING: Method definition find!(EMIRT.Tdomains, UInt32) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:143 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:143.
WARNING: Method definition union!(EMIRT.Tdomains, UInt32, Base.Dict{UInt32, UInt32}, UInt32, Base.Dict{UInt32, UInt32}) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:151 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:151.
WARNING: Method definition union!(EMIRT.Tdomains, UInt32, UInt32) in module EMIRT at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:169 overwritten at /home/vagrant/.julia/v0.5/EMIRT/src/domains.jl:169.
gr = UnitRange{Int64}[101:300,201:400,31:50,1:3]
idxes = (101:300,201:400,31:50,1:3)
ba.globalOffset = (0,0,0,0)
INFO: 
 test 3D image reading and saving...
idxes = (201:400,201:400,101:110)
ba.globalOffset = (0,0,0)
INFO: read CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((201,201,101)),CartesianIndex{3}((256,256,110))) from CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((201,201,5)),CartesianIndex{3}((256,256,14))) of /tmp/test.h5sbigarray.img/block_1-256_1-256_97-128.h5 to buffer CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((1,1,1)),CartesianIndex{3}((56,56,10))) ...
INFO: read CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((257,201,101)),CartesianIndex{3}((400,256,110))) from CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((1,201,5)),CartesianIndex{3}((144,256,14))) of /tmp/test.h5sbigarray.img/block_257-512_1-256_97-128.h5 to buffer CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((57,1,1)),CartesianIndex{3}((200,56,10))) ...
INFO: read CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((201,257,101)),CartesianIndex{3}((256,400,110))) from CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((201,1,5)),CartesianIndex{3}((256,144,14))) of /tmp/test.h5sbigarray.img/block_1-256_257-512_97-128.h5 to buffer CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((1,57,1)),CartesianIndex{3}((56,200,10))) ...
INFO: read CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((257,257,101)),CartesianIndex{3}((400,400,110))) from CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((1,1,5)),CartesianIndex{3}((144,144,14))) of /tmp/test.h5sbigarray.img/block_257-512_257-512_97-128.h5 to buffer CartesianRange{CartesianIndex{3}}(CartesianIndex{3}((57,57,1)),CartesianIndex{3}((200,200,10))) ...
INFO: 

 test affinity map reading and saving...
idxes = (201:400,201:400,101:110,1:3)
ba.globalOffset = (0,0,0,0)
INFO: read CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((201,201,101,1)),CartesianIndex{4}((256,256,110,3))) from CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((201,201,5,1)),CartesianIndex{4}((256,256,14,3))) of /tmp/test.h5sbigarray.aff/block_1-256_1-256_97-128_1-3.h5 to buffer CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((1,1,1,1)),CartesianIndex{4}((56,56,10,3))) ...
INFO: read CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((257,201,101,1)),CartesianIndex{4}((400,256,110,3))) from CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((1,201,5,1)),CartesianIndex{4}((144,256,14,3))) of /tmp/test.h5sbigarray.aff/block_257-512_1-256_97-128_1-3.h5 to buffer CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((57,1,1,1)),CartesianIndex{4}((200,56,10,3))) ...
INFO: read CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((201,257,101,1)),CartesianIndex{4}((256,400,110,3))) from CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((201,1,5,1)),CartesianIndex{4}((256,144,14,3))) of /tmp/test.h5sbigarray.aff/block_1-256_257-512_97-128_1-3.h5 to buffer CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((1,57,1,1)),CartesianIndex{4}((56,200,10,3))) ...
INFO: read CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((257,257,101,1)),CartesianIndex{4}((400,400,110,3))) from CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((1,1,5,1)),CartesianIndex{4}((144,144,14,3))) of /tmp/test.h5sbigarray.aff/block_257-512_257-512_97-128_1-3.h5 to buffer CartesianRange{CartesianIndex{4}}(CartesianIndex{4}((57,57,1,1)),CartesianIndex{4}((200,200,10,3))) ...
size(a) = (200,200,10,3)
size(b) = (200,200,10,3)
INFO: BigArrays tests passed

>>> End of log
