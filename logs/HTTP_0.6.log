>>> 'Pkg.add("HTTP")' log
INFO: Installing BinDeps v0.8.3
INFO: Installing HTTP v0.5.7
INFO: Installing MbedTLS v0.5.3
INFO: Installing SHA v0.5.2
INFO: Installing URIParser v0.3.0
INFO: Building MbedTLS
Using system libraries...
INFO: Package database updated

>>> 'Pkg.test("HTTP")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1504.65234375 MB free)
Uptime: 18426.0 sec
Load Avg:  0.9716796875  0.9443359375  0.9541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1082770 s         97 s      59718 s     421030 s          6 s
#2  3500 MHz     239943 s         44 s      29517 s    1537482 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - HTTP                          0.5.7
 - JSON                          0.16.3
6 additional packages:
 - BinDeps                       0.8.3
 - Compat                        0.45.0
 - MbedTLS                       0.5.3
 - Nullables                     0.0.3
 - SHA                           0.5.2
 - URIParser                     0.3.0
INFO: Testing HTTP
TEST - sniff.jl: Empty
TEST - sniff.jl: Binary
TEST - sniff.jl: HTML document #1
TEST - sniff.jl: HTML document #2
TEST - sniff.jl: HTML document #3 (leading whitespace)
TEST - sniff.jl: HTML document #4 (leading CRLF)
TEST - sniff.jl: Plain text
TEST - sniff.jl: XML
TEST - sniff.jl: GIF 87a
TEST - sniff.jl: GIF 89a
TEST - sniff.jl: MIDI audio
TEST - sniff.jl: MP3 audio/MPEG audio
TEST - sniff.jl: WAV audio #1
TEST - sniff.jl: WAV audio #2
TEST - sniff.jl: AIFF audio #1
TEST - sniff.jl: OGG audio
TEST - sniff.jl: MP4 video
TEST - sniff.jl: AVI video #1
TEST - sniff.jl: AVI video #2
TEST - uri.jl: proxy request
TEST - uri.jl: proxy request with port
TEST - uri.jl: CONNECT request
TEST - uri.jl: proxy ipv6 request
TEST - uri.jl: proxy ipv6 request with port
TEST - uri.jl: CONNECT ipv6 address
TEST - uri.jl: ipv4 in ipv6 address
TEST - uri.jl: extra ? in query string
TEST - uri.jl: space URL encoded
TEST - uri.jl: URL fragment
TEST - uri.jl: complex URL fragment
TEST - uri.jl: complex URL from node js url parser doc
TEST - uri.jl: complex URL with basic auth from node js url parser doc
TEST - uri.jl: double @
TEST - uri.jl: proxy empty host
TEST - uri.jl: proxy empty port
TEST - uri.jl: CONNECT with basic auth
TEST - uri.jl: CONNECT empty host
TEST - uri.jl: CONNECT empty port
TEST - uri.jl: CONNECT with extra bits
TEST - uri.jl: space in URL
TEST - uri.jl: proxy basic auth with space url encoded
TEST - uri.jl: carriage return in URL
TEST - uri.jl: proxy double : in URL
TEST - uri.jl: proxy basic auth with double :
TEST - uri.jl: line feed in URL
TEST - uri.jl: proxy empty basic auth
TEST - uri.jl: proxy line feed in hostname
TEST - uri.jl: proxy % in hostname
TEST - uri.jl: proxy ; in hostname
TEST - uri.jl: proxy basic auth with unreservedchars
TEST - uri.jl: proxy only empty basic auth
TEST - uri.jl: proxy only basic auth
TEST - uri.jl: proxy = in URL
TEST - uri.jl: ipv6 address with Zone ID
TEST - uri.jl: ipv6 address with Zone ID, but '%' is not percent-encoded
TEST - uri.jl: ipv6 address ending with '%'
TEST - uri.jl: ipv6 address with Zone ID including bad character
TEST - uri.jl: just ipv6 Zone ID
TEST - uri.jl: tab in URL
TEST - uri.jl: form feed in URL
TEST - parser.jl - Request: curl get
TEST - parser.jl - Request: firefox get
TEST - parser.jl - Request: abcdefgh
TEST - parser.jl - Request: fragment in url
TEST - parser.jl - Request: get no headers no body
TEST - parser.jl - Request: get one header no body
TEST - parser.jl - Request: get funky content length body hello
TEST - parser.jl - Request: post identity body world
TEST - parser.jl - Request: post - chunked body: all your base are belong to us
TEST - parser.jl - Request: two chunks ; triple zero ending
TEST - parser.jl - Request: chunked with trailing headers. blech.
TEST - parser.jl - Request: with excessss after the length
TEST - parser.jl - Request: with quotes
TEST - parser.jl - Request: apachebench get
TEST - parser.jl - Request: query url with question mark
TEST - parser.jl - Request: newline prefix get
TEST - parser.jl - Request: upgrade request
TEST - parser.jl - Request: connect request
TEST - parser.jl - Request: report request
TEST - parser.jl - Request: request with no http version
TEST - parser.jl - Request: m-search request
TEST - parser.jl - Request: host terminated by a query string
TEST - parser.jl - Request: host:port terminated by a query string
TEST - parser.jl - Request: host:port terminated by a space
TEST - parser.jl - Request: PATCH request
TEST - parser.jl - Request: connect caps request
TEST - parser.jl - Request: utf-8 path request
TEST - parser.jl - Request: hostname underscore
TEST - parser.jl - Request: eat CRLF between requests, no "Connection: close" header
TEST - parser.jl - Request: eat CRLF between requests even if "Connection: close" is set
TEST - parser.jl - Request: PURGE request
TEST - parser.jl - Request: SEARCH request
TEST - parser.jl - Request: host:port and basic_auth
TEST - parser.jl - Request: upgrade post request
TEST - parser.jl - Request: connect with body request
TEST - parser.jl - Request: link request
TEST - parser.jl - Request: link request
TEST - parser.jl - Request: multiple connection header values with folding
TEST - parser.jl - Request: line folding in header value
TEST - parser.jl - Request: multiple connection header values with folding and lws
TEST - parser.jl - Request: multiple connection header values with folding and lws
TEST - parser.jl - Request: line folding in header value
TEST - parser.jl - Response: google 301
TEST - parser.jl - Response: no content-length response
TEST - parser.jl - Response: 404 no headers no body
TEST - parser.jl - Response: 301 no response phrase
TEST - parser.jl - Response: 200 trailing space on chunked body
TEST - parser.jl - Response: no carriage ret
TEST - parser.jl - Response: proxy connection
TEST - parser.jl - Response: underscore header key
TEST - parser.jl - Response: bonjourmadame.fr
TEST - parser.jl - Response: field underscore
TEST - parser.jl - Response: non-ASCII in status line
TEST - parser.jl - Response: http version 0.9
TEST - parser.jl - Response: neither content-length nor transfer-encoding response
TEST - parser.jl - Response: HTTP/1.0 with keep-alive and EOF-terminated 200 status
TEST - parser.jl - Response: HTTP/1.0 with keep-alive and a 204 status
TEST - parser.jl - Response: HTTP/1.1 with an EOF-terminated 200 status
TEST - parser.jl - Response: HTTP/1.1 with a 204 status
TEST - parser.jl - Response: HTTP/1.1 with a 204 status and keep-alive disabled
TEST - parser.jl - Response: HTTP/1.1 with chunked endocing and a 200 response
TEST - parser.jl - Response: field space
TEST - parser.jl - Response: amazon.com
TEST - parser.jl - Response: empty reason phrase after space
TEST - parser.jl - Response: Content-Length-X
running http client tests...
simple GET, HEAD, POST, DELETE, etc.
async client request
pass query to uri
cookie requests
client streaming tests
client body posting of various types
client transfer-encoding chunked
client multipart body
asynchronous client request body
client redirect following
client basic auth
high-level client request methods
running https client tests...
simple GET, HEAD, POST, DELETE, etc.
async client request
pass query to uri
cookie requests
client streaming tests
client body posting of various types
client transfer-encoding chunked
client multipart body
asynchronous client request body
client redirect following
client basic auth
high-level client request methods
[HTTP - 2018-01-13T06:09:11.917]: starting server to listen on: 127.0.0.1:8081
[HTTP - 2018-01-13T06:09:12.737]: server TCPServer is closed, shutting down...
[HTTP - 2018-01-13T06:09:13.275]: starting server to listen on: 127.0.0.1:8081
[HTTP - 2018-01-13T06:09:14.277]: throttling 127.0.0.1
[HTTP - 2018-01-13T06:09:14.281]: new tcp connection accepted, reading request...
[HTTP - 2018-01-13T06:09:14.324]: processing on connection i=0...
[HTTP - 2018-01-13T06:09:14.63 ]: throttling on connection i=0
[HTTP - 2018-01-13T06:09:14.63 ]: reading request bytes with readtimeout=180.0
[HTTP - 2018-01-13T06:09:14.641]: received request on connection i=0
HTTP.Request:

GET / HTTP/1.1
Host: 127.0.0.18081
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,application/json; charset=utf-8
User-Agent: HTTP.jl/0.0.0


[HTTP - 2018-01-13T06:09:14.695]: responding with response on connection i=0
HTTP.Response:

HTTP/1.1 200 OK
Connection: keep-alive
Content-Type: text/html; charset=utf-8
Date: Sat, 13 Jan 2018 06:09:14
Content-Language: en
Server: Julia/0.6.2
Content-Length: 0


[HTTP - 2018-01-13T06:09:14.698]: reading request bytes with readtimeout=180.0
[HTTP - 2018-01-13T06:09:16.71 ]: throttling 127.0.0.1
[HTTP - 2018-01-13T06:09:16.71 ]: new tcp connection accepted, reading request...
[HTTP - 2018-01-13T06:09:16.71 ]: processing on connection i=1...
[HTTP - 2018-01-13T06:09:16.71 ]: reading request bytes with readtimeout=180.0
[HTTP - 2018-01-13T06:09:16.71 ]: error parsing request on connection i=1: invalid HTTP version
[HTTP - 2018-01-13T06:09:16.71 ]: reading request bytes with readtimeout=180.0
[HTTP - 2018-01-13T06:09:20.727]: throttling 127.0.0.1
[HTTP - 2018-01-13T06:09:20.727]: new tcp connection accepted, reading request...
[HTTP - 2018-01-13T06:09:20.727]: processing on connection i=2...
[HTTP - 2018-01-13T06:09:20.727]: reading request bytes with readtimeout=180.0
[HTTP - 2018-01-13T06:09:20.727]: error parsing request on connection i=2: invalid HTTP method
[HTTP - 2018-01-13T06:09:20.727]: reading request bytes with readtimeout=180.0
HTTP/1.1 200 OK
Connection: keep-alive
Content-Type: text/html; charset=utf-8
Date: Sat, 13 Jan 2018 06:09:26
Content-Language: en
Server: Julia/0.6.2
Content-Length: 15

Body of Request[HTTP - 2018-01-13T06:09:29.025]: starting server to listen on: 127.0.0.1:8083
Test Summary: |   Pass  Broken   Total
HTTP          | 607596      10  607606
INFO: HTTP tests passed

>>> End of log
