>>> 'Pkg.add("DelayDiffEq")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.7.2
INFO: Installing DelayDiffEq v1.0.0
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBase v1.23.1
INFO: Installing DiffEqDiffTools v0.0.2
INFO: Installing DiffResults v0.0.1
INFO: Installing DiffRules v0.0.1
INFO: Installing Distances v0.5.0
INFO: Installing ForwardDiff v0.6.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.1
INFO: Installing LineSearches v2.2.1
INFO: Installing LinearMaps v1.0.1
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NLsolve v0.11.0
INFO: Installing NaNMath v0.2.6
INFO: Installing OrdinaryDiffEq v2.19.1
INFO: Installing Parameters v0.7.3
INFO: Installing RecipesBase v0.2.2
INFO: Installing RecursiveArrayTools v0.12.3
INFO: Installing Reexport v0.0.3
INFO: Installing Roots v0.4.1
INFO: Installing SHA v0.5.1
INFO: Installing SimpleTraits v0.5.1
INFO: Installing SpecialFunctions v0.3.3
INFO: Installing StaticArrays v0.6.2
INFO: Installing URIParser v0.2.0
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DelayDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DelayDiffEq")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1905.34375 MB free)
Uptime: 41874.0 sec
Load Avg:  1.03271484375  1.025390625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2765356 s       5687 s     125296 s     603657 s         14 s
#2  3503 MHz     667948 s        538 s      65128 s    3344760 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DelayDiffEq                   1.0.0
 - JSON                          0.14.0
34 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - CommonSubexpressions          0.0.1
 - Compat                        0.32.0
 - DataStructures                0.7.2
 - DiffBase                      0.3.2
 - DiffEqBase                    1.23.1
 - DiffEqDiffTools               0.0.2
 - DiffResults                   0.0.1
 - DiffRules                     0.0.1
 - Distances                     0.5.0
 - ForwardDiff                   0.6.0
 - GenericSVD                    0.1.0
 - Hiccup                        0.1.1
 - Juno                          0.3.1
 - LineSearches                  2.2.1
 - LinearMaps                    1.0.1
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - MuladdMacro                   0.0.2
 - NLSolversBase                 2.1.3
 - NLsolve                       0.11.0
 - NaNMath                       0.2.6
 - OrdinaryDiffEq                2.19.1
 - Parameters                    0.7.3
 - RecipesBase                   0.2.2
 - RecursiveArrayTools           0.12.3
 - Reexport                      0.0.3
 - Roots                         0.4.1
 - SHA                           0.5.1
 - SimpleTraits                  0.5.1
 - SpecialFunctions              0.3.3
 - StaticArrays                  0.6.2
 - URIParser                     0.2.0
INFO: Computing test dependencies for DelayDiffEq...
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Conda v0.7.0
INFO: Installing DiffEqCallbacks v0.3.0
INFO: Installing DiffEqDevTools v0.9.5
INFO: Installing DiffEqMonteCarlo v0.9.0
INFO: Installing DiffEqNoiseProcess v0.5.0
INFO: Installing DiffEqPDEBase v0.3.4
INFO: Installing DiffEqProblemLibrary v0.11.0
INFO: Installing DistributedArrays v0.4.0
INFO: Installing Distributions v0.14.2
INFO: Installing EllipsisNotation v0.2.2
INFO: Installing PDMats v0.7.0
INFO: Installing ParameterizedFunctions v2.2.0
INFO: Installing Primes v0.2.0
INFO: Installing QuadGK v0.1.3
INFO: Installing RandomNumbers v0.1.0
INFO: Installing ResettableStacks v0.2.0
INFO: Installing Rmath v0.3.0
INFO: Installing StatsBase v0.19.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing SymEngine v0.2.0
INFO: Installing Unitful v0.3.0
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building Rmath
INFO: Building SymEngine
INFO: Testing DelayDiffEq
Test Summary:       | Pass  Total
Discontinuity Tests |   11     11
 64.771867 seconds (28.37 M allocations: 1.552 GiB, 1.20% gc time)
Test Summary:        | Pass  Total
Constrained Timestep |   10     10
 15.202555 seconds (4.99 M allocations: 276.070 MiB, 1.79% gc time)
Standard tests complete. Onto idxs tests
  4.425876 seconds (1.94 M allocations: 110.206 MiB, 0.99% gc time)
  1.319088 seconds (564.77 k allocations: 27.841 MiB, 0.63% gc time)
Test Summary:          | Pass  Total
Unconstrained Timestep |   16     16
 34.494396 seconds (19.57 M allocations: 974.238 MiB, 1.12% gc time)
Test Summary:         | Pass  Total
Dependent Delay Tests |   16     16
  9.183189 seconds (17.14 M allocations: 425.144 MiB, 2.05% gc time)
Test Summary: | Pass  Total
Saveat Test   |   36     36
  5.322135 seconds (2.63 M allocations: 138.390 MiB, 1.25% gc time)
Test Summary:  | Pass  Total
Save_idxs Test |  544    544
 24.130355 seconds (20.31 M allocations: 848.636 MiB, 1.66% gc time)
Test Summary: | Pass  Total
Events        |    4      4
 19.079693 seconds (3.73 M allocations: 183.797 MiB, 1.57% gc time)
Test Summary: | Pass  Total
Units         |    6      6
 19.698703 seconds (9.33 M allocations: 468.449 MiB, 1.53% gc time)
Test Summary: | Pass  Total
Unique Times  |    2      2
  1.365565 seconds (591.74 k allocations: 30.280 MiB, 0.74% gc time)
Test Summary:    | Pass  Total
Residual Control |   21     21
  7.445469 seconds (5.29 M allocations: 189.958 MiB, 1.27% gc time)
Test Summary:     | Pass  Total
Lazy Interpolants |   16     16
109.077013 seconds (44.86 M allocations: 2.342 GiB, 1.30% gc time)
testing GenericImplicitEuler...   0.043558 seconds (204.08 k allocations: 9.563 MiB, 30.21% gc time)
testing GenericTrapezoid...   0.003504 seconds (22.07 k allocations: 1.145 MiB)
testing ImplicitEuler...   0.035187 seconds (128.88 k allocations: 3.222 MiB, 43.28% gc time)
testing ImplicitMidpoint...   0.000661 seconds (1.87 k allocations: 91.016 KiB)
testing Trapezoid...   0.005403 seconds (15.36 k allocations: 447.734 KiB)
testing TRBDF2...   0.007255 seconds (14.80 k allocations: 446.016 KiB)
testing SDIRK2...   0.069050 seconds (100.85 k allocations: 2.518 MiB, 29.02% gc time)
testing SSPSDIRK2...   0.002342 seconds (2.69 k allocations: 107.844 KiB)
testing Kvaerno3...   0.009147 seconds (20.12 k allocations: 560.375 KiB)
testing KenCarp3...   0.005646 seconds (9.89 k allocations: 303.359 KiB)
testing Cash4...   0.004629 seconds (18.47 k allocations: 513.031 KiB)
testing Hairer4...   0.003603 seconds (12.77 k allocations: 367.688 KiB)
testing Hairer42...   0.006321 seconds (12.43 k allocations: 360.250 KiB)
testing Kvaerno4...   0.003865 seconds (11.30 k allocations: 335.922 KiB)
testing KenCarp4...   0.003984 seconds (8.25 k allocations: 257.969 KiB)
testing Kvaerno5...   0.002960 seconds (11.29 k allocations: 319.844 KiB)
testing KenCarp5...   0.002900 seconds (14.39 k allocations: 376.766 KiB)
Test Summary:     |
SDIRK Integrators | No tests
144.626823 seconds (79.17 M allocations: 3.434 GiB, 2.15% gc time)
testing Rosenbrock23... Rosenbrock Integrators: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: MethodError: Cannot `convert` an object of type ForwardDiff.Dual{Void,Float64,1} to an object of type Float64
  This may have arisen from a call to the constructor Float64(...),
  since type constructors fall back to convert methods.
  Stacktrace:
   [1] convert(::Type{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}}, ::ForwardDiff.Dual{Void,Float64,1}) at /home/vagrant/.julia/v0.6/ForwardDiff/src/dual.jl:300
   [2] setindex! at ./multidimensional.jl:247 [inlined]
   [3] macro expansion at ./broadcast.jl:154 [inlined]
   [4] macro expansion at ./simdloop.jl:73 [inlined]
   [5] macro expansion at ./broadcast.jl:147 [inlined]
   [6] _broadcast! at ./broadcast.jl:139 [inlined]
   [7] broadcast_c! at ./broadcast.jl:211 [inlined]
   [8] broadcast! at ./broadcast.jl:204 [inlined]
   [9] ode_interpolant! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/dense/rosenbrock_interpolants.jl:33 [inlined]
   [10] ode_interpolant(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}, ::Void, ::Type{Val{0}}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/dense/generic_dense.jl:339
   [11] ode_interpolation(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Function, ::Void, ::Type{T} where T) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/dense/generic_dense.jl:255
   [12] (::OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}})(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Void, ::Type{T} where T) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/interp_func.jl:63
   [13] (::DelayDiffEq.HistoryFunction{DiffEqProblemLibrary.##24#25{Float64},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqProblemLibrary.#f_1delay,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DiffEqProblemLibrary.#f_1delay,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DiffEqProblemLibrary.#f_1delay,Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Array{Float64,1}}})(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Type{T} where T, ::Void) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/history_function.jl:26
   [14] f_1delay(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Array{Float64,1}, ::DelayDiffEq.HistoryFunction{DiffEqProblemLibrary.##24#25{Float64},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqProblemLibrary.#f_1delay,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DiffEqProblemLibrary.#f_1delay,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DiffEqProblemLibrary.#f_1delay,Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Array{Float64,1}}}, ::Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1},1}) at /home/vagrant/.julia/v0.6/DiffEqProblemLibrary/src/dde_premade_problems.jl:8
   [15] (::OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}})(::ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1}, ::Array{Float64,1}, ::Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},0xb046287d533b082d},Float64,1},1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/derivative_wrappers.jl:6
   [16] derivative! at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:65 [inlined]
   [17] derivative! at /home/vagrant/.julia/v0.6/ForwardDiff/src/derivative.jl:63 [inlined]
   [18] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqProblemLibrary.#f_1delay,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DiffEqProblemLibrary.#f_1delay,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DiffEqProblemLibrary.#f_1delay,Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Array{Float64,1}},DiffEqBase.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Void,Array{Float64,1}}, ::OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}, ::Bool) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/rosenbrock_integrators.jl:33
   [19] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqProblemLibrary.#f_1delay,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DiffEqProblemLibrary.#f_1delay,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DiffEqProblemLibrary.#f_1delay,Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Array{Float64,1}},DiffEqBase.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Void,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:108
   [20] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DelayDiffEq.##35#44{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DelayDiffEq.##37#46{DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}},Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Float64,2,Array{Array{Float64,1},1},Array{Array{Float64,1},1},Dict{Symbol,Float64},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,DiffEqProblemLibrary.#f_1delay,Void,UniformScaling{Int64},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},OrdinaryDiffEq.InterpolationData{DiffEqProblemLibrary.#f_1delay,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}}}},DiffEqProblemLibrary.#f_1delay,Void,OrdinaryDiffEq.Rosenbrock23Cache{Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},OrdinaryDiffEq.Rosenbrock23ConstantCache{Float64,Base.#identity,Base.#identity},OrdinaryDiffEq.TimeGradientWrapper{OrdinaryDiffEq.VectorF{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Array{Float64,1}},OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},ForwardDiff.JacobianConfig{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1,Tuple{Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1},Array{ForwardDiff.Dual{ForwardDiff.Tag{OrdinaryDiffEq.UJacobianWrapper{OrdinaryDiffEq.VectorFReturn{DiffEqProblemLibrary.#f_1delay,Tuple{Int64}},Float64,Array{Float64,1}},0xb046287d533b082d},Float64,1},1}}}},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Array{Float64,1}},DiffEqBase.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},DataStructures.BinaryHeap{DelayDiffEq.Discontinuity{Float64},DataStructures.LessThan},Void,Void,Int64},Void,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:317
   [21] #solve#54(::Array{Any,1}, ::Function, ::DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}, ::DelayDiffEq.MethodOfSteps{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Void,Void,Void,false}, ::Array{Array{Float64,1},1}, ::Array{Float64,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:390
   [22] solve(::DiffEqBase.DDEProblem{Array{Float64,1},Float64,Array{Float64,1},Void,true,DiffEqProblemLibrary.#f_1delay,DiffEqProblemLibrary.##24#25{Float64},Void,UniformScaling{Int64}}, ::DelayDiffEq.MethodOfSteps{OrdinaryDiffEq.Rosenbrock23{0,true,DiffEqBase.LinSolveFactorize{Base.LinAlg.#lufact!},DataType},Void,Void,Void,false}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:389
   [23] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/rosenbrock_integrators.jl:17 [inlined]
   [24] anonymous at ./<missing>:?
   [25] include_from_node1(::String) at ./loading.jl:569
   [26] include(::String) at ./sysimg.jl:14
   [27] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:15 [inlined]
   [28] macro expansion at ./test.jl:860 [inlined]
   [29] macro expansion at ./util.jl:237 [inlined]
   [30] anonymous at ./<missing>:?
   [31] include_from_node1(::String) at ./loading.jl:569
   [32] include(::String) at ./sysimg.jl:14
   [33] process_options(::Base.JLOptions) at ./client.jl:305
   [34] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/rosenbrock_integrators.jl, in expression starting on line 14
Test Summary:          | Error  Total
Rosenbrock Integrators |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl, in expression starting on line 15
=============================[ ERROR: DelayDiffEq ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Conda v0.7.0
INFO: Removing DiffEqCallbacks v0.3.0
INFO: Removing DiffEqDevTools v0.9.5
INFO: Removing DiffEqMonteCarlo v0.9.0
INFO: Removing DiffEqNoiseProcess v0.5.0
INFO: Removing DiffEqPDEBase v0.3.4
INFO: Removing DiffEqProblemLibrary v0.11.0
INFO: Removing DistributedArrays v0.4.0
INFO: Removing Distributions v0.14.2
INFO: Removing EllipsisNotation v0.2.2
INFO: Removing PDMats v0.7.0
INFO: Removing ParameterizedFunctions v2.2.0
INFO: Removing Primes v0.2.0
INFO: Removing QuadGK v0.1.3
INFO: Removing RandomNumbers v0.1.0
INFO: Removing ResettableStacks v0.2.0
INFO: Removing Rmath v0.3.0
INFO: Removing StatsBase v0.19.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing SymEngine v0.2.0
INFO: Removing Unitful v0.3.0
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DelayDiffEq had test errors

>>> End of log
