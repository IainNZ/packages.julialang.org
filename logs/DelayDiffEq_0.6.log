>>> 'Pkg.add("DelayDiffEq")' log
INFO: Installing Calculus v0.2.2
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing DelayDiffEq v0.2.0
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v0.13.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.1
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Iterators v0.3.0
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.6
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing OrdinaryDiffEq v1.6.1
INFO: Installing Parameters v0.7.2
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.5
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.3
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing Roots v0.3.0
INFO: Installing SimpleTraits v0.4.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DelayDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DelayDiffEq")' log
Julia Version 0.6.0-pre.beta.28
Commit cab83c5 (2017-04-05 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1884.05078125 MB free)
Uptime: 22700.0 sec
Load Avg:  0.96923828125  1.017578125  1.1162109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1393289 s         46 s     110873 s     491640 s         60 s
#2  3500 MHz     610783 s       6599 s      77308 s    1481697 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DelayDiffEq                   0.2.0
 - JSON                          0.8.3
31 additional packages:
 - Calculus                      0.2.2
 - Combinatorics                 0.4.0
 - Compat                        0.22.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - DiffEqBase                    0.13.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.1
 - GenericSVD                    0.0.2
 - Hiccup                        0.1.1
 - InplaceOps                    0.1.0
 - Iterators                     0.3.0
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - Media                         0.2.6
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - OrdinaryDiffEq                1.6.1
 - Parameters                    0.7.2
 - PolynomialFactors             0.0.4
 - Polynomials                   0.1.5
 - PositiveFactorizations        0.0.4
 - Primes                        0.1.3
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - Roots                         0.3.0
 - SimpleTraits                  0.4.0
 - SpecialFunctions              0.1.1
INFO: Computing test dependencies for DelayDiffEq...
INFO: Installing BinDeps v0.4.7
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing DiffEqDevTools v0.6.0
INFO: Installing DiffEqPDEBase v0.1.0
INFO: Installing Distributions v0.12.2
INFO: Installing EllipsisNotation v0.0.2
INFO: Installing PDMats v0.5.6
INFO: Installing QuadGK v0.1.2
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Rmath
INFO: Testing DelayDiffEq
Test Summary:           | Pass  Total
Discontinuity Tree Test |    1      1
  1.632670 seconds (783.64 k allocations: 39.033 MiB, 0.87% gc time)
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:140
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
Test Summary:        | Pass  Total
Constrained Timestep |    4      4
 27.116981 seconds (12.87 M allocations: 952.336 MiB, 1.02% gc time)
Standard tests complete. Onto idxs tests
  7.957186 seconds (13.67 M allocations: 458.826 MiB, 1.87% gc time)
  6.012943 seconds (9.48 M allocations: 317.322 MiB, 1.97% gc time)
Test Summary:          | Pass  Total
Unconstrained Timestep |    6      6
 48.596843 seconds (38.14 M allocations: 1.798 GiB, 1.41% gc time)
Test Summary: | Pass  Total
Events        |    2      2
 37.011123 seconds (9.89 M allocations: 605.723 MiB, 1.39% gc time)
INFO: DelayDiffEq tests passed
INFO: Removing BinDeps v0.4.7
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing DiffEqDevTools v0.6.0
INFO: Removing DiffEqPDEBase v0.1.0
INFO: Removing Distributions v0.12.2
INFO: Removing EllipsisNotation v0.0.2
INFO: Removing PDMats v0.5.6
INFO: Removing QuadGK v0.1.2
INFO: Removing Rmath v0.1.6
INFO: Removing SHA v0.3.2
INFO: Removing StatsBase v0.13.1
INFO: Removing StatsFuns v0.4.0
INFO: Removing URIParser v0.1.8
INFO: Removing VectorizedRoutines v0.0.2

>>> End of log
