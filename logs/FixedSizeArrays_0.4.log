>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FixedSizeArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (577.48828125 MB free)
Uptime: 32150.0 sec
Load Avg:  0.94091796875  0.99755859375  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1498092 s       4419 s     112706 s    1267518 s         54 s
#2  3500 MHz    1054069 s       2808 s      99163 s    1920240 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - FixedSizeArrays               0.2.5
 - JSON                          0.9.1
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
    Failure :: (line:-1) :: type inference :: fact was false
      Expression: length(x) --> 0
        Expected: 0
        Occurred: 1
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
    > nan
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
[FixedSizeArrays.Mat{4,4,Float64}(
    0.2201175240299691 0.22550360349147192 0.7116780703444883 0.7996439273297085
    0.8876996551458369 0.5834457380750513 0.29761375695237247 0.9977068011526691
    0.7914417679193997 0.9597502819853259 0.1801206348534461 0.5563738756147614
    0.3610151749692514 0.38310685662715005 0.2923400257662896 0.4744853750144611
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.37477741360868744 0.022270466556542967 0.6265020020309378 0.9252620276875221
    0.9187641955025356 0.4070391080917066 0.36435608402148545 0.9257715465005745
    0.6263768487112618 0.5539788369311223 0.8871288848763468 0.24758035402881395
    0.923534677390289 0.8956657470247746 0.7727917457360174 0.20666397238580458
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.028110385,0.6585251,0.23685968)
 RGB(0.6220695,0.6578822,0.42387724)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.77525866,0.68919337,0.16473043)
 Vec(0.14257038,0.6676872,0.61044705)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
    > construction, conversion, 10
  > Constructors
    > FixedVector: unary, from FixedVector
  > map
    > Vec and AbstractVector
    > FixedVectorNoTuple
    > Mat and AbstractMatrix
    > Size checking
    > Broadcast of scalars
  > Complex Ops
    > dot product
  > Destructure
  > Indexing
    > FixedVector
    > FixedMatrix
    > fslice
      > getindex
      > setindex
  > Ops
    > revers
    > Negation
    > Addition
    > Subtraction
    > Multiplication
    > Mixed Type Multiplication
    > Division
    > Relational
    > Scalar
    > vector norm+cross product
    > hypot
    > normalize
    > reduce
  > Promotion
  > Conversion 2
  > Conversion to Vec{N,UInt64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Int64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float32}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Matrix
  > Matrix Math
    > Matrix{1, 1} * Vector{1}
    > Matrix{1, 1} * Matrix{1, 1}
    > Matrix{1, 1}*(2I)
    > Matrix{1, 1, T} * Vector{1, U}
    > Matrix{1, 1, T} * Matrix{1, 1, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{1, 2} * Vector{2}
    > Matrix{1, 2} * Matrix{2, 1}
    > Matrix{1, 2}*(2I)
    > Matrix{1, 2, T} * Vector{2, U}
    > Matrix{1, 2, T} * Matrix{2, 1, U}
    > Matrix{1, 2} * Matrix{1, 2}
    > transpose M
    > ctranspose M
    > Matrix{1, 3} * Vector{3}
    > Matrix{1, 3} * Matrix{3, 1}
    > Matrix{1, 3}*(2I)
    > Matrix{1, 3, T} * Vector{3, U}
    > Matrix{1, 3, T} * Matrix{3, 1, U}
    > Matrix{1, 3} * Matrix{1, 3}
    > transpose M
    > ctranspose M
    > Matrix{1, 4} * Vector{4}
    > Matrix{1, 4} * Matrix{4, 1}
    > Matrix{1, 4}*(2I)
    > Matrix{1, 4, T} * Vector{4, U}
    > Matrix{1, 4, T} * Matrix{4, 1, U}
    > Matrix{1, 4} * Matrix{1, 4}
    > transpose M
    > ctranspose M
    > Matrix{1, 5} * Vector{5}
    > Matrix{1, 5} * Matrix{5, 1}
    > Matrix{1, 5}*(2I)
    > Matrix{1, 5, T} * Vector{5, U}
    > Matrix{1, 5, T} * Matrix{5, 1, U}
    > Matrix{1, 5} * Matrix{1, 5}
    > transpose M
    > ctranspose M
    > Matrix{2, 1} * Vector{1}
    > Matrix{2, 1} * Matrix{1, 2}
    > Matrix{2, 1}*(2I)
    > Matrix{2, 1, T} * Vector{1, U}
    > Matrix{2, 1, T} * Matrix{1, 2, U}
    > Matrix{2, 1} * Matrix{2, 1}
    > transpose M
    > ctranspose M
    > Matrix{2, 2} * Vector{2}
    > Matrix{2, 2} * Matrix{2, 2}
    > Matrix{2, 2}*(2I)
    > Matrix{2, 2, T} * Vector{2, U}
    > Matrix{2, 2, T} * Matrix{2, 2, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{2, 3} * Vector{3}
    > Matrix{2, 3} * Matrix{3, 2}
    > Matrix{2, 3}*(2I)
    > Matrix{2, 3, T} * Vector{3, U}
    > Matrix{2, 3, T} * Matrix{3, 2, U}
    > Matrix{2, 3} * Matrix{2, 3}
    > transpose M
    > ctranspose M
    > Matrix{2, 4} * Vector{4}
    > Matrix{2, 4} * Matrix{4, 2}
    > Matrix{2, 4}*(2I)
    > Matrix{2, 4, T} * Vector{4, U}
    > Matrix{2, 4, T} * Matrix{4, 2, U}
    > Matrix{2, 4} * Matrix{2, 4}
    > transpose M
    > ctranspose M
    > Matrix{2, 5} * Vector{5}
    > Matrix{2, 5} * Matrix{5, 2}
    > Matrix{2, 5}*(2I)
    > Matrix{2, 5, T} * Vector{5, U}
    > Matrix{2, 5, T} * Matrix{5, 2, U}
    > Matrix{2, 5} * Matrix{2, 5}
    > transpose M
    > ctranspose M
    > Matrix{3, 1} * Vector{1}
    > Matrix{3, 1} * Matrix{1, 3}
    > Matrix{3, 1}*(2I)
    > Matrix{3, 1, T} * Vector{1, U}
    > Matrix{3, 1, T} * Matrix{1, 3, U}
    > Matrix{3, 1} * Matrix{3, 1}
    > transpose M
    > ctranspose M
    > Matrix{3, 2} * Vector{2}
    > Matrix{3, 2} * Matrix{2, 3}
    > Matrix{3, 2}*(2I)
    > Matrix{3, 2, T} * Vector{2, U}
    > Matrix{3, 2, T} * Matrix{2, 3, U}
    > Matrix{3, 2} * Matrix{3, 2}
    > transpose M
    > ctranspose M
    > Matrix{3, 3} * Vector{3}
    > Matrix{3, 3} * Matrix{3, 3}
    > Matrix{3, 3}*(2I)
    > Matrix{3, 3, T} * Vector{3, U}
    > Matrix{3, 3, T} * Matrix{3, 3, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{3, 4} * Vector{4}
    > Matrix{3, 4} * Matrix{4, 3}
    > Matrix{3, 4}*(2I)
    > Matrix{3, 4, T} * Vector{4, U}
    > Matrix{3, 4, T} * Matrix{4, 3, U}
    > Matrix{3, 4} * Matrix{3, 4}
    > transpose M
    > ctranspose M
    > Matrix{3, 5} * Vector{5}
    > Matrix{3, 5} * Matrix{5, 3}
    > Matrix{3, 5}*(2I)
    > Matrix{3, 5, T} * Vector{5, U}
    > Matrix{3, 5, T} * Matrix{5, 3, U}
    > Matrix{3, 5} * Matrix{3, 5}
    > transpose M
    > ctranspose M
    > Matrix{4, 1} * Vector{1}
    > Matrix{4, 1} * Matrix{1, 4}
    > Matrix{4, 1}*(2I)
    > Matrix{4, 1, T} * Vector{1, U}
    > Matrix{4, 1, T} * Matrix{1, 4, U}
    > Matrix{4, 1} * Matrix{4, 1}
    > transpose M
    > ctranspose M
    > Matrix{4, 2} * Vector{2}
    > Matrix{4, 2} * Matrix{2, 4}
    > Matrix{4, 2}*(2I)
    > Matrix{4, 2, T} * Vector{2, U}
    > Matrix{4, 2, T} * Matrix{2, 4, U}
    > Matrix{4, 2} * Matrix{4, 2}
    > transpose M
    > ctranspose M
    > Matrix{4, 3} * Vector{3}
    > Matrix{4, 3} * Matrix{3, 4}
    > Matrix{4, 3}*(2I)
    > Matrix{4, 3, T} * Vector{3, U}
    > Matrix{4, 3, T} * Matrix{3, 4, U}
    > Matrix{4, 3} * Matrix{4, 3}
    > transpose M
    > ctranspose M
    > Matrix{4, 4} * Vector{4}
    > Matrix{4, 4} * Matrix{4, 4}
    > Matrix{4, 4}*(2I)
    > Matrix{4, 4, T} * Vector{4, U}
    > Matrix{4, 4, T} * Matrix{4, 4, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{4, 5} * Vector{5}
    > Matrix{4, 5} * Matrix{5, 4}
    > Matrix{4, 5}*(2I)
    > Matrix{4, 5, T} * Vector{5, U}
    > Matrix{4, 5, T} * Matrix{5, 4, U}
    > Matrix{4, 5} * Matrix{4, 5}
    > transpose M
    > ctranspose M
    > Matrix{5, 1} * Vector{1}
    > Matrix{5, 1} * Matrix{1, 5}
    > Matrix{5, 1}*(2I)
    > Matrix{5, 1, T} * Vector{1, U}
    > Matrix{5, 1, T} * Matrix{1, 5, U}
    > Matrix{5, 1} * Matrix{5, 1}
    > transpose M
    > ctranspose M
    > Matrix{5, 2} * Vector{2}
    > Matrix{5, 2} * Matrix{2, 5}
    > Matrix{5, 2}*(2I)
    > Matrix{5, 2, T} * Vector{2, U}
    > Matrix{5, 2, T} * Matrix{2, 5, U}
    > Matrix{5, 2} * Matrix{5, 2}
    > transpose M
    > ctranspose M
    > Matrix{5, 3} * Vector{3}
    > Matrix{5, 3} * Matrix{3, 5}
    > Matrix{5, 3}*(2I)
    > Matrix{5, 3, T} * Vector{3, U}
    > Matrix{5, 3, T} * Matrix{3, 5, U}
    > Matrix{5, 3} * Matrix{5, 3}
    > transpose M
    > ctranspose M
    > Matrix{5, 4} * Vector{4}
    > Matrix{5, 4} * Matrix{4, 5}
    > Matrix{5, 4}*(2I)
    > Matrix{5, 4, T} * Vector{4, U}
    > Matrix{5, 4, T} * Matrix{4, 5, U}
    > Matrix{5, 4} * Matrix{5, 4}
    > transpose M
    > ctranspose M
    > Matrix{5, 5} * Vector{5}
    > Matrix{5, 5} * Matrix{5, 5}
    > Matrix{5, 5}*(2I)
    > Matrix{5, 5, T} * Vector{5, U}
    > Matrix{5, 5, T} * Matrix{5, 5, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > expm(M::Mat{3,3,Float64})
    > expm(M::Mat{3,3, BigFloat})
    > Matrix * FixedVectorNoTuple
    > Outer product  Vec{N} * Mat{1,M}
    > Large matrix multiply
  > Meta
  > Vector Math
    > all
  > Equality
  > mapping operators
    > binary: 
      > .+ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .+ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .+ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .- with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .- with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .- with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .* with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .* with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .* with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > ./ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > ./ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > ./ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .\ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .\ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .\ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > / with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > / with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > / with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .== with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .== with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .== with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .!= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .!= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .!= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .< with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .< with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .< with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .<= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .<= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .<= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .> with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .> with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .> with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .>= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .>= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .>= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > + with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > + with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > + with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > - with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > - with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > min with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > min with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > min with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > max with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > max with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > max with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > atan2 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > atan2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > atan2 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besselj with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besselj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselj with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > bessely with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > bessely with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > bessely with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > hankelh1 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > hankelh1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh1 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > hankelh2 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > hankelh2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh2 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besseli with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besseli with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besseli with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besselk with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besselk with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselk with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > beta with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > beta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > beta with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > lbeta with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > lbeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > lbeta with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
    > unary: 
      > - with Vec(1,2,9223372036854775807)
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > - with Vec(0.777,0.777,0.777,0.777)
      > ~ with Vec(1,2,9223372036854775807)
      > ~ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > ~ with Vec(0.777,0.777,0.777,0.777)
      > conj with Vec(1,2,9223372036854775807)
      > conj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > conj with Vec(0.777,0.777,0.777,0.777)
      > abs with Vec(1,2,9223372036854775807)
      > abs with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > abs with Vec(0.777,0.777,0.777,0.777)
      > sin with Vec(1,2,9223372036854775807)
      > sin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sin with Vec(0.777,0.777,0.777,0.777)
      > cos with Vec(1,2,9223372036854775807)
      > cos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cos with Vec(0.777,0.777,0.777,0.777)
      > tan with Vec(1,2,9223372036854775807)
      > tan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tan with Vec(0.777,0.777,0.777,0.777)
      > sinh with Vec(1,2,9223372036854775807)
      > sinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinh with Vec(0.777,0.777,0.777,0.777)
      > cosh with Vec(1,2,9223372036854775807)
      > cosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosh with Vec(0.777,0.777,0.777,0.777)
      > tanh with Vec(1,2,9223372036854775807)
      > tanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tanh with Vec(0.777,0.777,0.777,0.777)
      > asin with Vec(1,2,9223372036854775807)
      > asin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asin with Vec(0.777,0.777,0.777,0.777)
      > acos with Vec(1,2,9223372036854775807)
      > acos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acos with Vec(0.777,0.777,0.777,0.777)
      > atan with Vec(1,2,9223372036854775807)
      > atan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atan with Vec(0.777,0.777,0.777,0.777)
      > asinh with Vec(1,2,9223372036854775807)
      > asinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asinh with Vec(0.777,0.777,0.777,0.777)
      > acosh with Vec(1,2,9223372036854775807)
      > acosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosh with Vec(0.777,0.777,0.777,0.777)
      > atanh with Vec(1,2,9223372036854775807)
      > atanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atanh with Vec(0.777,0.777,0.777,0.777)
      > sec with Vec(1,2,9223372036854775807)
      > sec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sec with Vec(0.777,0.777,0.777,0.777)
      > csc with Vec(1,2,9223372036854775807)
      > csc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csc with Vec(0.777,0.777,0.777,0.777)
      > cot with Vec(1,2,9223372036854775807)
      > cot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cot with Vec(0.777,0.777,0.777,0.777)
      > asec with Vec(1,2,9223372036854775807)
      > asec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asec with Vec(0.777,0.777,0.777,0.777)
      > acsc with Vec(1,2,9223372036854775807)
      > acsc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsc with Vec(0.777,0.777,0.777,0.777)
      > acot with Vec(1,2,9223372036854775807)
      > acot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acot with Vec(0.777,0.777,0.777,0.777)
      > sech with Vec(1,2,9223372036854775807)
      > sech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sech with Vec(0.777,0.777,0.777,0.777)
      > csch with Vec(1,2,9223372036854775807)
      > csch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csch with Vec(0.777,0.777,0.777,0.777)
      > coth with Vec(1,2,9223372036854775807)
      > coth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > coth with Vec(0.777,0.777,0.777,0.777)
      > asech with Vec(1,2,9223372036854775807)
      > asech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asech with Vec(0.777,0.777,0.777,0.777)
      > acsch with Vec(1,2,9223372036854775807)
      > acsch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsch with Vec(0.777,0.777,0.777,0.777)
      > acoth with Vec(1,2,9223372036854775807)
      > acoth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acoth with Vec(0.777,0.777,0.777,0.777)
      > sinc with Vec(1,2,9223372036854775807)
      > sinc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinc with Vec(0.777,0.777,0.777,0.777)
      > cosc with Vec(1,2,9223372036854775807)
      > cosc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosc with Vec(0.777,0.777,0.777,0.777)
      > cosd with Vec(1,2,9223372036854775807)
      > cosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosd with Vec(0.777,0.777,0.777,0.777)
      > cotd with Vec(1,2,9223372036854775807)
      > cotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cotd with Vec(0.777,0.777,0.777,0.777)
      > cscd with Vec(1,2,9223372036854775807)
      > cscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cscd with Vec(0.777,0.777,0.777,0.777)
      > secd with Vec(1,2,9223372036854775807)
      > secd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > secd with Vec(0.777,0.777,0.777,0.777)
      > sind with Vec(1,2,9223372036854775807)
      > sind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sind with Vec(0.777,0.777,0.777,0.777)
      > tand with Vec(1,2,9223372036854775807)
      > tand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tand with Vec(0.777,0.777,0.777,0.777)
      > acosd with Vec(1,2,9223372036854775807)
      > acosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosd with Vec(0.777,0.777,0.777,0.777)
      > acotd with Vec(1,2,9223372036854775807)
      > acotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acotd with Vec(0.777,0.777,0.777,0.777)
      > acscd with Vec(1,2,9223372036854775807)
      > acscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acscd with Vec(0.777,0.777,0.777,0.777)
      > asecd with Vec(1,2,9223372036854775807)
      > asecd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asecd with Vec(0.777,0.777,0.777,0.777)
      > asind with Vec(1,2,9223372036854775807)
      > asind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asind with Vec(0.777,0.777,0.777,0.777)
      > atand with Vec(1,2,9223372036854775807)
      > atand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atand with Vec(0.777,0.777,0.777,0.777)
      > rad2deg with Vec(1,2,9223372036854775807)
      > rad2deg with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > rad2deg with Vec(0.777,0.777,0.777,0.777)
      > deg2rad with Vec(1,2,9223372036854775807)
      > deg2rad with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > deg2rad with Vec(0.777,0.777,0.777,0.777)
      > log with Vec(1,2,9223372036854775807)
      > log with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log with Vec(0.777,0.777,0.777,0.777)
      > log2 with Vec(1,2,9223372036854775807)
      > log2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log2 with Vec(0.777,0.777,0.777,0.777)
      > log10 with Vec(1,2,9223372036854775807)
      > log10 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log10 with Vec(0.777,0.777,0.777,0.777)
      > log1p with Vec(1,2,9223372036854775807)
      > log1p with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log1p with Vec(0.777,0.777,0.777,0.777)
      > exponent with Vec(1,2,9223372036854775807)
      > exponent with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exponent with Vec(0.777,0.777,0.777,0.777)
      > exp with Vec(1,2,9223372036854775807)
      > exp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp with Vec(0.777,0.777,0.777,0.777)
      > exp2 with Vec(1,2,9223372036854775807)
      > exp2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp2 with Vec(0.777,0.777,0.777,0.777)
      > expm1 with Vec(1,2,9223372036854775807)
      > expm1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > expm1 with Vec(0.777,0.777,0.777,0.777)
      > cbrt with Vec(1,2,9223372036854775807)
      > cbrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cbrt with Vec(0.777,0.777,0.777,0.777)
      > sqrt with Vec(1,2,9223372036854775807)
      > sqrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sqrt with Vec(0.777,0.777,0.777,0.777)
      > erf with Vec(1,2,9223372036854775807)
      > erf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erf with Vec(0.777,0.777,0.777,0.777)
      > erfc with Vec(1,2,9223372036854775807)
      > erfc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfc with Vec(0.777,0.777,0.777,0.777)
      > erfcx with Vec(1,2,9223372036854775807)
      > erfcx with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfcx with Vec(0.777,0.777,0.777,0.777)
      > erfi with Vec(1,2,9223372036854775807)
      > erfi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfi with Vec(0.777,0.777,0.777,0.777)
      > dawson with Vec(1,2,9223372036854775807)
      > dawson with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > dawson with Vec(0.777,0.777,0.777,0.777)
      > trunc with Vec(1,2,9223372036854775807)
      > trunc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > trunc with Vec(0.777,0.777,0.777,0.777)
      > round with Vec(1,2,9223372036854775807)
      > round with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > round with Vec(0.777,0.777,0.777,0.777)
      > ceil with Vec(1,2,9223372036854775807)
      > ceil with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > ceil with Vec(0.777,0.777,0.777,0.777)
      > floor with Vec(1,2,9223372036854775807)
      > floor with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > floor with Vec(0.777,0.777,0.777,0.777)
      > significand with Vec(1,2,9223372036854775807)
      > significand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > significand with Vec(0.777,0.777,0.777,0.777)
      > lgamma with Vec(1,2,9223372036854775807)
      > lgamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lgamma with Vec(0.777,0.777,0.777,0.777)
      > gamma with Vec(1,2,9223372036854775807)
      > gamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > gamma with Vec(0.777,0.777,0.777,0.777)
      > lfact with Vec(1,2,9223372036854775807)
      > lfact with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lfact with Vec(0.777,0.777,0.777,0.777)
      > frexp with Vec(1,2,9223372036854775807)
      > frexp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > frexp with Vec(0.777,0.777,0.777,0.777)
      > modf with Vec(1,2,9223372036854775807)
      > modf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > modf with Vec(0.777,0.777,0.777,0.777)
      > airy with Vec(1,2,9223372036854775807)
      > airy with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airy with Vec(0.777,0.777,0.777,0.777)
      > airyai with Vec(1,2,9223372036854775807)
      > airyai with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyai with Vec(0.777,0.777,0.777,0.777)
      > airyprime with Vec(1,2,9223372036854775807)
      > airyprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyprime with Vec(0.777,0.777,0.777,0.777)
      > airyaiprime with Vec(1,2,9223372036854775807)
      > airyaiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyaiprime with Vec(0.777,0.777,0.777,0.777)
      > airybi with Vec(1,2,9223372036854775807)
      > airybi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybi with Vec(0.777,0.777,0.777,0.777)
      > airybiprime with Vec(1,2,9223372036854775807)
      > airybiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybiprime with Vec(0.777,0.777,0.777,0.777)
      > besselj0 with Vec(1,2,9223372036854775807)
      > besselj0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj0 with Vec(0.777,0.777,0.777,0.777)
      > besselj1 with Vec(1,2,9223372036854775807)
      > besselj1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj1 with Vec(0.777,0.777,0.777,0.777)
      > bessely0 with Vec(1,2,9223372036854775807)
      > bessely0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely0 with Vec(0.777,0.777,0.777,0.777)
      > bessely1 with Vec(1,2,9223372036854775807)
      > bessely1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely1 with Vec(0.777,0.777,0.777,0.777)
      > eta with Vec(1,2,9223372036854775807)
      > eta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > eta with Vec(0.777,0.777,0.777,0.777)
      > zeta with Vec(1,2,9223372036854775807)
      > zeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > zeta with Vec(0.777,0.777,0.777,0.777)
      > digamma with Vec(1,2,9223372036854775807)
      > digamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > digamma with Vec(0.777,0.777,0.777,0.777)
      > real with Vec(1,2,9223372036854775807)
      > real with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > real with Vec(0.777,0.777,0.777,0.777)
      > imag with Vec(1,2,9223372036854775807)
      > imag with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > imag with Vec(0.777,0.777,0.777,0.777)
  > typed round/floor/ceil/trunc
  > shift, push...
  > Base.Test
show for subtype
1 fact verified.
Out of 9308 total facts:
  Verified: 9307
  Failed:   1
ERROR: LoadError: FactCheck finished with 1 non-successful tests.
 in error at ./error.jl:21
 in exitstatus at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:568
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/FixedSizeArrays/test/runtests.jl, in expression starting on line 1311
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
