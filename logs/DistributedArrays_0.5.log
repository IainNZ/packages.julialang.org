>>> 'Pkg.add("DistributedArrays")' log
INFO: Cloning cache of DistributedArrays from https://github.com/JuliaParallel/DistributedArrays.jl.git
INFO: Installing DistributedArrays v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DistributedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DistributedArrays")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for DistributedArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing DistributedArrays
WARNING: Base.CPU_CORES is deprecated.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/test/runtests.jl:3
WARNING: Base.OrFun is deprecated, use Base.#| instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:678
WARNING: Base.AndFun is deprecated, use Base.#& instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:678
WARNING: Base.IdFun is deprecated, use Base.#identity instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:786
WARNING: Base.Func is deprecated, use Function instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:788
WARNING: Base.IdFun is deprecated, use Base.#identity instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:786
WARNING: Base.Func is deprecated, use Function instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:788
WARNING: Base.IdFun is deprecated, use Base.#identity instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:786
WARNING: Base.Func is deprecated, use Function instead.
  likely near /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:788
test distribute
  > test default distribute
  > test distribute with procs arguments
  > test distribute with procs and dist arguments
3 facts verified.
test DArray equality
ERROR: LoadError: LoadError: MethodError: similar(::DistributedArrays.DArray{Float64,2,Array{Float64,2}}, ::Type{Float64}, ::Tuple{Int64,Int64}) is ambiguous. Candidates:
  svec(Tuple{Base.#similar,DistributedArrays.DArray{Float64,2,Array{Float64,2}},Type{Float64},Tuple{Int64,Int64}},svec(),similar(a::AbstractArray, T::Type, dims::Tuple{Vararg{Int64,N<:Any}}) at abstractarray.jl:159)
  svec(Tuple{Base.#similar,DistributedArrays.DArray{Float64,2,Array{Float64,2}},Type{Float64},Tuple{Int64,Int64}},svec(),similar(a::AbstractArray, T::Type, dims::Tuple{Vararg{Integer,N<:Any}}) at abstractarray.jl:158)
  svec(Tuple{Base.#similar,DistributedArrays.DArray{Float64,2,Array{Float64,2}},Type{Float64},Tuple{Int64,Int64}},svec(),similar(a::AbstractArray, T::Type, dims::Tuple{Vararg{Int64,N<:Any}}) at abstractarray.jl:159)
  svec(Tuple{Base.#similar,DistributedArrays.DArray{Float64,2,Array{Float64,2}},Type{Float64},Tuple{Int64,Int64}},svec(),similar(a::AbstractArray, T::Type, dims::Tuple{Vararg{Integer,N<:Any}}) at abstractarray.jl:158)
  svec(Tuple{Base.#similar,DistributedArrays.DArray{Float64,2,Array{Float64,2}},Type{Float64},Tuple{Int64,Int64}},svec(),similar(d::DistributedArrays.DArray, T, dims::Tuple{Vararg{Int64,N<:Any}}) at /home/vagrant/.julia/v0.5/DistributedArrays/src/DistributedArrays.jl:295)
 in copy(::DistributedArrays.DArray{Float64,2,Array{Float64,2}}) at ./abstractarray.jl:293
 in (::##31#42)() at /home/vagrant/.julia/v0.5/DistributedArrays/test/darray.jl:37
 in facts(::##31#42, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DistributedArrays/test/darray.jl, in expression starting on line 35
while loading /home/vagrant/.julia/v0.5/DistributedArrays/test/runtests.jl, in expression starting on line 17
==========================[ ERROR: DistributedArrays ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/DistributedArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: DistributedArrays had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
