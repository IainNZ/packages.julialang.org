>>> 'Pkg.add("DataFrames")' log
INFO: Installing BinDeps v0.8.6
INFO: Installing CategoricalArrays v0.3.4
INFO: Installing CodecZlib v0.4.2
INFO: Installing DataFrames v0.11.5
INFO: Installing DataStreams v0.3.4
INFO: Installing DataStructures v0.7.4
INFO: Installing Missings v0.2.6
INFO: Installing NamedTuples v4.0.0
INFO: Installing Reexport v0.1.0
INFO: Installing SHA v0.5.6
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StatsBase v0.20.0
INFO: Installing TranscodingStreams v0.4.1
INFO: Installing URIParser v0.3.0
INFO: Installing WeakRefStrings v0.4.2
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DataFrames
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DataFrames")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1553.53125 MB free)
Uptime: 55273.0 sec
Load Avg:  0.98583984375  0.92431640625  0.99853515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz    3287842 s       7739 s     161000 s    1320140 s         59 s
#2  3511 MHz    1065984 s        102 s      86447 s    4249012 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DataFrames                    0.11.5
 - JSON                          0.16.4
17 additional packages:
 - BinDeps                       0.8.6
 - CategoricalArrays             0.3.4
 - CodecZlib                     0.4.2
 - Compat                        0.53.0
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - Missings                      0.2.6
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - Reexport                      0.1.0
 - SHA                           0.5.6
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StatsBase                     0.20.0
 - TranscodingStreams            0.4.1
 - URIParser                     0.3.0
 - WeakRefStrings                0.4.2
INFO: Computing test dependencies for DataFrames...
INFO: Installing LaTeXStrings v0.3.0
INFO: Testing DataFrames
WARNING: Method definition midpoints(Base.Range{T} where T) in module Base at deprecated.jl:56 overwritten in module StatsBase at /home/vagrant/.julia/v0.6/StatsBase/src/hist.jl:535.
WARNING: Method definition midpoints(AbstractArray{T, 1} where T) in module Base at deprecated.jl:56 overwritten in module StatsBase at /home/vagrant/.julia/v0.6/StatsBase/src/hist.jl:533.
WARNING: Method definition midpoints(Base.Range{T} where T) in module Base at deprecated.jl:56 overwritten in module StatsBase at /home/vagrant/.julia/v0.6/StatsBase/src/hist.jl:535.
WARNING: Method definition midpoints(AbstractArray{T, 1} where T) in module Base at deprecated.jl:56 overwritten in module StatsBase at /home/vagrant/.julia/v0.6/StatsBase/src/hist.jl:533.
Running tests:
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] make_unique(::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:53
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/utils.jl, in expression starting on line 12
WARNING: Unable to validate reserved words against parser. Expected if Julia was not built from source.
Test Summary: | Pass  Total
describe      |    1      1
Test Summary: | Pass  Total
describe      |    1      1
	[1m[32mPASSED[0m: utils.jl
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 12
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 13
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 15
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] hcat(::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:849
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 17
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] hcat(::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:849
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 21
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] #hcat!#78(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [7] hcat!(::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 22
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] (::Base.#kw##hcat)(::Array{Any,1}, ::Base.#hcat, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [7] #hcat#81(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:852
 [8] hcat(::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:852
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 24
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] #hcat#81(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:852
 [7] hcat(::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:852
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 24
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] hcat(::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:849
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 26
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] #hcat!#78(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [7] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at ./<missing>:0
 [8] #hcat!#78(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [9] hcat!(::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 27
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] #hcat!#78(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [7] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at ./<missing>:0
 [8] #hcat!#78(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [9] hcat!(::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::Vararg{DataFrames.DataFrame,N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:843
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 27
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] (::Base.#kw##hcat)(::Array{Any,1}, ::Base.#hcat, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [7] #hcat#28(::Bool, ::Function, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [8] hcat(::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [9] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:35 [inlined]
 [10] macro expansion at ./test.jl:860 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 31
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] #hcat#28(::Bool, ::Function, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [7] hcat(::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:35 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 31
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:37 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 31
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] (::Base.#kw##hcat)(::Array{Any,1}, ::Base.#hcat, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [7] #hcat#28(::Bool, ::Function, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [8] hcat(::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [9] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:44 [inlined]
 [10] macro expansion at ./test.jl:860 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 40
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] #hcat#28(::Bool, ::Function, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [7] hcat(::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::DataFrames.SubDataFrame{Array{Int64,1}}, ::Vararg{DataFrames.SubDataFrame{Array{Int64,1}},N} where N) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:761
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:44 [inlined]
 [9] macro expansion at ./test.jl:860 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:305
 [18] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 40
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.SubDataFrame{Array{Int64,1}}) at ./<missing>:0
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:46 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 40
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] #hcat!#73 at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [4] hcat! at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:51 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] #hcat!#73 at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [4] hcat! at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:53 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:53 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] #hcat!#73 at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [4] hcat! at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:830 [inlined]
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:55 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 2 times)
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:55 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] #hcat!#74 at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:832 [inlined]
 [4] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::CategoricalArrays.CategoricalArray{Union{Int64, Missings.Missing},1,UInt32,Int64,CategoricalArrays.CategoricalValue{Int64,UInt32},Missings.Missing}, ::DataFrames.DataFrame) at ./<missing>:0
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:59 [inlined]
 [6] macro expansion at ./test.jl:860 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] #hcat!#74 at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:832 [inlined]
 [4] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::UnitRange{Int64}, ::DataFrames.DataFrame) at ./<missing>:0
 [5] hcat(::UnitRange{Int64}, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:754
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:62 [inlined]
 [7] macro expansion at ./test.jl:860 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #hcat!#71(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:818
 [5] (::DataFrames.#kw##hcat!)(::Array{Any,1}, ::DataFrames.#hcat!, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0 (repeats 3 times)
 [6] hcat(::UnitRange{Int64}, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/abstractdataframe.jl:754
 [7] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl:62 [inlined]
 [8] macro expansion at ./test.jl:860 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:576
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/cat.jl, in expression starting on line 49
Test Summary:          | Pass  Total
hcat ::AbstractVectors |    9      9
Test Summary: | Pass  Total
vcat >2 args  |    2      2
Test Summary:       | Pass  Total
vcat mixed coltypes |   18     18
Test Summary: | Pass  Total
vcat errors   |   44     44
	[1m[32mPASSED[0m: cat.jl
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 8
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 9
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 10
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 11
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 304
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/data.jl, in expression starting on line 305
	[1m[32mPASSED[0m: data.jl
WARNING: Indexing with values that are not Integer is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] getindex(::DataFrames.Index, ::Float64) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:1300
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/index.jl:29 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:576
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/index.jl, in expression starting on line 27
WARNING: indexing by vector of numbers other than Integer is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] getindex(::DataFrames.Index, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:163
 [3] getindex(::DataFrames.Index, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:1306
 [4] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/index.jl:31 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/index.jl, in expression starting on line 27
WARNING: Keyword argument allow_duplicates is deprecated. Use makeunique.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #names!#7(::Bool, ::Bool, ::Function, ::DataFrames.Index, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:29
 [3] (::DataFrames.#kw##names!)(::Array{Any,1}, ::DataFrames.#names!, ::DataFrames.Index, ::Array{Symbol,1}) at ./<missing>:0
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/index.jl, in expression starting on line 48
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #names!#7(::Bool, ::Bool, ::Function, ::DataFrames.Index, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:40
 [7] (::DataFrames.#kw##names!)(::Array{Any,1}, ::DataFrames.#names!, ::DataFrames.Index, ::Array{Symbol,1}) at ./<missing>:0
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/index.jl, in expression starting on line 48
	[1m[32mPASSED[0m: index.jl
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] Type at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [6] getindex(::DataFrames.DataFrame, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:248
 [7] getindex(::DataFrames.DataFrame, ::Colon, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:282
 [8] include_from_node1(::String) at ./loading.jl:576
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 61
Test Summary:                               | Pass  Total
unstack promotion to support missing values |    8      8
WARNING: Duplicate entries in unstack at row 3 for key 1 and variable a.
WARNING: Duplicate entries in unstack at row 3 for key (1, 1) and variable a.
Test Summary:                         | Pass  Total
duplicate entries in unstack warnings |    9      9
WARNING: Missing value in variable variable at row 3. Skipping.
WARNING: Missing value in variable variable at row 3. Skipping.
Test Summary:            | Pass  Total
missing values in colkey |    6      6
Test Summary:             | Pass  Total
stack-unstack correctness |    2      2
Test Summary: | Pass  Total
rename        |   20     20
Test Summary: | Pass  Total
size          |    3      3
Test Summary: | Pass  Total
description   |    4      4
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl:523 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 522
Test Summary: | Pass  Total
misc          |    1      1
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl:536 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 535
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl:542 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 535
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl:546 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 535
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Type at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl:550 [inlined]
 [4] macro expansion at ./test.jl:860 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:576
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/dataframe.jl, in expression starting on line 535
Test Summary:      | Pass  Total
column conversions |    8      8
Test Summary: | Pass  Total
similar       |    6      6
	[1m[32mPASSED[0m: dataframe.jl
	[1m[32mPASSED[0m: dataframerow.jl
	[1m[32mPASSED[0m: io.jl
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Any,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/constructors.jl, in expression starting on line 19
Test Summary:    | Pass  Total
pair constructor |    4      4
Test Summary: | Pass  Total
associative   |    2      2
Test Summary: | Pass  Total
recyclers     |    2      2
Test Summary:      | Pass  Total
constructor errors |    4      4
Test Summary: | Pass  Total
column types  |    3      3
Test Summary:           | Pass  Total
categorical constructor |    3      3
	[1m[32mPASSED[0m: constructors.jl
	[1m[32mPASSED[0m: conversions.jl
	[1m[32mPASSED[0m: sort.jl
Test Summary: | Pass  Total
colwise       |   29     29
Test Summary:          | Pass  Total
grouping with missings |   34     34
	[1m[32mPASSED[0m: grouping.jl
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #merge!#10(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:76
 [5] (::Base.#kw##merge!)(::Array{Any,1}, ::Base.#merge!, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [6] #merge#11(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:86
 [7] (::Base.#kw##merge)(::Array{Any,1}, ::Base.#merge, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [8] #crossjoin#146(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:348
 [9] (::DataFrames.#kw##crossjoin)(::Array{Any,1}, ::DataFrames.#crossjoin, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:286
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 69
WARNING: Method definition simple_df(Int64) in module TestJoin at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:75 overwritten at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:101.
WARNING: Method definition simple_df(Int64, Any) in module TestJoin at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:75 overwritten at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:101.
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:576
 [13] include(::String) at ./sysimg.jl:14
 [14] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 130
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #merge!#10(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:76
 [5] (::Base.#kw##merge!)(::Array{Any,1}, ::Base.#merge!, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [6] #merge#11(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:86
 [7] (::Base.#kw##merge)(::Array{Any,1}, ::Base.#merge, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [8] #crossjoin#146(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:348
 [9] (::DataFrames.#kw##crossjoin)(::Array{Any,1}, ::DataFrames.#crossjoin, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:286
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:153 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #merge!#10(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:76
 [5] (::Base.#kw##merge!)(::Array{Any,1}, ::Base.#merge!, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [6] #merge#11(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:86
 [7] (::Base.#kw##merge)(::Array{Any,1}, ::Base.#merge, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [8] #crossjoin#146(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:348
 [9] (::DataFrames.#kw##crossjoin)(::Array{Any,1}, ::DataFrames.#crossjoin, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:286
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:159 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#7)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:162
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:183 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#7)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:162
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:184 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#8)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:163
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:185 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#8)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:163
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:188 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#9)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:164
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:190 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#9)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:164
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:193 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#10)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:165
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:195 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#10)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:165
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:198 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#7)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:162
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:202 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#7)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:162
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:203 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#8)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:163
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:204 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#8)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:163
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:207 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#9)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:164
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:208 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#9)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:164
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:211 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#10)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:165
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:212 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#10)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:165
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:215 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 149
Test Summary: | Pass  Total
all joins     |   30     30
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #merge!#10(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:76
 [5] (::Base.#kw##merge!)(::Array{Any,1}, ::Base.#merge!, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [6] #merge#11(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:86
 [7] (::Base.#kw##merge)(::Array{Any,1}, ::Base.#merge, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [8] #crossjoin#146(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:348
 [9] (::DataFrames.#kw##crossjoin)(::Array{Any,1}, ::DataFrames.#crossjoin, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:286
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:234 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #add_names#18(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:186
 [3] (::DataFrames.#kw##add_names)(::Array{Any,1}, ::DataFrames.#add_names, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [4] #merge!#10(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:76
 [5] (::Base.#kw##merge!)(::Array{Any,1}, ::Base.#merge!, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [6] #merge#11(::Bool, ::Function, ::DataFrames.Index, ::DataFrames.Index) at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:86
 [7] (::Base.#kw##merge)(::Array{Any,1}, ::Base.#merge, ::DataFrames.Index, ::DataFrames.Index) at ./<missing>:0
 [8] #crossjoin#146(::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:348
 [9] (::DataFrames.#kw##crossjoin)(::Array{Any,1}, ::DataFrames.#crossjoin, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [10] #join#137(::Array{Symbol,1}, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:286
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:240 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#29)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:243
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:269 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#29)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:243
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:270 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#30)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:244
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:272 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#30)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:244
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:275 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#31)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:245
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:277 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#31)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:245
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:280 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#32)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:246
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:282 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#32)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:246
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:285 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#29)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:243
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:289 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#i#29)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:243
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:290 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#30)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:244
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:292 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#l#30)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:244
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:295 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#31)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:245
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:297 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#r#31)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:245
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:300 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#32)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:246
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:302 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] (::TestJoin.#o#32)(::Symbol) at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:246
 [13] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:305 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] anonymous at ./<missing>:?
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [19] anonymous at ./<missing>:?
 [20] include_from_node1(::String) at ./loading.jl:576
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 228
Test Summary:                    | Pass  Total
all joins with CategoricalArrays |   32     32
Test Summary:                                                     | Pass  Total
maintain CategoricalArray levels ordering on join - non-`on` cols |    6      6
Test Summary:                                                          | Pass  Total
maintain CategoricalArray levels ordering on join - ordering conflicts |   10     10
Test Summary:                                                           | Pass  Total
maintain CategoricalArray levels ordering on join - left is categorical |   12     12
Test Summary:                                   | Pass  Total
join on columns with different left/right names |   36     36
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:484 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:485 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:487 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:489 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:491 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:493 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:495 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:497 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 466
Test Summary:                  | Pass  Total
join with a column of type Any |   16     16
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:523 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:525 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:527 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:529 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:531 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:533 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:535 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:539 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:543 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:294
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:545 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:547 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:299
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:549 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:551 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:304
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:553 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:555 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
WARNING: Duplicate variable names are deprecated: pass makeunique=true to add a suffix automatically.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] #make_unique#3(::Bool, ::Function, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/other/utils.jl:63
 [3] (::DataFrames.#kw##make_unique)(::Array{Any,1}, ::DataFrames.#make_unique, ::Array{Symbol,1}) at ./<missing>:0
 [4] #Index#6 at /home/vagrant/.julia/v0.6/DataFrames/src/other/index.jl:12 [inlined]
 [5] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.Index}, ::Array{Symbol,1}) at ./<missing>:0
 [6] #DataFrame#57(::Bool, ::Type{T} where T, ::Array{Any,1}, ::Array{Symbol,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/dataframe/dataframe.jl:138
 [7] (::Core.#kw#Type)(::Array{Any,1}, ::Type{DataFrames.DataFrame}, ::Array{Any,1}, ::Array{Symbol,1}) at ./<missing>:0
 [8] #compose_joined_table#129(::Bool, ::Function, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:103
 [9] (::DataFrames.#kw##compose_joined_table)(::Array{Any,1}, ::DataFrames.#compose_joined_table, ::DataFrames.DataFrameJoiner{DataFrames.DataFrame,DataFrames.DataFrame}, ::Symbol, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap, ::DataFrames.RowIndexMap) at ./<missing>:0
 [10] #join#137(::Symbol, ::Symbol, ::Bool, ::Function, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/DataFrames/src/abstractdataframe/join.jl:309
 [11] (::Base.#kw##join)(::Array{Any,1}, ::Base.#join, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at ./<missing>:0
 [12] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/join.jl:559 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] anonymous at ./<missing>:?
 [15] include_from_node1(::String) at ./loading.jl:576
 [16] include(::String) at ./sysimg.jl:14
 [17] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [18] anonymous at ./<missing>:?
 [19] include_from_node1(::String) at ./loading.jl:576
 [20] include(::String) at ./sysimg.jl:14
 [21] process_options(::Base.JLOptions) at ./client.jl:305
 [22] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/join.jl, in expression starting on line 500
Test Summary:                                       | Pass  Total
joins with categorical columns and no matching rows |   24     24
	[1m[32mPASSED[0m: join.jl
	[1m[32mPASSED[0m: iteration.jl
Test Summary: | Pass  Total
missing       |    1      1
	[1m[32mPASSED[0m: duplicates.jl
WARNING: calling vector of vectors constructor without passing column names is deprecated
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] DataFrames.DataFrame(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DataFrames/src/deprecated.jl:4
 [3] include_from_node1(::String) at ./loading.jl:576
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion at /home/vagrant/.julia/v0.6/DataFrames/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:576
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DataFrames/test/show.jl, in expression starting on line 213
	[1m[32mPASSED[0m: show.jl
Test Summary:     | Pass  Total
view -- DataFrame |   34     34
Test Summary:        | Pass  Total
view -- SubDataFrame |   34     34
	[1m[32mPASSED[0m: subdataframe.jl
INFO: DataFrames tests passed
INFO: Removing LaTeXStrings v0.3.0

>>> End of log
