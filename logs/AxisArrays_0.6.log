>>> 'Pkg.add("AxisArrays")' log
INFO: Installing AxisArrays v0.1.4
INFO: Installing IntervalSets v0.1.1
INFO: Installing RangeArrays v0.2.0
INFO: Package database updated

>>> 'Pkg.test("AxisArrays")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (650.62109375 MB free)
Uptime: 9782.0 sec
Load Avg:  0.900390625  0.998046875  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     530427 s       1312 s      34847 s     286808 s          6 s
#2  3492 MHz     223494 s       5130 s      22086 s     703861 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AxisArrays                    0.1.4
 - JSON                          0.13.0
3 additional packages:
 - Compat                        0.30.0
 - IntervalSets                  0.1.1
 - RangeArrays                   0.2.0
INFO: Computing test dependencies for AxisArrays...
INFO: Installing OffsetArrays v0.3.0
INFO: Installing Ranges v0.0.1
INFO: Installing Unitful v0.2.6
INFO: Testing AxisArrays
Skipping Base.<|
Skipping Base.active_repl
Skipping Base.active_repl_backend
INFO: partial linear indexing deprecation warning is expected
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1065
 [2] checkbounds_linear_indices at ./abstractarray.jl:423 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:406 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:389 [inlined]
 [5] checkbounds at ./abstractarray.jl:342 [inlined]
 [6] checkbounds at ./abstractarray.jl:362 [inlined]
 [7] macro expansion at ./multidimensional.jl:441 [inlined]
 [8] _getindex at ./multidimensional.jl:438 [inlined]
 [9] getindex at ./abstractarray.jl:882 [inlined]
 [10] getindex(::AxisArrays.AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{AxisArrays.Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.6/AxisArrays/src/indexing.jl:87
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] macro expansion at /home/vagrant/.julia/v0.6/AxisArrays/test/runtests.jl:19 [inlined]
 [14] macro expansion at ./test.jl:860 [inlined]
 [15] macro expansion at /home/vagrant/.julia/v0.6/AxisArrays/test/runtests.jl:18 [inlined]
 [16] macro expansion at ./test.jl:860 [inlined]
 [17] anonymous at ./<missing>:?
 [18] include_from_node1(::String) at ./loading.jl:569
 [19] include(::String) at ./sysimg.jl:14
 [20] process_options(::Base.JLOptions) at ./client.jl:305
 [21] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AxisArrays/test/indexing.jl, in expression starting on line 43
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1065
 [2] checkbounds_linear_indices at ./abstractarray.jl:413 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:406 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:389 [inlined]
 [5] checkbounds at ./abstractarray.jl:342 [inlined]
 [6] checkbounds at ./abstractarray.jl:362 [inlined]
 [7] getindex at ./reshapedarray.jl:187 [inlined]
 [8] macro expansion at ./multidimensional.jl:474 [inlined]
 [9] macro expansion at ./cartesian.jl:64 [inlined]
 [10] macro expansion at ./multidimensional.jl:472 [inlined]
 [11] _unsafe_getindex! at ./multidimensional.jl:466 [inlined]
 [12] macro expansion at ./multidimensional.jl:460 [inlined]
 [13] _unsafe_getindex(::IndexLinear, ::Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}, ::UnitRange{Int64}, ::Base.Slice{Base.OneTo{Int64}}) at ./multidimensional.jl:453
 [14] macro expansion at ./multidimensional.jl:442 [inlined]
 [15] _getindex at ./multidimensional.jl:438 [inlined]
 [16] getindex at ./abstractarray.jl:882 [inlined]
 [17] getindex(::AxisArrays.AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{AxisArrays.Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.6/AxisArrays/src/indexing.jl:87
 [18] include_from_node1(::String) at ./loading.jl:569
 [19] include(::String) at ./sysimg.jl:14
 [20] macro expansion at /home/vagrant/.julia/v0.6/AxisArrays/test/runtests.jl:19 [inlined]
 [21] macro expansion at ./test.jl:860 [inlined]
 [22] macro expansion at /home/vagrant/.julia/v0.6/AxisArrays/test/runtests.jl:18 [inlined]
 [23] macro expansion at ./test.jl:860 [inlined]
 [24] anonymous at ./<missing>:?
 [25] include_from_node1(::String) at ./loading.jl:569
 [26] include(::String) at ./sysimg.jl:14
 [27] process_options(::Base.JLOptions) at ./client.jl:305
 [28] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AxisArrays/test/indexing.jl, in expression starting on line 43
Test Summary: | Pass  Broken  Total
AxisArrays    |  516       1    517
INFO: AxisArrays tests passed
INFO: Removing OffsetArrays v0.3.0
INFO: Removing Ranges v0.0.1
INFO: Removing Unitful v0.2.6

>>> End of log
