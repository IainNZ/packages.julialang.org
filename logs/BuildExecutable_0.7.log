>>> 'Pkg.add("BuildExecutable")' log
┌ Info: Cloning cache of BuildExecutable from https://github.com/dhoegh/BuildExecutable.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing BuildExecutable v0.1.2          @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building BuildExecutable                                  @ Main none:10
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└                                                                      @ Core :0
┌ Warning: `is_linux` is deprecated, use `Sys.islinux` instead.
│   caller = top-level scope
└                                                                      @ Core :0
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  187k  100  187k    0     0   226k      0 --:--:-- --:--:-- --:--:--  226k
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for style of include used by make... GNU
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... gcc3
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
Setting page size to 4096
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating tests/Makefile
config.status: creating patchelf.spec
config.status: executing depfiles commands
Making install in src
make[1]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/src'
g++ -DPACKAGE_NAME=\"patchelf\" -DPACKAGE_TARNAME=\"patchelf\" -DPACKAGE_VERSION=\"0.9\" -DPACKAGE_STRING=\"patchelf\ 0.9\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"patchelf\" -DVERSION=\"0.9\" -DPAGESIZE=4096 -I.    -Wall -g -O2 -MT patchelf.o -MD -MP -MF .deps/patchelf.Tpo -c -o patchelf.o patchelf.cc
mv -f .deps/patchelf.Tpo .deps/patchelf.Po
g++ -Wall -g -O2   -o patchelf patchelf.o  
make[2]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/src'
 /bin/mkdir -p '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/bin'
  /usr/bin/install -c patchelf '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/bin'
make[2]: Nothing to be done for `install-data-am'.
make[2]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/src'
make[1]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/src'
Making install in tests
make[1]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/tests'
make[2]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/tests'
make[2]: Nothing to be done for `install-exec-am'.
make[2]: Nothing to be done for `install-data-am'.
make[2]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/tests'
make[1]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9/tests'
make[1]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9'
make[2]: Entering directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9'
make[2]: Nothing to be done for `install-exec-am'.
 /bin/mkdir -p '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/share/doc/patchelf'
 /usr/bin/install -c -m 644 README '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/share/doc/patchelf'
 /bin/mkdir -p '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/share/man/man1'
 /usr/bin/install -c -m 644 patchelf.1 '/home/vagrant/.julia/v0.7/BuildExecutable/deps/usr/local/share/man/man1'
make[2]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9'
make[1]: Leaving directory `/home/vagrant/.julia/v0.7/BuildExecutable/deps/downloads/patchelf-0.9'
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of BuildExecutable
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("BuildExecutable")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1103110 s        114 s      60215 s     345170 s          7 s
       #2  3500 MHz     224391 s         41 s      24191 s    1518869 s          0 s
       
  Memory: 2.93927001953125 GB (829.40625 MB free)
  Uptime: 17922.0 sec
  Load Avg:  1.0029296875  1.0146484375  0.98681640625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BuildExecutable               0.1.2
 - JSON                          0.16.3
5 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.44.0
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - URIParser                     0.3.0
┌ Info: Computing test dependencies for BuildExecutable...
└                                                  @ Base.Pkg.Entry entry.jl:713
[ Info: No packages to install, update or remove   @ Base.Pkg.Entry entry.jl:517
[ Info: Testing BuildExecutable                    @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BuildExecutable/src/BuildExecutable.jl:17.
│ Use `mutable struct` instead.
└                                                @ nothing BuildExecutable.jl:17
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/BuildExecutable/src/BuildExecutable.jl:40.
│ Use `mutable struct` instead.
└                                                @ nothing BuildExecutable.jl:40
ERROR: LoadError: LoadError: syntax: invalid escape sequence
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] _require(::Symbol) at ./loading.jl:453
 [4] require(::Symbol) at ./loading.jl:333
 [5] include at ./boot.jl:293 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:521
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/BuildExecutable/src/BuildExecutable.jl:157
in expression starting at /home/vagrant/.julia/v0.7/BuildExecutable/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for BuildExecutable
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BuildExecutable/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: No packages to install, update or remove   @ Base.Pkg.Entry entry.jl:517
ERROR: BuildExecutable had test errors

>>> End of log
