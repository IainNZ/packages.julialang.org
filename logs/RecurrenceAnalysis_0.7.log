>>> 'Pkg.add("RecurrenceAnalysis")' log
[ Info: Cloning cache of RecurrenceAnalysis from https://github.com/heliosdrm/RecurrenceAnalysis.jl.git
[ Info: Installing Distances v0.5.0
[ Info: Installing RecurrenceAnalysis v0.1.0
[ Info: Package database updated

>>> 'Pkg.test("RecurrenceAnalysis")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1499127 s       7349 s      79389 s     374825 s         14 s
       #2  3499 MHz     276731 s         50 s      25186 s    2014575 s          0 s
       
  Memory: 2.93927001953125 GB (885.60546875 MB free)
  Uptime: 23551.0 sec
  Load Avg:  0.98876953125  0.9609375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - RecurrenceAnalysis            0.1.0
3 additional packages:
 - Compat                        0.48.0
 - Distances                     0.5.0
 - Nullables                     0.0.3
[ Info: Testing RecurrenceAnalysis
WARNING: importing deprecated binding Base.SparseMatrixCSC into RecurrenceAnalysis.
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/RecurrenceAnalysis.jl:44
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/rqa.jl:72
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/rqa.jl:72
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/rqa.jl:72
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/rqa.jl:226
WARNING: importing deprecated binding Base.Range into RecurrenceAnalysis.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/delay.jl:70
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/delay.jl:135
┌ Warning: Deprecated syntax `parametric method syntax embedmatrix1{T}(x::Array{T, 2}, delay, metric = "max")` around /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/dimension.jl:3.
│ Use `embedmatrix1(x::Array{T, 2}, delay, metric = "max") where T` instead.
└ @ nothing dimension.jl:3
┌ Warning: Deprecated syntax `(ex.args...)` at /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/windowed.jl:77.
│ Use `(ex.args...,)` instead.
└ @ nothing windowed.jl:77
WARNING: importing deprecated binding Base.diag into RecurrenceAnalysis.
WARNING: importing deprecated binding Base.rowvals into RecurrenceAnalysis.
WARNING: importing deprecated binding Base.issymmetric into RecurrenceAnalysis.
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/RecurrenceAnalysis/test/runtests.jl:2
┌ Warning: `a::Number + b::AbstractArray` is deprecated, use `broadcast(+, a, b)` instead.
│   caller = ami(::Array{Float64,1}, ::UnitRange{Int64}, ::Int64) at delay.jl:91
└ @ RecurrenceAnalysis delay.jl:91
WARNING: importing deprecated binding Base.sparse into RecurrenceAnalysis.
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = pairwise(::Distances.Chebyshev, ::LinearAlgebra.Adjoint{Float64,Array{Float64,1}}) at generic.jl:126
└ @ Distances generic.jl:126
ERROR: LoadError: Base.sparse has been moved to the standard library package SparseArrays.
Restart Julia and then run `using SparseArrays` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #sparse#949 at ./deprecated.jl:138 [inlined]
 [3] sparse at ./deprecated.jl:138 [inlined]
 [4] #recurrencematrix#1(::Int64, ::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/RecurrenceAnalysis.jl:117
 [5] #recurrencematrix at ./<missing>:0 [inlined]
 [6] gmi at /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/delay.jl:137 [inlined]
 [7] gmi(::Array{Float64,1}, ::Tuple{Int64,Int64}, ::Float64) at /home/vagrant/.julia/v0.7/RecurrenceAnalysis/src/delay.jl:154
 [8] top-level scope
 [9] include at ./boot.jl:292 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:1011
 [11] include(::Module, ::String) at ./sysimg.jl:26
 [12] process_options(::Base.JLOptions) at ./client.jl:324
 [13] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/RecurrenceAnalysis/test/runtests.jl:50
┌ Error: ------------------------------------------------------------
│ # Testing failed for RecurrenceAnalysis
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/RecurrenceAnalysis/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: RecurrenceAnalysis had test errors

>>> End of log
