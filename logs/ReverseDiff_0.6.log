>>> 'Pkg.add("ReverseDiff")' log
INFO: Installing BinDeps v0.8.6
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.3
INFO: Installing ForwardDiff v0.7.3
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing NaNMath v0.3.1
INFO: Installing ReverseDiff v0.2.0
INFO: Installing SHA v0.5.6
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ReverseDiff
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReverseDiff")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (854.9375 MB free)
Uptime: 34709.0 sec
Load Avg:  0.96435546875  0.95849609375  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2126725 s       1223 s     114512 s     695092 s         21 s
#2  3499 MHz     459083 s       5664 s      50409 s    2892558 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.4
 - ReverseDiff                   0.2.0
13 additional packages:
 - BinDeps                       0.8.6
 - CommonSubexpressions          0.0.1
 - Compat                        0.53.0
 - DiffResults                   0.0.3
 - DiffRules                     0.0.3
 - ForwardDiff                   0.7.3
 - FunctionWrappers              0.1.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
INFO: Computing test dependencies for ReverseDiff...
INFO: Cloning cache of DiffTests from https://github.com/JuliaDiff/DiffTests.jl.git
INFO: Installing DiffTests v0.0.2
INFO: Testing ReverseDiff
testing InstructionTape/AbstractInstructions...
done (took 0.936911814 seconds)
testing TrackedReals/TrackedArrays...
done (took 6.099393078 seconds)
testing macros (@forward, @skip, etc.)...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{MacrosTests.#f0}(MacrosTests.f0)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{MacrosTests.##hidden_f1}(MacrosTests.#hidden_f1)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{MacrosTests.##hidden_f2}(MacrosTests.#hidden_f2)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{MacrosTests.##hidden_f3}(MacrosTests.#hidden_f3)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{MacrosTests.##hidden_f4}(MacrosTests.#hidden_f4)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Base.#-}(-)`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{MacrosTests.##1#2}(MacrosTests.#1)`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{MacrosTests.##3#4}(MacrosTests.#3)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{MacrosTests.#f0}(MacrosTests.f0)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{MacrosTests.##hidden_g1}(MacrosTests.#hidden_g1)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{MacrosTests.##hidden_g2}(MacrosTests.#hidden_g2)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{MacrosTests.##hidden_g3}(MacrosTests.#hidden_g3)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{MacrosTests.##hidden_g4}(MacrosTests.#hidden_g4)`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{MacrosTests.##5#6}(MacrosTests.#5)`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{MacrosTests.##7#8}(MacrosTests.#7)`...
done (took 7.27567498 seconds)
testing scalar derivatives (both forward and reverse passes)
  testing forward-mode unary scalar functions: `asind`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode unary scalar functions: `acsch`...
  testing forward-mode unary scalar functions: `erfc`...
  testing forward-mode unary scalar functions: `digamma`...
  testing forward-mode unary scalar functions: `acos`...
  testing forward-mode unary scalar functions: `asec`...
  testing forward-mode unary scalar functions: `acosh`...
  testing forward-mode binary scalar functions: `\`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `airybiprime`...
  testing forward-mode unary scalar functions: `acsc`...
  testing forward-mode unary scalar functions: `cscd`...
  testing forward-mode unary scalar functions: `log`...
  testing forward-mode binary scalar functions: `hypot`...
  testing forward-mode unary scalar functions: `tand`...
  testing forward-mode unary scalar functions: `atanh`...
  testing forward-mode unary scalar functions: `deg2rad`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `csch`...
  testing forward-mode unary scalar functions: `asinh`...
  testing forward-mode unary scalar functions: `airyai`...
  testing forward-mode unary scalar functions: `abs2`...
  testing forward-mode unary scalar functions: `erfcx`...
  testing forward-mode unary scalar functions: `gamma`...
  testing forward-mode binary scalar functions: `/`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode unary scalar functions: `bessely0`...
  testing forward-mode unary scalar functions: `cosh`...
  testing forward-mode unary scalar functions: `sin`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode unary scalar functions: `acosd`...
  testing forward-mode unary scalar functions: `cbrt`...
  testing forward-mode unary scalar functions: `bessely1`...
  testing forward-mode unary scalar functions: `acoth`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode unary scalar functions: `erfcinv`...
  testing forward-mode unary scalar functions: `lgamma`...
  testing forward-mode unary scalar functions: `erf`...
  testing forward-mode unary scalar functions: `log1p`...
Test Failed
  Expression: yt == y
   Evaluated: TrackedReal<7iG>(0.21190733736255718, 0.0, 2NI, ---) == 0.21190733736255715
ERROR: LoadError: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/ReverseDiff/test/derivatives/ScalarTests.jl, in expression starting on line 142
while loading /home/vagrant/.julia/v0.6/ReverseDiff/test/runtests.jl, in expression starting on line 8
=============================[ ERROR: ReverseDiff ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ReverseDiff/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffTests v0.0.2
ERROR: ReverseDiff had test errors

>>> End of log
