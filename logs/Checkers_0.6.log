>>> 'Pkg.add("Checkers")' log
INFO: Cloning cache of Checkers from https://github.com/pkalikman/Checkers.jl.git
INFO: Installing Checkers v0.0.1
INFO: Installing Reexport v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Checkers
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Checkers")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (965.87890625 MB free)
Uptime: 30185.0 sec
Load Avg:  1.03076171875  1.001953125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1760630 s       7312 s      83734 s     711303 s         30 s
#2  3500 MHz     341712 s         68 s      41615 s    2588360 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Checkers                      0.0.1
 - JSON                          0.17.1
3 additional packages:
 - Compat                        0.56.0
 - Nullables                     0.0.4
 - Reexport                      0.1.0
INFO: Testing Checkers
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] @test_cases(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Checkers/src/./test-cases.jl:122
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Checkers/test/runtests.jl, in expression starting on line 17
String["x = 3.8993526191325014e-7"]
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] @test_cases(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Checkers/src/./test-cases.jl:122
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Checkers/test/runtests.jl, in expression starting on line 29
String["x = 9.04587136361872"]
String["x = -2.3092060774749514", "y = -1.652448746984437"]
Test Summary:                       | Pass  Total
@test_... macros behave as expected |    7      7
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] @test_cases(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Checkers/src/./test-cases.jl:122
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Checkers/test/runtests.jl, in expression starting on line 54
String["x = 4.749658267013448"]
String["x = 1.409937933807186"]
String["x = 7.901100779051269"]
String["x = 6.38656337152038"]
String["x = 5.425983882428815"]
WARNING: Array(::Type{T}, m::Int, n::Int) where T is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:57
 [3] @test_cases(::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.6/Checkers/src/./test-cases.jl:122
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Checkers/test/runtests.jl, in expression starting on line 65
String["x = 0.7153190055182299"]
String["x = 0.9593907881994456"]
String["x = 0.07566129482348621"]
String["x = 0.0023889142607060876"]
Test Summary:                       | Pass  Total
@test_... macros behave as expected |    7      7
INFO: Checkers tests passed

>>> End of log
