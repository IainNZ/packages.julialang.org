>>> 'Pkg.add("MFCC")' log
INFO: Cloning cache of MFCC from https://github.com/davidavdav/MFCC.jl.git
INFO: Cloning cache of WAV from https://github.com/dancasimiro/WAV.jl.git
INFO: Installing AbstractFFTs v0.2.0
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.3.0
INFO: Installing DSP v0.3.4
INFO: Installing FFTW v0.0.4
INFO: Installing FileIO v0.6.0
INFO: Installing HDF5 v0.8.8
INFO: Installing JLD v0.8.3
INFO: Installing LegacyStrings v0.3.0
INFO: Installing MFCC v0.1.1
INFO: Installing Polynomials v0.1.6
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.5.2
INFO: Installing SpecialFunctions v0.3.5
INFO: Installing URIParser v0.2.0
INFO: Installing WAV v0.8.5
INFO: Building Blosc
INFO: Building SpecialFunctions
INFO: Building FFTW
INFO: Building HDF5
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/HDF5/deps/build.jl:40
INFO: Package database updated

>>> 'Pkg.test("MFCC")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (511.55078125 MB free)
Uptime: 20842.0 sec
Load Avg:  1.01123046875  1.01416015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1347264 s         55 s      65689 s     337548 s         17 s
#2  3499 MHz     232847 s       6482 s      32488 s    1782643 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.1
 - MFCC                          0.1.1
16 additional packages:
 - AbstractFFTs                  0.2.0
 - BinDeps                       0.6.0
 - Blosc                         0.3.0
 - Compat                        0.37.0
 - DSP                           0.3.4
 - FFTW                          0.0.4
 - FileIO                        0.6.0
 - HDF5                          0.8.8
 - JLD                           0.8.3
 - LegacyStrings                 0.3.0
 - Polynomials                   0.1.6
 - Reexport                      0.0.3
 - SHA                           0.5.2
 - SpecialFunctions              0.3.5
 - URIParser                     0.2.0
 - WAV                           0.8.5
INFO: Testing MFCC
WARNING: sumabs2(x) is deprecated, use sum(abs2, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sumabs2(::Array{Float64,1}) at ./deprecated.jl:57
 [3] #powspec#1(::Float64, ::Float64, ::Bool, ::Function, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:21
 [4] (::MFCC.#kw##powspec)(::Array{Any,1}, ::MFCC.#powspec, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [5] #mfcc#23(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Symbol, ::Bool, ::Int64, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:18
 [6] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [7] #mfcc#27(::Array{Any,1}, ::Function, ::Array{Float64,1}, ::Float64, ::Symbol) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:51
 [8] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64, ::Symbol) at ./<missing>:0
 [9] #feacalc#33(::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::Float64, ::String, ::Symbol, ::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:51
 [10] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at ./<missing>:0
 [11] #feacalc#32(::Symbol, ::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:20
 [12] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::String) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/MFCC/test/runtests.jl, in expression starting on line 9
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{1}) at ./deprecated.jl:57
 [3] hz2mel(::Array{Float64,1}, ::Bool) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:116
 [4] hz2mel at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:120 [inlined]
 [5] #fft2melmx#8(::Float64, ::Float64, ::Float64, ::Float64, ::Bool, ::Bool, ::Function, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:78
 [6] (::MFCC.#kw##fft2melmx)(::Array{Any,1}, ::MFCC.#fft2melmx, ::Int64, ::Int64) at ./<missing>:0
 [7] #audspec#2(::Int64, ::Symbol, ::Float64, ::Float64, ::Bool, ::Float64, ::Function, ::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:34
 [8] (::MFCC.#kw##audspec)(::Array{Any,1}, ::MFCC.#audspec, ::Array{Float64,2}, ::Float64) at ./<missing>:0
 [9] #mfcc#23(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Symbol, ::Bool, ::Int64, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:19
 [10] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [11] #mfcc#27(::Array{Any,1}, ::Function, ::Array{Float64,1}, ::Float64, ::Symbol) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:51
 [12] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64, ::Symbol) at ./<missing>:0
 [13] #feacalc#33(::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::Float64, ::String, ::Symbol, ::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:51
 [14] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at ./<missing>:0
 [15] #feacalc#32(::Symbol, ::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:20
 [16] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::String) at ./<missing>:0
 [17] include_from_node1(::String) at ./loading.jl:576
 [18] include(::String) at ./sysimg.jl:14
 [19] process_options(::Base.JLOptions) at ./client.jl:305
 [20] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/MFCC/test/runtests.jl, in expression starting on line 9
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] !(::BitArray{1}) at ./deprecated.jl:57
 [3] mel2hz(::Array{Float64,1}, ::Bool) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:134
 [4] #fft2melmx#8(::Float64, ::Float64, ::Float64, ::Float64, ::Bool, ::Bool, ::Function, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:80
 [5] (::MFCC.#kw##fft2melmx)(::Array{Any,1}, ::MFCC.#fft2melmx, ::Int64, ::Int64) at ./<missing>:0
 [6] #audspec#2(::Int64, ::Symbol, ::Float64, ::Float64, ::Bool, ::Float64, ::Function, ::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:34
 [7] (::MFCC.#kw##audspec)(::Array{Any,1}, ::MFCC.#audspec, ::Array{Float64,2}, ::Float64) at ./<missing>:0
 [8] #mfcc#23(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Symbol, ::Bool, ::Int64, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:19
 [9] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [10] #mfcc#27(::Array{Any,1}, ::Function, ::Array{Float64,1}, ::Float64, ::Symbol) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:51
 [11] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64, ::Symbol) at ./<missing>:0
 [12] #feacalc#33(::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::Float64, ::String, ::Symbol, ::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:51
 [13] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at ./<missing>:0
 [14] #feacalc#32(::Symbol, ::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:20
 [15] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::String) at ./<missing>:0
 [16] include_from_node1(::String) at ./loading.jl:576
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/MFCC/test/runtests.jl, in expression starting on line 9
ERROR: LoadError: DimensionMismatch("Cannot left-divide transposed vector by matrix")
Stacktrace:
 [1] #fft2melmx#8(::Float64, ::Float64, ::Float64, ::Float64, ::Bool, ::Bool, ::Function, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:88
 [2] (::MFCC.#kw##fft2melmx)(::Array{Any,1}, ::MFCC.#fft2melmx, ::Int64, ::Int64) at ./<missing>:0
 [3] #audspec#2(::Int64, ::Symbol, ::Float64, ::Float64, ::Bool, ::Float64, ::Function, ::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/rasta.jl:34
 [4] (::MFCC.#kw##audspec)(::Array{Any,1}, ::MFCC.#audspec, ::Array{Float64,2}, ::Float64) at ./<missing>:0
 [5] #mfcc#23(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Symbol, ::Bool, ::Int64, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:19
 [6] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [7] #mfcc#27(::Array{Any,1}, ::Function, ::Array{Float64,1}, ::Float64, ::Symbol) at /home/vagrant/.julia/v0.6/MFCC/src/mfccs.jl:51
 [8] (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64, ::Symbol) at ./<missing>:0
 [9] #feacalc#33(::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::Float64, ::String, ::Symbol, ::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:51
 [10] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at ./<missing>:0
 [11] #feacalc#32(::Symbol, ::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/MFCC/src/feacalc.jl:20
 [12] (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::String) at ./<missing>:0
 [13] include_from_node1(::String) at ./loading.jl:576
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/MFCC/test/runtests.jl, in expression starting on line 9
================================[ ERROR: MFCC ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MFCC/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: MFCC had test errors

>>> End of log
