>>> 'Pkg.add("FiniteElementDiffEq")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqBase v1.8.0
INFO: Installing DiffEqPDEBase v0.3.2
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.13.0
INFO: Installing EllipsisNotation v0.1.0
INFO: Installing FiniteElementDiffEq v0.3.0
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing IterativeSolvers v0.3.1
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing LinearMaps v0.3.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.6.0
INFO: Installing Parameters v0.7.2
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.5.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.15.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing SugarBLAS v0.0.3
INFO: Installing URIParser v0.1.8
INFO: Installing UnicodePlots v0.2.3
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FiniteElementDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FiniteElementDiffEq")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (835.16796875 MB free)
Uptime: 53659.0 sec
Load Avg:  0.98583984375  0.958984375  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    3490792 s       6472 s     147774 s     906485 s         31 s
#2  3508 MHz     977851 s       1185 s     102195 s    4180134 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FiniteElementDiffEq           0.3.0
 - JSON                          0.12.0
41 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - ChunkedArrays                 0.1.1
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffBase                      0.2.0
 - DiffEqBase                    1.8.0
 - DiffEqPDEBase                 0.3.2
 - Distances                     0.4.1
 - Distributions                 0.13.0
 - EllipsisNotation              0.1.0
 - ForwardDiff                   0.4.2
 - GenericSVD                    0.0.2
 - Hiccup                        0.1.1
 - IterativeSolvers              0.3.1
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - LinearMaps                    0.3.0
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - NLsolve                       0.9.1
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.6.0
 - Parameters                    0.7.2
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - SimpleTraits                  0.5.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.15.0
 - StatsFuns                     0.5.0
 - SugarBLAS                     0.0.3
 - URIParser                     0.1.8
 - UnicodePlots                  0.2.3
 - VectorizedRoutines            0.0.2
INFO: Computing test dependencies for FiniteElementDiffEq...
INFO: Installing Blosc v0.2.1
INFO: Installing Conda v0.5.3
INFO: Installing DiffEqDevTools v0.8.1
INFO: Installing DiffEqProblemLibrary v0.7.0
INFO: Installing FileIO v0.3.1
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing SymEngine v0.2.0
INFO: Installing Unitful v0.2.3
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building HDF5
INFO: Testing FiniteElementDiffEq

WARNING: deprecated syntax "abstract AbstractDifferentiableMultivariateFunction" at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:2.
Use "abstract type AbstractDifferentiableMultivariateFunction end" instead.
Assembly Tests
  9.203487 seconds (7.62 M allocations: 412.949 MiB, 3.56% gc time)
Finite Element Heat Dt Tests
FiniteElementDiffEq.FEMDiffEqHeatEuler()
FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler()
FiniteElementDiffEq.FEMDiffEqHeatCrankNicholson()
 13.266424 seconds (13.98 M allocations: 2.283 GiB, 6.85% gc time)
Finite Element Heat Dx Tests
FiniteElementDiffEq.FEMDiffEqHeatEuler()
FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler()
FiniteElementDiffEq.FEMDiffEqHeatCrankNicholson()
  0.212854 seconds (660.27 k allocations: 198.795 MiB, 11.21% gc time)
Finite Element Heat Method Tests
Euler
Direct
LU
QR
SVD
Direct
Cholesky
CG
CG
GMRES
Euler
Euler
  7.368956 seconds (7.60 M allocations: 881.055 MiB, 2.20% gc time)
Finite Element Nonlinear Heat Methods Tests
Euler
Semi-implicit Euler
Semi-implicit Crank Nicholson
Implicit Euler
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##194#195,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [9] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 25
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##194#195,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 25
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##194#195,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##194#195,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqPDEBase.##14#23,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 25
Euler
Semi-implicit Euler
Implicit Euler
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [9] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 62
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 62
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 62
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [9] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 63
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 63
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##188#197, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,true,DiffEqProblemLibrary.##206#207,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqProblemLibrary.##210#212,Float64,Array{Float64,1},Array{Rational{Int64},2},Array{Float64,1},Float64,Float64,SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:99
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,true,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Rational{Int64},Tuple{Float64,Float64}},DiffEqProblemLibrary.##206#207,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,1},DiffEqProblemLibrary.##210#212,Void,Float64}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_nonlinearmethods_tests.jl, in expression starting on line 63
 28.114850 seconds (40.99 M allocations: 3.477 GiB, 3.94% gc time)
Finite Element Nonlinear System Heat Tests
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##198#199,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,2},Array{Float64,2},Array{Float64,1},Float64,Array{Float64,2},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [9] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [10] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_system_tests.jl, in expression starting on line 14
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##198#199,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,2},Array{Float64,2},Array{Float64,1},Float64,Array{Float64,2},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_system_tests.jl, in expression starting on line 14
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##175#180, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] femheat_solve(::FiniteElementDiffEq.FEMHeatIntegrator{false,FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler,false,DiffEqProblemLibrary.##198#199,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,DiffEqPDEBase.##14#23,Float64,Array{Float64,2},Array{Float64,2},Array{Float64,1},Float64,Array{Float64,2},SparseMatrixCSC{Float64,Int64},SparseMatrixCSC{Float64,Int64}}) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_heatintegrators.jl:109
 [10] #solve#16(::Symbol, ::Bool, ::Int64, ::Bool, ::Symbol, ::Bool, ::Int64, ::Int64, ::Bool, ::String, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:116
 [11] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqPDEBase.HeatProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Float64,2},Array{Float64,1},Float64,Tuple{Float64,Float64}},DiffEqProblemLibrary.##198#199,Void,DiffEqPDEBase.##21#30,DiffEqPDEBase.##22#31,Array{Float64,2},DiffEqPDEBase.##14#23,Void,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqHeatImplicitEuler) at ./<missing>:0
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:569
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:305
 [17] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/heat/femheat_system_tests.jl, in expression starting on line 14
  5.282591 seconds (6.18 M allocations: 519.307 MiB, 4.45% gc time)
Heat Animation Test
Generating Animation
  0.452054 seconds (2.22 M allocations: 501.039 MiB, 23.33% gc time)
Stochastic Heat Animation Test
Generating Animation
  1.568358 seconds (1.56 M allocations: 85.835 MiB, 1.65% gc time)
Finite Element Poisson Convergence Test
  4.017506 seconds (2.80 M allocations: 119.429 MiB, 1.56% gc time)
Finite Element Nonlinear Poisson Tests
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [9] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinear_tests.jl, in expression starting on line 8
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinear_tests.jl, in expression starting on line 8
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##236#237,Void,Void,DiffEqPDEBase.##43#52,DiffEqPDEBase.##44#53,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinear_tests.jl, in expression starting on line 8
  2.414370 seconds (3.59 M allocations: 229.945 MiB, 2.68% gc time)
Finite Element Nonlinear System Poisson Tests
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [9] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 9
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 9
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##238#239,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 9
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:82
 [4] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [5] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [6] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [7] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [8] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [9] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [10] include_from_node1(::String) at ./loading.jl:569
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:569
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 20
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:32
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 20
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{NLsolve.SolverState}, ::Int64) at ./deprecated.jl:51
 [3] Type at /home/vagrant/.julia/v0.6/NLsolve/src/solver_state_results.jl:20 [inlined]
 [4] trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:99
 [5] #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 [6] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 [7] #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::FiniteElementDiffEq.##8#15{SparseMatrixCSC{Float64,Int64},Int64,Array{Int64,1},Int64,Array{Float64,2}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 [8] (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 [9] #solve#1(::Symbol, ::Bool, ::Symbol, ::Bool, ::Int64, ::Array{Any,1}, ::Function, ::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:58
 [10] solve(::DiffEqPDEBase.PoissonProblem{false,false,DiffEqPDEBase.FEMMesh{Array{Rational{Int64},2},Array{Float64,1},Void,Void},DiffEqProblemLibrary.##242#243,Void,Void,DiffEqPDEBase.##45#54,DiffEqPDEBase.##46#55,Array{Float64,2},DiffEqPDEBase.##38#47,Array{Float64,2}}, ::FiniteElementDiffEq.FEMDiffEqPoisson) at /home/vagrant/.julia/v0.6/FiniteElementDiffEq/src/fem_solve.jl:6
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/FiniteElementDiffEq/test/poisson/fempoisson_nonlinearsystem_tests.jl, in expression starting on line 20
  3.931242 seconds (1.68 M allocations: 63.121 MiB, 0.77% gc time)
Finite Element Stochastic Poisson
  2.137543 seconds (1.26 M allocations: 74.042 MiB, 2.26% gc time)
Finite Element Poisson
  2.135585 seconds (1.59 M allocations: 64.177 MiB, 1.56% gc time)
Units Tests
  3.140256 seconds (1.75 M allocations: 92.705 MiB, 1.90% gc time)
elapsed time: 83.60126374 seconds
INFO: FiniteElementDiffEq tests passed
INFO: Removing Blosc v0.2.1
INFO: Removing Conda v0.5.3
INFO: Removing DiffEqDevTools v0.8.1
INFO: Removing DiffEqProblemLibrary v0.7.0
INFO: Removing FileIO v0.3.1
INFO: Removing HDF5 v0.8.1
INFO: Removing JLD v0.6.10
INFO: Removing LegacyStrings v0.2.1
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing SymEngine v0.2.0
INFO: Removing Unitful v0.2.3

>>> End of log
