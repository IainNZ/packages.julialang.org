>>> 'Pkg.add("PenaltyFunctions")' log
[ Info: Cloning cache of LearnBase from https://github.com/JuliaML/LearnBase.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Cloning cache of PenaltyFunctions from https://github.com/JuliaML/PenaltyFunctions.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LearnBase v0.1.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing PenaltyFunctions v0.0.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.6 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions @ Main none:10
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└ @ BinDeps dependencies.jl:652
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of PenaltyFunctions
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("PenaltyFunctions")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     302142 s       6497 s      19920 s     159750 s          4 s
       #2  3500 MHz      66000 s        263 s      10287 s     473653 s          0 s
       
  Memory: 2.93927001953125 GB (819.82421875 MB free)
  Uptime: 5615.0 sec
  Load Avg:  1.0322265625  0.9765625  0.95849609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PenaltyFunctions              0.0.2
11 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.42.0
 - DataStructures                0.7.4
 - LearnBase                     0.1.6
 - Nullables                     0.0.2
 - RecipesBase                   0.2.3
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
[ Info: Testing PenaltyFunctions @ Base.Pkg.Entry entry.jl:723
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:348.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:348
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:355.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:355
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:362.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:362
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:401.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:401
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:424.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:424
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:450.
│ Use `struct` instead.
└ @ nothing LearnBase.jl:450
[ Warning: Replacing module `Compat` @ Base loading.jl:350
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
[ Warning: Replacing module `DataStructures` @ Base loading.jl:350
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding Base.Void into LearnBase.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:375
┌ Warning: Deprecated syntax `parametric method syntax IntervalSet{A, B}(lo::A, hi::B)` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:406.
│ Use `IntervalSet(lo::A, hi::B) where {A, B}` instead.
└ @ nothing LearnBase.jl:406
┌ Warning: Deprecated syntax `parametric method syntax randtype{T <: Number}(s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:411.
│ Use `randtype(s::IntervalSet{T}) where T <: Number` instead.
└ @ nothing LearnBase.jl:411
┌ Warning: Deprecated syntax `parametric method syntax Base.rand{T <: Number}(s::IntervalSet{T}, dims::Integer...)` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:412.
│ Use `Base.rand(s::IntervalSet{T}, dims::Integer...) where T <: Number` instead.
└ @ nothing LearnBase.jl:412
┌ Warning: Deprecated syntax `parametric method syntax Base.in{T <: Number}(x::Number, s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:413.
│ Use `Base.in(x::Number, s::IntervalSet{T}) where T <: Number` instead.
└ @ nothing LearnBase.jl:413
┌ Warning: Deprecated syntax `parametric method syntax Base.length{T <: Number}(s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:414.
│ Use `Base.length(s::IntervalSet{T}) where T <: Number` instead.
└ @ nothing LearnBase.jl:414
┌ Warning: Deprecated syntax `parametric method syntax randtype{T <: AbstractVector}(s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:417.
│ Use `randtype(s::IntervalSet{T}) where T <: AbstractVector` instead.
└ @ nothing LearnBase.jl:417
┌ Warning: Deprecated syntax `parametric method syntax Base.rand{T <: AbstractVector}(s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:418.
│ Use `Base.rand(s::IntervalSet{T}) where T <: AbstractVector` instead.
└ @ nothing LearnBase.jl:418
┌ Warning: Deprecated syntax `parametric method syntax Base.in{T <: AbstractVector}(x::AbstractVector, s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:419.
│ Use `Base.in(x::AbstractVector, s::IntervalSet{T}) where T <: AbstractVector` instead.
└ @ nothing LearnBase.jl:419
┌ Warning: Deprecated syntax `parametric method syntax Base.length{T <: AbstractVector}(s::IntervalSet{T})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:420.
│ Use `Base.length(s::IntervalSet{T}) where T <: AbstractVector` instead.
└ @ nothing LearnBase.jl:420
┌ Warning: Deprecated syntax `parametric method syntax randtype{S <: AbstractSet, N}(sets::AbstractArray{S, N})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:435.
│ Use `randtype(sets::AbstractArray{S, N}) where {S <: AbstractSet, N}` instead.
└ @ nothing LearnBase.jl:435
┌ Warning: Deprecated syntax `parametric method syntax Base.rand{S <: AbstractSet}(sets::AbstractArray{S})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:436.
│ Use `Base.rand(sets::AbstractArray{S}) where S <: AbstractSet` instead.
└ @ nothing LearnBase.jl:436
┌ Warning: Deprecated syntax `parametric method syntax Base.rand{S <: AbstractSet}(sets::AbstractArray{S}, dim1::Integer, dims::Integer...)` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:438.
│ Use `Base.rand(sets::AbstractArray{S}, dim1::Integer, dims::Integer...) where S <: AbstractSet` instead.
└ @ nothing LearnBase.jl:438
┌ Warning: Deprecated syntax `parametric method syntax Base.in{S <: AbstractSet}(xs::AbstractArray, sets::AbstractArray{S})` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:445.
│ Use `Base.in(xs::AbstractArray, sets::AbstractArray{S}) where S <: AbstractSet` instead.
└ @ nothing LearnBase.jl:445
┌ Warning: Deprecated syntax `parametric method syntax Base.rand{OT}(sets::TupleSet, ::Type{OT}, dim1::Integer, dims::Integer...)` around /home/vagrant/.julia/v0.7/LearnBase/src/LearnBase.jl:461.
│ Use `Base.rand(sets::TupleSet, #unused#::Type{OT}, dim1::Integer, dims::Integer...) where OT` instead.
└ @ nothing LearnBase.jl:461
┌ Warning: Deprecated syntax `parametric method syntax soft_thresh{T <: Number}(x::T, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/PenaltyFunctions.jl:32.
│ Use `soft_thresh(x::T, λ::Number) where T <: Number` instead.
└ @ nothing PenaltyFunctions.jl:32
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:78.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:78
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:89.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:89
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:100.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:100
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:111.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:111
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:134.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:134
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:150.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:150
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:200.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:200
┌ Warning: Deprecated syntax `<(t, p.γ) ? *(sign(θ), -(T(1), /(t, p.γ))):` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:214.
│ Use `<(t, p.γ) ? *(sign(θ), -(T(1), /(t, p.γ))) :` instead.
└ @ nothing elementpenalty.jl:214
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:235.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:235
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::AA{S})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:12.
│ Use `value(p::ElementPenalty, θ::AA{T}, s::AA{S}) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:12
┌ Warning: Deprecated syntax `parametric method syntax grad{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:34.
│ Use `grad(p::ElementPenalty, θ::AA{T}, s::S) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:34
┌ Warning: Deprecated syntax `parametric method syntax grad{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::AA{S})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:35.
│ Use `grad(p::ElementPenalty, θ::AA{T}, s::AA{S}) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:35
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::L2Penalty, θ::T)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:101.
│ Use `value(p::L2Penalty, θ::T) where T <: Number` instead.
└ @ nothing elementpenalty.jl:101
┌ Warning: Deprecated syntax `parametric method syntax prox{T <: Number}(p::L2Penalty, θ::T, s::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:103.
│ Use `prox(p::L2Penalty, θ::T, s::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:103
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::ElasticNetPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:120.
│ Use `value(p::ElasticNetPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:120
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(p::ElasticNetPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:120.
│ Use `deriv(p::ElasticNetPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:120
┌ Warning: Deprecated syntax `parametric method syntax prox{T <: Number}(p::ElasticNetPenalty{T}, θ::Number, s::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:124.
│ Use `prox(p::ElasticNetPenalty{T}, θ::Number, s::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:124
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(p::LogPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:142.
│ Use `deriv(p::LogPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:142
┌ Warning: Deprecated syntax `parametric method syntax SCADPenalty{T <: Number}(a::T = 3.7, γ::T = T(1))` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:159.
│ Use `SCADPenalty(a::T = 3.7, γ::T = T(1)) where T <: Number` instead.
└ @ nothing elementpenalty.jl:159
┌ Warning: Deprecated syntax `parametric method syntax value{T, S <: Number}(p::SCADPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:163.
│ Use `value(p::SCADPenalty{T}, θ::S) where {T, S <: Number}` instead.
└ @ nothing elementpenalty.jl:163
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, S <: Number}(p::SCADPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:174.
│ Use `deriv(p::SCADPenalty{T}, θ::S) where {T, S <: Number}` instead.
└ @ nothing elementpenalty.jl:174
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::MCPPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:209.
│ Use `value(p::MCPPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:209
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number, S <: Number}(p::MCPPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:213.
│ Use `deriv(p::MCPPenalty{T}, θ::S) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:213
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:12.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:12
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:25.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:25
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:47.
│ Use `mutable struct` instead.
└ @ nothing arraypenalty.jl:47
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:68.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:68
┌ Warning: Deprecated syntax `parametric method syntax prox!{T <: Number}(p::GroupLassoPenalty, A::AA{T}, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:28.
│ Use `prox!(p::GroupLassoPenalty, A::AA{T}, λ::Number) where T <: Number` instead.
└ @ nothing arraypenalty.jl:28
┌ Warning: Deprecated syntax `parametric method syntax MahalanobisPenalty{T}(C::AbstractMatrix{T}, λ::T = one(T))` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:54.
│ Use `MahalanobisPenalty(C::AbstractMatrix{T}, λ::T = one(T)) where T` instead.
└ @ nothing arraypenalty.jl:54
┌ Warning: Deprecated syntax `parametric method syntax value{T}(p::MahalanobisPenalty{T}, x::AbstractVector{T})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:56.
│ Use `value(p::MahalanobisPenalty{T}, x::AbstractVector{T}) where T` instead.
└ @ nothing arraypenalty.jl:56
┌ Warning: Deprecated syntax `parametric method syntax prox!{T <: Number}(p::MahalanobisPenalty{T}, A::AA{T, 1}, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:58.
│ Use `prox!(p::MahalanobisPenalty{T}, A::AA{T, 1}, λ::Number) where T <: Number` instead.
└ @ nothing arraypenalty.jl:58
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:2
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Show methods:
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.NoPenalty) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.NoPenalty) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > NoPenalty
  > 0.1 * (NoPenalty)
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.L1Penalty) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.L1Penalty) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > L1Penalty
  > 0.1 * (L1Penalty)
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.L2Penalty) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.L2Penalty) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > L2Penalty
  > 0.1 * (L2Penalty)
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.ElasticNetPenalty{Float64}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.ElasticNetPenalty{Float64}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > ElasticNetPenalty{Float64}(α = 0.7)
  > 0.1 * (ElasticNetPenalty{Float64}(α = 0.7))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.ElasticNetPenalty{Float32}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.ElasticNetPenalty{Float32}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > ElasticNetPenalty{Float32}(α = 0.7)
  > 0.1 * (ElasticNetPenalty{Float32}(α = 0.7))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.MCPPenalty{Float64}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.MCPPenalty{Float64}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > MCPPenalty{Float64}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float64}(γ = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.MCPPenalty{Float32}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.MCPPenalty{Float32}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > MCPPenalty{Float32}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float32}(γ = 1.0))
  > MCPPenalty{Float64}(γ = 1.0)
  > 0.1 * (MCPPenalty{Float64}(γ = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.LogPenalty{Float64}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.LogPenalty{Float64}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > LogPenalty{Float64}(η = 1.0)
  > 0.1 * (LogPenalty{Float64}(η = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.LogPenalty{Float32}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.LogPenalty{Float32}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > LogPenalty{Float32}(η = 1.0)
  > 0.1 * (LogPenalty{Float32}(η = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.SCADPenalty{Float64}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.SCADPenalty{Float64}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > SCADPenalty{Float64}(a = 3.7, γ = 1.0)
  > 0.1 * (SCADPenalty{Float64}(a = 3.7, γ = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name(::PenaltyFunctions.SCADPenalty{Float32}) at PenaltyFunctions.jl:42
└ @ PenaltyFunctions PenaltyFunctions.jl:42
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = name(::PenaltyFunctions.SCADPenalty{Float32}) at PenaltyFunctions.jl:44
└ @ PenaltyFunctions PenaltyFunctions.jl:44
  > SCADPenalty{Float32}(a = 3.7, γ = 1.0)
  > 0.1 * (SCADPenalty{Float32}(a = 3.7, γ = 1.0))
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name at arraypenalty.jl:5 [inlined]
└ @ Core arraypenalty.jl:5
  > NuclearNormPenalty
  > 0.1 * (NuclearNormPenalty)
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name at arraypenalty.jl:5 [inlined]
└ @ Core arraypenalty.jl:5
  > GroupLassoPenalty
  > 0.1 * (GroupLassoPenalty)
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = name at arraypenalty.jl:5 [inlined]
└ @ Core arraypenalty.jl:5
  > MahalanobisPenalty{Float64}
  > 0.1 * (MahalanobisPenalty{Float64})


┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: Begin Actual Tests
Test Summary: | Pass  Total
Common        |    3      3
Test Summary:  | Pass  Total
ElementPenalty |  264    264
Test Summary:        | Pass  Total
ScaledElementPenalty |   60     60
┌ Warning: `sqrtm` is deprecated, use `sqrt` instead.
│   caller = value(::PenaltyFunctions.NuclearNormPenalty, ::Array{Float64,2}) at arraypenalty.jl:14
└ @ PenaltyFunctions arraypenalty.jl:14
┌ Warning: `full(F::SVD)` (and `full` in general) has been deprecated. To replace `full(F::SVD)`, consider `Matrix(F)`, `AbstractMatrix(F)` or, if those options are too narrow, `Array(F)` or `AbstractArray(F)`.
│   caller = prox!(::PenaltyFunctions.NuclearNormPenalty, ::Array{Float64,2}, ::Float64) at arraypenalty.jl:19
└ @ PenaltyFunctions arraypenalty.jl:19
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = prox!(::PenaltyFunctions.NuclearNormPenalty, ::Array{Float64,2}, ::Float64) at arraypenalty.jl:19
└ @ PenaltyFunctions arraypenalty.jl:19
MahalanobisPenalty: Error During Test at /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:216
  Test threw an exception of type ErrorException
  Expression: #= /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:216 =# @inferred(value(p, θ)) ≈ 0.5 * dot(C * θ, C * θ)
  return type Float64 does not match inferred return type Any
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] macro expansion at /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:216 [inlined]
   [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:212 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:980 [inlined]
   [6] top-level scope at /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:192
┌ Warning: `A_ldiv_B!(A::LU{T, <:StridedMatrix}, B::StridedVecOrMat{T}) where T <: BlasFloat` is deprecated, use `ldiv!(A, B)` instead.
│   caller = prox!(::PenaltyFunctions.MahalanobisPenalty{Float64}, ::Array{Float64,1}, ::Float64) at arraypenalty.jl:63
└ @ PenaltyFunctions arraypenalty.jl:63
Test Summary:        | Pass  Error  Total
ArrayPenalty         |    5      1      6
  NuclearNormPenalty |    2             2
  GroupLassoPenalty  |    1             1
  MahalanobisPenalty |           1      1
  ScaledArrayPenalty |    2             2
ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl:191
┌ Error: ------------------------------------------------------------
│ # Testing failed for PenaltyFunctions
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PenaltyFunctions/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: PenaltyFunctions had test errors

>>> End of log
