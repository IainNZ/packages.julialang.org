>>> 'Pkg.add("PyDSTool")' log
INFO: Cloning cache of PyDSTool from https://github.com/JuliaDiffEq/PyDSTool.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing Conda v0.5.3
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffEqBase v0.15.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Parameters v0.7.2
INFO: Installing PyCall v1.11.1
INFO: Installing PyDSTool v0.1.1
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing SHA v0.3.2
INFO: Installing SimpleTraits v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.12.1                   py27_0  
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Building PyDSTool
Fetching package metadata .........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
pip                       9.0.1                    py27_1  
Collecting pydstool
  Downloading PyDSTool-0.90.2.tar.gz (957kB)
Requirement already satisfied: six in /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/python2.7/site-packages (from pydstool)
Requirement already satisfied: scipy>=0.9 in /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/python2.7/site-packages (from pydstool)
Requirement already satisfied: numpy>=1.6 in /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/python2.7/site-packages (from pydstool)
Building wheels for collected packages: pydstool
  Running setup.py bdist_wheel for pydstool: started
  Running setup.py bdist_wheel for pydstool: finished with status 'done'
  Stored in directory: /home/vagrant/.cache/pip/wheels/ee/bf/47/ad2dfcd9ea3f9e93ae196bfc0ac69c0eeae665f3d550235e79
Successfully built pydstool
Installing collected packages: pydstool
Successfully installed pydstool-0.90.2
INFO: Package database updated

>>> 'Pkg.test("PyDSTool")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (594.10546875 MB free)
Uptime: 24721.0 sec
Load Avg:  0.798828125  0.93798828125  0.92822265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz    1422304 s       7176 s     172428 s     586986 s         41 s
#2  3509 MHz     464683 s        558 s      70364 s    1876615 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - PyDSTool                      0.1.1
14 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.23.0
 - Conda                         0.5.3
 - DataStructures                0.5.3
 - DiffEqBase                    0.15.0
 - MacroTools                    0.3.6
 - Parameters                    0.7.2
 - PyCall                        1.11.1
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - SHA                           0.3.2
 - SimpleTraits                  0.4.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for PyDSTool...
INFO: Installing ParameterizedFunctions v1.3.0
INFO: Installing SymEngine v0.1.5
INFO: Building Conda
INFO: Building SymEngine
INFO: Testing PyDSTool
Test Summary: | 
  Linear Solve | No tests
  3.366084 seconds (1.87 M allocations: 79.614 MB, 2.99% gc time)
Test Summary:  | Pass  Total
  Calcium Direct |    2      2
 72.039313 seconds (1.26 M allocations: 52.711 MB, 0.02% gc time)
Test Summary:         | Pass  Total
  Calcium Parameterized |    1      1
 10.208614 seconds (1.96 M allocations: 79.858 MB, 0.30% gc time)
elapsed time: 86.861892876 seconds
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
PyCont curve SN1 (type LP-C)
Using model: Calcium channel model

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  SN1
auxpars  =  []
freepars  =  ['i', 'gca']
MaxNumPoints  =  200
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['CP']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method FoldCurve._MoorePenrose of PyCont curve SN1 (type LP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2
LP Point found 
LP Point found 
PyCont curve EQ1 (type EP-C)
Using model: Calcium

Model Info
---------- 

  Variables : v, w
  Parameters: gca, vca, c, i, vl, v1, v2, gl

Continuation Parameters
----------------------- 

name  =  EQ1
auxpars  =  []
freepars  =  ['i']
MaxNumPoints  =  450
MaxCorrIters  =  5
MaxTestIters  =  10
MaxStepSize  =  2
MinStepSize  =  1e-05
StepSize  =  2
VarTol  =  1e-06
FuncTol  =  1e-06
TestTol  =  0.0001
LocBifPoints  =  ['B', 'SP', 'BP', 'LP', 'H']
verbosity  =  1
ClosedCurve  =  50
SaveJacobian  =  False
SaveEigen  =  True
Corrector  =  <bound method EquilibriumCurve._MoorePenrose of PyCont curve EQ1 (type EP-C)>
UseAuto  =  False
StopAtPoints  =  []
SPOut  =  None


Special Points
-------------- 

P1, P2, LP1, LP2
INFO: PyDSTool tests passed
INFO: Removing ParameterizedFunctions v1.3.0
INFO: Removing SymEngine v0.1.5

>>> End of log
