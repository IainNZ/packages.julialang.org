>>> 'Pkg.add("MiniLogging")' log
[ Info: Cloning cache of MiniLogging from https://github.com/colinfang/MiniLogging.jl.git
[ Info: Installing MiniLogging v0.0.2
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MiniLogging
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MiniLogging")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3729686 s       6062 s     194036 s     994011 s         46 s
       #2  3500 MHz     848979 s        121 s      78280 s    4732727 s          2 s
       
  Memory: 2.93927001953125 GB (965.9921875 MB free)
  Uptime: 57521.0 sec
  Load Avg:  0.9169921875  0.96875  0.99462890625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - MiniLogging                   0.0.2
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing MiniLogging
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/MiniLogging/test/runtests.jl:1
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MiniLogging/src/MiniLogging.jl:11.
│ Use `mutable struct` instead.
└ @ nothing MiniLogging.jl:11
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MiniLogging/src/MiniLogging.jl:16.
│ Use `mutable struct` instead.
└ @ nothing MiniLogging.jl:16
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MiniLogging/src/Hierarchy.jl:12.
│ Use `struct` instead.
└ @ nothing Hierarchy.jl:12
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MiniLogging/src/ancestors.jl:1.
│ Use `struct` instead.
└ @ nothing ancestors.jl:1
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/MiniLogging/src/ancestors.jl:29
┌ Warning: Deprecated syntax `parametric method syntax write_log{T <: IO}(output::T, color::Symbol, msg::AbstractString)` around /home/vagrant/.julia/v0.7/MiniLogging/src/MiniLogging.jl:101.
│ Use `write_log(output::T, color::Symbol, msg::AbstractString) where T <: IO` instead.
└ @ nothing MiniLogging.jl:101
┌ Warning: `rsearch(s::AbstractString, c::Char, i::Integer)` is deprecated, use `findprev(equalto(c), s, i)` instead.
│   caller = next(::Ancestors, ::Int64) at ancestors.jl:16
└ @ MiniLogging.Hierarchy ancestors.jl:16
Error During Test at /home/vagrant/.julia/v0.7/MiniLogging/test/runtests.jl:7
  Test threw an exception of type MethodError
  Expression: collect(Ancestors("a")) == [""]
  MethodError: no method matching isless(::Int64, ::Nothing)
  Closest candidates are:
    isless(!Matched::Missing, ::Any) at missing.jl:56
    isless(::Real, !Matched::AbstractFloat) at operators.jl:125
    isless(::Real, !Matched::Real) at operators.jl:302
    ...
  Stacktrace:
   [1] <(::Int64, ::Nothing) at ./operators.jl:227
   [2] >(::Nothing, ::Int64) at ./operators.jl:250
   [3] next(::Ancestors, ::Int64) at /home/vagrant/.julia/v0.7/MiniLogging/src/ancestors.jl:17
   [4] _collect(::UnitRange{Int64}, ::Ancestors, ::Base.HasEltype, ::Base.SizeUnknown) at ./array.jl:486
   [5] collect(::Ancestors) at ./array.jl:475
   [6] top-level scope
   [7] include at ./boot.jl:292 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:1011
   [9] include(::Module, ::String) at ./sysimg.jl:26
   [10] process_options(::Base.JLOptions) at ./client.jl:334
   [11] _start() at ./client.jl:386
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/MiniLogging/test/runtests.jl:7
┌ Error: ------------------------------------------------------------
│ # Testing failed for MiniLogging
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/MiniLogging/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: MiniLogging had test errors

>>> End of log
