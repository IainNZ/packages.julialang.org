>>> 'Pkg.add("ERFA")' log
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   343    0   343    0     0   3453      0 --:--:-- --:--:-- --:--:--  3430
 21  566k   21  120k    0     0   113k      0  0:00:04  0:00:01  0:00:03  113k100  566k  100  566k    0     0   378k      0  0:00:01  0:00:01 --:--:-- 1033k
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
... truncated ...
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------
make[2]: Leaving directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa/src'
make[1]: Leaving directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa/src'
make[1]: Entering directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa'
make[2]: Entering directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa'
make[2]: Nothing to be done for 'install-exec-am'.
 /usr/bin/mkdir -p '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/usr/lib/pkgconfig'
 /usr/bin/install -c -m 644 erfa.pc '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/usr/lib/pkgconfig'
make[2]: Leaving directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa'
make[1]: Leaving directory '/home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa'
INFO: Installing BinDeps v0.3.3
INFO: Installing ERFA v0.0.0
INFO: Installing SHA v0.0.2
INFO: Installing URIParser v0.0.2
INFO: Building ERFA
INFO: Attempting to Create directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/downloads
INFO: Downloading file https://github.com/liberfa/erfa/releases/download/v1.0.1/erfa-1.0.1.tar.gz
INFO: Done downloading file https://github.com/liberfa/erfa/releases/download/v1.0.1/erfa-1.0.1.tar.gz
INFO: Attempting to Create directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/src
INFO: Attempting to Create directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps
INFO: Directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps already created
INFO: Attempting to Create directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/src/erfa-1.0.1
INFO: Attempting to Create directory /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa
INFO: Changing Directory to /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa
INFO: Changing Directory to /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa
INFO: Changing Directory to /home/idunning/pkgtest/.julia/v0.4/ERFA/deps/builds/liberfa
INFO: Package database updated
INFO: METADATA is out-of-date a you may not have the latest version of ERFA
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'using ERFA' log

>>> test log
ERROR: type: ccall: expected Symbol, got Array{Any,1}
 in include at ./boot.jl:245
 in include_from_node1 at ./loading.jl:128
 in include at ./boot.jl:245
 in include_from_node1 at loading.jl:128
 in process_options at ./client.jl:285
 in _start at ./client.jl:354
 in _start_3B_3598 at /home/idunning/julia04/usr/bin/../lib/julia/sys.so
while loading /home/idunning/pkgtest/.julia/v0.4/ERFA/src/test.jl, in expression starting on line 5
while loading /home/idunning/pkgtest/.julia/v0.4/ERFA/runtests.jl, in expression starting on line 1


>>> end of log
