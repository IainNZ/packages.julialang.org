>>> 'Pkg.add("Mamba")' log
INFO: Cloning cache of BinDeps from git://github.com/JuliaLang/BinDeps.jl.git
INFO: Cloning cache of Cairo from git://github.com/JuliaLang/Cairo.jl.git
INFO: Cloning cache of Graphics from git://github.com/JuliaLang/Graphics.jl.git
INFO: Cloning cache of Graphs from git://github.com/JuliaLang/Graphs.jl.git
INFO: Cloning cache of HttpCommon from git://github.com/JuliaWeb/HttpCommon.jl.git
INFO: Cloning cache of Mamba from git://github.com/brian-j-smith/Mamba.jl.git
INFO: Cloning cache of SHA from git://github.com/staticfloat/SHA.jl.git
INFO: Cloning cache of URIParser from git://github.com/JuliaWeb/URIParser.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing BinDeps v0.3.21
INFO: Installing Cairo v0.2.31
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.1.7
INFO: Installing Colors v0.5.4
INFO: Installing Compose v0.3.18
INFO: Installing Contour v0.0.8
INFO: Installing DataArrays v0.2.20
INFO: Installing DataFrames v0.6.10
INFO: Installing DataStructures v0.3.14
INFO: Installing Dates v0.3.2
INFO: Installing Distances v0.2.2
INFO: Installing Distributions v0.8.10
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.1.5
INFO: Installing FixedPointNumbers v0.0.12
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.3.18
INFO: Installing Graphics v0.1.0
INFO: Installing Graphs v0.6.0
INFO: Installing Grid v0.3.11
INFO: Installing Hexagons v0.0.4
INFO: Installing HttpCommon v0.1.2
INFO: Installing ImmutableArrays v0.0.11
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Mamba v0.4.12
INFO: Installing NaNMath v0.1.1
INFO: Installing Optim v0.4.4
INFO: Installing PDMats v0.4.1
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.1.2
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.7.4
INFO: Installing StatsFuns v0.2.2
INFO: Installing URIParser v0.0.7
INFO: Installing WoodburyMatrices v0.1.5
INFO: Building Cairo
INFO: Package database updated

>>> 'Pkg.test("Mamba")' log
Julia Version 0.3.12
Commit 80aa779 (2015-10-26 12:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing Mamba
Running tests:

>>> Testing ../doc/tutorial/line.jl

digraph MambaModel {
	"mu" [shape="diamond", fillcolor="gray85", style="filled"];
		"mu" -> "y";
	"xmat" [shape="box", fillcolor="gray85", style="filled"];
		"xmat" -> "mu";
	"beta" [shape="ellipse"];
		"beta" -> "mu";
	"s2" [shape="ellipse"];
		"s2" -> "y";
	"y" [shape="ellipse", fillcolor="gray85", style="filled"];
}
MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:17:50 of 0:17:51 remaining]
Chain 1:  10% [0:00:15 of 0:00:16 remaining]
Chain 1:  20% [0:00:10 of 0:00:12 remaining]
Chain 1:  30% [0:00:08 of 0:00:11 remaining]
Chain 1:  40% [0:00:07 of 0:00:11 remaining]
Chain 1:  50% [0:00:05 of 0:00:10 remaining]
Chain 1:  60% [0:00:04 of 0:00:10 remaining]
Chain 1:  70% [0:00:03 of 0:00:10 remaining]
Chain 1:  80% [0:00:02 of 0:00:10 remaining]
Chain 1:  90% [0:00:01 of 0:00:09 remaining]
Chain 1: 100% [0:00:00 of 0:00:09 remaining]

Chain 2:   0% [0:00:06 of 0:00:06 remaining]
Chain 2:  10% [0:00:04 of 0:00:05 remaining]
Chain 2:  20% [0:00:04 of 0:00:05 remaining]
Chain 2:  30% [0:00:04 of 0:00:06 remaining]
Chain 2:  40% [0:00:03 of 0:00:06 remaining]
Chain 2:  50% [0:00:03 of 0:00:06 remaining]
Chain 2:  60% [0:00:02 of 0:00:06 remaining]
Chain 2:  70% [0:00:02 of 0:00:06 remaining]
Chain 2:  80% [0:00:01 of 0:00:06 remaining]
Chain 2:  90% [0:00:01 of 0:00:05 remaining]
Chain 2: 100% [0:00:00 of 0:00:05 remaining]

Chain 3:   0% [0:00:06 of 0:00:06 remaining]
Chain 3:  10% [0:00:06 of 0:00:07 remaining]
Chain 3:  20% [0:00:05 of 0:00:07 remaining]
Chain 3:  30% [0:00:05 of 0:00:07 remaining]
Chain 3:  40% [0:00:04 of 0:00:07 remaining]
Chain 3:  50% [0:00:04 of 0:00:07 remaining]
Chain 3:  60% [0:00:03 of 0:00:07 remaining]
Chain 3:  70% [0:00:02 of 0:00:08 remaining]
Chain 3:  80% [0:00:02 of 0:00:08 remaining]
Chain 3:  90% [0:00:01 of 0:00:08 remaining]
Chain 3: 100% [0:00:00 of 0:00:08 remaining]

MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:00:43 of 0:00:43 remaining]
Chain 1:  10% [0:00:11 of 0:00:12 remaining]
Chain 1:  20% [0:00:10 of 0:00:12 remaining]
Chain 1:  30% [0:00:09 of 0:00:13 remaining]
Chain 1:  40% [0:00:08 of 0:00:13 remaining]
Chain 1:  50% [0:00:07 of 0:00:13 remaining]
Chain 1:  60% [0:00:05 of 0:00:13 remaining]
Chain 1:  70% [0:00:04 of 0:00:13 remaining]
Chain 1:  80% [0:00:03 of 0:00:13 remaining]
Chain 1:  90% [0:00:01 of 0:00:13 remaining]
Chain 1: 100% [0:00:00 of 0:00:13 remaining]

Chain 2:   0% [0:01:43 of 0:01:43 remaining]
Chain 2:  10% [0:00:10 of 0:00:11 remaining]
Chain 2:  20% [0:00:07 of 0:00:09 remaining]
Chain 2:  30% [0:00:06 of 0:00:09 remaining]
Chain 2:  40% [0:00:06 of 0:00:09 remaining]
Chain 2:  50% [0:00:05 of 0:00:10 remaining]
Chain 2:  60% [0:00:04 of 0:00:10 remaining]
Chain 2:  70% [0:00:03 of 0:00:10 remaining]
Chain 2:  80% [0:00:02 of 0:00:10 remaining]
Chain 2:  90% [0:00:01 of 0:00:10 remaining]
Chain 2: 100% [0:00:00 of 0:00:10 remaining]

Chain 3:   0% [0:00:12 of 0:00:12 remaining]
Chain 3:  10% [0:00:09 of 0:00:10 remaining]
Chain 3:  20% [0:00:08 of 0:00:10 remaining]
Chain 3:  30% [0:00:07 of 0:00:10 remaining]
Chain 3:  40% [0:00:05 of 0:00:09 remaining]
Chain 3:  50% [0:00:04 of 0:00:09 remaining]
Chain 3:  60% [0:00:04 of 0:00:09 remaining]
Chain 3:  70% [0:00:03 of 0:00:09 remaining]
Chain 3:  80% [0:00:02 of 0:00:09 remaining]
Chain 3:  90% [0:00:01 of 0:00:09 remaining]
Chain 3: 100% [0:00:00 of 0:00:08 remaining]

MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:12:01 of 0:12:01 remaining]
Chain 1:  10% [0:00:07 of 0:00:08 remaining]
Chain 1:  20% [0:00:04 of 0:00:04 remaining]
Chain 1:  30% [0:00:02 of 0:00:03 remaining]
Chain 1:  40% [0:00:01 of 0:00:02 remaining]
Chain 1:  50% [0:00:01 of 0:00:02 remaining]
Chain 1:  60% [0:00:01 of 0:00:02 remaining]
Chain 1:  70% [0:00:00 of 0:00:02 remaining]
Chain 1:  80% [0:00:00 of 0:00:01 remaining]
Chain 1:  90% [0:00:00 of 0:00:01 remaining]
Chain 1: 100% [0:00:00 of 0:00:01 remaining]

Chain 2:   0% [0:00:01 of 0:00:01 remaining]
Chain 2:  10% [0:00:01 of 0:00:01 remaining]
Chain 2:  20% [0:00:00 of 0:00:01 remaining]
Chain 2:  30% [0:00:00 of 0:00:01 remaining]
Chain 2:  40% [0:00:00 of 0:00:00 remaining]
Chain 2:  50% [0:00:00 of 0:00:01 remaining]
Chain 2:  60% [0:00:00 of 0:00:01 remaining]
Chain 2:  70% [0:00:00 of 0:00:00 remaining]
Chain 2:  80% [0:00:00 of 0:00:00 remaining]
Chain 2:  90% [0:00:00 of 0:00:00 remaining]
Chain 2: 100% [0:00:00 of 0:00:00 remaining]

Chain 3:   0% [0:00:01 of 0:00:01 remaining]
Chain 3:  10% [0:00:00 of 0:00:00 remaining]
Chain 3:  20% [0:00:01 of 0:00:01 remaining]
Chain 3:  30% [0:00:00 of 0:00:01 remaining]
Chain 3:  40% [0:00:00 of 0:00:00 remaining]
Chain 3:  50% [0:00:00 of 0:00:00 remaining]
Chain 3:  60% [0:00:00 of 0:00:00 remaining]
Chain 3:  70% [0:00:00 of 0:00:00 remaining]
Chain 3:  80% [0:00:00 of 0:00:00 remaining]
Chain 3:  90% [0:00:00 of 0:00:00 remaining]
Chain 3: 100% [0:00:00 of 0:00:00 remaining]

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Gelman, Rubin, and Brooks Diagnostic:
              PSRF 97.5%
          s2 1.005 1.010
     beta[1] 1.006 1.006
     beta[2] 1.006 1.006
Multivariate 1.004   NaN

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Geweke Diagnostic:
First Window Fraction = 0.1
Second Window Fraction = 0.5

        Z-score p-value
     s2  -2.321  0.0203
beta[1]   0.381  0.7035
beta[2]  -0.273  0.7851

        Z-score p-value
     s2   0.079  0.9370
beta[1]   0.700  0.4839
beta[2]  -0.651  0.5150

        Z-score p-value
     s2  -2.101  0.0356
beta[1]   0.932  0.3515
beta[2]  -0.685  0.4934

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Heidelberger and Welch Diagnostic:
Target Halfwidth Ratio = 0.1
Alpha = 0.05

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
     s2     251            1  0.2407 1.54572606 0.559718246    0
beta[1]     251            1  0.5330 0.53489109 0.065861054    0
beta[2]     251            1  0.5058 0.81767861 0.018822591    1

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
     s2     251            1  0.8672 1.26092566  0.27625544    0
beta[1]     251            1  0.8806 0.55820771  0.07672180    0
beta[2]     251            1  0.9330 0.81398205  0.02254785    1

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
     s2     251            1  0.8145 1.12827403 0.196179015    0
beta[1]     251            1  0.4017 0.55923590 0.056504387    0
beta[2]     251            1  0.4216 0.81202489 0.016274601    1

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Raftery and Lewis Diagnostic:
Quantile (q) = 0.025
Accuracy (r) = 0.005
Probability (s) = 0.95

        Thinning Burn-in    Total   Nmin Dependence Factor
     s2        2     255 8.1370×10³ 3746         2.1721837
beta[1]        4     283 3.7515×10⁴ 3746        10.0146823
beta[2]        2     267 1.8257×10⁴ 3746         4.8737320

        Thinning Burn-in    Total   Nmin Dependence Factor
     s2        2     257 8.2730×10³ 3746          2.208489
beta[1]        4     279 3.0899×10⁴ 3746          8.248532
beta[2]        2     267 1.7209×10⁴ 3746          4.593967

        Thinning Burn-in    Total   Nmin Dependence Factor
     s2        2     253 7.7470×10³ 3746         2.0680726
beta[1]        2     273 2.4635×10⁴ 3746         6.5763481
beta[2]        4     271 2.4375×10⁴ 3746         6.5069407

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Empirical Posterior Estimates:
           Mean        SD       Naive SE      MCSE       ESS   
     s2 1.31164192 2.11700926 0.017505512 0.084760964  623.8120
beta[1] 0.55077823 1.22684809 0.010144785 0.021035908 3401.4104
beta[2] 0.81456185 0.36999413 0.003059475 0.005983602 3823.5282

Quantiles:
            2.5%        25.0%       50.0%      75.0%     97.5%  
     s2  0.16892049  0.378582332 0.64270878 1.29554584 6.9717783
beta[1] -2.07866222 -0.003655445 0.59823408 1.15533747 2.9271073
beta[2]  0.09586580  0.633639279 0.80506796 0.98038846 1.6071757

         95% Lower  95% Upper
     s2  0.07467614 4.6285413
beta[1] -1.99190114 3.0059020
beta[2]  0.11629653 1.6180369

             s2       beta[1]     beta[2]  
     s2  1.00000000 -0.10350428  0.09705320
beta[1] -0.10350428  1.00000000 -0.91207413
beta[2]  0.09705320 -0.91207413  1.00000000

           Lag 2      Lag 10       Lag 20       Lag 100  
     s2 0.93053244 0.714716091   0.500203969 -0.042576876
beta[1] 0.28416539 0.014464210   0.018907017  0.016960934
beta[2] 0.24198899 0.055653465   0.032741909  0.014707979

           Lag 2      Lag 10       Lag 20       Lag 100  
     s2 0.83287322 0.467836910  0.2072834273 -0.015633535
beta[1] 0.36929851 0.048233308 -0.0004750478 -0.027301651
beta[2] 0.33367045 0.017565395  0.0281707823 -0.029797132

           Lag 2      Lag 10       Lag 20       Lag 100  
     s2 0.79994494 0.395445799   0.178553880  0.037355487
beta[1] 0.29036852 0.015125493   0.012514444 -0.009710261
beta[2] 0.23588485 0.009796189   0.017259594 -0.011623406

             Change Rate
          s2       1.000
     beta[1]       0.782
     beta[2]       0.782
Multivariate       1.000

MCMC Processing of 4875 Iterations x 3 Chains...

Chain 1:   0% [0:00:03 of 0:00:03 remaining]
Chain 1:  10% [0:00:00 of 0:00:00 remaining]
Chain 1:  20% [0:00:00 of 0:00:00 remaining]
Chain 1:  30% [0:00:00 of 0:00:00 remaining]
Chain 1:  40% [0:00:00 of 0:00:00 remaining]
Chain 1:  50% [0:00:00 of 0:00:00 remaining]
Chain 1:  60% [0:00:00 of 0:00:00 remaining]
Chain 1:  70% [0:00:00 of 0:00:00 remaining]
Chain 1:  80% [0:00:00 of 0:00:00 remaining]
Chain 1:  90% [0:00:00 of 0:00:00 remaining]
Chain 1: 100% [0:00:00 of 0:00:00 remaining]

Chain 2:   0% [0:00:00 of 0:00:00 remaining]
Chain 2:  10% [0:00:01 of 0:00:01 remaining]
Chain 2:  20% [0:00:00 of 0:00:00 remaining]
Chain 2:  30% [0:00:00 of 0:00:00 remaining]
Chain 2:  40% [0:00:00 of 0:00:00 remaining]
Chain 2:  50% [0:00:00 of 0:00:00 remaining]
Chain 2:  60% [0:00:00 of 0:00:00 remaining]
Chain 2:  70% [0:00:00 of 0:00:00 remaining]
Chain 2:  80% [0:00:00 of 0:00:00 remaining]
Chain 2:  90% [0:00:00 of 0:00:00 remaining]
Chain 2: 100% [0:00:00 of 0:00:00 remaining]

Chain 3:   0% [0:00:00 of 0:00:00 remaining]
Chain 3:  10% [0:00:00 of 0:00:00 remaining]
Chain 3:  20% [0:00:00 of 0:00:00 remaining]
Chain 3:  30% [0:00:00 of 0:00:00 remaining]
Chain 3:  40% [0:00:00 of 0:00:00 remaining]
Chain 3:  50% [0:00:00 of 0:00:00 remaining]
Chain 3:  60% [0:00:00 of 0:00:00 remaining]
Chain 3:  70% [0:00:00 of 0:00:00 remaining]
Chain 3:  80% [0:00:00 of 0:00:00 remaining]
Chain 3:  90% [0:00:00 of 0:00:00 remaining]
Chain 3: 100% [0:00:00 of 0:00:00 remaining]

      DIC    Effective Parameters
pD 13.811678            1.0221576
pV 24.423410            6.3280235

Iterations = 1000:5000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 2001

Empirical Posterior Estimates:
           Mean        SD       Naive SE      MCSE       ESS   
beta[1] 0.54294803 1.25352808 0.016178934 0.028153921 1982.3958
beta[2] 0.81654896 0.37611258 0.004854379 0.007729269 2367.8756

Quantiles:
            2.5%         25.0%       50.0%     75.0%     97.5%  
beta[1] -2.078668151 -0.011660148 0.59713701 1.1363502 2.9206261
beta[2]  0.082050873  0.634681247 0.80236351 0.9830827 1.6087557

MCMC Simulation of 5000 Iterations x 3 Chains...

Chain 1:   0% [0:00:02 of 0:00:02 remaining]
Chain 1:  10% [0:00:02 of 0:00:02 remaining]
Chain 1:  20% [0:00:02 of 0:00:03 remaining]
Chain 1:  30% [0:00:02 of 0:00:03 remaining]
Chain 1:  40% [0:00:02 of 0:00:03 remaining]
Chain 1:  50% [0:00:01 of 0:00:03 remaining]
Chain 1:  60% [0:00:01 of 0:00:03 remaining]
Chain 1:  70% [0:00:01 of 0:00:03 remaining]
Chain 1:  80% [0:00:01 of 0:00:03 remaining]
Chain 1:  90% [0:00:00 of 0:00:03 remaining]
Chain 1: 100% [0:00:00 of 0:00:03 remaining]

Chain 2:   0% [0:00:03 of 0:00:03 remaining]
Chain 2:  10% [0:00:04 of 0:00:05 remaining]
Chain 2:  20% [0:00:04 of 0:00:05 remaining]
Chain 2:  30% [0:00:03 of 0:00:05 remaining]
Chain 2:  40% [0:00:02 of 0:00:04 remaining]
Chain 2:  50% [0:00:02 of 0:00:04 remaining]
Chain 2:  60% [0:00:02 of 0:00:04 remaining]
Chain 2:  70% [0:00:01 of 0:00:04 remaining]
Chain 2:  80% [0:00:01 of 0:00:04 remaining]
Chain 2:  90% [0:00:00 of 0:00:05 remaining]
Chain 2: 100% [0:00:00 of 0:00:05 remaining]

Chain 3:   0% [0:00:04 of 0:00:04 remaining]
Chain 3:  10% [0:00:04 of 0:00:04 remaining]
Chain 3:  20% [0:00:04 of 0:00:05 remaining]
Chain 3:  30% [0:00:03 of 0:00:05 remaining]
Chain 3:  40% [0:00:03 of 0:00:05 remaining]
Chain 3:  50% [0:00:02 of 0:00:05 remaining]
Chain 3:  60% [0:00:02 of 0:00:05 remaining]
Chain 3:  70% [0:00:02 of 0:00:05 remaining]
Chain 3:  80% [0:00:01 of 0:00:05 remaining]
Chain 3:  90% [0:00:00 of 0:00:05 remaining]
Chain 3: 100% [0:00:00 of 0:00:05 remaining]

Iterations = 252:15000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 7375

Empirical Posterior Estimates:
           Mean       SD       Naive SE       MCSE         ESS   
     s2 1.3671666 2.20427640 0.0148191881 0.0711542661  959.68833
beta[1] 0.5772963 1.23822206 0.0083244758 0.0171198926 5231.12380
beta[2] 0.8065299 0.37356856 0.0025114739 0.0047715675 6129.40734

Quantiles:
            2.5%          25.0%         50.0%      75.0%     97.5%  
     s2  0.169513322  0.384402184212 0.66524559 1.34363829 7.6788170
beta[1] -1.984197644 -0.000057397486 0.60305768 1.18198586 3.0370154
beta[2]  0.054031121  0.627416288959 0.79939823 0.97924713 1.5834696

Object of type "Model"
-------------------------------------------------------------------------------
mu:
An unmonitored node of type "Logical{Array{Float64,1}}"
[3.2384475887755166,5.286627296564756,7.334807004353996,9.382986712143236,11.431166419932476]
Function:
AST(:($(Expr(:lambda, {:(model::(top(getfield))(Mamba,:Model))}, {{:xmat,:beta},{{:model,:Any,18},{:xmat,:Any,18},{:beta,:Any,18}},{}}, :(begin 
        model = (top(typeassert))(model,(top(getfield))(Mamba,:Model))
        xmat = getindex(model,:xmat)
        beta = getindex(model,:beta)
        return xmat * beta
    end)))))

Source Nodes:
[:xmat,:beta]

Target Nodes:
[:y]
-------------------------------------------------------------------------------
xmat:
[1.0 1.0
 1.0 2.0
 1.0 3.0
 1.0 4.0
 1.0 5.0]
-------------------------------------------------------------------------------
s2:
A monitored node of type "Stochastic{Float64}"
1.6343889734001322

Distribution:
InverseGamma(
invd: Gamma(α=0.001, θ=1000.0)
θ: 0.001
)

Function:
AST(:($(Expr(:lambda, {:(model::(top(getfield))(Mamba,:Model))}, {{},{{:model,:Any,18}},{}}, :(begin 
        model = (top(typeassert))(model,(top(getfield))(Mamba,:Model))
        return InverseGamma(0.001,0.001)
    end)))))

Source Nodes:
[]

Target Nodes:
[:y]
-------------------------------------------------------------------------------
beta:
A monitored node of type "Stochastic{Array{Float64,1}}"
[1.1902678809862768,2.04817970778924]

Distribution:
ZeroMeanIsoNormal(
dim: 2
μ: [0.0,0.0]
Σ: [1000.0 0.0
 0.0 1000.0]
)

Function:
AST(:($(Expr(:lambda, {:(model::(top(getfield))(Mamba,:Model))}, {{},{{:model,:Any,18}},{}}, :(begin 
        model = (top(typeassert))(model,(top(getfield))(Mamba,:Model))
        return MvNormal(2,sqrt(1000))
    end)))))

Source Nodes:
[]

Target Nodes:
[:mu,:y]
-------------------------------------------------------------------------------
y:
An unmonitored node of type "Stochastic{Array{Float64,1}}"
[1.0,3.0,3.0,3.0,5.0]

Distribution:
IsoNormal(
dim: 5
μ: [3.2384475887755166,5.286627296564756,7.334807004353996,9.382986712143236,11.431166419932476]
Σ: [1.6343889734001322 0.0 0.0 0.0 0.0
 0.0 1.6343889734001322 0.0 0.0 0.0
 0.0 0.0 1.6343889734001322 0.0 0.0
 0.0 0.0 0.0 1.6343889734001322 0.0
 0.0 0.0 0.0 0.0 1.6343889734001322]
)

Function:
AST(:($(Expr(:lambda, {:(model::(top(getfield))(Mamba,:Model))}, {{:mu,:s2},{{:model,:Any,18},{:mu,:Any,18},{:s2,:Any,18}},{}}, :(begin 
        model = (top(typeassert))(model,(top(getfield))(Mamba,:Model))
        mu = getindex(model,:mu)
        s2 = getindex(model,:s2)
        return MvNormal(mu,sqrt(s2))
    end)))))

Source Nodes:
[:mu,:s2]

Target Nodes:
[]

>>> Testing ../doc/samplers/amm.jl

Iterations = 1:5000
Thinning interval = 1
Chains = 1
Samples per chain = 5000

Empirical Posterior Estimates:
      Mean        SD       Naive SE       MCSE       ESS   
b0 0.67372957 1.07776604 0.0152419136 0.064652461 277.89381
b1 0.77112512 0.32135034 0.0045445801 0.017982404 319.34640
s2 1.29658296 2.18979550 0.0309683849 0.139974432 244.74267

Quantiles:
       2.5%        25.0%       50.0%      75.0%     97.5%  
b0 -1.451022943 0.069490369 0.65978541 1.19631191 3.1685322
b1  0.050258268 0.611291896 0.79094107 0.94652458 1.4132212
s2  0.174653274 0.389575233 0.65132492 1.31853897 6.8337311


>>> Testing ../doc/samplers/amwg.jl

Iterations = 1:5000
Thinning interval = 1
Chains = 1
Samples per chain = 5000

Empirical Posterior Estimates:
      Mean       SD      Naive SE       MCSE        ESS   
b0 0.5983881 1.5898262 0.0224835377 0.162560986  95.645964
b1 0.8006155 0.4358909 0.0061644284 0.042038394 107.513597
s2 2.2710644 9.1262030 0.1290640007 0.686946293 176.495925

Quantiles:
       2.5%       25.0%      50.0%      75.0%      97.5%  
b0 -2.17471713 0.03038741 0.67912808 1.30557650  3.3496859
b1  0.03755749 0.60096712 0.77599921 0.96011511  1.7513752
s2  0.16901125 0.39945048 0.70340929 1.47274298 13.3376638


>>> Testing ../doc/samplers/nuts.jl

Iterations = 1001:5000
Thinning interval = 1
Chains = 1
Samples per chain = 4000

Empirical Posterior Estimates:
      Mean        SD       Naive SE      MCSE       ESS   
b0 0.59242566 1.12664340 0.0178137962 0.07262530 240.65621
b1 0.79955933 0.34124494 0.0053955563 0.02021753 284.88937
s2 1.23041170 2.28573689 0.0361406736 0.10397815 483.24600

Quantiles:
       2.5%        25.0%       50.0%     75.0%     97.5%  
b0 -1.60156914 -0.018689413 0.55936277 1.1737069 2.9302371
b1  0.09581153  0.620652115 0.81772866 0.9840868 1.4803526
s2  0.20677131  0.401460055 0.67740807 1.2526098 5.6494793


>>> Testing ../doc/samplers/slice.jl

Iterations = 1:5000
Thinning interval = 1
Chains = 1
Samples per chain = 5000

Empirical Posterior Estimates:
      Mean        SD       Naive SE      MCSE       ESS   
b0 0.63272584 0.93606479 0.013237955 0.081599599 131.59390
b1 0.78761628 0.28902543 0.004087437 0.022846710 160.03862
s2 1.07396724 1.60963311 0.022763650 0.096229577 279.79287

Quantiles:
       2.5%       25.0%      50.0%     75.0%     97.5%  
b0 -1.42276867 0.09555760 0.64058736 1.1567408 2.6027365
b1  0.17034388 0.62081826 0.78876745 0.9500967 1.3801843
s2  0.17044047 0.35041045 0.58576505 1.1345926 5.1046853

Iterations = 1:5000
Thinning interval = 1
Chains = 1
Samples per chain = 5000

Empirical Posterior Estimates:
      Mean        SD       Naive SE      MCSE       ESS   
b0 0.59661489 0.86078729 0.012173371 0.068947243 155.86833
b1 0.79924975 0.27636461 0.003908386 0.020495292 181.82626
s2 1.08076089 1.56013009 0.022063571 0.077758779 402.55272

Quantiles:
       2.5%       25.0%       50.0%     75.0%     97.5%  
b0 -1.39487697 0.102185728 0.61013780 1.1271580 2.2617415
b1  0.27293503 0.634673470 0.79717410 0.9534172 1.4070905
s2  0.15919854 0.369553514 0.62171038 1.1910221 4.9682933


>>> Testing ../doc/mcmc/newunivardist.jl

MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:00:37 of 0:00:37 remaining]
Chain 1:  10% [0:00:10 of 0:00:11 remaining]
Chain 1:  20% [0:00:06 of 0:00:08 remaining]
Chain 1:  30% [0:00:04 of 0:00:06 remaining]
Chain 1:  40% [0:00:04 of 0:00:06 remaining]
Chain 1:  50% [0:00:03 of 0:00:07 remaining]
Chain 1:  60% [0:00:02 of 0:00:06 remaining]
Chain 1:  70% [0:00:02 of 0:00:06 remaining]
Chain 1:  80% [0:00:01 of 0:00:06 remaining]
Chain 1:  90% [0:00:01 of 0:00:05 remaining]
Chain 1: 100% [0:00:00 of 0:00:05 remaining]

Chain 2:   0% [0:00:18 of 0:00:18 remaining]
Chain 2:  10% [0:00:12 of 0:00:14 remaining]
Chain 2:  20% [0:00:09 of 0:00:12 remaining]
Chain 2:  30% [0:00:08 of 0:00:11 remaining]
Chain 2:  40% [0:00:07 of 0:00:11 remaining]
Chain 2:  50% [0:00:06 of 0:00:12 remaining]
Chain 2:  60% [0:00:05 of 0:00:12 remaining]
Chain 2:  70% [0:00:03 of 0:00:12 remaining]
Chain 2:  80% [0:00:02 of 0:00:12 remaining]
Chain 2:  90% [0:00:01 of 0:00:12 remaining]
Chain 2: 100% [0:00:00 of 0:00:12 remaining]

Chain 3:   0% [0:00:04 of 0:00:04 remaining]
Chain 3:  10% [0:00:13 of 0:00:14 remaining]
Chain 3:  20% [0:00:10 of 0:00:12 remaining]
Chain 3:  30% [0:00:08 of 0:00:12 remaining]
Chain 3:  40% [0:00:07 of 0:00:11 remaining]
Chain 3:  50% [0:00:06 of 0:00:11 remaining]
Chain 3:  60% [0:00:04 of 0:00:11 remaining]
Chain 3:  70% [0:00:03 of 0:00:11 remaining]
Chain 3:  80% [0:00:02 of 0:00:11 remaining]
Chain 3:  90% [0:00:01 of 0:00:12 remaining]
Chain 3: 100% [0:00:00 of 0:00:12 remaining]

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Empirical Posterior Estimates:
           Mean       SD      Naive SE       MCSE        ESS   
     s2 1.4391581 2.7116261 0.0224223883 0.110283338  604.56056
beta[1] 0.5926388 1.2290921 0.0101633410 0.028568244 1850.98026
beta[2] 0.8019841 0.3697383 0.0030573595 0.007819065 2236.03855

Quantiles:
            2.5%        25.0%       50.0%      75.0%     97.5%  
     s2  0.17134578  0.391239178 0.67454380 1.31148623 8.8260863
beta[1] -1.69005867 -0.017397313 0.54837832 1.18906628 3.1371909
beta[2]  0.08289621  0.619513158 0.81436501 0.98220618 1.4848042


>>> Testing ../doc/mcmc/newmultivardist.jl

Warning: replacing module Testing
MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:00:48 of 0:00:48 remaining]
Chain 1:  10% [0:00:07 of 0:00:08 remaining]
Chain 1:  20% [0:00:06 of 0:00:08 remaining]
Chain 1:  30% [0:00:06 of 0:00:08 remaining]
Chain 1:  40% [0:00:05 of 0:00:08 remaining]
Chain 1:  50% [0:00:04 of 0:00:09 remaining]
Chain 1:  60% [0:00:04 of 0:00:09 remaining]
Chain 1:  70% [0:00:03 of 0:00:10 remaining]
Chain 1:  80% [0:00:02 of 0:00:09 remaining]
Chain 1:  90% [0:00:01 of 0:00:09 remaining]
Chain 1: 100% [0:00:00 of 0:00:09 remaining]

Chain 2:   0% [0:00:08 of 0:00:08 remaining]
Chain 2:  10% [0:00:09 of 0:00:10 remaining]
Chain 2:  20% [0:00:08 of 0:00:10 remaining]
Chain 2:  30% [0:00:07 of 0:00:10 remaining]
Chain 2:  40% [0:00:06 of 0:00:09 remaining]
Chain 2:  50% [0:00:05 of 0:00:10 remaining]
Chain 2:  60% [0:00:04 of 0:00:10 remaining]
Chain 2:  70% [0:00:03 of 0:00:10 remaining]
Chain 2:  80% [0:00:02 of 0:00:09 remaining]
Chain 2:  90% [0:00:01 of 0:00:10 remaining]
Chain 2: 100% [0:00:00 of 0:00:10 remaining]

Chain 3:   0% [0:00:08 of 0:00:08 remaining]
Chain 3:  10% [0:00:08 of 0:00:08 remaining]
Chain 3:  20% [0:00:07 of 0:00:09 remaining]
Chain 3:  30% [0:00:07 of 0:00:09 remaining]
Chain 3:  40% [0:00:06 of 0:00:10 remaining]
Chain 3:  50% [0:00:05 of 0:00:10 remaining]
Chain 3:  60% [0:00:04 of 0:00:10 remaining]
Chain 3:  70% [0:00:03 of 0:00:11 remaining]
Chain 3:  80% [0:00:02 of 0:00:11 remaining]
Chain 3:  90% [0:00:01 of 0:00:11 remaining]
Chain 3: 100% [0:00:00 of 0:00:11 remaining]

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Empirical Posterior Estimates:
           Mean       SD       Naive SE       MCSE       ESS   
     s2 1.1773318 1.56704163 0.0129578395 0.050005813  982.0195
beta[1] 0.6023956 1.13970966 0.0094242390 0.017324317 4327.8901
beta[2] 0.7984642 0.34165943 0.0028251758 0.004818679 5027.2542

Quantiles:
            2.5%        25.0%       50.0%      75.0%     97.5%  
     s2  0.169889704 0.386328390 0.67325453 1.30473078 5.5080069
beta[1] -1.674663091 0.011633255 0.60223415 1.17460469 2.9327915
beta[2]  0.103465625 0.621951781 0.79827628 0.97416304 1.4939507

INFO: Mamba tests passed
INFO: No packages to install, update or remove

>>> End of log
