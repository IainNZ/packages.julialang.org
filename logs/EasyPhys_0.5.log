>>> 'Pkg.add("EasyPhys")' log
INFO: Cloning cache of EasyPhys from https://github.com/julian-wolf/EasyPhys.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.5.1
INFO: Installing Colors v0.7.3
INFO: Installing Conda v0.5.3
INFO: Installing DataArrays v0.4.1
INFO: Installing DataFrames v0.9.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Distributions v0.13.0
INFO: Installing EasyPhys v0.2.0
INFO: Installing FileIO v0.4.1
INFO: Installing FixedPointNumbers v0.3.8
INFO: Installing GZip v0.3.0
INFO: Installing LaTeXStrings v0.2.1
INFO: Installing LsqFit v0.3.0
INFO: Installing MacroTools v0.3.7
INFO: Installing NLSolversBase v2.1.3
INFO: Installing OptimBase v0.1.0
INFO: Installing PDMats v0.7.0
INFO: Installing PyCall v1.13.0
INFO: Installing PyPlot v2.3.2
INFO: Installing QuadGK v0.1.2
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.7
INFO: Installing SHA v0.3.3
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.16.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building Rmath
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.13.0          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of EasyPhys
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EasyPhys")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1022.62890625 MB free)
Uptime: 31070.0 sec
Load Avg:  1.05615234375  1.02197265625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1910273 s       5496 s     157164 s     672832 s         14 s
#2  3498 MHz     784898 s        749 s      78348 s    2156259 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - EasyPhys                      0.2.0
 - JSON                          0.12.0
30 additional packages:
 - BinDeps                       0.6.0
 - Calculus                      0.2.2
 - ColorTypes                    0.5.1
 - Colors                        0.7.3
 - Compat                        0.26.0
 - Conda                         0.5.3
 - DataArrays                    0.4.1
 - DataFrames                    0.9.1
 - DataStructures                0.5.3
 - Distributions                 0.13.0
 - FileIO                        0.4.1
 - FixedPointNumbers             0.3.8
 - GZip                          0.3.0
 - LaTeXStrings                  0.2.1
 - LsqFit                        0.3.0
 - MacroTools                    0.3.7
 - NLSolversBase                 2.1.3
 - OptimBase                     0.1.0
 - PDMats                        0.7.0
 - PyCall                        1.13.0
 - PyPlot                        2.3.2
 - QuadGK                        0.1.2
 - Reexport                      0.0.3
 - Rmath                         0.1.7
 - SHA                           0.3.3
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.16.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
INFO: Testing EasyPhys
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: No working GUI backend found for matplotlib
WARNING: Method definition describe(AbstractArray) in module StatsBase at /home/vagrant/.julia/v0.5/StatsBase/src/scalarstats.jl:560 overwritten in module DataFrames at /home/vagrant/.julia/v0.5/DataFrames/src/abstractdataframe/abstractdataframe.jl:407.
WARNING: No working GUI backend found for matplotlib
Running tests:
Running tests on utilities.jl...
Any[(:test,:somearg)]
Any[(:test,:someotherarg)]
Test Summary: | Pass  Total
  utilities.jl |  253    253
Running tests on fitter.jl...
EasyPhys.Fitter with the following settings:

	xlabel          => "x"
	eyvar           => :y_err
	yscale          => "linear"
	fpoints         => 1000
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	ylabel          => "f(x)"
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_curve      => true
	error_range     => 0.68
	xmax            => nothing
	plot_guess      => true
	xscale          => "linear"
	yvar            => :y
	autoplot        => false
	xmin            => nothing
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	xvar            => :x

Guesses:

	a               = 1.0
	b               = 1.0

Fit results not yet present.
EasyPhys.Fitter with the following settings:

	xlabel          => "x"
	eyvar           => :y_err
	yscale          => "linear"
	fpoints         => 1000
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	ylabel          => "f(x)"
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_curve      => true
	error_range     => 0.68
	xmax            => 90
	plot_guess      => true
	xscale          => "linear"
	yvar            => :y
	autoplot        => false
	xmin            => nothing
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	xvar            => :x

Guesses (χ² = 758641.4508537834):

	a               = 81.81
	b               = 1.0

Best-fit parameters (χ² = 0.7848181777220457):

	a               = 81.00036058093498 ± 0.000466406278092691
	b               = 10.998163814676053 ± 0.00014662150899821534

[9.88248e-7 9.71584e-8; 9.71584e-8 9.76635e-8]"\n\n"EasyPhys.Fitter with the following settings:

	xlabel          => "x"
	eyvar           => :y_err
	yscale          => "linear"
	fpoints         => 1000
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	ylabel          => "f(x)"
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_curve      => true
	error_range     => 0.68
	xmax            => nothing
	plot_guess      => true
	xscale          => "linear"
	yvar            => :y
	autoplot        => false
	xmin            => nothing
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	xvar            => :x

Constants:

	a               = 1.0

Guesses (χ² = 313.1018758040925):

	b               = 2.0

Best-fit parameters (χ² = 1.1079320252714016):

	b               = 1.975378252667694 ± 0.0008279695226425944

WARNING: a is a fixed parameter. Its value can be set using `fix!`, or it can be freed using `free!`
EasyPhys.Fitter with the following settings:

	xlabel          => "x"
	eyvar           => :y_err
	yscale          => "linear"
	fpoints         => 1000
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	ylabel          => "f(x)"
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_curve      => true
	error_range     => 0.68
	xmax            => nothing
	plot_guess      => true
	xscale          => "linear"
	yvar            => :y
	autoplot        => false
	xmin            => nothing
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	xvar            => :x

Constants:

	b               = 1.0

Guesses (χ² = 313.1018758040925):

	a               = 2.0

Best-fit parameters (χ² = 36.104639182112216):

	a               = 0.7082519624285147 ± 0.00020064870480102851

EasyPhys.Fitter with the following settings:

	xlabel          => "x"
	eyvar           => :y_err
	yscale          => "linear"
	fpoints         => 1000
	style_guess     => Dict(:color=>"k",:ls=>"--",:marker=>"")
	ylabel          => "f(x)"
	style_data      => Dict(:color=>"b",:ls=>"",:marker=>"+")
	plot_curve      => true
	error_range     => 0.68
	xmax            => nothing
	plot_guess      => true
	xscale          => "linear"
	yvar            => :y
	autoplot        => false
	xmin            => nothing
	style_fit       => Dict(:color=>"r",:ls=>"-",:marker=>"")
	style_outliers  => Dict(:color=>"0.5",:ls=>"",:marker=>"+")
	xvar            => :x

Guesses (χ² = 316.29679290413424):

	a               = 2.0
	b               = 1.0

Best-fit parameters (χ² = 1.084715398185706):

	a               = 1.0136375201824894 ± 0.0003493849942267816
	b               = 2.0016908553577566 ± 0.0010759327961091141

Test Summary: | Pass  Total
  fitter.jl   |  102    102
Running tests on plot.jl...
WARNING: Fit must converge before residuals can be accessed.
WARNING: Fit must converge before residuals can be accessed.
Test Summary: | Pass  Total
  plot.jl     |    3      3
INFO: EasyPhys tests passed

>>> End of log
