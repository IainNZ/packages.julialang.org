>>> 'Pkg.add("LLVM")' log
[ Info: Cloning cache of LLVM from https://github.com/maleadt/LLVM.jl.git
[ Info: Installing LLVM v0.9.5
[ Info: Building LLVM
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of LLVM
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLVM")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2916944 s       6062 s     157476 s     801111 s         36 s
       #2  3500 MHz     672211 s        121 s      65018 s    3723560 s          2 s
       
  Memory: 2.93927001953125 GB (654.78515625 MB free)
  Uptime: 45337.0 sec
  Load Avg:  0.91064453125  0.9501953125  1.0107421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - LLVM                          0.9.5
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing LLVM
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = parse(::Type{LLVM.Module}, ::String, ::Context) at ir.jl:4
└ @ LLVM ir.jl:4
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = macro expansion at buffer.jl:3 [inlined]
└ @ Core buffer.jl:3
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = macro expansion at bitcode.jl:4 [inlined]
└ @ Core bitcode.jl:4
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#946(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1177
└ @ Base deprecated.jl:1177
WARNING: Documenter.jl not installed, skipping documentation tests.
Test Summary: | Pass  Total
LLVM          |  421    421
[ Info: LLVM tests passed

>>> End of log
