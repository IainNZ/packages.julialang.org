>>> 'Pkg.add("LLVM")' log
[ Info: Cloning cache of LLVM from https://github.com/maleadt/LLVM.jl.git
[ Info: Installing LLVM v0.9.5
[ Info: Building LLVM
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of LLVM
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLVM")' log
Julia Version 0.7.0-DEV.3583
Commit 7d3991f784 (2018-01-26 19:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3096391 s       7636 s     157333 s     816951 s         39 s
       #2  3500 MHz     709051 s        192 s      70073 s    3918356 s          1 s
       
  Memory: 2.93927001953125 GB (707.3359375 MB free)
  Uptime: 47777.0 sec
  Load Avg:  0.9970703125  0.9853515625  1.029296875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - LLVM                          0.9.5
2 additional packages:
 - Compat                        0.49.0
 - Nullables                     0.0.3
[ Info: Testing LLVM
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
type: Error During Test at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:125
  Test threw an exception of type MethodError
  Expression: last(elem_it) == elem[end]
  MethodError: no method matching lastindex(::LLVM.StructTypeElementSet)
  Closest candidates are:
    lastindex(!Matched::Base.Markdown.MD) at markdown/parse/parse.jl:26
    lastindex(!Matched::Base64.Buffer) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Base64/src/buffer.jl:19
    lastindex(!Matched::Cmd) at process.jl:824
    ...
  Stacktrace:
   [1] last(::LLVM.StructTypeElementSet) at ./abstractarray.jl:232
   [2] (::getfield(, Symbol("##8#64")))(::Context) at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:125
   [3] Context(::getfield(, Symbol("##8#64"))) at /home/vagrant/.julia/v0.7/LLVM/src/core/context.jl:21
   [4] macro expansion at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:111 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [6] macro expansion at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:22 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [8] top-level scope at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:3
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = parse(::Type{LLVM.Module}, ::String, ::Context) at ir.jl:4
└ @ LLVM ir.jl:4
instructions: Error During Test at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:844
  Test threw an exception of type MethodError
  Expression: last(succ) == bb3
  MethodError: no method matching lastindex(::LLVM.TerminatorSuccessorSet)
  Closest candidates are:
    lastindex(!Matched::Base.Markdown.MD) at markdown/parse/parse.jl:26
    lastindex(!Matched::Base64.Buffer) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Base64/src/buffer.jl:19
    lastindex(!Matched::Cmd) at process.jl:824
    ...
  Stacktrace:
   [1] last(::LLVM.TerminatorSuccessorSet) at ./abstractarray.jl:232
   [2] (::getfield(, Symbol("##56#112")){Builder,Context})(::LLVM.Module) at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:844
   [3] LLVM.Module(::getfield(, Symbol("##56#112")){Builder,Context}, ::String, ::Context) at /home/vagrant/.julia/v0.7/LLVM/src/core/module.jl:27
   [4] #55 at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:809 [inlined]
   [5] Builder(::getfield(, Symbol("##55#111")){Context}, ::Context) at /home/vagrant/.julia/v0.7/LLVM/src/irbuilder.jl:21
   [6] #54 at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:808 [inlined]
   [7] Context(::getfield(, Symbol("##54#110"))) at /home/vagrant/.julia/v0.7/LLVM/src/core/context.jl:21
   [8] macro expansion at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:807 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] macro expansion at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:807 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [12] top-level scope at /home/vagrant/.julia/v0.7/LLVM/test/core.jl:3
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = macro expansion at buffer.jl:3 [inlined]
└ @ Core buffer.jl:3
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = macro expansion at bitcode.jl:4 [inlined]
└ @ Core bitcode.jl:4
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#895(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:1088
└ @ Base deprecated.jl:1088
WARNING: Documenter.jl not installed, skipping documentation tests.
Test Summary:    | Pass  Error  Total
LLVM             |  419      2    421
  types          |    5             5
  pass registry  |              No tests
  core           |  240      2    242
    context      |              No tests
    type         |   45      1     46
    value        |   66            66
    metadata     |    5             5
    module       |   39            39
    function     |   36            36
    basic blocks |   17            17
    instructions |   32      1     33
  linker         |    2             2
  irbuilder      |   80            80
  buffer         |    5             5
  bitcode        |    4             4
  ir             |    3             3
  analysis       |    2             2
  moduleprovider |              No tests
  passmanager    |    4             4
  pass           |    3             3
  execution      |   24            24
  transform      |              No tests
  target         |   10            10
  targetmachine  |    6             6
  datalayout     |   12            12
  Kaleidoscope   |    3             3
  examples       |    3             3
  interop        |   13            13
ERROR: LoadError: Some tests did not pass: 419 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/LLVM/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for LLVM
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LLVM/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: LLVM had test errors

>>> End of log
