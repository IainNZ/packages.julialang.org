>>> 'Pkg.add("Compat")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: No packages to install, update or remove
[ Info: Package database updated

>>> 'Pkg.test("Compat")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4959
Commit 509d6a1a88 (2018-04-27 21:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3495 MHz    2379624 s       7497 s     194474 s     832054 s         18 s
       #2  3495 MHz     555676 s       2095 s      79829 s    3263638 s          1 s
       
  Memory: 2.939197540283203 GB (740.65234375 MB free)
  Uptime: 39691.0 sec
  Load Avg:  1.0029296875  0.9853515625  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Compat                        0.64.0
 - JSON                          0.17.2
1 additional packages:
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for Compat...
[ Info: Installing OffsetArrays v0.5.0
[ Info: Testing Compat
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Warning: `f17302(x::(Base.AbstractArray){T}) where T <: Real` is deprecated, use `f17302.(x)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:211
└ @ Main runtests.jl:211
┌ Warning: `f17302(x::Real, y::(Base.AbstractArray){T1}) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:212
└ @ Main runtests.jl:212
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::Real) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:213
└ @ Main runtests.jl:213
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::(Base.AbstractArray){T2}) where {T1 <: Real, T2 <: Real}` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:214
└ @ Main runtests.jl:214
┌ Warning: `hex(n)` is deprecated, use `string(n, base=16)` instead.
│   caller = (::getfield(Base, Symbol("##62#63")){typeof(uppercase),typeof(hex)})(::Int64, ::Vararg{Int64,N} where N) at operators.jl:793
└ @ Base operators.jl:793
┌ Warning: `isupper` is deprecated, use `isuppercase` instead.
│   caller = #64 at operators.jl:814 [inlined]
└ @ Core operators.jl:814
┌ Warning: `islower` is deprecated, use `islowercase` instead.
│   caller = #64 at operators.jl:814 [inlined]
└ @ Core operators.jl:814
┌ Warning: the behavior of `A[I...] .= X` with scalar indices will change in the future. Use `A[I...] = X` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isbits(#= deprecated.jl:1621 =# @nospecialize(t::Type))` is deprecated, use `isbitstype(t)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `cov(X::AbstractMatrix, dim::Int; kwargs...)` is deprecated, use `cov(X; kwargs..., dims=dim)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `CartesianIndices(inds::Vararg{AbstractUnitRange{Int}, N}) where N` is deprecated, use `CartesianIndices(inds)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `LinearIndices(inds::Vararg{AbstractUnitRange{Int}, N}) where N` is deprecated, use `LinearIndices(inds)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Compat tests passed
[ Info: Removing OffsetArrays v0.5.0

>>> End of log
