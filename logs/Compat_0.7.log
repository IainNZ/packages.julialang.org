>>> 'Pkg.add("Compat")' log
[ Info: No packages to install, update or remove
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Compat
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Compat")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    1984304 s       7869 s     111994 s     774316 s         16 s
       #2  3500 MHz     475899 s         48 s      53194 s    2753921 s          0 s
       
  Memory: 2.93927001953125 GB (1068.6171875 MB free)
  Uptime: 33351.0 sec
  Load Avg:  0.94091796875  0.970703125  0.951171875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Compat                        0.49.0
 - JSON                          0.16.4
1 additional packages:
 - Nullables                     0.0.3
[ Info: Computing test dependencies for Compat...
[ Info: Installing OffsetArrays v0.4.2
[ Info: Testing Compat
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Warning: `f17302(x::(Base.AbstractArray){T}) where T <: Real` is deprecated, use `f17302.(x)` instead.
│   caller = (::getfield(, Symbol("##26#28")))() at runtests.jl:211
└ @ Main runtests.jl:211
┌ Warning: `f17302(x::Real, y::(Base.AbstractArray){T1}) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(, Symbol("##26#28")))() at runtests.jl:212
└ @ Main runtests.jl:212
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::Real) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(, Symbol("##26#28")))() at runtests.jl:213
└ @ Main runtests.jl:213
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::(Base.AbstractArray){T2}) where {T1 <: Real, T2 <: Real}` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(, Symbol("##26#28")))() at runtests.jl:214
└ @ Main runtests.jl:214
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = top-level scope at <missing>:321
└ @ Core <missing>:321
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = top-level scope at <missing>:322
└ @ Core <missing>:322
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = top-level scope at runtests.jl:329
└ @ Core runtests.jl:329
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = top-level scope at runtests.jl:330
└ @ Core runtests.jl:330
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: the behavior of `A[I...] .= X` with scalar indices will change in the future. Use `A[I...] = X` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `isabstract` is deprecated, use `isabstracttype` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: The `chomp=true` argument to `readline` is deprecated in favor of `keep=false`.
│   caller = ip:0x0
└ @ Core :-1
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:720
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:721
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:722
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = top-level scope at runtests.jl:774
└ @ Core runtests.jl:774
WARNING: Base.CartesianRange is deprecated, use CartesianIndices instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:774
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.procs into Test23876.
┌ Warning: `gc` is deprecated, use `GC.gc` instead.
│   caller = top-level scope at runtests.jl:1010
└ @ Core runtests.jl:1010
┌ Warning: `gc` is deprecated, use `GC.gc` instead.
│   caller = top-level scope at runtests.jl:1010
└ @ Core runtests.jl:1010
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:1059
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:1060
Error During Test at /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:1076
  Test threw an exception of type MethodError
  Expression: Compat.IteratorSize(v) == Base.HasShape()
  MethodError: no method matching Base.HasShape()
  Stacktrace:
   [1] top-level scope at /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:1076
   [2] include at ./boot.jl:292 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1012
   [4] include(::Module, ::String) at ./sysimg.jl:26
   [5] process_options(::Base.JLOptions) at ./client.jl:334
   [6] _start() at ./client.jl:386
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:1076
┌ Error: ------------------------------------------------------------
│ # Testing failed for Compat
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Compat/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: Removing OffsetArrays v0.4.2
ERROR: Compat had test errors

>>> End of log
