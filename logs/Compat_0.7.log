>>> 'Pkg.add("Compat")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: No packages to install, update or remove
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Compat
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Compat")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5025
Commit 74af87841b (2018-05-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2617658 s       1624 s     195866 s     809727 s         22 s
       #2  3499 MHz     641027 s       4983 s      81450 s    3453838 s          1 s
       
  Memory: 2.939197540283203 GB (777.17578125 MB free)
  Uptime: 42519.0 sec
  Load Avg:  1.015625  1.001953125  0.96533203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Compat                        0.64.0
 - JSON                          0.17.2
1 additional packages:
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for Compat...
[ Info: Installing OffsetArrays v0.5.0
[ Info: Testing Compat
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Warning: `f17302(x::(Base.AbstractArray){T}) where T <: Real` is deprecated, use `f17302.(x)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:211
└ @ Main runtests.jl:211
┌ Warning: `f17302(x::Real, y::(Base.AbstractArray){T1}) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:212
└ @ Main runtests.jl:212
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::Real) where T1 <: Real` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:213
└ @ Main runtests.jl:213
┌ Warning: `f17302(x::(Base.AbstractArray){T1}, y::(Base.AbstractArray){T2}) where {T1 <: Real, T2 <: Real}` is deprecated, use `f17302.(x, y)` instead.
│   caller = (::getfield(Main, Symbol("##28#30")))() at runtests.jl:214
└ @ Main runtests.jl:214
┌ Warning: `hex(n)` is deprecated, use `string(n, base=16)` instead.
│   caller = (::getfield(Base, Symbol("##62#63")){typeof(uppercase),typeof(hex)})(::Int64, ::Vararg{Int64,N} where N) at operators.jl:793
└ @ Base operators.jl:793
┌ Warning: `isupper` is deprecated, use `isuppercase` instead.
│   caller = #64 at operators.jl:814 [inlined]
└ @ Core operators.jl:814
┌ Warning: `islower` is deprecated, use `islowercase` instead.
│   caller = #64 at operators.jl:814 [inlined]
└ @ Core operators.jl:814
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope at runtests.jl:437
└ @ Core runtests.jl:437
┌ Warning: the behavior of `A[I...] .= X` with scalar indices will change in the future. Use `A[I...] = X` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: using `A[I...] = x` to implicitly broadcast `x` across many locations is deprecated. Use `A[I...] .= x` instead.
│   caller = top-level scope at runtests.jl:464
└ @ Core runtests.jl:464
┌ Warning: `isbits(#= deprecated.jl:1644 =# @nospecialize(t::Type))` is deprecated, use `isbitstype(t)` instead.
│   caller = top-level scope
└ @ Core :0
Test Failed at /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:781
  Expression: [a for (a, b) = pairs(IndexCartesian(), A14)] == vec(collect(R))
   Evaluated: CartesianIndex{2}[CartesianIndex(1, 1) CartesianIndex(1, 2); CartesianIndex(2, 1) CartesianIndex(2, 2)] == CartesianIndex{2}[CartesianIndex(1, 1), CartesianIndex(2, 1), CartesianIndex(1, 2), CartesianIndex(2, 2)]
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Compat/test/runtests.jl:781
┌ Error: ------------------------------------------------------------
│ # Testing failed for Compat
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Compat/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing OffsetArrays v0.5.0
ERROR: Compat had test errors

>>> End of log
