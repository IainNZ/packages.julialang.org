>>> 'Pkg.add("DictFiles")' log
INFO: Cloning cache of DictFiles from https://github.com/rened/DictFiles.jl.git
INFO: Cloning cache of FunctionalData from https://github.com/rened/FunctionalData.jl.git
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.2.1
INFO: Installing DictFiles v0.1.0
INFO: Installing FactCheck v0.4.3
INFO: Installing FileIO v0.4.2
INFO: Installing FunctionalData v0.1.2
INFO: Installing HDF5 v0.8.1
INFO: Installing JLD v0.6.11
INFO: Installing LegacyStrings v0.2.2
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DictFiles
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DictFiles")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1775.48046875 MB free)
Uptime: 28626.0 sec
Load Avg:  1.03564453125  1.1005859375  1.072265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1792339 s       5806 s     142394 s     559140 s         57 s
#2  3499 MHz     716727 s         90 s      81933 s    1973939 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DictFiles                     0.1.0
 - JSON                          0.12.0
11 additional packages:
 - BinDeps                       0.6.0
 - Blosc                         0.2.1
 - Compat                        0.26.0
 - FactCheck                     0.4.3
 - FileIO                        0.4.2
 - FunctionalData                0.1.2
 - HDF5                          0.8.1
 - JLD                           0.6.11
 - LegacyStrings                 0.2.2
 - SHA                           0.3.3
 - URIParser                     0.1.8
INFO: Computing test dependencies for DictFiles...
INFO: No packages to install, update or remove
INFO: Testing DictFiles

Running runtests.jl ...
ERROR: LoadError: TypeError: DictFile: in type definition, expected Type{T}, got Base.#RemoteRef
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DictFiles/src/DictFiles.jl, in expression starting on line 45
ERROR: LoadError: Failed to precompile DictFiles to /home/vagrant/.julia/lib/v0.5/DictFiles.ji.
 in compilecache(::String) at ./loading.jl:593
 in require(::Symbol) at ./loading.jl:422
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DictFiles/test/runtests.jl, in expression starting on line 3
==============================[ ERROR: DictFiles ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DictFiles/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: DictFiles had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
