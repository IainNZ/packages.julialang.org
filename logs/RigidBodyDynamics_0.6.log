>>> 'Pkg.add("RigidBodyDynamics")' log
INFO: Cloning cache of LoopThrottle from https://github.com/tkoolen/LoopThrottle.jl.git
INFO: Cloning cache of RigidBodyDynamics from https://github.com/JuliaRobotics/RigidBodyDynamics.jl.git
INFO: Cloning cache of TypeSortedCollections from https://github.com/tkoolen/TypeSortedCollections.jl.git
INFO: Installing DocStringExtensions v0.4.4
INFO: Installing LightXML v0.6.0
INFO: Installing LoopThrottle v0.0.1
INFO: Installing Reexport v0.1.0
INFO: Installing RigidBodyDynamics v0.5.0
INFO: Installing Rotations v0.6.1
INFO: Installing StaticArrays v0.7.0
INFO: Installing TypeSortedCollections v0.4.1
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("RigidBodyDynamics")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (718.87109375 MB free)
Uptime: 46461.0 sec
Load Avg:  1.0703125  1.0205078125  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2657943 s       6845 s     188957 s    1130525 s         34 s
#2  3500 MHz     693932 s         49 s      69492 s    3806673 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - RigidBodyDynamics             0.5.0
9 additional packages:
 - Compat                        0.63.0
 - DocStringExtensions           0.4.4
 - LightXML                      0.6.0
 - LoopThrottle                  0.0.1
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - Rotations                     0.6.1
 - StaticArrays                  0.7.0
 - TypeSortedCollections         0.4.1
INFO: Computing test dependencies for RigidBodyDynamics...
INFO: Installing BenchmarkTools v0.2.5
INFO: Installing BinDeps v0.8.7
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing Conda v0.7.1
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing ForwardDiff v0.7.5
INFO: Installing MacroTools v0.4.0
INFO: Installing NBInclude v1.2.0
INFO: Installing NaNMath v0.3.1
INFO: Installing PyCall v1.15.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing SHA v0.5.7
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing SymPy v0.6.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Testing RigidBodyDynamics
Test Summary: | Pass  Total
graphs        | 5523   5523
Test Summary:      | Pass  Total
custom collections |   14     14
Test Summary: | Pass  Total
frames        |   20     20
Test Summary: | Pass  Total
spatial       |  951    951
Test Summary: | Pass  Total
contact       |  300    300
Test Summary: | Pass  Total
URDF parser   |   12     12
Test Summary:   | Pass  Total
double pendulum |   12     12
Test Summary:        | Pass  Total
mechanism algorithms | 2336   2336
Test Summary: | Pass  Total
simulation    |  506    506
Test Summary:          | Pass  Total
mechanism modification | 1351   1351
Test Summary: | Pass  Total
pd            |  208    208
Testing Four-bar linkage - simulation and visualization.
Testing Quickstart - double pendulum.
Testing Simulation and visualization with a controller in the loop.
Testing Symbolic double pendulum.
WARNING: using SymPy.transform in module Main conflicts with an existing identifier.
WARNING: using SymPy.integrate in module Main conflicts with an existing identifier.
WARNING: using SymPy.root in module Main conflicts with an existing identifier.
Test Summary:     |
example notebooks | No tests
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0100 51541  100 51541    0     0  19673      0  0:00:02  0:00:02 --:--:-- 19672
(1/13) benchmarking "momentum_matrix"...
done (took 3.68150026 seconds)
(2/13) benchmarking "momentum"...
done (took 2.310997309 seconds)
(3/13) benchmarking "inverse_dynamics"...
done (took 2.579555884 seconds)
(4/13) benchmarking "constraint_bias!"...
done (took 2.836986578 seconds)
(5/13) benchmarking "gravitational_potential_energy"...
done (took 1.704581441 seconds)
(6/13) benchmarking "dynamics"...
done (took 4.275047463 seconds)
(7/13) benchmarking "geometric_jacobian"...
done (took 2.558703226 seconds)
(8/13) benchmarking "dynamics_bias"...
done (took 1.921455427 seconds)
(9/13) benchmarking "constraint_jacobian!"...
done (took 2.786524751 seconds)
(10/13) benchmarking "mass_matrix and geometric_jacobian"...
done (took 2.180805792 seconds)
(11/13) benchmarking "momentum_rate_bias"...
done (took 2.409296241 seconds)
(12/13) benchmarking "mass_matrix"...
done (took 2.480885075 seconds)
(13/13) benchmarking "kinetic_energy"...
done (took 1.867879441 seconds)
momentum_matrix:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     18.817 μs (0.00% GC)
  median time:      23.075 μs (0.00% GC)
  mean time:        24.118 μs (0.00% GC)
  maximum time:     838.084 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
momentum:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     334.000 ns (0.00% GC)
  median time:      19.403 μs (0.00% GC)
  mean time:        19.434 μs (0.00% GC)
  maximum time:     316.510 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
inverse_dynamics:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     5.511 μs (0.00% GC)
  median time:      29.709 μs (0.00% GC)
  mean time:        31.300 μs (0.00% GC)
  maximum time:     1.959 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
constraint_bias!:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     13.473 μs (0.00% GC)
  median time:      24.632 μs (0.00% GC)
  mean time:        52.158 μs (0.00% GC)
  maximum time:     231.879 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
gravitational_potential_energy:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     7.065 μs (0.00% GC)
  median time:      7.365 μs (0.00% GC)
  mean time:        7.736 μs (0.00% GC)
  maximum time:     199.654 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
dynamics:
BenchmarkTools.Trial: 
  memory estimate:  64 bytes
  allocs estimate:  3
  --------------
  minimum time:     51.983 μs (0.00% GC)
  median time:      86.367 μs (0.00% GC)
  mean time:        87.155 μs (0.00% GC)
  maximum time:     910.620 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
geometric_jacobian:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     8.107 μs (0.00% GC)
  median time:      8.422 μs (0.00% GC)
  mean time:        10.329 μs (0.00% GC)
  maximum time:     239.143 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
dynamics_bias:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     5.451 μs (0.00% GC)
  median time:      30.214 μs (0.00% GC)
  mean time:        31.360 μs (0.00% GC)
  maximum time:     857.189 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
constraint_jacobian!:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     7.352 μs (0.00% GC)
  median time:      104.650 μs (0.00% GC)
  mean time:        106.504 μs (0.00% GC)
  maximum time:     4.994 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
mass_matrix and geometric_jacobian:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     914.000 ns (0.00% GC)
  median time:      38.638 μs (0.00% GC)
  mean time:        40.377 μs (0.00% GC)
  maximum time:     2.432 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
momentum_rate_bias:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     16.823 μs (0.00% GC)
  median time:      26.654 μs (0.00% GC)
  mean time:        27.724 μs (0.00% GC)
  maximum time:     855.725 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
mass_matrix:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     3.149 μs (0.00% GC)
  median time:      36.993 μs (0.00% GC)
  mean time:        38.465 μs (0.00% GC)
  maximum time:     842.997 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
kinetic_energy:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     11.391 μs (0.00% GC)
  median time:      18.861 μs (0.00% GC)
  mean time:        17.617 μs (0.00% GC)
  maximum time:     270.952 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
Test Summary: | Pass  Total
benchmarks    |    1      1
INFO: RigidBodyDynamics tests passed
INFO: Removing BenchmarkTools v0.2.5
INFO: Removing BinDeps v0.8.7
INFO: Removing CommonSubexpressions v0.1.0
INFO: Removing Conda v0.7.1
INFO: Removing DiffResults v0.0.3
INFO: Removing DiffRules v0.0.4
INFO: Removing ForwardDiff v0.7.5
INFO: Removing MacroTools v0.4.0
INFO: Removing NBInclude v1.2.0
INFO: Removing NaNMath v0.3.1
INFO: Removing PyCall v1.15.0
INFO: Removing RecipesBase v0.2.3
INFO: Removing SHA v0.5.7
INFO: Removing SpecialFunctions v0.4.0
INFO: Removing SymPy v0.6.0
INFO: Removing URIParser v0.3.1

>>> End of log
