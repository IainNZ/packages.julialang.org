>>> 'Pkg.add("RigidBodyDynamics")' log
INFO: Cloning cache of LoopThrottle from https://github.com/tkoolen/LoopThrottle.jl.git
INFO: Cloning cache of RigidBodyDynamics from https://github.com/JuliaRobotics/RigidBodyDynamics.jl.git
INFO: Cloning cache of TypeSortedCollections from https://github.com/tkoolen/TypeSortedCollections.jl.git
INFO: Installing DocStringExtensions v0.4.4
INFO: Installing LightXML v0.6.0
INFO: Installing LoopThrottle v0.0.1
INFO: Installing Reexport v0.1.0
INFO: Installing RigidBodyDynamics v0.6.0
INFO: Installing Rotations v0.6.1
INFO: Installing StaticArrays v0.7.0
INFO: Installing TypeSortedCollections v0.4.1
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("RigidBodyDynamics")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (657.26171875 MB free)
Uptime: 44948.0 sec
Load Avg:  1.00390625  0.98779296875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2504766 s       1362 s     182833 s    1188167 s         38 s
#2  3500 MHz     599216 s       5235 s      70159 s    3737941 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - RigidBodyDynamics             0.6.0
9 additional packages:
 - Compat                        0.64.0
 - DocStringExtensions           0.4.4
 - LightXML                      0.6.0
 - LoopThrottle                  0.0.1
 - Nullables                     0.0.5
 - Reexport                      0.1.0
 - Rotations                     0.6.1
 - StaticArrays                  0.7.0
 - TypeSortedCollections         0.4.1
INFO: Computing test dependencies for RigidBodyDynamics...
INFO: Installing BenchmarkTools v0.2.5
INFO: Installing BinDeps v0.8.8
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing Conda v0.7.1
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing ForwardDiff v0.7.5
INFO: Installing MacroTools v0.4.0
INFO: Installing NBInclude v1.2.0
INFO: Installing NaNMath v0.3.1
INFO: Installing PyCall v1.16.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing SHA v0.5.7
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing SymPy v0.6.0
INFO: Installing URIParser v0.3.1
INFO: Installing VersionParsing v1.1.0
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building PyCall
Info: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

Info: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
Info: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
Info: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Testing RigidBodyDynamics
Test Summary: | Pass  Total
graphs        | 6519   6519
Test Summary:      | Pass  Total
custom collections |   20     20
Test Summary: | Pass  Total
frames        |   20     20
Test Summary: | Pass  Total
spatial       |  951    951
Test Summary: | Pass  Total
contact       |  300    300
Test Summary: | Pass  Total
URDF parser   |   22     22
Test Summary:   | Pass  Total
double pendulum |   12     12
Test Summary: | Pass  Total
StateCache    |    8      8
Test Summary:       | Pass  Total
DynamicsResultCache |    8      8
Test Summary:        | Pass  Total
SegmentedVectorCache |    8      8
Test Summary:        | Pass  Total
mechanism algorithms | 2453   2453
Test Summary: | Pass  Total
simulation    |  506    506
Test Summary:          | Pass  Total
mechanism modification | 1362   1362
Test Summary: | Pass  Total
pd            |  208    208
Test Summary:                               | Pass  Total
Derivatives and gradients using ForwardDiff |    6      6
Test Summary:                                   |
Four-bar linkage - simulation and visualization | No tests
Test Summary:                |
Quickstart - double pendulum | No tests
Test Summary:                                              |
Simulation and visualization with a controller in the loop | No tests
Test Summary:            |
Symbolic double pendulum | No tests
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  3 51541    3  1919    0     0  15343      0  0:00:03 --:--:--  0:00:03 15352100 51541  100 51541    0     0   368k      0 --:--:-- --:--:-- --:--:--  367k
(1/13) benchmarking "momentum_matrix"...
done (took 2.895565786 seconds)
(2/13) benchmarking "momentum"...
done (took 2.318518176 seconds)
(3/13) benchmarking "inverse_dynamics"...
done (took 2.425791455 seconds)
(4/13) benchmarking "constraint_bias!"...
done (took 2.804373009 seconds)
(5/13) benchmarking "gravitational_potential_energy"...
done (took 2.007596132 seconds)
(6/13) benchmarking "dynamics"...
done (took 4.677432099 seconds)
(7/13) benchmarking "geometric_jacobian"...
done (took 1.87519927 seconds)
(8/13) benchmarking "dynamics_bias"...
done (took 2.091188456 seconds)
(9/13) benchmarking "constraint_jacobian!"...
done (took 2.742688174 seconds)
(10/13) benchmarking "mass_matrix and geometric_jacobian"...
done (took 2.011397858 seconds)
(11/13) benchmarking "momentum_rate_bias"...
done (took 2.288762459 seconds)
(12/13) benchmarking "mass_matrix"...
done (took 2.292474956 seconds)
(13/13) benchmarking "kinetic_energy"...
done (took 1.801590154 seconds)
momentum_matrix:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     2.452 μs (0.00% GC)
  median time:      20.979 μs (0.00% GC)
  mean time:        22.502 μs (0.00% GC)
  maximum time:     812.855 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
momentum:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     9.160 μs (0.00% GC)
  median time:      20.039 μs (0.00% GC)
  mean time:        20.560 μs (0.00% GC)
  maximum time:     219.070 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
inverse_dynamics:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     17.032 μs (0.00% GC)
  median time:      17.582 μs (0.00% GC)
  mean time:        20.980 μs (0.00% GC)
  maximum time:     847.199 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
constraint_bias!:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     24.653 μs (0.00% GC)
  median time:      25.025 μs (0.00% GC)
  mean time:        39.290 μs (0.00% GC)
  maximum time:     129.488 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
gravitational_potential_energy:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     510.000 ns (0.00% GC)
  median time:      11.590 μs (0.00% GC)
  mean time:        12.295 μs (0.00% GC)
  maximum time:     220.715 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
dynamics:
BenchmarkTools.Trial: 
  memory estimate:  64 bytes
  allocs estimate:  3
  --------------
  minimum time:     53.120 μs (0.00% GC)
  median time:      80.729 μs (0.00% GC)
  mean time:        83.165 μs (0.00% GC)
  maximum time:     883.307 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
geometric_jacobian:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     8.354 μs (0.00% GC)
  median time:      8.639 μs (0.00% GC)
  mean time:        9.139 μs (0.00% GC)
  maximum time:     204.155 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
dynamics_bias:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     6.456 μs (0.00% GC)
  median time:      30.049 μs (0.00% GC)
  mean time:        30.954 μs (0.00% GC)
  maximum time:     835.264 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
constraint_jacobian!:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     27.642 μs (0.00% GC)
  median time:      89.400 μs (0.00% GC)
  mean time:        82.551 μs (0.00% GC)
  maximum time:     891.194 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
mass_matrix and geometric_jacobian:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     738.000 ns (0.00% GC)
  median time:      22.032 μs (0.00% GC)
  mean time:        26.355 μs (0.00% GC)
  maximum time:     846.542 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
momentum_rate_bias:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     10.041 μs (0.00% GC)
  median time:      24.234 μs (0.00% GC)
  mean time:        25.171 μs (0.00% GC)
  maximum time:     824.753 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
mass_matrix:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     25.381 μs (0.00% GC)
  median time:      37.636 μs (0.00% GC)
  mean time:        39.690 μs (0.00% GC)
  maximum time:     8.586 ms (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
kinetic_energy:
BenchmarkTools.Trial: 
  memory estimate:  0 bytes
  allocs estimate:  0
  --------------
  minimum time:     16.304 μs (0.00% GC)
  median time:      19.519 μs (0.00% GC)
  mean time:        20.241 μs (0.00% GC)
  maximum time:     846.921 μs (0.00% GC)
  --------------
  samples:          10000
  evals/sample:     1
Test Summary: | Pass  Total
benchmarks    |    1      1
INFO: RigidBodyDynamics tests passed
INFO: Removing BenchmarkTools v0.2.5
INFO: Removing BinDeps v0.8.8
INFO: Removing CommonSubexpressions v0.1.0
INFO: Removing Conda v0.7.1
INFO: Removing DiffResults v0.0.3
INFO: Removing DiffRules v0.0.4
INFO: Removing ForwardDiff v0.7.5
INFO: Removing MacroTools v0.4.0
INFO: Removing NBInclude v1.2.0
INFO: Removing NaNMath v0.3.1
INFO: Removing PyCall v1.16.0
INFO: Removing RecipesBase v0.2.3
INFO: Removing SHA v0.5.7
INFO: Removing SpecialFunctions v0.4.0
INFO: Removing SymPy v0.6.0
INFO: Removing URIParser v0.3.1
INFO: Removing VersionParsing v1.1.0

>>> End of log
