>>> 'Pkg.add("Dierckx")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Dierckx from https://github.com/kbarbary/Dierckx.jl.git
[ Info: Installing Dierckx v0.3.0
[ Info: Building Dierckx
ifort -c -fPIC -O3  bispeu.f -o bispeu.o
make: ifort: Command not found
make: *** [bispeu.o] Error 127
gfortran -c -fPIC -O3  bispeu.f -o bispeu.o
gfortran -c -fPIC -O3  bispev.f -o bispev.o
gfortran -c -fPIC -O3  clocur.f -o clocur.o
gfortran -c -fPIC -O3  cocosp.f -o cocosp.o
gfortran -c -fPIC -O3  concon.f -o concon.o
gfortran -c -fPIC -O3  concur.f -o concur.o
gfortran -c -fPIC -O3  cualde.f -o cualde.o
gfortran -c -fPIC -O3  curev.f -o curev.o
gfortran -c -fPIC -O3  curfit.f -o curfit.o
gfortran -c -fPIC -O3  dblint.f -o dblint.o
gfortran -c -fPIC -O3  evapol.f -o evapol.o
gfortran -c -fPIC -O3  fourco.f -o fourco.o
gfortran -c -fPIC -O3  fpader.f -o fpader.o
gfortran -c -fPIC -O3  fpadno.f -o fpadno.o
gfortran -c -fPIC -O3  fpadpo.f -o fpadpo.o
gfortran -c -fPIC -O3  fpback.f -o fpback.o
gfortran -c -fPIC -O3  fpbacp.f -o fpbacp.o
gfortran -c -fPIC -O3  fpbfout.f -o fpbfout.o
gfortran -c -fPIC -O3  fpbisp.f -o fpbisp.o
gfortran -c -fPIC -O3  fpbspl.f -o fpbspl.o
gfortran -c -fPIC -O3  fpchec.f -o fpchec.o
gfortran -c -fPIC -O3  fpched.f -o fpched.o
gfortran -c -fPIC -O3  fpchep.f -o fpchep.o
gfortran -c -fPIC -O3  fpclos.f -o fpclos.o
gfortran -c -fPIC -O3  fpcoco.f -o fpcoco.o
gfortran -c -fPIC -O3  fpcons.f -o fpcons.o
gfortran -c -fPIC -O3  fpcosp.f -o fpcosp.o
gfortran -c -fPIC -O3  fpcsin.f -o fpcsin.o
gfortran -c -fPIC -O3  fpcurf.f -o fpcurf.o
gfortran -c -fPIC -O3  fpcuro.f -o fpcuro.o
gfortran -c -fPIC -O3  fpcyt1.f -o fpcyt1.o
gfortran -c -fPIC -O3  fpcyt2.f -o fpcyt2.o
gfortran -c -fPIC -O3  fpdeno.f -o fpdeno.o
gfortran -c -fPIC -O3  fpdisc.f -o fpdisc.o
gfortran -c -fPIC -O3  fpfrno.f -o fpfrno.o
gfortran -c -fPIC -O3  fpgivs.f -o fpgivs.o
gfortran -c -fPIC -O3  fpgrdi.f -o fpgrdi.o
gfortran -c -fPIC -O3  fpgrpa.f -o fpgrpa.o
gfortran -c -fPIC -O3  fpgrre.f -o fpgrre.o
gfortran -c -fPIC -O3  fpgrsp.f -o fpgrsp.o
gfortran -c -fPIC -O3  fpinst.f -o fpinst.o
gfortran -c -fPIC -O3  fpintb.f -o fpintb.o
gfortran -c -fPIC -O3  fpknot.f -o fpknot.o
gfortran -c -fPIC -O3  fpopdi.f -o fpopdi.o
gfortran -c -fPIC -O3  fpopsp.f -o fpopsp.o
gfortran -c -fPIC -O3  fporde.f -o fporde.o
gfortran -c -fPIC -O3  fppara.f -o fppara.o
gfortran -c -fPIC -O3  fppasu.f -o fppasu.o
gfortran -c -fPIC -O3  fpperi.f -o fpperi.o
gfortran -c -fPIC -O3  fppocu.f -o fppocu.o
gfortran -c -fPIC -O3  fppogr.f -o fppogr.o
gfortran -c -fPIC -O3  fppola.f -o fppola.o
gfortran -c -fPIC -O3  fprank.f -o fprank.o
gfortran -c -fPIC -O3  fprati.f -o fprati.o
gfortran -c -fPIC -O3  fpregr.f -o fpregr.o
gfortran -c -fPIC -O3  fprota.f -o fprota.o
gfortran -c -fPIC -O3  fprppo.f -o fprppo.o
gfortran -c -fPIC -O3  fprpsp.f -o fprpsp.o
gfortran -c -fPIC -O3  fpseno.f -o fpseno.o
gfortran -c -fPIC -O3  fpspgr.f -o fpspgr.o
gfortran -c -fPIC -O3  fpsphe.f -o fpsphe.o
gfortran -c -fPIC -O3  fpsuev.f -o fpsuev.o
gfortran -c -fPIC -O3  fpsurf.f -o fpsurf.o
gfortran -c -fPIC -O3  fpsysy.f -o fpsysy.o
gfortran -c -fPIC -O3  fptrnp.f -o fptrnp.o
gfortran -c -fPIC -O3  fptrpe.f -o fptrpe.o
gfortran -c -fPIC -O3  insert.f -o insert.o
gfortran -c -fPIC -O3  parcur.f -o parcur.o
gfortran -c -fPIC -O3  parder.f -o parder.o
gfortran -c -fPIC -O3  pardeu.f -o pardeu.o
gfortran -c -fPIC -O3  parsur.f -o parsur.o
gfortran -c -fPIC -O3  percur.f -o percur.o
gfortran -c -fPIC -O3  pogrid.f -o pogrid.o
gfortran -c -fPIC -O3  polar.f -o polar.o
gfortran -c -fPIC -O3  profil.f -o profil.o
gfortran -c -fPIC -O3  regrid.f -o regrid.o
gfortran -c -fPIC -O3  spalde.f -o spalde.o
gfortran -c -fPIC -O3  spgrid.f -o spgrid.o
gfortran -c -fPIC -O3  sphere.f -o sphere.o
gfortran -c -fPIC -O3  splder.f -o splder.o
gfortran -c -fPIC -O3  splev.f -o splev.o
gfortran -c -fPIC -O3  splint.f -o splint.o
gfortran -c -fPIC -O3  sproot.f -o sproot.o
gfortran -c -fPIC -O3  surev.f -o surev.o
gfortran -c -fPIC -O3  surfit.f -o surfit.o
gfortran -o libddierckx.so -shared bispeu.o bispev.o clocur.o cocosp.o concon.o concur.o cualde.o curev.o curfit.o dblint.o evapol.o fourco.o fpader.o fpadno.o fpadpo.o fpback.o fpbacp.o fpbfout.o fpbisp.o fpbspl.o fpchec.o fpched.o fpchep.o fpclos.o fpcoco.o fpcons.o fpcosp.o fpcsin.o fpcurf.o fpcuro.o fpcyt1.o fpcyt2.o fpdeno.o fpdisc.o fpfrno.o fpgivs.o fpgrdi.o fpgrpa.o fpgrre.o fpgrsp.o fpinst.o fpintb.o fpknot.o fpopdi.o fpopsp.o fporde.o fppara.o fppasu.o fpperi.o fppocu.o fppogr.o fppola.o fprank.o fprati.o fpregr.o fprota.o fprppo.o fprpsp.o fpseno.o fpspgr.o fpsphe.o fpsuev.o fpsurf.o fpsysy.o fptrnp.o fptrpe.o insert.o parcur.o parder.o pardeu.o parsur.o percur.o pogrid.o polar.o profil.o regrid.o spalde.o spgrid.o sphere.o splder.o splev.o splint.o sproot.o surev.o surfit.o
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Dierckx
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Dierckx")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4941
Commit 9f5351c36a (2018-04-24 14:26 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3494 MHz    3694859 s       6618 s     270693 s    1086600 s         47 s
       #2  3494 MHz     869147 s         92 s     107407 s    4832307 s          3 s
       
  Memory: 2.939197540283203 GB (1474.06640625 MB free)
  Uptime: 59265.0 sec
  Load Avg:  0.9970703125  0.9853515625  0.970703125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Dierckx                       0.3.0
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Dierckx
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:79.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:79
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:409.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:409
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:689.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:689
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:79.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:79
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:409.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:409
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:689.
│ Use `mutable struct` instead.
└ @ nothing Dierckx.jl:689
WARNING: importing deprecated binding Base.Void into Dierckx.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:120
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:120
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:194
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:194
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:265
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:283
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:309
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:327
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:378
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:462
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:462
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:462
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:462
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:734
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:734
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:853
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:926
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:956
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:979
WARNING: importing deprecated binding Base.Libdl into Dierckx.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:1046
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/Dierckx/src/Dierckx.jl:1046
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:4
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:144
└ @ Dierckx Dierckx.jl:144
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:145
└ @ Dierckx Dierckx.jl:145
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:156
└ @ Dierckx Dierckx.jl:156
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:157
└ @ Dierckx Dierckx.jl:157
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Type at Dierckx.jl:89 [inlined]
└ @ Core Dierckx.jl:89
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _evaluate(::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Array{Float64,1}, ::Int64) at Dierckx.jl:270
└ @ Dierckx Dierckx.jl:270
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:144
└ @ Dierckx Dierckx.jl:144
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:145
└ @ Dierckx Dierckx.jl:145
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:156
└ @ Dierckx Dierckx.jl:156
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:157
└ @ Dierckx Dierckx.jl:157
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Type at Dierckx.jl:89 [inlined]
└ @ Core Dierckx.jl:89
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#2(::Array{Float64,1}, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:215
└ @ Dierckx Dierckx.jl:215
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#2(::Array{Float64,1}, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:219
└ @ Dierckx Dierckx.jl:219
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#2(::Array{Float64,1}, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:230
└ @ Dierckx Dierckx.jl:230
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#2(::Array{Float64,1}, ::Int64, ::String, ::Bool, ::Any, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:231
└ @ Dierckx Dierckx.jl:231
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Type at Dierckx.jl:89 [inlined]
└ @ Core Dierckx.jl:89
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,1}) at Dierckx.jl:144
└ @ Dierckx Dierckx.jl:144
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,1}) at Dierckx.jl:145
└ @ Dierckx Dierckx.jl:145
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,1}) at Dierckx.jl:156
└ @ Dierckx Dierckx.jl:156
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline1D#1(::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool, ::Any, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,1}) at Dierckx.jl:157
└ @ Dierckx Dierckx.jl:157
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Type at Dierckx.jl:89 [inlined]
└ @ Core Dierckx.jl:89
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _derivative(::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Array{Float64,1}, ::Int64, ::Int64, ::Array{Float64,1}) at Dierckx.jl:314
└ @ Dierckx Dierckx.jl:314
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #roots#4(::Int64, ::Function, ::Spline1D) at Dierckx.jl:383
└ @ Dierckx Dierckx.jl:383
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #roots#4(::Int64, ::Function, ::Spline1D) at Dierckx.jl:384
└ @ Dierckx Dierckx.jl:384
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #roots#4(::Int64, ::Function, ::Spline1D) at Dierckx.jl:385
└ @ Dierckx Dierckx.jl:385
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Array{Float64,1}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool) at Dierckx.jl:506
└ @ Dierckx Dierckx.jl:506
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Array{Float64,1}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool) at Dierckx.jl:512
└ @ Dierckx Dierckx.jl:512
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Array{Float64,1}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool) at Dierckx.jl:522
└ @ Dierckx Dierckx.jl:522
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Array{Float64,1}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Int64, ::String, ::Bool) at Dierckx.jl:523
└ @ Dierckx Dierckx.jl:523
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = ParametricSpline(::Array{Float64,1}, ::Array{Float64,2}, ::Int64, ::Int64, ::Any) at Dierckx.jl:418
└ @ Dierckx Dierckx.jl:418
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Nothing, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:485
└ @ Dierckx Dierckx.jl:485
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Nothing, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:506
└ @ Dierckx Dierckx.jl:506
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Nothing, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:512
└ @ Dierckx Dierckx.jl:512
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Nothing, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:522
└ @ Dierckx Dierckx.jl:522
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::Nothing, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:523
└ @ Dierckx Dierckx.jl:523
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:506
└ @ Dierckx Dierckx.jl:506
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:512
└ @ Dierckx Dierckx.jl:512
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:522
└ @ Dierckx Dierckx.jl:522
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Nothing, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:523
└ @ Dierckx Dierckx.jl:523
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:497
└ @ Dierckx Dierckx.jl:497
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:512
└ @ Dierckx Dierckx.jl:512
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:522
└ @ Dierckx Dierckx.jl:522
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = _ParametricSpline(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Float64, ::String, ::Bool) at Dierckx.jl:523
└ @ Dierckx Dierckx.jl:523
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:763
└ @ Dierckx Dierckx.jl:763
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:765
└ @ Dierckx Dierckx.jl:765
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:766
└ @ Dierckx Dierckx.jl:766
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:775
└ @ Dierckx Dierckx.jl:775
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:776
└ @ Dierckx Dierckx.jl:776
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:777
└ @ Dierckx Dierckx.jl:777
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = evaluate(::Spline2D, ::Float64, ::Float64) at Dierckx.jl:959
└ @ Dierckx Dierckx.jl:959
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = evalgrid(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:987
└ @ Dierckx Dierckx.jl:987
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = evalgrid(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:989
└ @ Dierckx Dierckx.jl:989
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(undef, m, n)` instead.
│   caller = evalgrid(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:991
└ @ Dierckx Dierckx.jl:991
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:763
└ @ Dierckx Dierckx.jl:763
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:765
└ @ Dierckx Dierckx.jl:765
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:766
└ @ Dierckx Dierckx.jl:766
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:775
└ @ Dierckx Dierckx.jl:775
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:776
└ @ Dierckx Dierckx.jl:776
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Int64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at Dierckx.jl:777
└ @ Dierckx Dierckx.jl:777
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:200
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:763
└ @ Dierckx Dierckx.jl:763
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:765
└ @ Dierckx Dierckx.jl:765
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:766
└ @ Dierckx Dierckx.jl:766
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:775
└ @ Dierckx Dierckx.jl:775
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:776
└ @ Dierckx Dierckx.jl:776
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#22(::Array{Float64,1}, ::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:777
└ @ Dierckx Dierckx.jl:777
┌ Warning: `assert` is deprecated, use `@assert` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:857
└ @ Dierckx Dierckx.jl:857
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:877
└ @ Dierckx Dierckx.jl:877
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:879
└ @ Dierckx Dierckx.jl:879
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:880
└ @ Dierckx Dierckx.jl:880
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:889
└ @ Dierckx Dierckx.jl:889
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at Dierckx.jl:891
└ @ Dierckx Dierckx.jl:891
┌ Warning: `assert` is deprecated, use `@assert` instead.
│   caller = evaluate(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:928
└ @ Dierckx Dierckx.jl:928
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = evaluate(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:935
└ @ Dierckx Dierckx.jl:935
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = evaluate(::Spline2D, ::Array{Float64,1}, ::Array{Float64,1}) at Dierckx.jl:936
└ @ Dierckx Dierckx.jl:936
┌ Warning: Deprecated syntax `implicit assignment to global variable `spl``.
│ Use `global spl` instead.
└ @ nothing none:0
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:248
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:248
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:248
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/Dierckx/test/runtests.jl:248
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope at <missing>:255
└ @ Core <missing>:255
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = top-level scope at <missing>:256
└ @ Core <missing>:256
┌ Warning: `assert` is deprecated, use `@assert` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:857
└ @ Dierckx Dierckx.jl:857
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:877
└ @ Dierckx Dierckx.jl:877
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:879
└ @ Dierckx Dierckx.jl:879
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:880
└ @ Dierckx Dierckx.jl:880
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:889
└ @ Dierckx Dierckx.jl:889
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Spline2D#23(::Int64, ::Int64, ::Float64, ::Type, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}, ::Array{Float64,2}) at Dierckx.jl:891
└ @ Dierckx Dierckx.jl:891
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = integrate(::Spline2D, ::Float64, ::Float64, ::Float64, ::Float64) at Dierckx.jl:1022
└ @ Dierckx Dierckx.jl:1022
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = integrate(::Spline2D, ::Float64, ::Irrational{:π}, ::Float64, ::Irrational{:π}) at Dierckx.jl:1022
└ @ Dierckx Dierckx.jl:1022
All tests passed.
[ Info: Dierckx tests passed

>>> End of log
