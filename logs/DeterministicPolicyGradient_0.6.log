>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.2.0
INFO: Installing Missings v0.2.9
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2110.48046875 MB free)
Uptime: 66204.0 sec
Load Avg:  1.060546875  1.001953125  0.96240234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz    3988195 s        127 s     282401 s    1456030 s         54 s
#2  3510 MHz    1215801 s       7889 s     131723 s    5131983 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.2.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.21333 norm ∇Θ: 190.44776 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.92462 norm ∇Θ: 329.97463 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.61323 norm ∇Θ: 313.61222 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.19539 norm ∇Θ: 316.1781 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.0429 norm ∇Θ: 388.483 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.08788 norm ∇Θ: 405.19166 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.48258 norm ∇Θ: 372.82858 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.89598 norm ∇Θ: 394.73463 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.1736 norm ∇Θ: 374.17116 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.60728 norm ∇Θ: 429.32644 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 18.07024 norm ∇Θ: 446.49204 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.31816 norm ∇Θ: 436.45122 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 17.01552 norm ∇Θ: 468.71315 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 16.62276 norm ∇Θ: 524.16817 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.947 norm ∇Θ: 509.13187 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 15.2764 norm ∇Θ: 480.09676 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.77921 norm ∇Θ: 447.01522 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.23823 norm ∇Θ: 500.00938 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.79946 norm ∇Θ: 512.24885 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.12345 norm ∇Θ: 527.87531 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.67825 norm ∇Θ: 505.29258 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.31315 norm ∇Θ: 528.72036 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.99514 norm ∇Θ: 512.43698 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.61922 norm ∇Θ: 464.33913 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.38099 norm ∇Θ: 511.20444 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.03097 norm ∇Θ: 513.03188 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.7241 norm ∇Θ: 534.33356 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.47281 norm ∇Θ: 349.94153 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.23976 norm ∇Θ: 430.81072 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.97236 norm ∇Θ: 463.36757 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.71741 norm ∇Θ: 466.09178 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.65814 norm ∇Θ: 312.07356 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.50311 norm ∇Θ: 390.13465 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.30376 norm ∇Θ: 452.07995 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.10871 norm ∇Θ: 366.96781 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.9656 norm ∇Θ: 400.04754 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.8583 norm ∇Θ: 358.85032 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.80862 norm ∇Θ: 427.6455 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.69809 norm ∇Θ: 376.11587 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.57226 norm ∇Θ: 385.36047 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.49899 norm ∇Θ: 349.15683 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.46305 norm ∇Θ: 394.67856 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.42314 norm ∇Θ: 299.29544 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.31227 norm ∇Θ: 256.84909 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.1358 norm ∇Θ: 306.70989 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.98286 norm ∇Θ: 257.7481 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.86268 norm ∇Θ: 235.22858 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.76197 norm ∇Θ: 320.55802 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.66993 norm ∇Θ: 184.26528 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.59507 norm ∇Θ: 333.14355 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.53425 norm ∇Θ: 277.20879 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.50338 norm ∇Θ: 226.53267 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.48775 norm ∇Θ: 207.53482 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.46175 norm ∇Θ: 305.58776 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.4612 norm ∇Θ: 151.66565 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.4595 norm ∇Θ: 159.56474 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.41901 norm ∇Θ: 170.37369 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.39801 norm ∇Θ: 172.05897 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.37809 norm ∇Θ: 162.02466 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.35627 norm ∇Θ: 138.46759 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.34052 norm ∇Θ: 125.77255 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.27743 norm ∇Θ: 136.76881 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.25755 norm ∇Θ: 106.35247 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.20096 norm ∇Θ: 133.09615 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.14414 norm ∇Θ: 100.06525 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.105 norm ∇Θ: 82.8934 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.09285 norm ∇Θ: 126.66879 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.05248 norm ∇Θ: 89.41182 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.00886 norm ∇Θ: 68.96097 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.97029 norm ∇Θ: 101.72258 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.93392 norm ∇Θ: 138.70581 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.90486 norm ∇Θ: 110.86418 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.8754 norm ∇Θ: 95.02108 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.86346 norm ∇Θ: 81.05094 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.84507 norm ∇Θ: 101.32405 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.81857 norm ∇Θ: 92.41113 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.80213 norm ∇Θ: 73.72384 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.78292 norm ∇Θ: 78.75242 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.75852 norm ∇Θ: 71.57466 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.74351 norm ∇Θ: 55.32799 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.72682 norm ∇Θ: 70.81281 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.71301 norm ∇Θ: 67.84933 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.69454 norm ∇Θ: 121.51599 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.6866 norm ∇Θ: 66.9741 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.67417 norm ∇Θ: 50.20498 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.65467 norm ∇Θ: 66.62434 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.63782 norm ∇Θ: 62.26649 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.62727 norm ∇Θ: 74.16048 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.61455 norm ∇Θ: 72.90491 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.61156 norm ∇Θ: 52.97483 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
