>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.7
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.1
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1724.85546875 MB free)
Uptime: 65479.0 sec
Load Avg:  1.01416015625  1.0205078125  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz    3947171 s       2380 s     273635 s    1448095 s         48 s
#2  3509 MHz    1180882 s       4396 s     126915 s    5100020 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.7
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.1
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18067 norm ∇Θ: 178.25178 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.40209 norm ∇Θ: 310.66664 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.17049 norm ∇Θ: 266.03313 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 22.76285 norm ∇Θ: 347.05247 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 21.50064 norm ∇Θ: 341.69172 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 20.83552 norm ∇Θ: 358.88497 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 19.92188 norm ∇Θ: 356.93164 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.1611 norm ∇Θ: 404.11661 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.29184 norm ∇Θ: 430.86334 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.45735 norm ∇Θ: 419.20894 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 16.81014 norm ∇Θ: 369.943 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.14814 norm ∇Θ: 471.06724 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.62989 norm ∇Θ: 526.74651 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 14.96366 norm ∇Θ: 434.17692 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.31143 norm ∇Θ: 495.0177 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 13.81073 norm ∇Θ: 500.90013 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.35451 norm ∇Θ: 454.28494 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.19774 norm ∇Θ: 460.68902 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.90058 norm ∇Θ: 551.66148 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.65168 norm ∇Θ: 485.48002 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.22514 norm ∇Θ: 463.20697 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.83877 norm ∇Θ: 459.15866 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.47597 norm ∇Θ: 456.00709 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.2361 norm ∇Θ: 512.70932 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.93082 norm ∇Θ: 412.15597 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.65246 norm ∇Θ: 460.04728 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.36711 norm ∇Θ: 457.9984 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.07058 norm ∇Θ: 508.01918 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 9.8416 norm ∇Θ: 457.12087 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.56998 norm ∇Θ: 512.02689 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.38876 norm ∇Θ: 413.21591 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.14819 norm ∇Θ: 438.46852 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 8.98102 norm ∇Θ: 416.71141 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 8.8052 norm ∇Θ: 337.70249 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.67653 norm ∇Θ: 321.24795 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.56736 norm ∇Θ: 409.25972 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.4366 norm ∇Θ: 430.58129 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.32578 norm ∇Θ: 350.06057 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.2027 norm ∇Θ: 368.02333 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.10959 norm ∇Θ: 356.16583 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.01555 norm ∇Θ: 364.80704 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 7.96855 norm ∇Θ: 296.54451 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 7.94078 norm ∇Θ: 318.38409 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.8762 norm ∇Θ: 279.34773 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.81099 norm ∇Θ: 217.52092 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.73803 norm ∇Θ: 302.85217 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.66662 norm ∇Θ: 272.67391 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.61721 norm ∇Θ: 255.31644 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.57239 norm ∇Θ: 198.10367 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.52847 norm ∇Θ: 201.67779 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.49379 norm ∇Θ: 224.32253 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.45122 norm ∇Θ: 174.36107 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.41666 norm ∇Θ: 208.41121 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.39452 norm ∇Θ: 178.72849 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.35872 norm ∇Θ: 233.87196 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.33473 norm ∇Θ: 228.14661 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.30007 norm ∇Θ: 188.59137 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.26562 norm ∇Θ: 149.69772 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.23095 norm ∇Θ: 149.51504 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.19636 norm ∇Θ: 147.43647 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.16274 norm ∇Θ: 155.07583 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.13339 norm ∇Θ: 167.93848 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.10944 norm ∇Θ: 140.62382 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.08405 norm ∇Θ: 110.27966 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.05936 norm ∇Θ: 129.98862 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.03881 norm ∇Θ: 127.12249 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.02206 norm ∇Θ: 121.01446 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.00561 norm ∇Θ: 111.99056 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.99961 norm ∇Θ: 97.53477 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.98775 norm ∇Θ: 79.95322 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.97637 norm ∇Θ: 65.58674 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.97088 norm ∇Θ: 97.71829 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.96258 norm ∇Θ: 114.6434 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.95689 norm ∇Θ: 65.79992 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.93697 norm ∇Θ: 124.54829 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.89993 norm ∇Θ: 61.1496 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.86227 norm ∇Θ: 68.87219 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.82739 norm ∇Θ: 70.87926 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.80213 norm ∇Θ: 65.30278 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.76561 norm ∇Θ: 71.22908 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.74176 norm ∇Θ: 68.89696 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.72262 norm ∇Θ: 61.64486 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.70371 norm ∇Θ: 67.81749 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.68675 norm ∇Θ: 82.03444 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.67201 norm ∇Θ: 76.58896 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.65668 norm ∇Θ: 93.71105 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.64551 norm ∇Θ: 63.74289 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.63217 norm ∇Θ: 68.45352 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.61735 norm ∇Θ: 80.76217 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.60268 norm ∇Θ: 67.46863 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
