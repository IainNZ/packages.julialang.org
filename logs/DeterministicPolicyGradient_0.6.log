>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.8
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1725.91015625 MB free)
Uptime: 64674.0 sec
Load Avg:  0.89404296875  0.96337890625  0.9541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    3875056 s       6547 s     263242 s    1454482 s         47 s
#2  3508 MHz    1227683 s       1012 s     121996 s    4989675 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.8
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18175 norm ∇Θ: 162.61601 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.70657 norm ∇Θ: 293.89397 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 25.15865 norm ∇Θ: 298.45722 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 24.01439 norm ∇Θ: 327.77485 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 23.12629 norm ∇Θ: 381.79469 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 22.01024 norm ∇Θ: 369.44275 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 21.17366 norm ∇Θ: 409.98626 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 20.19867 norm ∇Θ: 377.62438 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.29388 norm ∇Θ: 432.25199 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.73241 norm ∇Θ: 431.02167 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 18.11673 norm ∇Θ: 381.13357 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.67288 norm ∇Θ: 503.9732 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 17.19942 norm ∇Θ: 432.78496 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 16.86865 norm ∇Θ: 468.29479 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.99922 norm ∇Θ: 454.50881 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 15.52473 norm ∇Θ: 503.80107 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 15.13439 norm ∇Θ: 499.19932 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.85902 norm ∇Θ: 474.85023 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 14.44195 norm ∇Θ: 472.19411 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 14.04633 norm ∇Θ: 519.82179 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 13.71209 norm ∇Θ: 486.64615 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 13.3032 norm ∇Θ: 495.58811 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 12.78556 norm ∇Θ: 497.12649 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 12.55846 norm ∇Θ: 481.90696 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 12.29822 norm ∇Θ: 499.55265 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.89424 norm ∇Θ: 441.3016 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 11.7018 norm ∇Θ: 444.79813 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 11.33555 norm ∇Θ: 408.52351 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 11.25647 norm ∇Θ: 449.38207 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 11.03498 norm ∇Θ: 501.00034 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 10.83266 norm ∇Θ: 322.79441 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 10.75719 norm ∇Θ: 381.76177 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 10.53148 norm ∇Θ: 416.04306 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 10.33735 norm ∇Θ: 422.70448 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 10.14378 norm ∇Θ: 353.16341 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 9.85662 norm ∇Θ: 389.53562 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 9.69688 norm ∇Θ: 475.35697 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 9.7158 norm ∇Θ: 425.58439 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 9.50219 norm ∇Θ: 382.25331 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 9.34481 norm ∇Θ: 346.26075 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 9.16884 norm ∇Θ: 355.9478 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 9.07512 norm ∇Θ: 404.17482 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.98507 norm ∇Θ: 298.16471 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.75254 norm ∇Θ: 242.89639 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.58408 norm ∇Θ: 253.78007 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 8.46219 norm ∇Θ: 220.77151 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 8.34556 norm ∇Θ: 298.00631 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 8.23775 norm ∇Θ: 261.50789 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 8.14184 norm ∇Θ: 219.92734 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 8.05129 norm ∇Θ: 203.73661 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.97079 norm ∇Θ: 248.84851 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.87554 norm ∇Θ: 226.15812 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.72175 norm ∇Θ: 157.22011 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.63661 norm ∇Θ: 197.65292 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.58023 norm ∇Θ: 136.87707 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.47791 norm ∇Θ: 199.45266 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.43907 norm ∇Θ: 162.1995 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.38523 norm ∇Θ: 183.36098 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.32712 norm ∇Θ: 143.87433 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.27005 norm ∇Θ: 140.89931 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.22598 norm ∇Θ: 213.41532 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.20576 norm ∇Θ: 133.02841 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.16378 norm ∇Θ: 129.15886 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.12575 norm ∇Θ: 137.12616 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.09454 norm ∇Θ: 117.25335 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.06606 norm ∇Θ: 98.24842 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.04235 norm ∇Θ: 98.6572 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.0199 norm ∇Θ: 78.55564 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.99428 norm ∇Θ: 77.48146 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.97273 norm ∇Θ: 105.18569 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.94781 norm ∇Θ: 106.42048 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.92368 norm ∇Θ: 67.31375 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.90364 norm ∇Θ: 95.2394 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.8886 norm ∇Θ: 70.20086 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.86831 norm ∇Θ: 113.16458 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.84889 norm ∇Θ: 60.91299 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.83419 norm ∇Θ: 98.16763 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.813 norm ∇Θ: 89.07336 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.79252 norm ∇Θ: 82.14342 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.77312 norm ∇Θ: 57.82788 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.758 norm ∇Θ: 72.22075 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.74055 norm ∇Θ: 52.17729 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.72365 norm ∇Θ: 67.01163 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.70886 norm ∇Θ: 58.76959 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.70145 norm ∇Θ: 80.1187 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.69769 norm ∇Θ: 76.63109 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.69017 norm ∇Θ: 76.65768 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.68651 norm ∇Θ: 62.32427 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.70035 norm ∇Θ: 71.87797 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.71386 norm ∇Θ: 61.34987 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
