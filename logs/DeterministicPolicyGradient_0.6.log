>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.8
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1715.50390625 MB free)
Uptime: 66254.0 sec
Load Avg:  1.0283203125  1.001953125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3515 MHz    3995722 s       6966 s     265933 s    1489659 s         48 s
#2  3515 MHz    1136723 s       1492 s     123903 s    5246286 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.8
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18897 norm ∇Θ: 192.63656 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.62223 norm ∇Θ: 290.23006 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.40687 norm ∇Θ: 330.33245 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.20292 norm ∇Θ: 340.72749 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.18296 norm ∇Θ: 345.54773 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.05158 norm ∇Θ: 350.41376 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 19.90915 norm ∇Θ: 392.66434 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.0851 norm ∇Θ: 392.68523 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.26959 norm ∇Θ: 385.12055 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.38666 norm ∇Θ: 391.35347 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 16.88115 norm ∇Θ: 457.95645 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.24915 norm ∇Θ: 453.40136 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.77423 norm ∇Θ: 492.86655 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.07236 norm ∇Θ: 505.79719 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.72178 norm ∇Θ: 435.89119 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.18007 norm ∇Θ: 525.44551 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.78654 norm ∇Θ: 474.67164 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.42076 norm ∇Θ: 488.38824 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.77514 norm ∇Θ: 488.57796 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.29163 norm ∇Θ: 543.42739 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 11.86074 norm ∇Θ: 494.62197 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.65374 norm ∇Θ: 517.63283 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.36801 norm ∇Θ: 497.06282 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.06276 norm ∇Θ: 448.07608 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.75975 norm ∇Θ: 512.34129 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.68946 norm ∇Θ: 574.39083 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.45176 norm ∇Θ: 462.16607 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.1638 norm ∇Θ: 481.64382 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 9.87098 norm ∇Θ: 507.75286 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.60254 norm ∇Θ: 449.88868 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.37485 norm ∇Θ: 359.85989 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.27161 norm ∇Θ: 393.13904 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.0711 norm ∇Θ: 471.0445 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 8.89746 norm ∇Θ: 427.36408 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.79213 norm ∇Θ: 397.50481 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.80398 norm ∇Θ: 373.8043 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.77956 norm ∇Θ: 380.90937 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.647 norm ∇Θ: 347.81692 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.52494 norm ∇Θ: 421.67484 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.46698 norm ∇Θ: 379.66666 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.33298 norm ∇Θ: 334.0211 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.22039 norm ∇Θ: 333.27811 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.17985 norm ∇Θ: 323.31848 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.11183 norm ∇Θ: 258.05476 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.99105 norm ∇Θ: 295.32155 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.94468 norm ∇Θ: 294.78689 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.84286 norm ∇Θ: 278.23166 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.79512 norm ∇Θ: 254.41419 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.69883 norm ∇Θ: 309.5508 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.6198 norm ∇Θ: 269.11274 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.55416 norm ∇Θ: 175.63812 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.50738 norm ∇Θ: 211.39106 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.4835 norm ∇Θ: 127.56713 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.4296 norm ∇Θ: 182.54523 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.40539 norm ∇Θ: 215.1614 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.37614 norm ∇Θ: 171.42005 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.3583 norm ∇Θ: 191.98785 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.31248 norm ∇Θ: 117.49629 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.27044 norm ∇Θ: 122.58437 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.26111 norm ∇Θ: 135.84818 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.25094 norm ∇Θ: 148.19843 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.19879 norm ∇Θ: 112.07186 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.18001 norm ∇Θ: 123.07577 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.15466 norm ∇Θ: 97.48712 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.15791 norm ∇Θ: 108.26575 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.16531 norm ∇Θ: 87.24325 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.13981 norm ∇Θ: 102.99617 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.1379 norm ∇Θ: 106.70286 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.09205 norm ∇Θ: 106.7123 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.05003 norm ∇Θ: 84.90774 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.05116 norm ∇Θ: 117.8509 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 7.0329 norm ∇Θ: 125.88501 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 7.02888 norm ∇Θ: 148.82559 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 7.01649 norm ∇Θ: 75.77588 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 7.02845 norm ∇Θ: 81.75111 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.99267 norm ∇Θ: 71.41178 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.96708 norm ∇Θ: 60.50063 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.91957 norm ∇Θ: 82.06748 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.88298 norm ∇Θ: 93.90171 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.85779 norm ∇Θ: 85.34079 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.81195 norm ∇Θ: 61.14956 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.77505 norm ∇Θ: 72.95005 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.73296 norm ∇Θ: 74.34668 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.70301 norm ∇Θ: 95.6438 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.6794 norm ∇Θ: 53.03149 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.64781 norm ∇Θ: 92.83111 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.63046 norm ∇Θ: 62.65443 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.61967 norm ∇Θ: 53.60263 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.60621 norm ∇Θ: 76.15367 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.60203 norm ∇Θ: 57.78284 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
