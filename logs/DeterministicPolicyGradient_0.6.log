>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.2
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.14.2
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.2
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.7
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1779.7578125 MB free)
Uptime: 54774.0 sec
Load Avg:  1.0029296875  1.001953125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3506225 s         71 s     153988 s    1002119 s         18 s
#2  3499 MHz    1069990 s        124 s      86180 s    4206869 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.3
25 additional packages:
 - BinDeps                       0.8.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.43.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.2
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.14.2
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.19243 norm ∇Θ: 191.29507 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.62617 norm ∇Θ: 311.40023 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.84857 norm ∇Θ: 296.19808 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.77902 norm ∇Θ: 367.96832 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.72051 norm ∇Θ: 359.58652 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.64782 norm ∇Θ: 367.43101 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.83474 norm ∇Θ: 363.5671 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.95686 norm ∇Θ: 419.67628 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.34164 norm ∇Θ: 417.60339 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.41111 norm ∇Θ: 415.95936 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.60249 norm ∇Θ: 420.64101 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.04927 norm ∇Θ: 430.61033 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.22331 norm ∇Θ: 470.42987 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.56603 norm ∇Θ: 464.11299 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.0431 norm ∇Θ: 488.6299 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.49514 norm ∇Θ: 478.37854 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.40058 norm ∇Θ: 440.64272 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.78723 norm ∇Θ: 454.16276 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.3815 norm ∇Θ: 470.19006 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.06878 norm ∇Θ: 475.10653 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.79826 norm ∇Θ: 510.17988 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.44634 norm ∇Θ: 532.63302 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 12.13997 norm ∇Θ: 478.1426 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.89717 norm ∇Θ: 457.59515 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.51634 norm ∇Θ: 468.15118 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.22025 norm ∇Θ: 478.34816 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.9702 norm ∇Θ: 472.04451 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.84423 norm ∇Θ: 495.37756 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.59905 norm ∇Θ: 430.21057 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 10.29517 norm ∇Θ: 420.02669 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 10.06111 norm ∇Θ: 405.96952 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.77655 norm ∇Θ: 433.44769 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.63177 norm ∇Θ: 412.82786 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.49419 norm ∇Θ: 362.57461 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.44984 norm ∇Θ: 393.15179 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 9.28663 norm ∇Θ: 313.34401 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 9.09285 norm ∇Θ: 391.73284 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.97906 norm ∇Θ: 351.19277 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.87781 norm ∇Θ: 351.8679 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.78357 norm ∇Θ: 279.66317 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.67793 norm ∇Θ: 273.74958 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.55282 norm ∇Θ: 312.88501 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.48237 norm ∇Θ: 292.66653 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.37358 norm ∇Θ: 229.73398 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.32382 norm ∇Θ: 275.34458 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 8.17634 norm ∇Θ: 272.50934 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 8.12652 norm ∇Θ: 255.05749 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 8.06534 norm ∇Θ: 232.61572 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 8.01096 norm ∇Θ: 295.34234 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.9587 norm ∇Θ: 211.03188 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.89679 norm ∇Θ: 156.22651 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.80024 norm ∇Θ: 179.62355 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.77456 norm ∇Θ: 157.21064 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.68802 norm ∇Θ: 148.60578 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.61732 norm ∇Θ: 141.46489 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.55409 norm ∇Θ: 228.6167 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.56367 norm ∇Θ: 138.91979 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.54547 norm ∇Θ: 112.09493 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.55774 norm ∇Θ: 115.6853 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.52123 norm ∇Θ: 192.62941 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.52015 norm ∇Θ: 171.37542 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.47622 norm ∇Θ: 130.12533 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.4657 norm ∇Θ: 124.03099 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.51627 norm ∇Θ: 106.24386 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.53055 norm ∇Θ: 145.80627 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.54992 norm ∇Θ: 89.19223 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.60349 norm ∇Θ: 105.39796 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.62684 norm ∇Θ: 106.1978 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.62819 norm ∇Θ: 84.05972 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.72232 norm ∇Θ: 109.90414 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.76546 norm ∇Θ: 69.87288 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 7.59103 norm ∇Θ: 107.0869 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 7.56105 norm ∇Θ: 92.89767 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 7.55891 norm ∇Θ: 109.55697 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 7.45641 norm ∇Θ: 74.21275 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 7.43418 norm ∇Θ: 97.58909 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 7.28753 norm ∇Θ: 73.32726 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 7.16772 norm ∇Θ: 55.57624 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 7.03964 norm ∇Θ: 114.78818 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.99552 norm ∇Θ: 71.16847 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.92485 norm ∇Θ: 96.0135 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.85843 norm ∇Θ: 72.13783 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.81181 norm ∇Θ: 63.15423 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.797 norm ∇Θ: 63.26499 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.76696 norm ∇Θ: 77.46156 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.74258 norm ∇Θ: 53.93909 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.76424 norm ∇Θ: 109.39575 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.71447 norm ∇Θ: 80.19577 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.68502 norm ∇Θ: 59.9515 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.65243 norm ∇Θ: 89.24137 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
