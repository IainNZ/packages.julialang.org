>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.7
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1738.59765625 MB free)
Uptime: 60176.0 sec
Load Avg:  1.0634765625  0.9951171875  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3788547 s         69 s     169985 s    1224529 s         46 s
#2  3500 MHz    1048038 s       6331 s      91864 s    4752548 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.1
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.56.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.7
 - NaNMath                       0.3.1
 - Nullables                     0.0.4
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.1
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.20364 norm ∇Θ: 159.28167 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 26.13024 norm ∇Θ: 283.09413 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 25.06565 norm ∇Θ: 366.50316 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.84577 norm ∇Θ: 334.58983 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.44886 norm ∇Θ: 372.76168 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.27658 norm ∇Θ: 373.47212 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.36327 norm ∇Θ: 429.40175 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.49519 norm ∇Θ: 423.02368 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.46144 norm ∇Θ: 412.50912 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.77465 norm ∇Θ: 486.52644 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.0755 norm ∇Θ: 457.53009 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.49096 norm ∇Θ: 460.96268 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.02475 norm ∇Θ: 458.85935 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.21231 norm ∇Θ: 460.74369 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.91652 norm ∇Θ: 523.33672 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.53966 norm ∇Θ: 503.01402 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.0369 norm ∇Θ: 495.85981 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.51976 norm ∇Θ: 478.73098 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.91304 norm ∇Θ: 489.89742 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.64282 norm ∇Θ: 486.80429 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.36057 norm ∇Θ: 541.76254 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.965 norm ∇Θ: 479.33234 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.67942 norm ∇Θ: 490.63003 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.35412 norm ∇Θ: 523.32133 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.0906 norm ∇Θ: 527.1648 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.80588 norm ∇Θ: 537.7669 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.61924 norm ∇Θ: 471.48907 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.30431 norm ∇Θ: 539.72904 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.1377 norm ∇Θ: 495.39078 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.86048 norm ∇Θ: 438.64952 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.71087 norm ∇Θ: 484.33376 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.50657 norm ∇Θ: 366.89457 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.25209 norm ∇Θ: 398.28584 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.07832 norm ∇Θ: 364.84606 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.05938 norm ∇Θ: 356.66538 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.87866 norm ∇Θ: 345.67277 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.68783 norm ∇Θ: 313.45723 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.64293 norm ∇Θ: 336.52116 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.48268 norm ∇Θ: 326.53935 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.36052 norm ∇Θ: 331.54032 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.27081 norm ∇Θ: 325.22347 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.19379 norm ∇Θ: 275.21043 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.12263 norm ∇Θ: 243.32974 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.04501 norm ∇Θ: 298.57132 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.98681 norm ∇Θ: 239.56386 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.91506 norm ∇Θ: 384.86353 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.86809 norm ∇Θ: 247.06362 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.84861 norm ∇Θ: 263.47568 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.82651 norm ∇Θ: 204.66903 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.80978 norm ∇Θ: 288.36147 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.75952 norm ∇Θ: 180.69467 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.71429 norm ∇Θ: 241.04083 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.63563 norm ∇Θ: 217.61866 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.60339 norm ∇Θ: 154.722 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.53634 norm ∇Θ: 204.36712 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.54316 norm ∇Θ: 150.89761 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.55691 norm ∇Θ: 152.09104 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.56251 norm ∇Θ: 167.15498 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.61603 norm ∇Θ: 147.96077 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.53855 norm ∇Θ: 117.23357 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.51426 norm ∇Θ: 151.08146 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.44002 norm ∇Θ: 130.73692 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.32232 norm ∇Θ: 181.10718 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.32792 norm ∇Θ: 105.31364 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.26924 norm ∇Θ: 115.71708 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.24934 norm ∇Θ: 125.86009 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.27291 norm ∇Θ: 96.24031 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.24298 norm ∇Θ: 126.83253 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.16601 norm ∇Θ: 208.13538 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.0866 norm ∇Θ: 102.96338 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.99973 norm ∇Θ: 114.3468 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.92713 norm ∇Θ: 90.31132 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.90612 norm ∇Θ: 75.71074 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.88718 norm ∇Θ: 79.88621 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.84861 norm ∇Θ: 114.26602 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.82323 norm ∇Θ: 80.42189 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.80186 norm ∇Θ: 82.46665 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.78197 norm ∇Θ: 80.1328 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.76303 norm ∇Θ: 100.62552 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.7486 norm ∇Θ: 61.26274 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.7394 norm ∇Θ: 126.44404 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.72431 norm ∇Θ: 76.77521 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.71737 norm ∇Θ: 59.70192 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.70744 norm ∇Θ: 65.65695 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.68809 norm ∇Θ: 90.12674 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.66668 norm ∇Θ: 42.15973 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.65363 norm ∇Θ: 92.70858 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.62495 norm ∇Θ: 58.99051 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.60988 norm ∇Θ: 63.04989 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.60082 norm ∇Θ: 58.81007 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
