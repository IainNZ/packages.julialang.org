>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.2.0
INFO: Installing Missings v0.2.9
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2105.5546875 MB free)
Uptime: 66759.0 sec
Load Avg:  1.00390625  1.0146484375  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4065344 s       6328 s     266638 s    1422657 s         58 s
#2  3500 MHz    1223418 s        117 s     128587 s    5185694 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.2.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18236 norm ∇Θ: 191.61571 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.84692 norm ∇Θ: 266.32147 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.85082 norm ∇Θ: 299.16199 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.86861 norm ∇Θ: 320.08806 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.4536 norm ∇Θ: 376.67788 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.27776 norm ∇Θ: 370.9296 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.49418 norm ∇Θ: 399.14835 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.84369 norm ∇Θ: 400.76614 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.10886 norm ∇Θ: 414.34017 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.98786 norm ∇Θ: 415.9894 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.28535 norm ∇Θ: 416.46776 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.7636 norm ∇Θ: 421.67528 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.40923 norm ∇Θ: 450.15403 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.8017 norm ∇Θ: 470.4165 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.1358 norm ∇Θ: 503.30882 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.54217 norm ∇Θ: 448.77243 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.12135 norm ∇Θ: 495.26256 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.69516 norm ∇Θ: 518.40255 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.28748 norm ∇Θ: 549.98983 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.9269 norm ∇Θ: 468.05261 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.53588 norm ∇Θ: 526.18705 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.24217 norm ∇Θ: 504.26748 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.91634 norm ∇Θ: 522.0297 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.51129 norm ∇Θ: 491.93638 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.28144 norm ∇Θ: 477.47464 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.95651 norm ∇Θ: 508.82833 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.62691 norm ∇Θ: 434.74319 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.3619 norm ∇Θ: 456.93743 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.11788 norm ∇Θ: 425.35943 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.98876 norm ∇Θ: 489.31162 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.76644 norm ∇Θ: 488.30488 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.56327 norm ∇Θ: 471.87249 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.30497 norm ∇Θ: 455.67194 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.12934 norm ∇Θ: 489.80995 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.97194 norm ∇Θ: 364.50275 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.7854 norm ∇Θ: 414.42701 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.59955 norm ∇Θ: 386.8702 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.49565 norm ∇Θ: 349.33662 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.35822 norm ∇Θ: 368.05732 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.25776 norm ∇Θ: 390.92105 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.16242 norm ∇Θ: 426.56621 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.07113 norm ∇Θ: 322.9774 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.04555 norm ∇Θ: 298.73571 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.97588 norm ∇Θ: 308.16951 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.8958 norm ∇Θ: 340.01591 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.86886 norm ∇Θ: 292.41797 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.85398 norm ∇Θ: 254.78833 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.79367 norm ∇Θ: 277.9603 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.75723 norm ∇Θ: 288.34328 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.68134 norm ∇Θ: 188.08059 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.6306 norm ∇Θ: 278.90958 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.57257 norm ∇Θ: 206.66151 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.55102 norm ∇Θ: 205.45366 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.50787 norm ∇Θ: 172.07808 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.43121 norm ∇Θ: 154.01631 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.37891 norm ∇Θ: 151.87789 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.33725 norm ∇Θ: 129.39039 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.30288 norm ∇Θ: 113.10398 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.25545 norm ∇Θ: 126.69032 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.22945 norm ∇Θ: 134.24094 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.19979 norm ∇Θ: 126.14237 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.16926 norm ∇Θ: 139.92008 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.16727 norm ∇Θ: 133.82656 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.15639 norm ∇Θ: 88.29417 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.16468 norm ∇Θ: 118.69556 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.15999 norm ∇Θ: 118.62471 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.16207 norm ∇Θ: 101.06668 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.14594 norm ∇Θ: 78.11533 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.12688 norm ∇Θ: 88.80058 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.13256 norm ∇Θ: 132.52507 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.09027 norm ∇Θ: 107.5082 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 7.05612 norm ∇Θ: 89.76094 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 7.01328 norm ∇Θ: 70.32631 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.97532 norm ∇Θ: 163.98601 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.94264 norm ∇Θ: 91.47716 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.8973 norm ∇Θ: 77.23301 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.86486 norm ∇Θ: 102.99212 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.832 norm ∇Θ: 111.09894 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.80321 norm ∇Θ: 95.60871 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.78666 norm ∇Θ: 68.3639 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.75912 norm ∇Θ: 73.17419 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.74562 norm ∇Θ: 72.45776 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.72924 norm ∇Θ: 75.09476 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.71642 norm ∇Θ: 89.71919 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.70079 norm ∇Θ: 57.55736 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.68475 norm ∇Θ: 95.95053 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.67555 norm ∇Θ: 54.41628 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.67056 norm ∇Θ: 65.27775 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.65319 norm ∇Θ: 47.17209 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.66346 norm ∇Θ: 53.67699 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
