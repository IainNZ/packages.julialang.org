>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.3
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.2
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.7
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1771.078125 MB free)
Uptime: 55258.0 sec
Load Avg:  1.0029296875  0.98583984375  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3582519 s       7067 s     161092 s     973152 s         23 s
#2  3500 MHz    1032577 s         75 s      82222 s    4310992 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.3
25 additional packages:
 - BinDeps                       0.8.3
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.45.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.19491 norm ∇Θ: 183.33894 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.82834 norm ∇Θ: 289.6067 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.60769 norm ∇Θ: 343.98217 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.63889 norm ∇Θ: 343.75072 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.54545 norm ∇Θ: 321.63121 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.68324 norm ∇Θ: 370.30276 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.65885 norm ∇Θ: 424.3703 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.77684 norm ∇Θ: 399.07497 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.04213 norm ∇Θ: 423.04475 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.10087 norm ∇Θ: 462.87911 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.59495 norm ∇Θ: 445.8351 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.84088 norm ∇Θ: 456.58835 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.19781 norm ∇Θ: 480.59484 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.38837 norm ∇Θ: 461.01957 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.83323 norm ∇Θ: 483.22082 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.36381 norm ∇Θ: 531.70655 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.89152 norm ∇Θ: 457.44229 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.31573 norm ∇Θ: 495.44714 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.05492 norm ∇Θ: 490.48596 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.57111 norm ∇Θ: 481.17766 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.31527 norm ∇Θ: 563.21682 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.10878 norm ∇Θ: 557.28363 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.67004 norm ∇Θ: 544.36359 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.28017 norm ∇Θ: 461.45841 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.92678 norm ∇Θ: 512.58083 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.6623 norm ∇Θ: 528.42805 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.46911 norm ∇Θ: 492.09629 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.27079 norm ∇Θ: 433.29801 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.05539 norm ∇Θ: 463.64911 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.88643 norm ∇Θ: 543.50945 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.7072 norm ∇Θ: 493.27727 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.49348 norm ∇Θ: 432.57643 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.3616 norm ∇Θ: 442.40775 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.16914 norm ∇Θ: 427.07762 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.01948 norm ∇Θ: 357.90464 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.8363 norm ∇Θ: 366.22579 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.65717 norm ∇Θ: 360.07714 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.53274 norm ∇Θ: 401.38761 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.39264 norm ∇Θ: 309.77164 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.2748 norm ∇Θ: 444.16109 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.18019 norm ∇Θ: 318.0987 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.10358 norm ∇Θ: 296.70838 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.0307 norm ∇Θ: 302.73898 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.9666 norm ∇Θ: 317.03007 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.92176 norm ∇Θ: 282.69743 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.84812 norm ∇Θ: 305.32679 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.78888 norm ∇Θ: 303.24936 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.71512 norm ∇Θ: 304.10243 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.65322 norm ∇Θ: 186.05321 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.59277 norm ∇Θ: 169.89688 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.55479 norm ∇Θ: 219.20996 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.48874 norm ∇Θ: 184.82247 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.45489 norm ∇Θ: 206.26777 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.41353 norm ∇Θ: 245.37285 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.37635 norm ∇Θ: 151.28238 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.34263 norm ∇Θ: 211.30428 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.31018 norm ∇Θ: 187.4906 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.28675 norm ∇Θ: 148.75267 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.25579 norm ∇Θ: 148.20714 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.24436 norm ∇Θ: 175.79367 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.24577 norm ∇Θ: 121.5553 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.20281 norm ∇Θ: 134.28292 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.16955 norm ∇Θ: 147.77882 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.14889 norm ∇Θ: 123.97458 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.12135 norm ∇Θ: 140.14773 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.10737 norm ∇Θ: 108.81762 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.06665 norm ∇Θ: 114.31258 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.05341 norm ∇Θ: 120.98742 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.04966 norm ∇Θ: 101.34135 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.06096 norm ∇Θ: 111.84964 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.04293 norm ∇Θ: 168.65527 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 7.02494 norm ∇Θ: 113.46451 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 7.01079 norm ∇Θ: 102.2959 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 7.02014 norm ∇Θ: 95.6566 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.99644 norm ∇Θ: 74.96598 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.97439 norm ∇Θ: 93.90571 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.9639 norm ∇Θ: 63.323 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.98215 norm ∇Θ: 79.41139 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.98041 norm ∇Θ: 77.9203 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.99337 norm ∇Θ: 87.83402 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.99973 norm ∇Θ: 103.9907 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.97663 norm ∇Θ: 72.29896 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.95075 norm ∇Θ: 59.70679 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.91266 norm ∇Θ: 63.84067 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.90645 norm ∇Θ: 61.36503 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.90071 norm ∇Θ: 85.09953 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.93749 norm ∇Θ: 78.53097 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.94122 norm ∇Θ: 82.20577 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.92725 norm ∇Θ: 65.5521 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.94178 norm ∇Θ: 57.5 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
