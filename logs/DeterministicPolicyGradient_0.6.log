>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.7
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1727.87109375 MB free)
Uptime: 60512.0 sec
Load Avg:  0.98681640625  0.9853515625  0.9541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3753317 s       7312 s     170970 s    1242284 s         62 s
#2  3500 MHz    1049680 s         68 s      93209 s    4780823 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.1
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.56.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.7
 - NaNMath                       0.3.1
 - Nullables                     0.0.4
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.1
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.16836 norm ∇Θ: 164.15256 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.76697 norm ∇Θ: 283.45591 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.25215 norm ∇Θ: 325.54876 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.15077 norm ∇Θ: 360.47974 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.04145 norm ∇Θ: 388.60659 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.1847 norm ∇Θ: 368.19309 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.29838 norm ∇Θ: 363.6067 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.67777 norm ∇Θ: 396.10518 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.09767 norm ∇Θ: 404.98273 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.27013 norm ∇Θ: 489.43867 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.44954 norm ∇Θ: 409.55018 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.75317 norm ∇Θ: 489.58119 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.0524 norm ∇Θ: 448.18837 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.3177 norm ∇Θ: 456.1666 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.74898 norm ∇Θ: 474.9504 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.28725 norm ∇Θ: 501.58217 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.84216 norm ∇Θ: 462.19436 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.35395 norm ∇Θ: 582.90747 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.84709 norm ∇Θ: 440.59403 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.45476 norm ∇Θ: 493.35481 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.2072 norm ∇Θ: 419.84957 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.74925 norm ∇Θ: 464.87669 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.44853 norm ∇Θ: 512.89919 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.24527 norm ∇Θ: 539.19488 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.85442 norm ∇Θ: 484.45624 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.57128 norm ∇Θ: 521.90425 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.24353 norm ∇Θ: 516.44583 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 9.99389 norm ∇Θ: 480.52583 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 9.80409 norm ∇Θ: 448.45886 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.65166 norm ∇Θ: 412.04983 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.51277 norm ∇Θ: 406.79621 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.49295 norm ∇Θ: 469.91321 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.37142 norm ∇Θ: 404.22417 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.30456 norm ∇Θ: 464.81657 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.18016 norm ∇Θ: 419.01485 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 9.06855 norm ∇Θ: 392.6829 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.98145 norm ∇Θ: 360.67732 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.84883 norm ∇Θ: 340.35725 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.69088 norm ∇Θ: 354.56862 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.53263 norm ∇Θ: 389.89831 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.41688 norm ∇Θ: 321.86076 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.23902 norm ∇Θ: 350.33879 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.0902 norm ∇Θ: 331.11727 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.98962 norm ∇Θ: 320.33099 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.91961 norm ∇Θ: 302.38237 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.8467 norm ∇Θ: 276.0981 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.77119 norm ∇Θ: 238.18037 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.75309 norm ∇Θ: 301.61097 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.70763 norm ∇Θ: 304.0738 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.67376 norm ∇Θ: 252.57999 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.61564 norm ∇Θ: 270.03882 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.5867 norm ∇Θ: 171.5162 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.52645 norm ∇Θ: 234.59405 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.46334 norm ∇Θ: 243.1683 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.41729 norm ∇Θ: 187.64488 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.37601 norm ∇Θ: 203.80863 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.33877 norm ∇Θ: 174.18996 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.29507 norm ∇Θ: 159.58053 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.24741 norm ∇Θ: 174.90137 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.20684 norm ∇Θ: 146.47658 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.17187 norm ∇Θ: 134.74434 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.15232 norm ∇Θ: 122.90544 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.1211 norm ∇Θ: 135.4302 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.09066 norm ∇Θ: 115.16936 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.06227 norm ∇Θ: 123.64075 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.04609 norm ∇Θ: 120.26102 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.02752 norm ∇Θ: 94.04688 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.00852 norm ∇Θ: 93.62073 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.98902 norm ∇Θ: 137.45866 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.97584 norm ∇Θ: 84.68062 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.96167 norm ∇Θ: 104.78323 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.95059 norm ∇Θ: 66.50325 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.92857 norm ∇Θ: 74.31286 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.91936 norm ∇Θ: 81.1056 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.89489 norm ∇Θ: 88.62173 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.87047 norm ∇Θ: 107.71326 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.84884 norm ∇Θ: 56.78208 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.84553 norm ∇Θ: 147.35312 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.8361 norm ∇Θ: 76.68353 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.81406 norm ∇Θ: 155.55433 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.80945 norm ∇Θ: 93.42736 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.79789 norm ∇Θ: 72.47779 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.78759 norm ∇Θ: 53.24139 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.77448 norm ∇Θ: 99.62782 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.76866 norm ∇Θ: 77.27504 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.78443 norm ∇Θ: 64.45425 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.77019 norm ∇Θ: 68.92243 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.78813 norm ∇Θ: 70.40168 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.78791 norm ∇Θ: 53.47551 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.77255 norm ∇Θ: 62.89631 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
