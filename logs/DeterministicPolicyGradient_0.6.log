>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.2.0
INFO: Installing Missings v0.2.9
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2105.38671875 MB free)
Uptime: 67812.0 sec
Load Avg:  1.1259765625  1.05322265625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    4072562 s        785 s     277164 s    1514498 s         65 s
#2  3505 MHz    1300032 s       6922 s     128615 s    5211809 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.2.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18053 norm ∇Θ: 176.37595 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.52343 norm ∇Θ: 301.1628 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.29766 norm ∇Θ: 290.72551 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.37653 norm ∇Θ: 337.51866 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.0953 norm ∇Θ: 403.54401 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.3065 norm ∇Θ: 353.11334 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.3063 norm ∇Θ: 421.47608 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.31826 norm ∇Θ: 417.78212 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.59961 norm ∇Θ: 403.47713 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.66007 norm ∇Θ: 456.57744 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 16.81133 norm ∇Θ: 494.39622 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.34275 norm ∇Θ: 467.67304 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.80936 norm ∇Θ: 506.03155 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.38316 norm ∇Θ: 515.39374 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.92641 norm ∇Θ: 505.70522 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.42828 norm ∇Θ: 477.07001 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.84579 norm ∇Θ: 451.76643 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.2244 norm ∇Θ: 548.74996 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.81669 norm ∇Θ: 547.97761 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.27596 norm ∇Θ: 501.4092 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 11.81228 norm ∇Θ: 503.32261 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.43769 norm ∇Θ: 473.00371 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.18478 norm ∇Θ: 454.68904 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 10.94817 norm ∇Θ: 485.04337 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.65333 norm ∇Θ: 471.04064 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.50373 norm ∇Θ: 510.79172 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.28053 norm ∇Θ: 444.08537 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.02827 norm ∇Θ: 448.41072 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 9.76139 norm ∇Θ: 457.13316 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.54702 norm ∇Θ: 449.84298 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.31838 norm ∇Θ: 413.75896 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.25048 norm ∇Θ: 439.02007 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.10155 norm ∇Θ: 390.05938 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 8.98116 norm ∇Θ: 408.78252 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.81111 norm ∇Θ: 400.71124 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.70869 norm ∇Θ: 384.40131 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.57361 norm ∇Θ: 379.98015 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.44132 norm ∇Θ: 375.33404 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.2807 norm ∇Θ: 281.4662 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.13568 norm ∇Θ: 351.91997 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.06625 norm ∇Θ: 272.19467 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.01307 norm ∇Θ: 321.25423 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 7.95324 norm ∇Θ: 287.6127 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.90156 norm ∇Θ: 280.08332 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.83628 norm ∇Θ: 251.20071 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.74957 norm ∇Θ: 255.82978 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.67034 norm ∇Θ: 226.10891 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.61313 norm ∇Θ: 242.89812 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.55724 norm ∇Θ: 197.85362 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.50226 norm ∇Θ: 201.66585 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.45847 norm ∇Θ: 214.92143 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.42492 norm ∇Θ: 165.4059 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.39295 norm ∇Θ: 158.0782 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.35213 norm ∇Θ: 225.21879 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.3274 norm ∇Θ: 211.62013 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.3 norm ∇Θ: 221.09478 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.29456 norm ∇Θ: 178.54867 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.26803 norm ∇Θ: 164.10835 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.22571 norm ∇Θ: 153.38306 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.19052 norm ∇Θ: 139.56661 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.16548 norm ∇Θ: 116.87453 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.14006 norm ∇Θ: 98.25027 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.11011 norm ∇Θ: 135.13235 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.08995 norm ∇Θ: 101.5679 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.07071 norm ∇Θ: 80.90287 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.05951 norm ∇Θ: 159.68739 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.05644 norm ∇Θ: 94.94778 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.02197 norm ∇Θ: 99.12736 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.04456 norm ∇Θ: 102.48278 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.01454 norm ∇Θ: 86.19178 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.01743 norm ∇Θ: 93.17734 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.99672 norm ∇Θ: 88.28399 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.9834 norm ∇Θ: 99.51719 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.97612 norm ∇Θ: 95.98367 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.96862 norm ∇Θ: 124.15155 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.98074 norm ∇Θ: 86.77168 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.97021 norm ∇Θ: 70.85637 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.97227 norm ∇Θ: 58.25968 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.95169 norm ∇Θ: 79.05233 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.95467 norm ∇Θ: 75.94913 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.91653 norm ∇Θ: 104.20658 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.90844 norm ∇Θ: 83.55534 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.96216 norm ∇Θ: 81.50792 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 7.01451 norm ∇Θ: 75.63925 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 7.09941 norm ∇Θ: 78.71492 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 7.18205 norm ∇Θ: 74.87807 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 7.27493 norm ∇Θ: 73.54846 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 7.32736 norm ∇Θ: 56.73847 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 7.39736 norm ∇Θ: 66.00765 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 7.45863 norm ∇Θ: 57.10153 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
