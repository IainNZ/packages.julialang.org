>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.2
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.2
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.7
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1801.26953125 MB free)
Uptime: 49916.0 sec
Load Avg:  0.99560546875  0.97265625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3112592 s       6476 s     143662 s     919417 s          8 s
#2  3499 MHz     936256 s        609 s      78802 s    3848589 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.3
25 additional packages:
 - BinDeps                       0.8.2
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.44.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.2
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.26538 norm ∇Θ: 173.20706 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 26.20451 norm ∇Θ: 278.79582 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 25.13974 norm ∇Θ: 325.91834 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.83768 norm ∇Θ: 357.74159 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.75053 norm ∇Θ: 368.00034 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.53583 norm ∇Θ: 364.13065 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.47006 norm ∇Θ: 368.93072 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.63767 norm ∇Θ: 424.06486 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.77179 norm ∇Θ: 414.745 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.92572 norm ∇Θ: 469.29654 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.05745 norm ∇Θ: 424.39203 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.36171 norm ∇Θ: 461.29025 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.75364 norm ∇Θ: 457.32509 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.17742 norm ∇Θ: 458.32942 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.71225 norm ∇Θ: 494.50264 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.40896 norm ∇Θ: 542.327 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.15523 norm ∇Θ: 466.63368 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.81204 norm ∇Θ: 476.72045 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.49445 norm ∇Θ: 530.31001 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.16571 norm ∇Θ: 511.70734 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.75391 norm ∇Θ: 467.21686 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.35406 norm ∇Θ: 512.95265 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.95372 norm ∇Θ: 488.15403 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.52687 norm ∇Θ: 486.27535 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.42218 norm ∇Θ: 488.186 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.17991 norm ∇Θ: 500.4247 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.81894 norm ∇Θ: 482.52248 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.61677 norm ∇Θ: 508.22941 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.34255 norm ∇Θ: 449.33132 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 10.07724 norm ∇Θ: 448.38689 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.84148 norm ∇Θ: 428.16065 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.56846 norm ∇Θ: 400.85693 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.33058 norm ∇Θ: 430.71325 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.09175 norm ∇Θ: 438.58189 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.90629 norm ∇Θ: 365.25958 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.78085 norm ∇Θ: 359.182 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.60755 norm ∇Θ: 375.18502 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.54245 norm ∇Θ: 398.67034 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.47611 norm ∇Θ: 334.29946 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.32208 norm ∇Θ: 302.84503 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.24543 norm ∇Θ: 368.23894 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.18654 norm ∇Θ: 315.49547 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.13861 norm ∇Θ: 295.80488 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.03285 norm ∇Θ: 293.40463 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.9513 norm ∇Θ: 275.89909 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.86266 norm ∇Θ: 230.0397 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.79947 norm ∇Θ: 245.25037 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.69724 norm ∇Θ: 237.54362 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.62609 norm ∇Θ: 178.71618 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.54349 norm ∇Θ: 237.3241 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.4809 norm ∇Θ: 200.50628 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.43233 norm ∇Θ: 138.70703 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.40119 norm ∇Θ: 183.31605 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.35507 norm ∇Θ: 200.68555 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.31491 norm ∇Θ: 136.59225 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.27762 norm ∇Θ: 179.80297 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.24619 norm ∇Θ: 147.95952 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.21929 norm ∇Θ: 128.025 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.19525 norm ∇Θ: 147.00788 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.17414 norm ∇Θ: 93.12918 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.15345 norm ∇Θ: 124.82203 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.16265 norm ∇Θ: 101.59303 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.16555 norm ∇Θ: 103.48741 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.13873 norm ∇Θ: 102.36415 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.10782 norm ∇Θ: 99.63519 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.06153 norm ∇Θ: 112.78838 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.01453 norm ∇Θ: 100.4793 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 6.9706 norm ∇Θ: 99.53631 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.94599 norm ∇Θ: 60.18114 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.92069 norm ∇Θ: 129.30111 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.90294 norm ∇Θ: 91.95549 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.89193 norm ∇Θ: 72.22184 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.87532 norm ∇Θ: 149.92053 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.85802 norm ∇Θ: 99.34455 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.84994 norm ∇Θ: 82.94801 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.83281 norm ∇Θ: 86.34794 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.82603 norm ∇Θ: 79.84088 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.80878 norm ∇Θ: 113.55251 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.79001 norm ∇Θ: 100.0344 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.78542 norm ∇Θ: 54.59029 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.78664 norm ∇Θ: 66.94663 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.78337 norm ∇Θ: 47.28118 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.7788 norm ∇Θ: 58.48584 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.73347 norm ∇Θ: 65.395 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.71677 norm ∇Θ: 66.87641 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.70841 norm ∇Θ: 68.80864 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.69983 norm ∇Θ: 63.59282 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.67497 norm ∇Θ: 61.94778 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.66906 norm ∇Θ: 88.51473 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.64949 norm ∇Θ: 64.92326 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
