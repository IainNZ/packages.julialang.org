>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.6
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.7
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1774.73828125 MB free)
Uptime: 57543.0 sec
Load Avg:  0.9970703125  0.98388671875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3690227 s       2313 s     169868 s    1051767 s         38 s
#2  3499 MHz     986464 s       4689 s      88359 s    4572534 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.1
26 additional packages:
 - BinDeps                       0.8.6
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.55.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.7
 - NaNMath                       0.3.1
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.1
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.20.1
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.18808 norm ∇Θ: 175.60647 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.86928 norm ∇Θ: 300.83876 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.59669 norm ∇Θ: 323.2009 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.23816 norm ∇Θ: 347.37752 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.29136 norm ∇Θ: 372.58728 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.25362 norm ∇Θ: 352.97985 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.30995 norm ∇Θ: 389.85851 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.66225 norm ∇Θ: 420.00896 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.1576 norm ∇Θ: 453.6554 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.35724 norm ∇Θ: 467.12198 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.91457 norm ∇Θ: 418.06036 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.29806 norm ∇Θ: 437.33483 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.37524 norm ∇Θ: 478.82549 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.86573 norm ∇Θ: 477.9529 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.0975 norm ∇Θ: 486.9128 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.44256 norm ∇Θ: 523.52658 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.9526 norm ∇Θ: 466.10462 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.23837 norm ∇Θ: 537.0822 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.77117 norm ∇Θ: 535.52334 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.46774 norm ∇Θ: 530.25647 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.11746 norm ∇Θ: 508.51468 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.82944 norm ∇Θ: 560.58286 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.58988 norm ∇Θ: 496.00595 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.31209 norm ∇Θ: 527.54405 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.14716 norm ∇Θ: 485.12427 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.95446 norm ∇Θ: 409.60212 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.64916 norm ∇Θ: 481.06496 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.33137 norm ∇Θ: 524.16272 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.1109 norm ∇Θ: 515.27871 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.90847 norm ∇Θ: 389.31974 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.69875 norm ∇Θ: 480.73575 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.50072 norm ∇Θ: 497.59829 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.29141 norm ∇Θ: 492.18572 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.28943 norm ∇Θ: 409.00903 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.18265 norm ∇Θ: 421.02789 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.99207 norm ∇Θ: 406.69114 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.86389 norm ∇Θ: 375.57676 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.7313 norm ∇Θ: 349.66028 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.62054 norm ∇Θ: 264.97259 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.50578 norm ∇Θ: 350.44705 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.38159 norm ∇Θ: 354.13224 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.23573 norm ∇Θ: 290.48637 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.11899 norm ∇Θ: 227.34001 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.01807 norm ∇Θ: 311.99745 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.93143 norm ∇Θ: 277.9189 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.86267 norm ∇Θ: 263.4184 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.78629 norm ∇Θ: 235.8661 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.70245 norm ∇Θ: 270.65943 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.64483 norm ∇Θ: 193.80291 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.61075 norm ∇Θ: 197.52857 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.5818 norm ∇Θ: 195.83828 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.56089 norm ∇Θ: 191.98265 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.51781 norm ∇Θ: 198.36014 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.49185 norm ∇Θ: 170.84342 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.46681 norm ∇Θ: 159.45257 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.44294 norm ∇Θ: 170.40029 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.45414 norm ∇Θ: 121.62219 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.45729 norm ∇Θ: 172.66917 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.46379 norm ∇Θ: 144.71408 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.46167 norm ∇Θ: 168.54946 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.52812 norm ∇Θ: 103.43396 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.55348 norm ∇Θ: 129.63283 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.53928 norm ∇Θ: 118.1947 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.51381 norm ∇Θ: 139.87702 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.42895 norm ∇Θ: 106.14984 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.35505 norm ∇Θ: 95.57851 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.26115 norm ∇Θ: 98.58987 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.21732 norm ∇Θ: 89.85118 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.17004 norm ∇Θ: 92.8896 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.09601 norm ∇Θ: 84.04509 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.03136 norm ∇Θ: 97.6939 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 7.00152 norm ∇Θ: 70.60701 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.93591 norm ∇Θ: 91.72366 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.90798 norm ∇Θ: 102.48865 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.87585 norm ∇Θ: 81.76594 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.84897 norm ∇Θ: 129.3614 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.82838 norm ∇Θ: 78.7487 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.8084 norm ∇Θ: 75.90312 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.7915 norm ∇Θ: 81.78239 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.78349 norm ∇Θ: 85.60443 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.79495 norm ∇Θ: 87.34377 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.79969 norm ∇Θ: 52.94731 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.82582 norm ∇Θ: 73.38355 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.84071 norm ∇Θ: 65.30771 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.84273 norm ∇Θ: 67.02132 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.81704 norm ∇Θ: 64.02076 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.78474 norm ∇Θ: 111.85046 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.78612 norm ∇Θ: 94.33363 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.73401 norm ∇Θ: 69.50405 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.73609 norm ∇Θ: 51.5347 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
