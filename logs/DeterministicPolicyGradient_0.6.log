>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.2.0
INFO: Installing Missings v0.2.9
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.16.0
INFO: Installing Polynomials v0.2.2
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.1
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2105.60546875 MB free)
Uptime: 66956.0 sec
Load Avg:  1.0068359375  1.001953125  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4014263 s       2813 s     268666 s    1517523 s         54 s
#2  3500 MHz    1286657 s       4030 s     135083 s    5130806 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.2
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.2.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.16.0
 - Polynomials                   0.2.2
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.20.1
 - URIParser                     0.3.1
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.17532 norm ∇Θ: 162.93524 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 26.20375 norm ∇Θ: 281.44804 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.96847 norm ∇Θ: 329.17985 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.78139 norm ∇Θ: 321.7793 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.64311 norm ∇Θ: 376.30484 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.59337 norm ∇Θ: 402.52989 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.83223 norm ∇Θ: 357.87158 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 20.22329 norm ∇Θ: 374.77563 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 19.70775 norm ∇Θ: 389.32799 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.90912 norm ∇Θ: 457.20566 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 18.4198 norm ∇Θ: 427.25898 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.95725 norm ∇Θ: 412.25163 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 17.21398 norm ∇Θ: 437.43983 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 16.65951 norm ∇Θ: 463.90268 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.91066 norm ∇Θ: 465.17708 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 15.19192 norm ∇Θ: 484.07462 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.75636 norm ∇Θ: 502.47379 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.32523 norm ∇Θ: 451.33259 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.73053 norm ∇Θ: 516.43271 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.22343 norm ∇Θ: 529.0917 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.79642 norm ∇Θ: 501.45226 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.55292 norm ∇Θ: 450.28698 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 12.37855 norm ∇Θ: 472.81892 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.95706 norm ∇Θ: 531.30792 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.57283 norm ∇Θ: 473.18902 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.31227 norm ∇Θ: 450.71736 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 11.03866 norm ∇Θ: 523.96065 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.68282 norm ∇Θ: 420.8237 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.33789 norm ∇Θ: 554.069 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 10.02595 norm ∇Θ: 398.90026 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.81144 norm ∇Θ: 390.81955 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.70218 norm ∇Θ: 399.98939 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.45466 norm ∇Θ: 427.35481 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.28805 norm ∇Θ: 360.68819 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.09441 norm ∇Θ: 364.49527 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.89536 norm ∇Θ: 412.19098 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.80274 norm ∇Θ: 373.02911 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.6654 norm ∇Θ: 306.44331 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.54362 norm ∇Θ: 309.062 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.45522 norm ∇Θ: 333.65234 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.32569 norm ∇Θ: 361.65257 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.20998 norm ∇Θ: 314.36648 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.14619 norm ∇Θ: 349.6304 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.03823 norm ∇Θ: 300.02997 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.01902 norm ∇Θ: 298.13337 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.95374 norm ∇Θ: 252.36342 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.86168 norm ∇Θ: 220.73142 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.79682 norm ∇Θ: 245.50492 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.7176 norm ∇Θ: 245.99159 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.67191 norm ∇Θ: 196.73787 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.64267 norm ∇Θ: 170.5381 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.60082 norm ∇Θ: 256.87588 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.55158 norm ∇Θ: 182.61652 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.50709 norm ∇Θ: 166.60427 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.45984 norm ∇Θ: 174.76374 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.42217 norm ∇Θ: 175.99764 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.36857 norm ∇Θ: 131.47581 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.33069 norm ∇Θ: 123.69719 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.29302 norm ∇Θ: 152.75906 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.25265 norm ∇Θ: 148.62434 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.22718 norm ∇Θ: 101.46797 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.20496 norm ∇Θ: 95.70137 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.17717 norm ∇Θ: 125.10943 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.15327 norm ∇Θ: 109.90161 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.1269 norm ∇Θ: 127.34352 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.12338 norm ∇Θ: 79.15457 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.11289 norm ∇Θ: 92.68821 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.09026 norm ∇Θ: 111.45639 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.05559 norm ∇Θ: 107.93607 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.01688 norm ∇Θ: 109.39844 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 7.0101 norm ∇Θ: 82.20628 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.98673 norm ∇Θ: 89.77158 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.95148 norm ∇Θ: 88.15823 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.93516 norm ∇Θ: 88.09888 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.91389 norm ∇Θ: 88.73047 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.8724 norm ∇Θ: 59.18354 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.84622 norm ∇Θ: 49.27227 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.82806 norm ∇Θ: 88.35877 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.81268 norm ∇Θ: 61.79867 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.78586 norm ∇Θ: 90.47868 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.77052 norm ∇Θ: 63.367 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.75245 norm ∇Θ: 61.38803 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.73525 norm ∇Θ: 60.93518 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.71531 norm ∇Θ: 62.82927 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.69983 norm ∇Θ: 79.66169 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.6893 norm ∇Θ: 60.44984 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.67922 norm ∇Θ: 52.30513 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.65677 norm ∇Θ: 78.53242 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.64647 norm ∇Θ: 59.60422 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.63374 norm ∇Θ: 93.81628 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
