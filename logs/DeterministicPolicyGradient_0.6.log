>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.6
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1740.98046875 MB free)
Uptime: 60652.0 sec
Load Avg:  0.9580078125  0.98046875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    3826979 s         94 s     168989 s    1167633 s         50 s
#2  3501 MHz    1091179 s       6898 s      91269 s    4757530 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.4
25 additional packages:
 - BinDeps                       0.8.6
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.53.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - NaNMath                       0.3.1
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.1
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.24808 norm ∇Θ: 164.62918 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.72384 norm ∇Θ: 333.20726 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.62655 norm ∇Θ: 331.94435 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.75468 norm ∇Θ: 334.03631 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.70851 norm ∇Θ: 354.73008 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.69352 norm ∇Θ: 369.5396 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.65264 norm ∇Θ: 388.48521 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.83517 norm ∇Θ: 452.16454 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.77765 norm ∇Θ: 394.75419 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.83308 norm ∇Θ: 438.33371 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.12331 norm ∇Θ: 447.53663 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.65016 norm ∇Θ: 422.10372 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.92096 norm ∇Θ: 390.42297 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.44778 norm ∇Θ: 531.86386 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.2286 norm ∇Θ: 507.07383 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.84319 norm ∇Θ: 521.53933 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.72047 norm ∇Θ: 499.18688 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.26412 norm ∇Θ: 513.65515 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.71691 norm ∇Θ: 507.38385 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.23794 norm ∇Θ: 462.97887 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.70551 norm ∇Θ: 440.65911 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.30216 norm ∇Θ: 464.30126 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.75448 norm ∇Θ: 478.26931 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.47903 norm ∇Θ: 474.30823 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.26862 norm ∇Θ: 484.20398 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.03216 norm ∇Θ: 460.17996 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.76166 norm ∇Θ: 487.84448 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.51027 norm ∇Θ: 430.44513 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.3068 norm ∇Θ: 495.05418 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 10.12736 norm ∇Θ: 417.04321 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 10.00144 norm ∇Θ: 484.27018 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.83086 norm ∇Θ: 380.7992 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.62526 norm ∇Θ: 467.84515 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.44716 norm ∇Θ: 389.20163 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.30306 norm ∇Θ: 398.37739 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 9.19759 norm ∇Θ: 445.13328 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.9872 norm ∇Θ: 355.99738 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.84677 norm ∇Θ: 329.84214 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.65614 norm ∇Θ: 326.47585 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.51354 norm ∇Θ: 337.1277 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.39917 norm ∇Θ: 332.40463 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.28351 norm ∇Θ: 254.79895 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.16945 norm ∇Θ: 320.65045 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.05821 norm ∇Θ: 307.33259 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.0141 norm ∇Θ: 291.31167 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.8853 norm ∇Θ: 239.19133 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.83283 norm ∇Θ: 261.29204 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.77057 norm ∇Θ: 255.33915 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.72438 norm ∇Θ: 290.28503 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.64123 norm ∇Θ: 267.49019 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.58039 norm ∇Θ: 217.68972 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.52467 norm ∇Θ: 154.27751 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.49478 norm ∇Θ: 160.57675 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.43804 norm ∇Θ: 164.41217 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.42695 norm ∇Θ: 206.71413 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.41562 norm ∇Θ: 216.40304 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.37482 norm ∇Θ: 223.68426 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.35711 norm ∇Θ: 131.35894 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.33636 norm ∇Θ: 180.68647 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.30701 norm ∇Θ: 166.18857 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.26983 norm ∇Θ: 113.63821 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.26111 norm ∇Θ: 120.31137 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.22698 norm ∇Θ: 162.32529 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.17385 norm ∇Θ: 113.55037 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.1305 norm ∇Θ: 131.5478 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.10206 norm ∇Θ: 90.18065 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.08454 norm ∇Θ: 114.52757 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.04283 norm ∇Θ: 102.60027 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.01455 norm ∇Θ: 108.34324 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 7.00429 norm ∇Θ: 83.94361 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.97799 norm ∇Θ: 121.88564 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.98953 norm ∇Θ: 100.25243 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.9889 norm ∇Θ: 93.69964 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.99292 norm ∇Θ: 95.45727 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.9975 norm ∇Θ: 118.20188 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.98237 norm ∇Θ: 108.8146 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.98082 norm ∇Θ: 140.20477 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.94764 norm ∇Θ: 81.95559 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.9075 norm ∇Θ: 77.78 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.87904 norm ∇Θ: 62.06404 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.85461 norm ∇Θ: 64.30874 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.83167 norm ∇Θ: 67.44627 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.79826 norm ∇Θ: 66.52089 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.80223 norm ∇Θ: 70.06619 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.75551 norm ∇Θ: 83.75385 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.75843 norm ∇Θ: 76.84476 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.71928 norm ∇Θ: 67.39335 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.67286 norm ∇Θ: 67.76086 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.64346 norm ∇Θ: 72.95331 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.6206 norm ∇Θ: 68.89365 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
