>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing Measures v0.1.0
INFO: Installing Missings v0.2.7
INFO: Installing NaNMath v0.3.1
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.6
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.20.1
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1777.59765625 MB free)
Uptime: 61494.0 sec
Load Avg:  1.0029296875  1.0146484375  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3676946 s       2852 s     171041 s    1436811 s         50 s
#2  3500 MHz    1110011 s       4643 s      93700 s    4795025 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.17.1
26 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.55.1
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.6
 - Measures                      0.1.0
 - Missings                      0.2.7
 - NaNMath                       0.3.1
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.1
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.6
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.20.1
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.16605 norm ∇Θ: 165.46415 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.86446 norm ∇Θ: 260.98137 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.48271 norm ∇Θ: 294.84228 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.70856 norm ∇Θ: 368.21647 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.44594 norm ∇Θ: 383.32016 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.25774 norm ∇Θ: 398.24587 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.32965 norm ∇Θ: 384.28591 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.44548 norm ∇Θ: 399.73411 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.66588 norm ∇Θ: 453.4556 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.09268 norm ∇Θ: 391.91033 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.51083 norm ∇Θ: 410.50232 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.11804 norm ∇Θ: 432.86852 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.75664 norm ∇Θ: 459.97937 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 16.30389 norm ∇Θ: 503.51407 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.4351 norm ∇Θ: 410.20167 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.90126 norm ∇Θ: 471.87221 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.49835 norm ∇Θ: 475.12532 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.13925 norm ∇Θ: 441.04926 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.61642 norm ∇Θ: 535.30312 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.17643 norm ∇Θ: 505.11374 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.58349 norm ∇Θ: 517.20244 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.11749 norm ∇Θ: 464.87246 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.73482 norm ∇Θ: 491.89263 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.49201 norm ∇Θ: 509.24842 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.36325 norm ∇Θ: 457.04096 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.94968 norm ∇Θ: 484.68052 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.67924 norm ∇Θ: 474.41525 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.4191 norm ∇Θ: 446.64611 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.1699 norm ∇Θ: 420.41935 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.84479 norm ∇Θ: 445.31462 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.70836 norm ∇Θ: 455.82751 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.50069 norm ∇Θ: 476.91918 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.32542 norm ∇Θ: 460.27427 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.18747 norm ∇Θ: 450.78628 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.01664 norm ∇Θ: 367.99346 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.80034 norm ∇Θ: 394.93356 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.62238 norm ∇Θ: 307.20942 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.47192 norm ∇Θ: 337.71974 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.3181 norm ∇Θ: 406.16737 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.21685 norm ∇Θ: 314.6738 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.12856 norm ∇Θ: 318.2106 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.05869 norm ∇Θ: 277.72255 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 7.99967 norm ∇Θ: 309.27876 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.93085 norm ∇Θ: 257.8525 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.84532 norm ∇Θ: 346.62135 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.78495 norm ∇Θ: 222.49881 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.73223 norm ∇Θ: 294.40996 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.68463 norm ∇Θ: 215.37048 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.63236 norm ∇Θ: 256.24743 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.5977 norm ∇Θ: 249.75744 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.54547 norm ∇Θ: 159.93524 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.51468 norm ∇Θ: 254.34381 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.46718 norm ∇Θ: 204.31804 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.423 norm ∇Θ: 167.2331 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.36539 norm ∇Θ: 202.38554 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.33008 norm ∇Θ: 179.98133 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.2965 norm ∇Θ: 129.5441 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.26759 norm ∇Θ: 144.58272 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.24661 norm ∇Θ: 150.22791 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.23602 norm ∇Θ: 125.56936 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.1861 norm ∇Θ: 124.81715 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.14475 norm ∇Θ: 123.26544 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.12244 norm ∇Θ: 144.322 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.07168 norm ∇Θ: 175.75665 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.05158 norm ∇Θ: 132.23017 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.03849 norm ∇Θ: 97.42257 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.02032 norm ∇Θ: 112.87403 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.00187 norm ∇Θ: 95.19685 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.97965 norm ∇Θ: 100.24433 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.97438 norm ∇Θ: 79.45071 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.97149 norm ∇Θ: 105.36367 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.96164 norm ∇Θ: 90.04278 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.93426 norm ∇Θ: 70.40721 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.91285 norm ∇Θ: 81.86255 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.89157 norm ∇Θ: 97.1074 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.89124 norm ∇Θ: 48.64532 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.86325 norm ∇Θ: 104.37111 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.85149 norm ∇Θ: 70.97354 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.82628 norm ∇Θ: 61.38644 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.77246 norm ∇Θ: 81.12813 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.73873 norm ∇Θ: 60.70439 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.71283 norm ∇Θ: 73.63996 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.70002 norm ∇Θ: 52.2495 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.69307 norm ∇Θ: 55.52773 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.6988 norm ∇Θ: 66.76253 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.70408 norm ∇Θ: 55.58441 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.68971 norm ∇Θ: 85.27864 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.68634 norm ∇Θ: 67.98397 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.6604 norm ∇Θ: 61.37922 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.64547 norm ∇Θ: 54.95513 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
