>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.5
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.3
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.8
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1746.63671875 MB free)
Uptime: 56792.0 sec
Load Avg:  1.01953125  1.0146484375  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3591555 s       7397 s     156269 s    1072844 s         32 s
#2  3500 MHz    1116664 s        201 s      87761 s    4329769 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.4
25 additional packages:
 - BinDeps                       0.8.5
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.46.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.3
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.22361 norm ∇Θ: 172.96379 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.62349 norm ∇Θ: 295.65277 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.26246 norm ∇Θ: 345.50162 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.11924 norm ∇Θ: 328.30211 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 21.73012 norm ∇Θ: 319.09138 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 20.84623 norm ∇Θ: 332.72816 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 20.05577 norm ∇Θ: 384.05628 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 19.35981 norm ∇Θ: 397.02611 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.83 norm ∇Θ: 412.932 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 17.90572 norm ∇Θ: 432.22239 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.17927 norm ∇Θ: 462.47015 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 16.50636 norm ∇Θ: 408.06103 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 15.68183 norm ∇Θ: 445.45842 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 15.29311 norm ∇Θ: 470.90337 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 14.84974 norm ∇Θ: 455.17622 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 14.25513 norm ∇Θ: 416.31317 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 13.80189 norm ∇Θ: 446.68685 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 13.25545 norm ∇Θ: 519.1842 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 12.91492 norm ∇Θ: 485.46224 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 12.51827 norm ∇Θ: 475.83591 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 12.2716 norm ∇Θ: 413.66797 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 11.79602 norm ∇Θ: 526.11845 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 11.38082 norm ∇Θ: 475.99002 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 11.0549 norm ∇Θ: 490.35112 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 10.94361 norm ∇Θ: 458.68303 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 10.63896 norm ∇Θ: 485.83424 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 10.40471 norm ∇Θ: 462.80741 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.14179 norm ∇Θ: 496.04136 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 9.94451 norm ∇Θ: 373.9762 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 9.7833 norm ∇Θ: 473.32143 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 9.64941 norm ∇Θ: 411.27791 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 9.44097 norm ∇Θ: 477.6749 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.25566 norm ∇Θ: 400.6855 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.04422 norm ∇Θ: 403.77981 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 8.87317 norm ∇Θ: 418.84423 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 8.70498 norm ∇Θ: 369.89406 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 8.47812 norm ∇Θ: 377.02642 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 8.40443 norm ∇Θ: 384.12507 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 8.26896 norm ∇Θ: 382.14999 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.19755 norm ∇Θ: 317.1517 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.12282 norm ∇Θ: 369.4284 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.10104 norm ∇Θ: 262.59237 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 7.98202 norm ∇Θ: 297.66506 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 7.91329 norm ∇Θ: 309.2175 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 7.84748 norm ∇Θ: 249.37751 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 7.78105 norm ∇Θ: 286.09647 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.69052 norm ∇Θ: 221.09018 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.61499 norm ∇Θ: 231.71421 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.56869 norm ∇Θ: 249.50264 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.51536 norm ∇Θ: 212.20411 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.46252 norm ∇Θ: 192.45135 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.42791 norm ∇Θ: 244.74744 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.40665 norm ∇Θ: 195.11074 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.36362 norm ∇Θ: 177.21823 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.32701 norm ∇Θ: 167.00221 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.2945 norm ∇Θ: 193.67582 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.26601 norm ∇Θ: 135.36509 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.2401 norm ∇Θ: 162.80643 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.20966 norm ∇Θ: 131.57348 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.17775 norm ∇Θ: 151.34806 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.15055 norm ∇Θ: 150.44073 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.12312 norm ∇Θ: 154.17112 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.10817 norm ∇Θ: 132.03699 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.08159 norm ∇Θ: 128.93896 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.05345 norm ∇Θ: 106.50285 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.02919 norm ∇Θ: 135.4232 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.00916 norm ∇Θ: 112.20933 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 6.98232 norm ∇Θ: 115.32543 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 6.95923 norm ∇Θ: 82.7922 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.93791 norm ∇Θ: 92.58195 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.91395 norm ∇Θ: 61.70296 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.89103 norm ∇Θ: 121.72751 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.87655 norm ∇Θ: 77.29866 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.86423 norm ∇Θ: 69.86221 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.85373 norm ∇Θ: 79.65032 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.83166 norm ∇Θ: 81.46153 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.81311 norm ∇Θ: 104.81786 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.79571 norm ∇Θ: 73.43578 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.77859 norm ∇Θ: 85.76349 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.76047 norm ∇Θ: 78.05806 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.74523 norm ∇Θ: 71.2793 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.72797 norm ∇Θ: 83.33685 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.71048 norm ∇Θ: 75.41233 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.69364 norm ∇Θ: 93.84349 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.68391 norm ∇Θ: 81.88509 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.66353 norm ∇Θ: 74.70638 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.64905 norm ∇Θ: 66.65406 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.63261 norm ∇Θ: 49.40603 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.61705 norm ∇Θ: 63.69736 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.60185 norm ∇Θ: 53.0118 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
