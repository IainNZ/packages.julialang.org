>>> 'Pkg.add("DeterministicPolicyGradient")' log
INFO: Cloning cache of DeterministicPolicyGradient from https://github.com/baggepinnen/DeterministicPolicyGradient.jl.git
INFO: Installing BinDeps v0.8.3
INFO: Installing ColorTypes v0.6.6
INFO: Installing Colors v0.8.2
INFO: Installing Contour v0.4.0
INFO: Installing ControlSystems v0.3.0
INFO: Installing DataStructures v0.7.4
INFO: Installing DeterministicPolicyGradient v0.0.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Measures v0.1.0
INFO: Installing NaNMath v0.3.0
INFO: Installing PlotThemes v0.2.0
INFO: Installing PlotUtils v0.4.4
INFO: Installing Plots v0.15.0
INFO: Installing Polynomials v0.2.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing Requires v0.4.3
INFO: Installing SHA v0.5.3
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.7
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.5
INFO: Installing URIParser v0.3.0
INFO: Building SpecialFunctions
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DeterministicPolicyGradient
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeterministicPolicyGradient")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1764.85546875 MB free)
Uptime: 55261.0 sec
Load Avg:  1.015625  1.001953125  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3580768 s       3455 s     150020 s     941759 s         19 s
#2  3499 MHz     984567 s       3654 s      84807 s    4340165 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DeterministicPolicyGradient   0.0.1
 - JSON                          0.16.3
25 additional packages:
 - BinDeps                       0.8.3
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.46.0
 - Contour                       0.4.0
 - ControlSystems                0.3.0
 - DataStructures                0.7.4
 - FixedPointNumbers             0.4.3
 - Measures                      0.1.0
 - NaNMath                       0.3.0
 - Nullables                     0.0.3
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.15.0
 - Polynomials                   0.2.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.3
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
INFO: Testing DeterministicPolicyGradient
WARNING: exp(x::AbstractArray{T}) where T <: Number is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] exp(::Array{Float64,2}) at ./deprecated.jl:57
 [3] ϕ(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl:49
 [4] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:65
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
101, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
201, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
301, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
401, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
501, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
601, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
701, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
801, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
901, cost: 27.23814 norm ∇Θ: 158.11388 norm ∇w: 50.0 norm ∇v: 50.0
WARNING: sqrt(x::AbstractArray{T}) where T <: Number is deprecated, use sqrt.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sqrt(::Array{Float64,2}) at ./deprecated.jl:57
 [3] dpg(::DeterministicPolicyGradient.DPGopts, ::DeterministicPolicyGradient.DPGfuns, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/src/dpg.jl:140
 [4] include_from_node1(::String) at ./loading.jl:576
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:305
 [7] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DeterministicPolicyGradient/test/runtests.jl, in expression starting on line 66
1001, cost: 27.24492 norm ∇Θ: 182.09988 norm ∇w: 50.0 norm ∇v: 50.0
1101, cost: 25.74265 norm ∇Θ: 306.5646 norm ∇w: 50.0 norm ∇v: 50.0
1201, cost: 24.58751 norm ∇Θ: 327.67206 norm ∇w: 50.0 norm ∇v: 50.0
1301, cost: 23.57651 norm ∇Θ: 335.76777 norm ∇w: 50.0 norm ∇v: 50.0
1401, cost: 22.5558 norm ∇Θ: 343.73612 norm ∇w: 50.0 norm ∇v: 50.0
1501, cost: 21.7688 norm ∇Θ: 357.20987 norm ∇w: 50.0 norm ∇v: 50.0
1601, cost: 21.03643 norm ∇Θ: 398.0728 norm ∇w: 50.0 norm ∇v: 50.0
1701, cost: 20.13479 norm ∇Θ: 414.35815 norm ∇w: 50.0 norm ∇v: 50.0
1801, cost: 18.96755 norm ∇Θ: 425.5592 norm ∇w: 50.0 norm ∇v: 50.0
1901, cost: 18.31541 norm ∇Θ: 377.61153 norm ∇w: 50.0 norm ∇v: 50.0
2001, cost: 17.49886 norm ∇Θ: 472.41106 norm ∇w: 50.0 norm ∇v: 50.0
2101, cost: 17.00117 norm ∇Θ: 428.83947 norm ∇w: 50.0 norm ∇v: 50.0
2201, cost: 16.63356 norm ∇Θ: 459.09083 norm ∇w: 50.0 norm ∇v: 50.0
2301, cost: 16.06209 norm ∇Θ: 435.26628 norm ∇w: 50.0 norm ∇v: 50.0
2401, cost: 15.53315 norm ∇Θ: 500.8233 norm ∇w: 50.0 norm ∇v: 50.0
2501, cost: 15.00662 norm ∇Θ: 536.33291 norm ∇w: 50.0 norm ∇v: 50.0
2601, cost: 14.5616 norm ∇Θ: 471.64083 norm ∇w: 50.0 norm ∇v: 50.0
2701, cost: 14.17568 norm ∇Θ: 454.07507 norm ∇w: 50.0 norm ∇v: 50.0
2801, cost: 13.84115 norm ∇Θ: 485.78451 norm ∇w: 50.0 norm ∇v: 50.0
2901, cost: 13.50692 norm ∇Θ: 484.96838 norm ∇w: 50.0 norm ∇v: 50.0
3001, cost: 13.18176 norm ∇Θ: 521.38373 norm ∇w: 50.0 norm ∇v: 50.0
3101, cost: 12.77419 norm ∇Θ: 521.36473 norm ∇w: 50.0 norm ∇v: 50.0
3201, cost: 12.43242 norm ∇Θ: 506.86157 norm ∇w: 50.0 norm ∇v: 50.0
3301, cost: 12.10671 norm ∇Θ: 513.73289 norm ∇w: 50.0 norm ∇v: 50.0
3401, cost: 11.95515 norm ∇Θ: 542.83766 norm ∇w: 50.0 norm ∇v: 50.0
3501, cost: 11.64096 norm ∇Θ: 494.66679 norm ∇w: 50.0 norm ∇v: 50.0
3601, cost: 11.37579 norm ∇Θ: 513.60616 norm ∇w: 50.0 norm ∇v: 50.0
3701, cost: 10.99668 norm ∇Θ: 470.69184 norm ∇w: 50.0 norm ∇v: 50.0
3801, cost: 10.78688 norm ∇Θ: 465.64086 norm ∇w: 50.0 norm ∇v: 50.0
3901, cost: 10.55133 norm ∇Θ: 412.39488 norm ∇w: 50.0 norm ∇v: 50.0
4001, cost: 10.32616 norm ∇Θ: 491.955 norm ∇w: 50.0 norm ∇v: 50.0
4101, cost: 10.09044 norm ∇Θ: 415.40921 norm ∇w: 50.0 norm ∇v: 50.0
4201, cost: 9.91875 norm ∇Θ: 415.69512 norm ∇w: 50.0 norm ∇v: 50.0
4301, cost: 9.7876 norm ∇Θ: 424.27721 norm ∇w: 50.0 norm ∇v: 50.0
4401, cost: 9.5985 norm ∇Θ: 383.91984 norm ∇w: 50.0 norm ∇v: 50.0
4501, cost: 9.50236 norm ∇Θ: 351.89108 norm ∇w: 50.0 norm ∇v: 50.0
4601, cost: 9.44029 norm ∇Θ: 382.80974 norm ∇w: 50.0 norm ∇v: 50.0
4701, cost: 9.28494 norm ∇Θ: 324.49349 norm ∇w: 50.0 norm ∇v: 50.0
4801, cost: 9.12109 norm ∇Θ: 276.24606 norm ∇w: 50.0 norm ∇v: 50.0
4901, cost: 8.97497 norm ∇Θ: 441.16525 norm ∇w: 50.0 norm ∇v: 50.0
5001, cost: 8.77569 norm ∇Θ: 288.92996 norm ∇w: 50.0 norm ∇v: 50.0
5101, cost: 8.60144 norm ∇Θ: 314.50438 norm ∇w: 50.0 norm ∇v: 50.0
5201, cost: 8.43473 norm ∇Θ: 280.48693 norm ∇w: 50.0 norm ∇v: 50.0
5301, cost: 8.31451 norm ∇Θ: 326.32214 norm ∇w: 50.0 norm ∇v: 50.0
5401, cost: 8.16526 norm ∇Θ: 318.44766 norm ∇w: 50.0 norm ∇v: 50.0
5501, cost: 8.02877 norm ∇Θ: 260.88009 norm ∇w: 50.0 norm ∇v: 50.0
5601, cost: 7.92641 norm ∇Θ: 249.05394 norm ∇w: 50.0 norm ∇v: 50.0
5701, cost: 7.8726 norm ∇Θ: 274.98984 norm ∇w: 50.0 norm ∇v: 50.0
5801, cost: 7.83853 norm ∇Θ: 219.9852 norm ∇w: 50.0 norm ∇v: 50.0
5901, cost: 7.8129 norm ∇Θ: 196.51234 norm ∇w: 50.0 norm ∇v: 50.0
6001, cost: 7.75482 norm ∇Θ: 146.20734 norm ∇w: 50.0 norm ∇v: 50.0
6101, cost: 7.70736 norm ∇Θ: 214.37694 norm ∇w: 50.0 norm ∇v: 50.0
6201, cost: 7.64723 norm ∇Θ: 202.84892 norm ∇w: 50.0 norm ∇v: 50.0
6301, cost: 7.55919 norm ∇Θ: 179.18041 norm ∇w: 50.0 norm ∇v: 50.0
6401, cost: 7.52156 norm ∇Θ: 153.04978 norm ∇w: 50.0 norm ∇v: 50.0
6501, cost: 7.49112 norm ∇Θ: 166.84967 norm ∇w: 50.0 norm ∇v: 50.0
6601, cost: 7.41325 norm ∇Θ: 146.02788 norm ∇w: 50.0 norm ∇v: 50.0
6701, cost: 7.36368 norm ∇Θ: 141.0371 norm ∇w: 50.0 norm ∇v: 50.0
6801, cost: 7.32422 norm ∇Θ: 178.84299 norm ∇w: 50.0 norm ∇v: 50.0
6901, cost: 7.27843 norm ∇Θ: 126.23889 norm ∇w: 50.0 norm ∇v: 50.0
7001, cost: 7.23376 norm ∇Θ: 182.79025 norm ∇w: 50.0 norm ∇v: 50.0
7101, cost: 7.20456 norm ∇Θ: 153.46583 norm ∇w: 50.0 norm ∇v: 50.0
7201, cost: 7.15938 norm ∇Θ: 140.56822 norm ∇w: 50.0 norm ∇v: 50.0
7301, cost: 7.12108 norm ∇Θ: 141.5069 norm ∇w: 50.0 norm ∇v: 50.0
7401, cost: 7.11047 norm ∇Θ: 94.46529 norm ∇w: 50.0 norm ∇v: 50.0
7501, cost: 7.08333 norm ∇Θ: 100.96401 norm ∇w: 50.0 norm ∇v: 50.0
7601, cost: 7.0555 norm ∇Θ: 109.47072 norm ∇w: 50.0 norm ∇v: 50.0
7701, cost: 7.03648 norm ∇Θ: 74.48457 norm ∇w: 50.0 norm ∇v: 50.0
7801, cost: 7.02346 norm ∇Θ: 159.82063 norm ∇w: 50.0 norm ∇v: 50.0
7901, cost: 6.9816 norm ∇Θ: 90.08982 norm ∇w: 50.0 norm ∇v: 50.0
8001, cost: 6.95128 norm ∇Θ: 93.77963 norm ∇w: 50.0 norm ∇v: 50.0
8101, cost: 6.93363 norm ∇Θ: 109.53925 norm ∇w: 50.0 norm ∇v: 50.0
8201, cost: 6.91294 norm ∇Θ: 83.31709 norm ∇w: 50.0 norm ∇v: 50.0
8301, cost: 6.89181 norm ∇Θ: 93.67232 norm ∇w: 50.0 norm ∇v: 50.0
8401, cost: 6.87146 norm ∇Θ: 74.44226 norm ∇w: 50.0 norm ∇v: 50.0
8501, cost: 6.84952 norm ∇Θ: 76.70973 norm ∇w: 50.0 norm ∇v: 50.0
8601, cost: 6.8293 norm ∇Θ: 68.13756 norm ∇w: 50.0 norm ∇v: 50.0
8701, cost: 6.81236 norm ∇Θ: 111.76784 norm ∇w: 50.0 norm ∇v: 50.0
8801, cost: 6.80349 norm ∇Θ: 82.92268 norm ∇w: 50.0 norm ∇v: 50.0
8901, cost: 6.78847 norm ∇Θ: 99.63764 norm ∇w: 50.0 norm ∇v: 50.0
9001, cost: 6.76779 norm ∇Θ: 80.68961 norm ∇w: 50.0 norm ∇v: 50.0
9101, cost: 6.74935 norm ∇Θ: 77.38301 norm ∇w: 50.0 norm ∇v: 50.0
9201, cost: 6.72613 norm ∇Θ: 85.38173 norm ∇w: 50.0 norm ∇v: 50.0
9301, cost: 6.71212 norm ∇Θ: 65.27693 norm ∇w: 50.0 norm ∇v: 50.0
9401, cost: 6.69794 norm ∇Θ: 65.50511 norm ∇w: 50.0 norm ∇v: 50.0
9501, cost: 6.68398 norm ∇Θ: 77.01231 norm ∇w: 50.0 norm ∇v: 50.0
9601, cost: 6.67643 norm ∇Θ: 54.61277 norm ∇w: 50.0 norm ∇v: 50.0
9701, cost: 6.6662 norm ∇Θ: 39.75828 norm ∇w: 50.0 norm ∇v: 50.0
9801, cost: 6.64796 norm ∇Θ: 66.42921 norm ∇w: 50.0 norm ∇v: 50.0
9901, cost: 6.62535 norm ∇Θ: 83.52199 norm ∇w: 50.0 norm ∇v: 50.0
INFO: DeterministicPolicyGradient tests passed

>>> End of log
