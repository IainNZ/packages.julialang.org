>>> 'Pkg.add("AdobeGlyphList")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of AdobeGlyphList from https://github.com/sambitdash/AdobeGlyphList.jl.git
[ Info: Installing AdobeGlyphList v0.0.2
[ Info: Package database updated

>>> 'Pkg.test("AdobeGlyphList")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4803
Commit ff7b6452f8 (2018-04-06 17:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3514 MHz     156571 s        108 s      14061 s     149908 s          4 s
       #2  3514 MHz     111044 s         42 s       7419 s     228425 s          0 s
       
  Memory: 2.939197540283203 GB (809.76953125 MB free)
  Uptime: 3546.0 sec
  Load Avg:  0.9814453125  0.97802734375  0.9462890625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - AdobeGlyphList                0.0.2
 - JSON                          0.17.2
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing AdobeGlyphList
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl:1
WARNING: importing deprecated binding Base.Pkg into AdobeGlyphList.
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl:4
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl:4
┌ Warning: `parse(T::Type{<:Integer}, s, base)` is deprecated, use `parse(T, s, base=base)` instead.
│   caller = (::getfield(AdobeGlyphList, Symbol("##4#6")))(::String) at AdobeGlyphList.jl:41
└ @ AdobeGlyphList AdobeGlyphList.jl:41
Error During Test at /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl:4
  Test threw exception ArgumentError("input string is empty or only contains whitespace")
  Expression: size(AdobeGlyphList.agl()) == (4281, 2)
  ArgumentError: input string is empty or only contains whitespace
  Stacktrace:
   [1] tryparse_internal(::Type{UInt16}, ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:91
   [2] #parse#363(::Int64, ::Function, ::Type{UInt16}, ::SubString{String}) at ./parse.jl:216
   [3] #parse at ./<missing>:0 [inlined]
   [4] parse(::Type{UInt16}, ::SubString{String}, ::Int64) at ./deprecated.jl:57
   [5] (::getfield(AdobeGlyphList, Symbol("##4#6")))(::String) at /home/vagrant/.julia/v0.7/AdobeGlyphList/src/AdobeGlyphList.jl:41
   [6] next at ./generator.jl:47 [inlined]
   [7] _collect at ./array.jl:565 [inlined]
   [8] collect_similar(::SubArray{String,1,Array{String,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}, ::Base.Generator{SubArray{String,1,Array{String,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true},getfield(AdobeGlyphList, Symbol("##4#6"))}) at ./array.jl:490
   [9] map(::Function, ::SubArray{String,1,Array{String,2},Tuple{Base.Slice{Base.OneTo{Int64}},Int64},true}) at ./abstractarray.jl:1986
   [10] agl() at /home/vagrant/.julia/v0.7/AdobeGlyphList/src/AdobeGlyphList.jl:39
   [11] top-level scope
   [12] include at ./boot.jl:314 [inlined]
   [13] include_relative(::Module, ::String) at ./loading.jl:1067
   [14] include(::Module, ::String) at ./sysimg.jl:29
   [15] exec_options(::Base.JLOptions) at ./client.jl:327
   [16] _start() at ./client.jl:455
ERROR: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for AdobeGlyphList
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/AdobeGlyphList/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#542(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: AdobeGlyphList had test errors

>>> End of log
