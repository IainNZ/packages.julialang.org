>>> 'Pkg.add("Opus")' log
INFO: Cloning cache of Opus from https://github.com/staticfloat/Opus.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing FileIO v0.3.1
INFO: Installing Ogg v0.0.2
INFO: Installing Opus v0.0.2
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building Ogg
INFO: Building Opus
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Opus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Opus")' log
Julia Version 0.6.0-pre.beta.9
Commit ceb0674 (2017-04-02 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (636.52734375 MB free)
Uptime: 11217.0 sec
Load Avg:  0.9541015625  0.9853515625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3513 MHz     644301 s       3722 s      57562 s     275420 s         28 s
#2  3513 MHz     166532 s       2172 s      27342 s     896600 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - Opus                          0.0.2
6 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - FileIO                        0.3.1
 - Ogg                           0.0.2
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing Opus
WARNING: could not import Base.writemime into Opus
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:305
 [6] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 21
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:418
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}) at ./deprecated.jl:51
 [3] (::##2#3)(::Float64) at ./<missing>:0
 [4] collect_to!(::Array{Array{Float64,1},1}, ::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}, ::Int64, ::Int64) at ./array.jl:451
 [5] collect(::Base.Generator{StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}},##2#3}) at ./array.jl:419
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 22
Error During Test
  Test threw an exception of type UndefVarError
  Expression: avg_roundtrip_error(sin_signal) < 0.01
  UndefVarError: readbytes not defined
  Stacktrace:
   [1] insert!(::Array{Array{UInt8,1},1}, ::Int64, ::Opus.OpusHead) at ./array.jl:789
   [2] #save#14(::Int64, ::Function, ::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Array{Float32,1}, ::Int64) at /home/vagrant/.julia/v0.6/Opus/src/encoder.jl:88
   [3] (::Opus.#kw##save)(::Array{Any,1}, ::Opus.#save, ::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Array{Float32,1}, ::Int64) at ./<missing>:0
   [4] #avg_roundtrip_error#1(::Int64, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Opus/test/runtests.jl:10
   [5] avg_roundtrip_error(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Opus/test/runtests.jl:9
   [6] include_from_node1(::String) at ./loading.jl:539
   [7] include(::String) at ./sysimg.jl:14
   [8] process_options(::Base.JLOptions) at ./client.jl:305
   [9] _start() at ./client.jl:371
ERROR: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/Opus/test/runtests.jl, in expression starting on line 26
================================[ ERROR: Opus ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Opus/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Opus had test errors

>>> End of log
