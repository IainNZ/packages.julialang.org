>>> 'Pkg.add("FastCombinations")' log
INFO: Cloning cache of FastCombinations from https://github.com/anthonyclays/FastCombinations.jl.git
INFO: Installing FastCombinations v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FastCombinations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FastCombinations")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (757.37890625 MB free)
Uptime: 33154.0 sec
Load Avg:  1.10546875  1.07177734375  1.08984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2002511 s       7806 s     153281 s     786074 s         44 s
#2  3500 MHz     916761 s         72 s      89186 s    2203537 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - FastCombinations              0.0.1
 - JSON                          0.12.0
1 additional packages:
 - Compat                        0.25.1
INFO: Testing FastCombinations
WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:307
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1447 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1547
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1603
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:893
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1101
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1131
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1152
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##190#191{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:485
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1105
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1152
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1786
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1677
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1597
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1621
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 20
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{Symbol,1}, ::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}, ::Int64, ::Int64) at ./array.jl:340
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:308
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1447 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1547
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1603
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:893
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1101
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1131
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1152
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##190#191{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:485
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1105
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1152
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1786
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1677
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1597
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1621
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 21
INFO: FastCombinations tests passed

>>> End of log
