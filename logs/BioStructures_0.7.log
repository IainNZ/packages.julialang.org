>>> 'Pkg.add("BioStructures")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of BioStructures from https://github.com/BioJulia/BioStructures.jl.git
[ Info: Installing Automa v0.5.0
[ Info: Installing BioCore v1.3.0
[ Info: Installing BioSequences v0.8.3
[ Info: Installing BioStructures v0.2.0
[ Info: Installing BioSymbols v1.2.0
[ Info: Installing BufferedStreams v0.4.0
[ Info: Installing Combinatorics v0.5.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing Formatting v0.3.0
[ Info: Installing IndexableBitVectors v0.1.2
[ Info: Installing IntervalTrees v0.4.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing Libz v0.2.4
[ Info: Installing Polynomials v0.2.1
[ Info: Installing Twiddle v0.4.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of BioStructures
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BioStructures")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4475
Commit c1e7c93169 (2018-03-06 19:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3511 MHz     990162 s         66 s      55816 s     320848 s         11 s
       #2  3511 MHz     259090 s         92 s      25064 s    1289682 s          0 s
       
  Memory: 2.93927001953125 GB (682.4375 MB free)
  Uptime: 16003.0 sec
  Load Avg:  1.01123046875  0.990234375  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BioStructures                 0.2.0
 - JSON                          0.17.1
16 additional packages:
 - Automa                        0.5.0
 - BioCore                       1.3.0
 - BioSequences                  0.8.3
 - BioSymbols                    1.2.0
 - BufferedStreams               0.4.0
 - Combinatorics                 0.5.0
 - Compat                        0.56.0
 - DataStructures                0.7.4
 - Formatting                    0.3.0
 - IndexableBitVectors           0.1.2
 - IntervalTrees                 0.4.1
 - IterTools                     0.2.1
 - Libz                          0.2.4
 - Nullables                     0.0.4
 - Polynomials                   0.2.1
 - Twiddle                       0.4.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing BioStructures
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/BioStructures/test/runtests.jl:3
┌ Warning: Deprecated syntax `parametric method syntax format{T <: Real}(x::T,; width::Int = -1, precision::Int = -1, leftjustified::Bool = false, zeropadding::Bool = false, commas::Bool = false, signed::Bool = false, positivespace::Bool = false, stripzeros::Bool = (precision == -1), parens::Bool = false, alternative::Bool = false, mixedfraction::Bool = false, mixedfractionsep::AbstractString = "_", fractionsep::AbstractString = "/", fractionwidth::Int = 0, tryden::Int = 0, suffix::AbstractString = "", autoscale::Symbol = :none, conversion::String = "")` around /home/vagrant/.julia/v0.7/Formatting/src/cformat.jl:146.
│ Use `format(x::T,; width::Int = -1, precision::Int = -1, leftjustified::Bool = false, zeropadding::Bool = false, commas::Bool = false, signed::Bool = false, positivespace::Bool = false, stripzeros::Bool = (precision == -1), parens::Bool = false, alternative::Bool = false, mixedfraction::Bool = false, mixedfractionsep::AbstractString = "_", fractionsep::AbstractString = "/", fractionwidth::Int = 0, tryden::Int = 0, suffix::AbstractString = "", autoscale::Symbol = :none, conversion::String = "") where T <: Real` instead.
└ @ nothing cformat.jl:146
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:29.
│ Use `struct` instead.
└ @ nothing fmtspec.jl:29
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:161.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:161
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:162.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:162
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:163.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:163
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:164.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:164
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/fmtspec.jl:165.
│ Use `mutable struct` instead.
└ @ nothing fmtspec.jl:165
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_int{Op}(out::IO, sch::Char, ip::String, zs::Integer, ax::Integer, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:72.
│ Use `_pfmt_int(out::IO, sch::Char, ip::String, zs::Integer, ax::Integer, op::Op) where Op` instead.
└ @ nothing fmtcore.jl:72
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_intdigits{Op, T <: Integer}(out::IO, ax::T, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:92.
│ Use `_pfmt_intdigits(out::IO, ax::T, op::Op) where {Op, T <: Integer}` instead.
└ @ nothing fmtcore.jl:92
┌ Warning: Deprecated syntax `parametric method syntax _pfmt_i{Op}(out::IO, fs::FormatSpec, x::Integer, op::Op)` around /home/vagrant/.julia/v0.7/Formatting/src/fmtcore.jl:107.
│ Use `_pfmt_i(out::IO, fs::FormatSpec, x::Integer, op::Op) where Op` instead.
└ @ nothing fmtcore.jl:107
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:5.
│ Use `struct` instead.
└ @ nothing formatexpr.jl:5
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:58.
│ Use `struct` instead.
└ @ nothing formatexpr.jl:58
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/Formatting/src/formatexpr.jl:80.
│ Use `mutable struct` instead.
└ @ nothing formatexpr.jl:80
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: NucleicAcid}(::Type{T}, nt::UInt8)` around /home/vagrant/.julia/v0.7/BioSymbols/src/nucleicacid.jl:44.
│ Use `Base.convert(#unused#::Type{T}, nt::UInt8) where T <: NucleicAcid` instead.
└ @ nothing nucleicacid.jl:44
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: NucleicAcid}(::Type{UInt8}, nt::T)` around /home/vagrant/.julia/v0.7/BioSymbols/src/nucleicacid.jl:45.
│ Use `Base.convert(#unused#::Type{UInt8}, nt::T) where T <: NucleicAcid` instead.
└ @ nothing nucleicacid.jl:45
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Number, S <: NucleicAcid}(::Type{T}, nt::S)` around /home/vagrant/.julia/v0.7/BioSymbols/src/nucleicacid.jl:46.
│ Use `Base.convert(#unused#::Type{T}, nt::S) where {T <: Number, S <: NucleicAcid}` instead.
└ @ nothing nucleicacid.jl:46
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Number, S <: NucleicAcid}(::Type{S}, nt::T)` around /home/vagrant/.julia/v0.7/BioSymbols/src/nucleicacid.jl:47.
│ Use `Base.convert(#unused#::Type{S}, nt::T) where {T <: Number, S <: NucleicAcid}` instead.
└ @ nothing nucleicacid.jl:47
ERROR: LoadError: LoadError: syntax: malformed expression
Stacktrace:
 [1] include at ./boot.jl:305 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1072
 [3] include at ./sysimg.jl:29 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/BioSymbols/src/BioSymbols.jl:11
 [5] top-level scope
 [6] include at ./boot.jl:305 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1072
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:308 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BioSymbols/src/nucleicacid.jl:53
in expression starting at /home/vagrant/.julia/v0.7/BioSymbols/src/BioSymbols.jl:103
ERROR: LoadError: Failed to precompile BioSymbols to /home/vagrant/.julia/compiled/v0.7/BioSymbols.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1206
 [3] _require(::Base.PkgId) at ./loading.jl:979
 [4] require(::Base.PkgId) at ./loading.jl:879
 [5] require(::Module, ::Symbol) at ./loading.jl:874
 [6] include at ./boot.jl:305 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1072
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:308 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BioStructures/src/BioStructures.jl:17
ERROR: LoadError: Failed to precompile BioStructures to /home/vagrant/.julia/compiled/v0.7/BioStructures.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1206
 [3] _require(::Base.PkgId) at ./loading.jl:1008
 [4] require(::Base.PkgId) at ./loading.jl:879
 [5] require(::Module, ::Symbol) at ./loading.jl:874
 [6] include at ./boot.jl:305 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1072
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/BioStructures/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for BioStructures
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BioStructures/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#534(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:276
│     [17] top-level scope
│     [18] eval at ./boot.jl:308 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: BioStructures had test errors

>>> End of log
