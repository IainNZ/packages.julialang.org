>>> 'Pkg.add("BioBridgeR")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Cloning cache of BioBridgeR from https://github.com/BioJulia/BioBridgeR.jl.git
[ Info: Cloning cache of RCall from https://github.com/JuliaInterop/RCall.jl.git
[ Info: Installing Automa v0.4.0
[ Info: Installing AxisArrays v0.2.0
[ Info: Installing BinDeps v0.8.6
[ Info: Installing BioBridgeR v0.1.1
[ Info: Installing BioCore v1.2.1
[ Info: Installing BioSequences v0.8.1
[ Info: Installing BioSymbols v1.2.0
[ Info: Installing BufferedStreams v0.3.3
[ Info: Installing CategoricalArrays v0.3.3
[ Info: Installing CodecZlib v0.4.2
[ Info: Installing Combinatorics v0.5.0
[ Info: Installing DataArrays v0.7.0
[ Info: Installing DataFrames v0.11.5
[ Info: Installing DataStreams v0.3.4
[ Info: Installing DataStructures v0.7.4
[ Info: Installing IndexableBitVectors v0.1.2
[ Info: Installing IntervalSets v0.1.1
[ Info: Installing IntervalTrees v0.4.1
[ Info: Installing IterTools v0.2.1
[ Info: Installing Missings v0.2.6
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing Polynomials v0.2.1
[ Info: Installing RCall v0.10.1
[ Info: Installing RangeArrays v0.2.0
[ Info: Installing Reexport v0.1.0
[ Info: Installing SHA v0.5.6
[ Info: Installing SortingAlgorithms v0.2.0
[ Info: Installing SpecialFunctions v0.3.8
[ Info: Installing StatsBase v0.19.5
[ Info: Installing TranscodingStreams v0.4.1
[ Info: Installing Twiddle v0.4.0
[ Info: Installing URIParser v0.3.0
[ Info: Installing WeakRefStrings v0.4.1
[ Info: Building SpecialFunctions
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_userinfo_char at parser.jl:4 [inlined]
└ @ Core parser.jl:4
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
┌ Warning: `isalnum(c::Char)` is deprecated, use `isalpha(c) || isnumeric(c)` instead.
│   caller = is_host_char at parser.jl:8 [inlined]
└ @ Core parser.jl:8
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
[ Info: Package database updated

>>> 'Pkg.test("BioBridgeR")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3703
Commit 358ccc2b20 (2018-02-02 20:43 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3498 MHz     989616 s        104 s      56640 s     291749 s         13 s
       #2  3498 MHz     225022 s         41 s      24955 s    1268534 s          0 s
       
  Memory: 2.93927001953125 GB (904.76171875 MB free)
  Uptime: 15500.0 sec
  Load Avg:  0.9765625  0.998046875  0.970703125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - BioBridgeR                    0.1.1
 - JSON                          0.16.4
34 additional packages:
 - Automa                        0.4.0
 - AxisArrays                    0.2.0
 - BinDeps                       0.8.6
 - BioCore                       1.2.1
 - BioSequences                  0.8.1
 - BioSymbols                    1.2.0
 - BufferedStreams               0.3.3
 - CategoricalArrays             0.3.3
 - CodecZlib                     0.4.2
 - Combinatorics                 0.5.0
 - Compat                        0.51.0
 - DataArrays                    0.7.0
 - DataFrames                    0.11.5
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - IndexableBitVectors           0.1.2
 - IntervalSets                  0.1.1
 - IntervalTrees                 0.4.1
 - IterTools                     0.2.1
 - Missings                      0.2.6
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - Polynomials                   0.2.1
 - RCall                         0.10.1
 - RangeArrays                   0.2.0
 - Reexport                      0.1.0
 - SHA                           0.5.6
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.8
 - StatsBase                     0.19.5
 - TranscodingStreams            0.4.1
 - Twiddle                       0.4.0
 - URIParser                     0.3.0
 - WeakRefStrings                0.4.1
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Testing BioBridgeR
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/BioBridgeR/test/runtests.jl:3
┌ Warning: Deprecated syntax `parametric method syntax (::Type{StableDict{K, V}}){K, V}()` around /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:12.
│ Use `(::Type{StableDict{K, V}})() where {K, V}` instead.
└ @ nothing sdict.jl:12
┌ Warning: Deprecated syntax `parametric method syntax (::Type{StableDict}){K, V}(dict::StableDict{K, V})` around /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:20.
│ Use `(::Type{StableDict})(dict::StableDict{K, V}) where {K, V}` instead.
└ @ nothing sdict.jl:20
WARNING: importing deprecated binding Base.Associative into Automa.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:4
┌ Warning: Deprecated syntax `parametric method syntax StableDict{K, V}(kvs::Pair{K, V}...)` around /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:29.
│ Use `StableDict(kvs::Pair{K, V}...) where {K, V}` instead.
└ @ nothing sdict.jl:29
┌ Warning: Deprecated syntax `parametric method syntax (::Type{StableDict{K, V}}){K, V}(kvs)` around /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:37.
│ Use `(::Type{StableDict{K, V}})(kvs) where {K, V}` instead.
└ @ nothing sdict.jl:37
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{K, V}(::Type{StableDict{K, V}}, dict::Associative)` around /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:53.
│ Use `Base.convert(#unused#::Type{StableDict{K, V}}, dict::Associative) where {K, V}` instead.
└ @ nothing sdict.jl:53
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Automa/src/sdict.jl:52
┌ Warning: Deprecated syntax `parametric method syntax (::Type{StableSet{T}}){T}()` around /home/vagrant/.julia/v0.7/Automa/src/sset.jl:8.
│ Use `(::Type{StableSet{T}})() where T` instead.
└ @ nothing sset.jl:8
WARNING: importing deprecated binding Base.Void into Automa.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Automa/src/sset.jl:4
┌ Warning: Deprecated syntax `parametric method syntax Base.eltype{T}(::Type{StableSet{T}})` around /home/vagrant/.julia/v0.7/Automa/src/sset.jl:31.
│ Use `Base.eltype(#unused#::Type{StableSet{T}}) where T` instead.
└ @ nothing sset.jl:31
WARNING: importing deprecated binding Base.Nullable into RegExp.
ERROR: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:296 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1012
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/Automa/src/Automa.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:296 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1012
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:299 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Automa/src/re.jl:13
in expression starting at /home/vagrant/.julia/v0.7/Automa/src/Automa.jl:15
ERROR: LoadError: Failed to precompile Automa to /home/vagrant/.julia/lib/v0.7/Automa.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:920
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:296 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] top-level scope
 [9] eval at ./boot.jl:299 [inlined]
 [10] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BioSymbols/src/BioSymbols.jl:99
ERROR: LoadError: LoadError: Failed to precompile BioSymbols to /home/vagrant/.julia/lib/v0.7/BioSymbols.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:920
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:296 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include at ./sysimg.jl:26 [inlined]
 [8] include(::String) at /home/vagrant/.julia/v0.7/BioBridgeR/src/BioBridgeR.jl:1
 [9] top-level scope
 [10] include at ./boot.jl:296 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:1012
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] top-level scope
 [14] eval at ./boot.jl:299 [inlined]
 [15] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/BioBridgeR/src/ape/ape.jl:36
in expression starting at /home/vagrant/.julia/v0.7/BioBridgeR/src/BioBridgeR.jl:3
ERROR: LoadError: Failed to precompile BioBridgeR to /home/vagrant/.julia/lib/v0.7/BioBridgeR.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:949
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:296 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] exec_options(::Base.JLOptions) at ./client.jl:332
 [9] _start() at ./client.jl:447
in expression starting at /home/vagrant/.julia/v0.7/BioBridgeR/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for BioBridgeR
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/BioBridgeR/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:299 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
ERROR: BioBridgeR had test errors

>>> End of log
