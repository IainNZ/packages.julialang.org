>>> 'Pkg.add("GeostatInversion")' log
INFO: Cloning cache of GeostatInversion from https://github.com/madsjulia/GeostatInversion.jl.git
INFO: Cloning cache of Grid from https://github.com/timholy/Grid.jl.git
INFO: Installing BinDeps v0.5.0
INFO: Installing Blosc v0.2.0
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.1
INFO: Installing GeostatInversion v0.2.0
INFO: Installing Grid v0.4.2
INFO: Installing HDF5 v0.8.1
INFO: Installing IterativeSolvers v0.3.0
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing RecipesBase v0.1.0
INFO: Installing RobustPmap v0.2.2
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.14.1
INFO: Installing SugarBLAS v0.0.3
INFO: Installing URIParser v0.1.8
INFO: Installing UnicodePlots v0.2.3
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Blosc
INFO: Building HDF5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GeostatInversion
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GeostatInversion")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2094.55078125 MB free)
Uptime: 38226.0 sec
Load Avg:  1.00830078125  0.94091796875  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2393042 s      11732 s     175248 s     776709 s         69 s
#2  3499 MHz     897478 s       2331 s     103936 s    2689736 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - GeostatInversion              0.2.0
 - JSON                          0.11.0
20 additional packages:
 - BinDeps                       0.5.0
 - Blosc                         0.2.0
 - Compat                        0.25.0
 - DataStructures                0.5.3
 - FileIO                        0.3.1
 - Grid                          0.4.2
 - HDF5                          0.8.1
 - IterativeSolvers              0.3.0
 - JLD                           0.6.10
 - LegacyStrings                 0.2.1
 - LinearMaps                    0.3.0
 - RecipesBase                   0.1.0
 - RobustPmap                    0.2.2
 - SHA                           0.3.2
 - SpecialFunctions              0.1.1
 - StatsBase                     0.14.1
 - SugarBLAS                     0.0.3
 - URIParser                     0.1.8
 - UnicodePlots                  0.2.3
 - WoodburyMatrices              0.2.2
INFO: Testing GeostatInversion
ERROR: LoadError: LoadError: MethodError: no method matching getindex(::Float64, ::UnitRange{Int64})
 in pcgalsqriteration(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.5/GeostatInversion/src/lsqr.jl:56
 in #pcgalsqr#6(::Int64, ::Float64, ::Float64, ::Function, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/GeostatInversion/src/lsqr.jl:26
 in pcgalsqr(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/GeostatInversion/src/lsqr.jl:21
 in simpletestpcga(::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.5/GeostatInversion/test/testrpcga.jl:114
 in macro expansion; at /home/vagrant/.julia/v0.5/GeostatInversion/test/testrpcga.jl:149 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/GeostatInversion/test/testrpcga.jl, in expression starting on line 145
while loading /home/vagrant/.julia/v0.5/GeostatInversion/test/runtests.jl, in expression starting on line 1
==========================[ ERROR: GeostatInversion ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/GeostatInversion/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: GeostatInversion had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
