>>> 'Pkg.add("Jacobi")' log
┌ Info: Cloning cache of Jacobi from https://github.com/pjabardo/Jacobi.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing Jacobi v0.3.0                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Jacobi
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Jacobi")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1613290 s         56 s      86616 s     375102 s          5 s
       #2  3499 MHz     236790 s         96 s      30512 s    2200177 s          0 s
       
  Memory: 2.93927001953125 GB (1516.48828125 MB free)
  Uptime: 25025.0 sec
  Load Avg:  1.01513671875  0.998046875  0.9599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - Jacobi                        0.3.0
3 additional packages:
 - Compat                        0.44.0
 - Nullables                     0.0.2
 - Polynomials                   0.2.0
[ Info: Testing Jacobi                             @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Jacobi/test/testjacobi.jl:1
┌ Warning: Deprecated syntax `parametric method syntax jacobi!{T <: Number}(x::AbstractArray{T}, n, a, b, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:71.
│ Use `jacobi!(x::AbstractArray{T}, n, a, b, y::AbstractArray{T}) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:71
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n, a, b)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:78.
│ Use `jacobi(x::AbstractArray{T}, n, a, b) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:78
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:79.
│ Use `jacobi(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:79
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n, a)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:80.
│ Use `jacobi(x::AbstractArray{T}, n, a) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:80
┌ Warning: Deprecated syntax `parametric method syntax djacobi!{T <: Number}(x::AbstractArray{T}, n, a, b, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:92.
│ Use `djacobi!(x::AbstractArray{T}, n, a, b, y::AbstractArray{T}) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:92
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n, a, b)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:99.
│ Use `djacobi(x::AbstractArray{T}, n, a, b) where T <: Number` instead.
└                                                       @ nothing jac_poly.jl:99
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:100.
│ Use `djacobi(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                      @ nothing jac_poly.jl:100
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n, a)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:101.
│ Use `djacobi(x::AbstractArray{T}, n, a) where T <: Number` instead.
└                                                      @ nothing jac_poly.jl:101
┌ Warning: Deprecated syntax `parametric method syntax eps1{T <: AbstractFloat}(::Type{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:104.
│ Use `eps1(#unused#::Type{T}) where T <: AbstractFloat` instead.
└                                                      @ nothing jac_poly.jl:104
┌ Warning: Deprecated syntax `parametric method syntax eps1{T <: AbstractFloat}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:105.
│ Use `eps1(#unused#::Type{Complex{T}}) where T <: AbstractFloat` instead.
└                                                      @ nothing jac_poly.jl:105
┌ Warning: Deprecated syntax `parametric method syntax jacobi_zeros!{T <: Number}(m, alpha, beta, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:127.
│ Use `jacobi_zeros!(m, alpha, beta, x::AbstractArray{T}) where T <: Number` instead.
└                                                      @ nothing jac_poly.jl:127
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:133.
└                                                      @ nothing jac_poly.jl:133
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:134.
└                                                      @ nothing jac_poly.jl:134
┌ Warning: Deprecated syntax `parametric method syntax jacobi_zeros{T <: Number}(m, a, b, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:174.
│ Use `jacobi_zeros(m, a, b, #s3::Type{T} = Float64) where T <: Number` instead.
└                                                      @ nothing jac_poly.jl:174
┌ Warning: Deprecated syntax `parametric method syntax chebyshev!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:44.
│ Use `chebyshev!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                      @ nothing chebyshev.jl:44
┌ Warning: Deprecated syntax `parametric method syntax chebyshev{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:51.
│ Use `chebyshev(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                      @ nothing chebyshev.jl:51
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:80.
│ Use `chebyshev2!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                      @ nothing chebyshev.jl:80
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:87.
│ Use `chebyshev2(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                      @ nothing chebyshev.jl:87
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:93.
│ Use `dchebyshev!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                      @ nothing chebyshev.jl:93
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:100.
│ Use `dchebyshev(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:100
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev2!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:132.
│ Use `dchebyshev2!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:132
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev2{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:139.
│ Use `dchebyshev2(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:139
┌ Warning: Deprecated syntax `parametric method syntax chebyshev_zeros!{T <: Number}(n, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:146.
│ Use `chebyshev_zeros!(n, x::AbstractArray{T}) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:146
┌ Warning: Deprecated syntax `parametric method syntax chebyshev_zeros{T <: Number}(n, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:156.
│ Use `chebyshev_zeros(n, #s3::Type{T} = Float64) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:156
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2_zeros!{T <: Number}(n, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:160.
│ Use `chebyshev2_zeros!(n, x::AbstractArray{T}) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:160
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2_zeros{T <: Number}(n, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:169.
│ Use `chebyshev2_zeros(n, #s3::Type{T} = Float64) where T <: Number` instead.
└                                                     @ nothing chebyshev.jl:169
┌ Warning: Deprecated syntax `parametric method syntax legendre!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:32.
│ Use `legendre!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                       @ nothing legendre.jl:32
┌ Warning: Deprecated syntax `parametric method syntax legendre{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:39.
│ Use `legendre(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                       @ nothing legendre.jl:39
┌ Warning: Deprecated syntax `parametric method syntax dlegendre!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:47.
│ Use `dlegendre!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└                                                       @ nothing legendre.jl:47
┌ Warning: Deprecated syntax `parametric method syntax dlegendre{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:54.
│ Use `dlegendre(x::AbstractArray{T}, n) where T <: Number` instead.
└                                                       @ nothing legendre.jl:54
ERROR: LoadError: LoadError: LoadError: LoadError: syntax: extra token "QUADRATURE_TYPE" after end of expression
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] include at ./sysimg.jl:26 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/Jacobi/src/Jacobi.jl:1
 [5] top-level scope
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:293 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] include(::String) at ./sysimg.jl:65
 [14] top-level scope
 [15] include at ./boot.jl:293 [inlined]
 [16] include_relative(::Module, ::String) at ./loading.jl:521
 [17] include(::Module, ::String) at ./sysimg.jl:26
 [18] process_options(::Base.JLOptions) at ./client.jl:324
 [19] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/src/gauss_quad.jl:1
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/src/Jacobi.jl:25
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/test/testjacobi.jl:4
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/test/runtests.jl:3
┌ Error: ------------------------------------------------------------
│ # Testing failed for Jacobi
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Jacobi/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: Jacobi had test errors

>>> End of log
