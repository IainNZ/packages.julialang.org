>>> 'Pkg.add("Jacobi")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Jacobi from https://github.com/pjabardo/Jacobi.jl.git
[ Info: Installing Jacobi v0.3.0
[ Info: Installing Polynomials v0.3.0
[ Info: Package database updated

>>> 'Pkg.test("Jacobi")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2303505 s       6848 s     177417 s     594515 s         16 s
       #2  3499 MHz     502114 s       1725 s      62920 s    2986757 s          0 s
       
  Memory: 2.939197540283203 GB (1399.6015625 MB free)
  Uptime: 36215.0 sec
  Load Avg:  0.98046875  0.97705078125  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - Jacobi                        0.3.0
3 additional packages:
 - Compat                        0.64.0
 - Nullables                     0.0.5
 - Polynomials                   0.3.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Jacobi
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/Jacobi/test/testjacobi.jl:1
┌ Warning: Deprecated syntax `parametric method syntax jacobi!{T <: Number}(x::AbstractArray{T}, n, a, b, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:71.
│ Use `jacobi!(x::AbstractArray{T}, n, a, b, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing jac_poly.jl:71
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n, a, b)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:78.
│ Use `jacobi(x::AbstractArray{T}, n, a, b) where T <: Number` instead.
└ @ nothing jac_poly.jl:78
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:79.
│ Use `jacobi(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing jac_poly.jl:79
┌ Warning: Deprecated syntax `parametric method syntax jacobi{T <: Number}(x::AbstractArray{T}, n, a)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:80.
│ Use `jacobi(x::AbstractArray{T}, n, a) where T <: Number` instead.
└ @ nothing jac_poly.jl:80
┌ Warning: Deprecated syntax `parametric method syntax djacobi!{T <: Number}(x::AbstractArray{T}, n, a, b, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:92.
│ Use `djacobi!(x::AbstractArray{T}, n, a, b, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing jac_poly.jl:92
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n, a, b)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:99.
│ Use `djacobi(x::AbstractArray{T}, n, a, b) where T <: Number` instead.
└ @ nothing jac_poly.jl:99
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:100.
│ Use `djacobi(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing jac_poly.jl:100
┌ Warning: Deprecated syntax `parametric method syntax djacobi{T <: Number}(x::AbstractArray{T}, n, a)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:101.
│ Use `djacobi(x::AbstractArray{T}, n, a) where T <: Number` instead.
└ @ nothing jac_poly.jl:101
┌ Warning: Deprecated syntax `parametric method syntax eps1{T <: AbstractFloat}(::Type{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:104.
│ Use `eps1(#unused#::Type{T}) where T <: AbstractFloat` instead.
└ @ nothing jac_poly.jl:104
┌ Warning: Deprecated syntax `parametric method syntax eps1{T <: AbstractFloat}(::Type{Complex{T}})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:105.
│ Use `eps1(#unused#::Type{Complex{T}}) where T <: AbstractFloat` instead.
└ @ nothing jac_poly.jl:105
┌ Warning: Deprecated syntax `parametric method syntax jacobi_zeros!{T <: Number}(m, alpha, beta, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:127.
│ Use `jacobi_zeros!(m, alpha, beta, x::AbstractArray{T}) where T <: Number` instead.
└ @ nothing jac_poly.jl:127
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:133.
└ @ nothing jac_poly.jl:133
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:134.
└ @ nothing jac_poly.jl:134
┌ Warning: Deprecated syntax `parametric method syntax jacobi_zeros{T <: Number}(m, a, b, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/jac_poly.jl:174.
│ Use `jacobi_zeros(m, a, b, #s3::Type{T} = Float64) where T <: Number` instead.
└ @ nothing jac_poly.jl:174
┌ Warning: Deprecated syntax `parametric method syntax chebyshev!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:44.
│ Use `chebyshev!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:44
┌ Warning: Deprecated syntax `parametric method syntax chebyshev{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:51.
│ Use `chebyshev(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing chebyshev.jl:51
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:80.
│ Use `chebyshev2!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:80
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:87.
│ Use `chebyshev2(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing chebyshev.jl:87
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:93.
│ Use `dchebyshev!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:93
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:100.
│ Use `dchebyshev(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing chebyshev.jl:100
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev2!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:132.
│ Use `dchebyshev2!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:132
┌ Warning: Deprecated syntax `parametric method syntax dchebyshev2{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:139.
│ Use `dchebyshev2(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing chebyshev.jl:139
┌ Warning: Deprecated syntax `parametric method syntax chebyshev_zeros!{T <: Number}(n, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:146.
│ Use `chebyshev_zeros!(n, x::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:146
┌ Warning: Deprecated syntax `parametric method syntax chebyshev_zeros{T <: Number}(n, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:156.
│ Use `chebyshev_zeros(n, #s3::Type{T} = Float64) where T <: Number` instead.
└ @ nothing chebyshev.jl:156
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2_zeros!{T <: Number}(n, x::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:160.
│ Use `chebyshev2_zeros!(n, x::AbstractArray{T}) where T <: Number` instead.
└ @ nothing chebyshev.jl:160
┌ Warning: Deprecated syntax `parametric method syntax chebyshev2_zeros{T <: Number}(n, ::Type{T} = Float64)` around /home/vagrant/.julia/v0.7/Jacobi/src/chebyshev.jl:169.
│ Use `chebyshev2_zeros(n, #s3::Type{T} = Float64) where T <: Number` instead.
└ @ nothing chebyshev.jl:169
┌ Warning: Deprecated syntax `parametric method syntax legendre!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:32.
│ Use `legendre!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing legendre.jl:32
┌ Warning: Deprecated syntax `parametric method syntax legendre{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:39.
│ Use `legendre(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing legendre.jl:39
┌ Warning: Deprecated syntax `parametric method syntax dlegendre!{T <: Number}(x::AbstractArray{T}, n, y::AbstractArray{T})` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:47.
│ Use `dlegendre!(x::AbstractArray{T}, n, y::AbstractArray{T}) where T <: Number` instead.
└ @ nothing legendre.jl:47
┌ Warning: Deprecated syntax `parametric method syntax dlegendre{T <: Number}(x::AbstractArray{T}, n)` around /home/vagrant/.julia/v0.7/Jacobi/src/legendre.jl:54.
│ Use `dlegendre(x::AbstractArray{T}, n) where T <: Number` instead.
└ @ nothing legendre.jl:54
ERROR: LoadError: LoadError: LoadError: LoadError: syntax: extra token "QUADRATURE_TYPE" after end of expression
Stacktrace:
 [1] include at ./boot.jl:314 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1067
 [3] include at ./sysimg.jl:29 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/Jacobi/src/Jacobi.jl:1
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] _require(::Base.PkgId) at ./loading.jl:993
 [9] require(::Base.PkgId) at ./loading.jl:874
 [10] require(::Module, ::Symbol) at ./loading.jl:869
 [11] include at ./boot.jl:314 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] include(::String) at ./sysimg.jl:68
 [15] top-level scope
 [16] include at ./boot.jl:314 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1067
 [18] include(::Module, ::String) at ./sysimg.jl:29
 [19] exec_options(::Base.JLOptions) at ./client.jl:327
 [20] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/src/gauss_quad.jl:1
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/src/Jacobi.jl:25
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/test/testjacobi.jl:4
in expression starting at /home/vagrant/.julia/v0.7/Jacobi/test/runtests.jl:3
┌ Error: ------------------------------------------------------------
│ # Testing failed for Jacobi
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Jacobi/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
ERROR: Jacobi had test errors

>>> End of log
