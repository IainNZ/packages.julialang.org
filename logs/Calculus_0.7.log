>>> 'Pkg.add("Calculus")' log
[ Info: Installing Calculus v0.2.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Calculus
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Calculus")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    1206256 s        103 s      68028 s     441971 s         11 s
       #2  3499 MHz     332558 s         48 s      30198 s    1598657 s          0 s
       
  Memory: 2.93927001953125 GB (526.98828125 MB free)
  Uptime: 19923.0 sec
  Load Avg:  1.01953125  1.20947265625  1.14599609375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Calculus                      0.2.2
 - JSON                          0.16.3
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing Calculus @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/Calculus/test/runtests.jl:6
Running tests:
 * finite_difference
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference(::Function, ::Array{Float64,1}, ::Symbol) at finite_difference.jl:142
└ @ Calculus finite_difference.jl:142
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference at finite_difference.jl:142 [inlined]
└ @ Core finite_difference.jl:142
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference at finite_difference.jl:142 [inlined]
└ @ Core finite_difference.jl:142
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference at finite_difference.jl:142 [inlined]
└ @ Core finite_difference.jl:142
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference at finite_difference.jl:142 [inlined]
└ @ Core finite_difference.jl:142
┌ Warning: `Array{T, 2}(m::Int, n::Int) where T` is deprecated, use `Array{T, 2}(uninitialized, m, n)` instead.
│   caller = finite_difference_hessian(::Function, ::Array{Float64,1}) at finite_difference.jl:272
└ @ Calculus finite_difference.jl:272
 * derivative
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = finite_difference at finite_difference.jl:142 [inlined]
└ @ Core finite_difference.jl:142
Error During Test at /home/vagrant/.julia/v0.7/Calculus/test/derivative.jl:22
  Test threw an exception of type MethodError
  Expression: norm((f3')(x) - cos(x)) < 0.001
  MethodError: objects of type Adjoint{Any,typeof(f3)} are not callable
  Use square brackets [] for indexing an Array.
  Stacktrace:
   [1] top-level scope at ./<missing>:22
   [2] include at ./boot.jl:295 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:521
   [4] include(::Module, ::String) at ./sysimg.jl:26
   [5] include(::String) at ./sysimg.jl:65
   [6] top-level scope at ./<missing>:18
   [7] include at ./boot.jl:295 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:521
   [9] include(::Module, ::String) at ./sysimg.jl:26
   [10] process_options(::Base.JLOptions) at ./client.jl:323
   [11] _start() at ./client.jl:374
ERROR: LoadError: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/Calculus/test/derivative.jl:21
in expression starting at /home/vagrant/.julia/v0.7/Calculus/test/runtests.jl:16
┌ Error: ------------------------------------------------------------
│ # Testing failed for Calculus
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Calculus/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: Calculus had test errors

>>> End of log
