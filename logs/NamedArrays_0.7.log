>>> 'Pkg.add("NamedArrays")' log
[ Info: Installing Combinatorics v0.5.0            @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NamedArrays v0.7.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Polynomials v0.2.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of NamedArrays
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3505 MHz    4223844 s        232 s     193972 s    1033302 s         28 s
       #2  3505 MHz     978083 s       6655 s      77760 s    5234951 s          1 s
       
  Memory: 2.93927001953125 GB (1597.52734375 MB free)
  Uptime: 64068.0 sec
  Load Avg:  0.9970703125  1.16650390625  1.453125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - NamedArrays                   0.7.0
6 additional packages:
 - Combinatorics                 0.5.0
 - Compat                        0.46.0
 - DataStructures                0.7.4
 - IterTools                     0.2.0
 - Nullables                     0.0.3
 - Polynomials                   0.2.0
[ Info: Testing NamedArrays                        @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `parametric method syntax (::Type{S}){S <: NamedArray, T, N}(array::AbstractArray{T, N}, dicts::NTuple{N, OrderedDict}, dimnames::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/NamedArrays/src/namedarraytypes.jl:21.
│ Use `(::Type{S})(array::AbstractArray{T, N}, dicts::NTuple{N, OrderedDict}, dimnames::NTuple{N, Any}) where {S <: NamedArray, T, N}` instead.
└                                                @ nothing namedarraytypes.jl:21
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
┌ Warning: Deprecated syntax `parametric method syntax NamedArray{T, N}(a::AbstractArray{T, N}, names::Tuple{}, dimnames::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:22.
│ Use `NamedArray(a::AbstractArray{T, N}, names::Tuple{}, dimnames::NTuple{N, Any}) where {T, N}` instead.
└                                                   @ nothing constructors.jl:22
┌ Warning: Deprecated syntax `parametric method syntax NamedArray{T, N}(a::AbstractArray{T, N}, names::Tuple{})` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:23.
│ Use `NamedArray(a::AbstractArray{T, N}, names::Tuple{}) where {T, N}` instead.
└                                                   @ nothing constructors.jl:23
┌ Warning: Deprecated syntax `parametric method syntax NamedArray{T, N}(array::AbstractArray{T, N}, names::NTuple{N, OrderedDict})` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:28.
│ Use `NamedArray(array::AbstractArray{T, N}, names::NTuple{N, OrderedDict}) where {T, N}` instead.
└                                                   @ nothing constructors.jl:28
┌ Warning: Deprecated syntax `parametric method syntax NamedArray{T, N}(array::AbstractArray{T, N}, names::NTuple{N, Vector}, dimnames::NTuple{N, Any} = defaultdimnames(array))` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:33.
│ Use `NamedArray(array::AbstractArray{T, N}, names::NTuple{N, Vector}, dimnames::NTuple{N, Any} = defaultdimnames(array)) where {T, N}` instead.
└                                                   @ nothing constructors.jl:33
┌ Warning: Deprecated syntax `parametric method syntax NamedArray{T, N, VT}(array::AbstractArray{T, N}, names::Vector{VT} = [ defaultnames(d) for d = size(array) ], dimnames::Vector = [ defaultdimname(i) for i = 1:ndims(array) ])` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:41.
│ Use `NamedArray(array::AbstractArray{T, N}, names::Vector{VT} = [ defaultnames(d) for d = size(array) ], dimnames::Vector = [ defaultdimname(i) for i = 1:ndims(array) ]) where {T, N, VT}` instead.
└                                                   @ nothing constructors.jl:41
┌ Warning: Deprecated syntax `parametric method syntax (::Type{NamedArray{T}}){T}(n...)` around /home/vagrant/.julia/v0.7/NamedArrays/src/constructors.jl:60.
│ Use `(::Type{NamedArray{T}})(n...) where T` instead.
└                                                   @ nothing constructors.jl:60
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number}(x::Range{T1}, y::NamedVector{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:26.
│ Use `+(x::Range{T1}, y::NamedVector{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:26
WARNING: importing deprecated binding Base.Range into NamedArrays.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:26
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number}(x::NamedVector{T1}, y::Range{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:27.
│ Use `+(x::NamedVector{T1}, y::Range{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:27
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:27
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number}(x::Range{T1}, y::NamedVector{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:26.
│ Use `-(x::Range{T1}, y::NamedVector{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:26
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:26
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number}(x::NamedVector{T1}, y::Range{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:27.
│ Use `-(x::NamedVector{T1}, y::Range{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:27
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:27
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:51.
│ Use `+(x::NamedArray{T1}, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:51
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number, N}(x::NamedArray{T1, N}, y::AbstractArray{T2, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:58.
│ Use `+(x::NamedArray{T1, N}, y::AbstractArray{T2, N}) where {T1 <: Number, T2 <: Number, N}` instead.
└                                                     @ nothing arithmetic.jl:58
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number, N}(x::AbstractArray{T1, N}, y::NamedArray{T2, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:59.
│ Use `+(x::AbstractArray{T1, N}, y::NamedArray{T2, N}) where {T1 <: Number, T2 <: Number, N}` instead.
└                                                     @ nothing arithmetic.jl:59
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:51.
│ Use `-(x::NamedArray{T1}, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:51
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number, N}(x::NamedArray{T1, N}, y::AbstractArray{T2, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:58.
│ Use `-(x::NamedArray{T1, N}, y::AbstractArray{T2, N}) where {T1 <: Number, T2 <: Number, N}` instead.
└                                                     @ nothing arithmetic.jl:58
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number, N}(x::AbstractArray{T1, N}, y::NamedArray{T2, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:59.
│ Use `-(x::AbstractArray{T1, N}, y::NamedArray{T2, N}) where {T1 <: Number, T2 <: Number, N}` instead.
└                                                     @ nothing arithmetic.jl:59
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::T2)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:84.
│ Use `+(x::NamedArray{T1}, y::T2) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:84
┌ Warning: Deprecated syntax `parametric method syntax +{T1 <: Number, T2 <: Number}(x::T1, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:85.
│ Use `+(x::T1, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:85
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::T2)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:84.
│ Use `-(x::NamedArray{T1}, y::T2) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:84
┌ Warning: Deprecated syntax `parametric method syntax -{T1 <: Number, T2 <: Number}(x::T1, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:85.
│ Use `-(x::T1, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:85
┌ Warning: Deprecated syntax `parametric method syntax *{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::T2)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:84.
│ Use `*(x::NamedArray{T1}, y::T2) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:84
┌ Warning: Deprecated syntax `parametric method syntax *{T1 <: Number, T2 <: Number}(x::T1, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:85.
│ Use `*(x::T1, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:85
┌ Warning: Deprecated syntax `parametric method syntax /{T1 <: Number, T2 <: Number}(x::NamedArray{T1}, y::T2)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:88.
│ Use `/(x::NamedArray{T1}, y::T2) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:88
┌ Warning: Deprecated syntax `parametric method syntax \{T1 <: Number, T2 <: Number}(x::T1, y::NamedArray{T2})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:89.
│ Use `\(x::T1, y::NamedArray{T2}) where {T1 <: Number, T2 <: Number}` instead.
└                                                     @ nothing arithmetic.jl:89
┌ Warning: Deprecated syntax `parametric method syntax *{Tx, TiA, Ty}(x::SparseMatrixCSC{Tx, TiA}, y::NamedMatrix{Ty})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:126.
│ Use `*(x::SparseMatrixCSC{Tx, TiA}, y::NamedMatrix{Ty}) where {Tx, TiA, Ty}` instead.
└                                                    @ nothing arithmetic.jl:126
┌ Warning: Deprecated syntax `parametric method syntax *{Tx, S, Ty}(x::SparseMatrixCSC{Tx, S}, y::NamedVector{Ty})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:127.
│ Use `*(x::SparseMatrixCSC{Tx, S}, y::NamedVector{Ty}) where {Tx, S, Ty}` instead.
└                                                    @ nothing arithmetic.jl:127
┌ Warning: Deprecated syntax `parametric method syntax \{Tx <: Number, Ty <: Number}(x::Diagonal{Tx}, y::NamedVector{Ty})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:161.
│ Use `\(x::Diagonal{Tx}, y::NamedVector{Ty}) where {Tx <: Number, Ty <: Number}` instead.
└                                                    @ nothing arithmetic.jl:161
┌ Warning: Deprecated syntax `parametric method syntax \{Tx <: Number, Ty <: Number}(x::Union{Bidiagonal{Tx}, LinAlg.AbstractTriangular{Tx}}, y::NamedVector{Ty})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:162.
│ Use `\(x::Union{Bidiagonal{Tx}, LinAlg.AbstractTriangular{Tx}}, y::NamedVector{Ty}) where {Tx <: Number, Ty <: Number}` instead.
└                                                    @ nothing arithmetic.jl:162
┌ Warning: Deprecated syntax `parametric method syntax \{Tx <: Number, Ty <: Number}(x::Union{Bidiagonal{Tx}, LinAlg.AbstractTriangular{Tx}}, y::NamedMatrix{Ty})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:163.
│ Use `\(x::Union{Bidiagonal{Tx}, LinAlg.AbstractTriangular{Tx}}, y::NamedMatrix{Ty}) where {Tx <: Number, Ty <: Number}` instead.
└                                                    @ nothing arithmetic.jl:163
┌ Warning: Deprecated syntax `parametric method syntax lufact!{T}(n::NamedArray{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{true})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:186.
│ Use `lufact!(n::NamedArray{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{true}) where T` instead.
└                                                    @ nothing arithmetic.jl:186
┌ Warning: Deprecated syntax `parametric method syntax Base.getindex{T, DT, AT}(A::LU{T, NamedArray{T, 2, AT, DT}}, d::Symbol)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:192.
│ Use `Base.getindex(A::LU{T, NamedArray{T, 2, AT, DT}}, d::Symbol) where {T, DT, AT}` instead.
└                                                    @ nothing arithmetic.jl:192
┌ Warning: Deprecated syntax `parametric method syntax cholfact!{T <: BlasFloat}(n::NamedArray{T}, uplo::Symbol = :U)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:220.
│ Use `cholfact!(n::NamedArray{T}, uplo::Symbol = :U) where T <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:220
┌ Warning: Deprecated syntax `parametric method syntax cholfact{T <: BlasFloat}(n::NamedArray{T}, uplo::Symbol = :U)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:224.
│ Use `cholfact(n::NamedArray{T}, uplo::Symbol = :U) where T <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:224
┌ Warning: Deprecated syntax `parametric method syntax qrfact!{T <: BlasFloat}(n::NamedMatrix{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{false})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:230.
│ Use `qrfact!(n::NamedMatrix{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{false}) where T <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:230
┌ Warning: Deprecated syntax `parametric method syntax LAPACK.gemqrt!{BF <: BlasFloat}(side::Char, trans::Char, V::NamedArray{BF}, T::StridedMatrix{BF}, C::StridedVecOrMat{BF})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:233.
│ Use `LAPACK.gemqrt!(side::Char, trans::Char, V::NamedArray{BF}, T::StridedMatrix{BF}, C::StridedVecOrMat{BF}) where BF <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:233
┌ Warning: Deprecated syntax `parametric method syntax qrfact{T <: BlasFloat}(n::NamedMatrix{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{false})` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:235.
│ Use `qrfact(n::NamedMatrix{T}, pivot::Union{Type{Val{false}}, Type{Val{true}}} = Val{false}) where T <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:235
┌ Warning: Deprecated syntax `parametric method syntax svdfact{T <: BlasFloat}(A::NamedMatrix{T},; thin = true)` around /home/vagrant/.julia/v0.7/NamedArrays/src/arithmetic.jl:252.
│ Use `svdfact(A::NamedMatrix{T},; thin = true) where T <: BlasFloat` instead.
└                                                    @ nothing arithmetic.jl:252
┌ Warning: Deprecated syntax `parametric method syntax copy{T, N, AT, DT}(a::NamedArray{T, N, AT, DT})` around /home/vagrant/.julia/v0.7/NamedArrays/src/base.jl:10.
│ Use `copy(a::NamedArray{T, N, AT, DT}) where {T, N, AT, DT}` instead.
└                                                           @ nothing base.jl:10
┌ Warning: Deprecated syntax `parametric method syntax copy!{T}(dest::NamedArray{T}, dsto::Integer, src::ArrayOrNamed{T}, so::Integer, N::Integer)` around /home/vagrant/.julia/v0.7/NamedArrays/src/base.jl:15.
│ Use `copy!(dest::NamedArray{T}, dsto::Integer, src::ArrayOrNamed{T}, so::Integer, N::Integer) where T` instead.
└                                                           @ nothing base.jl:15
┌ Warning: Deprecated syntax `parametric method syntax Base.similar{T, N}(n::NamedArray{T, N}, t::Type, dims::Base.Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/base.jl:31.
│ Use `Base.similar(n::NamedArray{T, N}, t::Type, dims::Base.Dims) where {T, N}` instead.
└                                                           @ nothing base.jl:31
┌ Warning: Deprecated syntax `parametric method syntax sum{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `sum(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax prod{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `prod(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax maximum{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `maximum(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax minimum{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `minimum(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax mean{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `mean(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax std{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `std(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax var{T, N}(a::NamedArray{T, N}, d::Dims)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:13.
│ Use `var(a::NamedArray{T, N}, d::Dims) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:13
┌ Warning: Deprecated syntax `parametric method syntax fan{T, N}(f::Function, fname::AbstractString, a::NamedArray{T, N}, dim::Int)` around /home/vagrant/.julia/v0.7/NamedArrays/src/changingnames.jl:22.
│ Use `fan(f::Function, fname::AbstractString, a::NamedArray{T, N}, dim::Int) where {T, N}` instead.
└                                                  @ nothing changingnames.jl:22
┌ Warning: Deprecated syntax `parametric method syntax getindex{T}(n::NamedArray{T, 0}, i::Real)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:28.
│ Use `getindex(n::NamedArray{T, 0}, i::Real) where T` instead.
└                                                          @ nothing index.jl:28
┌ Warning: Deprecated syntax `parametric method syntax getindex{T, N}(n::NamedArray{T, N}, I::Vararg{Any, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:31.
│ Use `getindex(n::NamedArray{T, N}, I::Vararg{Any, N}) where {T, N}` instead.
└                                                          @ nothing index.jl:31
┌ Warning: Deprecated syntax `parametric method syntax Base.view{T, N}(n::NamedArray{T, N}, I::Vararg{Union{AbstractArray, Colon, Real}, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:33.
│ Use `Base.view(n::NamedArray{T, N}, I::Vararg{Union{AbstractArray, Colon, Real}, N}) where {T, N}` instead.
└                                                          @ nothing index.jl:33
┌ Warning: Deprecated syntax `parametric method syntax Base.view{T, N}(n::NamedArray{T, N}, I::Vararg{Any, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:34.
│ Use `Base.view(n::NamedArray{T, N}, I::Vararg{Any, N}) where {T, N}` instead.
└                                                          @ nothing index.jl:34
┌ Warning: Deprecated syntax `parametric method syntax indices{K <: Real, V <: Integer}(dict::Associative{K, V}, i::K)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:39.
│ Use `indices(dict::Associative{K, V}, i::K) where {K <: Real, V <: Integer}` instead.
└                                                          @ nothing index.jl:39
WARNING: importing deprecated binding Base.Associative into NamedArrays.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:39
┌ Warning: Deprecated syntax `parametric method syntax indices{K, V <: Integer}(dict::Associative{K, V}, i::Real)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:40.
│ Use `indices(dict::Associative{K, V}, i::Real) where {K, V <: Integer}` instead.
└                                                          @ nothing index.jl:40
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:40
┌ Warning: Deprecated syntax `parametric method syntax indices{K, V <: Integer}(dict::Associative{K, V}, i::K)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:41.
│ Use `indices(dict::Associative{K, V}, i::K) where {K, V <: Integer}` instead.
└                                                          @ nothing index.jl:41
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:41
┌ Warning: Deprecated syntax `parametric method syntax indices{K <: CartesianIndex, V <: Integer}(dict::Associative{K, V}, i::K)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:44.
│ Use `indices(dict::Associative{K, V}, i::K) where {K <: CartesianIndex, V <: Integer}` instead.
└                                                          @ nothing index.jl:44
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:44
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:45
┌ Warning: Deprecated syntax `parametric method syntax indices{T <: Integer, V <: Integer}(dict::Associative{T, V}, i::AbstractArray{T})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:49.
│ Use `indices(dict::Associative{T, V}, i::AbstractArray{T}) where {T <: Integer, V <: Integer}` instead.
└                                                          @ nothing index.jl:49
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:49
┌ Warning: Deprecated syntax `parametric method syntax indices{T <: Real, V <: Integer}(dict::Associative{T, V}, i::AbstractArray{T})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:50.
│ Use `indices(dict::Associative{T, V}, i::AbstractArray{T}) where {T <: Real, V <: Integer}` instead.
└                                                          @ nothing index.jl:50
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:50
┌ Warning: Deprecated syntax `parametric method syntax indices{T <: Integer, K, V <: Integer}(dict::Associative{K, V}, i::AbstractArray{T})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:51.
│ Use `indices(dict::Associative{K, V}, i::AbstractArray{T}) where {T <: Integer, K, V <: Integer}` instead.
└                                                          @ nothing index.jl:51
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:51
┌ Warning: Deprecated syntax `parametric method syntax indices{K, V <: Integer}(dict::Associative{K, V}, i::AbstractArray{K})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:52.
│ Use `indices(dict::Associative{K, V}, i::AbstractArray{K}) where {K, V <: Integer}` instead.
└                                                          @ nothing index.jl:52
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:52
┌ Warning: Deprecated syntax `parametric method syntax indices{K, V <: Integer}(dict::Associative{K, V}, ::Colon)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:54.
│ Use `indices(dict::Associative{K, V}, #unused#::Colon) where {K, V <: Integer}` instead.
└                                                          @ nothing index.jl:54
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:54
┌ Warning: Deprecated syntax `parametric method syntax indices{K <: Not, V <: Integer}(dict::Associative{K, V}, i::K)` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:57.
│ Use `indices(dict::Associative{K, V}, i::K) where {K <: Not, V <: Integer}` instead.
└                                                          @ nothing index.jl:57
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:57
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:58
┌ Warning: Deprecated syntax `parametric method syntax namedgetindex{N}(n::NamedArray, I::Vararg{Integer, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:65.
│ Use `namedgetindex(n::NamedArray, I::Vararg{Integer, N}) where N` instead.
└                                                          @ nothing index.jl:65
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:69
┌ Warning: Deprecated syntax `parametric method syntax getindex{T, N}(n::NamedArray{T, N}, I::CartesianIndex{N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:117.
│ Use `getindex(n::NamedArray{T, N}, I::CartesianIndex{N}) where {T, N}` instead.
└                                                         @ nothing index.jl:117
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T}(A::NamedArray{T}, X::ArrayOrNamed{T}, I::Range{Int})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:127.
│ Use `setindex!(A::NamedArray{T}, X::ArrayOrNamed{T}, I::Range{Int}) where T` instead.
└                                                         @ nothing index.jl:127
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:126
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T, N}(A::NamedArray{T, N}, x, I::Vararg{Any, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:134.
│ Use `setindex!(A::NamedArray{T, N}, x, I::Vararg{Any, N}) where {T, N}` instead.
└                                                         @ nothing index.jl:134
┌ Warning: Deprecated syntax `parametric method syntax setindex!{T, N}(n::NamedArray{T, N}, x, I::Vararg{Pair, N})` around /home/vagrant/.julia/v0.7/NamedArrays/src/index.jl:137.
│ Use `setindex!(n::NamedArray{T, N}, x, I::Vararg{Pair, N}) where {T, N}` instead.
└                                                         @ nothing index.jl:137
WARNING: Broadcast.broadcast_t is deprecated, `broadcast_t(f, ::Type{ElType}, shape, iter, As...)` should become `broadcast(f, Broadcast.DefaultArrayStyle{N}(), ElType, shape, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:52
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:55
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:58
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:59
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:60
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:61
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:62
WARNING: Broadcast.broadcast_c is deprecated, `broadcast_c(f, ::Type{C}, As...)` should become `broadcast(f, C, nothing, nothing, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/keepnames.jl:72
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/names.jl:10
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/src/names.jl:26
┌ Warning: Deprecated syntax `parametric method syntax setnames!{T, N, KT}(n::NamedArray{T, N}, v::Vector{KT}, d::Integer)` around /home/vagrant/.julia/v0.7/NamedArrays/src/names.jl:35.
│ Use `setnames!(n::NamedArray{T, N}, v::Vector{KT}, d::Integer) where {T, N, KT}` instead.
└                                                          @ nothing names.jl:35
┌ Warning: Deprecated syntax `parametric method syntax setdimnames!{T, N}(n::NamedArray{T, N}, dn::NTuple{N, Any})` around /home/vagrant/.julia/v0.7/NamedArrays/src/names.jl:58.
│ Use `setdimnames!(n::NamedArray{T, N}, dn::NTuple{N, Any}) where {T, N}` instead.
└                                                          @ nothing names.jl:58
┌ Warning: Deprecated syntax `parametric method syntax setdimnames!{T, N}(n::NamedArray{T, N}, v, d::Integer)` around /home/vagrant/.julia/v0.7/NamedArrays/src/names.jl:64.
│ Use `setdimnames!(n::NamedArray{T, N}, v, d::Integer) where {T, N}` instead.
└                                                          @ nothing names.jl:64
┌ Warning: Deprecated syntax `parametric method syntax flipdim{T, N}(a::NamedArray{T, N}, d::Int)` around /home/vagrant/.julia/v0.7/NamedArrays/src/rearrange.jl:21.
│ Use `flipdim(a::NamedArray{T, N}, d::Int) where {T, N}` instead.
└                                                      @ nothing rearrange.jl:21
WARNING: could not import Base.ipermute! into NamedArrays
┌ Warning: Deprecated syntax `parametric method syntax summary{T, N, AT}(n::NamedArray{T, N, AT})` around /home/vagrant/.julia/v0.7/NamedArrays/src/show.jl:17.
│ Use `summary(n::NamedArray{T, N, AT}) where {T, N, AT}` instead.
└                                                           @ nothing show.jl:17
┌ Warning: Deprecated syntax `parametric method syntax show{T1, T2}(io::IO, n::NamedArray{T1, 2, SparseMatrixCSC{T1, T2}})` around /home/vagrant/.julia/v0.7/NamedArrays/src/show.jl:152.
│ Use `show(io::IO, n::NamedArray{T1, 2, SparseMatrixCSC{T1, T2}}) where {T1, T2}` instead.
└                                                          @ nothing show.jl:152
┌ Warning: Deprecated syntax `parametric method syntax convert{T}(::Type{NamedArray{T}}, n::NamedArray)` around /home/vagrant/.julia/v0.7/NamedArrays/src/convert.jl:22.
│ Use `convert(#unused#::Type{NamedArray{T}}, n::NamedArray) where T` instead.
└                                                        @ nothing convert.jl:22
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/NamedArrays/test/runtests.jl:10
Starting test, no assertions should fail... base, ┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└                                                                     @ Core :-1
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64,Int64}) at base.jl:32
└                                                       @ NamedArrays base.jl:32
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64,Int64}) at base.jl:33
└                                                       @ NamedArrays base.jl:33
┌ Warning: `copy!(dest::Union{AbstractArray, IndexStyle}, args...)` is deprecated, use `copyto!(dest, args...)` instead.
│   caller = top-level scope
└                                                                      @ Core :0
┌ Warning: `unsafe_copy!(dest, args...)` is deprecated, use `unsafe_copyto!(dest, args...)` instead.
│   caller = copy!(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{Any,Int64},OrderedDict{Any,Int64}}}, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at base.jl:21
└                                                       @ NamedArrays base.jl:21
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64}) at base.jl:32
└                                                       @ NamedArrays base.jl:32
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64}) at base.jl:33
└                                                       @ NamedArrays base.jl:33
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64,Int64,Int64}) at base.jl:32
└                                                       @ NamedArrays base.jl:32
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = similar(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Type, ::Tuple{Int64,Int64,Int64}) at base.jl:33
└                                                       @ NamedArrays base.jl:33
┌ Warning: `ind2sub(dims::(Tuple{Vararg{Integer, N}} where N), ind::Integer)` is deprecated, use `(CartesianIndices(dims))[ind]` instead.
│   caller = ind2sub(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Int64) at base.jl:49
└                                                       @ NamedArrays base.jl:49
Error During Test at /home/vagrant/.julia/v0.7/NamedArrays/test/base.jl:34
  Test threw an exception of type ErrorException
  Expression: ind2sub(n, 4) == ("two", "b")
  iteration is deliberately unsupported for CartesianIndex. Use `I` rather than `I...`, or use `Tuple(I)...`
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] start at ./multidimensional.jl:153 [inlined]
   [3] start at ./iterators.jl:132 [inlined]
   [4] start at ./generator.jl:42 [inlined]
   [5] collect at ./array.jl:532 [inlined]
   [6] map at ./abstractarray.jl:1880 [inlined]
   [7] ind2sub(::NamedArray{Float64,2,Array{Float64,2},Tuple{OrderedDict{String,Int64},OrderedDict{String,Int64}}}, ::Int64) at /home/vagrant/.julia/v0.7/NamedArrays/src/base.jl:49
   [8] top-level scope
   [9] include at ./boot.jl:293 [inlined]
   [10] include_relative(::Module, ::String) at ./loading.jl:521
   [11] include(::Module, ::String) at ./sysimg.jl:26
   [12] include(::String) at ./sysimg.jl:65
   [13] top-level scope
   [14] include at ./boot.jl:293 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] include(::String) at ./sysimg.jl:65
   [18] top-level scope
   [19] include at ./boot.jl:293 [inlined]
   [20] include_relative(::Module, ::String) at ./loading.jl:521
   [21] include(::Module, ::String) at ./sysimg.jl:26
   [22] process_options(::Base.JLOptions) at ./client.jl:324
   [23] _start() at ./client.jl:375
ERROR: LoadError: LoadError: LoadError: There was an error during testing
in expression starting at /home/vagrant/.julia/v0.7/NamedArrays/test/base.jl:34
in expression starting at /home/vagrant/.julia/v0.7/NamedArrays/test/test.jl:13
in expression starting at /home/vagrant/.julia/v0.7/NamedArrays/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for NamedArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/NamedArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: NamedArrays had test errors

>>> End of log
