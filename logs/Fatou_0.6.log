>>> 'Pkg.add("Fatou")' log
INFO: Cloning cache of Fatou from https://github.com/chakravala/Fatou.jl.git
INFO: Cloning cache of SymPy from https://github.com/JuliaPy/SymPy.jl.git
INFO: Installing BinDeps v0.8.7
INFO: Installing ColorTypes v0.6.7
INFO: Installing Colors v0.8.2
INFO: Installing Conda v0.7.1
INFO: Installing Fatou v0.1.3
INFO: Installing FixedPointNumbers v0.4.6
INFO: Installing LaTeXStrings v0.3.0
INFO: Installing MacroTools v0.4.0
INFO: Installing PyCall v1.15.0
INFO: Installing PyPlot v2.5.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing Reexport v0.1.0
INFO: Installing SHA v0.5.7
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing SymPy v0.6.0
INFO: Installing URIParser v0.3.1
INFO: Building Conda
INFO: Building SpecialFunctions
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Fatou
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Fatou")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (1591.53125 MB free)
Uptime: 95792.0 sec
Load Avg:  0.96533203125  1.05908203125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz    5919663 s       2422 s     419487 s    1894087 s         83 s
#2  3491 MHz    1538171 s       4996 s     202570 s    7622968 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Fatou                         0.1.3
 - JSON                          0.17.2
17 additional packages:
 - BinDeps                       0.8.7
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Conda                         0.7.1
 - FixedPointNumbers             0.4.6
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.5
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - RecipesBase                   0.2.3
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - SpecialFunctions              0.4.0
 - SymPy                         0.6.0
 - URIParser                     0.3.1
INFO: Testing Fatou
INFO: Installing sympy via the Conda sympy package...
Solving environment: ...working... done
fastcache 1.0.2           |   0% fastcache 1.0.2##5        |  26% fastcache 1.0.2########## | 100% 
sympy 1.1.1           |   0% sympy 1.1.1           |   0% sympy 1.1.16          |   6% sympy 1.1.1##         |  21% sympy 1.1.1###5       |  36% sympy 1.1.1#####      |  51% sympy 1.1.1######6    |  66% sympy 1.1.1#######7   |  78% sympy 1.1.1########6  |  86% sympy 1.1.1#########3 |  93% sympy 1.1.1#########8 |  98% sympy 1.1.1########## | 100% 
mpmath 1.0.0           |   0% mpmath 1.0.02          |   3% mpmath 1.0.0#######5   |  75% mpmath 1.0.0#########9 |  99% mpmath 1.0.0########## | 100% 
gmpy2 2.0.8           |   0% gmpy2 2.0.81          |   2% gmpy2 2.0.8#######5   |  75% gmpy2 2.0.8########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - sympy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    fastcache-1.0.2            |           py27_0          47 KB  conda-forge
    sympy-1.1.1                |           py27_0         6.9 MB  conda-forge
    mpmath-1.0.0               |             py_0         429 KB  conda-forge
    gmpy2-2.0.8                |           py27_1         601 KB  conda-forge
    ------------------------------------------------------------
                                           Total:         8.0 MB

The following NEW packages will be INSTALLED:

    fastcache: 1.0.2-py27_0 conda-forge
    gmpy2:     2.0.8-py27_1 conda-forge
    mpmath:    1.0.0-py_0   conda-forge
    sympy:     1.1.1-py27_0 conda-forge


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
WARNING: No working GUI backend found for matplotlib
ERROR: LoadError: LoadError: InitError: PyError (ccall(@pysym(:PyImport_ImportModule), PyPtr, (Cstring,), name)

The Python package matplotlib.pyplot could not be found by pyimport. Usually this means
that you did not install matplotlib.pyplot in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the matplotlib.pyplot module, you can
use `pyimport_conda("matplotlib.pyplot", PKG)`, where PKG is the Anaconda
package the contains the module matplotlib.pyplot, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError("/lib/x86_64-linux-gnu/libz.so.1: version `ZLIB_1.2.9' not found (required by /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/../../.././libpng16.so.16)",)
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/pyplot.py", line 31, in <module>
    import matplotlib.colorbar
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/colorbar.py", line 36, in <module>
    import matplotlib.contour as contour
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/contour.py", line 20, in <module>
    import matplotlib.font_manager as font_manager
  File "/home/vagrant/.julia/v0.6/Conda/deps/usr/lib/python2.7/site-packages/matplotlib/font_manager.py", line 55, in <module>
    from matplotlib import afm, cbook, ft2font, rcParams, get_cachedir

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:56 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:61 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:81 [inlined]
 [4] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:374
 [5] __init__() at /home/vagrant/.julia/v0.6/PyPlot/src/init.jl:198
 [6] _include_from_serialized(::String) at ./loading.jl:157
 [7] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:200
 [8] _require(::Symbol) at ./loading.jl:464
 [9] require(::Symbol) at ./loading.jl:405
 [10] include_from_node1(::String) at ./loading.jl:576
during initialization of module PyPlot
while loading /home/vagrant/.julia/v0.6/Fatou/src/Fatou.jl, in expression starting on line 2
while loading /home/vagrant/.julia/v0.6/Fatou/test/runtests.jl, in expression starting on line 1
================================[ ERROR: Fatou ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Fatou/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Fatou had test errors

>>> End of log
