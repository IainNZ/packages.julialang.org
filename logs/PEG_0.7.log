>>> 'Pkg.add("PEG")' log
┌ Info: Cloning cache of PEG from https://github.com/wdebeaum/PEG.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing PEG v0.1.1                      @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32

>>> 'Pkg.test("PEG")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     322219 s         94 s      20262 s     169312 s          5 s
       #2  3500 MHz      67823 s         82 s       9606 s     497076 s          0 s
       
  Memory: 2.93927001953125 GB (1141.2734375 MB free)
  Uptime: 5848.0 sec
  Load Avg:  1.0029296875  0.9853515625  0.9560546875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - PEG                           0.1.1
2 additional packages:
 - Compat                        0.45.0
 - Nullables                     0.0.3
[ Info: Testing PEG                                @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:265.
│ Use `mutable struct` instead.
└                                                           @ nothing PEG.jl:265
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:265.
│ Use `mutable struct` instead.
└                                                           @ nothing PEG.jl:265
WARNING: importing deprecated binding Base.Void into PEG.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:86
┌ Warning: Deprecated syntax `parametric method syntax remove_re_flag{T <: AbstractString}(flags::T, flag::Char)` around /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:150.
│ Use `remove_re_flag(flags::T, flag::Char) where T <: AbstractString` instead.
└                                                           @ nothing PEG.jl:150
┌ Warning: Deprecated syntax `parametric method syntax parse_next{T <: AbstractString}(rule::Function, input::T; whole = false)` around /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:349.
│ Use `parse_next(rule::Function, input::T; whole = false) where T <: AbstractString` instead.
└                                                           @ nothing PEG.jl:349
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/PEG/test/runtests.jl:2
ERROR: LoadError: LoadError: LoadError: can't convert Type{:macrocall} expression to PEG rule; args=(Type{Symbol("@r_str")}, :(#= /home/vagrant/.julia/v0.7/PEG/test/./calculator.jl:14 =#), "\\d+", "w")
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] to_rule(::Type, ::Type, ::LineNumberNode, ::String, ::Any, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:138
 [3] to_rule(::Union{Type{Type{:call}}, Type{Type{:macrocall}}}, ::Symbol, ::LineNumberNode, ::Any, ::Any, ::Vararg{Any,N} where N) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:136
 [4] to_rule at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:135 [inlined]
 [5] to_rule(::Type{Type{:call}}, ::Type{Type{:>>}}, ::Expr, ::Expr) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:270
 [6] to_rule(::Union{Type{Type{:call}}, Type{Type{:macrocall}}}, ::Symbol, ::Expr, ::Any) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:136
 [7] to_rule(::Expr) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:135
 [8] next at ./generator.jl:47 [inlined]
 [9] _collect(::Array{Any,1}, ::Base.Generator{Array{Any,1},typeof(PEG.to_rule)}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:549
 [10] collect_similar at ./array.jl:474 [inlined]
 [11] map at ./abstractarray.jl:1854 [inlined]
 [12] to_rule(::Type{Type{:call}}, ::Type{Type{:|}}, ::Expr, ::Expr) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:299
 [13] to_rule(::Union{Type{Type{:call}}, Type{Type{:macrocall}}}, ::Symbol, ::Expr, ::Any) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:136
 [14] to_rule(::Expr) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:135
 [15] @rule(::LineNumberNode, ::Module, ::Expr) at /home/vagrant/.julia/v0.7/PEG/src/PEG.jl:323
 [16] include at ./boot.jl:293 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:521
 [18] include(::Module, ::String) at ./sysimg.jl:26
 [19] include(::String) at ./sysimg.jl:65
 [20] top-level scope
 [21] include at ./boot.jl:293 [inlined]
 [22] include_relative(::Module, ::String) at ./loading.jl:521
 [23] include(::Module, ::String) at ./sysimg.jl:26
 [24] process_options(::Base.JLOptions) at ./client.jl:324
 [25] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/PEG/test/./calculator.jl:14
in expression starting at /home/vagrant/.julia/v0.7/PEG/test/./calculator.jl:14
in expression starting at /home/vagrant/.julia/v0.7/PEG/test/runtests.jl:4
┌ Error: ------------------------------------------------------------
│ # Testing failed for PEG
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/PEG/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
ERROR: PEG had test errors

>>> End of log
