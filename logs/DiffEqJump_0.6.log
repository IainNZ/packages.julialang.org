>>> 'Pkg.add("DiffEqJump")' log
INFO: Installing DiffEqBase v2.6.1
INFO: Installing DiffEqJump v0.5.1
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.2
INFO: Installing LinearMaps v1.0.3
INFO: Installing MacroTools v0.4.0
INFO: Installing Media v0.3.0
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.12.4
INFO: Installing SimpleTraits v0.5.1
INFO: Installing StaticArrays v0.6.6
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqJump
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqJump")' log
Julia Version 0.6.1
Commit 0d7248e2ff (2017-10-24 22:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1719.6015625 MB free)
Uptime: 55927.0 sec
Load Avg:  0.9970703125  0.9853515625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3616259 s        131 s     153936 s    1040453 s         56 s
#2  3500 MHz    1125195 s       6634 s     107763 s    4242787 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqJump                    0.5.1
 - JSON                          0.16.1
12 additional packages:
 - Compat                        0.37.0
 - DiffEqBase                    2.6.1
 - FunctionWrappers              0.1.0
 - Hiccup                        0.1.1
 - Juno                          0.3.2
 - LinearMaps                    1.0.3
 - MacroTools                    0.4.0
 - Media                         0.3.0
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.12.4
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.6
INFO: Computing test dependencies for DiffEqJump...
INFO: Installing BinDeps v0.8.0
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing Conda v0.7.0
INFO: Installing DataStructures v0.7.2
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqDiffTools v0.2.0
INFO: Installing DiffEqNoiseProcess v0.7.1
INFO: Installing DiffEqPDEBase v0.3.5
INFO: Installing DiffEqProblemLibrary v0.11.0
INFO: Installing DiffResults v0.0.2
INFO: Installing DiffRules v0.0.1
INFO: Installing Distances v0.5.0
INFO: Installing Distributions v0.15.0
INFO: Installing EllipsisNotation v0.3.0
INFO: Installing ForwardDiff v0.7.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing LineSearches v3.2.2
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v3.1.0
INFO: Installing NLsolve v0.13.0
INFO: Installing NaNMath v0.3.0
INFO: Installing OrdinaryDiffEq v2.30.0
INFO: Installing PDMats v0.7.1
INFO: Installing ParameterizedFunctions v2.3.0
INFO: Installing Parameters v0.8.0
INFO: Installing QuadGK v0.1.3
INFO: Installing RandomNumbers v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing ResettableStacks v0.2.0
INFO: Installing Rmath v0.3.0
INFO: Installing Roots v0.4.1
INFO: Installing SHA v0.5.2
INFO: Installing SpecialFunctions v0.3.5
INFO: Installing StatsBase v0.19.2
INFO: Installing StatsFuns v0.5.0
INFO: Installing StochasticDiffEq v2.19.0
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.2.0
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Conda
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building SymEngine
INFO: Testing DiffEqJump
  1.317063 seconds (2.84 M allocations: 178.199 MiB, 3.34% gc time)
  0.989119 seconds (1.81 M allocations: 87.219 MiB, 1.99% gc time)
Test Summary:       | Pass  Total
Constant Rate Tests |    2      2
 16.240037 seconds (15.27 M allocations: 809.982 MiB, 2.24% gc time)
Test Summary:       | Pass  Total
Variable Rate Tests |    5      5
 20.357296 seconds (19.67 M allocations: 5.082 GiB, 2.86% gc time)
  1.054206 seconds (599.16 k allocations: 31.212 MiB, 0.97% gc time)
  0.906196 seconds (471.15 k allocations: 24.879 MiB, 1.27% gc time)
Split Coupled Tests: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: TypeError: non-boolean (DiffEqBase.#isinplace) used in boolean context
  Stacktrace:
   [1] initialize_callbacks!(::StochasticDiffEq.SDEIntegrator{StochasticDiffEq.SRIW1,DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,Float64,Float64,Float64,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Array{Float64,1},Array{Array{Float64,1},1},DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Array{Float64,1},DiffEqBase.RODESolution{Float64,2,Array{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},1},Void,Void,Array{Float64,1},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Array{Float64,1},Array{Array{Float64,1},1},DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Array{Float64,1}}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},StochasticDiffEq.SRIW1,StochasticDiffEq.LinearInterpolationData{Array{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},1},Array{Float64,1}}},StochasticDiffEq.SRIW1Cache{Array{Float64,1},DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Array{Float64,1}},Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},StochasticDiffEq.SDEOptions{Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void,Float64,Float64,Float64,Float64,Array{Float64,1},Array{Float64,1},Array{Float64,1}},Void}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:423
   [2] #init#77(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Int64, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::DiffEqBase.#ODE_DEFAULT_NORM, ::DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK, ::DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}}, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:316
   [3] (::DiffEqBase.#kw##init)(::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0
   [4] #init#40(::Void, ::Tuple{Bool,Bool}, ::Array{Any,1}, ::Function, ::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},Tuple{}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:18
   [5] init(::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},Tuple{}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:18
   [6] #solve#39(::Array{Any,1}, ::Function, ::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},Tuple{}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:6
   [7] solve(::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.CoupledArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##53#55{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},DiffEqJump.##54#56{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##41#42,##43#44,Void,UniformScaling{Int64},Void},Int64},Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}}}}},DiffEqJump.DirectJumpAggregation{Float64,Tuple{DiffEqJump.##70#79,DiffEqJump.##71#80,DiffEqJump.##73#82},Tuple{DiffEqJump.##69#78,##37#38,DiffEqJump.##72#81}},Tuple{}}, ::StochasticDiffEq.SRIW1) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:6
   [8] include_from_node1(::String) at ./loading.jl:576
   [9] include(::String) at ./sysimg.jl:14
   [10] macro expansion at /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl:6 [inlined]
   [11] macro expansion at ./test.jl:860 [inlined]
   [12] macro expansion at ./util.jl:237 [inlined]
   [13] anonymous at ./<missing>:?
   [14] include_from_node1(::String) at ./loading.jl:576
   [15] include(::String) at ./sysimg.jl:14
   [16] process_options(::Base.JLOptions) at ./client.jl:305
   [17] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqJump/test/splitcoupled.jl, in expression starting on line 56
Test Summary:       | Pass  Error  Total
Split Coupled Tests |    2      1      3
ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl, in expression starting on line 6
=============================[ ERROR: DiffEqJump ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.8.0
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing CommonSubexpressions v0.0.1
INFO: Removing Conda v0.7.0
INFO: Removing DataStructures v0.7.2
INFO: Removing DiffBase v0.3.2
INFO: Removing DiffEqDiffTools v0.2.0
INFO: Removing DiffEqNoiseProcess v0.7.1
INFO: Removing DiffEqPDEBase v0.3.5
INFO: Removing DiffEqProblemLibrary v0.11.0
INFO: Removing DiffResults v0.0.2
INFO: Removing DiffRules v0.0.1
INFO: Removing Distances v0.5.0
INFO: Removing Distributions v0.15.0
INFO: Removing EllipsisNotation v0.3.0
INFO: Removing ForwardDiff v0.7.0
INFO: Removing GenericSVD v0.1.0
INFO: Removing LineSearches v3.2.2
INFO: Removing MuladdMacro v0.0.2
INFO: Removing NLSolversBase v3.1.0
INFO: Removing NLsolve v0.13.0
INFO: Removing NaNMath v0.3.0
INFO: Removing OrdinaryDiffEq v2.30.0
INFO: Removing PDMats v0.7.1
INFO: Removing ParameterizedFunctions v2.3.0
INFO: Removing Parameters v0.8.0
INFO: Removing QuadGK v0.1.3
INFO: Removing RandomNumbers v0.1.1
INFO: Removing Reexport v0.0.3
INFO: Removing ResettableStacks v0.2.0
INFO: Removing Rmath v0.3.0
INFO: Removing Roots v0.4.1
INFO: Removing SHA v0.5.2
INFO: Removing SpecialFunctions v0.3.5
INFO: Removing StatsBase v0.19.2
INFO: Removing StatsFuns v0.5.0
INFO: Removing StochasticDiffEq v2.19.0
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.2.0
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DiffEqJump had test errors

>>> End of log
