>>> 'Pkg.add("DiffEqJump")' log
INFO: Installing BinDeps v0.8.7
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.7.4
INFO: Installing DiffEqBase v3.11.0
INFO: Installing DiffEqJump v4.2.0
INFO: Installing Distributions v0.15.0
INFO: Installing FunctionWrappers v0.1.0
INFO: Installing IteratorInterfaceExtensions v0.0.2
INFO: Installing LinearMaps v1.0.4
INFO: Installing MacroTools v0.4.0
INFO: Installing Missings v0.2.9
INFO: Installing NamedTuples v4.0.0
INFO: Installing PDMats v0.8.0
INFO: Installing QuadGK v0.2.1
INFO: Installing RandomNumbers v0.1.1
INFO: Installing RecipesBase v0.2.3
INFO: Installing RecursiveArrayTools v0.14.6
INFO: Installing Requires v0.4.3
INFO: Installing Rmath v0.3.2
INFO: Installing SHA v0.5.7
INFO: Installing SimpleTraits v0.6.0
INFO: Installing SortingAlgorithms v0.2.1
INFO: Installing SpecialFunctions v0.4.0
INFO: Installing StaticArrays v0.7.0
INFO: Installing StatsBase v0.21.0
INFO: Installing StatsFuns v0.6.0
INFO: Installing TableTraits v0.2.0
INFO: Installing URIParser v0.3.1
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqJump
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqJump")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (2240.734375 MB free)
Uptime: 70084.0 sec
Load Avg:  0.9228515625  0.9853515625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3491 MHz    4305551 s       2422 s     314898 s    1414811 s         57 s
#2  3491 MHz    1173026 s       4996 s     159862 s    5517550 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqJump                    4.2.0
 - JSON                          0.17.2
29 additional packages:
 - BinDeps                       0.8.7
 - Calculus                      0.2.2
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - DiffEqBase                    3.11.0
 - Distributions                 0.15.0
 - FunctionWrappers              0.1.0
 - IteratorInterfaceExtensions   0.0.2
 - LinearMaps                    1.0.4
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - PDMats                        0.8.0
 - QuadGK                        0.2.1
 - RandomNumbers                 0.1.1
 - RecipesBase                   0.2.3
 - RecursiveArrayTools           0.14.6
 - Requires                      0.4.3
 - Rmath                         0.3.2
 - SHA                           0.5.7
 - SimpleTraits                  0.6.0
 - SortingAlgorithms             0.2.1
 - SpecialFunctions              0.4.0
 - StaticArrays                  0.7.0
 - StatsBase                     0.21.0
 - StatsFuns                     0.6.0
 - TableTraits                   0.2.0
 - URIParser                     0.3.1
INFO: Computing test dependencies for DiffEqJump...
INFO: Installing CommonSubexpressions v0.1.0
INFO: Installing Conda v0.7.1
INFO: Installing DiffBase v0.3.2
INFO: Installing DiffEqBiological v2.1.0
INFO: Installing DiffEqDiffTools v0.4.1
INFO: Installing DiffEqNoiseProcess v1.0.1
INFO: Installing DiffEqOperators v1.2.0
INFO: Installing DiffEqProblemLibrary v2.2.0
INFO: Installing DiffResults v0.0.3
INFO: Installing DiffRules v0.0.4
INFO: Installing Distances v0.6.0
INFO: Installing Expokit v0.0.1
INFO: Installing ForwardDiff v0.7.5
INFO: Installing GenericSVD v0.1.0
INFO: Installing Juno v0.4.0
INFO: Installing LineSearches v3.2.5
INFO: Installing Media v0.3.0
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v4.4.1
INFO: Installing NLsolve v1.0.1
INFO: Installing NaNMath v0.3.1
INFO: Installing OrdinaryDiffEq v3.11.0
INFO: Installing ParameterizedFunctions v3.0.0
INFO: Installing Parameters v0.8.1
INFO: Installing Reexport v0.1.0
INFO: Installing ResettableStacks v0.3.1
INFO: Installing Roots v0.5.0
INFO: Installing StochasticDiffEq v4.4.1
INFO: Installing SymEngine v0.4.0
INFO: Building Conda
INFO: Building SymEngine
INFO: Building SpecialFunctions
INFO: Building Rmath
INFO: Building DiffEqBase
INFO: ~~~ DifferentialEquations.jl *BREAKING* changes  ~~~

We have changed the front-end API on how
users may define equations of motion and 
problems, for all problem types that can
be used in the DifferentialEquations.jl.
These are *BREAKING* changes, and they
also have *NO WARNINGS*!

Please see our latest documentation here:
http://docs.juliadiffeq.org/latest/

or the blogpost that describes the changes:
http://juliadiffeq.org/2018/01/24/Parameters.html

In short, the mutated argument is the first argument,
and parameters are now directly passed
into the equations of motion function. For all
types now mutation goes first, then dependent variables, 
then parameters, then independent variables. 

`f(mutated, dependent variables, p/integrator, independent variables)`

For example, this means that the ODE syntax will be `f(u,p,t)` (for the
out-of-place) and `f(du,u,p,t)` (for the in-place). Notice
that this change also removes the need for ParameterizedFunctions
as now parameters are part of the equations of motion.

For more details please visit the above links!
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Testing DiffEqJump
  0.524573 seconds (2.42 M allocations: 139.376 MiB, 6.79% gc time)
  0.256886 seconds (1.41 M allocations: 70.001 MiB, 6.60% gc time)
Test Summary:       | Pass  Total
Constant Rate Tests |    2      2
 35.610643 seconds (35.01 M allocations: 10.331 GiB, 7.14% gc time)
Test Summary:       | Pass  Total
Variable Rate Tests |    5      5
 23.855597 seconds (20.49 M allocations: 5.088 GiB, 2.46% gc time)
  7.312080 seconds (12.86 M allocations: 4.918 GiB, 6.01% gc time)
  7.485420 seconds (12.70 M allocations: 4.911 GiB, 6.34% gc time)
Test Summary:       | Pass  Total
Split Coupled Tests |    5      5
 68.411280 seconds (92.22 M allocations: 34.014 GiB, 5.16% gc time)
Test Summary: | Pass  Total
SSA Tests     |    1      1
  1.007665 seconds (333.25 k allocations: 19.751 MiB, 0.67% gc time)
Test Summary:     |
Tau Leaping Tests | No tests
  0.700177 seconds (278.53 k allocations: 14.188 MiB, 1.27% gc time)
Test Summary:            | Pass  Total
Linear Reaction SSA Test |    9      9
 51.376519 seconds (182.40 M allocations: 3.566 GiB, 1.84% gc time)
Test Summary:                           | Pass  Total
Mass Action Jump Tests; Gene Expr Model |    1      1
  4.530937 seconds (342.66 k allocations: 19.841 MiB, 0.23% gc time)
Test Summary:                              | Pass  Total
Mass Action Jump Tests; Nonlinear Rx Model |    4      4
  7.151117 seconds (3.30 M allocations: 195.590 MiB, 1.00% gc time)
Test Summary:                         | Pass  Total
Mass Action Jump Tests; Special Cases |    8      8
  0.661836 seconds (674.43 k allocations: 71.916 MiB, 4.79% gc time)
elapsed time: 194.396827789 seconds
INFO: DiffEqJump tests passed
INFO: Removing CommonSubexpressions v0.1.0
INFO: Removing Conda v0.7.1
INFO: Removing DiffBase v0.3.2
INFO: Removing DiffEqBiological v2.1.0
INFO: Removing DiffEqDiffTools v0.4.1
INFO: Removing DiffEqNoiseProcess v1.0.1
INFO: Removing DiffEqOperators v1.2.0
INFO: Removing DiffEqProblemLibrary v2.2.0
INFO: Removing DiffResults v0.0.3
INFO: Removing DiffRules v0.0.4
INFO: Removing Distances v0.6.0
INFO: Removing Expokit v0.0.1
INFO: Removing ForwardDiff v0.7.5
INFO: Removing GenericSVD v0.1.0
INFO: Removing Juno v0.4.0
INFO: Removing LineSearches v3.2.5
INFO: Removing Media v0.3.0
INFO: Removing MuladdMacro v0.0.2
INFO: Removing NLSolversBase v4.4.1
INFO: Removing NLsolve v1.0.1
INFO: Removing NaNMath v0.3.1
INFO: Removing OrdinaryDiffEq v3.11.0
INFO: Removing ParameterizedFunctions v3.0.0
INFO: Removing Parameters v0.8.1
INFO: Removing Reexport v0.1.0
INFO: Removing ResettableStacks v0.3.1
INFO: Removing Roots v0.5.0
INFO: Removing StochasticDiffEq v4.4.1
INFO: Removing SymEngine v0.4.0

>>> End of log
