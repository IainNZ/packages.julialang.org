>>> 'Pkg.add("DiffEqJump")' log
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffEqBase v1.8.0
INFO: Installing DiffEqJump v0.3.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.7
INFO: Installing Parameters v0.7.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing SimpleTraits v0.5.0
INFO: Installing StaticArrays v0.5.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqJump
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqJump")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1759.48828125 MB free)
Uptime: 42857.0 sec
Load Avg:  1.0546875  1.001953125  1.048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2726460 s         98 s     124126 s     792934 s         38 s
#2  3501 MHz     863132 s       6503 s      93028 s    3216243 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DiffEqJump                    0.3.2
 - JSON                          0.12.0
13 additional packages:
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DiffEqBase                    1.8.0
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - MacroTools                    0.3.6
 - Media                         0.2.7
 - Parameters                    0.7.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - SimpleTraits                  0.5.0
 - StaticArrays                  0.5.0
INFO: Computing test dependencies for DiffEqJump...
INFO: Installing BinDeps v0.6.0
INFO: Installing Blosc v0.2.1
INFO: Installing Calculus v0.2.2
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqNoiseProcess v0.1.1
INFO: Installing DiffEqPDEBase v0.3.2
INFO: Installing DiffEqProblemLibrary v0.7.0
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.13.0
INFO: Installing EllipsisNotation v0.1.0
INFO: Installing FileIO v0.3.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GenericSVD v0.0.2
INFO: Installing HDF5 v0.8.1
INFO: Installing Iterators v0.3.1
INFO: Installing JLD v0.6.10
INFO: Installing LegacyStrings v0.2.1
INFO: Installing LineSearches v0.1.5
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing OrdinaryDiffEq v2.4.0
INFO: Installing PDMats v0.6.0
INFO: Installing ParameterizedFunctions v2.1.0
INFO: Installing PolynomialFactors v0.0.5
INFO: Installing Polynomials v0.1.5
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.3
INFO: Installing QuadGK v0.1.2
INFO: Installing ResettableStacks v0.1.0
INFO: Installing Rmath v0.1.6
INFO: Installing Roots v0.3.1
INFO: Installing SHA v0.3.2
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.15.0
INFO: Installing StatsFuns v0.5.0
INFO: Installing StochasticDiffEq v2.2.1
INFO: Installing SymEngine v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
INFO: Building SymEngine
INFO: Building HDF5
INFO: Testing DiffEqJump
  2.030347 seconds (6.92 M allocations: 427.441 MiB, 5.15% gc time)
  1.775999 seconds (4.00 M allocations: 235.264 MiB, 3.65% gc time)
Test Summary:       | Pass  Total
Constant Rate Tests |    2      2
 25.062196 seconds (45.04 M allocations: 2.243 GiB, 3.39% gc time)
Variable Rate Tests: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: dt has the wrong sign. Exiting
  Stacktrace:
   [1] #init#47(::Float64, ::Int64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Void, ::Bool, ::Void, ::Bool, ::Bool, ::Bool, ::Bool, ::Rational{Int64}, ::Float64, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Rational{Int64}, ::Rational{Int64}, ::Rational{Int64}, ::Float64, ::Float64, ::Float64, ::DiffEqBase.#ODE_DEFAULT_NORM, ::DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK, ::DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Bool, ::DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE, ::String, ::Void, ::DiffEqBase.CallbackSet{Tuple{DiffEqBase.ContinuousCallback{DiffEqJump.##27#29,DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void},DiffEqBase.ContinuousCallback{DiffEqJump.##31#33,DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void}},Tuple{}}, ::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:129
   [2] (::DiffEqBase.#kw##init)(::Array{Any,1}, ::DiffEqBase.#init, ::DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0
   [3] #init#36(::DiffEqBase.CallbackSet{Tuple{},Tuple{}}, ::Tuple{Bool,Bool}, ::Array{Any,1}, ::Function, ::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{DiffEqBase.ContinuousCallback{DiffEqJump.##27#29,DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void},DiffEqBase.ContinuousCallback{DiffEqJump.##31#33,DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void}},Tuple{}},Void,Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:18
   [4] init(::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{DiffEqBase.ContinuousCallback{DiffEqJump.##27#29,DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void},DiffEqBase.ContinuousCallback{DiffEqJump.##31#33,DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void}},Tuple{}},Void,Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:18
   [5] #solve#35(::Array{Any,1}, ::Function, ::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{DiffEqBase.ContinuousCallback{DiffEqJump.##27#29,DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void},DiffEqBase.ContinuousCallback{DiffEqJump.##31#33,DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void}},Tuple{}},Void,Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}}}, ::StochasticDiffEq.SRIW1, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:6
   [6] solve(::DiffEqJump.JumpProblem{DiffEqBase.SDEProblem{DiffEqJump.ExtendedJumpArray{Array{Float64,1},Array{Float64,1}},Float64,true,Void,DiffEqJump.##15#17{DiffEqBase.SDEProblem{Array{Float64,1},Float64,true,Void,##15#16,##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.JumpSet{Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},Tuple{}}},##21#22,Void,UniformScaling{Int64},Void},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{DiffEqBase.ContinuousCallback{DiffEqJump.##27#29,DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##28#30{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void},DiffEqBase.ContinuousCallback{DiffEqJump.##31#33,DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqJump.##32#34{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}},DiffEqBase.#INITIALIZE_DEFAULT,Float64,Int64,Void}},Tuple{}},Void,Tuple{DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64},DiffEqJump.VariableRateJump{##11#12,##13#14,Void,Float64,Int64}}}, ::StochasticDiffEq.SRIW1) at /home/vagrant/.julia/v0.6/DiffEqJump/src/solve.jl:6
   [7] include_from_node1(::String) at ./loading.jl:569
   [8] include(::String) at ./sysimg.jl:14
   [9] macro expansion at /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl:5 [inlined]
   [10] macro expansion at ./test.jl:856 [inlined]
   [11] macro expansion at ./util.jl:237 [inlined]
   [12] anonymous at ./<missing>:?
   [13] include_from_node1(::String) at ./loading.jl:569
   [14] include(::String) at ./sysimg.jl:14
   [15] process_options(::Base.JLOptions) at ./client.jl:305
   [16] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DiffEqJump/test/variable_rate.jl, in expression starting on line 35
Test Summary:       | Pass  Error  Total
Variable Rate Tests |    2      1      3
ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl, in expression starting on line 5
=============================[ ERROR: DiffEqJump ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DiffEqJump/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.6.0
INFO: Removing Blosc v0.2.1
INFO: Removing Calculus v0.2.2
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing Combinatorics v0.4.0
INFO: Removing Conda v0.5.3
INFO: Removing DiffBase v0.2.0
INFO: Removing DiffEqNoiseProcess v0.1.1
INFO: Removing DiffEqPDEBase v0.3.2
INFO: Removing DiffEqProblemLibrary v0.7.0
INFO: Removing Distances v0.4.1
INFO: Removing Distributions v0.13.0
INFO: Removing EllipsisNotation v0.1.0
INFO: Removing FileIO v0.3.1
INFO: Removing ForwardDiff v0.4.2
INFO: Removing GenericSVD v0.0.2
INFO: Removing HDF5 v0.8.1
INFO: Removing Iterators v0.3.1
INFO: Removing JLD v0.6.10
INFO: Removing LegacyStrings v0.2.1
INFO: Removing LineSearches v0.1.5
INFO: Removing NLsolve v0.9.1
INFO: Removing NaNMath v0.2.4
INFO: Removing Optim v0.7.8
INFO: Removing OrdinaryDiffEq v2.4.0
INFO: Removing PDMats v0.6.0
INFO: Removing ParameterizedFunctions v2.1.0
INFO: Removing PolynomialFactors v0.0.5
INFO: Removing Polynomials v0.1.5
INFO: Removing PositiveFactorizations v0.0.4
INFO: Removing Primes v0.1.3
INFO: Removing QuadGK v0.1.2
INFO: Removing ResettableStacks v0.1.0
INFO: Removing Rmath v0.1.6
INFO: Removing Roots v0.3.1
INFO: Removing SHA v0.3.2
INFO: Removing SpecialFunctions v0.1.1
INFO: Removing StatsBase v0.15.0
INFO: Removing StatsFuns v0.5.0
INFO: Removing StochasticDiffEq v2.2.1
INFO: Removing SymEngine v0.2.0
INFO: Removing URIParser v0.1.8
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DiffEqJump had test errors

>>> End of log
