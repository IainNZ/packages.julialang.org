>>> 'Pkg.add("Symata")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of Symata from https://github.com/jlapeyre/Symata.jl.git
[ Info: Installing Combinatorics v0.6.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing Polynomials v0.3.0
[ Info: Installing Primes v0.3.0
[ Info: Installing Symata v0.2.0
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building PyCall
┌ Info: Using the Python distribution in the Conda package by default.
└ To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... failed

# >>>>>>>>>>>>>>>>>>>>>> ERROR REPORT <<<<<<<<<<<<<<<<<<<<<<

`$ /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/conda install -y numpy`

  environment variables:
                 CIO_TEST=<not set>
                  CONDARC=/home/vagrant/.julia/v0.7/Conda/deps/usr/condarc-julia.yml
        CONDA_DEFAULT_ENV=/home/vagrant/.julia/v0.7/Conda/deps/usr
             CONDA_PREFIX=/home/vagrant/.julia/v0.7/Conda/deps/usr
               CONDA_ROOT=/home/vagrant/.julia/v0.7/Conda/deps/usr
          LD_LIBRARY_PATH=:/usr/local/lib/
                     PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/game
                          s:/usr/local/games:/home/vagrant/julia/bin/
       REQUESTS_CA_BUNDLE=<not set>
            SSL_CERT_FILE=<not set>

     active environment : base
    active env location : /home/vagrant/.julia/v0.7/Conda/deps/usr
       user config file : /home/vagrant/.condarc
 populated config files : /home/vagrant/.julia/v0.7/Conda/deps/usr/condarc-julia.yml
          conda version : 4.5.3
    conda-build version : not installed
         python version : 2.7.15.final.0
       base environment : /home/vagrant/.julia/v0.7/Conda/deps/usr  (writable)
           channel URLs : https://conda.anaconda.org/conda-forge/linux-64
                          https://conda.anaconda.org/conda-forge/noarch
                          https://repo.anaconda.com/pkgs/main/linux-64
                          https://repo.anaconda.com/pkgs/main/noarch
                          https://repo.anaconda.com/pkgs/free/linux-64
                          https://repo.anaconda.com/pkgs/free/noarch
                          https://repo.anaconda.com/pkgs/r/linux-64
                          https://repo.anaconda.com/pkgs/r/noarch
                          https://repo.anaconda.com/pkgs/pro/linux-64
                          https://repo.anaconda.com/pkgs/pro/noarch
          package cache : /home/vagrant/.julia/v0.7/Conda/deps/usr/pkgs
                          /home/vagrant/.conda/pkgs
       envs directories : /home/vagrant/.julia/v0.7/Conda/deps/usr/envs
                          /home/vagrant/.conda/envs
               platform : linux-64
             user-agent : conda/4.5.3 requests/2.18.4 CPython/2.7.15 Linux/3.13.0-143-generic ubuntu/14.04 glibc/2.19
                UID:GID : 1000:1000
             netrc file : None
           offline mode : False


V V V V V V V V V V V V V V V V V V V V V V V V V V V V V V V

CondaHTTPError: HTTP 000 CONNECTION FAILED for url <https://conda.anaconda.org/conda-forge/linux-64/repodata.json>
Elapsed: -

An HTTP error occurred when trying to retrieve this URL.
HTTP errors are often intermittent, and a simple retry will get you on your way.
ConnectionError(MaxRetryError("HTTPSConnectionPool(host='conda.anaconda.org', port=443): Max retries exceeded with url: /conda-forge/linux-64/repodata.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7ff3758ab0d0>: Failed to establish a new connection: [Errno 101] Network is unreachable',))",),)

A reportable application error has occurred. Conda has prepared the above report.
Upload did not complete.┌ Error: ------------------------------------------------------------
│ # Build failed for PyCall
│   exception =
│    LoadError: failed process: Process(setenv(`/home/vagrant/.julia/v0.7/Conda/deps/usr/bin/conda install -y numpy`,["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/", "PWD=/vagrant/0.7PZ", "SHELL=/bin/bash", "SSH_CONNECTION=10.0.2.2 45206 10.0.2.15 22", "LD_LIBRARY_PATH=:/usr/local/lib/", "CONDARC=/home/vagrant/.julia/v0.7/Conda/deps/usr/condarc-julia.yml", "MAIL=/var/mail/vagrant", "LANG=en_US.UTF-8", "SHLVL=3", "LOGNAME=vagrant", "XDG_RUNTIME_DIR=/run/user/1000", "XDG_SESSION_ID=3", "CONDA_PREFIX=/home/vagrant/.julia/v0.7/Conda/deps/usr", "OLDPWD=/home/vagrant", "SSH_CLIENT=10.0.2.2 45206 22", "_=/usr/bin/timeout", "CONDA_DEFAULT_ENV=/home/vagrant/.julia/v0.7/Conda/deps/usr", "USER=vagrant", "TERM=vt100", "HOME=/home/vagrant", "OPENBLAS_MAIN_FREE=1", "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"]), ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run(::Cmd) at ./process.jl:668
│     [5] runconda(::Cmd, ::String) at /home/vagrant/.julia/v0.7/Conda/src/Conda.jl:130
│     [6] add at /home/vagrant/.julia/v0.7/Conda/src/Conda.jl:203 [inlined] (repeats 2 times)
│     [7] top-level scope at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:200
│     [8] include at ./boot.jl:314 [inlined]
│     [9] include_relative(::Module, ::String) at ./loading.jl:1067
│     [10] include at ./sysimg.jl:29 [inlined]
│     [11] include(::String) at ./loading.jl:1101
│     [12] top-level scope
│     [13] eval at ./boot.jl:317 [inlined]
│     [14] eval at ./sysimg.jl:74 [inlined]
│     [15] evalfile(::String, ::Array{String,1}) at ./loading.jl:1096 (repeats 2 times)
│     [16] #4 at ./none:13 [inlined]
│     [17] cd(::getfield(Main, Symbol("##4#6")){String}, ::String) at ./file.jl:72
│     [18] (::getfield(Main, Symbol("##3#5")))(::IOStream) at ./none:12
│     [19] #open#326(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##3#5")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [20] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [21] top-level scope
│     [22] eval at ./boot.jl:317 [inlined]
│     [23] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [24] exec_options(::Base.JLOptions) at ./client.jl:304
│     [25] _start() at ./client.jl:457
│    in expression starting at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:254
└ @ Main none:16
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ PyCall had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("PyCall")`
│  - build a single package by running its `deps/build.jl` script
└ @ Pkg.Entry entry.jl:649
[ Info: Package database updated

>>> 'Pkg.test("Symata")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4516949 s       6476 s     314302 s    1304925 s         57 s
       #2  3500 MHz    1003483 s        100 s     104120 s    6028752 s          2 s
       
  Memory: 2.939197540283203 GB (926.87890625 MB free)
  Uptime: 72684.0 sec
  Load Avg:  0.9130859375  0.94189453125  0.9482421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
5 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.16.1
 - PyPlot                        2.5.0
 - Symata                        0.2.0
17 additional packages:
 - BinDeps                       0.8.8
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Combinatorics                 0.6.0
 - Compat                        0.64.0
 - FixedPointNumbers             0.4.6
 - IterTools                     0.2.1
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.5
 - Polynomials                   0.3.0
 - Primes                        0.3.0
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - URIParser                     0.3.1
 - VersionParsing                1.1.0
 - tmpUchVR1                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing Symata
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: Base.REPL is deprecated, run `using REPL` instead
  likely near /home/vagrant/.julia/v0.7/Symata/src/sjcompat.jl:39
ERROR: LoadError: LoadError: syntax: extra token "MxprArgs" after end of expression
Stacktrace:
 [1] include at ./boot.jl:314 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1067
 [3] include at ./sysimg.jl:29 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/Symata/src/Symata.jl:3
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:317 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Symata/src/early_kernelstate.jl:12
in expression starting at /home/vagrant/.julia/v0.7/Symata/src/Symata.jl:31
ERROR: LoadError: Failed to precompile Symata to /home/vagrant/.julia/compiled/v0.7/Symata.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/Symata/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Symata
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Symata/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
ERROR: Symata had test errors

>>> End of log
