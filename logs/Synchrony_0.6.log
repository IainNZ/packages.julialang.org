>>> 'Pkg.add("Synchrony")' log
INFO: Cloning cache of Synchrony from https://github.com/simonster/Synchrony.jl.git
INFO: Installing AbstractFFTs v0.2.0
INFO: Installing ArrayViews v0.6.4
INFO: Installing BinDeps v0.6.0
INFO: Installing DSP v0.3.2
INFO: Installing FFTW v0.0.2
INFO: Installing NumericExtensions v0.6.2
INFO: Installing NumericFuns v0.2.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.3
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing Synchrony v0.0.1
INFO: Installing URIParser v0.1.8
INFO: Building FFTW
WARNING: Compat.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/FFTW/deps/build.jl:73
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Synchrony
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Synchrony")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1033.59375 MB free)
Uptime: 71676.0 sec
Load Avg:  0.98876953125  0.9501953125  0.94873046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    4778875 s         72 s     227116 s    1007245 s         72 s
#2  3496 MHz     996773 s       5720 s     124410 s    5910484 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - Synchrony                     0.0.1
13 additional packages:
 - AbstractFFTs                  0.2.0
 - ArrayViews                    0.6.4
 - BinDeps                       0.6.0
 - Compat                        0.27.0
 - DSP                           0.3.2
 - FFTW                          0.0.2
 - NumericExtensions             0.6.2
 - NumericFuns                   0.2.4
 - Polynomials                   0.1.5
 - Reexport                      0.0.3
 - SHA                           0.3.3
 - SpecialFunctions              0.2.0
 - URIParser                     0.1.8
INFO: Testing Synchrony
Running tests:
 * multitaper.jl
WARNING: Method definition plan_bfft(Union{DenseArray{#s18, N}, Base.SubArray{#s18, N, A, I, L} where L, Base.ReshapedArray{#s18, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s18<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_bfft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_brfft(Array{Any, 1}, typeof(Base.DFT.plan_brfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_rfft(Array{Any, 1}, typeof(Base.DFT.plan_rfft), Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_fft!(Union{DenseArray{#s32, N}, Base.SubArray{#s32, N, A, I, L} where L, Base.ReshapedArray{#s32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s32<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_fft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{#s3, N}, Base.SubArray{#s3, N, A, I, L} where L, Base.ReshapedArray{#s3, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s3<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft!(Array{Any, 1}, typeof(Base.DFT.plan_bfft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:671 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:686.
WARNING: Method definition plan_rfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_rfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:647 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:662.
WARNING: Method definition plan_bfft!(Union{DenseArray{#s10, N}, Base.SubArray{#s10, N, A, I, L} where L, Base.ReshapedArray{#s10, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s10<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:607 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:622.
WARNING: Method definition plan_bfft!(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:603 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:618.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float32}, N}, Base.SubArray{Base.Complex{Float32}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float32}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float32, N}, Base.SubArray{Float32, N, A, I, L} where L, Base.ReshapedArray{Float32, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_brfft(Union{DenseArray{Base.Complex{Float64}, N}, Base.SubArray{Base.Complex{Float64}, N, A, I, L} where L, Base.ReshapedArray{Base.Complex{Float64}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Integer, Any) in module FFTW at fft/FFTW.jl:655 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:670.
WARNING: Method definition plan_brfft(Union{DenseArray{Float64, N}, Base.SubArray{Float64, N, A, I, L} where L, Base.ReshapedArray{Float64, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N) in module FFTW at fft/FFTW.jl:672 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:687.
WARNING: Method definition plan_fft(Union{DenseArray{#s24, N}, Base.SubArray{#s24, N, A, I, L} where L, Base.ReshapedArray{#s24, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s24<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW at fft/FFTW.jl:605 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:620.
WARNING: Method definition plan_fft(Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW at fft/FFTW.jl:596 overwritten in module FFTW at /home/vagrant/.julia/v0.6/FFTW/src/fft.jl:611.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{#s16, N}, Base.SubArray{#s16, N, A, I, L} where L, Base.ReshapedArray{#s16, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s16<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_bfft(Array{Any, 1}, typeof(Base.DFT.plan_bfft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{#s34, N}, Base.SubArray{#s34, N, A, I, L} where L, Base.ReshapedArray{#s34, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s34<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft!(Array{Any, 1}, typeof(Base.DFT.plan_fft!), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{#s26, N}, Base.SubArray{#s26, N, A, I, L} where L, Base.ReshapedArray{#s26, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T} where N where #s26<:Union{Base.Complex{Float64}, Base.Complex{Float32}}) in module FFTW overwritten in module FFTW.
WARNING: Method definition #plan_fft(Array{Any, 1}, typeof(Base.DFT.plan_fft), Union{DenseArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N}, Base.SubArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, I, L} where L, Base.ReshapedArray{T<:Union{Base.Complex{Float64}, Base.Complex{Float32}}, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T)} where I<:Tuple{Vararg{Union{Int64, Base.Range{Int64}, Base.AbstractCartesianIndex{N} where N}, N} where N} where A<:Union{DenseArray{T, N} where N where T, Base.ReshapedArray{T, N, A, MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N} where A<:(DenseArray{T, N} where N where T) where N where T}, Any) in module FFTW overwritten in module FFTW.
WARNING: Method definition (::Type{ArrayViews.UnsafeContiguousView{T, N} where N where T})(Ptr{T}, Int64, Tuple{Vararg{Int64, N}}) in module ArrayViews at /home/vagrant/.julia/v0.6/ArrayViews/src/arrviews.jl:18 overwritten at /home/vagrant/.julia/v0.6/ArrayViews/src/arrviews.jl:26.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 32
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 33
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 34
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 35
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 37
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:330
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 38
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 39
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 40
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 41
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:322
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 42

WARNING: deprecated syntax "abstract Functor{N}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:8.
Use "abstract type Functor{N} end" instead.

WARNING: deprecated syntax "typealias UnaryFunctor Functor{1}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:10.
Use "const UnaryFunctor = Functor{1}" instead.

WARNING: deprecated syntax "typealias BinaryFunctor Functor{2}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:11.
Use "const BinaryFunctor = Functor{2}" instead.

WARNING: deprecated syntax "typealias TernaryFunctor Functor{3}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:12.
Use "const TernaryFunctor = Functor{3}" instead.
ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: UndefVarError: symbol not defined
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:569
 [2] include(::String) at ./sysimg.jl:14
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] eval(::Module, ::Any) at ./boot.jl:235
 [5] _require(::Symbol) at ./loading.jl:483
 [6] require(::Symbol) at ./loading.jl:398
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] _require(::Symbol) at ./loading.jl:483
 [10] require(::Symbol) at ./loading.jl:398
 [11] include_from_node1(::String) at ./loading.jl:569
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl, in expression starting on line 139
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/NumericFuns.jl, in expression starting on line 22
while loading /home/vagrant/.julia/v0.6/NumericExtensions/src/NumericExtensions.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/Synchrony/src/Synchrony.jl, in expression starting on line 21
while loading /home/vagrant/.julia/v0.6/Synchrony/test/multitaper.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl, in expression starting on line 10
==============================[ ERROR: Synchrony ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Synchrony had test errors

>>> End of log
