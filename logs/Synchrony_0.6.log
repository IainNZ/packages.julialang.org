>>> 'Pkg.add("Synchrony")' log
INFO: Cloning cache of Synchrony from https://github.com/simonster/Synchrony.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing DSP v0.2.0
INFO: Installing NumericExtensions v0.6.2
INFO: Installing NumericFuns v0.2.4
INFO: Installing Polynomials v0.1.5
INFO: Installing Reexport v0.0.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing Synchrony v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Synchrony
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Synchrony")' log
Julia Version 0.6.0-rc2.0
Commit 68e911b (2017-05-18 02:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (899.02734375 MB free)
Uptime: 65798.0 sec
Load Avg:  1.0029296875  1.0205078125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    4375327 s        776 s     181377 s     879333 s         48 s
#2  3500 MHz     675980 s       7594 s      85322 s    5699798 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - Synchrony                     0.0.1
8 additional packages:
 - ArrayViews                    0.6.4
 - Compat                        0.25.2
 - DSP                           0.2.0
 - NumericExtensions             0.6.2
 - NumericFuns                   0.2.4
 - Polynomials                   0.1.5
 - Reexport                      0.0.3
 - SpecialFunctions              0.1.1
INFO: Testing Synchrony
Running tests:
 * multitaper.jl
WARNING: Method definition (::Type{ArrayViews.UnsafeContiguousView{T, N} where N where T})(Ptr{T}, Int64, Tuple{Vararg{Int64, N}}) in module ArrayViews at /home/vagrant/.julia/v0.6/ArrayViews/src/arrviews.jl:18 overwritten at /home/vagrant/.julia/v0.6/ArrayViews/src/arrviews.jl:26.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 32
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 33
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 34
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 35
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 37
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:324
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 38
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 39
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 40
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 41
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] eval(::Module, ::Any) at ./boot.jl:235
 [7] _require(::Symbol) at ./loading.jl:483
 [8] require(::Symbol) at ./loading.jl:398
 [9] include_from_node1(::String) at ./loading.jl:569
 [10] eval(::Module, ::Any) at ./boot.jl:235
 [11] _require(::Symbol) at ./loading.jl:483
 [12] require(::Symbol) at ./loading.jl:398
 [13] include_from_node1(::String) at ./loading.jl:569
 [14] eval(::Module, ::Any) at ./boot.jl:235
 [15] _require(::Symbol) at ./loading.jl:483
 [16] require(::Symbol) at ./loading.jl:398
 [17] include_from_node1(::String) at ./loading.jl:569
 [18] include(::String) at ./sysimg.jl:14
 [19] macro expansion at /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl:12 [inlined]
 [20] anonymous at ./<missing>:?
 [21] include_from_node1(::String) at ./loading.jl:569
 [22] include(::String) at ./sysimg.jl:14
 [23] process_options(::Base.JLOptions) at ./client.jl:305
 [24] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/mathfuns.jl, in expression starting on line 42

WARNING: deprecated syntax "abstract Functor{N}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:8.
Use "abstract type Functor{N} end" instead.

WARNING: deprecated syntax "typealias UnaryFunctor Functor{1}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:10.
Use "const UnaryFunctor = Functor{1}" instead.

WARNING: deprecated syntax "typealias BinaryFunctor Functor{2}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:11.
Use "const BinaryFunctor = Functor{2}" instead.

WARNING: deprecated syntax "typealias TernaryFunctor Functor{3}" at /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl:12.
Use "const TernaryFunctor = Functor{3}" instead.
ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: LoadError: UndefVarError: symbol not defined
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:569
 [2] include(::String) at ./sysimg.jl:14
 [3] include_from_node1(::String) at ./loading.jl:569
 [4] eval(::Module, ::Any) at ./boot.jl:235
 [5] _require(::Symbol) at ./loading.jl:483
 [6] require(::Symbol) at ./loading.jl:398
 [7] include_from_node1(::String) at ./loading.jl:569
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] _require(::Symbol) at ./loading.jl:483
 [10] require(::Symbol) at ./loading.jl:398
 [11] include_from_node1(::String) at ./loading.jl:569
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/functors.jl, in expression starting on line 139
while loading /home/vagrant/.julia/v0.6/NumericFuns/src/NumericFuns.jl, in expression starting on line 22
while loading /home/vagrant/.julia/v0.6/NumericExtensions/src/NumericExtensions.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/Synchrony/src/Synchrony.jl, in expression starting on line 21
while loading /home/vagrant/.julia/v0.6/Synchrony/test/multitaper.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl, in expression starting on line 10
==============================[ ERROR: Synchrony ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Synchrony/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Synchrony had test errors

>>> End of log
