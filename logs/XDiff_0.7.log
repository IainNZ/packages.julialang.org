>>> 'Pkg.add("XDiff")' log
┌ Info: Cloning cache of Einsum from https://github.com/ahwillia/Einsum.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of Espresso from https://github.com/dfdx/Espresso.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of XDiff from https://github.com/dfdx/XDiff.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Einsum v0.1.0                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Espresso v0.4.0                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing IterTools v0.2.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MacroTools v0.4.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Matcha v0.1.1                   @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StaticArrays v0.6.6             @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Sugar v0.4.3                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing XDiff v0.1.0                    @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of XDiff
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("XDiff")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    5035198 s        138 s     236092 s    1225389 s         59 s
       #2  3500 MHz     995623 s       7312 s      89106 s    6462415 s          1 s
       
  Memory: 2.93927001953125 GB (1654.3671875 MB free)
  Uptime: 76786.0 sec
  Load Avg:  1.02587890625  1.0458984375  1.0419921875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - XDiff                         0.1.0
11 additional packages:
 - Compat                        0.46.0
 - DataStructures                0.7.4
 - Einsum                        0.1.0
 - Espresso                      0.4.0
 - IterTools                     0.2.0
 - MacroTools                    0.4.0
 - Matcha                        0.1.1
 - Nullables                     0.0.3
 - StaticArrays                  0.6.6
 - Sugar                         0.4.3
 - tmpRJzzrX                     0.0.0-             non-repo (unregistered)
[ Info: Computing test dependencies for XDiff...   @ Base.Pkg.Entry entry.jl:713
[ Info: Installing BinDeps v0.8.3                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CommonSubexpressions v0.0.1     @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffResults v0.0.2              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DiffRules v0.0.2                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ForwardDiff v0.7.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FunctionWrappers v0.1.0         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing ReverseDiff v0.2.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.3                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions                                 @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Error: ------------------------------------------------------------
│ # Build failed for SpecialFunctions
│   exception =
│    LoadError: LoadError: UndefVarError: pushfront! not defined
│    Stacktrace:
│     [1] #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:652
│     [2] _find_library at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:641 [inlined]
│     [3] satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:920 (repeats 2 times)
│     [4] top-level scope at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl:975
│     [5] include at ./boot.jl:293 [inlined]
│     [6] include_relative(::Module, ::String) at ./loading.jl:521
│     [7] include at ./sysimg.jl:26 [inlined]
│     [8] include at ./loading.jl:555 [inlined]
│     [9] top-level scope at ./<missing>:31
│     [10] include at ./boot.jl:293 [inlined]
│     [11] include_relative(::Module, ::String) at ./loading.jl:521
│     [12] include at ./sysimg.jl:26 [inlined]
│     [13] include(::String) at ./loading.jl:555
│     [14] top-level scope
│     [15] eval at ./boot.jl:296 [inlined]
│     [16] eval at ./sysimg.jl:71 [inlined]
│     [17] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [18] #2 at ./none:12 [inlined]
│     [19] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [20] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [21] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [22] top-level scope
│     [23] eval at ./boot.jl:296 [inlined]
│     [24] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [25] process_options(::Base.JLOptions) at ./client.jl:301
│     [26] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:975
│    in expression starting at /home/vagrant/.julia/v0.7/SpecialFunctions/deps/build.jl:6
└                                                                 @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ SpecialFunctions had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("SpecialFunctions")`
│  - build a single package by running its `deps/build.jl` script
└                                                  @ Base.Pkg.Entry entry.jl:656
[ Info: Testing XDiff                              @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `([ val for (name, val) = inputs ]...)` at /home/vagrant/.julia/v0.7/XDiff/test/runtests.jl:7.
│ Use `([ val for (name, val) = inputs ]...,)` instead.
└                                                        @ nothing runtests.jl:7
┌ Warning: Deprecated syntax `([ (if (call isa v AbstractArray) (string < (call typeof v) >) v) for v = val ]...)` at /home/vagrant/.julia/v0.7/Espresso/src/exnode.jl:168.
│ Use `([ (if (call isa v AbstractArray) (string < (call typeof v) >) v) for v = val ]...,)` instead.
└                                                        @ nothing exnode.jl:168
┌ Warning: Deprecated syntax `([ typeof(getvalue(g[arg])) for arg = args ]...)` at /home/vagrant/.julia/v0.7/Espresso/src/graph_utils.jl:115.
│ Use `([ typeof(getvalue(g[arg])) for arg = args ]...,)` instead.
└                                                   @ nothing graph_utils.jl:115
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└                                                                     @ Core :-1
WARNING: could not import Espresso.reduce_equalities into XDiff
┌ Warning: Deprecated syntax `parametric method syntax type_ansestors{T <: Number}(t::Type{T})` around /home/vagrant/.julia/v0.7/XDiff/src/utils.jl:12.
│ Use `type_ansestors(t::Type{T}) where T <: Number` instead.
└                                                          @ nothing utils.jl:12
┌ Warning: Deprecated syntax `parametric method syntax type_ansestors{T}(t::Type{Vector{T}})` around /home/vagrant/.julia/v0.7/XDiff/src/utils.jl:21.
│ Use `type_ansestors(t::Type{Vector{T}}) where T` instead.
└                                                          @ nothing utils.jl:21
┌ Warning: Deprecated syntax `parametric method syntax type_ansestors{T}(t::Type{Matrix{T}})` around /home/vagrant/.julia/v0.7/XDiff/src/utils.jl:23.
│ Use `type_ansestors(t::Type{Matrix{T}}) where T` instead.
└                                                          @ nothing utils.jl:23
┌ Warning: Deprecated syntax `(types...)` at /home/vagrant/.julia/v0.7/XDiff/src/deriv.jl:122.
│ Use `(types...,)` instead.
└                                                         @ nothing deriv.jl:122
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = @diff_rule(::LineNumberNode, ::Module, ::Expr, ::Int64, ::Any) at deriv.jl:44
└                                                            @ XDiff deriv.jl:44
┌ Warning: `current_module()` is deprecated, use `@__MODULE__` instead.
│   caller = @diff_rule(::LineNumberNode, ::Module, ::Expr, ::Int64, ::Any) at deriv.jl:49
└                                                            @ XDiff deriv.jl:49
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/XDiff/src/tderiv.jl:271.
│ Use `struct` instead.
└                                                        @ nothing tderiv.jl:271
ERROR: LoadError: LoadError: LoadError: UndefVarError: EinGraph not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:293 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/XDiff/src/XDiff.jl:4
 [6] top-level scope
 [7] include at ./boot.jl:293 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:521
 [9] include at ./sysimg.jl:26 [inlined]
 [10] include(::String) at /home/vagrant/.julia/v0.7/XDiff/src/XDiff.jl:4
 [11] top-level scope
 [12] include at ./boot.jl:293 [inlined]
 [13] include_relative(::Module, ::String) at ./loading.jl:521
 [14] include(::Module, ::String) at ./sysimg.jl:26
 [15] top-level scope
 [16] eval at ./boot.jl:296 [inlined]
 [17] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/XDiff/src/tderiv.jl:21
in expression starting at /home/vagrant/.julia/v0.7/XDiff/src/core.jl:17
in expression starting at /home/vagrant/.julia/v0.7/XDiff/src/XDiff.jl:17
ERROR: LoadError: Failed to precompile XDiff to /home/vagrant/.julia/lib/v0.7/XDiff.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/XDiff/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for XDiff
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/XDiff/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: Removing BinDeps v0.8.3                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing CommonSubexpressions v0.0.1       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffResults v0.0.2                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DiffRules v0.0.2                  @ Base.Pkg.Entry entry.jl:546
[ Info: Removing ForwardDiff v0.7.0                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing FunctionWrappers v0.1.0           @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NaNMath v0.3.0                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing ReverseDiff v0.2.0                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SHA v0.5.3                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SpecialFunctions v0.3.7           @ Base.Pkg.Entry entry.jl:546
[ Info: Removing URIParser v0.3.0                  @ Base.Pkg.Entry entry.jl:546
ERROR: XDiff had test errors

>>> End of log
