>>> 'Pkg.add("DiffBase")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing DiffBase v0.3.2
[ Info: Installing StaticArrays v0.7.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of DiffBase
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffBase")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5059
Commit f1b23284bb (2018-05-10 22:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3506 MHz    3989348 s       8052 s     278228 s    1205007 s         56 s
       #2  3506 MHz    1026665 s        292 s     109450 s    5176252 s          3 s
       
  Memory: 2.939197540283203 GB (1512.9609375 MB free)
  Uptime: 64261.0 sec
  Load Avg:  0.9228515625  0.96875  0.951171875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - DiffBase                      0.3.2
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.64.0
 - Nullables                     0.0.5
 - StaticArrays                  0.7.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for DiffBase...
[ Info: Cloning cache of RealInterface from https://github.com/jrevels/RealInterface.jl.git
[ Info: Installing BinDeps v0.8.8
[ Info: Installing RealInterface v0.0.3
[ Info: Installing SHA v0.5.7
[ Info: Installing SpecialFunctions v0.4.0
[ Info: Installing URIParser v0.3.1
[ Info: Building SpecialFunctions
[ Info: Testing DiffBase
WARNING: importing deprecated binding Base.det into DiffBase.
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/src/testfuncs.jl:137
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:4
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!(::DiffBase.MutableDiffResult{2,Array{Float64,1},Tuple{Array{Float64,2},Array{Float64,3}}}, ::Array{Float64,1}) at results.jl:153
└ @ DiffBase results.jl:153
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = derivative! at results.jl:195 [inlined]
└ @ Core results.jl:195
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = derivative!(::DiffBase.MutableDiffResult{2,Array{Float64,1},Tuple{Array{Float64,2},Array{Float64,3}}}, ::Array{Float64,3}, ::Type{Val{2}}) at results.jl:195
└ @ DiffBase results.jl:195
WARNING: importing deprecated binding Base.uninitialized into StaticArrays.
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:182
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:182
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:182
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:188
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:188
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:188
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:203
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:203
WARNING: Base.uninitialized is deprecated, use undef instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/ResultTests.jl:203
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = derivative! at results.jl:195 [inlined]
└ @ Core results.jl:195
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = derivative! at results.jl:195 [inlined]
└ @ Core results.jl:195
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = derivative! at results.jl:195 [inlined]
└ @ Core results.jl:195
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:4
WARNING: importing deprecated binding Base.vecnorm into DiffBase.
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
in vec2num_3 at /home/vagrant/.julia/v0.7/DiffBase/src/testfuncs.jl
┌ Warning: `a::Number + b::AbstractArray` is deprecated, use `a .+ b` instead.
│   caller = rosenbrock_4(::Array{Float64,1}) at testfuncs.jl:90
└ @ DiffBase testfuncs.jl:90
WARNING: importing deprecated binding Base.e into DiffBase.
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.e is deprecated, use ℯ (\euler) or `Base.MathConstants.e`
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: importing deprecated binding Base.dot into DiffBase.
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:16
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
WARNING: Base.det is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
in mat2num_1 at /home/vagrant/.julia/v0.7/DiffBase/src/testfuncs.jl
WARNING: importing deprecated binding Base.trace into DiffBase.
WARNING: Base.trace is deprecated: it has been moved to the standard library package `LinearAlgebra` as `tr`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
WARNING: Base.trace is deprecated: it has been moved to the standard library package `LinearAlgebra` as `tr`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
WARNING: Base.trace is deprecated: it has been moved to the standard library package `LinearAlgebra` as `tr`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:20
┌ Warning: `sum(a::AbstractArray, dims)` is deprecated, use `sum(a, dims=dims)` instead.
│   caller = mat2num_4(::Array{Float64,2}) at testfuncs.jl:133
└ @ DiffBase testfuncs.jl:133
┌ Warning: `sum(a::AbstractArray, dims)` is deprecated, use `sum(a, dims=dims)` instead.
│   caller = softmax(::Array{Float64,2}) at testfuncs.jl:135
└ @ DiffBase testfuncs.jl:135
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
WARNING: Base.dot is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:24
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = chebyquad(::Array{Float64,2}) at testfuncs.jl:251
└ @ DiffBase testfuncs.jl:251
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = chebyquad(::Array{Float64,1}) at testfuncs.jl:251
└ @ DiffBase testfuncs.jl:251
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = brown_almost_linear(::Array{Float64,2}) at testfuncs.jl:253
└ @ DiffBase testfuncs.jl:253
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = brown_almost_linear(::Array{Float64,1}) at testfuncs.jl:253
└ @ DiffBase testfuncs.jl:253
┌ Warning: `ones(a::AbstractArray)` is deprecated, consider `fill(1, size(a))`, `fill!(copy(a), 1)`, or `fill!(similar(a), 1)`. Where necessary, use `fill!(similar(a), one(eltype(a)))`.
│   caller = trigonometric(::Array{Float64,2}) at testfuncs.jl:255
└ @ DiffBase testfuncs.jl:255
┌ Warning: `ones(a::AbstractArray)` is deprecated, consider `fill(1, size(a))`, `fill!(copy(a), 1)`, or `fill!(similar(a), 1)`. Where necessary, use `fill!(similar(a), one(eltype(a)))`.
│   caller = trigonometric(::Array{Float64,1}) at testfuncs.jl:255
└ @ DiffBase testfuncs.jl:255
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = arr2arr_1(::Array{Float64,2}) at testfuncs.jl:261
└ @ DiffBase testfuncs.jl:261
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = arr2arr_1(::Array{Float64,1}) at testfuncs.jl:261
└ @ DiffBase testfuncs.jl:261
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = mutation_test_1(::Array{Float64,2}) at testfuncs.jl:257
└ @ DiffBase testfuncs.jl:257
┌ Warning: `zeros(a::AbstractArray)` is deprecated, consider `zero(a)`, `fill(0, size(a))`, `fill!(copy(a), 0)`, or `fill!(similar(a), 0)`. Where necessary, use `fill!(similar(a), zero(eltype(a)))`.
│   caller = mutation_test_1(::Array{Float64,1}) at testfuncs.jl:257
└ @ DiffBase testfuncs.jl:257
┌ Warning: `ones(a::AbstractArray)` is deprecated, consider `fill(1, size(a))`, `fill!(copy(a), 1)`, or `fill!(similar(a), 1)`. Where necessary, use `fill!(similar(a), one(eltype(a)))`.
│   caller = mutation_test_2(::Array{Float64,2}) at testfuncs.jl:259
└ @ DiffBase testfuncs.jl:259
┌ Warning: `ones(a::AbstractArray)` is deprecated, consider `fill(1, size(a))`, `fill!(copy(a), 1)`, or `fill!(similar(a), 1)`. Where necessary, use `fill!(similar(a), one(eltype(a)))`.
│   caller = mutation_test_2(::Array{Float64,1}) at testfuncs.jl:259
└ @ DiffBase testfuncs.jl:259
┌ Warning: `A_mul_Bt(A::AbstractMatrix{T}, B::AbstractMatrix{S}) where {T, S}` is deprecated, use `A * transpose(B)` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
┌ Warning: `At_mul_B(A::AbstractMatrix{T}, B::AbstractMatrix{S}) where {T, S}` is deprecated, use `transpose(A) * B` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
┌ Warning: `At_mul_Bt(A::AbstractMatrix{T}, B::AbstractVecOrMat{S}) where {T, S}` is deprecated, use `transpose(A) * transpose(B)` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
┌ Warning: `A_mul_Bc(A::StridedMatrix{<:BlasFloat}, B::StridedMatrix{<:BlasReal})` is deprecated, use `A * adjoint(B)` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
┌ Warning: `Ac_mul_B(A::StridedMatrix{T}, B::StridedMatrix{T}) where T <: BlasReal` is deprecated, use `adjoint(A) * B` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
┌ Warning: `Ac_mul_Bc(A::AbstractMatrix{T}, B::AbstractMatrix{S}) where {T, S}` is deprecated, use `adjoint(A) * adjoint(B)` instead.
│   caller = top-level scope at <missing>:44
└ @ Core <missing>:44
WARNING: importing deprecated binding Base.Void into TestFuncTests.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:49
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/TestFuncTests.jl:53
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/RulesTests.jl:1
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/DiffBase/test/RulesTests.jl:6
[ Info: DiffBase tests passed
[ Info: Removing BinDeps v0.8.8
[ Info: Removing RealInterface v0.0.3
[ Info: Removing SHA v0.5.7
[ Info: Removing SpecialFunctions v0.4.0
[ Info: Removing URIParser v0.3.1

>>> End of log
