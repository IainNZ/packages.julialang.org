>>> 'Pkg.add("LibPQ")' log
[ Info: Cloning cache of Decimals from https://github.com/tinybike/Decimals.jl.git
[ Info: Cloning cache of LibPQ from https://github.com/invenia/LibPQ.jl.git
[ Info: Cloning cache of Memento from https://github.com/invenia/Memento.jl.git
[ Info: Cloning cache of Mocking from https://github.com/invenia/Mocking.jl.git
[ Info: Cloning cache of Syslogs from https://github.com/invenia/Syslogs.jl.git
[ Info: Cloning cache of TimeZones from https://github.com/JuliaTime/TimeZones.jl.git
[ Info: Installing BinDeps v0.8.5
[ Info: Installing DataStreams v0.3.4
[ Info: Installing Decimals v0.2.1
[ Info: Installing DocStringExtensions v0.4.2
[ Info: Installing IterTools v0.2.0
[ Info: Installing LayerDicts v0.1.0
[ Info: Installing LibPQ v0.2.0
[ Info: Installing Memento v0.5.1
[ Info: Installing Missings v0.2.4
[ Info: Installing Mocking v0.4.4
[ Info: Installing NamedTuples v4.0.0
[ Info: Installing OffsetArrays v0.4.2
[ Info: Installing SHA v0.5.3
[ Info: Installing Syslogs v0.0.1
[ Info: Installing TimeZones v0.6.0
[ Info: Installing URIParser v0.3.0
[ Info: Installing WeakRefStrings v0.4.1
[ Info: Building TimeZones
┌ Warning: `global const` declarations may no longer appear inside functions.
│ Instead, use a non-constant global, or a global `const var = Ref{T}()`.
└ @ nothing TimeZones.jl:52
┌ Warning: `findin(a, b)` is deprecated, use `findall(occursin(b), a)` instead.
│   caller = optional(::Expr) at utils.jl:51
└ @ TimeZones utils.jl:51
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:36
└ @ TimeZones.TZData build.jl:36
INFO: Downloading 2017c tzdata
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  327k  100  327k    0     0   353k      0 --:--:-- --:--:-- --:--:--  353k
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:49
└ @ TimeZones.TZData build.jl:49
INFO: Extracting tzdata archive
africa
antarctica
asia
australasia
europe
northamerica
southamerica
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#34(::Bool, ::Function, ::String, ::Array{String,1}, ::String, ::String, ::String) at build.jl:54
└ @ TimeZones.TZData build.jl:54
INFO: Converting tz source files into TimeZone data
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = (::getfield(TimeZones.TZData, Symbol("##28#29")){Dict{AbstractString,Array{TimeZones.TZData.Zone,1}},Dict{AbstractString,Array{TimeZones.TZData.Rule,1}},Dict{AbstractString,AbstractString}})(::IOStream) at compile.jl:506
└ @ TimeZones.TZData compile.jl:506
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:165
└ @ TimeZones.TZData compile.jl:165
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:169
└ @ TimeZones.TZData compile.jl:169
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:180
└ @ TimeZones.TZData compile.jl:180
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = ruleparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}, ::Any, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:175
└ @ TimeZones.TZData compile.jl:175
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = zoneparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::SubString{String}) at compile.jl:226
└ @ TimeZones.TZData compile.jl:226
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = zoneparse(::SubString{String}, ::SubString{String}, ::SubString{String}, ::String) at compile.jl:226
└ @ TimeZones.TZData compile.jl:226
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::String) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::SubString{String}) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::String) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `ismatch(r::Regex, s::AbstractString)` is deprecated, use `contains(s, r)` instead.
│   caller = abbr_string(::SubString{String}, ::TimeZones.TZData.TimeOffset, ::SubString{String}) at compile.jl:151
└ @ TimeZones.TZData compile.jl:151
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = #build#5 at TimeZones.jl:124 [inlined]
└ @ Core TimeZones.jl:124
INFO: Successfully built TimeZones
[ Info: Building LibPQ
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/LibPQ/deps/build.jl:28
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
Installing dependency libpq5 via `sudo apt-get install libpq5`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libpq5
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 77.9 kB of archives.
After this operation, 274 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libpq5 amd64 9.3.20-0ubuntu0.14.04 [77.9 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 77.9 kB in 1s (68.7 kB/s)
Selecting previously unselected package libpq5.
(Reading database ... 74126 files and directories currently installed.)
Preparing to unpack .../libpq5_9.3.20-0ubuntu0.14.04_amd64.deb ...
Unpacking libpq5 (9.3.20-0ubuntu0.14.04) ...
Setting up libpq5 (9.3.20-0ubuntu0.14.04) ...
Processing triggers for libc-bin (2.19-0ubuntu6.14) ...
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of LibPQ
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LibPQ")' log
Julia Version 0.7.0-DEV.3456
Commit 87cf094e05 (2018-01-18 22:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2622487 s       5955 s     131727 s     648258 s         22 s
       #2  3499 MHz     511055 s       1720 s      48569 s    3398950 s          0 s
       
  Memory: 2.93927001953125 GB (750.9140625 MB free)
  Uptime: 40220.0 sec
  Load Avg:  0.95849609375  0.9736328125  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - LibPQ                         0.2.0
18 additional packages:
 - BinDeps                       0.8.5
 - Compat                        0.46.0
 - DataStreams                   0.3.4
 - Decimals                      0.2.1
 - DocStringExtensions           0.4.2
 - IterTools                     0.2.0
 - LayerDicts                    0.1.0
 - Memento                       0.5.1
 - Missings                      0.2.4
 - Mocking                       0.4.4
 - NamedTuples                   4.0.0
 - Nullables                     0.0.3
 - OffsetArrays                  0.4.2
 - SHA                           0.5.3
 - Syslogs                       0.0.1
 - TimeZones                     0.6.0
 - URIParser                     0.3.0
 - WeakRefStrings                0.4.1
[ Info: Computing test dependencies for LibPQ...
[ Info: Installing DeepDiffs v1.0.1
[ Info: Installing TestSetExtensions v1.1.1
[ Info: Testing LibPQ
WARNING: importing deprecated binding Base.norm into Decimals.
┌ Warning: Deprecated syntax `tcp ? connect(host, port):` at /home/vagrant/.julia/v0.7/Syslogs/src/Syslogs.jl:112.
│ Use `tcp ? connect(host, port) :` instead.
└ @ nothing Syslogs.jl:112
ERROR: LoadError: UndefVarError: Libdl not defined
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] top-level scope
 [5] eval at ./boot.jl:295 [inlined]
 [6] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Syslogs/src/Syslogs.jl:5
ERROR: LoadError: Failed to precompile Syslogs to /home/vagrant/.julia/lib/v0.7/Syslogs.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:440
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] top-level scope
 [10] eval at ./boot.jl:295 [inlined]
 [11] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Memento/src/Memento.jl:8
ERROR: LoadError: LoadError: Failed to precompile Memento to /home/vagrant/.julia/lib/v0.7/Memento.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/LibPQ/src/LibPQ.jl:19
in expression starting at /home/vagrant/.julia/v0.7/LibPQ/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for LibPQ
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LibPQ/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
[ Info: Removing DeepDiffs v1.0.1
[ Info: Removing TestSetExtensions v1.1.1
ERROR: LibPQ had test errors

>>> End of log
