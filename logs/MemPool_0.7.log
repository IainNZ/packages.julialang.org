>>> 'Pkg.add("MemPool")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Cloning cache of MemPool from https://github.com/JuliaComputing/MemPool.jl.git
[ Info: Installing DataStructures v0.7.4
[ Info: Installing MemPool v0.0.5
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of MemPool
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MemPool")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3664
Commit 9d5aebb07a (2018-01-30 22:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3503 MHz    3808725 s       4020 s     192752 s     950162 s         63 s
       #2  3503 MHz     844712 s       3513 s      83512 s    4779227 s          1 s
       
  Memory: 2.93927001953125 GB (822.86328125 MB free)
  Uptime: 58248.0 sec
  Load Avg:  0.9765625  0.99853515625  0.986328125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - MemPool                       0.0.5
3 additional packages:
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Computing test dependencies for MemPool...
[ Info: Installing StaticArrays v0.6.6
[ Info: Testing MemPool
WARNING: Base.nprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/test/runtests.jl:1
WARNING: Base.addprocs is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/test/runtests.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:12.
│ Use `struct` instead.
└ @ nothing MemPool.jl:12
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:12.
│ Use `struct` instead.
└ @ nothing MemPool.jl:12
WARNING: importing deprecated binding Base.serialize into MemPool.
WARNING: importing deprecated binding Base.deserialize into MemPool.
WARNING: Base.serialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:24
WARNING: importing deprecated binding Base.AbstractSerializer into MemPool.
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:24
WARNING: Base.serialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:24
┌ Warning: Deprecated syntax `parametric method syntax deserialize{T}(io::AbstractSerializer, ::Type{MMWrap{T}})` around /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:30.
│ Use `deserialize(io::AbstractSerializer, #unused#::Type{MMWrap{T}}) where T` instead.
└ @ nothing MemPool.jl:30
WARNING: Base.deserialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:29
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:29
WARNING: Base.deserialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:29
┌ Warning: Deprecated syntax `parametric method syntax deserialize{T}(s::AbstractSerializer, ::Type{MMSer{T}})` around /home/vagrant/.julia/v0.7/MemPool/src/io.jl:10.
│ Use `deserialize(s::AbstractSerializer, #unused#::Type{MMSer{T}}) where T` instead.
└ @ nothing io.jl:10
WARNING: Base.deserialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:9
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:9
WARNING: Base.deserialize is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:9
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:14
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:16
WARNING: Base.AbstractSerializer is deprecated: it has been moved to the standard library package `Serialization`.
Add a `using Serialization` to your imports..
  likely near /home/vagrant/.julia/v0.7/MemPool/src/io.jl:73
┌ Warning: Deprecated syntax `parametric method syntax mmread{N}(::Type{Array{String, N}}, io, mmap)` around /home/vagrant/.julia/v0.7/MemPool/src/io.jl:92.
│ Use `mmread(#unused#::Type{Array{String, N}}, io, mmap) where N` instead.
└ @ nothing io.jl:92
┌ Warning: Deprecated syntax `parametric method syntax gen_writer{T}(::Type{T}, expr)` around /home/vagrant/.julia/v0.7/MemPool/src/io.jl:139.
│ Use `gen_writer(#unused#::Type{T}, expr) where T` instead.
└ @ nothing io.jl:139
┌ Warning: Deprecated syntax `parametric method syntax gen_reader{T}(::Type{T})` around /home/vagrant/.julia/v0.7/MemPool/src/io.jl:156.
│ Use `gen_reader(#unused#::Type{T}) where T` instead.
└ @ nothing io.jl:156
┌ Warning: Deprecated syntax `parametric method syntax fast_read{T}(io, ::Type{T})` around /home/vagrant/.julia/v0.7/MemPool/src/io.jl:175.
│ Use `fast_read(io, #unused#::Type{T}) where T` instead.
└ @ nothing io.jl:175
WARNING: importing deprecated binding Base.Nullable into MemPool.
ERROR: LoadError: LoadError: TypeError: in Type{...} expression, expected UnionAll, got typeof(Base.Nullable)
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1012
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1012
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:295 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/MemPool/src/datastore.jl:9
in expression starting at /home/vagrant/.julia/v0.7/MemPool/src/MemPool.jl:45
ERROR: LoadError: Failed to precompile MemPool to /home/vagrant/.julia/lib/v0.7/MemPool.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1157
 [3] _require(::Base.PkgId) at ./loading.jl:949
 [4] require(::Module, ::Symbol) at ./loading.jl:820
 [5] include at ./boot.jl:292 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:1012
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] exec_options(::Base.JLOptions) at ./client.jl:332
 [9] _start() at ./client.jl:447
in expression starting at /home/vagrant/.julia/v0.7/MemPool/test/runtests.jl:5
┌ Error: ------------------------------------------------------------
│ # Testing failed for MemPool
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/MemPool/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:731
│     [5] cd(::getfield(Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:719
│     [7] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:758
│     [9] (::getfield(Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [11] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [13] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [15] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:275
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] exec_options(::Base.JLOptions) at ./client.jl:309
│     [20] _start() at ./client.jl:447
└ @ Pkg.Entry entry.jl:734
[ Info: Removing StaticArrays v0.6.6
ERROR: MemPool had test errors

>>> End of log
