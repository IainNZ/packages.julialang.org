>>> 'Pkg.add("MultiScaleArrays")' log
INFO: Cloning cache of MultiScaleArrays from https://github.com/JuliaDiffEq/MultiScaleArrays.jl.git
INFO: Installing DiffEqBase v1.20.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.3.0
INFO: Installing LinearMaps v1.0.1
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.3.0
INFO: Installing MultiScaleArrays v0.4.0
INFO: Installing RecipesBase v0.2.2
INFO: Installing RecursiveArrayTools v0.12.1
INFO: Installing SimpleTraits v0.5.1
INFO: Installing StaticArrays v0.6.2
INFO: Package database updated

>>> 'Pkg.test("MultiScaleArrays")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (487.140625 MB free)
Uptime: 24003.0 sec
Load Avg:  0.97216796875  0.94873046875  0.94091796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1449584 s       2048 s      70839 s     503073 s         20 s
#2  3498 MHz     265470 s       4575 s      33244 s    2055778 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.13.0
 - MultiScaleArrays              0.4.0
11 additional packages:
 - Compat                        0.30.0
 - DiffEqBase                    1.20.0
 - Hiccup                        0.1.1
 - Juno                          0.3.0
 - LinearMaps                    1.0.1
 - MacroTools                    0.3.7
 - Media                         0.3.0
 - RecipesBase                   0.2.2
 - RecursiveArrayTools           0.12.1
 - SimpleTraits                  0.5.1
 - StaticArrays                  0.6.2
INFO: Computing test dependencies for MultiScaleArrays...
INFO: Cloning cache of DiffEqNoiseProcess from https://github.com/JuliaDiffEq/DiffEqNoiseProcess.jl.git
INFO: Cloning cache of RandomNumbers from https://github.com/sunoru/RandomNumbers.jl.git
INFO: Cloning cache of ResettableStacks from https://github.com/JuliaDiffEq/ResettableStacks.jl.git
INFO: Cloning cache of StochasticDiffEq from https://github.com/JuliaDiffEq/StochasticDiffEq.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing CommonSubexpressions v0.0.1
INFO: Installing DataStructures v0.6.1
INFO: Installing DiffBase v0.2.0
INFO: Installing DiffEqNoiseProcess v0.5.0
INFO: Installing Distances v0.5.0
INFO: Installing ForwardDiff v0.5.0
INFO: Installing GenericSVD v0.1.0
INFO: Installing LineSearches v2.2.1
INFO: Installing MuladdMacro v0.0.2
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NLsolve v0.11.0
INFO: Installing NaNMath v0.2.6
INFO: Installing OrdinaryDiffEq v2.16.0
INFO: Installing Parameters v0.7.2
INFO: Installing RandomNumbers v0.1.0
INFO: Installing RealInterface v0.0.3
INFO: Installing Reexport v0.0.3
INFO: Installing ResettableStacks v0.2.0
INFO: Installing Roots v0.4.1
INFO: Installing SpecialFunctions v0.3.1
INFO: Installing StochasticDiffEq v2.10.0
INFO: Building RandomNumbers
WARNING: AES-NI will not be compiled.
INFO: Testing MultiScaleArrays
Test Summary:       | Pass  Total
Bisect Search Tests |   33     33
  0.702570 seconds (156.87 k allocations: 8.601 MiB)
 24.057365 seconds (17.49 M allocations: 1.050 GiB, 1.29% gc time)
  2.591854 seconds (1.31 M allocations: 281.305 MiB, 1.74% gc time)
 15.564192 seconds (6.22 M allocations: 1.477 GiB, 2.71% gc time)
  4.322898 seconds (2.18 M allocations: 502.746 MiB, 1.84% gc time)
  0.074635 seconds (4.01 k allocations: 179.143 KiB)
  0.011061 seconds (1.15 k allocations: 62.485 KiB)
  0.000011 seconds (5 allocations: 176 bytes)
  0.000010 seconds (5 allocations: 176 bytes)
Test Summary:               | Pass  Total
Indexing and Creation Tests |   98     98
 50.005799 seconds (28.05 M allocations: 3.343 GiB, 1.76% gc time)
Test Summary:     | Pass  Total
Get Indices Tests |   19     19
  0.106515 seconds (18.27 k allocations: 1.045 MiB)
Do the ODE Part
Do the SDE Part
SRIW1 = StochasticDiffEq.SRIW1
SRI = StochasticDiffEq.SRI
SRA = StochasticDiffEq.SRA
SRA1 = StochasticDiffEq.SRA1
RKMil = StochasticDiffEq.RKMil
EM = StochasticDiffEq.EM
Dynamic DiffEq Tests: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: DimensionMismatch("array could not be broadcast to match destination")
  Stacktrace:
   [1] check_broadcast_shape(::Tuple{Base.OneTo{Int64}}, ::Tuple{Base.OneTo{Int64}}) at ./broadcast.jl:83
   [2] broadcast_c! at ./broadcast.jl:208 [inlined]
   [3] broadcast!(::Base.#identity, ::Array{Float64,1}, ::Array{Float64,1}) at ./broadcast.jl:18
   [4] copyat_or_push!(::ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Void}}, ::Tuple{Float64,Array{Float64,1},Void}) at /home/vagrant/.julia/v0.6/ResettableStacks/src/ResettableStacks.jl:40
   [5] setup_next_step! at /home/vagrant/.julia/v0.6/DiffEqNoiseProcess/src/noise_interfaces/noise_process_interface.jl:179 [inlined]
   [6] accept_step! at /home/vagrant/.julia/v0.6/DiffEqNoiseProcess/src/noise_interfaces/noise_process_interface.jl:43 [inlined]
   [7] accept_step! at /home/vagrant/.julia/v0.6/DiffEqNoiseProcess/src/noise_interfaces/noise_process_interface.jl:13 [inlined]
   [8] apply_step! at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/integrators/integrator_utils.jl:225 [inlined]
   [9] loopheader! at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/integrators/integrator_utils.jl:7 [inlined]
   [10] solve!(::StochasticDiffEq.SDEIntegrator{StochasticDiffEq.EM,Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},Float64,Float64,Float64,Float64,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Void,Void,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Void}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Void}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},DiffEqBase.RODESolution{Float64,2,Array{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},1},Void,Void,Array{Float64,1},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Void,Void,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_DIST,DiffEqNoiseProcess.#INPLACE_WHITE_NOISE_BRIDGE,true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Void}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Void}},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEProblem{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},Float64,true,Void,##19#20,##27#28,Void,UniformScaling{Int64},Void},StochasticDiffEq.EM,StochasticDiffEq.LinearInterpolationData{Array{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},1},Array{Float64,1}}},StochasticDiffEq.EMCache{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},Array{Float64,1},Array{Float64,1},Array{Float64,1}},Void,##19#20,##27#28,StochasticDiffEq.SDEOptions{Float64,Float64,DiffEqBase.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{##21#22,##23#24,DiffEqBase.#INITIALIZE_DEFAULT}}},DiffEqBase.#ODE_DEFAULT_ISOUTOFDOMAIN,DiffEqBase.#ODE_DEFAULT_PROG_MESSAGE,DiffEqBase.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void,Void,Float64,Float64,Float64,Float64},Void}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:380
   [11] #solve#50(::Array{Any,1}, ::Function, ::DiffEqBase.SDEProblem{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},Float64,true,Void,##19#20,##27#28,Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.EM, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at /home/vagrant/.julia/v0.6/StochasticDiffEq/src/solve.jl:7
   [12] (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.SDEProblem{Embryo{Tissue{Population{Cell{Float64},Float64},Float64},Float64},Float64,true,Void,##19#20,##27#28,Void,UniformScaling{Int64},Void}, ::StochasticDiffEq.EM, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./<missing>:0 (repeats 2 times)
   [13] include_from_node1(::String) at ./loading.jl:569
   [14] include(::String) at ./sysimg.jl:14
   [15] macro expansion at /home/vagrant/.julia/v0.6/MultiScaleArrays/test/runtests.jl:7 [inlined]
   [16] macro expansion at ./test.jl:860 [inlined]
   [17] macro expansion at ./util.jl:237 [inlined]
   [18] anonymous at ./<missing>:?
   [19] include_from_node1(::String) at ./loading.jl:569
   [20] include(::String) at ./sysimg.jl:14
   [21] process_options(::Base.JLOptions) at ./client.jl:305
   [22] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/MultiScaleArrays/test/dynamic_diffeq.jl, in expression starting on line 114
Test Summary:        | Error  Broken  Total
Dynamic DiffEq Tests |     1       6      7
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 6 broken.
while loading /home/vagrant/.julia/v0.6/MultiScaleArrays/test/runtests.jl, in expression starting on line 7
==========================[ ERROR: MultiScaleArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MultiScaleArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.2.2
INFO: Removing CommonSubexpressions v0.0.1
INFO: Removing DataStructures v0.6.1
INFO: Removing DiffBase v0.2.0
INFO: Removing DiffEqNoiseProcess v0.5.0
INFO: Removing Distances v0.5.0
INFO: Removing ForwardDiff v0.5.0
INFO: Removing GenericSVD v0.1.0
INFO: Removing LineSearches v2.2.1
INFO: Removing MuladdMacro v0.0.2
INFO: Removing NLSolversBase v2.1.3
INFO: Removing NLsolve v0.11.0
INFO: Removing NaNMath v0.2.6
INFO: Removing OrdinaryDiffEq v2.16.0
INFO: Removing Parameters v0.7.2
INFO: Removing RandomNumbers v0.1.0
INFO: Removing RealInterface v0.0.3
INFO: Removing Reexport v0.0.3
INFO: Removing ResettableStacks v0.2.0
INFO: Removing Roots v0.4.1
INFO: Removing SpecialFunctions v0.3.1
INFO: Removing StochasticDiffEq v2.10.0
ERROR: MultiScaleArrays had test errors

>>> End of log
