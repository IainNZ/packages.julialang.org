>>> 'Pkg.add("LossFunctions")' log
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LearnBase v0.1.6                @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LossFunctions v0.2.0            @ Base.Pkg.Entry entry.jl:543
[ Info: Installing RecipesBase v0.2.3              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0        @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.5               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions                                 @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of LossFunctions
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("LossFunctions")' log
Julia Version 0.7.0-DEV.3351
Commit 09f7213c94 (2018-01-09 01:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2890674 s        126 s     150234 s     770735 s         18 s
       #2  3500 MHz     613858 s       6808 s      59877 s    3748515 s          1 s
       
  Memory: 2.93927001953125 GB (867.61328125 MB free)
  Uptime: 45064.0 sec
  Load Avg:  0.9951171875  0.97607421875  1.01025390625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - LossFunctions                 0.2.0
11 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.43.0
 - DataStructures                0.7.4
 - LearnBase                     0.1.6
 - Nullables                     0.0.2
 - RecipesBase                   0.2.3
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
┌ Info: Computing test dependencies for LossFunctions...
└                                                  @ Base.Pkg.Entry entry.jl:713
[ Info: Installing Calculus v0.2.2                 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DualNumbers v0.3.0              @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NaNMath v0.3.0                  @ Base.Pkg.Entry entry.jl:543
[ Info: Testing LossFunctions                      @ Base.Pkg.Entry entry.jl:723
[ Warning: Replacing module `Compat`                       @ Base loading.jl:350
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
[ Warning: Replacing module `DataStructures`               @ Base loading.jl:350
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└                                                                     @ Core :-1
[ Warning: Replacing module `Compat`                       @ Base loading.jl:350
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
[ Warning: Replacing module `DataStructures`               @ Base loading.jl:350
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `value(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s2::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `value!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s1::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax value!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `value!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax value!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `value!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax value!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `value!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `value!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `value!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `value!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `value!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `value!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `value!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `deriv!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax deriv!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `deriv!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `deriv!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `deriv!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `deriv2!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `deriv2!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└                                                    @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└                                                    @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv2!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv2!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s27::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv2!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s26::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└                                                    @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv2!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└                                                    @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└                                                    @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└                                                    @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└                                                    @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└                                                    @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N, Q, Ti, M}(buffer::AbstractArray, loss::MarginLoss, target::AbstractSparseArray{Q, Ti, M}, output::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/sparse.jl:20.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, target::AbstractSparseArray{Q, Ti, M}, output::AbstractArray{T, N}) where {T, N, Q, Ti, M}` instead.
└                                                         @ nothing sparse.jl:20
┌ Warning: Deprecated syntax `parametric method syntax value{P}(loss::LPDistLoss{P}, difference::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:14.
│ Use `value(loss::LPDistLoss{P}, difference::Number) where P` instead.
└                                                       @ nothing distance.jl:14
┌ Warning: Deprecated syntax `parametric method syntax deriv{P, T <: Number}(loss::LPDistLoss{P}, difference::T)::promote_type(typeof(P), T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:16.
│ Use `deriv(loss::LPDistLoss{P}, difference::T) where {P, T <: Number}` instead.
└                                                       @ nothing distance.jl:16
┌ Warning: Deprecated syntax `parametric method syntax deriv2{P, T <: Number}(loss::LPDistLoss{P}, difference::T)::promote_type(typeof(P), T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:23.
│ Use `deriv2(loss::LPDistLoss{P}, difference::T) where {P, T <: Number}` instead.
└                                                       @ nothing distance.jl:23
┌ Warning: Deprecated syntax `parametric method syntax isminimizable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:30.
│ Use `isminimizable(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:30
┌ Warning: Deprecated syntax `parametric method syntax issymmetric{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:31.
│ Use `issymmetric(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:31
┌ Warning: Deprecated syntax `parametric method syntax isdifferentiable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:32.
│ Use `isdifferentiable(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:32
┌ Warning: Deprecated syntax `parametric method syntax isdifferentiable{P}(::LPDistLoss{P}, at)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:33.
│ Use `isdifferentiable(#unused#::LPDistLoss{P}, at) where P` instead.
└                                                       @ nothing distance.jl:33
┌ Warning: Deprecated syntax `parametric method syntax istwicedifferentiable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:34.
│ Use `istwicedifferentiable(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:34
┌ Warning: Deprecated syntax `parametric method syntax istwicedifferentiable{P}(::LPDistLoss{P}, at)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:35.
│ Use `istwicedifferentiable(#unused#::LPDistLoss{P}, at) where P` instead.
└                                                       @ nothing distance.jl:35
┌ Warning: Deprecated syntax `parametric method syntax islipschitzcont{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:36.
│ Use `islipschitzcont(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:36
┌ Warning: Deprecated syntax `parametric method syntax islocallylipschitzcont{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:37.
│ Use `islocallylipschitzcont(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:37
┌ Warning: Deprecated syntax `parametric method syntax isconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:38.
│ Use `isconvex(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:38
┌ Warning: Deprecated syntax `parametric method syntax isstrictlyconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:39.
│ Use `isstrictlyconvex(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:39
┌ Warning: Deprecated syntax `parametric method syntax isstronglyconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:40.
│ Use `isstronglyconvex(#unused#::LPDistLoss{P}) where P` instead.
└                                                       @ nothing distance.jl:40
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L1DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:73.
│ Use `deriv(loss::L1DistLoss, difference::T) where T <: Number` instead.
└                                                       @ nothing distance.jl:73
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L1DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:74.
│ Use `deriv2(loss::L1DistLoss, difference::T) where T <: Number` instead.
└                                                       @ nothing distance.jl:74
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:115.
│ Use `deriv(loss::L2DistLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:115
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:116.
│ Use `deriv2(loss::L2DistLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:116
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PeriodicLoss{T}}){T}(circ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:139.
│ Use `(::Type{PeriodicLoss{T}})(circ::T) where T` instead.
└                                                      @ nothing distance.jl:139
┌ Warning: Deprecated syntax `parametric method syntax PeriodicLoss{T <: AbstractFloat}(circ::T = 1.0)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:143.
│ Use `PeriodicLoss(circ::T = 1.0) where T <: AbstractFloat` instead.
└                                                      @ nothing distance.jl:143
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:146.
│ Use `value(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:146
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:147.
│ Use `deriv(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:147
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:148.
│ Use `deriv2(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:148
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:150.
│ Use `value_deriv(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:150
┌ Warning: Deprecated syntax `parametric method syntax (::Type{HuberLoss{T}}){T}(d::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:196.
│ Use `(::Type{HuberLoss{T}})(d::T) where T` instead.
└                                                      @ nothing distance.jl:196
┌ Warning: Deprecated syntax `parametric method syntax HuberLoss{T <: AbstractFloat}(d::T = 1.0)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:200.
│ Use `HuberLoss(d::T = 1.0) where T <: AbstractFloat` instead.
└                                                      @ nothing distance.jl:200
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:204.
│ Use `value(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:204
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:213.
│ Use `deriv(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:213
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:221.
│ Use `deriv2(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:221
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:225.
│ Use `value_deriv(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:225
┌ Warning: Deprecated syntax `parametric method syntax (::Type{L1EpsilonInsLoss{T}}){T}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:280.
│ Use `(::Type{L1EpsilonInsLoss{T}})(ε::T) where T` instead.
└                                                      @ nothing distance.jl:280
┌ Warning: Deprecated syntax `parametric method syntax L1EpsilonInsLoss{T <: AbstractFloat}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:285.
│ Use `L1EpsilonInsLoss(ε::T) where T <: AbstractFloat` instead.
└                                                      @ nothing distance.jl:285
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:289.
│ Use `value(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:289
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:293.
│ Use `deriv(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:293
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:296.
│ Use `deriv2(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:296
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:298.
│ Use `value_deriv(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:298
┌ Warning: Deprecated syntax `parametric method syntax (::Type{L2EpsilonInsLoss{T}}){T}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:345.
│ Use `(::Type{L2EpsilonInsLoss{T}})(ε::T) where T` instead.
└                                                      @ nothing distance.jl:345
┌ Warning: Deprecated syntax `parametric method syntax L2EpsilonInsLoss{T <: AbstractFloat}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:349.
│ Use `L2EpsilonInsLoss(ε::T) where T <: AbstractFloat` instead.
└                                                      @ nothing distance.jl:349
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:353.
│ Use `value(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:353
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:357.
│ Use `deriv(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:357
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:362.
│ Use `deriv2(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:362
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T}(loss::L2EpsilonInsLoss{T}, difference::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:366.
│ Use `value_deriv(loss::L2EpsilonInsLoss{T}, difference::Number) where T` instead.
└                                                      @ nothing distance.jl:366
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::LogitDistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:416.
│ Use `deriv(loss::LogitDistLoss, difference::T) where T <: Number` instead.
└                                                      @ nothing distance.jl:416
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:476.
│ Use `value(loss::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:476
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:480.
│ Use `deriv(loss::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:480
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:483.
│ Use `deriv2(#unused#::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└                                                      @ nothing distance.jl:483
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:41.
│ Use `value(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:41
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:42.
│ Use `deriv(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:42
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:43.
│ Use `deriv2(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:43
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:44.
│ Use `value_deriv(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:44
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:87.
│ Use `value(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:87
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:88.
│ Use `deriv(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:88
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:89.
│ Use `deriv2(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:89
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:90.
│ Use `value_deriv(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└                                                         @ nothing margin.jl:90
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:177.
│ Use `value(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:177
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:178.
│ Use `deriv(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:178
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:179.
│ Use `deriv2(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:179
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:180.
│ Use `value_deriv(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:180
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:223.
│ Use `value(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:223
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:224.
│ Use `deriv(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:224
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:225.
│ Use `deriv2(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:225
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:226.
│ Use `value_deriv(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:226
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SmoothedL1HingeLoss{T}}){T}(γ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:271.
│ Use `(::Type{SmoothedL1HingeLoss{T}})(γ::T) where T` instead.
└                                                        @ nothing margin.jl:271
┌ Warning: Deprecated syntax `parametric method syntax SmoothedL1HingeLoss{T <: AbstractFloat}(γ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:275.
│ Use `SmoothedL1HingeLoss(γ::T) where T <: AbstractFloat` instead.
└                                                        @ nothing margin.jl:275
┌ Warning: Deprecated syntax `parametric method syntax value{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:279.
│ Use `value(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:279
┌ Warning: Deprecated syntax `parametric method syntax deriv{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:286.
│ Use `deriv(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:286
┌ Warning: Deprecated syntax `parametric method syntax deriv2{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:293.
│ Use `deriv2(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:293
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:337.
│ Use `value(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:337
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:340.
│ Use `deriv(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:340
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:347.
│ Use `deriv2(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:347
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:391.
│ Use `value(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:391
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:392.
│ Use `deriv(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:392
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:393.
│ Use `deriv2(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:393
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::SigmoidLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:487.
│ Use `deriv2(loss::SigmoidLoss, agreement::T) where T <: Number` instead.
└                                                        @ nothing margin.jl:487
┌ Warning: Deprecated syntax `parametric method syntax (::Type{DWDMarginLoss{T}}){T}(q::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:533.
│ Use `(::Type{DWDMarginLoss{T}})(q::T) where T` instead.
└                                                        @ nothing margin.jl:533
┌ Warning: Deprecated syntax `parametric method syntax DWDMarginLoss{T <: AbstractFloat}(q::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:537.
│ Use `DWDMarginLoss(q::T) where T <: AbstractFloat` instead.
└                                                        @ nothing margin.jl:537
┌ Warning: Deprecated syntax `parametric method syntax value{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:541.
│ Use `value(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:541
┌ Warning: Deprecated syntax `parametric method syntax deriv{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:550.
│ Use `deriv(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:550
┌ Warning: Deprecated syntax `parametric method syntax deriv2{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:555.
│ Use `deriv2(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└                                                        @ nothing margin.jl:555
WARNING: importing deprecated binding Base.lowercase into LossFunctions.
ERROR: LoadError: LoadError: Base.lowercase has been moved to the standard library package Unicode.
Restart Julia and then run `using Unicode` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #lowercase#917(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at ./deprecated.jl:138
 [3] lowercase(::String, ::Vararg{String,N} where N) at ./deprecated.jl:138
 [4] top-level scope at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:5
 [5] include at ./boot.jl:293 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:521
 [7] include at ./sysimg.jl:26 [inlined]
 [8] include(::String) at /home/vagrant/.julia/v0.7/LossFunctions/src/LossFunctions.jl:2
 [9] top-level scope
 [10] include at ./boot.jl:293 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] top-level scope
 [14] eval at ./boot.jl:296 [inlined]
 [15] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:5
in expression starting at /home/vagrant/.julia/v0.7/LossFunctions/src/LossFunctions.jl:63
ERROR: LoadError: Failed to precompile LossFunctions to /home/vagrant/.julia/lib/v0.7/LossFunctions.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:293 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:324
 [10] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/LossFunctions/test/runtests.jl:3
┌ Error: ------------------------------------------------------------
│ # Testing failed for LossFunctions
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LossFunctions/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: Removing Calculus v0.2.2                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing DualNumbers v0.3.0                @ Base.Pkg.Entry entry.jl:546
[ Info: Removing NaNMath v0.3.0                    @ Base.Pkg.Entry entry.jl:546
ERROR: LossFunctions had test errors

>>> End of log
