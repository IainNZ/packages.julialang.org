>>> 'Pkg.add("Granular")' log
[ Info: Cloning cache of Granular from https://github.com/anders-dc/Granular.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing BufferedStreams v0.3.3 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Conda v0.7.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DocStringExtensions v0.4.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Documenter v0.12.5 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Formatting v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Granular v0.2.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing Libz v0.2.4 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing LightXML v0.5.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing NetCDF v0.6.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Installing WriteVTK v0.6.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Building Conda @ Main none:10
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building NetCDF @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NetCDF/deps/build.jl:12
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NetCDF/deps/build.jl:975
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/NetCDF/deps/build.jl:975
┌ Warning: `readstring(cmd::AbstractCmd)` is deprecated, use `read(cmd, String)` instead.
│   caller = parseconda(::Cmd, ::Symbol) at Conda.jl:136
└ @ Conda Conda.jl:136
┌ Warning: Vector{UInt8}(s::String) will copy data in the future. To avoid copying, use `unsafe_wrap` or `codeunits` instead.
│   caller = #parse#1(::Type{Dict{String,Any}}, ::Type{Int64}, ::Function, ::String) at Parser.jl:386
└ @ JSON.Parser Parser.jl:386
┌ Warning: `unsafe_copy!(dest, args...)` is deprecated, use `unsafe_copyto!(dest, args...)` instead.
│   caller = parse_string(::JSON.Parser.MemoryParserState) at specialized.jl:15
└ @ JSON.Parser specialized.jl:15
[ Info: Building LightXML @ Main none:10
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building Granular @ Main none:10
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of Granular
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("Granular")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    5138085 s        129 s     258257 s    1198594 s         64 s
       #2  3499 MHz    1004147 s         52 s     102257 s    6565400 s          0 s
       
  Memory: 2.93927001953125 GB (1207.23828125 MB free)
  Uptime: 77869.0 sec
  Load Avg:  1.021484375  1.0146484375  1.013671875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Granular                      0.2.1
 - JSON                          0.16.3
14 additional packages:
 - BinDeps                       0.8.2
 - BufferedStreams               0.3.3
 - Compat                        0.42.0
 - Conda                         0.7.1
 - DocStringExtensions           0.4.1
 - Documenter                    0.12.5
 - Formatting                    0.3.0
 - Libz                          0.2.4
 - LightXML                      0.5.0
 - NetCDF                        0.6.0
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - URIParser                     0.3.0
 - WriteVTK                      0.6.1
[ Info: Testing Granular @ Base.Pkg.Entry entry.jl:723
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.@sprintf into Granular.
ERROR: LoadError: LoadError: LoadError: LoadError: Base.@sprintf has been moved to the standard library package Printf.
Restart Julia and then run `using Printf` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
 [2] #@sprintf#922(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::LineNumberNode, ::Vararg{Any,N} where N) at ./deprecated.jl:138
 [3] @sprintf(::Vararg{Any,N} where N) at ./deprecated.jl:138
 [4] include at ./boot.jl:295 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:521
 [6] include at ./sysimg.jl:26 [inlined]
 [7] include(::String) at /home/vagrant/.julia/v0.7/Granular/src/Granular.jl:6
 [8] top-level scope
 [9] include at ./boot.jl:295 [inlined]
 [10] include_relative(::Module, ::String) at ./loading.jl:521
 [11] _require(::Symbol) at ./loading.jl:453
 [12] require(::Symbol) at ./loading.jl:333
 [13] include at ./boot.jl:295 [inlined]
 [14] include_relative(::Module, ::String) at ./loading.jl:521
 [15] include(::Module, ::String) at ./sysimg.jl:26
 [16] process_options(::Base.JLOptions) at ./client.jl:323
 [17] _start() at ./client.jl:374
in expression starting at /home/vagrant/.julia/v0.7/Granular/src/simulation.jl:337
in expression starting at /home/vagrant/.julia/v0.7/Granular/src/simulation.jl:334
in expression starting at /home/vagrant/.julia/v0.7/Granular/src/Granular.jl:10
in expression starting at /home/vagrant/.julia/v0.7/Granular/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for Granular
│   exception = ErrorException("failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Granular/test/runtests.jl`, ProcessExited(1)) [1]")
└ @ Base.Pkg.Entry entry.jl:739
ERROR: Granular had test errors

>>> End of log
