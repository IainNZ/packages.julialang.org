>>> 'Pkg.add("SteadyStateDiffEq")' log
INFO: Cloning cache of SteadyStateDiffEq from https://github.com/JuliaDiffEq/SteadyStateDiffEq.jl.git
INFO: Installing Calculus v0.2.2
INFO: Installing DiffBase v0.1.0
INFO: Installing DiffEqBase v1.9.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.2
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.7
INFO: Installing Media v0.2.7
INFO: Installing NLSolversBase v2.1.3
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.6
INFO: Installing Optim v0.7.8
INFO: Installing PositiveFactorizations v0.1.0
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.8.0
INFO: Installing SimpleTraits v0.5.1
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StaticArrays v0.3.1
INFO: Installing SteadyStateDiffEq v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SteadyStateDiffEq
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SteadyStateDiffEq")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (874.6796875 MB free)
Uptime: 50178.0 sec
Load Avg:  0.99267578125  0.9853515625  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3187663 s         54 s     269768 s     996244 s         61 s
#2  3499 MHz    1023691 s        150 s     124848 s    3755335 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - SteadyStateDiffEq             0.1.0
22 additional packages:
 - Calculus                      0.2.2
 - Compat                        0.42.0
 - DiffBase                      0.1.0
 - DiffEqBase                    1.9.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.2
 - Hiccup                        0.1.1
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - MacroTools                    0.3.7
 - Media                         0.2.7
 - NLSolversBase                 2.1.3
 - NLsolve                       0.9.1
 - NaNMath                       0.2.6
 - Optim                         0.7.8
 - PositiveFactorizations        0.1.0
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.8.0
 - SimpleTraits                  0.5.1
 - SpecialFunctions              0.2.0
 - StaticArrays                  0.3.1
INFO: Computing test dependencies for SteadyStateDiffEq...
INFO: Installing BinDeps v0.6.0
INFO: Installing Reexport v0.1.0
INFO: Installing SHA v0.3.3
INFO: Installing Sundials v0.14.3
INFO: Installing URIParser v0.2.0
INFO: Building Sundials
INFO: Testing SteadyStateDiffEq
WARNING: DifferentiableFunction(args...) is deprecated, use OnceDifferentiable(args...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in DifferentiableFunction(::Function, ::Vararg{Function,N}) at ./deprecated.jl:50
 in newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::NLsolve.#no_linesearch!) at /home/vagrant/.julia/v0.5/NLsolve/src/newton.jl:103
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/NLsolve/src/nlsolve_func_defs.jl:21
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::SteadyStateDiffEq.##9#13{DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/NLsolve/src/nlsolve_func_defs.jl:70
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in (::##1#2)(::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/SteadyStateDiffEq/test/runtests.jl:19
 in #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.5/SteadyStateDiffEq/src/solve.jl:30
 in solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{##1#2}) at /home/vagrant/.julia/v0.5/SteadyStateDiffEq/src/solve.jl:3
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 19
ERROR: LoadError: objects of type Sundials.#release_handle cannot be finalized
 in finalizer(::Any, ::Any) at ./base.jl:128
 in Type at /home/vagrant/.julia/v0.5/Sundials/src/handle.jl:37 [inlined]
 in #kinsol#1(::Void, ::Symbol, ::Int64, ::Int64, ::Function, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Sundials/src/simple.jl:56
 in kinsol(::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Sundials/src/simple.jl:54
 in #solve#6(::Array{Any,1}, ::Function, ::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{Sundials.#kinsol}) at /home/vagrant/.julia/v0.5/SteadyStateDiffEq/src/solve.jl:30
 in solve(::DiffEqBase.SteadyStateProblem{Array{Float64,1},true,#f,UniformScaling{Int64}}, ::SteadyStateDiffEq.SSRootfind{Sundials.#kinsol}) at /home/vagrant/.julia/v0.5/SteadyStateDiffEq/src/solve.jl:3
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/SteadyStateDiffEq/test/runtests.jl, in expression starting on line 25
==========================[ ERROR: SteadyStateDiffEq ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/SteadyStateDiffEq/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.6.0
INFO: Removing Reexport v0.1.0
INFO: Removing SHA v0.3.3
INFO: Removing Sundials v0.14.3
INFO: Removing URIParser v0.2.0
ERROR: SteadyStateDiffEq had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:748
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
