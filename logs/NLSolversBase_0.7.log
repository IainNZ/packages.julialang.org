>>> 'Pkg.add("NLSolversBase")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Installing NLSolversBase v4.2.1
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of NLSolversBase
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NLSolversBase")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add a `using InteractiveUtils` to your imports..
 in module Main
Julia Version 0.7.0-DEV.3715
Commit a1bec2a6e1 (2018-02-04 17:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3492 MHz    4984172 s       8035 s     249934 s    1338401 s         84 s
       #2  3492 MHz    1366995 s        430 s     128220 s    6036018 s          1 s
       
  Memory: 2.93927001953125 GB (789.25 MB free)
  Uptime: 76753.0 sec
  Load Avg:  1.0029296875  1.001953125  1.0400390625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - NLSolversBase                 4.2.1
2 additional packages:
 - Compat                        0.52.0
 - Nullables                     0.0.3
WARNING: Base.Pkg is deprecated, run `using Pkg` instead.
 in module Main
[ Info: Testing NLSolversBase
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/runtests.jl:2
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/objective_types.jl
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:54
└ @ NLSolversBase interface.jl:54
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:55
└ @ NLSolversBase interface.jl:55
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:37
└ @ NLSolversBase interface.jl:37
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:54
└ @ NLSolversBase interface.jl:54
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:55
└ @ NLSolversBase interface.jl:55
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:37
└ @ NLSolversBase interface.jl:37
Test Summary:   | Pass  Total
objective types |   23     23
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add a `using Distributed` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::NonDifferentiable{Float64,Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = hessian!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:66
└ @ NLSolversBase interface.jl:66
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/interface.jl:1
in #4 at <missing>
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:25
└ @ NLSolversBase interface.jl:25
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:25
└ @ NLSolversBase interface.jl:25
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::NonDifferentiable{Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:121
└ @ NLSolversBase interface.jl:121
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:90
└ @ NLSolversBase interface.jl:90
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:91
└ @ NLSolversBase interface.jl:91
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:103
└ @ NLSolversBase interface.jl:103
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:121
└ @ NLSolversBase interface.jl:121
Test Summary: | Pass  Total
interface     |   86     86
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:7.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:7
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:8.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:8
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:11.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:11
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:15.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:15
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:66.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:66
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:67.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:67
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:68.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:68
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:142.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:142
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:143.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:143
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:144.
│ Use `2 .*` instead.
└ @ nothing incomplete.jl:144
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
WARNING: Base.gradient is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:1
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("##21#22")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#fg#48"))}})(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:44
└ @ NLSolversBase incomplete.jl:44
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#g!#38")))(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:7
└ @ Main incomplete.jl:7
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("#ffgg!#23")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#fg#48"))}})(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:49
└ @ NLSolversBase incomplete.jl:49
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#fg!#42")))(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:11
└ @ Main incomplete.jl:11
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_fg!#45")))(::Nothing, ::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:15
└ @ Main incomplete.jl:15
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_fg!#45")))(::Float64, ::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:15
└ @ Main incomplete.jl:15
Test Summary:         | Pass  Total
incomplete objectives |   28     28
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add a `using Random` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
in top-level scope at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = macro expansion at incomplete.jl:100 [inlined]
└ @ Core incomplete.jl:100
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = macro expansion at incomplete.jl:101 [inlined]
└ @ Core incomplete.jl:101
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = (::getfield(, Symbol("#tj#63")))(::Array{Float64,1}) at incomplete.jl:82
└ @ Main incomplete.jl:82
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("##19#20")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#tfj#66"))}})(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:43
└ @ NLSolversBase incomplete.jl:43
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("##21#22")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#tfj#66"))}})(::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:44
└ @ NLSolversBase incomplete.jl:44
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = (::getfield(, Symbol("#tj!#62")))(::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:81
└ @ Main incomplete.jl:81
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#tj!#62")))(::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:81
└ @ Main incomplete.jl:81
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("#ffjj!#24")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#tfj#66"))}})(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:56
└ @ NLSolversBase incomplete.jl:56
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("#ffjj!#24")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#tfj#66"))}})(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:57
└ @ NLSolversBase incomplete.jl:57
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = (::getfield(, Symbol("#tfj!#64")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:85
└ @ Main incomplete.jl:85
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#tfj!#64")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:85
└ @ Main incomplete.jl:85
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#tfj!#64")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:86
└ @ Main incomplete.jl:86
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Array{Float64,1}, ::Nothing, ::Array{Float64,1}) at incomplete.jl:90
└ @ Main incomplete.jl:90
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Nothing, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:89
└ @ Main incomplete.jl:89
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Nothing, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:89
└ @ Main incomplete.jl:89
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
WARNING: Base.diagm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add a `using LinearAlgebra` to your imports..
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:72
┌ Warning: `diagm(v::AbstractVector)` is deprecated, use `diagm(0 => v)` or `Matrix(Diagonal(v))` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:89
└ @ Main incomplete.jl:89
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:89
└ @ Main incomplete.jl:89
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_tfj!#65")))(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at incomplete.jl:90
└ @ Main incomplete.jl:90
Test Summary:                 | Pass  Total
incomplete objectives vectors |   28     28
[ Info: NLSolversBase tests passed

>>> End of log
