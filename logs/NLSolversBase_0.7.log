>>> 'Pkg.add("NLSolversBase")' log
[ Info: Installing NLSolversBase v4.1.1            @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of NLSolversBase
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("NLSolversBase")' log
Julia Version 0.7.0-DEV.3351
Commit 09f7213c94 (2018-01-09 01:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    4520613 s        133 s     224396 s    1038988 s         27 s
       #2  3500 MHz    1015062 s       6808 s      88736 s    5601885 s          1 s
       
  Memory: 2.93927001953125 GB (946.58203125 MB free)
  Uptime: 68326.0 sec
  Load Avg:  0.9580078125  0.98681640625  1.046875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - NLSolversBase                 4.1.1
2 additional packages:
 - Compat                        0.43.0
 - Nullables                     0.0.2
[ Info: Testing NLSolversBase                      @ Base.Pkg.Entry entry.jl:723
WARNING: importing deprecated binding Base.Void into NLSolversBase.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/src/objective_types/incomplete.jl:44
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/runtests.jl:2
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:54
└                                                @ NLSolversBase interface.jl:54
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:55
└                                                @ NLSolversBase interface.jl:55
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:37
└                                                @ NLSolversBase interface.jl:37
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:54
└                                                @ NLSolversBase interface.jl:54
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:55
└                                                @ NLSolversBase interface.jl:55
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:37
└                                                @ NLSolversBase interface.jl:37
Test Summary:   | Pass  Total
objective types |   23     23
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::NonDifferentiable{Float64,Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└                                                 @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = hessian!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:66
└                                                @ NLSolversBase interface.jl:66
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└                                                 @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:3
└                                                 @ NLSolversBase interface.jl:3
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:25
└                                                @ NLSolversBase interface.jl:25
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = gradient(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:25
└                                                @ NLSolversBase interface.jl:25
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::NonDifferentiable{Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:111
└                                               @ NLSolversBase interface.jl:111
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:90
└                                                @ NLSolversBase interface.jl:90
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:91
└                                                @ NLSolversBase interface.jl:91
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:103
└                                               @ NLSolversBase interface.jl:103
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = value!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:111
└                                               @ NLSolversBase interface.jl:111
Test Summary: | Pass  Total
interface     |   77     77
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:7.
│ Use `2 .*` instead.
└                                                      @ nothing incomplete.jl:7
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:8.
│ Use `2 .*` instead.
└                                                      @ nothing incomplete.jl:8
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:11.
│ Use `2 .*` instead.
└                                                     @ nothing incomplete.jl:11
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:15.
│ Use `2 .*` instead.
└                                                     @ nothing incomplete.jl:15
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:66.
│ Use `2 .*` instead.
└                                                     @ nothing incomplete.jl:66
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:67.
│ Use `2 .*` instead.
└                                                     @ nothing incomplete.jl:67
┌ Warning: Deprecated syntax `2.*` at /home/vagrant/.julia/v0.7/NLSolversBase/test/incomplete.jl:68.
│ Use `2 .*` instead.
└                                                     @ nothing incomplete.jl:68
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("##21#22")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#fg#48"))}})(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:44
└                                               @ NLSolversBase incomplete.jl:44
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#g!#38")))(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:7
└                                                         @ Main incomplete.jl:7
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(NLSolversBase, Symbol("#ffgg!#23")){NLSolversBase.NotInplaceObjective{Nothing,getfield(, Symbol("#fg#48"))}})(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:49
└                                               @ NLSolversBase incomplete.jl:49
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#fg!#42")))(::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:11
└                                                        @ Main incomplete.jl:11
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_fg!#45")))(::Nothing, ::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:15
└                                                        @ Main incomplete.jl:15
┌ Warning: `copy!(dst::AbstractArray, src::AbstractArray)` is deprecated. You can either use `copyto!(dst, src)` or `Future.copy!(dst, src)` instead.
│   caller = (::getfield(, Symbol("#just_fg!#45")))(::Float64, ::Array{Float64,1}, ::Array{Float64,1}) at incomplete.jl:15
└                                                        @ Main incomplete.jl:15
Test Summary:         | Pass  Total
incomplete objectives |   28     28
[ Info: NLSolversBase tests passed                 @ Base.Pkg.Entry entry.jl:737

>>> End of log
