>>> 'Pkg.add("NLSolversBase")' log
[ Info: Installing NLSolversBase v4.0.0 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of NLSolversBase
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("NLSolversBase")' log
Julia Version 0.7.0-DEV.3246
Commit 2138144d3a (2018-01-04 02:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3507 MHz    2254394 s        110 s     116171 s     617796 s         30 s
       #2  3507 MHz     615563 s         62 s      54888 s    2733881 s          0 s
       
  Memory: 2.93927001953125 GB (825.00390625 MB free)
  Uptime: 34829.0 sec
  Load Avg:  1.0166015625  1.00390625  1.05029296875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - NLSolversBase                 4.0.0
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing NLSolversBase @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/NLSolversBase/test/runtests.jl:2
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:54
└ @ NLSolversBase interface.jl:54
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:55
└ @ NLSolversBase interface.jl:55
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:37
└ @ NLSolversBase interface.jl:37
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:54
└ @ NLSolversBase interface.jl:54
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:55
└ @ NLSolversBase interface.jl:55
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = gradient!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:37
└ @ NLSolversBase interface.jl:37
Test Summary:   | Pass  Total
objective types |   20     20
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value!!(::NonDifferentiable{Float64,Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = hessian!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:66
└ @ NLSolversBase interface.jl:66
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value!!(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:3
└ @ NLSolversBase interface.jl:3
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = gradient(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:25
└ @ NLSolversBase interface.jl:25
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = gradient(::TwiceDifferentiable{Float64,Array{Float64,1},Array{Float64,2},Array{Float64,1}}, ::Array{Float64,1}) at interface.jl:25
└ @ NLSolversBase interface.jl:25
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value!!(::NonDifferentiable{Array{Float64,1},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:111
└ @ NLSolversBase interface.jl:111
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:90
└ @ NLSolversBase interface.jl:90
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value_jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,1}) at interface.jl:91
└ @ NLSolversBase interface.jl:91
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = jacobian!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}) at interface.jl:103
└ @ NLSolversBase interface.jl:103
┌ Warning: copy!(dst::AbstractArray, src::AbstractArray) is deprecated. You can either use copyto!(dst, src) of Future.copy!(dst, src) instead.
│   caller = value!!(::OnceDifferentiable{Array{Float64,1},Array{Float64,2},Array{Float64,1},Val{false}}, ::Array{Float64,1}, ::Array{Float64,1}) at interface.jl:111
└ @ NLSolversBase interface.jl:111
Test Summary: | Pass  Total
interface     |   77     77
[ Info: NLSolversBase tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
