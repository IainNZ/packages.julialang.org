>>> 'Pkg.add("AxisArrays")' log
[ Info: Installing AxisArrays v0.2.0
[ Info: Installing IntervalSets v0.1.1
[ Info: Installing IterTools v0.2.0
[ Info: Installing RangeArrays v0.2.0
[ Info: Package database updated

>>> 'Pkg.test("AxisArrays")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     600328 s        115 s      40331 s     231906 s          9 s
       #2  3499 MHz     148986 s         42 s      19501 s     844518 s          0 s
       
  Memory: 2.93927001953125 GB (790.828125 MB free)
  Uptime: 10328.0 sec
  Load Avg:  0.95947265625  0.9853515625  0.99365234375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - AxisArrays                    0.2.0
 - JSON                          0.16.4
5 additional packages:
 - Compat                        0.46.0
 - IntervalSets                  0.1.1
 - IterTools                     0.2.0
 - Nullables                     0.0.3
 - RangeArrays                   0.2.0
[ Info: Computing test dependencies for AxisArrays...
[ Info: Installing OffsetArrays v0.4.2
[ Info: Installing Unitful v0.7.0
[ Info: Testing AxisArrays
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:11.
│ Use `struct` instead.
└ @ nothing matrix.jl:11
WARNING: importing deprecated binding Base.Range into RangeArrays.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:15
┌ Warning: Deprecated syntax `parametric method syntax RangeMatrix{T <: Range}(rs::AbstractVector{T})` around /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:17.
│ Use `RangeMatrix(rs::AbstractVector{T}) where T <: Range` instead.
└ @ nothing matrix.jl:17
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:16
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:37
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:41
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:42
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:43
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:8.
│ Use `struct` instead.
└ @ nothing repeatedrange.jl:8
┌ Warning: Deprecated syntax `parametric method syntax RepeatedRangeMatrix{T}(r::Range{T}, at::AbstractVector{T})` around /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:12.
│ Use `RepeatedRangeMatrix(r::Range{T}, at::AbstractVector{T}) where T` instead.
└ @ nothing repeatedrange.jl:12
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:12
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:48
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:52
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:5.
│ Use `struct` instead.
└ @ nothing closed.jl:5
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(l::T, r::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:9.
│ Use `(::Type{ClosedInterval{T}})(l::T, r::T) where T` instead.
└ @ nothing closed.jl:9
┌ Warning: Deprecated syntax `parametric method syntax ClosedInterval{T}(left::T, right::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:12.
│ Use `ClosedInterval(left::T, right::T) where T` instead.
└ @ nothing closed.jl:12
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(left, right)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:13.
│ Use `(::Type{ClosedInterval{T}})(left, right) where T` instead.
└ @ nothing closed.jl:13
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ClosedInterval{T}}){T}(i::AbstractInterval)` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:24.
│ Use `(::Type{ClosedInterval{T}})(i::AbstractInterval) where T` instead.
└ @ nothing closed.jl:24
┌ Warning: Deprecated syntax `parametric method syntax union{T <: AbstractFloat}(A::ClosedInterval{T}, B::ClosedInterval{T})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:67.
│ Use `union(A::ClosedInterval{T}, B::ClosedInterval{T}) where T <: AbstractFloat` instead.
└ @ nothing closed.jl:67
┌ Warning: Deprecated syntax `parametric method syntax width{T}(A::ClosedInterval{T})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:93.
│ Use `width(A::ClosedInterval{T}) where T` instead.
└ @ nothing closed.jl:93
┌ Warning: Deprecated syntax `parametric method syntax convert{R <: AbstractUnitRange, I <: Integer}(::Type{R}, i::ClosedInterval{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:98.
│ Use `convert(#unused#::Type{R}, i::ClosedInterval{I}) where {R <: AbstractUnitRange, I <: Integer}` instead.
└ @ nothing closed.jl:98
┌ Warning: Deprecated syntax `parametric method syntax range{I <: Integer}(i::ClosedInterval{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:101.
│ Use `range(i::ClosedInterval{I}) where I <: Integer` instead.
└ @ nothing closed.jl:101
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{T1, T2}(::Type{ClosedInterval{T1}}, ::Type{ClosedInterval{T2}})` around /home/vagrant/.julia/v0.7/IntervalSets/src/closed.jl:103.
│ Use `Base.promote_rule(#unused#::Type{ClosedInterval{T1}}, #unused#::Type{ClosedInterval{T2}}) where {T1, T2}` instead.
└ @ nothing closed.jl:103
┌ Warning: Deprecated syntax `parametric method syntax eltype{T}(::Type{AbstractInterval{T}})` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:21.
│ Use `eltype(#unused#::Type{AbstractInterval{T}}) where T` instead.
└ @ nothing IntervalSets.jl:21
┌ Warning: Deprecated syntax `parametric method syntax eltype{I <: AbstractInterval}(::Type{I})` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:22.
│ Use `eltype(#unused#::Type{I}) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:22
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, i::I)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:24.
│ Use `convert(#unused#::Type{I}, i::I) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:24
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, i::AbstractInterval)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:26.
│ Use `convert(#unused#::Type{I}, i::AbstractInterval) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:26
┌ Warning: Deprecated syntax `parametric method syntax convert{I <: AbstractInterval}(::Type{I}, r::Range)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:30.
│ Use `convert(#unused#::Type{I}, r::Range) where I <: AbstractInterval` instead.
└ @ nothing IntervalSets.jl:30
WARNING: importing deprecated binding Base.Range into IntervalSets.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:29
┌ Warning: Deprecated syntax `parametric method syntax ordered{T}(a::T, b::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:34.
│ Use `ordered(a::T, b::T) where T` instead.
└ @ nothing IntervalSets.jl:34
┌ Warning: Deprecated syntax `parametric method syntax checked_conversion{T}(::Type{T}, a, b)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:37.
│ Use `checked_conversion(#unused#::Type{T}, a, b) where T` instead.
└ @ nothing IntervalSets.jl:37
┌ Warning: Deprecated syntax `parametric method syntax _checked_conversion{T}(::Type{T}, a::T, b::T)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:38.
│ Use `_checked_conversion(#unused#::Type{T}, a::T, b::T) where T` instead.
└ @ nothing IntervalSets.jl:38
┌ Warning: Deprecated syntax `parametric method syntax _checked_conversion{T}(::Type{T}, a, b)` around /home/vagrant/.julia/v0.7/IntervalSets/src/IntervalSets.jl:40.
│ Use `_checked_conversion(#unused#::Type{T}, a, b) where T` instead.
└ @ nothing IntervalSets.jl:40
┌ Warning: Deprecated syntax `(Ax.parameters...)` at /home/vagrant/.julia/v0.7/AxisArrays/src/core.jl:509.
│ Use `(Ax.parameters...,)` instead.
└ @ nothing core.jl:509
┌ Warning: Deprecated syntax `(Ax.parameters...)` at /home/vagrant/.julia/v0.7/AxisArrays/src/core.jl:510.
│ Use `(Ax.parameters...,)` instead.
└ @ nothing core.jl:510
WARNING: importing deprecated binding Base.Dates into AxisArrays.
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/core.jl:540
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/intervals.jl:20
WARNING: importing deprecated binding Base.Range into AxisArrays.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:19
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding Base.Range into Extrapolated.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:31
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:39
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:39
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:50
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:53
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:53
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:58
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:71
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:76
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:81
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:85
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:89
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/search.jl:93
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:255
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:258
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:266
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:274
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:279
WARNING: Base.Dates is deprecated, run `using Dates` instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:3
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Core: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:9
  Got an exception of type LoadError outside of a @test
  LoadError: return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:292 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:521
   [5] include(::Module, ::String) at ./sysimg.jl:26
   [6] include(::String) at ./sysimg.jl:65
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:10 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:10 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [12] include at ./boot.jl:292 [inlined]
   [13] include_relative(::Module, ::String) at ./loading.jl:521
   [14] include(::Module, ::String) at ./sysimg.jl:26
   [15] process_options(::Base.JLOptions) at ./client.jl:324
   [16] _start() at ./client.jl:375
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/core.jl:1
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5
  Test threw an exception of type ErrorException
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, :]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, 1:1]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, [1]]) == AxisArray([10], Axis{:dim_4}(Base.OneTo(1)))
  return type AxisArray{Int64,1,Array{Int64,1},Tuple{Axis{:dim_4,Base.OneTo{Int64}}}} does not match inferred return type AxisArray{Int64,1,Array{Int64,1},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:292 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:521
   [5] include(::Module, ::String) at ./sysimg.jl:26
   [6] include(::String) at ./sysimg.jl:65
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,Colon}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,Colon}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,Colon}}) at core.jl:243
└ @ AxisArrays core.jl:243
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12
  Test threw an exception of type ErrorException
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[1:2, :, :]) == A.data[1:2, :, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{:row}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{1}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{:row}(ClosedInterval(-Inf, Inf))]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[[true, true], :, :])
  return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:292 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:521
   [5] include(::Module, ::String) at ./sysimg.jl:26
   [6] include(::String) at ./sysimg.jl:65
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13
  Test threw an exception of type ErrorException
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, 1:2, :, :)) == A.data[1:2, :, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{:row}(1:2))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{1}(1:2))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{:row}(ClosedInterval(-Inf, Inf)))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, [true, true], :, :))
  return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:292 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:521
   [5] include(::Module, ::String) at ./sysimg.jl:26
   [6] include(::String) at ./sysimg.jl:65
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14
  Test threw an exception of type ErrorException
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[:, 1:2, :]) == A.data[:, 1:2, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{:col}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{2}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{:col}(ClosedInterval(0.0, 0.25))]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[:, [true, true, false], :])
  return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:292 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:521
   [5] include(::Module, ::String) at ./sysimg.jl:26
   [6] include(::String) at ./sysimg.jl:65
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,UnitRange{Int64}}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,ClosedInterval{Float64}}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = @generated body at indexing.jl:0 [inlined]
└ @ Core indexing.jl:0
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,UnitRange{Int64}}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,ClosedInterval{Float64}}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = @generated body at indexing.jl:0 [inlined]
└ @ Core indexing.jl:0
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `find` is deprecated, use `findall` instead.
│   caller = @generated body at indexing.jl:0 [inlined]
└ @ Core indexing.jl:0
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,Int64}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,Int64}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,Int64}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1,1,1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}) at indexing.jl:41
└ @ AxisArrays indexing.jl:41
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1,1,1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `findfirst(A, v)` is deprecated, use `findfirst(equalto(v), A)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,UnitRange{Int64}}}) at core.jl:243
└ @ AxisArrays core.jl:243
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: partial linear indexing deprecation warning is expected
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at indexing.jl:106
└ @ AxisArrays indexing.jl:106
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = macro expansion at multidimensional.jl:654 [inlined]
└ @ Core multidimensional.jl:654
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:17
  Got an exception of type LoadError outside of a @test
  LoadError: ArgumentError: the length of each axis must match the corresponding size of data
  Stacktrace:
   [1] Type at /home/vagrant/.julia/v0.7/AxisArrays/src/core.jl:200 [inlined]
   [2] getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:106
   [3] top-level scope
   [4] include at ./boot.jl:292 [inlined]
   [5] include_relative(::Module, ::String) at ./loading.jl:521
   [6] include(::Module, ::String) at ./sysimg.jl:26
   [7] include(::String) at ./sysimg.jl:65
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [12] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [13] include at ./boot.jl:292 [inlined]
   [14] include_relative(::Module, ::String) at ./loading.jl:521
   [15] include(::Module, ::String) at ./sysimg.jl:26
   [16] process_options(::Base.JLOptions) at ./client.jl:324
   [17] _start() at ./client.jl:375
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:43
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
SortedVector: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:21
  Got an exception of type LoadError outside of a @test
  LoadError: Base.srand has been moved to the standard library package Random.
  Restart Julia and then run `using Random` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #srand#885(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
   [3] srand(::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
   [4] top-level scope
   [5] include at ./boot.jl:292 [inlined]
   [6] include_relative(::Module, ::String) at ./loading.jl:521
   [7] include(::Module, ::String) at ./sysimg.jl:26
   [8] include(::String) at ./sysimg.jl:65
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [14] include at ./boot.jl:292 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] process_options(::Base.JLOptions) at ./client.jl:324
   [18] _start() at ./client.jl:375
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:10
CategoricalVector: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:25
  Got an exception of type LoadError outside of a @test
  LoadError: Base.srand has been moved to the standard library package Random.
  Restart Julia and then run `using Random` to load it.
  Stacktrace:
   [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:42
   [2] #srand#885(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
   [3] srand(::Int64, ::Vararg{Int64,N} where N) at ./deprecated.jl:138
   [4] top-level scope
   [5] include at ./boot.jl:292 [inlined]
   [6] include_relative(::Module, ::String) at ./loading.jl:521
   [7] include(::Module, ::String) at ./sysimg.jl:26
   [8] include(::String) at ./sysimg.jl:65
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [13] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [14] include at ./boot.jl:292 [inlined]
   [15] include_relative(::Module, ::String) at ./loading.jl:521
   [16] include(::Module, ::String) at ./sysimg.jl:26
   [17] process_options(::Base.JLOptions) at ./client.jl:324
   [18] _start() at ./client.jl:375
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:2
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Int64,2}, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:252 [inlined]
└ @ Core core.jl:252
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Int64,3}, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Float64,3}, ::Symbol, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{DataType,DataType}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{DataType,DataType,DataType}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}, ::Type{Val{3}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}, ::Type{Val{3}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Array{Symbol,1}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
WARNING: both AxisArrays and Base export "axes"; uses of it in module Main must be qualified
Combine: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:57
  Test threw an exception of type UndefVarError
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:57 =# @inferred(collapse(Val{2}, A1)) == AxisArray(reshape(A1.data, size(A1)..., 1), axes(A1)..., Axis{:collapsed}(AxisArrays.CategoricalVector([(1,)])))
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:292 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:521
   [4] include(::Module, ::String) at ./sysimg.jl:26
   [5] include(::String) at ./sysimg.jl:65
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Combine: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:61
  Test threw an exception of type UndefVarError
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:61 =# @inferred(collapse(Val{2}, (:a,), A1)) == AxisArray(reshape(A1.data, size(A1)..., 1), axes(A1)..., Axis{:collapsed}(AxisArrays.CategoricalVector([(:a,)])))
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:292 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:521
   [4] include(::Module, ::String) at ./sysimg.jl:26
   [5] include(::String) at ./sysimg.jl:65
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{0}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::Type{Val{1}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::Type{Val{1}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start(::IterTools.Product{Tuple{UnitRange{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:63
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Tuple{Int64},UnitRange{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start(::IterTools.Product{Tuple{UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:64
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:64
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(uninitialized, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Tuple{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::Type{Array{Int64,2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:182
└ @ AxisArrays combine.jl:182
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{-1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{10}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{-1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{10}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
WARNING: Base.Random is deprecated, run `using Random` instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
WARNING: importing deprecated binding Base.AbstractRNG into Unitful.
ERROR: LoadError: LoadError: ArgumentError: invalid type for argument r in method definition for rand at /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
Stacktrace:
 [1] top-level scope at /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/Unitful/src/Unitful.jl:2
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:521
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:295 [inlined]
 [12] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
in expression starting at /home/vagrant/.julia/v0.7/Unitful/src/Unitful.jl:41
README: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:37
  Got an exception of type LoadError outside of a @test
  LoadError: Failed to precompile Unitful to /home/vagrant/.julia/lib/v0.7/Unitful.ji.
  Stacktrace:
   [1] error at ./error.jl:33 [inlined]
   [2] compilecache(::String) at ./loading.jl:648
   [3] compilecache at ./loading.jl:605 [inlined]
   [4] _require(::Symbol) at ./loading.jl:460
   [5] require(::Symbol) at ./loading.jl:333
   [6] include at ./boot.jl:292 [inlined]
   [7] include_relative(::Module, ::String) at ./loading.jl:521
   [8] include(::Module, ::String) at ./sysimg.jl:26
   [9] include(::String) at ./sysimg.jl:65
   [10] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:38 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:38 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
   [14] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [15] include at ./boot.jl:292 [inlined]
   [16] include_relative(::Module, ::String) at ./loading.jl:521
   [17] include(::Module, ::String) at ./sysimg.jl:26
   [18] process_options(::Base.JLOptions) at ./client.jl:324
   [19] _start() at ./client.jl:375
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:3
Test Summary:       | Pass  Error  Total
AxisArrays          |  139     11    150
  Core              |           1      1
  Intervals         |   60            60
  Indexing          |   19      5     24
  SortedVector      |    3      1      4
  CategoricalVector |           1      1
  Search            |   26            26
  Combine           |   30      2     32
  README            |           1      1
ERROR: LoadError: Some tests did not pass: 139 passed, 0 failed, 11 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for AxisArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
[ Info: Removing OffsetArrays v0.4.2
[ Info: Removing Unitful v0.7.0
ERROR: AxisArrays had test errors

>>> End of log
