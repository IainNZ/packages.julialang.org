>>> 'Pkg.add("AxisArrays")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing AxisArrays v0.2.1
[ Info: Installing IntervalSets v0.2.0
[ Info: Installing IterTools v0.2.1
[ Info: Installing RangeArrays v0.2.0
[ Info: Package database updated

>>> 'Pkg.test("AxisArrays")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4737
Commit c4c93ea692 (2018-04-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz     717491 s        105 s      68722 s     300750 s         12 s
       #2  3500 MHz     248484 s         58 s      29429 s     944953 s          0 s
       
  Memory: 2.939197540283203 GB (934.66796875 MB free)
  Uptime: 12549.0 sec
  Load Avg:  0.96142578125  0.9736328125  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - AxisArrays                    0.2.1
 - JSON                          0.17.2
5 additional packages:
 - Compat                        0.63.0
 - IntervalSets                  0.2.0
 - IterTools                     0.2.1
 - Nullables                     0.0.5
 - RangeArrays                   0.2.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for AxisArrays...
[ Info: Installing OffsetArrays v0.5.0
[ Info: Installing Unitful v0.7.1
[ Info: Testing AxisArrays
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:11.
│ Use `struct` instead.
└ @ nothing matrix.jl:11
WARNING: importing deprecated binding Base.Range into RangeArrays.
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:15
┌ Warning: Deprecated syntax `parametric method syntax RangeMatrix{T <: Range}(rs::AbstractVector{T})` around /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:17.
│ Use `RangeMatrix(rs::AbstractVector{T}) where T <: Range` instead.
└ @ nothing matrix.jl:17
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:16
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:37
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:41
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:42
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/matrix.jl:43
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:8.
│ Use `struct` instead.
└ @ nothing repeatedrange.jl:8
┌ Warning: Deprecated syntax `parametric method syntax RepeatedRangeMatrix{T}(r::Range{T}, at::AbstractVector{T})` around /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:12.
│ Use `RepeatedRangeMatrix(r::Range{T}, at::AbstractVector{T}) where T` instead.
└ @ nothing repeatedrange.jl:12
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:12
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:48
WARNING: Base.Range is deprecated, use AbstractRange instead.
  likely near /home/vagrant/.julia/v0.7/RangeArrays/src/repeatedrange.jl:52
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:2
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:3
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Core: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:9
  Got exception LoadError("/home/vagrant/.julia/v0.7/AxisArrays/test/core.jl", 1, ErrorException("return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},_1} where _1")) outside of a @test
  LoadError: return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:306 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:1067
   [5] include(::Module, ::String) at ./sysimg.jl:29
   [6] include(::String) at ./sysimg.jl:68
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:10 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:10 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [12] include at ./boot.jl:306 [inlined]
   [13] include_relative(::Module, ::String) at ./loading.jl:1067
   [14] include(::Module, ::String) at ./sysimg.jl:29
   [15] exec_options(::Base.JLOptions) at ./client.jl:327
   [16] _start() at ./client.jl:455
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/core.jl:1
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5
  Test threw exception ErrorException("return type AxisArray{Int64,1,Array{Int64,1},Tuple{Axis{:dim_4,Base.OneTo{Int64}}}} does not match inferred return type AxisArray{Int64,1,Array{Int64,1},_1} where _1")
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, :]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, 1:1]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:5 =# @inferred(D[1, 1, 1, [1]]) == AxisArray([10], Axis{:dim_4}(Base.OneTo(1)))
  return type AxisArray{Int64,1,Array{Int64,1},Tuple{Axis{:dim_4,Base.OneTo{Int64}}}} does not match inferred return type AxisArray{Int64,1,Array{Int64,1},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:306 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:1067
   [5] include(::Module, ::String) at ./sysimg.jl:29
   [6] include(::String) at ./sysimg.jl:68
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,Colon}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,Colon}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,Colon}}) at core.jl:261
└ @ AxisArrays core.jl:261
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12
  Test threw exception ErrorException("return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1")
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[1:2, :, :]) == A.data[1:2, :, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{:row}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{1}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[Axis{:row}(ClosedInterval(-Inf, Inf))]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:12 =# @inferred(A[[true, true], :, :])
  return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:306 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:1067
   [5] include(::Module, ::String) at ./sysimg.jl:29
   [6] include(::String) at ./sysimg.jl:68
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13
  Test threw exception ErrorException("return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},_1} where _1")
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, 1:2, :, :)) == A.data[1:2, :, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{:row}(1:2))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{1}(1:2))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, Axis{:row}(ClosedInterval(-Inf, Inf)))) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:13 =# @inferred(view(A, [true, true], :, :))
  return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,SubArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:306 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:1067
   [5] include(::Module, ::String) at ./sysimg.jl:29
   [6] include(::String) at ./sysimg.jl:68
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14
  Test threw exception ErrorException("return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1")
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[:, 1:2, :]) == A.data[:, 1:2, :] == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{:col}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{2}(1:2)]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[Axis{:col}(ClosedInterval(0.0, 0.25))]) == #= /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:14 =# @inferred(A[:, [true, true, false], :])
  return type AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}} does not match inferred return type AxisArray{Int64,3,Array{Int64,3},_1} where _1
  Stacktrace:
   [1] error(::String) at ./error.jl:33
   [2] top-level scope
   [3] include at ./boot.jl:306 [inlined]
   [4] include_relative(::Module, ::String) at ./loading.jl:1067
   [5] include(::Module, ::String) at ./sysimg.jl:29
   [6] include(::String) at ./sysimg.jl:68
   [7] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [9] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [11] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,UnitRange{Int64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,ClosedInterval{Float64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = @generated body at indexing.jl:352 [inlined]
└ @ Core indexing.jl:352
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,UnitRange{Int64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,ClosedInterval{Float64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `find(A::AbstractVector)` is deprecated, use `findall(A)` instead.
│   caller = @generated body at indexing.jl:352 [inlined]
└ @ Core indexing.jl:352
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,Int64}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:col,Int64}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:page,Int64}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = @generated body at indexing.jl:89 [inlined]
└ @ Core indexing.jl:89
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1,1,1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}) at indexing.jl:41
└ @ AxisArrays indexing.jl:41
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1,1,1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = top-level scope
└ @ Core :0
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}, ::Type{Axis{:row,UnitRange{Int64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope
└ @ Core :0
INFO: partial linear indexing deprecation warning is expected
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at indexing.jl:106
└ @ AxisArrays indexing.jl:106
┌ Warning: omitting indices for non-singleton trailing dimensions is deprecated. Add `1` as trailing indices or use `reshape` to make the dimensionality of the array match the number of indices.
│   caller = macro expansion at multidimensional.jl:647 [inlined]
└ @ Core multidimensional.jl:647
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Indexing: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:17
  Got exception LoadError("/home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl", 43, ArgumentError("the length of each axis must match the corresponding size of data")) outside of a @test
  LoadError: ArgumentError: the length of each axis must match the corresponding size of data
  Stacktrace:
   [1] Type at /home/vagrant/.julia/v0.7/AxisArrays/src/core.jl:200 [inlined]
   [2] getindex(::AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:106
   [3] top-level scope
   [4] include at ./boot.jl:306 [inlined]
   [5] include_relative(::Module, ::String) at ./loading.jl:1067
   [6] include(::Module, ::String) at ./sysimg.jl:29
   [7] include(::String) at ./sysimg.jl:68
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:18 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [12] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [13] include at ./boot.jl:306 [inlined]
   [14] include_relative(::Module, ::String) at ./loading.jl:1067
   [15] include(::Module, ::String) at ./sysimg.jl:29
   [16] exec_options(::Base.JLOptions) at ./client.jl:327
   [17] _start() at ./client.jl:455
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/indexing.jl:43
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:10
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:15
  Expression: A[:b, :] == A[5:12, :]
   Evaluated: [16.0 36.0; 1.0 21.0; … ; 6.0 26.0; 9.0 29.0] == [19.0 39.0; 10.0 30.0; … ; 3.0 23.0; 2.0 22.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:16
  Expression: A[[:a, :c], :] == A[[1:4; 13:end], :]
   Evaluated: [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0] == [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:17
  Expression: A[(:a, :y), :] == A[2:4, :]
   Evaluated: [19.0 39.0; 10.0 30.0; 14.0 34.0; 20.0 40.0] == [12.0 32.0; 13.0 33.0; 15.0 35.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:18
  Expression: A[(:c, :y, :y), :] == A[16:end, :]
   Evaluated: [11.0 31.0; 18.0 38.0] == [9.0 29.0; 17.0 37.0; … ; 11.0 31.0; 18.0 38.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:19
  Expression: A[ClosedInterval(:a, :b), :] == A[1:12, :]
   Evaluated: [7.0 27.0; 12.0 32.0; … ; 6.0 26.0; 9.0 29.0] == [7.0 27.0; 12.0 32.0; … ; 3.0 23.0; 2.0 22.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:20
  Expression: A[ClosedInterval((:a, :x), (:b, :x)), :] == A[1:9, :]
   Evaluated: [7.0 27.0; 12.0 32.0; … ; 1.0 21.0; 3.0 23.0] == [7.0 27.0; 12.0 32.0; … ; 20.0 40.0; 16.0 36.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
SortedVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/sortedvector.jl:21
  Expression: A[[ClosedInterval((:a, :x), (:b, :x)), :c], :] == A[[1:9; 13:end], :]
   Evaluated: [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0] == [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:22 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
WARNING: Base.srand is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:2
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at categoricalvector.jl:56 [inlined]
└ @ Core categoricalvector.jl:56
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
CategoricalVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:7
  Expression: A[:b, :] == A[5:12, :]
   Evaluated: [16.0 36.0; 1.0 21.0; … ; 6.0 26.0; 9.0 29.0] == [19.0 39.0; 10.0 30.0; … ; 3.0 23.0; 2.0 22.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at categoricalvector.jl:56 [inlined]
└ @ Core categoricalvector.jl:56
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at categoricalvector.jl:56 [inlined]
└ @ Core categoricalvector.jl:56
CategoricalVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:8
  Expression: A[[:a, :c], :] == A[[1:4; 13:end], :]
   Evaluated: [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0] == [7.0 27.0; 12.0 32.0; … ; 11.0 31.0; 18.0 38.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at categoricalvector.jl:56 [inlined]
└ @ Core categoricalvector.jl:56
CategoricalVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:9
  Expression: A[(:a, :y), :] == A[2:4, :]
   Evaluated: [19.0 39.0; 10.0 30.0; 14.0 34.0; 20.0 40.0] == [12.0 32.0; 13.0 33.0; 15.0 35.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at categoricalvector.jl:56 [inlined]
└ @ Core categoricalvector.jl:56
CategoricalVector: Test Failed at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:10
  Expression: A[(:c, :y, :y), :] == A[16:end, :]
   Evaluated: [11.0 31.0; 18.0 38.0] == [9.0 29.0; 17.0 37.0; … ; 11.0 31.0; 18.0 38.0]
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:306 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include(::Module, ::String) at ./sysimg.jl:29
 [5] include(::String) at ./sysimg.jl:68
 [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
 [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
 [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
WARNING: both AxisArrays and Base export "axes"; uses of it in module Main must be qualified
CategoricalVector: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:11
  Test threw exception UndefVarError(:axes)
  Expression: AxisArrays.axistrait((axes(A))[1]) <: AxisArrays.Categorical
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:306 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
CategoricalVector: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:14
  Test threw exception UndefVarError(:axes)
  Expression: AxisArrays.axistrait((axes(A))[1]) <: AxisArrays.Categorical
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:306 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Int64,2,Base.ReshapedArray{Int64,2,UnitRange{Int64},Tuple{}},Tuple{Axis{:row,AxisArrays.CategoricalVector{Int64,Array{Int64,1}}},Axis{:col,Array{Symbol,1}}}}}, ::Type{Axis{:row,AxisArrays.CategoricalVector{Int64,Array{Int64,1}}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findin(a, b)` is deprecated, use `findall((in)(b), a)` instead.
│   caller = axisindexes(::Type{AxisArrays.Categorical}, ::AxisArrays.CategoricalVector{Int64,Array{Int64,1}}, ::AxisArrays.CategoricalVector{Int64,Array{Int64,1}}) at indexing.jl:299
└ @ AxisArrays indexing.jl:299
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisindexes at indexing.jl:293 [inlined]
└ @ Core indexing.jl:293
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisindexes at indexing.jl:293 [inlined]
└ @ Core indexing.jl:293
CategoricalVector: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/categoricalvector.jl:21
  Test threw exception UndefVarError(:axes)
  Expression: AxisArrays.axistrait((axes(A))[1]) <: AxisArrays.Categorical
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:306 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:26 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Int64,2}, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = indices at core.jl:270 [inlined]
└ @ Core core.jl:270
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Int64,3}, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = AxisArray(::Array{Float64,3}, ::Symbol, ::Symbol, ::Symbol) at core.jl:207
└ @ AxisArrays core.jl:207
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a, d)` is deprecated, use `axes(a, d)` instead.
│   caller = _default_axes at core.jl:174 [inlined]
└ @ Core core.jl:174
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{DataType,DataType}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{DataType,DataType,DataType}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = (::getfield(AxisArrays, Symbol("##58#59")){2})(::Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}) at <missing>:0
└ @ AxisArrays <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}, ::Type{Val{3}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,3,Array{Int64,3},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}},Axis{:Z,Array{Symbol,1}}}}, ::Type{Val{3}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Array{Symbol,1}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Combine: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:57
  Test threw exception UndefVarError(:axes)
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:57 =# @inferred(collapse(Val{2}, A1)) == AxisArray(reshape(A1.data, size(A1)..., 1), axes(A1)..., Axis{:collapsed}(AxisArrays.CategoricalVector([(1,)])))
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:306 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start at IterTools.jl:270 [inlined]
└ @ Core IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
Combine: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:61
  Test threw exception UndefVarError(:axes)
  Expression: #= /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:61 =# @inferred(collapse(Val{2}, (:a,), A1)) == AxisArray(reshape(A1.data, size(A1)..., 1), axes(A1)..., Axis{:collapsed}(AxisArrays.CategoricalVector([(:a,)])))
  UndefVarError: axes not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:306 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:1067
   [4] include(::Module, ::String) at ./sysimg.jl:29
   [5] include(::String) at ./sysimg.jl:68
   [6] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [8] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:34 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [10] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{0}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::Type{Val{1}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape(::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::Type{Val{1}}) at indexing.jl:153
└ @ AxisArrays indexing.jl:153
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start(::IterTools.Product{Tuple{UnitRange{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:63
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:63
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:63
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Tuple{Int64},UnitRange{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `reshape(A::AbstractArray, ::Type{Val{N}}) where N` is deprecated, use `reshape(A, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = reshape at indexing.jl:153 [inlined]
└ @ Core indexing.jl:153
┌ Warning: `cat(::Type{Val{N}}, A::AbstractArray...) where N` is deprecated, use `cat(Val(N), A...)` instead.
│   caller = @generated body at combine.jl:319 [inlined]
└ @ Core combine.jl:319
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start(::IterTools.Product{Tuple{UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:64
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:64
WARNING: Base.iteratorsize is deprecated, use IteratorSize instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/combine.jl:64
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = start(::IterTools.Product{Tuple{Tuple{Int64},UnitRange{Int64}}}) at IterTools.jl:270
└ @ IterTools IterTools.jl:270
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::Type{Array{Int64,2}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:182
└ @ AxisArrays combine.jl:182
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{-1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{10}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{-1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,LinearAlgebra.Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `split(t, V::Type{Val{n}}) where n` is deprecated, use `split(t, Val(n))` instead.
│   caller = #58 at <missing>:0 [inlined]
└ @ Core <missing>:0
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{1}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,LinearAlgebra.Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
┌ Warning: `ntuple(f, ::Type{Val{N}}) where N` is deprecated, use `ntuple(f, Val(N))` instead.
│   caller = collapse(::Type{Val{10}}, ::AxisArray{Int64,2,Array{Int64,2},Tuple{Axis{:X,UnitRange{Int64}},Axis{:Y,UnitRange{Int64}}}}, ::AxisArray{Int64,2,LinearAlgebra.Transpose{Int64,Array{Int64,2}},Tuple{Axis{:Y,UnitRange{Int64}},Axis{:X,UnitRange{Int64}}}}) at combine.jl:178
└ @ AxisArrays combine.jl:178
WARNING: importing deprecated binding Base.vecnorm into Unitful.
WARNING: importing deprecated binding Base.colon into Unitful.
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/Unitful/src/Unitful.jl:21
WARNING: importing deprecated binding Base.Diagonal into Unitful.
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/utils.jl:60
WARNING: Base.Diagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/utils.jl:60
WARNING: importing deprecated binding Base.Bidiagonal into Unitful.
WARNING: Base.Bidiagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/utils.jl:69
WARNING: importing deprecated binding Base.Tridiagonal into Unitful.
WARNING: Base.Tridiagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/utils.jl:73
WARNING: importing deprecated binding Base.SymTridiagonal into Unitful.
WARNING: Base.SymTridiagonal is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/utils.jl:74
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:285
WARNING: Base.vecnorm is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:285
WARNING: importing deprecated binding Base.Random into Unitful.
WARNING: Base.Random is deprecated, run `using Random` instead
  likely near /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
WARNING: Base.Random is deprecated, run `using Random` instead
  likely near /home/vagrant/.julia/v0.7/Unitful/src/quantities.jl:351
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:23
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:24
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:25
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:26
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:35
WARNING: importing deprecated binding Base.TypeOrder into Unitful.
WARNING: importing deprecated binding Base.TypeArithmetic into Unitful.
WARNING: importing deprecated binding Base.HasOrder into Unitful.
WARNING: importing deprecated binding Base.ArithmeticOverflows into Unitful.
WARNING: Base.TypeOrder is deprecated, use OrderStyle instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:43
WARNING: Base.TypeArithmetic is deprecated, use ArithmeticStyle instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:44
WARNING: Base.TypeArithmetic is deprecated, use ArithmeticStyle instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:46
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:49
WARNING: Base.HasOrder is deprecated, use Ordered instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:51
WARNING: Base.HasOrder is deprecated, use Ordered instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:52
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:60
WARNING: importing deprecated binding Base.LinSpace into Unitful.
WARNING: Base.LinSpace is deprecated, use LinRange instead.
  likely near /home/vagrant/.julia/v0.7/Unitful/src/range.jl:73
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/Unitful/src/logarithm.jl:404.
│ Use `at most one line break` instead.
└ @ nothing logarithm.jl:404
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
WARNING: Base.colon is deprecated, use : instead.
  likely near /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:17
in Colon at /home/vagrant/.julia/v0.7/Unitful/src/range.jl
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}}},Axis{:chan,Array{Symbol,1}}}}}, ::Type{Axis{:time,Int64}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}}},Axis{:chan,Array{Symbol,1}}}}}, ::Type{Axis{:chan,Symbol}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisdim(::Type{AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}}},Axis{:chan,Array{Symbol,1}}}}}, ::Type{Axis{:time,UnitRange{Int64}}}) at core.jl:261
└ @ AxisArrays core.jl:261
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisindexes at indexing.jl:287 [inlined]
└ @ Core indexing.jl:287
┌ Warning: `indices(a)` is deprecated, use `axes(a)` instead.
│   caller = _size at core.jl:562 [inlined]
└ @ Core core.jl:562
┌ Warning: `findfirst(A, v)` is deprecated, use `coalesce(findfirst(isequal(v), A), 0)` instead.
│   caller = axisindexes at indexing.jl:287 [inlined]
└ @ Core indexing.jl:287
README: Error During Test at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:37
  Got exception LoadError("/home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl", 20, Unitful.DimensionError(s, 5.0e-5 s^2)) outside of a @test
  LoadError: DimensionError: s and 5.0e-5 s^2 are not dimensionally compatible.
  Stacktrace:
   [1] convert(::Type{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}, ::Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(2//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 2//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(2//1),)}}}) at /home/vagrant/.julia/v0.7/Unitful/src/conversion.jl:93
   [2] Type at ./twiceprecision.jl:185 [inlined]
   [3] *(::Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}, ::Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}) at ./twiceprecision.jl:295
   [4] * at ./twiceprecision.jl:283 [inlined]
   [5] * at ./twiceprecision.jl:291 [inlined]
   [6] getindex(::StepRangeLen{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}}, ::UnitRange{Int64}) at ./twiceprecision.jl:472
   [7] _new_axes at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:86 [inlined]
   [8] _reaxis at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:82 [inlined]
   [9] reaxis at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:53 [inlined]
   [10] getindex at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:106 [inlined]
   [11] getindex(::AxisArray{Float64,2,Array{Float64,2},Tuple{Axis{:time,StepRangeLen{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}},Base.TwicePrecision{Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}}},Axis{:chan,Array{Symbol,1}}}}, ::ClosedInterval{Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Second,Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Time}(1//1),)}}}}, ::Symbol) at /home/vagrant/.julia/v0.7/AxisArrays/src/indexing.jl:123
   [12] top-level scope
   [13] include at ./boot.jl:306 [inlined]
   [14] include_relative(::Module, ::String) at ./loading.jl:1067
   [15] include(::Module, ::String) at ./sysimg.jl:29
   [16] include(::String) at ./sysimg.jl:68
   [17] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:38 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [19] macro expansion at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:38 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1022 [inlined]
   [21] top-level scope at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:7
   [22] include at ./boot.jl:306 [inlined]
   [23] include_relative(::Module, ::String) at ./loading.jl:1067
   [24] include(::Module, ::String) at ./sysimg.jl:29
   [25] exec_options(::Base.JLOptions) at ./client.jl:327
   [26] _start() at ./client.jl:455
  in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/readme.jl:20
Test Summary:       | Pass  Fail  Error  Total
AxisArrays          |  143    11     12    166
  Core              |                 1      1
  Intervals         |   60                  60
  Indexing          |   19            5     24
  SortedVector      |    3     7            10
  CategoricalVector |    4     4      3     11
  Search            |   26                  26
  Combine           |   30            2     32
  README            |                 1      1
ERROR: LoadError: Some tests did not pass: 143 passed, 11 failed, 12 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl:6
┌ Error: ------------------------------------------------------------
│ # Testing failed for AxisArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/AxisArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#541(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:309 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
[ Info: Removing OffsetArrays v0.5.0
[ Info: Removing Unitful v0.7.1
ERROR: AxisArrays had test errors

>>> End of log
