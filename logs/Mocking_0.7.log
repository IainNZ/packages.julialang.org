>>> 'Pkg.add("Mocking")' log
[ Info: Installing Mocking v0.4.3
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of Mocking
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Mocking")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    3700646 s       2540 s     189862 s     946519 s         40 s
       #2  3499 MHz     755514 s       3970 s      72458 s    4763938 s          0 s
       
  Memory: 2.93927001953125 GB (904.87109375 MB free)
  Uptime: 56927.0 sec
  Load Avg:  0.935546875  0.943359375  0.95458984375
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - Mocking                       0.4.3
2 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
[ Info: Computing test dependencies for Mocking...
[ Info: No packages to install, update or remove
[ Info: Testing Mocking
┌ Warning: `warn()` is deprecated, use `@warn` instead.
│   caller = #warn#912(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::String, ::Vararg{String,N} where N) at deprecated.jl:2530
└ @ Base deprecated.jl:2530
WARNING: Using experimental code which modifies jl_options global struct
binding_expr: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/expr.jl:25
  Expression: Mocking.binding_expr(rand) == $(Expr(:quote, :((Base.Random).rand)))
   Evaluated: Random.rand == (Base.Random).rand
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/expr.jl:25 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/expr.jl:20
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = absolute_signature(::Expr, ::Dict{Any,Any}) at expr.jl:56
└ @ Mocking expr.jl:56
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = name_parameters(::Expr) at expr.jl:76
└ @ Mocking expr.jl:76
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(uninitialized, m)` instead.
│   caller = convert(::Type{Expr}, ::Patch) at Mocking.jl:74
└ @ Mocking Mocking.jl:74
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70
  Expression: p.signature == $(Expr(:quote, :(f(h::Core.Int64=(Base.Random).rand(Core.Int64)))))
   Evaluated: f(h::Core.Int64=Random.rand(Core.Int64)) == f(h::Core.Int64=(Base.Random).rand(Core.Int64))
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71
  Expression: p.modules == Set([:Core, $(Expr(:quote, :(Base.Random)))])
   Evaluated: Set(Any[:Random, :Core]) == Set(Any[:(Base.Random), :Core])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70
  Expression: p.signature == $(Expr(:quote, :(f(h::Core.Int64=(Base.Random).rand(Core.Int64)))))
   Evaluated: f(h::Core.Int64=Random.rand(Core.Int64)) == f(h::Core.Int64=(Base.Random).rand(Core.Int64))
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71
  Expression: p.modules == Set([:Core, $(Expr(:quote, :(Base.Random)))])
   Evaluated: Set(Any[:Random, :Core]) == Set(Any[:(Base.Random), :Core])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70
  Expression: p.signature == $(Expr(:quote, :(f(h::Core.Int64=(Base.Random).rand(Core.Int64)))))
   Evaluated: f(h::Core.Int64=Random.rand(Core.Int64)) == f(h::Core.Int64=(Base.Random).rand(Core.Int64))
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:70 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
assertion qualification: Test Failed at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71
  Expression: p.modules == Set([:Core, $(Expr(:quote, :(Base.Random)))])
   Evaluated: Set(Any[:Random, :Core]) == Set(Any[:(Base.Random), :Core])
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:71 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:64 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/site/v0.7/Test/src/Test.jl:1007 [inlined]
 [5] top-level scope at /home/vagrant/.julia/v0.7/Mocking/test/patch.jl:17
Test Summary:                    | Pass  Fail  Total
Mocking                          |  209     7    216
  compiled_modules_enabled       |    1            1
  joinbinding                    |    3            3
  splitbinding                   |    3            3
  binding_expr                   |    6     1      7
  adjust_bindings                |    1            1
  call_parameters                |    5            5
  bindings                       |  113          113
  patch                          |   12     6     18
    basic                        |    3            3
    variable argument parameters |    3            3
    anonymous parameter          |    3            3
    assertion expression         |    3            3
    assertion qualification      |          6      6
  concept                        |   21           21
  closure                        |    2            2
  imported binding in body       |    3            3
  qualified binding in signature |    3            3
  imported binding in signature  |    1            1
  open                           |    6            6
  isfile                         |    2            2
  nested mock call               |    3            3
  mock in patch                  |    5            5
  readme                         |    4            4
  patch with optional parameter  |    2            2
  patch with keyword parameter   |    1            1
  patch generation               |    2            2
  anonymous parameter            |    1            1
ERROR: LoadError: Some tests did not pass: 209 passed, 7 failed, 0 errored, 0 broken.
in expression starting at /home/vagrant/.julia/v0.7/Mocking/test/runtests.jl:14
┌ Error: ------------------------------------------------------------
│ # Testing failed for Mocking
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Mocking/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
[ Info: No packages to install, update or remove
ERROR: Mocking had test errors

>>> End of log
