>>> 'Pkg.add("CSDP")' log
[ Info: Cloning cache of CSDP from https://github.com/JuliaOpt/CSDP.jl.git
[ Info: Cloning cache of SemidefiniteModels from https://github.com/JuliaOpt/SemidefiniteModels.jl.git
[ Info: Installing BinDeps v0.8.6
[ Info: Installing CSDP v0.0.3
[ Info: Installing GZip v0.3.0
[ Info: Installing Glob v1.1.1
[ Info: Installing MathProgBase v0.7.0
[ Info: Installing SHA v0.5.6
[ Info: Installing SemidefiniteModels v0.0.3
[ Info: Installing URIParser v0.3.0
[ Info: Building CSDP
WARNING: importing deprecated binding Base.Libdl into __anon__.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead.
  likely near /home/vagrant/.julia/v0.7/CSDP/deps/constants.jl:5
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:18.
│ Use `struct` instead.
└ @ nothing Glob.jl:18
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:275.
│ Use `struct` instead.
└ @ nothing Glob.jl:275
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:18.
│ Use `struct` instead.
└ @ nothing Glob.jl:18
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:275.
│ Use `struct` instead.
└ @ nothing Glob.jl:275
┌ Warning: Deprecated syntax `parametric method syntax (::Type{FilenameMatch{S}}){S}(pattern, options)` around /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:21.
│ Use `(::Type{FilenameMatch{S}})(pattern, options) where S` instead.
└ @ nothing Glob.jl:21
┌ Warning: Deprecated syntax `parametric method syntax FilenameMatch{S <: AbstractString}(pattern::S, options::Integer = 0)` around /home/vagrant/.julia/v0.7/Glob/src/Glob.jl:24.
│ Use `FilenameMatch(pattern::S, options::Integer = 0) where S <: AbstractString` instead.
└ @ nothing Glob.jl:24
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Error: ------------------------------------------------------------
│ # Build failed for CSDP
│   exception =
│    LoadError: LoadError: LoadError: UndefVarError: BLAS not defined
│    Stacktrace:
│     [1] top-level scope
│     [2] include at ./boot.jl:292 [inlined]
│     [3] include_relative(::Module, ::String) at ./loading.jl:1012
│     [4] include at ./sysimg.jl:26 [inlined]
│     [5] include(::String) at ./loading.jl:1046
│     [6] top-level scope
│     [7] include at ./boot.jl:292 [inlined]
│     [8] include_relative(::Module, ::String) at ./loading.jl:1012
│     [9] include at ./sysimg.jl:26 [inlined]
│     [10] include(::String) at ./loading.jl:1046
│     [11] top-level scope
│     [12] eval at ./boot.jl:295 [inlined]
│     [13] eval at ./sysimg.jl:71 [inlined]
│     [14] evalfile(::String, ::Array{String,1}) at ./loading.jl:1041 (repeats 2 times)
│     [15] #2 at ./none:14 [inlined]
│     [16] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [17] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:13
│     [18] #open#317(::Base.Iterators.IndexValue{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(, Symbol("##1#3")), ::String, ::Vararg{String,N} where N) at ./iostream.jl:369
│     [19] open(::Function, ::String, ::String) at ./iostream.jl:367
│     [20] top-level scope
│     [21] eval at ./boot.jl:295 [inlined]
│     [22] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [23] process_options(::Base.JLOptions) at ./client.jl:311
│     [24] _start() at ./client.jl:386
│    in expression starting at /home/vagrant/.julia/v0.7/CSDP/deps/compile.jl:72
│    in expression starting at /home/vagrant/.julia/v0.7/CSDP/deps/compile.jl:63
│    in expression starting at /home/vagrant/.julia/v0.7/CSDP/deps/build.jl:6
└ @ Main none:17
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CSDP had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CSDP")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:649
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of CSDP
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CSDP")' log
Julia Version 0.7.0-DEV.3563
Commit cf6303abe0 (2018-01-24 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2466177 s       7869 s     134152 s     871204 s         18 s
       #2  3500 MHz     563275 s         48 s      61232 s    3360547 s          0 s
       
  Memory: 2.93927001953125 GB (850.86328125 MB free)
  Uptime: 40478.0 sec
  Load Avg:  1.0390625  0.9853515625  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CSDP                          0.0.3
 - JSON                          0.16.4
9 additional packages:
 - BinDeps                       0.8.6
 - Compat                        0.49.0
 - GZip                          0.3.0
 - Glob                          1.1.1
 - MathProgBase                  0.7.0
 - Nullables                     0.0.3
 - SHA                           0.5.6
 - SemidefiniteModels            0.0.3
 - URIParser                     0.3.0
[ Info: Testing CSDP
ERROR: LoadError: LoadError: CSDP not properly installed. Please run Pkg.build("CSDP")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/vagrant/.julia/v0.7/CSDP/src/CSDP.jl:7
 [3] include at ./boot.jl:292 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1012
 [5] _require(::Base.PkgId) at ./loading.jl:939
 [6] require(::Module, ::Symbol) at ./loading.jl:820
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1012
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] process_options(::Base.JLOptions) at ./client.jl:334
 [11] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/CSDP/src/CSDP.jl:7
in expression starting at /home/vagrant/.julia/v0.7/CSDP/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for CSDP
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/CSDP/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
ERROR: CSDP had test errors

>>> End of log
