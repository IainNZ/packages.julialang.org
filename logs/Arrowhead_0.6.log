>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (823.00390625 MB free)
Uptime: 9828.0 sec
Load Avg:  0.92919921875  1.07568359375  1.37158203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     557102 s         53 s      44869 s     251564 s         10 s
#2  3505 MHz     204396 s        100 s      22782 s     736408 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.17.2
3 additional packages:
 - Compat                        0.63.0
 - DoubleDouble                  0.2.1
 - Nullables                     0.0.5
INFO: Testing Arrowhead

WARNING: deprecated syntax "abstract AbstractDouble{T}<:Real" at /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:11.
Use "abstract type AbstractDouble{T}<:Real end" instead.

WARNING: deprecated syntax "inner constructor Double(...) around /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:25".
Use "Double{T}(...) where T" instead.
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0, 100.0, 100.0, 100.0, 100.0] = [100.0, 100.0, 100.0, 100.0, 100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10, 10) = [0.65857 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.26726; 0.0 0.999599 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.528297; 0.0 0.0 0.373228 0.0 0.0 0.0 0.0 0.0 0.0 0.380647; 0.0 0.0 0.0 0.140024 0.0 0.0 0.0 0.0 0.0 0.345487; 0.0 0.0 0.0 0.0 0.358751 0.0 0.0 0.0 0.0 0.43752; 0.0 0.0 0.0 0.0 0.0 0.876789 0.0 0.0 0.0 0.333854; 0.0 0.0 0.0 0.0 0.0 0.0 0.754852 0.0 0.0 0.610558; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.283978 0.0 0.945302; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.646165 0.893002; 0.26726 0.528297 0.380647 0.345487 0.43752 0.333854 0.610558 0.945302 0.893002 0.763551]
(U, Lambda) = eig(full(A)) = ([-1.09796, 0.151334, 0.337885, 0.367974, 0.488597, 0.657533, 0.725267, 0.862419, 0.963136, 2.39932], [-0.102842 0.0166837 -0.0281029 -0.0105196 0.168359 0.956179 -0.165462 0.0530468 -0.0559217 -0.110924; -0.170238 0.0197204 -0.0269219 -0.00956697 0.110698 0.00573083 0.0795183 -0.155819 0.923345 -0.272687; -0.174882 0.0543182 -0.36317 -0.828639 -0.353279 -0.00496805 -0.0446476 0.0314831 -0.0411213 -0.135735; -0.188629 -0.967209 0.0588799 0.0173359 -0.106126 -0.0024772 -0.0243759 0.0193504 -0.0267486 -0.110481; -0.203009 0.0667915 -0.707047 0.542607 -0.360788 -0.00543364 -0.0492913 0.0351468 -0.046133 -0.154908; -0.114271 0.0145719 -0.0208902 -0.00750503 0.092086 0.00565008 0.0909801 -0.940021 -0.246396 -0.158423; -0.222734 0.0320336 -0.0493767 -0.0180513 0.245534 0.0232798 0.852159 0.229657 -0.186809 -0.268244; -0.462352 0.225659 0.591318 0.128726 -0.49466 -0.00938995 -0.088453 0.0661217 -0.0887008 -0.322863; -0.346072 0.0571432 -0.0976796 -0.0367168 0.606831 -0.291468 -0.466155 0.167078 -0.179539 -0.368011; 0.675915 -0.0316642 0.0337207 0.0114381 -0.107074 -0.00371063 -0.0412919 0.0404606 -0.0637277 -0.722486])
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:29
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:30
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: maxabs(x) is deprecated, use maximum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: abs(x::AbstractArray{T}) where T <: Number is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: sumabs(x) is deprecated, use sum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:576
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
Remedy 3 
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:128
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array(::Type{T}, m::Int) where T is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:129
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:576
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:527 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at ./multidimensional.jl:525 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:519 [inlined]
 [5] macro expansion at ./multidimensional.jl:513 [inlined]
 [6] _unsafe_getindex(::IndexLinear, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:506
 [7] macro expansion at ./multidimensional.jl:495 [inlined]
 [8] _getindex at ./multidimensional.jl:491 [inlined]
 [9] getindex at ./abstractarray.jl:883 [inlined]
 [10] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [11] include_from_node1(::String) at ./loading.jl:576
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors

>>> End of log
