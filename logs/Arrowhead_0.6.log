>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (520.33984375 MB free)
Uptime: 6910.0 sec
Load Avg:  1.06982421875  1.1884765625  1.38427734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     371704 s         49 s      28975 s     204322 s          6 s
#2  3499 MHz     111926 s         92 s      23144 s     542491 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.12.0
2 additional packages:
 - Compat                        0.25.2
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead

WARNING: deprecated syntax "abstract AbstractDouble{T}<:Real" at /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:11.
Use "abstract type AbstractDouble{T}<:Real end" instead.

WARNING: deprecated syntax "inner constructor Double(...) around /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:25".
Use "Double{T}(...) where T" instead.
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0, 100.0, 100.0, 100.0, 100.0] = [100.0, 100.0, 100.0, 100.0, 100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10, 10) = [0.418308 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.686136; 0.0 0.752422 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.608596; 0.0 0.0 0.49506 0.0 0.0 0.0 0.0 0.0 0.0 0.47069; 0.0 0.0 0.0 0.245955 0.0 0.0 0.0 0.0 0.0 0.964099; 0.0 0.0 0.0 0.0 0.707651 0.0 0.0 0.0 0.0 0.08145; 0.0 0.0 0.0 0.0 0.0 0.634315 0.0 0.0 0.0 0.809352; 0.0 0.0 0.0 0.0 0.0 0.0 0.0843228 0.0 0.0 0.992513; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.76832 0.0 0.000646468; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.217253 0.172334; 0.686136 0.608596 0.47069 0.964099 0.08145 0.809352 0.992513 0.000646468 0.172334 0.410512]
(U, Lambda) = eig(full(A)) = ([-1.54406, 0.152193, 0.2182, 0.355513, 0.472747, 0.564112, 0.706702, 0.724702, 0.76832, 2.31569], [-0.243831 0.13983 -0.0184814 0.712791 -0.490644 0.312343 0.0271304 0.0912858 -3.79796e-5 0.255386; -0.18481 0.0549887 -0.0061404 0.100027 0.0847116 -0.21451 -0.151792 -0.894961 -0.000741688 0.27494; -0.160972 0.0744511 -0.00916357 0.220036 0.821217 0.452424 0.0253609 0.0835518 -3.33719e-5 0.182581; -0.375599 0.557639 -0.187223 -0.574063 -0.165486 0.201128 0.0238611 0.0820897 -3.57578e-5 0.328964; -0.0252254 0.00795247 -0.000896959 0.0150889 0.013498 -0.037663 -0.978916 0.194716 -2.60103e-5 0.0357714; -0.259098 0.091042 -0.0104837 0.189374 0.195007 -0.765196 0.1275 0.365011 -0.000117015 0.33995; -0.425049 -0.793089 0.0399596 -0.238749 -0.0994711 0.137302 0.018185 0.0631788 -2.81128e-5 0.314128; -0.000194961 5.69035e-5 -6.33403e-6 0.00010216 8.51434e-5 -0.00021012 -0.000119638 -0.000604165 1.0 0.00029505; -0.068233 0.143654 0.981197 -0.0813121 -0.0262578 0.0329769 0.00401509 0.0138437 -6.05885e-6 0.0579985; 0.697362 -0.0542328 0.00539002 -0.0652349 -0.0389285 0.0663729 0.0114033 0.0407636 -1.93742e-5 0.706221])
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:29
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:30
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: maxabs(x) is deprecated, use maximum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: sumabs(x) is deprecated, use sum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:552
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
Remedy 3 
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:128
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:129
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:474 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at ./multidimensional.jl:472 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:466 [inlined]
 [5] macro expansion at ./multidimensional.jl:460 [inlined]
 [6] _unsafe_getindex(::IndexLinear, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:453
 [7] macro expansion at ./multidimensional.jl:442 [inlined]
 [8] _getindex at ./multidimensional.jl:438 [inlined]
 [9] getindex at ./abstractarray.jl:875 [inlined]
 [10] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [11] include_from_node1(::String) at ./loading.jl:552
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors

>>> End of log
