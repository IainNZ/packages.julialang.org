>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/JuliaMath/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0
Commit 9036443 (2017-06-19 13:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.27734375 MB free)
Uptime: 7090.0 sec
Load Avg:  0.9169921875  1.17626953125  1.40478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     353840 s         50 s      25606 s     246037 s          6 s
#2  3499 MHz     157764 s         92 s      18809 s     513704 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.13.0
2 additional packages:
 - Compat                        0.30.0
 - DoubleDouble                  0.2.1
INFO: Testing Arrowhead

WARNING: deprecated syntax "abstract AbstractDouble{T}<:Real" at /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:11.
Use "abstract type AbstractDouble{T}<:Real end" instead.

WARNING: deprecated syntax "inner constructor Double(...) around /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:25".
Use "Double{T}(...) where T" instead.
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0, 100.0, 100.0, 100.0, 100.0] = [100.0, 100.0, 100.0, 100.0, 100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10, 10) = [0.0126948 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.979125; 0.0 0.555841 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.417184; 0.0 0.0 0.992416 0.0 0.0 0.0 0.0 0.0 0.0 0.606111; 0.0 0.0 0.0 0.204841 0.0 0.0 0.0 0.0 0.0 0.0349955; 0.0 0.0 0.0 0.0 0.162429 0.0 0.0 0.0 0.0 0.422748; 0.0 0.0 0.0 0.0 0.0 0.246848 0.0 0.0 0.0 0.479585; 0.0 0.0 0.0 0.0 0.0 0.0 0.274817 0.0 0.0 0.0265604; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.884929 0.0 0.660184; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.671023 0.261253; 0.979125 0.417184 0.606111 0.0349955 0.422748 0.479585 0.0265604 0.660184 0.261253 0.087411]
(U, Lambda) = eig(full(A)) = ([-1.3534, 0.126282, 0.204231, 0.212245, 0.274755, 0.448821, 0.629514, 0.719934, 0.948173, 1.8827], [-0.519941 0.567705 -0.0857322 0.276429 -0.00877127 0.384941 -0.170115 0.17802 0.060276 0.333301; -0.158513 -0.0639613 0.0198987 -0.0684034 0.00348428 -0.668393 -0.606848 0.326915 0.061237 0.200145; -0.187437 -0.0460872 0.0128968 -0.0437684 0.00198271 -0.191181 0.178988 -0.28603 -0.788949 0.433378; -0.016292 -0.0293379 0.962823 0.266273 -0.0011751 0.0245938 -0.0088312 0.00873624 0.00271125 0.013277; -0.202315 -0.770226 -0.169605 0.478091 -0.00883542 0.253098 -0.0969946 0.0975058 0.0309842 0.156432; -0.217408 -0.261971 0.188732 -0.780825 -0.0403438 0.407136 -0.13431 0.130353 0.0393809 0.186622; -0.0118337 -0.0117766 0.00631066 -0.023914 0.999092 0.0261725 -0.00802491 0.00767289 0.0022716 0.0105153; -0.213963 -0.0573111 0.0162655 -0.0552908 0.00254002 -0.259561 0.277 -0.514506 0.601156 0.421189; -0.0936175 -0.0315852 0.00938633 -0.0320817 0.00154774 -0.201596 0.674504 0.686831 0.0542857 0.137251; 0.725434 0.0658587 -0.0167709 0.0563376 -0.00234761 0.171462 -0.107167 0.128587 0.0575891 0.636563])
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:29
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:30
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: maxabs(x) is deprecated, use maximum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:569
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: sumabs(x) is deprecated, use sum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:57
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:569
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:474 [inlined]
 [2] macro expansion at ./cartesian.jl:64 [inlined]
 [3] macro expansion at ./multidimensional.jl:472 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:466 [inlined]
 [5] macro expansion at ./multidimensional.jl:460 [inlined]
 [6] _unsafe_getindex(::IndexLinear, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:453
 [7] macro expansion at ./multidimensional.jl:442 [inlined]
 [8] _getindex at ./multidimensional.jl:438 [inlined]
 [9] getindex at ./abstractarray.jl:882 [inlined]
 [10] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [11] include_from_node1(::String) at ./loading.jl:569
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors

>>> End of log
