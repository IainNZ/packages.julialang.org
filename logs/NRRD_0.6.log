>>> 'Pkg.add("NRRD")' log
INFO: Cloning cache of NRRD from https://github.com/JuliaIO/NRRD.jl.git
INFO: Cloning cache of Quaternions from https://github.com/JuliaGeometry/Quaternions.jl.git
INFO: Cloning cache of Unitful from https://github.com/ajkeller34/Unitful.jl.git
INFO: Installing AbstractFFTs v0.2.0
INFO: Installing AxisArrays v0.2.0
INFO: Installing BinDeps v0.8.2
INFO: Installing BufferedStreams v0.3.3
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.6.6
INFO: Installing ColorVectorSpace v0.5.2
INFO: Installing Colors v0.8.2
INFO: Installing DataStructures v0.7.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FFTW v0.0.4
INFO: Installing FileIO v0.6.1
INFO: Installing FixedPointNumbers v0.4.3
INFO: Installing Graphics v0.2.0
INFO: Installing ImageAxes v0.4.0
INFO: Installing ImageCore v0.5.0
INFO: Installing IntervalSets v0.1.1
INFO: Installing IterTools v0.2.0
INFO: Installing Libz v0.2.4
INFO: Installing MacroTools v0.4.0
INFO: Installing MappedArrays v0.0.7
INFO: Installing NRRD v0.3.2
INFO: Installing NaNMath v0.3.0
INFO: Installing OffsetArrays v0.4.2
INFO: Installing PaddedViews v0.2.0
INFO: Installing Quaternions v0.3.0
INFO: Installing RangeArrays v0.2.0
INFO: Installing Ranges v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.5.2
INFO: Installing ShowItLikeYouBuildIt v0.2.0
INFO: Installing SimpleTraits v0.5.1
INFO: Installing SortingAlgorithms v0.2.0
INFO: Installing SpecialFunctions v0.3.6
INFO: Installing StaticArrays v0.6.6
INFO: Installing StatsBase v0.19.4
INFO: Installing URIParser v0.3.0
INFO: Installing Unitful v0.6.0
INFO: Building SpecialFunctions
INFO: Building FFTW
INFO: Package database updated

>>> 'Pkg.test("NRRD")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (1273.01171875 MB free)
Uptime: 42988.0 sec
Load Avg:  1.0029296875  1.16552734375  1.47314453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2719442 s        113 s     130687 s     863590 s         44 s
#2  3499 MHz     923007 s       6432 s      85616 s    3201057 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.16.3
 - NRRD                          0.3.2
39 additional packages:
 - AbstractFFTs                  0.2.0
 - AxisArrays                    0.2.0
 - BinDeps                       0.8.2
 - BufferedStreams               0.3.3
 - Calculus                      0.2.2
 - ColorTypes                    0.6.6
 - ColorVectorSpace              0.5.2
 - Colors                        0.8.2
 - Compat                        0.41.0
 - DataStructures                0.7.3
 - DualNumbers                   0.3.0
 - FFTW                          0.0.4
 - FileIO                        0.6.1
 - FixedPointNumbers             0.4.3
 - Graphics                      0.2.0
 - ImageAxes                     0.4.0
 - ImageCore                     0.5.0
 - IntervalSets                  0.1.1
 - IterTools                     0.2.0
 - Libz                          0.2.4
 - MacroTools                    0.4.0
 - MappedArrays                  0.0.7
 - NaNMath                       0.3.0
 - Nullables                     0.0.1
 - OffsetArrays                  0.4.2
 - PaddedViews                   0.2.0
 - Quaternions                   0.3.0
 - RangeArrays                   0.2.0
 - Ranges                        0.0.1
 - Reexport                      0.0.3
 - SHA                           0.5.2
 - ShowItLikeYouBuildIt          0.2.0
 - SimpleTraits                  0.5.1
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.6
 - StaticArrays                  0.6.6
 - StatsBase                     0.19.4
 - URIParser                     0.3.0
 - Unitful                       0.6.0
INFO: Computing test dependencies for NRRD...
INFO: No packages to install, update or remove
INFO: Testing NRRD
Test Summary: | Pass  Total
unu headers   |   88     88
WARNING: both AxisArrays and Compat export "axes"; uses of it in module ImageAxes must be qualified
WARNING: both Compat and ImageAxes export "axes"; uses of it in module NRRD must be qualified
Error encountered while saving "/tmp/Images/write/small.nrrd".
Fatal error:
Gray, raw: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: axes not defined
  Stacktrace:
   [1] #save#10(::Dict{String,Any}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:280
   [2] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [3] open(::NRRD.##8#9{Dict{String,Any},Void,Void,AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
   [4] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:273
   [5] eval(::Module, ::Any) at ./boot.jl:235
   [6] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
   [7] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:106
   [8] #save#14(::Array{Any,1}, ::Function, ::String, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
   [9] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:24 [inlined]
   [10] macro expansion at ./test.jl:860 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:16 [inlined]
   [12] macro expansion at ./test.jl:860 [inlined]
   [13] anonymous at ./<missing>:?
   [14] include_from_node1(::String) at ./loading.jl:576
   [15] include(::String) at ./sysimg.jl:14
   [16] process_options(::Base.JLOptions) at ./client.jl:305
   [17] _start() at ./client.jl:371
Error encountered while saving "/tmp/Images/write/units.nrrd".
Fatal error:
Units: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: axes not defined
  Stacktrace:
   [1] #save#10(::Dict{String,Any}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:280
   [2] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}) at ./<missing>:0
   [3] open(::NRRD.##8#9{Dict{String,Any},Void,Void,AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
   [4] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:273
   [5] eval(::Module, ::Any) at ./boot.jl:235
   [6] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
   [7] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:106
   [8] #save#14(::Array{Any,1}, ::Function, ::String, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:P,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:S,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-3, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
   [9] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:48 [inlined]
   [10] macro expansion at ./test.jl:860 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:38 [inlined]
   [12] macro expansion at ./test.jl:860 [inlined]
   [13] anonymous at ./<missing>:?
   [14] include_from_node1(::String) at ./loading.jl:576
   [15] include(::String) at ./sysimg.jl:14
   [16] process_options(::Base.JLOptions) at ./client.jl:305
   [17] _start() at ./client.jl:371
Error encountered while saving "/tmp/Images/write/smallgz.nrrd".
Fatal error:
Compressed (gzip): Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: axes not defined
  Stacktrace:
   [1] #save#10(::Dict{String,Any}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:280
   [2] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [3] open(::NRRD.##8#9{Dict{String,Any},Void,Void,AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
   [4] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:273
   [5] eval(::Module, ::Any) at ./boot.jl:235
   [6] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
   [7] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:106
   [8] #save#14(::Array{Any,1}, ::Function, ::String, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
   [9] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:65 [inlined]
   [10] macro expansion at ./test.jl:860 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:59 [inlined]
   [12] macro expansion at ./test.jl:860 [inlined]
   [13] anonymous at ./<missing>:?
   [14] include_from_node1(::String) at ./loading.jl:576
   [15] include(::String) at ./sysimg.jl:14
   [16] process_options(::Base.JLOptions) at ./client.jl:305
   [17] _start() at ./client.jl:371
Time is 4th dimension: Error During Test
  Test threw an exception of type UndefVarError
  Expression: timedim(img) == 4
  UndefVarError: axes not defined
  Stacktrace:
   [1] timedim(::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/ImageAxes/src/ImageAxes.jl:136
   [2] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:72 [inlined]
   [3] macro expansion at ./test.jl:860 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:70 [inlined]
   [5] macro expansion at ./test.jl:860 [inlined]
   [6] anonymous at ./<missing>:?
Error encountered while saving "/tmp/Images/write/small_time.nrrd".
Fatal error:
Time is 4th dimension: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: axes not defined
  Stacktrace:
   [1] #save#10(::Dict{String,Any}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:280
   [2] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}) at ./<missing>:0
   [3] open(::NRRD.##8#9{Dict{String,Any},Void,Void,AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
   [4] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:273
   [5] eval(::Module, ::Any) at ./boot.jl:235
   [6] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
   [7] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:106
   [8] #save#14(::Array{Any,1}, ::Function, ::String, ::AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float64,4,Array{Float64,4},Tuple{AxisArrays.Axis{:space_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:space_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:time,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
   [9] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:75 [inlined]
   [10] macro expansion at ./test.jl:860 [inlined]
   [11] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:70 [inlined]
   [12] macro expansion at ./test.jl:860 [inlined]
   [13] anonymous at ./<missing>:?
   [14] include_from_node1(::String) at ./loading.jl:576
   [15] include(::String) at ./sysimg.jl:14
   [16] process_options(::Base.JLOptions) at ./client.jl:305
   [17] _start() at ./client.jl:371
WARNING: one(ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}}) will soon switch to returning 1; you might need to switch to `oneunit`
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:70
 [2] one(::Type{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}}}) at /home/vagrant/.julia/v0.6/ColorTypes/src/traits.jl:341
 [3] headerinfo(::Type{T} where T, ::Tuple{Int64,Int64}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:354
 [4] #save#10(::Dict{String,Any}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:281
 [5] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}) at ./<missing>:0
 [6] open(::NRRD.##8#9{Dict{String,Any},Void,Void,Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
 [7] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:273
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}, ::Vararg{Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
 [10] save(::FileIO.File{FileIO.DataFormat{:NRRD}}, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:106
 [11] #save#14(::Array{Any,1}, ::Function, ::String, ::Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2}, ::Vararg{Array{ColorTypes.Gray{FixedPointNumbers.Normed{UInt8,8}},2},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
 [12] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:99 [inlined]
 [13] macro expansion at ./test.jl:860 [inlined]
 [14] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:86 [inlined]
 [15] macro expansion at ./test.jl:860 [inlined]
 [16] anonymous at ./<missing>:?
 [17] include_from_node1(::String) at ./loading.jl:576
 [18] include(::String) at ./sysimg.jl:14
 [19] process_options(::Base.JLOptions) at ./client.jl:305
 [20] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl, in expression starting on line 6
Fiji compatibility: Error During Test
  Test threw an exception of type UndefVarError
  Expression: pixelspacing(v) == ps
  UndefVarError: axes not defined
  Stacktrace:
   [1] pixelspacing(::AxisArrays.AxisArray{UInt16,3,Array{UInt16,3},Tuple{AxisArrays.Axis{:dim_1,UnitRange{Int64}},AxisArrays.Axis{:dim_2,UnitRange{Int64}},AxisArrays.Axis{:dim_3,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/ImageAxes/src/ImageAxes.jl:152
   [2] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:125 [inlined]
   [3] macro expansion at ./test.jl:860 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:119 [inlined]
   [5] macro expansion at ./test.jl:860 [inlined]
   [6] anonymous at ./<missing>:?
Fiji compatibility: Error During Test
  Test threw an exception of type UndefVarError
  Expression: pixelspacing(v) == ps
  UndefVarError: axes not defined
  Stacktrace:
   [1] pixelspacing(::AxisArrays.AxisArray{UInt16,3,Array{UInt16,3},Tuple{AxisArrays.Axis{:dim_1,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:dim_2,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}},AxisArrays.Axis{:dim_3,StepRangeLen{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}},Base.TwicePrecision{Unitful.Quantity{Float64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)},Unitful.FreeUnits{(Unitful.Unit{:Meter,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}(-6, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}}}}}}) at /home/vagrant/.julia/v0.6/ImageAxes/src/ImageAxes.jl:152
   [2] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:125 [inlined]
   [3] macro expansion at ./test.jl:860 [inlined]
   [4] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:119 [inlined]
   [5] macro expansion at ./test.jl:860 [inlined]
   [6] anonymous at ./<missing>:?
Error encountered while saving "/tmp/Images/write/small.nhdr".
Fatal error:
Header only: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: axes not defined
  Stacktrace:
   [1] #save#10(::Dict{String,String}, ::Void, ::Void, ::Function, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at /home/vagrant/.julia/v0.6/NRRD/src/NRRD.jl:280
   [2] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.Stream{FileIO.DataFormat{:NRRD},IOStream}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [3] open(::NRRD.##8#9{Dict{String,String},Void,Void,AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}}, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::String) at ./iostream.jl:152
   [4] (::NRRD.#kw##save)(::Array{Any,1}, ::NRRD.#save, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [5] eval(::Module, ::Any) at ./boot.jl:235
   [6] #save#21(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:115
   [7] (::FileIO.#kw##save)(::Array{Any,1}, ::FileIO.#save, ::FileIO.File{FileIO.DataFormat{:NRRD}}, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [8] #save#14(::Array{Any,1}, ::Function, ::String, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}, ::Vararg{AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}},N} where N) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:61
   [9] (::FileIO.#kw##save)(::Array{Any,1}, ::FileIO.#save, ::String, ::AxisArrays.AxisArray{Float32,3,Array{Float32,3},Tuple{AxisArrays.Axis{:L,UnitRange{Int64}},AxisArrays.Axis{:P,UnitRange{Int64}},AxisArrays.Axis{:S,UnitRange{Int64}}}}) at ./<missing>:0
   [10] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:134 [inlined]
   [11] macro expansion at ./test.jl:860 [inlined]
   [12] macro expansion at /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl:129 [inlined]
   [13] macro expansion at ./test.jl:860 [inlined]
   [14] anonymous at ./<missing>:?
   [15] include_from_node1(::String) at ./loading.jl:576
   [16] include(::String) at ./sysimg.jl:14
   [17] process_options(::Base.JLOptions) at ./client.jl:305
   [18] _start() at ./client.jl:371
Test Summary:           | Pass  Error  Total
NRRD                    |   35      8     43
  Gray, raw             |    3      1      4
  Units                 |    4      1      5
  Compressed (gzip)     |    2      1      3
  Time is 4th dimension |           2      2
  eltype                |   21            21
  Mmapped               |    2             2
  Endian mmapped        |    1             1
  Fiji compatibility    |    2      2      4
  Header only           |           1      1
ERROR: LoadError: Some tests did not pass: 35 passed, 0 failed, 8 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl, in expression starting on line 6
================================[ ERROR: NRRD ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/NRRD/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: NRRD had test errors

>>> End of log
