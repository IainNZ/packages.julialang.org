>>> 'Pkg.add("TextModel")' log
INFO: Cloning cache of TextModel from https://github.com/sadit/TextModel.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing TextModel v0.1.3
INFO: Package database updated

>>> 'Pkg.test("TextModel")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (610.03125 MB free)
Uptime: 83013.0 sec
Load Avg:  1.22265625  1.29052734375  1.123046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    5073671 s       7109 s     315508 s    1734240 s         84 s
#2  3500 MHz    1275879 s       1156 s     132779 s    6702096 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
6 required packages:
 - Conda                         0.7.1
 - JSON                          0.17.2
 - PyCall                        1.15.0
 - PyPlot                        2.5.0
 - RDatasets                     0.4.0
 - TextModel                     0.1.3
30 additional packages:
 - BinDeps                       0.8.7
 - BinaryProvider                0.3.0
 - CSV                           0.2.4
 - CategoricalArrays             0.3.7
 - CodecZlib                     0.4.3
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - DataFrames                    0.11.5
 - DataStreams                   0.3.4
 - DataStructures                0.7.4
 - FileIO                        0.7.0
 - FixedPointNumbers             0.4.6
 - GZip                          0.3.0
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Missings                      0.2.9
 - Mocking                       0.5.1
 - NamedTuples                   4.0.0
 - Nullables                     0.0.5
 - RData                         0.4.0
 - Reexport                      0.1.0
 - SHA                           0.5.7
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.4.0
 - StatsBase                     0.20.1
 - TimeZones                     0.6.4
 - TranscodingStreams            0.5.2
 - URIParser                     0.3.1
 - WeakRefStrings                0.4.3
INFO: Testing TextModel
Test Summary:     | Pass  Total
Character q-grams |    1      1
Test Summary: | Pass  Total
Word n-grams  |    1      1
Test Summary: | Pass  Total
Skip-grams    |    1      1
INFO: VectorModel 1 processed items
vectorize_tfidf(text1, vmodel) = TextModel.VBOW(TextModel.WeightedToken[TextModel.WeightedToken(0x0000000000000001, 0.549306), TextModel.WeightedToken(0x0000000000000002, 0.549306), TextModel.WeightedToken(0x0000000000000003, 0.549306), TextModel.WeightedToken(0x0000000000000004, 0.549306), TextModel.WeightedToken(0x0000000000000005, 0.549306), TextModel.WeightedToken(0x0000000000000006, 0.549306), TextModel.WeightedToken(0x0000000000000008, 0.405465), TextModel.WeightedToken(0x0000000000000009, 0.549306)], -1.0)
Test Summary:                 | Pass  Total
Tokenizer, BOW, and vectorize |    3      3
INFO: DistModel: 1 processed items
sentiment_text = "lol, esto me encanta"
dmodel = TextModel.DistModel(Dict("esto"=>TextModel.TokenDist(0x0000000000000005, [0.5, 0.5]),"encanta"=>TextModel.TokenDist(0x0000000000000002, [1.0, 0.0]),"gusta"=>TextModel.TokenDist(0x0000000000000000, [1.0, 0.0]),"odio"=>TextModel.TokenDist(0x0000000000000003, [0.0, 1.0]),"!"=>TextModel.TokenDist(0x0000000000000006, [1.0, 0.0]),"me"=>TextModel.TokenDist(0x0000000000000001, [1.0, 0.0]),"lol"=>TextModel.TokenDist(0x0000000000000007, [1.0, 0.0]),"lo"=>TextModel.TokenDist(0x0000000000000004, [0.0, 1.0])), TextModel.TextConfig(true, true, false, false, true, true, true, Int64[], [1], Tuple{Int64,Int64}[]), [3, 2])
Test Summary:   | Pass  Total
DistModel tests |    1      1
INFO: DistModel: 1 processed items
emodel = TextModel.EntModel(Dict("esto"=>TextModel.WeightedToken(0x0000000000000001, 0.0),"encanta"=>TextModel.WeightedToken(0x0000000000000002, 1.0),"gusta"=>TextModel.WeightedToken(0x0000000000000003, 1.0),"odio"=>TextModel.WeightedToken(0x0000000000000004, 1.0),"!"=>TextModel.WeightedToken(0x0000000000000005, 1.0),"me"=>TextModel.WeightedToken(0x0000000000000006, 1.0),"lol"=>TextModel.WeightedToken(0x0000000000000007, 1.0),"lo"=>TextModel.WeightedToken(0x0000000000000008, 1.0)), TextModel.TextConfig(true, true, false, false, true, true, true, Int64[], [1], Tuple{Int64,Int64}[]))
Test Summary:  | Pass  Total
EntModel tests |    1      1
Test Summary:         | Pass  Total
DocumentType and VBOW |    3      3
Test Summary: | Pass  Total
operations    |    4      4
INFO: TextModel tests passed

>>> End of log
