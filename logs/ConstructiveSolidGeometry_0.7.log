>>> 'Pkg.add("ConstructiveSolidGeometry")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ConstructiveSolidGeometry from https://github.com/jtramm/ConstructiveSolidGeometry.jl.git
[ Info: Installing BinDeps v0.8.8
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing Colors v0.8.2
[ Info: Installing Conda v0.7.1
[ Info: Installing ConstructiveSolidGeometry v0.1.0
[ Info: Installing Contour v0.4.0
[ Info: Installing DataStructures v0.8.2
[ Info: Installing FixedPointNumbers v0.4.6
[ Info: Installing GR v0.31.0
[ Info: Installing LaTeXStrings v0.3.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing Measures v0.2.0
[ Info: Installing Missings v0.2.9
[ Info: Installing NaNMath v0.3.1
[ Info: Installing PlotThemes v0.2.0
[ Info: Installing PlotUtils v0.4.4
[ Info: Installing Plots v0.17.0
[ Info: Installing PyCall v1.16.1
[ Info: Installing PyPlot v2.5.0
[ Info: Installing RecipesBase v0.3.1
[ Info: Installing Reexport v0.1.0
[ Info: Installing Requires v0.4.3
[ Info: Installing SHA v0.5.7
[ Info: Installing Showoff v0.1.1
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Installing StatsBase v0.22.0
[ Info: Installing URIParser v0.3.1
[ Info: Installing VersionParsing v1.1.0
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building GR
WARNING: importing deprecated binding Base.Pkg into __anon__.
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/GR/deps/build.jl:51
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/GR/deps/build.jl:51
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:54
└ @ Core build.jl:54
INFO: Downloading pre-compiled GR 0.31.0 Ubuntu binary
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0 38.8M    0 81920    0     0  34829      0  0:19:28  0:00:02  0:19:26 34829  2 38.8M    2  896k    0     0   270k      0  0:02:26  0:00:03  0:02:23  270k  7 38.8M    7 2960k    0     0   679k      0  0:00:58  0:00:04  0:00:54  679k  7 38.8M    7 3152k    0     0   586k      0  0:01:07  0:00:05  0:01:02  648k  9 38.8M    9 3952k    0     0   621k      0  0:01:03  0:00:06  0:00:57  816k 20 38.8M   20 7952k    0     0  1091k      0  0:00:36  0:00:07  0:00:29 1595k 37 38.8M   37 14.3M    0     0  1775k      0  0:00:22  0:00:08  0:00:14 2774k 70 38.8M   70 27.2M    0     0  2990k      0  0:00:13  0:00:09  0:00:04 5018k100 38.8M  100 38.8M    0     0  4033k      0  0:00:09  0:00:09 --:--:-- 8171k
[ Info: Building Plots
[ Info: Building PyCall
┌ Info: Using the Python distribution in the Conda package by default.
└ To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = vparse(::String) at VersionParsing.jl:42
└ @ VersionParsing VersionParsing.jl:42
┌ Warning: `contains(haystack, needle)` is deprecated, use `occursin(needle, haystack)` instead.
│   caller = vparse(::String) at VersionParsing.jl:43
└ @ VersionParsing VersionParsing.jl:43
[ Info: PyCall is using /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.7/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.7/Conda/deps/usr/lib/libpython2.7
[ Info: /home/vagrant/.julia/v0.7/PyCall/deps/deps.jl has not changed
[ Info: /home/vagrant/.julia/v0.7/PyCall/deps/PYTHON has not changed
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of ConstructiveSolidGeometry
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ConstructiveSolidGeometry")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2864570 s       6572 s     212767 s    1068216 s         29 s
       #2  3500 MHz     721115 s       3004 s      91594 s    3921753 s          0 s
       
  Memory: 2.939197540283203 GB (748.10546875 MB free)
  Uptime: 48482.0 sec
  Load Avg:  0.90869140625  0.9580078125  0.9482421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - ConstructiveSolidGeometry     0.1.0
 - JSON                          0.17.2
30 additional packages:
 - BinDeps                       0.8.8
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.64.0
 - Conda                         0.7.1
 - Contour                       0.4.0
 - DataStructures                0.8.2
 - FixedPointNumbers             0.4.6
 - GR                            0.31.0
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Measures                      0.2.0
 - Missings                      0.2.9
 - NaNMath                       0.3.1
 - Nullables                     0.0.5
 - PlotThemes                    0.2.0
 - PlotUtils                     0.4.4
 - Plots                         0.17.0
 - PyCall                        1.16.1
 - PyPlot                        2.5.0
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - SHA                           0.5.7
 - Showoff                       0.1.1
 - SortingAlgorithms             0.2.1
 - StaticArrays                  0.7.0
 - StatsBase                     0.22.0
 - URIParser                     0.3.1
 - VersionParsing                1.1.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ConstructiveSolidGeometry
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ConstructiveSolidGeometry/src/ConstructiveSolidGeometry.jl:39.
│ Use `mutable struct` instead.
└ @ nothing ConstructiveSolidGeometry.jl:39
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/ConstructiveSolidGeometry/src/ConstructiveSolidGeometry.jl:53.
│ Use `mutable struct` instead.
└ @ nothing ConstructiveSolidGeometry.jl:53
ERROR: LoadError: LoadError: syntax: extra token "Surface" after end of expression
Stacktrace:
 [1] include at ./boot.jl:314 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1067
 [3] _require(::Base.PkgId) at ./loading.jl:993
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/ConstructiveSolidGeometry/src/ConstructiveSolidGeometry.jl:63
in expression starting at /home/vagrant/.julia/v0.7/ConstructiveSolidGeometry/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for ConstructiveSolidGeometry
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ConstructiveSolidGeometry/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
ERROR: ConstructiveSolidGeometry had test errors

>>> End of log
