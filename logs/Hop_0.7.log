>>> 'Pkg.add("Hop")' log
[ Info: Cloning cache of Hop from https://github.com/mistguy/Hop.jl.git
[ Info: Installing BinDeps v0.8.5
[ Info: Installing ColorTypes v0.6.6
[ Info: Installing Colors v0.8.2
[ Info: Installing Conda v0.7.1
[ Info: Installing FixedPointNumbers v0.4.3
[ Info: Installing Hop v0.0.6
[ Info: Installing LaTeXStrings v0.3.0
[ Info: Installing MacroTools v0.4.0
[ Info: Installing PyCall v1.15.0
[ Info: Installing PyPlot v2.3.2
[ Info: Installing Reexport v0.1.0
[ Info: Installing SHA v0.5.3
[ Info: Installing StaticArrays v0.6.6
[ Info: Installing URIParser v0.3.0
[ Info: Building Conda
┌ Warning: `isdefined(:symbol)` is deprecated, use `@isdefined symbol` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Building PyCall
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:11.
│ Use `struct` instead.
└ @ nothing build.jl:11
┌ Warning: Replacing module `URIParser`
└ @ Base loading.jl:350
┌ Warning: Replacing module `SHA`
└ @ Base loading.jl:350
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:50.
└ @ nothing build.jl:50
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:145.
└ @ nothing build.jl:145
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187.
└ @ nothing build.jl:187
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187.
└ @ nothing build.jl:187
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:188.
└ @ nothing build.jl:188
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:207.
└ @ nothing build.jl:207
WARNING: importing deprecated binding Base.Void into __anon__.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PyCall/deps/depsutils.jl:20
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:169
└ @ Core build.jl:169
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done

# All requested packages already installed.

┌ Warning: `readstring(cmd::AbstractCmd)` is deprecated, use `read(cmd, String)` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#pyvar#2")))(::String, ::String, ::String) at build.jl:39
└ @ Main.__anon__ build.jl:39
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:58
└ @ Main.__anon__ build.jl:58
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at build.jl:60
└ @ Main.__anon__ build.jl:60
┌ Error: ------------------------------------------------------------
│ # Build failed for PyCall
│   exception =
│    LoadError: UndefVarError: Libdl not defined
│    Stacktrace:
│     [1] (::getfield(Main.__anon__, Symbol("#find_libpython#5")))(::String) at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:85
│     [2] top-level scope at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:187
│     [3] include at ./boot.jl:292 [inlined]
│     [4] include_relative(::Module, ::String) at ./loading.jl:521
│     [5] include at ./sysimg.jl:26 [inlined]
│     [6] include(::String) at ./loading.jl:555
│     [7] top-level scope
│     [8] eval at ./boot.jl:295 [inlined]
│     [9] eval at ./sysimg.jl:71 [inlined]
│     [10] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [11] #2 at ./none:12 [inlined]
│     [12] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [13] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [14] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [15] top-level scope
│     [16] eval at ./boot.jl:295 [inlined]
│     [17] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [18] process_options(::Base.JLOptions) at ./client.jl:301
│     [19] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/PyCall/deps/build.jl:255
└ @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ PyCall had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("PyCall")`
│  - build a single package by running its `deps/build.jl` script
└ @ Base.Pkg.Entry entry.jl:650
[ Info: Package database updated

>>> 'Pkg.test("Hop")' log
Julia Version 0.7.0-DEV.3421
Commit 2042dcfc2e (2018-01-16 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz     981218 s         56 s      53044 s     296907 s         12 s
       #2  3499 MHz     191030 s         93 s      18466 s    1325804 s          0 s
       
  Memory: 2.93927001953125 GB (820.7890625 MB free)
  Uptime: 15591.0 sec
  Load Avg:  1.00341796875  1.0146484375  1.0400390625
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Hop                           0.0.6
 - JSON                          0.16.4
15 additional packages:
 - BinDeps                       0.8.5
 - ColorTypes                    0.6.6
 - Colors                        0.8.2
 - Compat                        0.46.0
 - Conda                         0.7.1
 - FixedPointNumbers             0.4.3
 - LaTeXStrings                  0.3.0
 - MacroTools                    0.4.0
 - Nullables                     0.0.3
 - PyCall                        1.15.0
 - PyPlot                        2.3.2
 - Reexport                      0.1.0
 - SHA                           0.5.3
 - StaticArrays                  0.6.6
 - URIParser                     0.3.0
[ Info: Testing Hop
WARNING: importing deprecated binding Base.randexp into StaticArrays.
WARNING: importing deprecated binding Base.rand! into StaticArrays.
WARNING: importing deprecated binding Base.randn! into StaticArrays.
WARNING: importing deprecated binding Base.randexp! into StaticArrays.
WARNING: importing deprecated binding Broadcast._containertype into StaticArrays.
WARNING: importing deprecated binding Broadcast.promote_containertype into StaticArrays.
WARNING: importing deprecated binding Broadcast.broadcast_c into StaticArrays.
WARNING: importing deprecated binding Broadcast.broadcast_c! into StaticArrays.
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:12
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:12
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:13
WARNING: Broadcast._containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:13
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:25
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:25
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:26
WARNING: Broadcast.promote_containertype is deprecated, use BroadcastStyle instead.
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:26
WARNING: Broadcast.broadcast_c is deprecated, `broadcast_c(f, ::Type{C}, As...)` should become `broadcast(f, C, nothing, nothing, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:32
WARNING: Broadcast.broadcast_c is deprecated, `broadcast_c(f, ::Type{C}, As...)` should become `broadcast(f, C, nothing, nothing, As...))` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:32
WARNING: Broadcast.broadcast_c! is deprecated, `broadcast_c!(f, ::Type, ::Type, C, As...)` should become `broadcast!(f, C, As...)` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:127
WARNING: Broadcast.broadcast_c! is deprecated, `broadcast_c!(f, ::Type, ::Type, C, As...)` should become `broadcast!(f, C, As...)` (see the manual chapter Interfaces).
  likely near /home/vagrant/.julia/v0.7/StaticArrays/src/broadcast.jl:127
┌ Warning: Deprecated syntax `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:112.
│ Use `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...,)` instead.
└ @ nothing mapreduce.jl:112
┌ Warning: Deprecated syntax `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:137.
│ Use `([ (if (call == n D) 1 (ref S n)) for n = 1:N ]...,)` instead.
└ @ nothing mapreduce.jl:137
┌ Warning: Deprecated syntax `([ (if (call == n D) (call - (ref S n) 1) (ref S n)) for n = 1:N ]...)` at /home/vagrant/.julia/v0.7/StaticArrays/src/mapreduce.jl:243.
│ Use `([ (if (call == n D) (call - (ref S n) 1) (ref S n)) for n = 1:N ]...,)` instead.
└ @ nothing mapreduce.jl:243
WARNING: importing deprecated binding Base.AbstractRNG into StaticArrays.
ERROR: LoadError: LoadError: ArgumentError: invalid type for argument rng in method definition for rand at /home/vagrant/.julia/v0.7/StaticArrays/src/arraymath.jl:45
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:292 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:521
 [4] include at ./sysimg.jl:26 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/StaticArrays/src/StaticArrays.jl:3
 [6] top-level scope
 [7] include at ./boot.jl:292 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:521
 [9] include(::Module, ::String) at ./sysimg.jl:26
 [10] top-level scope
 [11] eval at ./boot.jl:295 [inlined]
 [12] top-level scope at ./<missing>:2
in expression starting at /home/vagrant/.julia/v0.7/StaticArrays/src/arraymath.jl:45
in expression starting at /home/vagrant/.julia/v0.7/StaticArrays/src/StaticArrays.jl:95
ERROR: LoadError: LoadError: Failed to precompile StaticArrays to /home/vagrant/.julia/lib/v0.7/StaticArrays.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::String) at ./loading.jl:648
 [3] compilecache at ./loading.jl:605 [inlined]
 [4] _require(::Symbol) at ./loading.jl:460
 [5] require(::Symbol) at ./loading.jl:333
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] _require(::Symbol) at ./loading.jl:453
 [9] require(::Symbol) at ./loading.jl:333
 [10] include at ./boot.jl:292 [inlined]
 [11] include_relative(::Module, ::String) at ./loading.jl:521
 [12] include(::Module, ::String) at ./sysimg.jl:26
 [13] process_options(::Base.JLOptions) at ./client.jl:324
 [14] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Hop/src/Hop.jl:2
in expression starting at /home/vagrant/.julia/v0.7/Hop/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for Hop
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Hop/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:730
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:718
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:757
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:733
ERROR: Hop had test errors

>>> End of log
