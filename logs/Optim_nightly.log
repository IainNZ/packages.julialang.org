>>> 'Pkg.add("Optim")' log
INFO: Installing Calculus v0.1.5
INFO: Installing DualNumbers v0.1.1
INFO: Installing NaNMath v0.0.2
INFO: Installing Optim v0.4.0
INFO: Package database updated

>>> 'using Optim' log

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:108.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:121.
Use "[]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:41.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:58.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/deparse.jl:1.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/levenberg_marquardt.jl:41.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/levenberg_marquardt.jl:90.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:43.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:81.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:112.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:141.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:183.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:223.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:260.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:306.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/problems/unconstrained.jl:337.
Use "Any[a,b, ...]" instead.
Julia Version 0.4.0-dev+2197
Commit 59b6080 (2014-12-18 01:31 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3

>>> test log

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:108.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/symbolic.jl:121.
Use "[]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:41.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a,b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/differentiate.jl:58.
Use "Any[a,b, ...]" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Calculus/src/deparse.jl:1.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/levenberg_marquardt.jl:41.
Use "Dict{Any,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "{a=>b, ...}" at /home/idunning/pkgtest/.julia/v0.4/Optim/src/levenberg_marquardt.jl:90.
... truncated ...
 in include_from_node1 at ./loading.jl:128
 in anonymous at no file:31
 in include at ./boot.jl:242
 in include_from_node1 at loading.jl:128
 in process_options at ./client.jl:312
 in _start at ./client.jl:392
WARNING: (inf{T <: FloatingPoint})(::Type{T}) is deprecated, use convert(T,Inf) instead.
 in depwarn at ./deprecated.jl:40
 in inf at deprecated.jl:29
 in nnls at /home/idunning/pkgtest/.julia/v0.4/Optim/src/nnls.jl:9
 in include at ./boot.jl:242
 in include_from_node1 at ./loading.jl:128
 in anonymous at no file:31
 in include at ./boot.jl:242
 in include_from_node1 at loading.jl:128
 in process_options at ./client.jl:312
 in _start at ./client.jl:392
WARNING: (nan{T <: FloatingPoint})(::Type{T}) is deprecated, use convert(T,NaN) instead.
 in depwarn at ./deprecated.jl:40
 in nan at deprecated.jl:29
 in nnls at /home/idunning/pkgtest/.julia/v0.4/Optim/src/nnls.jl:13
 in include at ./boot.jl:242
 in include_from_node1 at ./loading.jl:128
 in anonymous at no file:31
 in include at ./boot.jl:242
 in include_from_node1 at loading.jl:128
 in process_options at ./client.jl:312
 in _start at ./client.jl:392
Running tests:
 * bfgs.jl
 * gradient_descent.jl
 * momentum_gradient_descent.jl
 * grid_search.jl
 * l_bfgs.jl
 * levenberg_marquardt.jl
 * newton.jl
 * cg.jl
 * nelder_mead.jl
 * optimize.jl
 * simulated_annealing.jl
 * interpolating_line_search.jl
 * api.jl
 * golden_section.jl
 * brent.jl
 * type_stability.jl
 * array.jl
 * constrained.jl
INFO: Testing Optim
INFO: Optim tests passed
INFO: No packages to install, update or remove

>>> end of log
