>>> 'Pkg.add("Symata")' log
INFO: Cloning cache of Symata from https://github.com/jlapeyre/Symata.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing Combinatorics v0.4.0
INFO: Installing Conda v0.5.3
INFO: Installing Iterators v0.3.1
INFO: Installing MacroTools v0.3.6
INFO: Installing Polynomials v0.1.5
INFO: Installing Primes v0.1.3
INFO: Installing PyCall v1.12.0
INFO: Installing SHA v0.3.2
INFO: Installing Symata v0.2.0
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .........
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.12.1          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Symata
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Symata")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (848.50390625 MB free)
Uptime: 40613.0 sec
Load Avg:  0.90869140625  0.9404296875  1.00390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2458061 s       1583 s     231040 s     848164 s        105 s
#2  3500 MHz     730450 s       5028 s     108325 s    3115234 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - Symata                        0.2.0
11 additional packages:
 - BinDeps                       0.4.7
 - Combinatorics                 0.4.0
 - Compat                        0.24.0
 - Conda                         0.5.3
 - Iterators                     0.3.1
 - MacroTools                    0.3.6
 - Polynomials                   0.1.5
 - Primes                        0.1.3
 - PyCall                        1.12.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing Symata
Done testing shifrin_test.sj
Done testing function_test.sj
Done testing pattern_test.sj
Done testing up_downvalue_test.sj
Done testing linalg_test.sj
Done testing string_test.sj
Done testing numeric_test.sj
Done testing julia_interface_test.sj
Done testing latex_test.sj
Done testing output_test.sj
Done testing measurement_test.sj
Done testing io_test.sj
Done testing newcomparison_test.sj
Done testing math_function_test.sj
Done testing mittleff_test.sj
WARNING: For::argb: For called with one argument; between 3 and 4 are expected.
WARNING: For::argb: For called with five arguments; between 3 and 4 are expected.
WARNING: Throw flag set, but expression is not throw.True
WARNING: Throw flag set, but expression is not throw.True
WARNING: Catch: throw set but expr is Throw(x,u)
Done testing flowcontrol_test.sj
Done testing evaluation_test.sj
Done testing list_test.sj
Done testing ntable_test.sj
Done testing predicate_test.sj
Done testing trig_test.sj
Done testing mxpr_test.sj
Done testing integral_derivative_test.sj
WARNING: pyeval is deprecated.  Use py"lambda x: len(str(x))" instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.5/PyCall/src/pyeval.jl:58
 in do_FullSimplify(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/sympy_application.jl:446
 in apprules(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/sympy_application.jl:442
 in meval_apply_all_rules(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:398
 in meval(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:378
 in infseval(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in argeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:420 [inlined]
 in meval_arguments(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:453
 in meval(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:374
 in infseval(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in tryexfunc(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:242
 in exfunc(::Expr, ::Symata.ExFuncOptions) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:212
 in read_Symata_file(::String, ::Symata.Symata_Plain_Test) at /home/vagrant/.julia/v0.5/Symata/src/IO.jl:96
 in runtest at /home/vagrant/.julia/v0.5/Symata/src/test.jl:68 [inlined]
 in runalltests() at /home/vagrant/.julia/v0.5/Symata/src/../sjtest/sjruntests.jl:52
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in do_Tests(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/test.jl:91
 in apprules(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/apprules_core.jl:65
 in meval_apply_all_rules(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:398
 in meval(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:378
 in infseval(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in tryexfunc(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:242
 in exfunc(::Expr, ::Symata.ExFuncOptions) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:209
 in exfunc(::Expr) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:196
 in @ex(::Any) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:99
 in eval(::Module, ::Any) at ./boot.jl:234
 in runtests() at /home/vagrant/.julia/v0.5/Symata/test/runtests.jl:12
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Symata/src/../sjtest/sjruntests.jl, in expression starting on line 63
Done testing algebraic_transformation_test.sj
Done testing sympy_test.sj
Done testing attribute_test.sj
Done testing module_test.sj
Done testing orderless_test.sj
Done testing somemath_test.sj
Done testing expression_test.sj
Done testing arithmetic_test.sj
Done testing spec_fun_test.sj
Done testing simple_expression_test.sj

Done testing shifrin_test.sj
Done testing function_test.sj
Done testing pattern_test.sj
Done testing up_downvalue_test.sj
Done testing linalg_test.sj
Done testing string_test.sj
Done testing numeric_test.sj
Done testing julia_interface_test.sj
Done testing latex_test.sj
Done testing output_test.sj
Done testing measurement_test.sj
Done testing io_test.sj
Done testing newcomparison_test.sj
Done testing math_function_test.sj
Done testing mittleff_test.sj
WARNING: For::argb: For called with one argument; between 3 and 4 are expected.
WARNING: For::argb: For called with five arguments; between 3 and 4 are expected.
WARNING: Throw flag set, but expression is not throw.True
WARNING: Throw flag set, but expression is not throw.True
WARNING: Catch: throw set but expr is Throw(x,u)
Done testing flowcontrol_test.sj
Done testing evaluation_test.sj
Done testing list_test.sj
Done testing ntable_test.sj
Done testing predicate_test.sj
Done testing trig_test.sj
Done testing mxpr_test.sj
Done testing integral_derivative_test.sj
WARNING: pyeval is deprecated.  Use py"lambda x: len(str(x))" instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in #pyeval#72(::Array{Any,1}, ::Function, ::String, ::Type{PyCall.PyAny}, ::PyCall.PyDict{AbstractString,PyCall.PyObject,true}, ::Int64) at /home/vagrant/.julia/v0.5/PyCall/src/pyeval.jl:58
 in do_FullSimplify(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/sympy_application.jl:446
 in apprules(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/sympy_application.jl:442
 in meval_apply_all_rules(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:398
 in meval(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:378
 in infseval(::Symata.Mxpr{:FullSimplify}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in argeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:420 [inlined]
 in meval_arguments(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:453
 in meval(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:374
 in infseval(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in tryexfunc(::Symata.Mxpr{:Equal}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:242
 in exfunc(::Expr, ::Symata.ExFuncOptions) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:212
 in read_Symata_file(::String, ::Symata.Symata_Plain_Test) at /home/vagrant/.julia/v0.5/Symata/src/IO.jl:96
 in runtest at /home/vagrant/.julia/v0.5/Symata/src/test.jl:68 [inlined]
 in runalltests() at /home/vagrant/.julia/v0.5/Symata/src/../sjtest/sjruntests.jl:52
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in do_Tests(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/test.jl:91
 in apprules(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/apprules_core.jl:65
 in meval_apply_all_rules(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:398
 in meval(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:378
 in infseval(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:290
 in doeval at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:11 [inlined]
 in tryexfunc(::Symata.Mxpr{:Tests}) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:242
 in exfunc(::Expr, ::Symata.ExFuncOptions) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:209
 in exfunc(::Expr) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:196
 in @ex(::Any) at /home/vagrant/.julia/v0.5/Symata/src/evaluation.jl:99
 in eval(::Module, ::Any) at ./boot.jl:234
 in runtests() at /home/vagrant/.julia/v0.5/Symata/test/runtests.jl:12
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Symata/src/../sjtest/sjruntests.jl, in expression starting on line 78
Done testing algebraic_transformation_test.sj
Done testing sympy_test.sj
Done testing attribute_test.sj
Done testing module_test.sj
Done testing orderless_test.sj
Done testing somemath_test.sj
Done testing expression_test.sj
Done testing arithmetic_test.sj
Done testing spec_fun_test.sj
Done testing simple_expression_test.sj
2884 passed.
0 failed.
INFO: Symata tests passed

>>> End of log
