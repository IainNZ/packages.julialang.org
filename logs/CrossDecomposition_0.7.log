>>> 'Pkg.add("CrossDecomposition")' log
┌ Info: Cloning cache of CrossDecomposition from https://github.com/simonster/CrossDecomposition.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing BinDeps v0.8.2                  @ Base.Pkg.Entry entry.jl:543
[ Info: Installing CrossDecomposition v0.0.1       @ Base.Pkg.Entry entry.jl:543
[ Info: Installing DataStructures v0.7.4           @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SHA v0.5.2                      @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SortingAlgorithms v0.2.0        @ Base.Pkg.Entry entry.jl:543
[ Info: Installing SpecialFunctions v0.3.7         @ Base.Pkg.Entry entry.jl:543
[ Info: Installing StatsBase v0.19.5               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing URIParser v0.3.0                @ Base.Pkg.Entry entry.jl:543
[ Info: Building SpecialFunctions                                 @ Main none:10
WARNING: importing deprecated binding Base.Associative into BinDeps.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/SpecialFunctions/deps/binaries.jl:44
in @install at /home/vagrant/.julia/v0.7/BinDeps/src/dependencies.jl
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::Type, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = #_find_library#48(::DataType, ::Function, ::BinDeps.LibraryDependency) at dependencies.jl:652
└                                                  @ BinDeps dependencies.jl:652
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CrossDecomposition
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CrossDecomposition")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2201126 s       1340 s     120810 s     590907 s         10 s
       #2  3500 MHz     437334 s       5228 s      48444 s    2950084 s          0 s
       
  Memory: 2.93927001953125 GB (393.3203125 MB free)
  Uptime: 34947.0 sec
  Load Avg:  1.0361328125  1.001953125  1.0185546875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - CrossDecomposition            0.0.1
 - JSON                          0.16.3
9 additional packages:
 - BinDeps                       0.8.2
 - Compat                        0.44.0
 - DataStructures                0.7.4
 - Nullables                     0.0.2
 - SHA                           0.5.2
 - SortingAlgorithms             0.2.0
 - SpecialFunctions              0.3.7
 - StatsBase                     0.19.5
 - URIParser                     0.3.0
[ Info: Testing CrossDecomposition                 @ Base.Pkg.Entry entry.jl:723
[ Warning: Replacing module `Compat`                       @ Base loading.jl:350
WARNING: Method definition #sort(Any, typeof(Base.sort), Base.Dict{K, V} where V where K) in module DataStructures overwritten in module DataStructures.
WARNING: Method definition sort(Base.Dict{K, V} where V where K) in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27 overwritten in module DataStructures at /home/vagrant/.julia/v0.7/DataStructures/src/dict_sorting.jl:27.
[ Warning: Replacing module `DataStructures`               @ Base loading.jl:350
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/CrossDecomposition/src/canoncor.jl:1.
│ Use `struct` instead.
└                                                        @ nothing canoncor.jl:1
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/CrossDecomposition/test/runtests.jl:2
┌ Warning: `F[:Q]` is deprecated, use `F.Q` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:20
└                                            @ CrossDecomposition canoncor.jl:20
┌ Warning: `full(Q::QRCompactWYQ; thin::Bool = true)` (and `full` in general) has been deprecated. To replace `full(Q::QRCompactWYQ, true)`, consider `Matrix(Q)` or `Array(Q)`. To replace `full(Q::QRCompactWYQ, false)`, consider `Base.LinAlg.mul!(Q, Matrix{eltype(Q)}(I, size(Q.factors, 1), size(Q.factors, 1)))`.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:20
└                                            @ CrossDecomposition canoncor.jl:20
┌ Warning: `F[:Q]` is deprecated, use `F.Q` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:20
└                                            @ CrossDecomposition canoncor.jl:20
┌ Warning: `full(Q::QRCompactWYQ; thin::Bool = true)` (and `full` in general) has been deprecated. To replace `full(Q::QRCompactWYQ, true)`, consider `Matrix(Q)` or `Array(Q)`. To replace `full(Q::QRCompactWYQ, false)`, consider `Base.LinAlg.mul!(Q, Matrix{eltype(Q)}(I, size(Q.factors, 1), size(Q.factors, 1)))`.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:20
└                                            @ CrossDecomposition canoncor.jl:20
┌ Warning: `F[:R]` is deprecated, use `F.R` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:21
└                                            @ CrossDecomposition canoncor.jl:21
┌ Warning: `F[:U]` is deprecated, use `F.U` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:21
└                                            @ CrossDecomposition canoncor.jl:21
┌ Warning: `F[:R]` is deprecated, use `F.R` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:22
└                                            @ CrossDecomposition canoncor.jl:22
┌ Warning: `F[:Vt]` is deprecated, use `F.Vt` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:22
└                                            @ CrossDecomposition canoncor.jl:22
┌ Warning: `F[:S]` is deprecated, use `F.S` instead.
│   caller = #canoncor#1(::Bool, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at canoncor.jl:28
└                                            @ CrossDecomposition canoncor.jl:28
┌ Warning: @test_approx_eq is deprecated, use `@test r ≈ cor(cc)` instead
│   caller = include at boot.jl:293 [inlined]
└                                                             @ Core boot.jl:293
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = top-level scope
└                                                                      @ Core :0
┌ Warning: `eye(m::Integer)` has been deprecated in favor of `I` and `Matrix` constructors. For a direct replacement, consider `Matrix(1.0I, m, m)` or `Matrix{Float64}(I, m, m)`. If `Float64` element type is not necessary, consider the shorter `Matrix(I, m, m)` (with default `eltype(I)` `Bool`).
│   caller = top-level scope
└                                                                      @ Core :0
[ Info: CrossDecomposition tests passed            @ Base.Pkg.Entry entry.jl:737

>>> End of log
