>>> 'Pkg.add("MachineLearningMetrics")' log
[ Info: Cloning cache of MachineLearningMetrics from https://github.com/paulhendricks/MachineLearningMetrics.jl.git @ Base.Pkg.Cache cache.jl:43
[ Info: Installing MachineLearningMetrics v0.0.1 @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of MachineLearningMetrics
│ Use `Pkg.update()` to get the latest versions of your packages
└ @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("MachineLearningMetrics")' log
Julia Version 0.7.0-DEV.3299
Commit fb527308bb (2018-01-05 19:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    3000969 s        105 s     147452 s     728960 s         16 s
       #2  3500 MHz     554024 s         72 s      57133 s    3880135 s          0 s
       
  Memory: 2.93927001953125 GB (778.25390625 MB free)
  Uptime: 45545.0 sec
  Load Avg:  0.923828125  0.96923828125  0.98095703125
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - MachineLearningMetrics        0.0.1
2 additional packages:
 - Compat                        0.42.0
 - Nullables                     0.0.2
[ Info: Testing MachineLearningMetrics @ Base.Pkg.Entry entry.jl:723
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/MachineLearningMetrics/test/runtests.jl:5
Running tests:
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/MachineLearningMetrics/test/classification.jl:1
┌ Warning: `A::AbstractArray & B::AbstractArray` is deprecated, use `A .& B` instead.
│   caller = true_positive(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:8
└ @ MachineLearningMetrics classification.jl:8
┌ Warning: `A::AbstractArray & B::AbstractArray` is deprecated, use `A .& B` instead.
│   caller = true_negative(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:13
└ @ MachineLearningMetrics classification.jl:13
┌ Warning: `!(B::BitArray)` is deprecated, use `.!(B)` instead.
│   caller = false_positive(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:18
└ @ MachineLearningMetrics classification.jl:18
┌ Warning: `A::AbstractArray & B::AbstractArray` is deprecated, use `A .& B` instead.
│   caller = false_positive(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:18
└ @ MachineLearningMetrics classification.jl:18
┌ Warning: `!(B::BitArray)` is deprecated, use `.!(B)` instead.
│   caller = false_negative(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:23
└ @ MachineLearningMetrics classification.jl:23
┌ Warning: `A::AbstractArray & B::AbstractArray` is deprecated, use `A .& B` instead.
│   caller = false_negative(::Array{Int64,1}, ::Array{Int64,1}) at classification.jl:23
└ @ MachineLearningMetrics classification.jl:23
WARNING: both MachineLearningMetrics and Base export "precision"; uses of it in module Main must be qualified
Error During Test at /home/vagrant/.julia/v0.7/MachineLearningMetrics/test/classification.jl:43
  Test threw an exception of type UndefVarError
  Expression: positive_predictive_value(y_true, y_pred) == precision(y_true, y_pred) == 0.5
  UndefVarError: precision not defined
  Stacktrace:
   [1] top-level scope
   [2] include at ./boot.jl:295 [inlined]
   [3] include_relative(::Module, ::String) at ./loading.jl:521
   [4] include(::Module, ::String) at ./sysimg.jl:26
   [5] include(::String) at ./sysimg.jl:65
   [6] top-level scope at ./<missing>:17
   [7] include at ./boot.jl:295 [inlined]
   [8] include_relative(::Module, ::String) at ./loading.jl:521
   [9] include(::Module, ::String) at ./sysimg.jl:26
   [10] process_options(::Base.JLOptions) at ./client.jl:323
   [11] _start() at ./client.jl:374
	FAILED: classification.jl
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/MachineLearningMetrics/test/regression.jl:1
┌ Warning: `abs(x::(Base.AbstractArray){T}) where T <: Number` is deprecated, use `abs.(x)` instead.
│   caller = absolute_error(::Array{Int64,1}, ::Array{Int64,1}) at regression.jl:3
└ @ MachineLearningMetrics regression.jl:3
┌ Warning: `abs(x::(Base.AbstractArray){T}) where T <: Number` is deprecated, use `abs.(x)` instead.
│   caller = mean_absolute_scaled_error(::Array{Int64,1}, ::Array{Int64,1}) at regression.jl:99
└ @ MachineLearningMetrics regression.jl:99
┌ Warning: `abs(x::(Base.AbstractArray){T}) where T <: Number` is deprecated, use `abs.(x)` instead.
│   caller = mean_absolute_scaled_error(::Array{Int64,1}, ::Array{Int64,1}) at regression.jl:100
└ @ MachineLearningMetrics regression.jl:100
┌ Warning: `a::AbstractArray - b::Number` is deprecated, use `broadcast(-, a, b)` instead.
│   caller = total_variance_score(::Array{Int64,1}, ::Array{Int64,1}) at regression.jl:106
└ @ MachineLearningMetrics regression.jl:106
┌ Warning: `a::AbstractArray - b::Number` is deprecated, use `broadcast(-, a, b)` instead.
│   caller = explained_variance_score(::Array{Int64,1}, ::Array{Int64,1}) at regression.jl:111
└ @ MachineLearningMetrics regression.jl:111
	PASSED: regression.jl
[ Info: MachineLearningMetrics tests passed @ Base.Pkg.Entry entry.jl:737

>>> End of log
