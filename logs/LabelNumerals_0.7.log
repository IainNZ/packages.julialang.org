>>> 'Pkg.add("LabelNumerals")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of LabelNumerals from https://github.com/sambitdash/LabelNumerals.jl.git
[ Info: Cloning cache of RomanNumerals from https://github.com/anthonyclays/RomanNumerals.jl.git
[ Info: Installing LabelNumerals v0.0.4
[ Info: Installing Primes v0.2.0
[ Info: Installing RomanNumerals v0.2.2
[ Info: Package database updated

>>> 'Pkg.test("LabelNumerals")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4375
Commit 6239b632ba (2018-02-24 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2261990 s       6998 s     129838 s     539111 s         16 s
       #2  3499 MHz     428130 s       2189 s      66076 s    2903613 s          0 s
       
  Memory: 2.93927001953125 GB (828.8828125 MB free)
  Uptime: 34702.0 sec
  Load Avg:  0.8896484375  0.9580078125  0.94921875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - LabelNumerals                 0.0.4
4 additional packages:
 - Compat                        0.54.0
 - Nullables                     0.0.3
 - Primes                        0.2.0
 - RomanNumerals                 0.2.2
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing LabelNumerals
┌ Warning: Deprecated syntax `parametric method syntax LabelNumeral{T <: Integer}(t::T,; prefix = "", caselower = false)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:46.
│ Use `LabelNumeral(t::T,; prefix = "", caselower = false) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:46
┌ Warning: Deprecated syntax `parametric method syntax LabelNumeral{T <: Integer}(t::Type{T}, i::Integer; prefix = "", caselower = false)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:48.
│ Use `LabelNumeral(t::Type{T}, i::Integer; prefix = "", caselower = false) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:48
┌ Warning: Deprecated syntax `parametric method syntax LabelNumeral{T <: Integer}(t::Type{T}, str::String; prefix = "", caselower = false)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:50.
│ Use `LabelNumeral(t::Type{T}, str::String; prefix = "", caselower = false) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:50
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{T}, num::LabelNumeral)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:73.
│ Use `Base.convert(#unused#::Type{T}, num::LabelNumeral) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:73
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{LabelNumeral{T}}, num::Int)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:74.
│ Use `Base.convert(#unused#::Type{LabelNumeral{T}}, num::Int) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:74
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{T <: Integer, S <: Integer}(::Type{LabelNumeral{S}}, ::Type{T})` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:75.
│ Use `Base.promote_rule(#unused#::Type{LabelNumeral{S}}, #unused#::Type{T}) where {T <: Integer, S <: Integer}` instead.
└ @ nothing LabelNumeral.jl:75
┌ Warning: Deprecated syntax `parametric method syntax +{T <: Integer}(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:107.
│ Use `+(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:107
┌ Warning: Deprecated syntax `parametric method syntax -{T <: Integer}(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:107.
│ Use `-(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:107
┌ Warning: Deprecated syntax `parametric method syntax max{T <: Integer}(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:107.
│ Use `max(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:107
┌ Warning: Deprecated syntax `parametric method syntax min{T <: Integer}(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LabelNumeral.jl:107.
│ Use `min(n1::LabelNumeral{T}, n2::LabelNumeral{T}, ns::LabelNumeral{T}...) where T <: Integer` instead.
└ @ nothing LabelNumeral.jl:107
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{T}, num::AlphaNumeral)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/AlphaNumeral.jl:43.
│ Use `Base.convert(#unused#::Type{T}, num::AlphaNumeral) where T <: Integer` instead.
└ @ nothing AlphaNumeral.jl:43
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:4.
│ Use `struct` instead.
└ @ nothing factorization.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Factorization{T}}){T <: Integer}()` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:8.
│ Use `(::Type{Factorization{T}})() where T <: Integer` instead.
└ @ nothing factorization.jl:8
WARNING: importing deprecated binding Base.Associative into Primes.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:4
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Factorization{T}}){T <: Integer}(d::Associative)` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:12.
│ Use `(::Type{Factorization{T}})(d::Associative) where T <: Integer` instead.
└ @ nothing factorization.jl:12
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:11
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T}(::Type{Factorization}, d::Associative{T})` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:17.
│ Use `Base.convert(#unused#::Type{Factorization}, d::Associative{T}) where T` instead.
└ @ nothing factorization.jl:17
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:17
┌ Warning: Deprecated syntax `parametric method syntax Base.setindex!{T}(f::Factorization{T}, e::Int, p::Integer)` around /home/vagrant/.julia/v0.7/Primes/src/factorization.jl:34.
│ Use `Base.setindex!(f::Factorization{T}, e::Int, p::Integer) where T` instead.
└ @ nothing factorization.jl:34
┌ Warning: Deprecated syntax `parametric method syntax primesmask{T <: Integer}(lo::T, hi::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:104.
│ Use `primesmask(lo::T, hi::T) where T <: Integer` instead.
└ @ nothing Primes.jl:104
┌ Warning: Deprecated syntax `parametric method syntax factor!{T <: Integer, K <: Integer}(n::T, h::Associative{K, Int})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:245.
│ Use `factor!(n::T, h::Associative{K, Int}) where {T <: Integer, K <: Integer}` instead.
└ @ nothing Primes.jl:245
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:243
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer}(n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:306.
│ Use `factor(n::T) where T <: Integer` instead.
└ @ nothing Primes.jl:306
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, D <: Associative}(::Type{D}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:345.
│ Use `factor(#unused#::Type{D}, n::T) where {T <: Integer, D <: Associative}` instead.
└ @ nothing Primes.jl:345
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:309
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:309
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, A <: AbstractArray}(::Type{A}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:346.
│ Use `factor(#unused#::Type{A}, n::T) where {T <: Integer, A <: AbstractArray}` instead.
└ @ nothing Primes.jl:346
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer}(::Type{Vector{T}}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:347.
│ Use `factor(#unused#::Type{Vector{T}}, n::T) where T <: Integer` instead.
└ @ nothing Primes.jl:347
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Integer, S <: Union{Set, IntSet}}(::Type{S}, n::T)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:349.
│ Use `factor(#unused#::Type{S}, n::T) where {T <: Integer, S <: Union{Set, IntSet}}` instead.
└ @ nothing Primes.jl:349
WARNING: importing deprecated binding Base.IntSet into Primes.
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:349
┌ Warning: Deprecated syntax `parametric method syntax factor{T <: Any}(::Type{T}, n)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:350.
│ Use `factor(#unused#::Type{T}, n) where T <: Any` instead.
└ @ nothing Primes.jl:350
┌ Warning: Deprecated syntax `parametric method syntax prodfactors{K}(factors::Associative{K})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:368.
│ Use `prodfactors(factors::Associative{K}) where K` instead.
└ @ nothing Primes.jl:368
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:368
WARNING: Base.IntSet is deprecated, use BitSet instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:369
┌ Warning: Deprecated syntax `parametric method syntax pollardfactors!{T <: Integer, K <: Integer}(n::T, h::Associative{K, Int})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:392.
│ Use `pollardfactors!(n::T, h::Associative{K, Int}) where {T <: Integer, K <: Integer}` instead.
└ @ nothing Primes.jl:392
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:391
┌ Warning: Deprecated syntax `parametric method syntax totient{T <: Integer}(f::Factorization{T})` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:514.
│ Use `totient(f::Factorization{T}) where T <: Integer` instead.
└ @ nothing Primes.jl:514
WARNING: importing deprecated binding Base.Void into Primes.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:540
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:540
┌ Warning: Deprecated syntax `parametric method syntax prime{T <: Integer}(::Type{T}, i::Integer)` around /home/vagrant/.julia/v0.7/Primes/src/Primes.jl:654.
│ Use `prime(#unused#::Type{T}, i::Integer) where T <: Integer` instead.
└ @ nothing Primes.jl:654
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/RomanNumerals/src/types.jl:4.
│ Use `mutable struct` instead.
└ @ nothing types.jl:4
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/RomanNumerals/src/types.jl:10.
│ Use `struct` instead.
└ @ nothing types.jl:10
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{T}, num::RN)` around /home/vagrant/.julia/v0.7/RomanNumerals/src/types.jl:31.
│ Use `Base.convert(#unused#::Type{T}, num::RN) where T <: Integer` instead.
└ @ nothing types.jl:31
┌ Warning: Deprecated syntax `parametric method syntax Base.promote_rule{T <: Integer}(::Type{RN}, ::Type{T})` around /home/vagrant/.julia/v0.7/RomanNumerals/src/types.jl:33.
│ Use `Base.promote_rule(#unused#::Type{RN}, #unused#::Type{T}) where T <: Integer` instead.
└ @ nothing types.jl:33
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/LabelNumerals/src/LookupNumeral.jl:70.
│ Use `at most one line break` instead.
└ @ nothing LookupNumeral.jl:70
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{T}, num::LookupNumeral)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/LookupNumeral.jl:98.
│ Use `Base.convert(#unused#::Type{T}, num::LookupNumeral) where T <: Integer` instead.
└ @ nothing LookupNumeral.jl:98
┌ Warning: Deprecated syntax `parametric method syntax Base.convert{T <: Integer}(::Type{T}, num::AlphaNumNumeral)` around /home/vagrant/.julia/v0.7/LabelNumerals/src/AlphaNumNumeral.jl:44.
│ Use `Base.convert(#unused#::Type{T}, num::AlphaNumNumeral) where T <: Integer` instead.
└ @ nothing AlphaNumNumeral.jl:44
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/LabelNumerals/test/runtests.jl:2
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{RomanNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{RomanNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{RomanNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}, ::LabelNumeral{RomanNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{RomanNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{RomanNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Test Summary:     | Pass  Total
RomanNumeral test |   16     16
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = ==(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = ==(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = +(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = +(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{Int64}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = -(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = -(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{Int64}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = >(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = >(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = <=(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = <=(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = <(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = <(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = isless(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = isless(::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = max(::LabelNumeral{Int64}, ::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = max(::LabelNumeral{Int64}, ::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{Int64}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = min(::LabelNumeral{Int64}, ::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = min(::LabelNumeral{Int64}, ::LabelNumeral{Int64}, ::LabelNumeral{Int64}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{Int64})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{Int64}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Test Summary: | Pass  Total
Integer test  |   13     13
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
BBB
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = convert(::Type{BigInt}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:72
└ @ LabelNumerals LabelNumeral.jl:72
┌ Warning: DomainError now supports arguments, use `DomainError(value)` or `DomainError(value, msg)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}, ::LabelNumeral{AlphaNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Test Summary:     | Pass  Total
AlphaNumeral test |   23     23
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{LookupNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Ten
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = convert(::Type{BigInt}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:72
└ @ LabelNumerals LabelNumeral.jl:72
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{LookupNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{LookupNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}, ::LabelNumeral{LookupNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{LookupNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{LookupNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Test Summary:      | Pass  Total
LookupNumeral test |   24     24
┌ Warning: `unshift!` is deprecated, use `pushfirst!` instead.
│   caller = convert(::Type{AlphaNumNumeral}, ::Int64) at AlphaNumNumeral.jl:66
└ @ LabelNumerals AlphaNumNumeral.jl:66
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = ==(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:95
└ @ LabelNumerals LabelNumeral.jl:95
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = -(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
BBB
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = convert(::Type{BigInt}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:72
└ @ LabelNumerals LabelNumeral.jl:72
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = +(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = >(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:100
└ @ LabelNumerals LabelNumeral.jl:100
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = <=(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:101
└ @ LabelNumerals LabelNumeral.jl:101
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = <(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:99
└ @ LabelNumerals LabelNumeral.jl:99
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = isless(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:98
└ @ LabelNumerals LabelNumeral.jl:98
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = max(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = min(::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}, ::LabelNumeral{AlphaNumNumeral}) at LabelNumeral.jl:107
└ @ LabelNumerals LabelNumeral.jl:107
┌ Warning: Constructors no longer fall back to `convert`. A constructor `Int64(::LabelNumeral{AlphaNumNumeral})` should be defined instead.
│   caller = map at tuple.jl:151 [inlined]
└ @ Core tuple.jl:151
┌ Warning: Constructors no longer fall back to `convert`. A constructor `LabelNumeral{AlphaNumNumeral}(::Int64)` should be defined instead.
│   caller = |> at operators.jl:744 [inlined]
└ @ Core operators.jl:744
Test Summary:        | Pass  Total
AlphaNumNumeral test |   21     21
Test Summary: | Pass  Total
Search Label  |    3      3
[ Info: LabelNumerals tests passed

>>> End of log
