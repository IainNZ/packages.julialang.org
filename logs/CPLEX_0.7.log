>>> 'Pkg.add("CPLEX")' log
┌ Info: Cloning cache of CPLEX from https://github.com/JuliaOpt/CPLEX.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing CPLEX v0.3.0                    @ Base.Pkg.Entry entry.jl:543
[ Info: Installing MathProgBase v0.7.0             @ Base.Pkg.Entry entry.jl:543
[ Info: Removing BinDeps v0.8.2                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Blosc v0.3.0                      @ Base.Pkg.Entry entry.jl:546
[ Info: Removing BufferedStreams v0.3.3            @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Codecs v0.4.0                     @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Coverage v0.4.0                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Git v0.2.0                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HDF5 v0.8.8                       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HttpCommon v0.3.0                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing HttpParser v0.3.0                 @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Libz v0.2.4                       @ Base.Pkg.Entry entry.jl:546
[ Info: Removing MbedTLS v0.5.3                    @ Base.Pkg.Entry entry.jl:546
[ Info: Removing Requests v0.5.1                   @ Base.Pkg.Entry entry.jl:546
[ Info: Removing SHA v0.5.2                        @ Base.Pkg.Entry entry.jl:546
[ Info: Removing URIParser v0.3.0                  @ Base.Pkg.Entry entry.jl:546
[ Info: Building CPLEX                                            @ Main none:10
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope
└                                                                      @ Core :0
┌ Warning: `is_apple` is deprecated, use `Sys.isapple` instead.
│   caller = top-level scope at <missing>:24
└                                                            @ Core <missing>:24
┌ Warning: `is_unix` is deprecated, use `Sys.isunix` instead.
│   caller = top-level scope at <missing>:26
└                                                            @ Core <missing>:26
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope at <missing>:?
└                                                            @ Core <missing>:-1
┌ Warning: Deprecated syntax `implicit assignment to global variable `found``.
│ Use `global found` instead.
└                                                               @ nothing none:0
┌ Error: ------------------------------------------------------------
│ # Build failed for CPLEX
│   exception =
│    LoadError: Unable to locate CPLEX installation. Note this must be downloaded separately. See the CPLEX.jl README for further instructions.
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] top-level scope at /home/vagrant/.julia/v0.7/CPLEX/deps/build.jl:63
│     [3] include at ./boot.jl:293 [inlined]
│     [4] include_relative(::Module, ::String) at ./loading.jl:521
│     [5] include at ./sysimg.jl:26 [inlined]
│     [6] include(::String) at ./loading.jl:555
│     [7] top-level scope
│     [8] eval at ./boot.jl:296 [inlined]
│     [9] eval at ./sysimg.jl:71 [inlined]
│     [10] evalfile(::String, ::Array{String,1}) at ./loading.jl:550 (repeats 2 times)
│     [11] #2 at ./none:12 [inlined]
│     [12] cd(::getfield(, Symbol("##2#5")){String}, ::String) at ./file.jl:70
│     [13] (::getfield(, Symbol("##1#3")))(::IOStream) at ./none:11
│     [14] open(::getfield(, Symbol("##1#3")), ::String, ::String) at ./iostream.jl:310
│     [15] top-level scope
│     [16] eval at ./boot.jl:296 [inlined]
│     [17] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [18] process_options(::Base.JLOptions) at ./client.jl:301
│     [19] _start() at ./client.jl:375
│    in expression starting at /home/vagrant/.julia/v0.7/CPLEX/deps/build.jl:63
└                                                                 @ Main none:15
┌ Warning: ------------------------------------------------------------
│ # Build error summary
│ 
│ CPLEX had build errors.
│ 
│  - packages with build errors remain installed in /home/vagrant/.julia/v0.7
│  - build the package(s) and all dependencies with `Pkg.build("CPLEX")`
│  - build a single package by running its `deps/build.jl` script
└                                                  @ Base.Pkg.Entry entry.jl:656
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of CPLEX
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("CPLEX")' log
Package was unable to be tested.

>>> End of log
