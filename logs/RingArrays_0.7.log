>>> 'Pkg.add("RingArrays")' log
┌ Info: Cloning cache of RingArrays from https://github.com/invenia/RingArrays.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
┌ Info: Cloning cache of VirtualArrays from https://github.com/invenia/VirtualArrays.jl.git
└                                                   @ Base.Pkg.Cache cache.jl:43
[ Info: Installing RingArrays v0.1.0               @ Base.Pkg.Entry entry.jl:543
[ Info: Installing VirtualArrays v0.1.1            @ Base.Pkg.Entry entry.jl:543
[ Info: Package database updated                    @ Base.Pkg.Entry entry.jl:32
┌ Info: METADATA is out-of-date — you may not have the latest version of RingArrays
│ Use `Pkg.update()` to get the latest versions of your packages
└                                                   @ Base.Pkg.Entry entry.jl:74

>>> 'Pkg.test("RingArrays")' log
Julia Version 0.7.0-DEV.3354
Commit 9b5eed2b6c (2018-01-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2001544 s        118 s     100250 s     538240 s         21 s
       #2  3500 MHz     367900 s       7298 s      38793 s    2657708 s          0 s
       
  Memory: 2.93927001953125 GB (636.6796875 MB free)
  Uptime: 31193.0 sec
  Load Avg:  1.02587890625  1.0146484375  0.97607421875
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.3
 - RingArrays                    0.1.0
4 additional packages:
 - Compat                        0.46.0
 - Nullables                     0.0.3
 - VirtualArrays                 0.1.1
 - tmpRJzzrX                     0.0.0-             non-repo (unregistered)
┌ Info: Computing test dependencies for RingArrays...
└                                                  @ Base.Pkg.Entry entry.jl:713
[ Info: Installing BaseTestNext v0.2.2             @ Base.Pkg.Entry entry.jl:543
[ Info: Installing FactCheck v0.4.3                @ Base.Pkg.Entry entry.jl:543
[ Info: Testing RingArrays                         @ Base.Pkg.Entry entry.jl:723
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/RingArrays/src/RingArrays.jl:10.
│ Use `mutable struct` instead.
└                                                     @ nothing RingArrays.jl:10
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/RingArrays/src/RingArrays.jl:31.
│ Use `mutable struct` instead.
└                                                     @ nothing RingArrays.jl:31
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/RingArrays/src/RingArrays.jl:35.
│ Use `mutable struct` instead.
└                                                     @ nothing RingArrays.jl:35
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/RingArrays/src/RingArrays.jl:40.
│ Use `mutable struct` instead.
└                                                     @ nothing RingArrays.jl:40
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/VirtualArrays/src/VirtualArrays.jl:11.
│ Use `mutable struct` instead.
└                                                  @ nothing VirtualArrays.jl:11
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/VirtualArrays/src/VirtualArrays.jl:11.
│ Use `mutable struct` instead.
└                                                  @ nothing VirtualArrays.jl:11
┌ Warning: Deprecated syntax `parametric method syntax virtual_cat{T}(expanded_dim::Int, parents::AbstractArray{T}...)` around /home/vagrant/.julia/v0.7/VirtualArrays/src/virtual_cat.jl:5.
│ Use `virtual_cat(expanded_dim::Int, parents::AbstractArray{T}...) where T` instead.
└                                                     @ nothing virtual_cat.jl:5
┌ Warning: Deprecated syntax `parametric method syntax virtual_vcat{T}(parents::AbstractArray{T}...)` around /home/vagrant/.julia/v0.7/VirtualArrays/src/virtual_cat.jl:14.
│ Use `virtual_vcat(parents::AbstractArray{T}...) where T` instead.
└                                                    @ nothing virtual_cat.jl:14
┌ Warning: Deprecated syntax `parametric method syntax virtual_hcat{T}(parents::AbstractArray{T}...)` around /home/vagrant/.julia/v0.7/VirtualArrays/src/virtual_cat.jl:18.
│ Use `virtual_hcat(parents::AbstractArray{T}...) where T` instead.
└                                                    @ nothing virtual_cat.jl:18
┌ Warning: Deprecated syntax `parametric method syntax VirtualArray{T, N}(expanded_dim::Int, parents::AbstractArray{T, N}...)` around /home/vagrant/.julia/v0.7/VirtualArrays/src/VirtualArrays.jl:16.
│ Use `VirtualArray(expanded_dim::Int, parents::AbstractArray{T, N}...) where {T, N}` instead.
└                                                  @ nothing VirtualArrays.jl:16
┌ Warning: Deprecated syntax `parametric method syntax VirtualArray{T, N}(parents::AbstractArray{T, N}...)` around /home/vagrant/.julia/v0.7/VirtualArrays/src/VirtualArrays.jl:20.
│ Use `VirtualArray(parents::AbstractArray{T, N}...) where {T, N}` instead.
└                                                  @ nothing VirtualArrays.jl:20
ERROR: LoadError: LoadError: syntax: too few type parameters specified in "new{...}"
Stacktrace:
 [1] include at ./boot.jl:293 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:521
 [3] _require(::Symbol) at ./loading.jl:453
 [4] require(::Symbol) at ./loading.jl:333
 [5] include at ./boot.jl:293 [inlined]
 [6] include_relative(::Module, ::String) at ./loading.jl:521
 [7] include(::Module, ::String) at ./sysimg.jl:26
 [8] process_options(::Base.JLOptions) at ./client.jl:324
 [9] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/RingArrays/src/RingArrays.jl:10
in expression starting at /home/vagrant/.julia/v0.7/RingArrays/test/runtests.jl:1
┌ Error: ------------------------------------------------------------
│ # Testing failed for RingArrays
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/RingArrays/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:707
│     [3] run(::Cmd) at ./process.jl:669
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:736
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:724
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:763
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:296 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└                                                  @ Base.Pkg.Entry entry.jl:739
[ Info: Removing BaseTestNext v0.2.2               @ Base.Pkg.Entry entry.jl:546
[ Info: Removing FactCheck v0.4.3                  @ Base.Pkg.Entry entry.jl:546
ERROR: RingArrays had test errors

>>> End of log
