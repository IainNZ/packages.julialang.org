>>> 'Pkg.add("PowerLaws")' log
INFO: Cloning cache of PowerLaws from https://github.com/johnybx/PowerLaws.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing Distributions v0.9.0
INFO: Installing PDMats v0.4.1
INFO: Installing PowerLaws v0.0.3
INFO: Installing StatsBase v0.8.1
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of PowerLaws
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PowerLaws")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing PowerLaws
test: discrete powerlaw
WARNING: fminbox{T <: AbstractFloat}(df::DifferentiableFunction,initial_x::Array{T},l::Array{T},u::Array{T}; optimizer=cg,nargs...) is deprecated, use optimize(df,initial_x,l,u,Fminbox(); optimizer=get_optimizer(symbol(optimizer)),nargs...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in #fminbox#64(::Function, ::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 in fminbox(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:49
 in _estimate_xmin(::Array{Int64,1}, ::Dict{Float64,Int64}, ::DataType, ::Array{Int64,1}, ::Int64) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:51
 in #estimate_xmin#7(::Array{Any,1}, ::Int64, ::Function, ::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:87
 in estimate_xmin(::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:77
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 16
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Function, ::Vararg{Function,N}) at ./deprecated.jl:30
 in #fminbox#64(::Function, ::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:52
 in fminbox(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:49
 in _estimate_xmin(::Array{Int64,1}, ::Dict{Float64,Int64}, ::DataType, ::Array{Int64,1}, ::Int64) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:51
 in #estimate_xmin#7(::Array{Any,1}, ::Int64, ::Function, ::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:87
 in estimate_xmin(::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:77
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 16
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Function, ::Vararg{Function,N}) at ./deprecated.jl:30
 in #fminbox#64(::Function, ::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:52
 in fminbox(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:49
 in _estimate_xmin(::Array{Int64,1}, ::Dict{Float64,Int64}, ::DataType, ::Array{Int64,1}, ::Int64) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:51
 in #estimate_xmin#7(::Array{Any,1}, ::Int64, ::Function, ::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:87
 in estimate_xmin(::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:77
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 16
ERROR: LoadError: LoadError: assertion failed: |est[1].α - 1.9527275186009831| <= 1.0e-8
  est[1].α = 1.9501572269094172
  1.9527275186009831 = 1.9527275186009831
  difference = 0.0025702916915659735 > 1.0e-8
 in test_approx_eq(::Float64, ::Float64, ::Float64, ::String, ::String) at ./test.jl:754
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl, in expression starting on line 2
==============================[ ERROR: PowerLaws ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PowerLaws had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
