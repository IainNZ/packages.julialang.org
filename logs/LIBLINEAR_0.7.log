>>> 'Pkg.add("LIBLINEAR")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of LIBLINEAR from https://github.com/innerlee/LIBLINEAR.jl.git
[ Info: Installing LIBLINEAR v0.3.0
[ Info: Building LIBLINEAR
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
g++ -Wall -Wconversion -O3 -fPIC -c -o linear.o linear.cpp
g++ -Wall -Wconversion -O3 -fPIC -c -o tron.o tron.cpp
make -C blas OPTFLAGS='-Wall -Wconversion -O3 -fPIC' CC='cc';
make[1]: Entering directory `/home/vagrant/.julia/v0.7/LIBLINEAR/deps/liblinear-210/blas'
cc -Wall -Wconversion -O3 -fPIC  -c dnrm2.c
cc -Wall -Wconversion -O3 -fPIC  -c daxpy.c
cc -Wall -Wconversion -O3 -fPIC  -c ddot.c
cc -Wall -Wconversion -O3 -fPIC  -c dscal.c
ar rcv blas.a dnrm2.o daxpy.o ddot.o dscal.o   
a - dnrm2.o
a - daxpy.o
a - ddot.o
a - dscal.o
ranlib  blas.a
make[1]: Leaving directory `/home/vagrant/.julia/v0.7/LIBLINEAR/deps/liblinear-210/blas'
if [ "Linux" = "Darwin" ]; then \
		SHARED_LIB_FLAG="-dynamiclib -Wl,-install_name,liblinear.so.3"; \
	else \
		SHARED_LIB_FLAG="-shared -Wl,-soname,liblinear.so.3"; \
	fi; \
	g++ ${SHARED_LIB_FLAG} linear.o tron.o blas/blas.a -o liblinear.so.3
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of LIBLINEAR
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LIBLINEAR")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4956
Commit 14297447f2 (2018-04-26 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    2971918 s       1400 s     237969 s     770356 s         29 s
       #2  3500 MHz     664306 s       6728 s      83648 s    3816858 s          0 s
       
  Memory: 2.939197540283203 GB (688.78515625 MB free)
  Uptime: 46556.0 sec
  Load Avg:  0.95849609375  0.947265625  1.01318359375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - LIBLINEAR                     0.3.0
2 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing LIBLINEAR
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:23.
│ Use `struct` instead.
└ @ nothing LIBLINEAR.jl:23
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:28.
│ Use `struct` instead.
└ @ nothing LIBLINEAR.jl:28
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:36.
│ Use `struct` instead.
└ @ nothing LIBLINEAR.jl:36
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:47.
│ Use `struct` instead.
└ @ nothing LIBLINEAR.jl:47
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:57.
│ Use `mutable struct` instead.
└ @ nothing LIBLINEAR.jl:57
WARNING: importing deprecated binding Base.Void into LIBLINEAR.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:70
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:70
┌ Warning: Deprecated syntax `parametric method syntax grp2idx{T, S <: Real}(::Type{S}, labels::AbstractVector, label_dict::Dict{T, Cint}, reverse_labels::Vector{T})` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:114.
│ Use `grp2idx(#unused#::Type{S}, labels::AbstractVector, label_dict::Dict{T, Cint}, reverse_labels::Vector{T}) where {T, S <: Real}` instead.
└ @ nothing LIBLINEAR.jl:114
┌ Warning: Deprecated syntax `parametric method syntax indices_and_weights{T, U <: Real}(labels::AbstractVector{T}, instances::AbstractMatrix{U}, weights::Union{Dict{T, Float64}, Void} = nothing)` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:133.
│ Use `indices_and_weights(labels::AbstractVector{T}, instances::AbstractMatrix{U}, weights::Union{Dict{T, Float64}, Void} = nothing) where {T, U <: Real}` instead.
└ @ nothing LIBLINEAR.jl:133
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:128
┌ Warning: Deprecated syntax `parametric method syntax instances2nodes{U <: Real}(instances::AbstractMatrix{U})` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:157.
│ Use `instances2nodes(instances::AbstractMatrix{U}) where U <: Real` instead.
└ @ nothing LIBLINEAR.jl:157
┌ Warning: Deprecated syntax `parametric method syntax instances2nodes{U <: Real}(instances::SparseMatrixCSC{U})` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:177.
│ Use `instances2nodes(instances::SparseMatrixCSC{U}) where U <: Real` instead.
└ @ nothing LIBLINEAR.jl:177
WARNING: importing deprecated binding Base.SparseMatrixCSC into LIBLINEAR.
WARNING: Base.SparseMatrixCSC is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:176
┌ Warning: Deprecated syntax `parametric method syntax linear_train{T, U <: Real}(labels::AbstractVector{T}, instances::AbstractMatrix{U}; weights::Union{Dict{T, Float64}, Void} = nothing, solver_type::Cint = L2R_L2LOSS_SVC_DUAL, eps::Real = Inf, C::Real = 1, p::Real = 0.1, init_sol::Ptr{Float64} = convert(Ptr{Float64}, C_NULL), bias::Real = -1, verbose::Bool = false)` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:212.
│ Use `linear_train(labels::AbstractVector{T}, instances::AbstractMatrix{U}; weights::Union{Dict{T, Float64}, Void} = nothing, solver_type::Cint = L2R_L2LOSS_SVC_DUAL, eps::Real = Inf, C::Real = 1, p::Real = 0.1, init_sol::Ptr{Float64} = convert(Ptr{Float64}, C_NULL), bias::Real = -1, verbose::Bool = false) where {T, U <: Real}` instead.
└ @ nothing LIBLINEAR.jl:212
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:199
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:199
┌ Warning: Deprecated syntax `parametric method syntax linear_predict{T, U <: Real}(model::LinearModel{T}, instances::AbstractMatrix{U}; probability_estimates::Bool = false, verbose::Bool = false)` around /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:277.
│ Use `linear_predict(model::LinearModel{T}, instances::AbstractMatrix{U}; probability_estimates::Bool = false, verbose::Bool = false) where {T, U <: Real}` instead.
└ @ nothing LIBLINEAR.jl:277
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:272
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:2
WARNING: Base.readcsv is deprecated: it has been moved to the standard library package `DelimitedFiles`.
Add `using DelimitedFiles` to your imports.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:5
┌ Warning: `readcsv(io; opts...)` is deprecated, use `readdlm(io, ','; opts...)` instead.
│   caller = top-level scope
└ @ Core :0
WARNING: importing deprecated binding Base.Libdl into LIBLINEAR.
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = indices_and_weights at LIBLINEAR.jl:134 [inlined]
└ @ Core LIBLINEAR.jl:134
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = grp2idx(::Type{Float64}, ::Array{Any,1}, ::Dict{Any,Int32}, ::Array{Any,1}) at LIBLINEAR.jl:114
└ @ LIBLINEAR LIBLINEAR.jl:114
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = #linear_train#1(::Nothing, ::Int32, ::Float64, ::Float64, ::Float64, ::Ptr{Float64}, ::Float64, ::Bool, ::typeof(linear_train), ::Array{Any,1}, ::Array{Float64,2}) at LIBLINEAR.jl:237
└ @ LIBLINEAR LIBLINEAR.jl:237
┌ Warning: `Array{T}(m::Int) where T` is deprecated, use `Array{T}(undef, m)` instead.
│   caller = instances2nodes at LIBLINEAR.jl:159 [inlined]
└ @ Core LIBLINEAR.jl:159
┌ Warning: `Array{T}(m::Int, n::Int) where T` is deprecated, use `Array{T}(undef, m, n)` instead.
│   caller = instances2nodes at LIBLINEAR.jl:160 [inlined]
└ @ Core LIBLINEAR.jl:160
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
in get_liblinear at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl
WARNING: Base.Libdl is deprecated, run `using Libdl` instead
  likely near /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
in get_liblinear at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl
ERROR: LoadError: error compiling check_parameter: error compiling get_liblinear: unsupported or misplaced expression "block" in function get_liblinear
Stacktrace:
 [1] #linear_train#1(::Nothing, ::Int32, ::Float64, ::Float64, ::Float64, ::Ptr{Float64}, ::Float64, ::Bool, ::typeof(linear_train), ::Array{Any,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.7/LIBLINEAR/src/LIBLINEAR.jl:247
 [2] (::getfield(LIBLINEAR, Symbol("#kw##linear_train")))(::NamedTuple{(:verbose, :solver_type),Tuple{Bool,Int32}}, ::typeof(linear_train), ::Array{Any,1}, ::Array{Float64,2}) at ./<missing>:0
 [3] top-level scope
 [4] include at ./boot.jl:314 [inlined]
 [5] include_relative(::Module, ::String) at ./loading.jl:1067
 [6] include(::Module, ::String) at ./sysimg.jl:29
 [7] exec_options(::Base.JLOptions) at ./client.jl:327
 [8] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl:9
┌ Error: ------------------------------------------------------------
│ # Testing failed for LIBLINEAR
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/LIBLINEAR/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: LIBLINEAR had test errors

>>> End of log
