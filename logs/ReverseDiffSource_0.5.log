>>> 'Pkg.add("ReverseDiffSource")' log
INFO: Installing ReverseDiffSource v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of ReverseDiffSource
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReverseDiffSource")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ReverseDiffSource
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in reload(::String) at ./loading.jl:308
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/src/tograph.jl, in expression starting on line 22
Running tests:
  * unit_tests.jl *
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in dprefix(::String) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/ReverseDiffSource.jl:20
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl:19 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/test/unit_tests.jl, in expression starting on line 29
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in dprefix(::Symbol) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/ReverseDiffSource.jl:20
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl:19 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/test/unit_tests.jl, in expression starting on line 30
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in newvar(::String) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/ReverseDiffSource.jl:32
 in tocode(::ReverseDiffSource.ExGraph) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/tocode.jl:146
 in zerocode(::Complex{Float64}) at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/unit_tests.jl:37
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl:19 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/test/unit_tests.jl, in expression starting on line 50
Error During Test
  Test threw an exception of type UndefVarError
  Expression: m.e2s(m.streamline(ex)) == "↑=→:a→↑call→:zeros→2↓↓↑for→↑=→:i→↑:→1→2↓↓" * "→↑block→↑=→↑ref→:a→:i↓→:x↓↓↓↑call→:sum→:a↓"
  UndefVarError: TopNode not defined
   in streamline(::Expr) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/frdiff.jl:87
   in streamline(::Expr) at /home/vagrant/.julia/v0.5/ReverseDiffSource/src/frdiff.jl:95 (repeats 2 times)
   in include_from_node1(::String) at ./loading.jl:426
   in macro expansion; at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl:19 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:321
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:219
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl:19 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/test/unit_tests.jl, in expression starting on line 147
while loading /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl, in expression starting on line 17
==========================[ ERROR: ReverseDiffSource ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ReverseDiffSource/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ReverseDiffSource had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
