>>> 'Pkg.add("ManifoldLearning")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of ManifoldLearning from https://github.com/wildart/ManifoldLearning.jl.git
[ Info: Installing DataStructures v0.7.4
[ Info: Installing ManifoldLearning v0.1.0
[ Info: Installing Missings v0.2.9
[ Info: Installing MultivariateStats v0.4.0
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing StatsBase v0.21.0
[ Info: Package database updated

>>> 'Pkg.test("ManifoldLearning")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4922
Commit 23b08c5c5c (2018-04-20 18:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3506 MHz    3573571 s       7218 s     296498 s    1146242 s         79 s
       #2  3506 MHz     952897 s         87 s     120164 s    4644490 s          1 s
       
  Memory: 2.939197540283203 GB (1049.0859375 MB free)
  Uptime: 58625.0 sec
  Load Avg:  1.0029296875  0.9853515625  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - ManifoldLearning              0.1.0
7 additional packages:
 - Compat                        0.63.0
 - DataStructures                0.7.4
 - Missings                      0.2.9
 - MultivariateStats             0.4.0
 - Nullables                     0.0.5
 - SortingAlgorithms             0.2.1
 - StatsBase                     0.21.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing ManifoldLearning
Running tests:
 * utils.jl
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/MultivariateStats/src/MultivariateStats.jl:8
┌ Warning: Deprecated syntax `parametric method syntax fullmean{T}(d::Int, mv::Vector{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/common.jl:23.
│ Use `fullmean(d::Int, mv::Vector{T}) where T` instead.
└ @ nothing common.jl:23
┌ Warning: Deprecated syntax `parametric method syntax preprocess_mean{T <: AbstractFloat}(X::Matrix{T}, m)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/common.jl:25.
│ Use `preprocess_mean(X::Matrix{T}, m) where T <: AbstractFloat` instead.
└ @ nothing common.jl:25
┌ Warning: Deprecated syntax `parametric method syntax extract_kv{T}(fac::Factorization{T}, ord::AbstractVector{Int}, k::Int)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/common.jl:34.
│ Use `extract_kv(fac::Factorization{T}, ord::AbstractVector{Int}, k::Int) where T` instead.
└ @ nothing common.jl:34
WARNING: importing deprecated binding Base.Factorization into MultivariateStats.
WARNING: Base.Factorization is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultivariateStats/src/common.jl:33
┌ Warning: Deprecated syntax `parametric method syntax regularize_symmat!{T <: AbstractFloat}(A::Matrix{T}, lambda::Real)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/common.jl:102.
│ Use `regularize_symmat!(A::Matrix{T}, lambda::Real) where T <: AbstractFloat` instead.
└ @ nothing common.jl:102
┌ Warning: Deprecated syntax `parametric method syntax lrsoltype{T}(::DenseVector{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:13.
│ Use `lrsoltype(#unused#::DenseVector{T}) where T` instead.
└ @ nothing lreg.jl:13
┌ Warning: Deprecated syntax `parametric method syntax lrsoltype{T}(::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:14.
│ Use `lrsoltype(#unused#::DenseMatrix{T}) where T` instead.
└ @ nothing lreg.jl:14
┌ Warning: Deprecated syntax `parametric method syntax _vaug{T}(X::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:16.
│ Use `_vaug(X::DenseMatrix{T}) where T` instead.
└ @ nothing lreg.jl:16
┌ Warning: Deprecated syntax `parametric method syntax _haug{T}(X::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:17.
│ Use `_haug(X::DenseMatrix{T}) where T` instead.
└ @ nothing lreg.jl:17
┌ Warning: Deprecated syntax `parametric method syntax llsq{T <: AbstractFloat}(X::DenseMatrix{T}, Y::DenseVecOrMat{T}; trans::Bool = false, bias::Bool = true)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:24.
│ Use `llsq(X::DenseMatrix{T}, Y::DenseVecOrMat{T}; trans::Bool = false, bias::Bool = true) where T <: AbstractFloat` instead.
└ @ nothing lreg.jl:24
┌ Warning: Deprecated syntax `parametric method syntax ridge{T <: AbstractFloat}(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::Real; trans::Bool = false, bias::Bool = true)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:40.
│ Use `ridge(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::Real; trans::Bool = false, bias::Bool = true) where T <: AbstractFloat` instead.
└ @ nothing lreg.jl:40
┌ Warning: Deprecated syntax `parametric method syntax ridge{T <: AbstractFloat}(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::DenseVector{T}; trans::Bool = false, bias::Bool = true)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:47.
│ Use `ridge(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::DenseVector{T}; trans::Bool = false, bias::Bool = true) where T <: AbstractFloat` instead.
└ @ nothing lreg.jl:47
┌ Warning: Deprecated syntax `parametric method syntax ridge{T <: AbstractFloat}(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::DenseMatrix{T}; trans::Bool = false, bias::Bool = true)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:54.
│ Use `ridge(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::DenseMatrix{T}; trans::Bool = false, bias::Bool = true) where T <: AbstractFloat` instead.
└ @ nothing lreg.jl:54
┌ Warning: Deprecated syntax `parametric method syntax _ridge{T <: AbstractFloat}(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::Union{Real, DenseVecOrMat}, trans::Bool, bias::Bool)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lreg.jl:63.
│ Use `_ridge(X::DenseMatrix{T}, Y::DenseVecOrMat{T}, r::Union{Real, DenseVecOrMat}, trans::Bool, bias::Bool) where T <: AbstractFloat` instead.
└ @ nothing lreg.jl:63
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:24.
│ Use `struct` instead.
└ @ nothing whiten.jl:24
┌ Warning: Deprecated syntax `parametric method syntax cov_whitening{T <: AbstractFloat}(C::Cholesky{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:8.
│ Use `cov_whitening(C::Cholesky{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:8
┌ Warning: Deprecated syntax `parametric method syntax cov_whitening!{T <: AbstractFloat}(C::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:12.
│ Use `cov_whitening!(C::DenseMatrix{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:12
┌ Warning: Deprecated syntax `parametric method syntax cov_whitening{T <: AbstractFloat}(C::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:13.
│ Use `cov_whitening(C::DenseMatrix{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:13
┌ Warning: Deprecated syntax `parametric method syntax cov_whitening!{T <: AbstractFloat}(C::DenseMatrix{T}, regcoef::Real)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:15.
│ Use `cov_whitening!(C::DenseMatrix{T}, regcoef::Real) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:15
┌ Warning: Deprecated syntax `parametric method syntax cov_whitening{T <: AbstractFloat}(C::DenseMatrix{T}, regcoef::Real)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:18.
│ Use `cov_whitening(C::DenseMatrix{T}, regcoef::Real) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:18
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Whitening{T}}){T}(mean::Vector{T}, W::Matrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:28.
│ Use `(::Type{Whitening{T}})(mean::Vector{T}, W::Matrix{T}) where T` instead.
└ @ nothing whiten.jl:28
┌ Warning: Deprecated syntax `parametric method syntax (::Type{Whitening}){T <: AbstractFloat}(mean::Vector{T}, W::Matrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:35.
│ Use `(::Type{Whitening})(mean::Vector{T}, W::Matrix{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:35
┌ Warning: Deprecated syntax `parametric method syntax fit{T <: AbstractFloat}(::Type{Whitening}, X::DenseMatrix{T}; mean = nothing, regcoef::Real = zero(T))` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:47.
│ Use `fit(#s9::Type{Whitening}, X::DenseMatrix{T}; mean = nothing, regcoef::Real = zero(T)) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:47
┌ Warning: Deprecated syntax `parametric method syntax _invsqrtm!{T <: AbstractFloat}(C::Matrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:58.
│ Use `_invsqrtm!(C::Matrix{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:58
┌ Warning: Deprecated syntax `parametric method syntax invsqrtm{T <: AbstractFloat}(C::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/whiten.jl:70.
│ Use `invsqrtm(C::DenseMatrix{T}) where T <: AbstractFloat` instead.
└ @ nothing whiten.jl:70
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:5.
│ Use `mutable struct` instead.
└ @ nothing pca.jl:5
┌ Warning: Deprecated syntax `parametric method syntax PCA{T <: AbstractFloat}(mean::Vector{T}, proj::Matrix{T}, pvars::Vector{T}, tvar::T)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:16.
│ Use `PCA(mean::Vector{T}, proj::Matrix{T}, pvars::Vector{T}, tvar::T) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:16
┌ Warning: Deprecated syntax `parametric method syntax transform{T <: AbstractFloat}(M::PCA{T}, x::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:46.
│ Use `transform(M::PCA{T}, x::AbstractVecOrMat{T}) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:46
┌ Warning: Deprecated syntax `parametric method syntax reconstruct{T <: AbstractFloat}(M::PCA{T}, y::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:47.
│ Use `reconstruct(M::PCA{T}, y::AbstractVecOrMat{T}) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:47
WARNING: importing deprecated binding Base.@sprintf into MultivariateStats.
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:51
┌ Warning: Deprecated syntax `parametric method syntax check_pcaparams{T <: AbstractFloat}(d::Int, mean::Vector{T}, md::Int, pr::AbstractFloat)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:78.
│ Use `check_pcaparams(d::Int, mean::Vector{T}, md::Int, pr::AbstractFloat) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:78
┌ Warning: Deprecated syntax `parametric method syntax choose_pcadim{T <: AbstractFloat}(v::AbstractVector{T}, ord::Vector{Int}, vsum::T, md::Int, pr::AbstractFloat)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:86.
│ Use `choose_pcadim(v::AbstractVector{T}, ord::Vector{Int}, vsum::T, md::Int, pr::AbstractFloat) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:86
┌ Warning: Deprecated syntax `parametric method syntax pcacov{T <: AbstractFloat}(C::DenseMatrix{T}, mean::Vector{T}; maxoutdim::Int = size(C, 1), pratio::AbstractFloat = default_pca_pratio)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:103.
│ Use `pcacov(C::DenseMatrix{T}, mean::Vector{T}; maxoutdim::Int = size(C, 1), pratio::AbstractFloat = default_pca_pratio) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:103
┌ Warning: Deprecated syntax `parametric method syntax pcasvd{T <: AbstractFloat}(Z::DenseMatrix{T}, mean::Vector{T}, tw::Real; maxoutdim::Int = min(size(Z)...), pratio::AbstractFloat = default_pca_pratio)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:117.
│ Use `pcasvd(Z::DenseMatrix{T}, mean::Vector{T}, tw::Real; maxoutdim::Int = min(size(Z)...), pratio::AbstractFloat = default_pca_pratio) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:117
┌ Warning: Deprecated syntax `parametric method syntax fit{T <: AbstractFloat}(::Type{PCA}, X::DenseMatrix{T}; method::Symbol = :auto, maxoutdim::Int = size(X, 1), pratio::AbstractFloat = default_pca_pratio, mean = nothing)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/pca.jl:139.
│ Use `fit(#s9::Type{PCA}, X::DenseMatrix{T}; method::Symbol = :auto, maxoutdim::Int = size(X, 1), pratio::AbstractFloat = default_pca_pratio, mean = nothing) where T <: AbstractFloat` instead.
└ @ nothing pca.jl:139
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MultivariateStats/src/cca.jl:5.
│ Use `mutable struct` instead.
└ @ nothing cca.jl:5
┌ Warning: Deprecated syntax `parametric method syntax xtransform{T <: Real}(M::CCA, X::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cca.jl:53.
│ Use `xtransform(M::CCA, X::AbstractVecOrMat{T}) where T <: Real` instead.
└ @ nothing cca.jl:53
┌ Warning: Deprecated syntax `parametric method syntax ytransform{T <: Real}(M::CCA, Y::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cca.jl:54.
│ Use `ytransform(M::CCA, Y::AbstractVecOrMat{T}) where T <: Real` instead.
└ @ nothing cca.jl:54
┌ Warning: Deprecated syntax `parametric method syntax gram2dmat!{DT}(D::AbstractMatrix{DT}, G::AbstractMatrix)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cmds.jl:7.
│ Use `gram2dmat!(D::AbstractMatrix{DT}, G::AbstractMatrix) where DT` instead.
└ @ nothing cmds.jl:7
┌ Warning: Deprecated syntax `parametric method syntax gram2dmat{T <: Real}(G::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cmds.jl:26.
│ Use `gram2dmat(G::AbstractMatrix{T}) where T <: Real` instead.
└ @ nothing cmds.jl:26
┌ Warning: Deprecated syntax `parametric method syntax dmat2gram!{GT}(G::AbstractMatrix{GT}, D::AbstractMatrix)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cmds.jl:32.
│ Use `dmat2gram!(G::AbstractMatrix{GT}, D::AbstractMatrix) where GT` instead.
└ @ nothing cmds.jl:32
┌ Warning: Deprecated syntax `parametric method syntax dmat2gram{T <: Real}(D::AbstractMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cmds.jl:55.
│ Use `dmat2gram(D::AbstractMatrix{T}) where T <: Real` instead.
└ @ nothing cmds.jl:55
┌ Warning: Deprecated syntax `parametric method syntax classical_mds{T <: Real}(D::AbstractMatrix{T}, p::Int; dowarn::Bool = true)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/cmds.jl:62.
│ Use `classical_mds(D::AbstractMatrix{T}, p::Int; dowarn::Bool = true) where T <: Real` instead.
└ @ nothing cmds.jl:62
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:7.
│ Use `struct` instead.
└ @ nothing lda.jl:7
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:62.
│ Use `mutable struct` instead.
└ @ nothing lda.jl:62
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:117.
│ Use `mutable struct` instead.
└ @ nothing lda.jl:117
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:202.
│ Use `struct` instead.
└ @ nothing lda.jl:202
┌ Warning: Deprecated syntax `1./` at /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:259.
│ Use `1 ./` instead.
└ @ nothing lda.jl:259
┌ Warning: Deprecated syntax `parametric method syntax ldacov{T <: AbstractFloat}(C::DenseMatrix{T}, μp::DenseVector{T}, μn::DenseVector{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:35.
│ Use `ldacov(C::DenseMatrix{T}, μp::DenseVector{T}, μn::DenseVector{T}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:35
┌ Warning: Deprecated syntax `parametric method syntax ldacov{T <: AbstractFloat}(Cp::DenseMatrix{T}, Cn::DenseMatrix{T}, μp::DenseVector{T}, μn::DenseVector{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:45.
│ Use `ldacov(Cp::DenseMatrix{T}, Cn::DenseMatrix{T}, μp::DenseVector{T}, μn::DenseVector{T}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:45
┌ Warning: Deprecated syntax `parametric method syntax fit{T <: AbstractFloat}(::Type{LinearDiscriminant}, Xp::DenseMatrix{T}, Xn::DenseMatrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:50.
│ Use `fit(#unused#::Type{LinearDiscriminant}, Xp::DenseMatrix{T}, Xn::DenseMatrix{T}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:50
┌ Warning: Deprecated syntax `parametric method syntax MulticlassLDAStats{T <: AbstractFloat}(cweights::Vector{T}, mean::Vector{T}, cmeans::Matrix{T}, Sw::Matrix{T}, Sb::Matrix{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:85.
│ Use `MulticlassLDAStats(cweights::Vector{T}, mean::Vector{T}, cmeans::Matrix{T}, Sw::Matrix{T}, Sb::Matrix{T}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:85
┌ Warning: Deprecated syntax `parametric method syntax multiclass_lda_stats{T <: AbstractFloat}(nc::Int, X::DenseMatrix{T}, y::AbstractVector{Int})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:96.
│ Use `multiclass_lda_stats(nc::Int, X::DenseMatrix{T}, y::AbstractVector{Int}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:96
┌ Warning: Deprecated syntax `parametric method syntax transform{T <: AbstractFloat}(M::MulticlassLDA, x::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:135.
│ Use `transform(M::MulticlassLDA, x::AbstractVecOrMat{T}) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:135
┌ Warning: Deprecated syntax `parametric method syntax fit{T <: AbstractFloat}(::Type{MulticlassLDA}, nc::Int, X::DenseMatrix{T}, y::AbstractVector{Int}; method::Symbol = :gevd, outdim::Int = min(size(X, 1), (nc - 1)), regcoef::T = 1e-06)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:142.
│ Use `fit(#s42::Type{MulticlassLDA}, nc::Int, X::DenseMatrix{T}, y::AbstractVector{Int}; method::Symbol = :gevd, outdim::Int = min(size(X, 1), (nc - 1)), regcoef::T = 1e-06) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:142
┌ Warning: Deprecated syntax `parametric method syntax multiclass_lda{T <: AbstractFloat}(S::MulticlassLDAStats{T},; method::Symbol = :gevd, outdim::Int = min(size(X, 1), (S.nclasses - 1)), regcoef::T = 1e-06)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:153.
│ Use `multiclass_lda(S::MulticlassLDAStats{T},; method::Symbol = :gevd, outdim::Int = min(size(X, 1), (S.nclasses - 1)), regcoef::T = 1e-06) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:153
┌ Warning: Deprecated syntax `parametric method syntax mclda_solve{T <: AbstractFloat}(Sb::DenseMatrix{T}, Sw::DenseMatrix{T}, method::Symbol, p::Int, regcoef::T)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:157.
│ Use `mclda_solve(Sb::DenseMatrix{T}, Sw::DenseMatrix{T}, method::Symbol, p::Int, regcoef::T) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:157
┌ Warning: Deprecated syntax `parametric method syntax mclda_solve!{T <: AbstractFloat}(Sb::Matrix{T}, Sw::Matrix{T}, method::Symbol, p::Int, regcoef::T)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:164.
│ Use `mclda_solve!(Sb::Matrix{T}, Sw::Matrix{T}, method::Symbol, p::Int, regcoef::T) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:164
┌ Warning: Deprecated syntax `parametric method syntax _lda_whitening!{T <: AbstractFloat}(C::Matrix{T}, regcoef::T)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:186.
│ Use `_lda_whitening!(C::Matrix{T}, regcoef::T) where T <: AbstractFloat` instead.
└ @ nothing lda.jl:186
┌ Warning: Deprecated syntax `parametric method syntax fit{T, F <: SubspaceLDA}(::Type{F}, X::AbstractMatrix{T}, nc::Int, label::AbstractVector{Int})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:221.
│ Use `fit(#unused#::Type{F}, X::AbstractMatrix{T}, nc::Int, label::AbstractVector{Int}) where {T, F <: SubspaceLDA}` instead.
└ @ nothing lda.jl:221
┌ Warning: Deprecated syntax `parametric method syntax fit{T, F <: SubspaceLDA}(::Type{F}, X::AbstractMatrix{T}, label::AbstractVector{Int}, nc = maximum(label); normalize::Bool = false)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:225.
│ Use `fit(#s42::Type{F}, X::AbstractMatrix{T}, label::AbstractVector{Int}, nc = maximum(label); normalize::Bool = false) where {T, F <: SubspaceLDA}` instead.
└ @ nothing lda.jl:225
┌ Warning: Deprecated syntax `parametric method syntax lda_gsvd{T}(Hb::AbstractMatrix{T}, Hw::AbstractMatrix{T}, cweights::AbstractVector{Int})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:251.
│ Use `lda_gsvd(Hb::AbstractMatrix{T}, Hw::AbstractMatrix{T}, cweights::AbstractVector{Int}) where T` instead.
└ @ nothing lda.jl:251
┌ Warning: Deprecated syntax `parametric method syntax center{T}(X::AbstractMatrix{T}, label::AbstractVector{Int}, nc = maximum(label))` around /home/vagrant/.julia/v0.7/MultivariateStats/src/lda.jl:272.
│ Use `center(X::AbstractMatrix{T}, label::AbstractVector{Int}, nc = maximum(label)) where T` instead.
└ @ nothing lda.jl:272
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/MultivariateStats/src/ica.jl:5.
│ Use `mutable struct` instead.
└ @ nothing ica.jl:5
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/ica.jl:29.
│ Use `struct` instead.
└ @ nothing ica.jl:29
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/ica.jl:36.
│ Use `struct` instead.
└ @ nothing ica.jl:36
WARNING: importing deprecated binding Base.@printf into MultivariateStats.
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultivariateStats/src/ica.jl:59
WARNING: Base.@printf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/MultivariateStats/src/ica.jl:59
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:4.
│ Use `struct` instead.
└ @ nothing ppca.jl:4
┌ Warning: Deprecated syntax `parametric method syntax transform{T <: AbstractFloat}(m::PPCA{T}, x::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:23.
│ Use `transform(m::PPCA{T}, x::AbstractVecOrMat{T}) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:23
┌ Warning: Deprecated syntax `parametric method syntax reconstruct{T <: AbstractFloat}(m::PPCA{T}, z::AbstractVecOrMat{T})` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:30.
│ Use `reconstruct(m::PPCA{T}, z::AbstractVecOrMat{T}) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:30
┌ Warning: Deprecated syntax `parametric method syntax ppcaml{T <: AbstractFloat}(Z::DenseMatrix{T}, mean::Vector{T}; maxoutdim::Int = (size(Z, 1) - 1), tol::Real = 1e-06)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:48.
│ Use `ppcaml(Z::DenseMatrix{T}, mean::Vector{T}; maxoutdim::Int = (size(Z, 1) - 1), tol::Real = 1e-06) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:48
┌ Warning: Deprecated syntax `parametric method syntax ppcaem{T <: AbstractFloat}(S::DenseMatrix{T}, mean::Vector{T}, n::Int; maxoutdim::Int = (size(S, 1) - 1), tol::Real = 1e-06, tot::Integer = 1000)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:81.
│ Use `ppcaem(S::DenseMatrix{T}, mean::Vector{T}, n::Int; maxoutdim::Int = (size(S, 1) - 1), tol::Real = 1e-06, tot::Integer = 1000) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:81
┌ Warning: Deprecated syntax `parametric method syntax bayespca{T <: AbstractFloat}(S::DenseMatrix{T}, mean::Vector{T}, n::Int; maxoutdim::Int = (size(S, 1) - 1), tol::Real = 1e-06, tot::Integer = 1000)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:120.
│ Use `bayespca(S::DenseMatrix{T}, mean::Vector{T}, n::Int; maxoutdim::Int = (size(S, 1) - 1), tol::Real = 1e-06, tot::Integer = 1000) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:120
┌ Warning: Deprecated syntax `parametric method syntax fit{T <: AbstractFloat}(::Type{PPCA}, X::DenseMatrix{T}; method::Symbol = :ml, maxoutdim::Int = (size(X, 1) - 1), mean = nothing, tol::Real = 1e-06, tot::Integer = 1000)` around /home/vagrant/.julia/v0.7/MultivariateStats/src/ppca.jl:171.
│ Use `fit(#s91::Type{PPCA}, X::DenseMatrix{T}; method::Symbol = :ml, maxoutdim::Int = (size(X, 1) - 1), mean = nothing, tol::Real = 1e-06, tot::Integer = 1000) where T <: AbstractFloat` instead.
└ @ nothing ppca.jl:171
WARNING: importing deprecated binding Base.eigvals into ManifoldLearning.
ERROR: LoadError: LoadError: LoadError: LoadError: syntax: extra token "AbstractResult" after end of expression
Stacktrace:
 [1] include at ./boot.jl:314 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1067
 [3] include at ./sysimg.jl:29 [inlined]
 [4] include(::String) at /home/vagrant/.julia/v0.7/ManifoldLearning/src/ManifoldLearning.jl:1
 [5] top-level scope
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] _require(::Base.PkgId) at ./loading.jl:993
 [9] require(::Base.PkgId) at ./loading.jl:874
 [10] require(::Module, ::Symbol) at ./loading.jl:869
 [11] include at ./boot.jl:314 [inlined]
 [12] include_relative(::Module, ::String) at ./loading.jl:1067
 [13] include(::Module, ::String) at ./sysimg.jl:29
 [14] include(::String) at ./sysimg.jl:68
 [15] top-level scope at ./<missing>:13
 [16] include at ./boot.jl:314 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1067
 [18] include(::Module, ::String) at ./sysimg.jl:29
 [19] exec_options(::Base.JLOptions) at ./client.jl:327
 [20] _start() at ./client.jl:455
in expression starting at /home/vagrant/.julia/v0.7/ManifoldLearning/src/types.jl:1
in expression starting at /home/vagrant/.julia/v0.7/ManifoldLearning/src/ManifoldLearning.jl:31
in expression starting at /home/vagrant/.julia/v0.7/ManifoldLearning/test/utils.jl:2
in expression starting at /home/vagrant/.julia/v0.7/ManifoldLearning/test/runtests.jl:11
┌ Error: ------------------------------------------------------------
│ # Testing failed for ManifoldLearning
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/ManifoldLearning/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#533(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:455
└ @ Pkg.Entry entry.jl:732
ERROR: ManifoldLearning had test errors

>>> End of log
