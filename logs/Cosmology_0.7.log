>>> 'Pkg.add("Cosmology")' log
[ Info: Cloning cache of Cosmology from https://github.com/JuliaAstro/Cosmology.jl.git
[ Info: Installing Cosmology v0.3.0
[ Info: Installing DataStructures v0.7.4
[ Info: Installing QuadGK v0.2.0
[ Info: Package database updated

>>> 'Pkg.test("Cosmology")' log
Julia Version 0.7.0-DEV.3487
Commit 808e828bcb (2018-01-20 20:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    2004079 s        100 s     104756 s     423763 s         13 s
       #2  3499 MHz     343954 s       8060 s      35073 s    2576101 s          0 s
       
  Memory: 2.93927001953125 GB (1162.31640625 MB free)
  Uptime: 30029.0 sec
  Load Avg:  0.87158203125  0.95654296875  0.951171875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - Cosmology                     0.3.0
 - JSON                          0.16.4
4 additional packages:
 - Compat                        0.48.0
 - DataStructures                0.7.4
 - Nullables                     0.0.3
 - QuadGK                        0.2.0
[ Info: Testing Cosmology
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/test/../src/Cosmology.jl:25.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:25
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/test/../src/Cosmology.jl:37.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:37
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/test/../src/Cosmology.jl:49.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:49
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/test/../src/Cosmology.jl:69.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:69
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/src/Cosmology.jl:25.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:25
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/src/Cosmology.jl:37.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:37
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/src/Cosmology.jl:49.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:49
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/Cosmology/src/Cosmology.jl:69.
│ Use `struct` instead.
└ @ nothing Cosmology.jl:69
WARNING: using Cosmology.Cosmology in module Main conflicts with an existing identifier.
ERROR: LoadError: importing Cosmology into Main conflicts with an existing identifier
Stacktrace:
 [1] include at ./boot.jl:292 [inlined]
 [2] include_relative(::Module, ::String) at ./loading.jl:1011
 [3] include(::Module, ::String) at ./sysimg.jl:26
 [4] process_options(::Base.JLOptions) at ./client.jl:324
 [5] _start() at ./client.jl:375
in expression starting at /home/vagrant/.julia/v0.7/Cosmology/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for Cosmology
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/Cosmology/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:694
│     [3] run(::Cmd) at ./process.jl:656
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:728
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##91#94")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#90(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:716
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#98(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:755
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:301
│     [20] _start() at ./client.jl:375
└ @ Base.Pkg.Entry entry.jl:731
ERROR: Cosmology had test errors

>>> End of log
