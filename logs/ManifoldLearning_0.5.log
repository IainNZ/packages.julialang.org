>>> 'Pkg.add("ManifoldLearning")' log
INFO: Cloning cache of ManifoldLearning from https://github.com/wildart/ManifoldLearning.jl.git
INFO: Cloning cache of MultivariateStats from https://github.com/JuliaStats/MultivariateStats.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing ManifoldLearning v0.1.0
INFO: Installing MultivariateStats v0.2.2
INFO: Installing StatsBase v0.8.1
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated

>>> 'Pkg.test("ManifoldLearning")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ManifoldLearning
Running tests:
 * utils.jl
WARNING: Method definition dump(Base.IO, ManifoldLearning.Isomap) in module ManifoldLearning at /home/vagrant/.julia/v0.5/ManifoldLearning/src/isomap.jl:29 overwritten at /home/vagrant/.julia/v0.5/ManifoldLearning/src/lem.jl:32.
 * isomap.jl
WARNING: int(a::AbstractArray) is deprecated, use round(Int64,a) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in int(::Array{Float64,2}) at ./deprecated.jl:267
 in swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.5/ManifoldLearning/src/utils.jl:150
 in swiss_roll() at /home/vagrant/.julia/v0.5/ManifoldLearning/src/utils.jl:147
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ManifoldLearning/test/runtests.jl:13 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ManifoldLearning/test/isomap.jl, in expression starting on line 7
 * lle.jl
WARNING: K>D: regularization will be used
ERROR: LoadError: LoadError: DimensionMismatch("dimensions must match")
 in promote_shape(::Tuple{Int64,Int64}, ::Tuple{Int64}) at ./operators.jl:304
 in -(::SparseVector{Float64,Int64}, ::Array{Float64,2}) at ./arraymath.jl:76
 in #transform#6(::Int64, ::Int64, ::Function, ::Type{ManifoldLearning.LLE}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.5/ManifoldLearning/src/lle.jl:82
 in (::MultivariateStats.#kw##transform)(::Array{Any,1}, ::MultivariateStats.#transform, ::Type{ManifoldLearning.LLE}, ::Array{Float64,2}) at ./null:0
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/ManifoldLearning/test/runtests.jl:13 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ManifoldLearning/test/lle.jl, in expression starting on line 8
while loading /home/vagrant/.julia/v0.5/ManifoldLearning/test/runtests.jl, in expression starting on line 11
==========================[ ERROR: ManifoldLearning ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ManifoldLearning/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ManifoldLearning had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
