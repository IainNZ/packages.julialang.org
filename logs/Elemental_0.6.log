>>> 'Pkg.add("Elemental")' log
INFO: Cloning cache of Elemental from https://github.com/JuliaParallel/Elemental.jl.git
INFO: Installing DistributedArrays v0.3.0
INFO: Installing Elemental v0.1.2
INFO: Installing Primes v0.1.3
INFO: Building Elemental
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find PythonInterp (missing:  PYTHON_EXECUTABLE) 
-- Appending /home/vagrant/.julia/v0.6/Elemental/deps/src/Elemental/include for Elemental's source includes
-- Appending /home/vagrant/.julia/v0.6/Elemental/deps/builds/include for Elemental's binary includes
CMake Warning at CMakeLists.txt:250 (message):
  Build mode not specified, defaulting to Release build.


-- The Fortran compiler identification is GNU 4.8.4
-- Check for working Fortran compiler: /usr/bin/gfortran
-- Check for working Fortran compiler: /usr/bin/gfortran  -- works
-- Detecting Fortran compiler ABI info
-- Detecting Fortran compiler ABI info - done
-- Checking whether /usr/bin/gfortran supports Fortran 90
-- Checking whether /usr/bin/gfortran supports Fortran 90 -- yes
-- Detecting Fortran/C Interface
-- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling
-- Verifying Fortran/CXX Compiler Compatibility
-- Verifying Fortran/CXX Compiler Compatibility - Success
-- Performing Test _HAS_CXX11_FLAG
-- Performing Test _HAS_CXX11_FLAG - Success
-- Checking C++ support for "auto"
-- Checking C++ support for "auto": works
-- Checking C++ support for "class_override_final"
-- Checking C++ support for "class_override_final": works
-- Checking C++ support for "constexpr"
-- Checking C++ support for "constexpr": works
-- Checking C++ support for "cstdint_header"
-- Checking C++ support for "cstdint_header": works
-- Checking C++ support for "decltype"
-- Checking C++ support for "decltype": works
-- Checking C++ support for "defaulted_functions"
-- Checking C++ support for "defaulted_functions": works
-- Checking C++ support for "delegating_constructors"
-- Checking C++ support for "delegating_constructors": works
-- Checking C++ support for "deleted_functions"
-- Checking C++ support for "deleted_functions": works
-- Checking C++ support for "func_identifier"
-- Checking C++ support for "func_identifier": works
-- Checking C++ support for "initializer_list"
-- Checking C++ support for "initializer_list": works
-- Checking C++ support for "lambda"
-- Checking C++ support for "lambda": works
-- Checking C++ support for "long_long"
-- Checking C++ support for "long_long": works
-- Checking C++ support for "nullptr"
-- Checking C++ support for "nullptr": works
-- Checking C++ support for "rvalue_references"
-- Checking C++ support for "rvalue_references": works
-- Checking C++ support for "sizeof_member"
-- Checking C++ support for "sizeof_member": works
-- Checking C++ support for "static_assert"
-- Checking C++ support for "static_assert": works
-- Checking C++ support for "variadic_templates"
-- Checking C++ support for "variadic_templates": works
-- Found CXXFeatures: TRUE   
-- CXX11_COMPILER_FLAGS=-std=gnu++11
-- Performing Test EL_HAVE_TEMPLATE_ALIAS
-- Performing Test EL_HAVE_TEMPLATE_ALIAS - Success
-- Performing Test EL_HAVE_STEADYCLOCK
-- Performing Test EL_HAVE_STEADYCLOCK - Success
-- Performing Test EL_HAVE_NOEXCEPT
-- Performing Test EL_HAVE_NOEXCEPT - Success
-- Performing Test EL_HAVE_NORMAL_DIST
-- Performing Test EL_HAVE_NORMAL_DIST - Success
-- Performing Test EL_HAVE_UNIFORM_INT_DIST
-- Performing Test EL_HAVE_UNIFORM_INT_DIST - Success
-- Performing Test EL_HAVE_UNIFORM_REAL_DIST
-- Performing Test EL_HAVE_UNIFORM_REAL_DIST - Success
-- Performing Test HAVE___restrict__
-- Performing Test HAVE___restrict__ - Success
-- Performing Test HAVE___restrict
-- Performing Test HAVE___restrict - Success
-- Performing Test HAVE_restrict
-- Performing Test HAVE_restrict - Failed
-- Using __restrict__ keyword.
-- Found MPI_C: /usr/lib/libmpi.so;/usr/lib/x86_64-linux-gnu/libdl.so;/usr/lib/x86_64-linux-gnu/libhwloc.so  
-- Found MPI_CXX: /usr/lib/libmpi_cxx.so;/usr/lib/libmpi.so;/usr/lib/x86_64-linux-gnu/libdl.so;/usr/lib/x86_64-linux-gnu/libhwloc.so  
-- Found MPI_Fortran: /usr/lib/libmpi_f90.so;/usr/lib/libmpi_f77.so;/usr/lib/libmpi.so;/usr/lib/x86_64-linux-gnu/libdl.so;/usr/lib/x86_64-linux-gnu/libhwloc.so  
-- Performing Test EL_HAVE_MPI_REDUCE_SCATTER
-- Performing Test EL_HAVE_MPI_REDUCE_SCATTER - Success
-- Will parse MPI header /usr/lib/openmpi/include/mpi.h
CMake Error at cmake/detect/MPI.cmake:88 (message):
  Detected Open MPI version 1.6.5, but known bugs in version 1.6.5 of Open
  MPI have led Elemental to require at least version 1.8.1
Call Stack (most recent call first):
  CMakeLists.txt:326 (include)


-- Configuring incomplete, errors occurred!
See also "/home/vagrant/.julia/v0.6/Elemental/deps/builds/CMakeFiles/CMakeOutput.log".
See also "/home/vagrant/.julia/v0.6/Elemental/deps/builds/CMakeFiles/CMakeError.log".
==============================[ ERROR: Elemental ]==============================

LoadError: failed process: Process(`cmake -D CMAKE_INSTALL_PREFIX=/home/vagrant/.julia/v0.6/Elemental/deps/usr -D INSTALL_PYTHON_PACKAGE=OFF -D PYTHON_EXECUTABLE= -D PYTHON_SITE_PACKAGES= -D EL_USE_64BIT_INTS=ON -D EL_USE_64BIT_BLAS_INTS=ON -D MATH_LIBS=/home/vagrant/julia/bin/../lib/julia/libopenblas64_.so -D EL_BLAS_SUFFIX=_64_ -D EL_LAPACK_SUFFIX=_64_ -D CMAKE_INSTALL_RPATH=/home/vagrant/.julia/v0.6/Elemental/deps/usr/lib /home/vagrant/.julia/v0.6/Elemental/deps/src/Elemental`, ProcessExited(1)) [1]
while loading /home/vagrant/.julia/v0.6/Elemental/deps/build.jl, in expression starting on line 56

================================================================================

================================[ BUILD ERRORS ]================================

WARNING: Elemental had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("Elemental")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Elemental
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Elemental")' log
Package was unable to be tested.

>>> End of log
