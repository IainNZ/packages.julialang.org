>>> 'Pkg.add("LibCloud")' log
INFO: Cloning cache of LibCloud from https://github.com/JuliaCloud/LibCloud.jl.git
INFO: Installing Conda v0.7.1
INFO: Installing LibCloud v0.0.2
INFO: Installing MacroTools v0.4.0
INFO: Installing PyCall v1.15.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Solving environment: ...working... done
openblas 0.2.20           |   0% openblas 0.2.20           |   0% openblas 0.2.201          |   1% openblas 0.2.204          |   5% openblas 0.2.20#3         |  13% openblas 0.2.20##8        |  29% openblas 0.2.20###8       |  39% openblas 0.2.20####7      |  47% openblas 0.2.20#######5   |  75% openblas 0.2.20#########5 |  95% openblas 0.2.20########## | 100% 
numpy 1.14.2           |   0% numpy 1.14.2           |   0% numpy 1.14.24          |   5% numpy 1.14.2#6         |  16% numpy 1.14.2##8        |  28% numpy 1.14.2####       |  40% numpy 1.14.2#####2     |  52% numpy 1.14.2######4    |  65% numpy 1.14.2#######5   |  75% numpy 1.14.2########6  |  86% numpy 1.14.2#########4 |  94% numpy 1.14.2########## | 100% 
libgfortran 3.0.0           |   0% libgfortran 3.0.0#######5   |  75% libgfortran 3.0.0########## | 100% 
blas 1.1           |   0% blas 1.1#######5   |  75% blas 1.1########## | 100% 

## Package Plan ##

  environment location: /home/vagrant/.julia/v0.6/Conda/deps/usr

  added / updated specs: 
    - numpy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    openblas-0.2.20            |                7        17.0 MB  conda-forge
    numpy-1.14.2               |py27_blas_openblas_200         8.7 MB  conda-forge
    libgfortran-3.0.0          |                1         281 KB
    blas-1.1                   |         openblas           1 KB  conda-forge
    ------------------------------------------------------------
                                           Total:        25.9 MB

The following NEW packages will be INSTALLED:

    blas:        1.1-openblas          conda-forge
    libgfortran: 3.0.0-1                          
    openblas:    0.2.20-7              conda-forge

The following packages will be UPDATED:

    numpy:       1.14.2-py27hdbf6ddf_1             --> 1.14.2-py27_blas_openblas_200 conda-forge [blas_openblas]


Downloading and Extracting Packages
Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LibCloud
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LibCloud")' log
Julia Version 0.6.2
Commit d386e40c17 (2017-12-13 18:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
Memory: 2.939197540283203 GB (881.3984375 MB free)
Uptime: 53077.0 sec
Load Avg:  0.96337890625  1.05078125  1.05810546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3249827 s       3880 s     221165 s    1064570 s         41 s
#2  3500 MHz     787557 s       3067 s      92314 s    4331875 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.17.2
 - LibCloud                      0.0.2
20 additional packages:
 - BinDeps                       0.8.7
 - Cairo                         0.5.1
 - ColorTypes                    0.6.7
 - Colors                        0.8.2
 - Compat                        0.63.0
 - Conda                         0.7.1
 - FixedPointNumbers             0.4.6
 - Graphics                      0.3.0
 - Gtk                           0.13.1
 - MacroTools                    0.4.0
 - NaNMath                       0.3.1
 - NodeJS                        0.4.0
 - Nullables                     0.0.5
 - PyCall                        1.15.0
 - Reexport                      0.1.0
 - Requires                      0.4.3
 - Rsvg                          0.2.0
 - SHA                           0.5.6
 - URIParser                     0.3.1
 - VegaLite                      0.1.0              ecb31725 (dirty)
INFO: Testing LibCloud
ERROR: LoadError: LoadError: InitError: PyError (ccall(@pysym(:PyImport_ImportModule), PyPtr, (Cstring,), name)

The Python package libcloud.storage.types could not be found by pyimport. Usually this means
that you did not install libcloud.storage.types in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the libcloud.storage.types module, you can
use `pyimport_conda("libcloud.storage.types", PKG)`, where PKG is the Anaconda
package the contains the module libcloud.storage.types, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <type 'exceptions.ImportError'>
ImportError('No module named libcloud.storage.types',)

Stacktrace:
 [1] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:56 [inlined]
 [2] pyerr_check at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:61 [inlined]
 [3] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:81 [inlined]
 [4] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:374
 [5] __init__() at /home/vagrant/.julia/v0.6/LibCloud/src/storage.jl:91
 [6] include_from_node1(::String) at ./loading.jl:576
during initialization of module Storage
while loading /home/vagrant/.julia/v0.6/LibCloud/src/LibCloud.jl, in expression starting on line 10
while loading /home/vagrant/.julia/v0.6/LibCloud/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: LibCloud ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/LibCloud/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: LibCloud had test errors

>>> End of log
