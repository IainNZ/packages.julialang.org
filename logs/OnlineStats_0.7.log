>>> 'Pkg.add("OnlineStats")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Installing DataStructures v0.8.2
[ Info: Installing LearnBase v0.1.6
[ Info: Installing LossFunctions v0.2.0
[ Info: Installing Missings v0.2.9
[ Info: Installing NamedTuples v4.0.2
[ Info: Installing OnlineStats v0.17.3
[ Info: Installing OnlineStatsBase v0.7.0
[ Info: Installing PenaltyFunctions v0.0.2
[ Info: Installing RecipesBase v0.3.1
[ Info: Installing Reexport v0.1.0
[ Info: Installing SortingAlgorithms v0.2.1
[ Info: Installing StatsBase v0.22.0
[ Info: Installing SweepOperator v0.1.0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of OnlineStats
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("OnlineStats")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.5095
Commit 2a21849b10 (2018-05-12 22:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3499 MHz    6339617 s       6856 s     428179 s    1867504 s        116 s
       #2  3499 MHz    1729496 s       1725 s     166452 s    7982165 s          4 s
       
  Memory: 2.939197540283203 GB (863.05078125 MB free)
  Uptime: 101109.0 sec
  Load Avg:  1.02783203125  1.001953125  0.9599609375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.0 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - OnlineStats                   0.17.3
14 additional packages:
 - Compat                        0.64.0
 - DataStructures                0.8.2
 - LearnBase                     0.1.6
 - LossFunctions                 0.2.0
 - Missings                      0.2.9
 - NamedTuples                   4.0.2
 - Nullables                     0.0.5
 - OnlineStatsBase               0.7.0
 - PenaltyFunctions              0.0.2
 - RecipesBase                   0.3.1
 - Reexport                      0.1.0
 - SortingAlgorithms             0.2.1
 - StatsBase                     0.22.0
 - SweepOperator                 0.1.0
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Computing test dependencies for OnlineStats...
[ Info: Installing ColorTypes v0.6.7
[ Info: Installing Colors v0.8.2
[ Info: Installing Contour v0.4.0
[ Info: Installing FixedPointNumbers v0.4.6
[ Info: Installing GR v0.31.0
[ Info: Installing Measures v0.2.0
[ Info: Installing NaNMath v0.3.1
[ Info: Installing PlotThemes v0.2.0
[ Info: Installing PlotUtils v0.4.4
[ Info: Installing Plots v0.17.0
[ Info: Installing Requires v0.4.3
[ Info: Installing Showoff v0.1.1
[ Info: Installing StaticArrays v0.7.0
[ Info: Building GR
WARNING: importing deprecated binding Base.Pkg into __anon__.
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/GR/deps/build.jl:51
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
  likely near /home/vagrant/.julia/v0.7/GR/deps/build.jl:51
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = top-level scope at build.jl:54
└ @ Core build.jl:54
INFO: Downloading pre-compiled GR 0.31.0 Ubuntu binary
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0 38.8M    0  304k    0     0   163k      0  0:04:03  0:00:01  0:04:02  163k  4 38.8M    4 1664k    0     0   598k      0  0:01:06  0:00:02  0:01:04  598k 17 38.8M   17 7088k    0     0  1864k      0  0:00:21  0:00:03  0:00:18 1864k 55 38.8M   55 21.4M    0     0  4579k      0  0:00:08  0:00:04  0:00:04 4579k 80 38.8M   80 31.1M    0     0  5043k      0  0:00:07  0:00:06  0:00:01 5810k 92 38.8M   92 35.8M    0     0  5018k      0  0:00:07  0:00:07 --:--:-- 6680k100 38.8M  100 38.8M    0     0  5405k      0  0:00:07  0:00:07 --:--:-- 8331k
[ Info: Building Plots
[ Info: Testing OnlineStats
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding LearnBase.issymmetric into LossFunctions.
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:69
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `value(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s2::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `value!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s1::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax value!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `value!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax value{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax value!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `value!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax value{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `value(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax value!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `value!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `value!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `value(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `value!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `value!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `value!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax value{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `value!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax value{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `value(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax value!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `value!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `deriv!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax deriv!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `deriv!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `deriv!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax deriv{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `deriv(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `deriv!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:103.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:103
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:114.
│ Use `deriv2!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray, output::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:114
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:126.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:126
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{Q, M, T, N}(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:140.
│ Use `deriv2!(buffer::AbstractArray, loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.None) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:140
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:153.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:153
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, M, T, N}(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:174.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, M}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {Q, M, T, N}` instead.
└ @ nothing supervised.jl:174
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:197.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:197
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:216.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:216
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:237.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:237
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:250.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:250
┌ Warning: Deprecated syntax `parametric method syntax deriv2{Q, T, N, O}(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:271.
│ Use `deriv2(loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {Q, T, N, O}` instead.
└ @ nothing supervised.jl:271
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, Q, T, N, O}(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:284.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::SupervisedLoss, target::AbstractArray{Q, N}, output::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, Q, T, N, O}` instead.
└ @ nothing supervised.jl:284
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv2!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv2!(buffer::AbstractArray, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv2(loss::MarginLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::MarginLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:321.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s24::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:321
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, ::ObsDim.Last = ObsDim.Last())` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:331.
│ Use `deriv2!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AverageMode, #s23::ObsDim.Last = ObsDim.Last()) where {T, N}` instead.
└ @ nothing supervised.jl:331
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:342.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:342
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{T, N}(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.None)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:352.
│ Use `deriv2!(buffer::AbstractArray, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.None) where {T, N}` instead.
└ @ nothing supervised.jl:352
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:364.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean) where {T, N}` instead.
└ @ nothing supervised.jl:364
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N}(loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:374.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum) where {T, N}` instead.
└ @ nothing supervised.jl:374
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:383.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedMean, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:399.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.WeightedSum, #unused#::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:399
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:417.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Mean, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:417
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Mean, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:429.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Mean, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:429
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, N, O}(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:447.
│ Use `deriv2(loss::DistanceLoss, numbers::AbstractArray{T, N}, avg::AvgMode.Sum, obsdim::ObsDim.Constant{O}) where {T, N, O}` instead.
└ @ nothing supervised.jl:447
┌ Warning: Deprecated syntax `parametric method syntax deriv2!{B, T, N, O}(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, ::AvgMode.Sum, ::ObsDim.Constant{O})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:459.
│ Use `deriv2!(buffer::AbstractVector{B}, loss::DistanceLoss, numbers::AbstractArray{T, N}, #unused#::AvgMode.Sum, #unused#::ObsDim.Constant{O}) where {B, T, N, O}` instead.
└ @ nothing supervised.jl:459
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/supervised.jl:513
WARNING: importing deprecated binding Base.AbstractSparseArray into LossFunctions.
WARNING: Base.AbstractSparseArray is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/sparse.jl:8
┌ Warning: Deprecated syntax `parametric method syntax value!{T, N, Q, Ti, M}(buffer::AbstractArray, loss::MarginLoss, target::AbstractSparseArray{Q, Ti, M}, output::AbstractArray{T, N})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/sparse.jl:20.
│ Use `value!(buffer::AbstractArray, loss::MarginLoss, target::AbstractSparseArray{Q, Ti, M}, output::AbstractArray{T, N}) where {T, N, Q, Ti, M}` instead.
└ @ nothing sparse.jl:20
WARNING: Base.AbstractSparseArray is deprecated, run `using SparseArrays` to load sparse array functionality
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/sparse.jl:14
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:10.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:10
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:69.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:69
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:112.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:112
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:136.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:136
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:193.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:193
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:276.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:276
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:341.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:341
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:408.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:408
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:469.
│ Use `@doc doc" "` instead.
└ @ nothing distance.jl:469
WARNING: importing deprecated binding Base.@doc_str into LossFunctions.
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:1
┌ Warning: Deprecated syntax `parametric method syntax value{P}(loss::LPDistLoss{P}, difference::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:14.
│ Use `value(loss::LPDistLoss{P}, difference::Number) where P` instead.
└ @ nothing distance.jl:14
┌ Warning: Deprecated syntax `parametric method syntax deriv{P, T <: Number}(loss::LPDistLoss{P}, difference::T)::promote_type(typeof(P), T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:16.
│ Use `deriv(loss::LPDistLoss{P}, difference::T) where {P, T <: Number}` instead.
└ @ nothing distance.jl:16
┌ Warning: Deprecated syntax `parametric method syntax deriv2{P, T <: Number}(loss::LPDistLoss{P}, difference::T)::promote_type(typeof(P), T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:23.
│ Use `deriv2(loss::LPDistLoss{P}, difference::T) where {P, T <: Number}` instead.
└ @ nothing distance.jl:23
┌ Warning: Deprecated syntax `parametric method syntax isminimizable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:30.
│ Use `isminimizable(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:30
┌ Warning: Deprecated syntax `parametric method syntax issymmetric{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:31.
│ Use `issymmetric(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:31
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:31
┌ Warning: Deprecated syntax `parametric method syntax isdifferentiable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:32.
│ Use `isdifferentiable(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:32
┌ Warning: Deprecated syntax `parametric method syntax isdifferentiable{P}(::LPDistLoss{P}, at)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:33.
│ Use `isdifferentiable(#unused#::LPDistLoss{P}, at) where P` instead.
└ @ nothing distance.jl:33
┌ Warning: Deprecated syntax `parametric method syntax istwicedifferentiable{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:34.
│ Use `istwicedifferentiable(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:34
┌ Warning: Deprecated syntax `parametric method syntax istwicedifferentiable{P}(::LPDistLoss{P}, at)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:35.
│ Use `istwicedifferentiable(#unused#::LPDistLoss{P}, at) where P` instead.
└ @ nothing distance.jl:35
┌ Warning: Deprecated syntax `parametric method syntax islipschitzcont{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:36.
│ Use `islipschitzcont(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:36
┌ Warning: Deprecated syntax `parametric method syntax islocallylipschitzcont{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:37.
│ Use `islocallylipschitzcont(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:37
┌ Warning: Deprecated syntax `parametric method syntax isconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:38.
│ Use `isconvex(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:38
┌ Warning: Deprecated syntax `parametric method syntax isstrictlyconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:39.
│ Use `isstrictlyconvex(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:39
┌ Warning: Deprecated syntax `parametric method syntax isstronglyconvex{P}(::LPDistLoss{P})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:40.
│ Use `isstronglyconvex(#unused#::LPDistLoss{P}) where P` instead.
└ @ nothing distance.jl:40
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:44
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L1DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:73.
│ Use `deriv(loss::L1DistLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:73
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L1DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:74.
│ Use `deriv2(loss::L1DistLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:74
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:87
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:115.
│ Use `deriv(loss::L2DistLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:115
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2DistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:116.
│ Use `deriv2(loss::L2DistLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:116
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:129
┌ Warning: Deprecated syntax `parametric method syntax (::Type{PeriodicLoss{T}}){T}(circ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:139.
│ Use `(::Type{PeriodicLoss{T}})(circ::T) where T` instead.
└ @ nothing distance.jl:139
┌ Warning: Deprecated syntax `parametric method syntax PeriodicLoss{T <: AbstractFloat}(circ::T = 1.0)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:143.
│ Use `PeriodicLoss(circ::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing distance.jl:143
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:146.
│ Use `value(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:146
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:147.
│ Use `deriv(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:147
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:148.
│ Use `deriv2(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:148
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::PeriodicLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:150.
│ Use `value_deriv(loss::PeriodicLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:150
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:166
┌ Warning: Deprecated syntax `parametric method syntax (::Type{HuberLoss{T}}){T}(d::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:196.
│ Use `(::Type{HuberLoss{T}})(d::T) where T` instead.
└ @ nothing distance.jl:196
┌ Warning: Deprecated syntax `parametric method syntax HuberLoss{T <: AbstractFloat}(d::T = 1.0)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:200.
│ Use `HuberLoss(d::T = 1.0) where T <: AbstractFloat` instead.
└ @ nothing distance.jl:200
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:204.
│ Use `value(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:204
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:213.
│ Use `deriv(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:213
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:221.
│ Use `deriv2(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:221
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T1, T2 <: Number}(loss::HuberLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:225.
│ Use `value_deriv(loss::HuberLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:225
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:245
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:249
┌ Warning: Deprecated syntax `parametric method syntax (::Type{L1EpsilonInsLoss{T}}){T}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:280.
│ Use `(::Type{L1EpsilonInsLoss{T}})(ε::T) where T` instead.
└ @ nothing distance.jl:280
┌ Warning: Deprecated syntax `parametric method syntax L1EpsilonInsLoss{T <: AbstractFloat}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:285.
│ Use `L1EpsilonInsLoss(ε::T) where T <: AbstractFloat` instead.
└ @ nothing distance.jl:285
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:289.
│ Use `value(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:289
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:293.
│ Use `deriv(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:293
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:296.
│ Use `deriv2(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:296
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T1, T2 <: Number}(loss::L1EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:298.
│ Use `value_deriv(loss::L1EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:298
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:303
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:315
┌ Warning: Deprecated syntax `parametric method syntax (::Type{L2EpsilonInsLoss{T}}){T}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:345.
│ Use `(::Type{L2EpsilonInsLoss{T}})(ε::T) where T` instead.
└ @ nothing distance.jl:345
┌ Warning: Deprecated syntax `parametric method syntax L2EpsilonInsLoss{T <: AbstractFloat}(ε::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:349.
│ Use `L2EpsilonInsLoss(ε::T) where T <: AbstractFloat` instead.
└ @ nothing distance.jl:349
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:353.
│ Use `value(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:353
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:357.
│ Use `deriv(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:357
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(loss::L2EpsilonInsLoss{T1}, difference::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:362.
│ Use `deriv2(loss::L2EpsilonInsLoss{T1}, difference::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:362
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T}(loss::L2EpsilonInsLoss{T}, difference::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:366.
│ Use `value_deriv(loss::L2EpsilonInsLoss{T}, difference::Number) where T` instead.
└ @ nothing distance.jl:366
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:371
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:383
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::LogitDistLoss, difference::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:416.
│ Use `deriv(loss::LogitDistLoss, difference::T) where T <: Number` instead.
└ @ nothing distance.jl:416
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:430
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:442
┌ Warning: Deprecated syntax `parametric method syntax value{T1, T2 <: Number}(loss::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:476.
│ Use `value(loss::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:476
┌ Warning: Deprecated syntax `parametric method syntax deriv{T1, T2 <: Number}(loss::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:480.
│ Use `deriv(loss::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:480
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T1, T2 <: Number}(::QuantileLoss{T1}, diff::T2)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:483.
│ Use `deriv2(#unused#::QuantileLoss{T1}, diff::T2) where {T1, T2 <: Number}` instead.
└ @ nothing distance.jl:483
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/distance.jl:485
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:36.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:36
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:85.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:85
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:129.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:129
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:174.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:174
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:221.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:221
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:267.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:267
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:334.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:334
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:389.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:389
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:436.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:436
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:483.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:483
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:530.
│ Use `@doc doc" "` instead.
└ @ nothing margin.jl:530
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:7
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:41.
│ Use `value(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:41
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:42.
│ Use `deriv(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:42
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:43.
│ Use `deriv2(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:43
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::ZeroOneLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:44.
│ Use `value_deriv(loss::ZeroOneLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:44
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:59
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:87.
│ Use `value(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:87
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:88.
│ Use `deriv(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:88
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:89.
│ Use `deriv2(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:89
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::PerceptronLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:90.
│ Use `value_deriv(loss::PerceptronLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:90
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:104
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:148
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:177.
│ Use `value(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:177
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:178.
│ Use `deriv(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:178
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:179.
│ Use `deriv2(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:179
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::L1HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:180.
│ Use `value_deriv(loss::L1HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:180
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:195
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:223.
│ Use `value(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:223
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:224.
│ Use `deriv(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:224
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:225.
│ Use `deriv2(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:225
┌ Warning: Deprecated syntax `parametric method syntax value_deriv{T <: Number}(loss::L2HingeLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:226.
│ Use `value_deriv(loss::L2HingeLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:226
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:242
┌ Warning: Deprecated syntax `parametric method syntax (::Type{SmoothedL1HingeLoss{T}}){T}(γ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:271.
│ Use `(::Type{SmoothedL1HingeLoss{T}})(γ::T) where T` instead.
└ @ nothing margin.jl:271
┌ Warning: Deprecated syntax `parametric method syntax SmoothedL1HingeLoss{T <: AbstractFloat}(γ::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:275.
│ Use `SmoothedL1HingeLoss(γ::T) where T <: AbstractFloat` instead.
└ @ nothing margin.jl:275
┌ Warning: Deprecated syntax `parametric method syntax value{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:279.
│ Use `value(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:279
┌ Warning: Deprecated syntax `parametric method syntax deriv{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:286.
│ Use `deriv(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:286
┌ Warning: Deprecated syntax `parametric method syntax deriv2{R, T <: Number}(loss::SmoothedL1HingeLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:293.
│ Use `deriv2(loss::SmoothedL1HingeLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:293
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:309
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:337.
│ Use `value(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:337
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:340.
│ Use `deriv(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:340
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::ModifiedHuberLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:347.
│ Use `deriv2(loss::ModifiedHuberLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:347
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:363
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:391.
│ Use `value(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:391
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:392.
│ Use `deriv(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:392
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::L2MarginLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:393.
│ Use `deriv2(loss::L2MarginLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:393
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:409
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:457
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T <: Number}(loss::SigmoidLoss, agreement::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:487.
│ Use `deriv2(loss::SigmoidLoss, agreement::T) where T <: Number` instead.
└ @ nothing margin.jl:487
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:504
┌ Warning: Deprecated syntax `parametric method syntax (::Type{DWDMarginLoss{T}}){T}(q::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:533.
│ Use `(::Type{DWDMarginLoss{T}})(q::T) where T` instead.
└ @ nothing margin.jl:533
┌ Warning: Deprecated syntax `parametric method syntax DWDMarginLoss{T <: AbstractFloat}(q::T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:537.
│ Use `DWDMarginLoss(q::T) where T <: AbstractFloat` instead.
└ @ nothing margin.jl:537
┌ Warning: Deprecated syntax `parametric method syntax value{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:541.
│ Use `value(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:541
┌ Warning: Deprecated syntax `parametric method syntax deriv{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:550.
│ Use `deriv(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:550
┌ Warning: Deprecated syntax `parametric method syntax deriv2{R, T <: Number}(loss::DWDMarginLoss{R}, agreement::T)::promote_type(R, T)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/margin.jl:555.
│ Use `deriv2(loss::DWDMarginLoss{R}, agreement::T) where {R, T <: Number}` instead.
└ @ nothing margin.jl:555
┌ Warning: Deprecated syntax `@doc call with ->` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:32.
│ Use `a line break` instead.
└ @ nothing scaledloss.jl:32
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledMarginLoss{L, K}}){L <: MarginLoss, K}(loss::L)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:30.
│ Use `(::Type{ScaledMarginLoss{L, K}})(loss::L) where {L <: MarginLoss, K}` instead.
└ @ nothing scaledloss.jl:30
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledMarginLoss{L, K}}){L <: MarginLoss, K}(args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:34.
│ Use `(::Type{ScaledMarginLoss{L, K}})(args...) where {L <: MarginLoss, K}` instead.
└ @ nothing scaledloss.jl:34
┌ Warning: Deprecated syntax `parametric method syntax ScaledMarginLoss{T, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:37.
│ Use `ScaledMarginLoss(loss::T, #unused#::Type{Val{K}}) where {T, K}` instead.
└ @ nothing scaledloss.jl:37
┌ Warning: Deprecated syntax `parametric method syntax ScaledMarginLoss{T}(loss::T, k::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:38.
│ Use `ScaledMarginLoss(loss::T, k::Number) where T` instead.
└ @ nothing scaledloss.jl:38
┌ Warning: Deprecated syntax `parametric method syntax *{K}(::Type{Val{K}}, loss::MarginLoss)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:39.
│ Use `(#unused#::Type{Val{K}} * loss::MarginLoss) where K` instead.
└ @ nothing scaledloss.jl:39
┌ Warning: Deprecated syntax `parametric method syntax scaled{T <: MarginLoss, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:41.
│ Use `scaled(loss::T, #unused#::Type{Val{K}}) where {T <: MarginLoss, K}` instead.
└ @ nothing scaledloss.jl:41
┌ Warning: Deprecated syntax `parametric method syntax ScaledMarginLoss{T, K1, K2}(s::ScaledMarginLoss{T, K1}, ::Type{Val{K2}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:43.
│ Use `ScaledMarginLoss(s::ScaledMarginLoss{T, K1}, #unused#::Type{Val{K2}}) where {T, K1, K2}` instead.
└ @ nothing scaledloss.jl:43
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledDistanceLoss{L, K}}){L <: DistanceLoss, K}(loss::L)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:30.
│ Use `(::Type{ScaledDistanceLoss{L, K}})(loss::L) where {L <: DistanceLoss, K}` instead.
└ @ nothing scaledloss.jl:30
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledDistanceLoss{L, K}}){L <: DistanceLoss, K}(args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:34.
│ Use `(::Type{ScaledDistanceLoss{L, K}})(args...) where {L <: DistanceLoss, K}` instead.
└ @ nothing scaledloss.jl:34
┌ Warning: Deprecated syntax `parametric method syntax ScaledDistanceLoss{T, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:37.
│ Use `ScaledDistanceLoss(loss::T, #unused#::Type{Val{K}}) where {T, K}` instead.
└ @ nothing scaledloss.jl:37
┌ Warning: Deprecated syntax `parametric method syntax ScaledDistanceLoss{T}(loss::T, k::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:38.
│ Use `ScaledDistanceLoss(loss::T, k::Number) where T` instead.
└ @ nothing scaledloss.jl:38
┌ Warning: Deprecated syntax `parametric method syntax *{K}(::Type{Val{K}}, loss::DistanceLoss)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:39.
│ Use `(#unused#::Type{Val{K}} * loss::DistanceLoss) where K` instead.
└ @ nothing scaledloss.jl:39
┌ Warning: Deprecated syntax `parametric method syntax scaled{T <: DistanceLoss, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:41.
│ Use `scaled(loss::T, #unused#::Type{Val{K}}) where {T <: DistanceLoss, K}` instead.
└ @ nothing scaledloss.jl:41
┌ Warning: Deprecated syntax `parametric method syntax ScaledDistanceLoss{T, K1, K2}(s::ScaledDistanceLoss{T, K1}, ::Type{Val{K2}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:43.
│ Use `ScaledDistanceLoss(s::ScaledDistanceLoss{T, K1}, #unused#::Type{Val{K2}}) where {T, K1, K2}` instead.
└ @ nothing scaledloss.jl:43
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledSupervisedLoss{L, K}}){L <: SupervisedLoss, K}(loss::L)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:30.
│ Use `(::Type{ScaledSupervisedLoss{L, K}})(loss::L) where {L <: SupervisedLoss, K}` instead.
└ @ nothing scaledloss.jl:30
┌ Warning: Deprecated syntax `parametric method syntax (::Type{ScaledSupervisedLoss{L, K}}){L <: SupervisedLoss, K}(args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:34.
│ Use `(::Type{ScaledSupervisedLoss{L, K}})(args...) where {L <: SupervisedLoss, K}` instead.
└ @ nothing scaledloss.jl:34
┌ Warning: Deprecated syntax `parametric method syntax ScaledSupervisedLoss{T, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:37.
│ Use `ScaledSupervisedLoss(loss::T, #unused#::Type{Val{K}}) where {T, K}` instead.
└ @ nothing scaledloss.jl:37
┌ Warning: Deprecated syntax `parametric method syntax ScaledSupervisedLoss{T}(loss::T, k::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:38.
│ Use `ScaledSupervisedLoss(loss::T, k::Number) where T` instead.
└ @ nothing scaledloss.jl:38
┌ Warning: Deprecated syntax `parametric method syntax *{K}(::Type{Val{K}}, loss::SupervisedLoss)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:39.
│ Use `(#unused#::Type{Val{K}} * loss::SupervisedLoss) where K` instead.
└ @ nothing scaledloss.jl:39
┌ Warning: Deprecated syntax `parametric method syntax scaled{T <: SupervisedLoss, K}(loss::T, ::Type{Val{K}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:41.
│ Use `scaled(loss::T, #unused#::Type{Val{K}}) where {T <: SupervisedLoss, K}` instead.
└ @ nothing scaledloss.jl:41
┌ Warning: Deprecated syntax `parametric method syntax ScaledSupervisedLoss{T, K1, K2}(s::ScaledSupervisedLoss{T, K1}, ::Type{Val{K2}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:43.
│ Use `ScaledSupervisedLoss(s::ScaledSupervisedLoss{T, K1}, #unused#::Type{Val{K2}}) where {T, K1, K2}` instead.
└ @ nothing scaledloss.jl:43
┌ Warning: Deprecated syntax `parametric method syntax value{T, K}(l::ScaledLoss{T, K}, num::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:74.
│ Use `value(l::ScaledLoss{T, K}, num::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:74
┌ Warning: Deprecated syntax `parametric method syntax value{T, K}(l::ScaledLoss{T, K}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:75.
│ Use `value(l::ScaledLoss{T, K}, target::Number, output::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:75
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, K}(l::ScaledLoss{T, K}, num::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:74.
│ Use `deriv(l::ScaledLoss{T, K}, num::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:74
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, K}(l::ScaledLoss{T, K}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:75.
│ Use `deriv(l::ScaledLoss{T, K}, target::Number, output::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:75
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, K}(l::ScaledLoss{T, K}, num::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:74.
│ Use `deriv2(l::ScaledLoss{T, K}, num::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:74
┌ Warning: Deprecated syntax `parametric method syntax deriv2{T, K}(l::ScaledLoss{T, K}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:75.
│ Use `deriv2(l::ScaledLoss{T, K}, target::Number, output::Number) where {T, K}` instead.
└ @ nothing scaledloss.jl:75
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:86
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/scaledloss.jl:86
┌ Warning: Deprecated syntax `parametric method syntax (::Type{WeightedBinaryLoss{L, W}}){L <: MarginLoss, W}(loss::L)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:24.
│ Use `(::Type{WeightedBinaryLoss{L, W}})(loss::L) where {L <: MarginLoss, W}` instead.
└ @ nothing weightedbinary.jl:24
┌ Warning: Deprecated syntax `parametric method syntax (::Type{WeightedBinaryLoss{L, W}}){L <: MarginLoss, W}(args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:28.
│ Use `(::Type{WeightedBinaryLoss{L, W}})(args...) where {L <: MarginLoss, W}` instead.
└ @ nothing weightedbinary.jl:28
┌ Warning: Deprecated syntax `parametric method syntax WeightedBinaryLoss{L <: MarginLoss, W}(loss::L, ::Type{Val{W}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:35.
│ Use `WeightedBinaryLoss(loss::L, #unused#::Type{Val{W}}) where {L <: MarginLoss, W}` instead.
└ @ nothing weightedbinary.jl:35
┌ Warning: Deprecated syntax `parametric method syntax WeightedBinaryLoss{T, W1, W2}(s::WeightedBinaryLoss{T, W1}, ::Type{Val{W2}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:44.
│ Use `WeightedBinaryLoss(s::WeightedBinaryLoss{T, W1}, #unused#::Type{Val{W2}}) where {T, W1, W2}` instead.
└ @ nothing weightedbinary.jl:44
┌ Warning: Deprecated syntax `parametric method syntax value{L, W}(l::WeightedBinaryLoss{L, W}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:50.
│ Use `value(l::WeightedBinaryLoss{L, W}, target::Number, output::Number) where {L, W}` instead.
└ @ nothing weightedbinary.jl:50
┌ Warning: Deprecated syntax `parametric method syntax deriv{L, W}(l::WeightedBinaryLoss{L, W}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:50.
│ Use `deriv(l::WeightedBinaryLoss{L, W}, target::Number, output::Number) where {L, W}` instead.
└ @ nothing weightedbinary.jl:50
┌ Warning: Deprecated syntax `parametric method syntax deriv2{L, W}(l::WeightedBinaryLoss{L, W}, target::Number, output::Number)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:50.
│ Use `deriv2(l::WeightedBinaryLoss{L, W}, target::Number, output::Number) where {L, W}` instead.
└ @ nothing weightedbinary.jl:50
┌ Warning: Deprecated syntax `parametric method syntax weightedloss{W}(loss::Loss, ::Type{Val{W}})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:71.
│ Use `weightedloss(loss::Loss, #unused#::Type{Val{W}}) where W` instead.
└ @ nothing weightedbinary.jl:71
┌ Warning: Deprecated syntax `parametric method syntax isclasscalibrated{T, W}(l::WeightedBinaryLoss{T, W})` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:75.
│ Use `isclasscalibrated(l::WeightedBinaryLoss{T, W}) where {T, W}` instead.
└ @ nothing weightedbinary.jl:75
WARNING: Base.issymmetric is deprecated: it has been moved to the standard library package `LinearAlgebra`.
Add `using LinearAlgebra` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/weightedbinary.jl:78
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/other.jl:8.
│ Use `@doc doc" "` instead.
└ @ nothing other.jl:8
┌ Warning: Deprecated syntax `doc" "` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/other.jl:36.
│ Use `@doc doc" "` instead.
└ @ nothing other.jl:36
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/other.jl:37.
│ Use `at most one line break` instead.
└ @ nothing other.jl:37
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/other.jl:1
WARNING: Base.@doc_str is deprecated, use `Markdown` instead
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/other.jl:29
┌ Warning: Deprecated syntax `parametric method syntax Base.print{P}(io::IO, loss::LPDistLoss{P}, args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/io.jl:5.
│ Use `Base.print(io::IO, loss::LPDistLoss{P}, args...) where P` instead.
└ @ nothing io.jl:5
┌ Warning: Deprecated syntax `parametric method syntax Base.print{T, K}(io::IO, loss::ScaledLoss{T, K}, args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/io.jl:13.
│ Use `Base.print(io::IO, loss::ScaledLoss{T, K}, args...) where {T, K}` instead.
└ @ nothing io.jl:13
┌ Warning: Deprecated syntax `parametric method syntax Base.print{T, W}(io::IO, loss::WeightedBinaryLoss{T, W}, args...)` around /home/vagrant/.julia/v0.7/LossFunctions/src/supervised/io.jl:29.
│ Use `Base.print(io::IO, loss::WeightedBinaryLoss{T, W}, args...) where {T, W}` instead.
└ @ nothing io.jl:29
WARNING: importing deprecated binding Base.subtypes into LossFunctions.
WARNING: Base.subtypes is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/LossFunctions.jl:74
┌ Warning: `isleaftype` is deprecated, use `isconcretetype` instead.
│   caller = mapfilter(::typeof(isleaftype), ::typeof(push!), ::Array{Any,1}, ::Array{Any,1}) at abstractset.jl:274
└ @ Base abstractset.jl:274
WARNING: Base.subtypes is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/LossFunctions.jl:79
WARNING: Base.subtypes is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
  likely near /home/vagrant/.julia/v0.7/LossFunctions/src/LossFunctions.jl:79
┌ Warning: `importall` is deprecated, use `using` or individual `import` statements instead
│   caller = ip:0x0
└ @ Core :-1
WARNING: importing deprecated binding LearnBase.issymmetric into PenaltyFunctions.
┌ Warning: Deprecated syntax `parametric method syntax soft_thresh{T <: Number}(x::T, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/PenaltyFunctions.jl:32.
│ Use `soft_thresh(x::T, λ::Number) where T <: Number` instead.
└ @ nothing PenaltyFunctions.jl:32
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:78.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:78
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:89.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:89
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:100.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:100
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:111.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:111
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:134.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:134
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:150.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:150
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:200.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:200
┌ Warning: Deprecated syntax `(t < p.γ) ? (sign(θ) * (T(1) - (t / p.γ))):` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:214.
│ Use `(t < p.γ) ? (sign(θ) * (T(1) - (t / p.γ))) :` instead.
└ @ nothing elementpenalty.jl:214
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:235.
│ Use `struct` instead.
└ @ nothing elementpenalty.jl:235
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::AA{S})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:12.
│ Use `value(p::ElementPenalty, θ::AA{T}, s::AA{S}) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:12
┌ Warning: Deprecated syntax `parametric method syntax grad{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:34.
│ Use `grad(p::ElementPenalty, θ::AA{T}, s::S) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:34
┌ Warning: Deprecated syntax `parametric method syntax grad{T <: Number, S <: Number}(p::ElementPenalty, θ::AA{T}, s::AA{S})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:35.
│ Use `grad(p::ElementPenalty, θ::AA{T}, s::AA{S}) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:35
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::L2Penalty, θ::T)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:101.
│ Use `value(p::L2Penalty, θ::T) where T <: Number` instead.
└ @ nothing elementpenalty.jl:101
┌ Warning: Deprecated syntax `parametric method syntax prox{T <: Number}(p::L2Penalty, θ::T, s::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:103.
│ Use `prox(p::L2Penalty, θ::T, s::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:103
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::ElasticNetPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:120.
│ Use `value(p::ElasticNetPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:120
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(p::ElasticNetPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:120.
│ Use `deriv(p::ElasticNetPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:120
┌ Warning: Deprecated syntax `parametric method syntax prox{T <: Number}(p::ElasticNetPenalty{T}, θ::Number, s::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:124.
│ Use `prox(p::ElasticNetPenalty{T}, θ::Number, s::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:124
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number}(p::LogPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:142.
│ Use `deriv(p::LogPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:142
┌ Warning: Deprecated syntax `parametric method syntax SCADPenalty{T <: Number}(a::T = 3.7, γ::T = T(1))` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:159.
│ Use `SCADPenalty(a::T = 3.7, γ::T = T(1)) where T <: Number` instead.
└ @ nothing elementpenalty.jl:159
┌ Warning: Deprecated syntax `parametric method syntax value{T, S <: Number}(p::SCADPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:163.
│ Use `value(p::SCADPenalty{T}, θ::S) where {T, S <: Number}` instead.
└ @ nothing elementpenalty.jl:163
┌ Warning: Deprecated syntax `parametric method syntax deriv{T, S <: Number}(p::SCADPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:174.
│ Use `deriv(p::SCADPenalty{T}, θ::S) where {T, S <: Number}` instead.
└ @ nothing elementpenalty.jl:174
┌ Warning: Deprecated syntax `parametric method syntax value{T <: Number}(p::MCPPenalty{T}, θ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:209.
│ Use `value(p::MCPPenalty{T}, θ::Number) where T <: Number` instead.
└ @ nothing elementpenalty.jl:209
┌ Warning: Deprecated syntax `parametric method syntax deriv{T <: Number, S <: Number}(p::MCPPenalty{T}, θ::S)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/elementpenalty.jl:213.
│ Use `deriv(p::MCPPenalty{T}, θ::S) where {T <: Number, S <: Number}` instead.
└ @ nothing elementpenalty.jl:213
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:12.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:12
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:25.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:25
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:47.
│ Use `mutable struct` instead.
└ @ nothing arraypenalty.jl:47
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:68.
│ Use `struct` instead.
└ @ nothing arraypenalty.jl:68
┌ Warning: Deprecated syntax `parametric method syntax prox!{T <: Number}(p::GroupLassoPenalty, A::AA{T}, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:28.
│ Use `prox!(p::GroupLassoPenalty, A::AA{T}, λ::Number) where T <: Number` instead.
└ @ nothing arraypenalty.jl:28
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:42
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:42
┌ Warning: Deprecated syntax `parametric method syntax MahalanobisPenalty{T}(C::AbstractMatrix{T}, λ::T = one(T))` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:54.
│ Use `MahalanobisPenalty(C::AbstractMatrix{T}, λ::T = one(T)) where T` instead.
└ @ nothing arraypenalty.jl:54
┌ Warning: Deprecated syntax `parametric method syntax value{T}(p::MahalanobisPenalty{T}, x::AbstractVector{T})` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:56.
│ Use `value(p::MahalanobisPenalty{T}, x::AbstractVector{T}) where T` instead.
└ @ nothing arraypenalty.jl:56
┌ Warning: Deprecated syntax `parametric method syntax prox!{T <: Number}(p::MahalanobisPenalty{T}, A::AA{T, 1}, λ::Number)` around /home/vagrant/.julia/v0.7/PenaltyFunctions/src/arraypenalty.jl:58.
│ Use `prox!(p::MahalanobisPenalty{T}, A::AA{T, 1}, λ::Number) where T <: Number` instead.
└ @ nothing arraypenalty.jl:58
┌ Warning: Deprecated syntax `parametric method syntax sweep!{T <: LinAlg.BlasFloat}(A::AMat{T}, k::Integer, inv::Bool = false)` around /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:30.
│ Use `sweep!(A::AMat{T}, k::Integer, inv::Bool = false) where T <: LinAlg.BlasFloat` instead.
└ @ nothing SweepOperator.jl:30
WARNING: importing deprecated binding Base.LinAlg into SweepOperator.
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:8
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:8
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:8
┌ Warning: Deprecated syntax `parametric method syntax sweep!{T <: LinAlg.BlasFloat, I <: Integer}(A::AMat{T}, ks::AVec{I}, inv::Bool = false)` around /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:46.
│ Use `sweep!(A::AMat{T}, ks::AVec{I}, inv::Bool = false) where {T <: LinAlg.BlasFloat, I <: Integer}` instead.
└ @ nothing SweepOperator.jl:46
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:45
WARNING: Base.LinAlg is deprecated, run `using LinearAlgebra` instead
  likely near /home/vagrant/.julia/v0.7/SweepOperator/src/SweepOperator.jl:45
WARNING: importing deprecated binding Base.Dates into OnlineStats.
WARNING: Base.Dates is deprecated, run `using Dates` instead
  likely near /home/vagrant/.julia/v0.7/OnlineStats/src/viz/partition.jl:161
┌ Warning: `replace(s::AbstractString, pat, f)` is deprecated, use `replace(s, pat => f)` instead.
│   caller = _parse_colorant(::String) at parse.jl:51
└ @ Colors parse.jl:51
┌ Warning: Deprecated syntax `parametric method syntax get_color_palette{C <: Colorant}(palette::Vector{C}, bgcolor::Colorant, numcolors::Integer)` around /home/vagrant/.julia/v0.7/PlotUtils/src/color_utils.jl:73.
│ Use `get_color_palette(palette::Vector{C}, bgcolor::Colorant, numcolors::Integer) where C <: Colorant` instead.
└ @ nothing color_utils.jl:73
WARNING: importing deprecated binding Base.@sprintf into PlotUtils.
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/PlotUtils/src/color_utils.jl:151
WARNING: Base.@sprintf is deprecated: it has been moved to the standard library package `Printf`.
Add `using Printf` to your imports.
  likely near /home/vagrant/.julia/v0.7/PlotUtils/src/color_utils.jl:155
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/PlotUtils/src/color_gradients.jl:2.
│ Use `mutable struct` instead.
└ @ nothing color_gradients.jl:2
┌ Warning: Deprecated syntax `immutable` at /home/vagrant/.julia/v0.7/PlotUtils/src/color_gradients.jl:106.
│ Use `struct` instead.
└ @ nothing color_gradients.jl:106
┌ Warning: Deprecated syntax `parametric method syntax register_gradient_colors{C <: Colorant}(name::Symbol, colors::AbstractVector{C}, color_library::Symbol = :default)` around /home/vagrant/.julia/v0.7/PlotUtils/src/color_gradients.jl:47.
│ Use `register_gradient_colors(name::Symbol, colors::AbstractVector{C}, color_library::Symbol = :default) where C <: Colorant` instead.
└ @ nothing color_gradients.jl:47
WARNING: importing deprecated binding Base.Void into PlotUtils.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PlotUtils/src/color_gradients.jl:176
┌ Warning: `linspace(start, stop, length::Integer)` is deprecated, use `range(start, stop=stop, length=length)` instead.
│   caller = sample_evenly(::Array{ColorTypes.RGB{Float64},1}, ::Int64) at color_gradients.jl:241
└ @ PlotUtils color_gradients.jl:241
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PlotUtils/src/colors.jl:8
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/vagrant/.julia/v0.7/PlotUtils/src/colors.jl:15
┌ Warning: Deprecated syntax `parametric method syntax plot_color{T <: Number}(zs::AbstractArray{T})` around /home/vagrant/.julia/v0.7/PlotUtils/src/colors.jl:50.
│ Use `plot_color(zs::AbstractArray{T}) where T <: Number` instead.
└ @ nothing colors.jl:50
┌ Warning: Deprecated syntax `parametric method syntax plot_color{T <: Number}(zs::AbstractArray{T}, α::Number)` around /home/vagrant/.julia/v0.7/PlotUtils/src/colors.jl:64.
│ Use `plot_color(zs::AbstractArray{T}, α::Number) where T <: Number` instead.
└ @ nothing colors.jl:64
┌ Warning: Deprecated syntax `parametric method syntax bounding_order_of_magnitude{DT}(xspan::DT)` around /home/vagrant/.julia/v0.7/PlotUtils/src/ticks.jl:8.
│ Use `bounding_order_of_magnitude(xspan::DT) where DT` instead.
└ @ nothing ticks.jl:8
┌ Warning: Deprecated syntax `parametric method syntax optimize_ticks{T}(x_min::T, x_max::T; extend_ticks::Bool = false, Q = [(1.0, 1.0), (5.0, 0.9), (2.0, 0.7), (2.5, 0.5), (3.0, 0.2)], k_min::Int = 2, k_max::Int = 10, k_ideal::Int = 5, granularity_weight::Float64 = (1 / 4), simplicity_weight::Float64 = (1 / 6), coverage_weight::Float64 = (1 / 3), niceness_weight::Float64 = (1 / 4), strict_span = true, span_buffer = nothing)` around /home/vagrant/.julia/v0.7/PlotUtils/src/ticks.jl:63.
│ Use `optimize_ticks(x_min::T, x_max::T; extend_ticks::Bool = false, Q = [(1.0, 1.0), (5.0, 0.9), (2.0, 0.7), (2.5, 0.5), (3.0, 0.2)], k_min::Int = 2, k_max::Int = 10, k_ideal::Int = 5, granularity_weight::Float64 = (1 / 4), simplicity_weight::Float64 = (1 / 6), coverage_weight::Float64 = (1 / 3), niceness_weight::Float64 = (1 / 4), strict_span = true, span_buffer = nothing) where T` instead.
└ @ nothing ticks.jl:63
┌ Warning: Deprecated syntax `parametric method syntax optimize_ticks_typed{T}(x_min::T, x_max::T, extend_ticks, Q::Vector{Tuple{Float64, Float64}}, k_min, k_max, k_ideal, granularity_weight::Float64, simplicity_weight::Float64, coverage_weight::Float64, niceness_weight::Float64, strict_span, span_buffer)` around /home/vagrant/.julia/v0.7/PlotUtils/src/ticks.jl:75.
│ Use `optimize_ticks_typed(x_min::T, x_max::T, extend_ticks, Q::Vector{Tuple{Float64, Float64}}, k_min, k_max, k_ideal, granularity_weight::Float64, simplicity_weight::Float64, coverage_weight::Float64, niceness_weight::Float64, strict_span, span_buffer) where T` instead.
└ @ nothing ticks.jl:75
┌ Warning: Deprecated syntax ``const` declaration on local variable` around /home/vagrant/.julia/v0.7/PlotUtils/src/ticks.jl:81.
└ @ nothing ticks.jl:81
ERROR: LoadError: LoadError: UndefVarError: Date not defined
Stacktrace:
 [1] top-level scope
 [2] include at ./boot.jl:314 [inlined]
 [3] include_relative(::Module, ::String) at ./loading.jl:1067
 [4] include at ./sysimg.jl:29 [inlined]
 [5] include(::String) at /home/vagrant/.julia/v0.7/PlotUtils/src/PlotUtils.jl:4
 [6] top-level scope
 [7] include at ./boot.jl:314 [inlined]
 [8] include_relative(::Module, ::String) at ./loading.jl:1067
 [9] include(::Module, ::String) at ./sysimg.jl:29
 [10] top-level scope
 [11] eval at ./boot.jl:317 [inlined]
 [12] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/PlotUtils/src/ticks.jl:190
in expression starting at /home/vagrant/.julia/v0.7/PlotUtils/src/PlotUtils.jl:35
ERROR: LoadError: Failed to precompile PlotUtils to /home/vagrant/.julia/compiled/v0.7/PlotUtils.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:974
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] top-level scope
 [10] eval at ./boot.jl:317 [inlined]
 [11] top-level scope at ./<missing>:3
in expression starting at /home/vagrant/.julia/v0.7/Plots/src/Plots.jl:13
ERROR: LoadError: Failed to precompile Plots to /home/vagrant/.julia/compiled/v0.7/Plots.ji.
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] compilecache(::Base.PkgId) at ./loading.jl:1201
 [3] _require(::Base.PkgId) at ./loading.jl:1003
 [4] require(::Base.PkgId) at ./loading.jl:874
 [5] require(::Module, ::Symbol) at ./loading.jl:869
 [6] include at ./boot.jl:314 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1067
 [8] include(::Module, ::String) at ./sysimg.jl:29
 [9] exec_options(::Base.JLOptions) at ./client.jl:327
 [10] _start() at ./client.jl:457
in expression starting at /home/vagrant/.julia/v0.7/OnlineStats/test/runtests.jl:2
┌ Error: ------------------------------------------------------------
│ # Testing failed for OnlineStats
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/OnlineStats/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:712
│     [3] #run#539(::Bool, ::Function, ::Cmd) at ./process.jl:670
│     [4] run at ./process.jl:668 [inlined]
│     [5] (::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:729
│     [6] cd(::getfield(Pkg.Entry, Symbol("##56#57")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:72
│     [7] #test!#55(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:717
│     [8] (::getfield(Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [9] #test#59(::Bool, ::Function, ::Array{AbstractString,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/entry.jl:756
│     [10] #test at ./<missing>:0 [inlined]
│     [11] #4 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36 [inlined]
│     [12] cd(::getfield(Pkg.Dir, Symbol("##4#7")){Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:72
│     [13] #cd#1(::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/dir.jl:36
│     [14] (::getfield(Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [15] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [16] test(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v0.7/Pkg/src/Pkg.jl:278
│     [17] top-level scope
│     [18] eval at ./boot.jl:317 [inlined]
│     [19] eval(::Module, ::Expr) at ./sysimg.jl:74
│     [20] exec_options(::Base.JLOptions) at ./client.jl:304
│     [21] _start() at ./client.jl:457
└ @ Pkg.Entry entry.jl:732
[ Info: Removing ColorTypes v0.6.7
[ Info: Removing Colors v0.8.2
[ Info: Removing Contour v0.4.0
[ Info: Removing FixedPointNumbers v0.4.6
[ Info: Removing GR v0.31.0
[ Info: Removing Measures v0.2.0
[ Info: Removing NaNMath v0.3.1
[ Info: Removing PlotThemes v0.2.0
[ Info: Removing PlotUtils v0.4.4
[ Info: Removing Plots v0.17.0
[ Info: Removing Requires v0.4.3
[ Info: Removing Showoff v0.1.1
[ Info: Removing StaticArrays v0.7.0
ERROR: OnlineStats had test errors

>>> End of log
