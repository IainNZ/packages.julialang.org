>>> 'Pkg.add("PyAMG")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Conda v0.7.1
INFO: Installing MacroTools v0.3.7
INFO: Installing PyAMG v0.2.1
INFO: Installing PyCall v1.15.0
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .............
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.13.3          py27_blas_openblas_201  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PyAMG
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (641.51171875 MB free)
Uptime: 31340.0 sec
Load Avg:  0.96875  0.9853515625  0.951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1909994 s         54 s     172400 s     688551 s         34 s
#2  3499 MHz     509964 s        144 s      75298 s    2491039 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - PyAMG                         0.2.1
7 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.42.0
 - Conda                         0.7.1
 - MacroTools                    0.3.7
 - PyCall                        1.15.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Computing test dependencies for PyAMG...
INFO: Installing Combinatorics v0.5.0
INFO: Installing DataStructures v0.6.1
INFO: Installing IterTools v0.1.0
INFO: Installing IterativeSolvers v0.3.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing Polynomials v0.1.6
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing SugarBLAS v0.0.4
INFO: Installing UnicodePlots v0.2.6
INFO: Testing PyAMG
INFO: Installing scipy.sparse via the Conda scipy package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.5/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    scipy: 1.0.0-py27_blas_openblas_201 conda-forge [blas_openblas]

scipy-1.0.0-py   0% |                              | ETA:  --:--:--   0.00  B/sscipy-1.0.0-py   1% |                               | ETA:  0:00:13   3.06 MB/sscipy-1.0.0-py   2% |                               | ETA:  0:00:09   4.45 MB/sscipy-1.0.0-py   3% |                               | ETA:  0:00:06   5.84 MB/sscipy-1.0.0-py   4% |#                              | ETA:  0:00:05   6.94 MB/sscipy-1.0.0-py   5% |#                              | ETA:  0:00:04   7.89 MB/sscipy-1.0.0-py   6% |#                              | ETA:  0:00:04   8.91 MB/sscipy-1.0.0-py   7% |##                             | ETA:  0:00:03   9.86 MB/sscipy-1.0.0-py   8% |##                             | ETA:  0:00:03  10.53 MB/sscipy-1.0.0-py   9% |##                             | ETA:  0:00:03  11.29 MB/sscipy-1.0.0-py  10% |###                            | ETA:  0:00:03  11.84 MB/sscipy-1.0.0-py  11% |###                            | ETA:  0:00:02  12.36 MB/sscipy-1.0.0-py  12% |###                            | ETA:  0:00:02  13.14 MB/sscipy-1.0.0-py  13% |####                           | ETA:  0:00:02  13.67 MB/sscipy-1.0.0-py  14% |####                           | ETA:  0:00:02  14.23 MB/sscipy-1.0.0-py  15% |####                           | ETA:  0:00:02  14.47 MB/sscipy-1.0.0-py  16% |#####                          | ETA:  0:00:02  15.00 MB/sscipy-1.0.0-py  17% |#####                          | ETA:  0:00:02  15.40 MB/sscipy-1.0.0-py  18% |#####                          | ETA:  0:00:02  15.75 MB/sscipy-1.0.0-py  19% |######                         | ETA:  0:00:02  16.08 MB/sscipy-1.0.0-py  20% |######                         | ETA:  0:00:01  16.48 MB/sscipy-1.0.0-py  21% |######                         | ETA:  0:00:01  16.84 MB/sscipy-1.0.0-py  22% |#######                        | ETA:  0:00:01  17.10 MB/sscipy-1.0.0-py  23% |#######                        | ETA:  0:00:01  17.38 MB/sscipy-1.0.0-py  24% |#######                        | ETA:  0:00:01  17.47 MB/sscipy-1.0.0-py  25% |########                       | ETA:  0:00:01  17.67 MB/sscipy-1.0.0-py  26% |########                       | ETA:  0:00:01  17.98 MB/sscipy-1.0.0-py  27% |########                       | ETA:  0:00:01  18.29 MB/sscipy-1.0.0-py  28% |########                       | ETA:  0:00:01  18.61 MB/sscipy-1.0.0-py  30% |#########                      | ETA:  0:00:01  18.94 MB/sscipy-1.0.0-py  31% |#########                      | ETA:  0:00:01  19.26 MB/sscipy-1.0.0-py  32% |#########                      | ETA:  0:00:01  19.59 MB/sscipy-1.0.0-py  33% |##########                     | ETA:  0:00:01  19.85 MB/sscipy-1.0.0-py  34% |##########                     | ETA:  0:00:01  20.09 MB/sscipy-1.0.0-py  35% |##########                     | ETA:  0:00:01  20.34 MB/sscipy-1.0.0-py  36% |###########                    | ETA:  0:00:01  20.53 MB/sscipy-1.0.0-py  37% |###########                    | ETA:  0:00:01  20.75 MB/sscipy-1.0.0-py  38% |###########                    | ETA:  0:00:01  20.95 MB/sscipy-1.0.0-py  39% |############                   | ETA:  0:00:01  21.15 MB/sscipy-1.0.0-py  40% |############                   | ETA:  0:00:01  21.34 MB/sscipy-1.0.0-py  41% |############                   | ETA:  0:00:01  21.54 MB/sscipy-1.0.0-py  42% |#############                  | ETA:  0:00:01  21.72 MB/sscipy-1.0.0-py  43% |#############                  | ETA:  0:00:01  21.90 MB/sscipy-1.0.0-py  44% |#############                  | ETA:  0:00:01  22.05 MB/sscipy-1.0.0-py  45% |##############                 | ETA:  0:00:01  22.18 MB/sscipy-1.0.0-py  46% |##############                 | ETA:  0:00:00  22.33 MB/sscipy-1.0.0-py  47% |##############                 | ETA:  0:00:00  22.48 MB/sscipy-1.0.0-py  48% |###############                | ETA:  0:00:00  22.62 MB/sscipy-1.0.0-py  49% |###############                | ETA:  0:00:00  22.77 MB/sscipy-1.0.0-py  50% |###############                | ETA:  0:00:00  22.70 MB/sscipy-1.0.0-py  51% |################               | ETA:  0:00:00  22.46 MB/sscipy-1.0.0-py  52% |################               | ETA:  0:00:00  22.50 MB/sscipy-1.0.0-py  53% |################               | ETA:  0:00:00  22.54 MB/sscipy-1.0.0-py  54% |#################              | ETA:  0:00:00  22.61 MB/sscipy-1.0.0-py  55% |#################              | ETA:  0:00:00  22.66 MB/sscipy-1.0.0-py  56% |#################              | ETA:  0:00:00  22.73 MB/sscipy-1.0.0-py  57% |#################              | ETA:  0:00:00  22.78 MB/sscipy-1.0.0-py  58% |##################             | ETA:  0:00:00  22.83 MB/sscipy-1.0.0-py  60% |##################             | ETA:  0:00:00  22.86 MB/sscipy-1.0.0-py  61% |##################             | ETA:  0:00:00  22.92 MB/sscipy-1.0.0-py  62% |###################            | ETA:  0:00:00  23.01 MB/sscipy-1.0.0-py  63% |###################            | ETA:  0:00:00  23.07 MB/sscipy-1.0.0-py  64% |###################            | ETA:  0:00:00  23.12 MB/sscipy-1.0.0-py  65% |####################           | ETA:  0:00:00  23.14 MB/sscipy-1.0.0-py  66% |####################           | ETA:  0:00:00  23.15 MB/sscipy-1.0.0-py  67% |####################           | ETA:  0:00:00  23.22 MB/sscipy-1.0.0-py  68% |#####################          | ETA:  0:00:00  23.30 MB/sscipy-1.0.0-py  69% |#####################          | ETA:  0:00:00  23.25 MB/sscipy-1.0.0-py  70% |#####################          | ETA:  0:00:00  23.18 MB/sscipy-1.0.0-py  71% |######################         | ETA:  0:00:00  23.13 MB/sscipy-1.0.0-py  72% |######################         | ETA:  0:00:00  23.13 MB/sscipy-1.0.0-py  73% |######################         | ETA:  0:00:00  23.20 MB/sscipy-1.0.0-py  74% |#######################        | ETA:  0:00:00  23.28 MB/sscipy-1.0.0-py  75% |#######################        | ETA:  0:00:00  23.33 MB/sscipy-1.0.0-py  76% |#######################        | ETA:  0:00:00  23.39 MB/sscipy-1.0.0-py  77% |########################       | ETA:  0:00:00  23.42 MB/sscipy-1.0.0-py  78% |########################       | ETA:  0:00:00  23.49 MB/sscipy-1.0.0-py  79% |########################       | ETA:  0:00:00  23.57 MB/sscipy-1.0.0-py  80% |#########################      | ETA:  0:00:00  23.64 MB/sscipy-1.0.0-py  81% |#########################      | ETA:  0:00:00  23.69 MB/sscipy-1.0.0-py  82% |#########################      | ETA:  0:00:00  23.75 MB/sscipy-1.0.0-py  83% |#########################      | ETA:  0:00:00  23.81 MB/sscipy-1.0.0-py  84% |##########################     | ETA:  0:00:00  23.88 MB/sscipy-1.0.0-py  85% |##########################     | ETA:  0:00:00  23.92 MB/sscipy-1.0.0-py  86% |##########################     | ETA:  0:00:00  23.98 MB/sscipy-1.0.0-py  87% |###########################    | ETA:  0:00:00  24.04 MB/sscipy-1.0.0-py  88% |###########################    | ETA:  0:00:00  24.10 MB/sscipy-1.0.0-py  90% |###########################    | ETA:  0:00:00  24.15 MB/sscipy-1.0.0-py  91% |############################   | ETA:  0:00:00  24.20 MB/sscipy-1.0.0-py  92% |############################   | ETA:  0:00:00  24.29 MB/sscipy-1.0.0-py  93% |############################   | ETA:  0:00:00  24.35 MB/sscipy-1.0.0-py  94% |#############################  | ETA:  0:00:00  24.36 MB/sscipy-1.0.0-py  95% |#############################  | ETA:  0:00:00  24.45 MB/sscipy-1.0.0-py  96% |#############################  | ETA:  0:00:00  24.59 MB/sscipy-1.0.0-py  97% |############################## | ETA:  0:00:00  24.73 MB/sscipy-1.0.0-py  98% |############################## | ETA:  0:00:00  24.85 MB/sscipy-1.0.0-py  99% |############################## | ETA:  0:00:00  25.03 MB/sscipy-1.0.0-py 100% |###############################| Time: 0:00:01  25.14 MB/s
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata .............
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.5/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pyamg: 3.3.2-py27_0 conda-forge

pyamg-3.3.2-py   0% |                              | ETA:  --:--:--   0.00  B/spyamg-3.3.2-py   1% |                               | ETA:  0:00:01   1.35 MB/spyamg-3.3.2-py   3% |#                              | ETA:  0:00:00   1.77 MB/spyamg-3.3.2-py   5% |#                              | ETA:  0:00:01   1.59 MB/spyamg-3.3.2-py   7% |##                             | ETA:  0:00:00   1.75 MB/spyamg-3.3.2-py   9% |##                             | ETA:  0:00:00   2.14 MB/spyamg-3.3.2-py  11% |###                            | ETA:  0:00:00   2.22 MB/spyamg-3.3.2-py  13% |####                           | ETA:  0:00:00   2.29 MB/spyamg-3.3.2-py  14% |####                           | ETA:  0:00:00   2.59 MB/spyamg-3.3.2-py  16% |#####                          | ETA:  0:00:00   2.62 MB/spyamg-3.3.2-py  18% |#####                          | ETA:  0:00:00   2.88 MB/spyamg-3.3.2-py  20% |######                         | ETA:  0:00:00   2.89 MB/spyamg-3.3.2-py  22% |######                         | ETA:  0:00:00   3.10 MB/spyamg-3.3.2-py  24% |#######                        | ETA:  0:00:00   2.95 MB/spyamg-3.3.2-py  26% |########                       | ETA:  0:00:00   3.15 MB/spyamg-3.3.2-py  28% |########                       | ETA:  0:00:00   3.33 MB/spyamg-3.3.2-py  29% |#########                      | ETA:  0:00:00   3.49 MB/spyamg-3.3.2-py  31% |#########                      | ETA:  0:00:00   3.56 MB/spyamg-3.3.2-py  33% |##########                     | ETA:  0:00:00   3.76 MB/spyamg-3.3.2-py  35% |###########                    | ETA:  0:00:00   3.95 MB/spyamg-3.3.2-py  37% |###########                    | ETA:  0:00:00   3.65 MB/spyamg-3.3.2-py  39% |############                   | ETA:  0:00:00   3.78 MB/spyamg-3.3.2-py  41% |############                   | ETA:  0:00:00   3.94 MB/spyamg-3.3.2-py  42% |#############                  | ETA:  0:00:00   4.10 MB/spyamg-3.3.2-py  44% |#############                  | ETA:  0:00:00   4.27 MB/spyamg-3.3.2-py  46% |##############                 | ETA:  0:00:00   4.42 MB/spyamg-3.3.2-py  48% |###############                | ETA:  0:00:00   4.53 MB/spyamg-3.3.2-py  50% |###############                | ETA:  0:00:00   4.69 MB/spyamg-3.3.2-py  52% |################               | ETA:  0:00:00   4.84 MB/spyamg-3.3.2-py  54% |################               | ETA:  0:00:00   4.99 MB/spyamg-3.3.2-py  56% |#################              | ETA:  0:00:00   5.14 MB/spyamg-3.3.2-py  57% |#################              | ETA:  0:00:00   5.29 MB/spyamg-3.3.2-py  59% |##################             | ETA:  0:00:00   5.43 MB/spyamg-3.3.2-py  61% |###################            | ETA:  0:00:00   5.58 MB/spyamg-3.3.2-py  63% |###################            | ETA:  0:00:00   5.47 MB/spyamg-3.3.2-py  65% |####################           | ETA:  0:00:00   5.61 MB/spyamg-3.3.2-py  67% |####################           | ETA:  0:00:00   5.74 MB/spyamg-3.3.2-py  69% |#####################          | ETA:  0:00:00   5.87 MB/spyamg-3.3.2-py  71% |######################         | ETA:  0:00:00   6.01 MB/spyamg-3.3.2-py  72% |######################         | ETA:  0:00:00   6.14 MB/spyamg-3.3.2-py  74% |#######################        | ETA:  0:00:00   6.18 MB/spyamg-3.3.2-py  76% |#######################        | ETA:  0:00:00   6.27 MB/spyamg-3.3.2-py  78% |########################       | ETA:  0:00:00   6.40 MB/spyamg-3.3.2-py  80% |########################       | ETA:  0:00:00   6.53 MB/spyamg-3.3.2-py  82% |#########################      | ETA:  0:00:00   6.66 MB/spyamg-3.3.2-py  84% |##########################     | ETA:  0:00:00   6.79 MB/spyamg-3.3.2-py  85% |##########################     | ETA:  0:00:00   6.89 MB/spyamg-3.3.2-py  87% |###########################    | ETA:  0:00:00   6.38 MB/spyamg-3.3.2-py  89% |###########################    | ETA:  0:00:00   6.48 MB/spyamg-3.3.2-py  91% |############################   | ETA:  0:00:00   6.59 MB/spyamg-3.3.2-py  93% |############################   | ETA:  0:00:00   6.70 MB/spyamg-3.3.2-py  95% |#############################  | ETA:  0:00:00   6.81 MB/spyamg-3.3.2-py  97% |############################## | ETA:  0:00:00   6.93 MB/spyamg-3.3.2-py  99% |############################## | ETA:  0:00:00   7.02 MB/spyamg-3.3.2-py 100% |###############################| Time: 0:00:00   7.06 MB/s
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   1.142147 seconds (529.85 k allocations: 30.934 MB, 1.45% gc time)
PyAMG-Warmup:   2.997118 seconds (1.20 M allocations: 52.271 MB, 0.56% gc time)
PyAMG:   0.273857 seconds (263 allocations: 942.000 KB)
|x_\ - x_amg|_âˆž = 1.1009818057239329e-11
|A x_amg - b|_âˆž = 2.6406610231788363e-9
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.788702 seconds (64 allocations: 93.885 MB, 2.69% gc time)
PyAMG-Warmup:   1.102857 seconds (263 allocations: 3.224 MB)
PyAMG:   1.335584 seconds (263 allocations: 3.224 MB)
|x_\ - x_amg|_âˆž = 1.7556234244153757e-12
|A x_amg - b|_âˆž = 7.97342636360554e-10
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.484237 seconds (34.45 k allocations: 15.478 MB)
First solve:   0.471355 seconds (82.33 k allocations: 4.087 MB)
Second solve: (tol 1e-9)  0.414002 seconds (8.46 k allocations: 1.331 MB)
Third solve: (tol 1e-6)  0.205131 seconds (159 allocations: 982.844 KB)
|A x_amg - b|_âˆž = 3.804971740350993e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  0.058939 seconds (995 allocations: 24.686 MB, 19.34% gc time)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.016705 seconds (717 allocations: 1.324 MB)
PyAMG solver
  0.013907 seconds (191 allocations: 85.578 KB)
|x_cg-x| = 2.525211388093167e-8 
|x_pcg-x| = 9.158169077400953e-9
|x_pyamg-x| = 9.158169179538598e-9
Test Summary: | Pass  Total
  PyAMG       |    8      8
INFO: PyAMG tests passed
INFO: Removing Combinatorics v0.5.0
INFO: Removing DataStructures v0.6.1
INFO: Removing IterTools v0.1.0
INFO: Removing IterativeSolvers v0.3.1
INFO: Removing LinearMaps v0.3.0
INFO: Removing Polynomials v0.1.6
INFO: Removing RecipesBase v0.1.0
INFO: Removing SpecialFunctions v0.2.0
INFO: Removing StatsBase v0.17.0
INFO: Removing SugarBLAS v0.0.4
INFO: Removing UnicodePlots v0.2.6

>>> End of log
