>>> 'Pkg.add("PyAMG")' log
INFO: Installing BinDeps v0.6.0
INFO: Installing Conda v0.7.0
INFO: Installing MacroTools v0.3.7
INFO: Installing PyAMG v0.2.0
INFO: Installing PyCall v1.15.0
INFO: Installing SHA v0.3.3
INFO: Installing URIParser v0.2.0
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata ...........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.13.1           py27hd1b6e02_2  
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.14) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Package database updated

>>> 'Pkg.test("PyAMG")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-132-generic #181-Ubuntu SMP Wed Sep 13 13:25:03 UTC 2017 x86_64 x86_64
Memory: 2.93927001953125 GB (647.05859375 MB free)
Uptime: 25417.0 sec
Load Avg:  1.00537109375  0.9931640625  0.95361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1540997 s       2795 s     143100 s     531862 s         13 s
#2  3496 MHz     362429 s       4934 s      58356 s    2074240 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.14.0
 - PyAMG                         0.2.0
7 additional packages:
 - BinDeps                       0.6.0
 - Compat                        0.32.0
 - Conda                         0.7.0
 - MacroTools                    0.3.7
 - PyCall                        1.15.0
 - SHA                           0.3.3
 - URIParser                     0.2.0
INFO: Computing test dependencies for PyAMG...
INFO: Installing Combinatorics v0.4.1
INFO: Installing DataStructures v0.6.1
INFO: Installing IterTools v0.1.0
INFO: Installing IterativeSolvers v0.3.1
INFO: Installing LinearMaps v0.3.0
INFO: Installing Polynomials v0.1.6
INFO: Installing RecipesBase v0.1.0
INFO: Installing SpecialFunctions v0.2.0
INFO: Installing StatsBase v0.17.0
INFO: Installing SugarBLAS v0.0.4
INFO: Installing UnicodePlots v0.2.5
INFO: Testing PyAMG
INFO: Installing scipy.sparse via the Conda scipy package...
Fetching package metadata ...........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.5/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    scipy: 0.19.1-py27h1edc525_3

scipy-0.19.1-p   0% |                              | ETA:  --:--:--   0.00  B/sscipy-0.19.1-p   1% |                               | ETA:  0:00:01  13.60 MB/sscipy-0.19.1-p   2% |                               | ETA:  0:00:01  16.46 MB/sscipy-0.19.1-p   3% |                               | ETA:  0:00:00  19.54 MB/sscipy-0.19.1-p   4% |#                              | ETA:  0:00:00  21.95 MB/sscipy-0.19.1-p   5% |#                              | ETA:  0:00:00  23.47 MB/sscipy-0.19.1-p   6% |#                              | ETA:  0:00:00  24.62 MB/sscipy-0.19.1-p   7% |##                             | ETA:  0:00:00  24.89 MB/sscipy-0.19.1-p   8% |##                             | ETA:  0:00:00  25.68 MB/sscipy-0.19.1-p   9% |##                             | ETA:  0:00:00  26.26 MB/sscipy-0.19.1-p  10% |###                            | ETA:  0:00:00  26.84 MB/sscipy-0.19.1-p  11% |###                            | ETA:  0:00:00  27.24 MB/sscipy-0.19.1-p  12% |###                            | ETA:  0:00:00  27.71 MB/sscipy-0.19.1-p  13% |####                           | ETA:  0:00:00  28.10 MB/sscipy-0.19.1-p  15% |####                           | ETA:  0:00:00  28.44 MB/sscipy-0.19.1-p  16% |####                           | ETA:  0:00:00  28.67 MB/sscipy-0.19.1-p  17% |#####                          | ETA:  0:00:00  28.93 MB/sscipy-0.19.1-p  18% |#####                          | ETA:  0:00:00  29.05 MB/sscipy-0.19.1-p  19% |#####                          | ETA:  0:00:00  29.15 MB/sscipy-0.19.1-p  20% |######                         | ETA:  0:00:00  29.34 MB/sscipy-0.19.1-p  21% |######                         | ETA:  0:00:00  29.65 MB/sscipy-0.19.1-p  22% |######                         | ETA:  0:00:00  29.87 MB/sscipy-0.19.1-p  23% |#######                        | ETA:  0:00:00  30.11 MB/sscipy-0.19.1-p  24% |#######                        | ETA:  0:00:00  30.29 MB/sscipy-0.19.1-p  25% |#######                        | ETA:  0:00:00  30.52 MB/sscipy-0.19.1-p  26% |########                       | ETA:  0:00:00  30.56 MB/sscipy-0.19.1-p  27% |########                       | ETA:  0:00:00  30.76 MB/sscipy-0.19.1-p  28% |########                       | ETA:  0:00:00  30.88 MB/sscipy-0.19.1-p  30% |#########                      | ETA:  0:00:00  30.17 MB/sscipy-0.19.1-p  31% |#########                      | ETA:  0:00:00  30.21 MB/sscipy-0.19.1-p  32% |#########                      | ETA:  0:00:00  30.26 MB/sscipy-0.19.1-p  33% |##########                     | ETA:  0:00:00  30.30 MB/sscipy-0.19.1-p  34% |##########                     | ETA:  0:00:00  30.35 MB/sscipy-0.19.1-p  35% |##########                     | ETA:  0:00:00  30.39 MB/sscipy-0.19.1-p  36% |###########                    | ETA:  0:00:00  30.41 MB/sscipy-0.19.1-p  37% |###########                    | ETA:  0:00:00  30.42 MB/sscipy-0.19.1-p  38% |###########                    | ETA:  0:00:00  30.43 MB/sscipy-0.19.1-p  39% |############                   | ETA:  0:00:00  29.92 MB/sscipy-0.19.1-p  40% |############                   | ETA:  0:00:00  29.97 MB/sscipy-0.19.1-p  41% |############                   | ETA:  0:00:00  30.05 MB/sscipy-0.19.1-p  42% |#############                  | ETA:  0:00:00  30.07 MB/sscipy-0.19.1-p  43% |#############                  | ETA:  0:00:00  30.10 MB/sscipy-0.19.1-p  45% |#############                  | ETA:  0:00:00  30.08 MB/sscipy-0.19.1-p  46% |##############                 | ETA:  0:00:00  30.08 MB/sscipy-0.19.1-p  47% |##############                 | ETA:  0:00:00  30.08 MB/sscipy-0.19.1-p  48% |##############                 | ETA:  0:00:00  30.04 MB/sscipy-0.19.1-p  49% |###############                | ETA:  0:00:00  30.06 MB/sscipy-0.19.1-p  50% |###############                | ETA:  0:00:00  30.08 MB/sscipy-0.19.1-p  51% |###############                | ETA:  0:00:00  30.11 MB/sscipy-0.19.1-p  52% |################               | ETA:  0:00:00  29.74 MB/sscipy-0.19.1-p  53% |################               | ETA:  0:00:00  29.53 MB/sscipy-0.19.1-p  54% |################               | ETA:  0:00:00  29.49 MB/sscipy-0.19.1-p  55% |#################              | ETA:  0:00:00  29.46 MB/sscipy-0.19.1-p  56% |#################              | ETA:  0:00:00  29.49 MB/sscipy-0.19.1-p  57% |#################              | ETA:  0:00:00  29.54 MB/sscipy-0.19.1-p  58% |##################             | ETA:  0:00:00  29.57 MB/sscipy-0.19.1-p  60% |##################             | ETA:  0:00:00  29.60 MB/sscipy-0.19.1-p  61% |##################             | ETA:  0:00:00  29.57 MB/sscipy-0.19.1-p  62% |###################            | ETA:  0:00:00  29.61 MB/sscipy-0.19.1-p  63% |###################            | ETA:  0:00:00  29.75 MB/sscipy-0.19.1-p  64% |###################            | ETA:  0:00:00  29.82 MB/sscipy-0.19.1-p  65% |####################           | ETA:  0:00:00  29.86 MB/sscipy-0.19.1-p  66% |####################           | ETA:  0:00:00  29.99 MB/sscipy-0.19.1-p  67% |####################           | ETA:  0:00:00  30.18 MB/sscipy-0.19.1-p  68% |#####################          | ETA:  0:00:00  30.36 MB/sscipy-0.19.1-p  69% |#####################          | ETA:  0:00:00  30.52 MB/sscipy-0.19.1-p  70% |#####################          | ETA:  0:00:00  30.67 MB/sscipy-0.19.1-p  71% |######################         | ETA:  0:00:00  30.84 MB/sscipy-0.19.1-p  72% |######################         | ETA:  0:00:00   6.89 MB/sscipy-0.19.1-p  73% |######################         | ETA:  0:00:00   6.92 MB/sscipy-0.19.1-p  74% |#######################        | ETA:  0:00:00   7.00 MB/sscipy-0.19.1-p  75% |#######################        | ETA:  0:00:00   7.09 MB/sscipy-0.19.1-p  76% |#######################        | ETA:  0:00:00   7.17 MB/sscipy-0.19.1-p  77% |########################       | ETA:  0:00:00   7.26 MB/sscipy-0.19.1-p  78% |########################       | ETA:  0:00:00   7.34 MB/sscipy-0.19.1-p  79% |########################       | ETA:  0:00:00   7.43 MB/sscipy-0.19.1-p  80% |#########################      | ETA:  0:00:00   7.51 MB/sscipy-0.19.1-p  81% |#########################      | ETA:  0:00:00   7.59 MB/sscipy-0.19.1-p  82% |#########################      | ETA:  0:00:00   7.68 MB/sscipy-0.19.1-p  84% |##########################     | ETA:  0:00:00   7.76 MB/sscipy-0.19.1-p  85% |##########################     | ETA:  0:00:00   7.84 MB/sscipy-0.19.1-p  86% |##########################     | ETA:  0:00:00   7.92 MB/sscipy-0.19.1-p  87% |###########################    | ETA:  0:00:00   8.00 MB/sscipy-0.19.1-p  88% |###########################    | ETA:  0:00:00   8.08 MB/sscipy-0.19.1-p  89% |###########################    | ETA:  0:00:00   8.16 MB/sscipy-0.19.1-p  90% |############################   | ETA:  0:00:00   8.24 MB/sscipy-0.19.1-p  91% |############################   | ETA:  0:00:00   8.32 MB/sscipy-0.19.1-p  92% |############################   | ETA:  0:00:00   8.40 MB/sscipy-0.19.1-p  93% |#############################  | ETA:  0:00:00   8.48 MB/sscipy-0.19.1-p  94% |#############################  | ETA:  0:00:00   8.56 MB/sscipy-0.19.1-p  95% |#############################  | ETA:  0:00:00   8.65 MB/sscipy-0.19.1-p  96% |############################## | ETA:  0:00:00   8.73 MB/sscipy-0.19.1-p  97% |############################## | ETA:  0:00:00   8.81 MB/sscipy-0.19.1-p  99% |############################## | ETA:  0:00:00   8.89 MB/sscipy-0.19.1-p 100% |###############################| Time: 0:00:02   8.97 MB/s
INFO: Installing pyamg via the Conda pyamg package...
Fetching package metadata ...........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.5/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    pyamg: 2.2.1-np113py27_0

pyamg-2.2.1-np   0% |                              | ETA:  --:--:--   0.00  B/spyamg-2.2.1-np   1% |                               | ETA:  0:00:00  16.47 MB/spyamg-2.2.1-np   3% |#                              | ETA:  0:00:00  19.88 MB/spyamg-2.2.1-np   5% |#                              | ETA:  0:00:00  23.39 MB/spyamg-2.2.1-np   7% |##                             | ETA:  0:00:00  24.64 MB/spyamg-2.2.1-np   9% |###                            | ETA:  0:00:00  20.04 MB/spyamg-2.2.1-np  11% |###                            | ETA:  0:00:00  19.07 MB/spyamg-2.2.1-np  13% |####                           | ETA:  0:00:00  19.46 MB/spyamg-2.2.1-np  15% |####                           | ETA:  0:00:00  20.70 MB/spyamg-2.2.1-np  17% |#####                          | ETA:  0:00:00  21.99 MB/spyamg-2.2.1-np  19% |######                         | ETA:  0:00:00  22.98 MB/spyamg-2.2.1-np  21% |######                         | ETA:  0:00:00  23.92 MB/spyamg-2.2.1-np  23% |#######                        | ETA:  0:00:00  24.80 MB/spyamg-2.2.1-np  25% |#######                        | ETA:  0:00:00  25.92 MB/spyamg-2.2.1-np  27% |########                       | ETA:  0:00:00  26.48 MB/spyamg-2.2.1-np  29% |#########                      | ETA:  0:00:00  27.51 MB/spyamg-2.2.1-np  31% |#########                      | ETA:  0:00:00  27.92 MB/spyamg-2.2.1-np  33% |##########                     | ETA:  0:00:00  28.48 MB/spyamg-2.2.1-np  35% |###########                    | ETA:  0:00:00  29.00 MB/spyamg-2.2.1-np  37% |###########                    | ETA:  0:00:00  29.53 MB/spyamg-2.2.1-np  39% |############                   | ETA:  0:00:00  29.83 MB/spyamg-2.2.1-np  41% |############                   | ETA:  0:00:00  29.95 MB/spyamg-2.2.1-np  43% |#############                  | ETA:  0:00:00  30.36 MB/spyamg-2.2.1-np  45% |##############                 | ETA:  0:00:00  30.67 MB/spyamg-2.2.1-np  47% |##############                 | ETA:  0:00:00  30.99 MB/spyamg-2.2.1-np  49% |###############                | ETA:  0:00:00  31.38 MB/spyamg-2.2.1-np  51% |###############                | ETA:  0:00:00  31.66 MB/spyamg-2.2.1-np  53% |################               | ETA:  0:00:00  31.98 MB/spyamg-2.2.1-np  55% |#################              | ETA:  0:00:00  32.53 MB/spyamg-2.2.1-np  57% |#################              | ETA:  0:00:00  33.13 MB/spyamg-2.2.1-np  59% |##################             | ETA:  0:00:00  33.79 MB/spyamg-2.2.1-np  61% |###################            | ETA:  0:00:00  34.36 MB/spyamg-2.2.1-np  63% |###################            | ETA:  0:00:00  35.03 MB/spyamg-2.2.1-np  65% |####################           | ETA:  0:00:00  35.67 MB/spyamg-2.2.1-np  67% |####################           | ETA:  0:00:00  36.25 MB/spyamg-2.2.1-np  69% |#####################          | ETA:  0:00:00  36.83 MB/spyamg-2.2.1-np  71% |######################         | ETA:  0:00:00  37.43 MB/spyamg-2.2.1-np  73% |######################         | ETA:  0:00:00  38.01 MB/spyamg-2.2.1-np  75% |#######################        | ETA:  0:00:00  38.56 MB/spyamg-2.2.1-np  77% |#######################        | ETA:  0:00:00  39.12 MB/spyamg-2.2.1-np  79% |########################       | ETA:  0:00:00  39.64 MB/spyamg-2.2.1-np  81% |#########################      | ETA:  0:00:00  40.15 MB/spyamg-2.2.1-np  83% |#########################      | ETA:  0:00:00  40.66 MB/spyamg-2.2.1-np  85% |##########################     | ETA:  0:00:00  41.16 MB/spyamg-2.2.1-np  87% |##########################     | ETA:  0:00:00  41.43 MB/spyamg-2.2.1-np  89% |###########################    | ETA:  0:00:00  41.92 MB/spyamg-2.2.1-np  90% |############################   | ETA:  0:00:00  42.40 MB/spyamg-2.2.1-np  92% |############################   | ETA:  0:00:00  42.87 MB/spyamg-2.2.1-np  94% |#############################  | ETA:  0:00:00  43.34 MB/spyamg-2.2.1-np  96% |############################## | ETA:  0:00:00  43.78 MB/spyamg-2.2.1-np  98% |############################## | ETA:  0:00:00  44.01 MB/spyamg-2.2.1-np 100% |###############################| ETA:  0:00:00  44.09 MB/spyamg-2.2.1-np 100% |###############################| Time: 0:00:00  43.87 MB/s
=================================================
Test 1: Julia `\` vs PyAMG Blackbox `solve` (2D) Laplacian
 \ :   1.272364 seconds (556.56 k allocations: 32.140 MB, 13.75% gc time)
PyAMG-Warmup: /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/python2.7/site-packages/pyamg/strength.py:533: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  if B == 'ones':
  2.945474 seconds (1.44 M allocations: 62.804 MB, 0.66% gc time)
PyAMG:   0.260181 seconds (268 allocations: 942.203 KB)
|x_\ - x_amg|_∞ = 1.3375411889171573e-12
|A x_amg - b|_∞ = 3.989264030224149e-9
=================================================
Test 2: Julia `\` vs PyAMG Blackbox `solve` (3D)
 \ :   0.604436 seconds (68 allocations: 93.885 MB, 2.26% gc time)
PyAMG-Warmup:   0.950803 seconds (267 allocations: 3.224 MB)
PyAMG:   0.920157 seconds (267 allocations: 3.224 MB)
|x_\ - x_amg|_∞ = 6.210518210814087e-13
|A x_amg - b|_∞ = 9.384990562466555e-10
=================================================
Test 3: RugeStubenSolver (3D)
        50 x 50 x 50 grid = 125k dofs 
Create solver:   0.630779 seconds (34.53 k allocations: 15.485 MB)
First solve:   0.413308 seconds (82.23 k allocations: 4.084 MB)
Second solve: (tol 1e-9)  0.385366 seconds (8.47 k allocations: 1.331 MB)
Third solve: (tol 1e-6)  0.172018 seconds (175 allocations: 983.188 KB, 1.21% gc time)
|A x_amg - b|_∞ = 2.532215191308751e-6
=================================================
Test 4: \, ldiv, and kwargs
=================================================
Test 5: AMG as a preconditioner
        100 x 100 Dirichlet problem, TOL = 1e-4
        PyAMG vs CG vs PCG  (using IterativeSolvers)
Plain CG:
  1.763654 seconds (2.31 M allocations: 121.129 MB, 3.40% gc time)
  0.033812 seconds (844 allocations: 20.865 MB, 14.09% gc time)
PyAMG-preconditionerd CG:  (see `aspreconditioner`)
  0.155839 seconds (32.10 k allocations: 2.355 MB)
  0.014375 seconds (483 allocations: 1.010 MB)
PyAMG solver
  0.016827 seconds (196 allocations: 85.781 KB)
  0.016822 seconds (195 allocations: 85.734 KB)
|x_cg-x| = 3.5312070957405564e-6 
|x_pcg-x| = 2.779657213388534e-6
|x_pyamg-x| = 1.0901104405281368e-7
INFO: PyAMG tests passed
INFO: Removing Combinatorics v0.4.1
INFO: Removing DataStructures v0.6.1
INFO: Removing IterTools v0.1.0
INFO: Removing IterativeSolvers v0.3.1
INFO: Removing LinearMaps v0.3.0
INFO: Removing Polynomials v0.1.6
INFO: Removing RecipesBase v0.1.0
INFO: Removing SpecialFunctions v0.2.0
INFO: Removing StatsBase v0.17.0
INFO: Removing SugarBLAS v0.0.4
INFO: Removing UnicodePlots v0.2.5

>>> End of log
