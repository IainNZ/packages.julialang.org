>>> 'Pkg.add("XMLDict")' log
[ Info: Installing DataStructures v0.7.4
[ Info: Installing IterTools v0.2.1
[ Info: Installing LightXML v0.5.0
[ Info: Installing XMLDict v0.1.3
[ Info: Building LightXML
┌ Warning: `is_windows` is deprecated, use `Sys.iswindows` instead.
│   caller = top-level scope
└ @ Core :0
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of XMLDict
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("XMLDict")' log
Julia Version 0.7.0-DEV.3519
Commit 5ecba29832 (2018-01-22 20:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3500 MHz    5364504 s       6740 s     270731 s    1573097 s         93 s
       #2  3500 MHz    1310704 s         94 s     108463 s    6908704 s          2 s
       
  Memory: 2.93927001953125 GB (1559.4375 MB free)
  Uptime: 84677.0 sec
  Load Avg:  0.9970703125  0.95654296875  1.04541015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.16.4
 - XMLDict                       0.1.3
6 additional packages:
 - Compat                        0.49.0
 - DataStructures                0.7.4
 - IterTools                     0.2.1
 - LightXML                      0.5.0
 - Nullables                     0.0.3
 - tmpoFILxC                     0.0.0-             non-repo (unregistered)
[ Info: Computing test dependencies for XMLDict...
[ Info: No packages to install, update or remove
[ Info: Testing XMLDict
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:26.
│ Use `mutable struct` instead.
└ @ nothing XMLDict.jl:26
┌ Warning: Deprecated syntax `type` at /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:26.
│ Use `mutable struct` instead.
└ @ nothing XMLDict.jl:26
WARNING: importing deprecated binding Base.Associative into XMLDict.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:26
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:245
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:250
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:251
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:253
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/src/XMLDict.jl:273
WARNING: Base.Test is deprecated, run `using Test` instead.
  likely near /home/vagrant/.julia/v0.7/XMLDict/test/runtests.jl:2
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = parse_xml(::String) at XMLDict.jl:61
└ @ XMLDict XMLDict.jl:61
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = parse_xml at XMLDict.jl:61 [inlined]
└ @ Core XMLDict.jl:61
┌ Warning: `readstring(filename::AbstractString)` is deprecated, use `read(filename, String)` instead.
│   caller = top-level scope
└ @ Core :0
┌ Warning: Deprecated syntax `implicit assignment to global variable `xml``.
│ Use `global xml` instead.
└ @ nothing none:0
┌ Warning: Loop variable `xml` overwrites a variable in an enclosing scope. In the future the variable will be local to the loop instead.
└ @ nothing none:0
┌ Warning: `readandwrite(::Cmd)` is deprecated in favor of `open(::Cmd, "r+").
│ You may read/write the returned process object for access to stdio.
│   caller = normalise_xml(::String) at runtests.jl:432
└ @ Main runtests.jl:432
┌ Warning: `readstring(s::IO)` is deprecated, use `read(s, String)` instead.
│   caller = normalise_xml(::String) at runtests.jl:436
└ @ Main runtests.jl:436
┌ Warning: `finalizer(o, f::Function)` is deprecated, use `finalizer(f, o)` instead.
│   caller = parse_xml at XMLDict.jl:61 [inlined]
└ @ Core XMLDict.jl:61
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attrs at XMLDict.jl:250 [inlined]
└ @ Core XMLDict.jl:250
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = nodes at XMLDict.jl:251 [inlined]
└ @ Core XMLDict.jl:251
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = attrs at XMLDict.jl:250 [inlined]
└ @ Core XMLDict.jl:250
┌ Warning: In `filter(f, dict)`, `f` is now passed a single pair instead of two arguments.
│   caller = nodes at XMLDict.jl:251 [inlined]
└ @ Core XMLDict.jl:251
<?xml version="1.0"?>
<GetUserResponse>
  <GetUserResult>
    <User>
      <Arn>arn:aws:iam::012541411202:root</Arn>
      <UserId>012541411202</UserId>
      <PasswordLastUsed>2015-12-23T22:45:36Z</PasswordLastUsed>
      <CreateDate>2015-09-15T01:07:23Z</CreateDate>
    </User>
  </GetUserResult>
  <ResponseMetadata>
    <RequestId>837446c9-abaf-11e5-9f63-65ae4344bd73</RequestId>
  </ResponseMetadata>
</GetUserResponse>

xargs: node: No such file or directory
ERROR: LoadError: failed process: Process(`xargs -0 node -e "var o; o = JSON.parse(process.argv[1]);
                            var u; u = require('util'); 
                            console.log(u.inspect(o, {depth:null, colors: true}));"`, ProcessExited(127)) [127]
Stacktrace:
 [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
 [2] pipeline_error(::Base.Process) at ./process.jl:698
 [3] open(::getfield(, Symbol("##1#2")){DataStructures.OrderedDict{Any,Any}}, ::Cmd, ::String, ::Base.PipeEndpoint) at ./process.jl:639
 [4] json_dump(::DataStructures.OrderedDict{Any,Any}) at /home/vagrant/.julia/v0.7/XMLDict/test/runtests.jl:16
 [5] top-level scope at ./<missing>:447
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:1011
 [8] include(::Module, ::String) at ./sysimg.jl:26
 [9] process_options(::Base.JLOptions) at ./client.jl:334
 [10] _start() at ./client.jl:386
in expression starting at /home/vagrant/.julia/v0.7/XMLDict/test/runtests.jl:441
┌ Error: ------------------------------------------------------------
│ # Testing failed for XMLDict
│   exception =
│    failed process: Process(`/home/vagrant/julia/bin/julia -Cnative -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --warn-overwrite=yes --startup-file=yes /home/vagrant/.julia/v0.7/XMLDict/test/runtests.jl`, ProcessExited(1)) [1]
│    Stacktrace:
│     [1] error(::String, ::Base.Process, ::String, ::Int64, ::String) at ./error.jl:42
│     [2] pipeline_error(::Base.Process) at ./process.jl:698
│     [3] run(::Cmd) at ./process.jl:660
│     [4] (::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}})() at ./pkg/entry.jl:729
│     [5] cd(::getfield(Base.Pkg.Entry, Symbol("##89#92")){Bool,String,Array{AbstractString,1}}, ::String) at ./file.jl:70
│     [6] #test!#88(::Bool, ::Function, ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./pkg/entry.jl:717
│     [7] (::getfield(Base.Pkg.Entry, Symbol("#kw##test!")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test!), ::String, ::Array{AbstractString,1}, ::Array{AbstractString,1}, ::Array{AbstractString,1}) at ./<missing>:0
│     [8] #test#96(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:756
│     [9] (::getfield(Base.Pkg.Entry, Symbol("#kw##test")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Entry.test), ::Array{AbstractString,1}) at ./<missing>:0
│     [10] (::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:36
│     [11] cd(::getfield(Base.Pkg.Dir, Symbol("##4#7")){Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}},typeof(Base.Pkg.Entry.test),Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:70
│     [12] #cd#1(::Base.Iterators.IndexValue{Symbol,Bool,Tuple{Symbol},NamedTuple{(:coverage,),Tuple{Bool}}}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./pkg/dir.jl:36
│     [13] (::getfield(Base.Pkg.Dir, Symbol("#kw##cd")))(::NamedTuple{(:coverage,),Tuple{Bool}}, ::typeof(Base.Pkg.Dir.cd), ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N} where N) at ./<missing>:0
│     [14] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [15] test(::String, ::Vararg{String,N} where N) at ./pkg/pkg.jl:274
│     [16] top-level scope
│     [17] eval at ./boot.jl:295 [inlined]
│     [18] eval(::Module, ::Expr) at ./sysimg.jl:71
│     [19] process_options(::Base.JLOptions) at ./client.jl:311
│     [20] _start() at ./client.jl:386
└ @ Base.Pkg.Entry entry.jl:732
[ Info: No packages to install, update or remove
ERROR: XMLDict had test errors

>>> End of log
