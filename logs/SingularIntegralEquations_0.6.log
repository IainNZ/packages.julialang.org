>>> 'Pkg.add("SingularIntegralEquations")' log
INFO: Cloning cache of SingularIntegralEquations from https://github.com/JuliaApproximation/SingularIntegralEquations.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.3
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.2.0
INFO: Installing HierarchicalMatrices v0.0.1
INFO: Installing IntervalSets v0.0.5
INFO: Installing LowRankApprox v0.0.2
INFO: Installing NaNMath v0.2.4
INFO: Installing ProgressMeter v0.3.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SingularIntegralEquations v0.2.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.14.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SingularIntegralEquations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SingularIntegralEquations")' log
Julia Version 0.6.0-rc1.0
Commit 6bdb395 (2017-05-07 00:00 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.49609375 MB free)
Uptime: 58649.0 sec
Load Avg:  0.9931640625  0.9853515625  1.00537109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3862637 s       7124 s     158632 s     875722 s         50 s
#2  3499 MHz     716109 s         39 s      78446 s    4982412 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.12.0
 - SingularIntegralEquations     0.2.3
18 additional packages:
 - ApproxFun                     0.6.0
 - BandedMatrices                0.2.3
 - Calculus                      0.2.2
 - Compat                        0.25.2
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.2.0
 - HierarchicalMatrices          0.0.1
 - IntervalSets                  0.0.5
 - LowRankApprox                 0.0.2
 - NaNMath                       0.2.4
 - ProgressMeter                 0.3.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.14.1
 - ToeplitzMatrices              0.2.0
INFO: Testing SingularIntegralEquations

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:552
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] process_options(::Base.JLOptions) at ./client.jl:286
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/singfuncauchy.jl, in expression starting on line 25
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.
Special function tests
Hilbert test
Stieltjes test
Stieltjes integral test
Cauchy test
  1.187838 seconds (1.42 M allocations: 58.142 MiB, 4.34% gc time)
  1.110941 seconds (399.65 k allocations: 20.169 MiB, 1.62% gc time)
  1.103077 seconds (361.85 k allocations: 18.134 MiB, 3.03% gc time)
    Two circle test 1
 15.092056 seconds (16.81 M allocations: 793.576 MiB, 4.72% gc time)
    Two circle test 3
  1.362124 seconds (536.33 k allocations: 31.264 MiB, 1.60% gc time)
  1.380102 seconds (531.22 k allocations: 30.482 MiB, 1.48% gc time)
    Two circle test 3
  1.534221 seconds (1.79 M allocations: 93.459 MiB, 6.14% gc time)
   Legendre test
Arc test
Functional test
Stieltjes moment test
Stieltjes integral test
Log kernel test
Curve Test
FundamentalSolutions test
Convolution ProductFun test
Chebyshev addition test
Fourier on PeriodicInterval tests
Laurent on PeriodicInterval tests
Timing tests: 
  0.269418 seconds (1.41 M allocations: 56.535 MiB, 13.74% gc time)
  0.285883 seconds (1.67 M allocations: 66.156 MiB, 16.66% gc time)
Chebyshev addition: Time should be ~0.01 seconds.
  0.051846 seconds (46.51 k allocations: 65.428 MiB, 53.17% gc time)
CosSpace addition: Time should be ~0.05 seconds.
  0.102966 seconds (44.63 k allocations: 129.637 MiB, 45.61% gc time)
Laurent addition: Time should be ~0.14 seconds.
LowRankMatrix test
Fractal test
HierarchicalVector test
Hierarchical solve test
  0.008529 seconds (16 allocations: 2.448 MiB)
  0.000455 seconds (2.08 k allocations: 677.063 KiB)
  0.000395 seconds (910 allocations: 271.281 KiB)
  2.909071 seconds (1.62 M allocations: 92.660 MiB, 3.85% gc time)
Adaptive QR  forward error norm is: 9.108597947589022e-16
  2.318448 seconds (2.11 M allocations: 98.086 MiB, 6.30% gc time)
  0.020531 seconds (46.34 k allocations: 1.834 MiB)
The hierarchical forward error norm is: 1.803492838640389e-15
  3.770327 seconds (1.57 M allocations: 96.652 MiB, 3.16% gc time)
Adaptive QR  forward error norm is: 3.887950934049602e-15
ERROR: LoadError: LoadError: AssertionError: length(data) == 2 ^ n
Stacktrace:
 [1] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}, ::Int64) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:48
 [2] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:45
 [3] mapfoldl_impl(::ApproxFun.#domain, ::Base.#*, ::SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},ApproxFun.Segment{Complex{Float64}}}}}}, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}, ::Int64) at ./reduce.jl:43
 [4] mapfoldl(::ApproxFun.#domain, ::Function, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}) at ./reduce.jl:73
 [5] âŠ—(::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}, ::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/TensorSpace.jl:316
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/hierarchicalsolveTest.jl, in expression starting on line 103
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl, in expression starting on line 78
======================[ ERROR: SingularIntegralEquations ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SingularIntegralEquations had test errors

>>> End of log
