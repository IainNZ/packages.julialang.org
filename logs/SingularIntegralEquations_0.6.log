>>> 'Pkg.add("SingularIntegralEquations")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of SingularIntegralEquations from https://github.com/JuliaApproximation/SingularIntegralEquations.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.2
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SingularIntegralEquations v0.2.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.13.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SingularIntegralEquations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SingularIntegralEquations")' log
Julia Version 0.6.0-pre.beta.445
Commit 41757ef (2017-05-01 00:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (334.82421875 MB free)
Uptime: 60136.0 sec
Load Avg:  0.89404296875  0.98779296875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3732747 s       3266 s     158484 s    1159735 s         46 s
#2  3500 MHz     636788 s       3000 s      75187 s    5210172 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.9.1
 - SingularIntegralEquations     0.2.3
15 additional packages:
 - ApproxFun                     0.6.0
 - BandedMatrices                0.2.2
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.13.1
 - ToeplitzMatrices              0.2.0
INFO: Testing SingularIntegralEquations

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] process_options(::Base.JLOptions) at ./client.jl:286
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/singfuncauchy.jl, in expression starting on line 25
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.
Special function tests
Hilbert test
Stieltjes test
Stieltjes integral test
Cauchy test
  1.154477 seconds (1.41 M allocations: 58.065 MiB, 2.59% gc time)
  1.110536 seconds (397.98 k allocations: 20.077 MiB, 1.54% gc time)
  1.015832 seconds (360.43 k allocations: 18.278 MiB)
    Two circle test 1
 14.738851 seconds (16.80 M allocations: 793.085 MiB, 4.35% gc time)
    Two circle test 3
  1.442549 seconds (534.69 k allocations: 31.476 MiB, 2.93% gc time)
  1.389570 seconds (530.08 k allocations: 30.218 MiB, 2.63% gc time)
    Two circle test 3
  1.532548 seconds (1.79 M allocations: 93.447 MiB, 4.89% gc time)
   Legendre test
Arc test
Functional test
Stieltjes moment test
Stieltjes integral test
Log kernel test
Curve Test
FundamentalSolutions test
Convolution ProductFun test
Chebyshev addition test
Fourier on PeriodicInterval tests
Laurent on PeriodicInterval tests
Timing tests: 
  0.275926 seconds (1.41 M allocations: 56.534 MiB, 15.07% gc time)
  0.297513 seconds (1.67 M allocations: 66.156 MiB, 18.46% gc time)
Chebyshev addition: Time should be ~0.01 seconds.
  0.364367 seconds (46.51 k allocations: 65.429 MiB, 93.49% gc time)
CosSpace addition: Time should be ~0.05 seconds.
  0.388053 seconds (44.63 k allocations: 129.637 MiB, 86.71% gc time)
Laurent addition: Time should be ~0.14 seconds.
LowRankMatrix test
Fractal test
HierarchicalVector test
Hierarchical solve test
  0.008726 seconds (16 allocations: 2.448 MiB)
  0.000519 seconds (2.08 k allocations: 677.063 KiB)
  0.000332 seconds (910 allocations: 271.281 KiB)
  3.025888 seconds (1.62 M allocations: 92.306 MiB, 3.72% gc time)
Adaptive QR  forward error norm is: 9.108597947589022e-16
  2.344511 seconds (2.11 M allocations: 97.860 MiB, 5.23% gc time)
  0.015265 seconds (46.34 k allocations: 1.834 MiB)
The hierarchical forward error norm is: 1.803492838640389e-15
  3.792208 seconds (1.56 M allocations: 93.436 MiB, 3.17% gc time)
Adaptive QR  forward error norm is: 3.887950934049602e-15
ERROR: LoadError: LoadError: AssertionError: length(data) == 2 ^ n
Stacktrace:
 [1] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}, ::Int64) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:48
 [2] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:45
 [3] mapfoldl_impl(::ApproxFun.#domain, ::Base.#*, ::SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},ApproxFun.Segment{Complex{Float64}}}}}}, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}, ::Int64) at ./reduce.jl:43
 [4] mapfoldl(::ApproxFun.#domain, ::Function, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}) at ./reduce.jl:73
 [5] âŠ—(::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}, ::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/TensorSpace.jl:316
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/hierarchicalsolveTest.jl, in expression starting on line 103
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl, in expression starting on line 78
======================[ ERROR: SingularIntegralEquations ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SingularIntegralEquations had test errors

>>> End of log
