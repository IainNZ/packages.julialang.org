>>> 'Pkg.add("SingularIntegralEquations")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of SingularIntegralEquations from https://github.com/JuliaApproximation/SingularIntegralEquations.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.6.0
INFO: Installing BandedMatrices v0.2.2
INFO: Installing Calculus v0.2.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DualNumbers v0.3.0
INFO: Installing FastGaussQuadrature v0.2.1
INFO: Installing FastTransforms v0.1.0
INFO: Installing IntervalSets v0.0.5
INFO: Installing NaNMath v0.2.4
INFO: Installing RecipesBase v0.1.0
INFO: Installing SingularIntegralEquations v0.2.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StaticArrays v0.5.0
INFO: Installing StatsBase v0.14.1
INFO: Installing ToeplitzMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SingularIntegralEquations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SingularIntegralEquations")' log
Julia Version 0.6.0-pre.beta.459
Commit 609b3d1 (2017-05-02 04:05 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (215.66796875 MB free)
Uptime: 58990.0 sec
Load Avg:  0.9130859375  0.9619140625  0.94921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3618888 s       6132 s     155693 s    1182909 s         42 s
#2  3500 MHz     647436 s         74 s      76946 s    5072321 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.10.0
 - SingularIntegralEquations     0.2.3
15 additional packages:
 - ApproxFun                     0.6.0
 - BandedMatrices                0.2.2
 - Calculus                      0.2.2
 - Compat                        0.24.0
 - DataStructures                0.5.3
 - DualNumbers                   0.3.0
 - FastGaussQuadrature           0.2.1
 - FastTransforms                0.1.0
 - IntervalSets                  0.0.5
 - NaNMath                       0.2.4
 - RecipesBase                   0.1.0
 - SpecialFunctions              0.1.1
 - StaticArrays                  0.5.0
 - StatsBase                     0.14.1
 - ToeplitzMatrices              0.2.0
INFO: Testing SingularIntegralEquations

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:316
 [3] include_from_node1(::String) at ./loading.jl:552
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:552
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:235
 [9] process_options(::Base.JLOptions) at ./client.jl:286
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/singfuncauchy.jl, in expression starting on line 25
WARNING: Method definition A_mul_B!(AbstractArray{T, 1} where T, Base.LinAlg.Diagonal{T} where T, AbstractArray{T, 1} where T) in module LinAlg at linalg/diagonal.jl:229 overwritten in module SingularIntegralEquations at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/LinearAlgebra/HierarchicalMatrix.jl:198.
Special function tests
Hilbert test
Stieltjes test
Stieltjes integral test
Cauchy test
  1.195263 seconds (1.41 M allocations: 58.048 MiB, 4.23% gc time)
  1.106694 seconds (397.99 k allocations: 20.089 MiB, 1.60% gc time)
  1.072231 seconds (360.44 k allocations: 18.166 MiB, 1.77% gc time)
    Two circle test 1
 15.173767 seconds (16.80 M allocations: 793.908 MiB, 4.42% gc time)
    Two circle test 3
  1.313363 seconds (534.70 k allocations: 31.420 MiB, 3.30% gc time)
  1.326889 seconds (530.06 k allocations: 30.189 MiB, 2.73% gc time)
    Two circle test 3
  1.411417 seconds (1.79 M allocations: 93.464 MiB, 4.87% gc time)
   Legendre test
Arc test
Functional test
Stieltjes moment test
Stieltjes integral test
Log kernel test
Curve Test
FundamentalSolutions test
Convolution ProductFun test
Chebyshev addition test
Fourier on PeriodicInterval tests
Laurent on PeriodicInterval tests
Timing tests: 
  0.298646 seconds (1.41 M allocations: 56.534 MiB, 19.67% gc time)
  0.296655 seconds (1.67 M allocations: 66.156 MiB, 15.39% gc time)
Chebyshev addition: Time should be ~0.01 seconds.
  0.370471 seconds (46.51 k allocations: 65.429 MiB, 94.40% gc time)
CosSpace addition: Time should be ~0.05 seconds.
  0.378161 seconds (44.63 k allocations: 129.637 MiB, 90.01% gc time)
Laurent addition: Time should be ~0.14 seconds.
LowRankMatrix test
Fractal test
HierarchicalVector test
Hierarchical solve test
  0.008858 seconds (16 allocations: 2.448 MiB)
  0.000435 seconds (2.08 k allocations: 677.063 KiB)
  0.000280 seconds (910 allocations: 271.281 KiB)
  2.979766 seconds (1.61 M allocations: 92.229 MiB, 3.68% gc time)
Adaptive QR  forward error norm is: 9.108597947589022e-16
  2.323354 seconds (2.11 M allocations: 97.977 MiB, 4.91% gc time)
  0.014218 seconds (46.34 k allocations: 1.834 MiB)
The hierarchical forward error norm is: 1.803492838640389e-15
  3.646968 seconds (1.56 M allocations: 93.320 MiB, 3.06% gc time)
Adaptive QR  forward error norm is: 3.887950934049602e-15
ERROR: LoadError: LoadError: AssertionError: length(data) == 2 ^ n
Stacktrace:
 [1] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}, ::Int64) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:48
 [2] SingularIntegralEquations.HierarchicalDomain(::Array{ApproxFun.Segment{Complex{Float64}},1}) at /home/vagrant/.julia/v0.6/SingularIntegralEquations/src/Operators/HierarchicalDSF.jl:45
 [3] mapfoldl_impl(::ApproxFun.#domain, ::Base.#*, ::SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},SingularIntegralEquations.HierarchicalDomain{ApproxFun.Segment{Complex{Float64}},Complex{Float64},Tuple{ApproxFun.Segment{Complex{Float64}},ApproxFun.Segment{Complex{Float64}}}}}}, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}, ::Int64) at ./reduce.jl:43
 [4] mapfoldl(::ApproxFun.#domain, ::Function, ::Tuple{SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}}) at ./reduce.jl:73
 [5] âŠ—(::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}, ::SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},SingularIntegralEquations.HierarchicalSpace{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},Float64,Tuple{ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}},ApproxFun.Chebyshev{ApproxFun.Segment{Complex{Float64}}}}}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/TensorSpace.jl:316
 [6] include_from_node1(::String) at ./loading.jl:552
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:552
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/hierarchicalsolveTest.jl, in expression starting on line 103
while loading /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl, in expression starting on line 78
======================[ ERROR: SingularIntegralEquations ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SingularIntegralEquations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SingularIntegralEquations had test errors

>>> End of log
