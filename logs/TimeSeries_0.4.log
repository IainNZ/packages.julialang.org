>>> 'Pkg.add("TimeSeries")' log
INFO: Installing TimeSeries v0.8.8
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TimeSeries
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TimeSeries")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (722.6796875 MB free)
Uptime: 50190.0 sec
Load Avg:  1.0087890625  0.9951171875  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2346185 s        111 s     191534 s    1987592 s        110 s
#2  3499 MHz    1658923 s       6376 s     167269 s    3008762 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.9.1
 - TimeSeries                    0.8.8
1 additional packages:
 - Compat                        0.26.0
INFO: Computing test dependencies for TimeSeries...
INFO: Installing FactCheck v0.4.3
INFO: Installing MarketData v0.4.0
INFO: Testing TimeSeries
field extraction methods work: ....
type constructors enforce invariants: ..................
construction without colnames: ....
conversion methods: ....
ordered collection methods: ..........................
show methods don't throw errors: 500x4 TimeSeries.TimeArray{Float64,2,Date,Array{Float64,2}} 2000-01-03 to 2001-12-31

             Open      High      Low       Close     
2000-01-03 | 104.88    112.5     101.69    111.94    
2000-01-04 | 108.25    110.62    101.19    102.5     
2000-01-05 | 103.75    110.56    103.0     104.0     
2000-01-06 | 106.12    107.0     95.0      95.0      
⋮
2001-12-26 | 21.35     22.3      21.14     21.49     
2001-12-27 | 21.58     22.25     21.58     22.07     
2001-12-28 | 21.97     23.0      21.96     22.43     
2001-12-31 | 22.51     22.66     21.83     21.9      
4x4 TimeSeries.TimeArray{Float64,2,Date,Array{Float64,2}} 2000-01-03 to 2000-01-06

             Open      High      Low       Close     
2000-01-03 | 104.88    112.5     101.69    111.94    
2000-01-04 | 108.25    110.62    101.19    102.5     
2000-01-05 | 103.75    110.56    103.0     104.0     
2000-01-06 | 106.12    107.0     95.0      95.0      
0x4 TimeSeries.TimeArray{Float64,2,Date,Array{Float64,2}}

   Open   High   Low    Close  
2x1 TimeSeries.TimeArray{Float64,1,Date,Array{Float64,1}} 2000-01-03 to 2000-01-04

             Close     
2000-01-03 | NaN       
2000-01-04 | 111.94    

find methods: ....
split date operations: .................
element wrappers: ....
head and tail methods: ............................
time series methods: ................................................
base element-wise operators on TimeArray values: ............................................................................................................................................................................
basecall works with Base methods: ..
adding / removing missing rows works: ....................
collapse operations: ............
merge works correctly: .....................................................
vcat works correctly: ................
map works correctly: ............
update method works: ..........
rename method works: ......
construction with and without meta field: ..
get index operations preserve meta: ....
split operations preserve meta: ...
apply operations preserve meta: .....
combine operations preserve meta: .....................
basecall operations preserve meta: .
mathematical and comparison operations preserve meta: ....
readwrite accepts meta argument: .
readwrite parses csv file correctly: ................
const values are set the package defaults: ...
const values are correct: .....
deprecated methods: WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::ASCIIString; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::ASCIIString)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::ASCIIString; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::ASCIIString)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: by(ta::TimeArray, t::Int; period::Function) is being deprecated.
Please use when(ta::TimeArray, period::Function, t::Int)
.WARNING: to(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use to(ta::TimeArray, d::TimeType) instead
.WARNING: to(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use to(ta::TimeArray, d::TimeType) instead
.WARNING: to(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use to(ta::TimeArray, d::TimeType) instead
.WARNING: from(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use from(ta::TimeArray, d::TimeType) instead
.WARNING: from(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use from(ta::TimeArray, d::TimeType) instead
.WARNING: from(ta::TimeArray, y::Int, m::Int, d::Int) is being deprecated.
Please use from(ta::TimeArray, d::TimeType) instead
.WARNING: the method kwarg is deprecated, use percentchange(ta, :methodname) instead
.WARNING: the method kwarg is deprecated, use percentchange(ta, :methodname) instead
.WARNING: findall is deprecated, use find instead
.WARNING: collapse(ta::TimeArray, f::Function; period::Function=week) is deprecated,
use collapse(ta::TimeArray, period::Function, timestamp::Function, value::Function=timestamp) instead
.WARNING: collapse(ta::TimeArray, f::Function; period::Function=week) is deprecated,
use collapse(ta::TimeArray, period::Function, timestamp::Function, value::Function=timestamp) instead
.WARNING: collapse(ta::TimeArray, f::Function; period::Function=week) is deprecated,
use collapse(ta::TimeArray, period::Function, timestamp::Function, value::Function=timestamp) instead
.WARNING: collapse(ta::TimeArray, f::Function; period::Function=week) is deprecated,
use collapse(ta::TimeArray, period::Function, timestamp::Function, value::Function=timestamp) instead
.
INFO: TimeSeries tests passed
INFO: Removing FactCheck v0.4.3
INFO: Removing MarketData v0.4.0

>>> End of log
