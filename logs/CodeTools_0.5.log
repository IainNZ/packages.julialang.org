>>> 'Pkg.add("CodeTools")' log
INFO: Installing AbstractTrees v0.0.2
INFO: Installing CodeTools v0.3.0
INFO: Installing JuliaParser v0.7.2
INFO: Installing LNR v0.0.2
INFO: Installing Lazy v0.10.1
INFO: Installing MacroTools v0.3.0
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CodeTools
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CodeTools")' log
Julia Version 0.5.0-dev+4330
Commit 493157e (2016-05-26 09:11 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing CodeTools
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::SubString{String}, ::Vararg{SubString{String},N}) at ./deprecated.jl:30
 in match(::Symbol, ::Symbol, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:86
 in match_inner(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:63
 in match(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:89
 in match_inner(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:63
 in match(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:89
 in trymatch(::Expr, ::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:105
 in macro expansion at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:29 [inlined]
 in (::MacroTools.##15#16)(::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:91
 in prewalk at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:62 [inlined]
 in shortdef(::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:90
 in macro expansion at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:57 [inlined]
 in @hook(::Any) at /home/vagrant/.julia/v0.5/Requires/src/hook.jl:4
 in macro expansion at /home/vagrant/.julia/v0.5/Requires/src/require.jl:9 [inlined]
 in (::Requires.##8#9)() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:17
 in __init__() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:24
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:174
 in _require_from_serialized(::Int64, ::Symbol, ::Bool) at ./loading.jl:202
 in require(::Symbol) at ./loading.jl:332
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CodeTools/src/CodeTools.jl, in expression starting on line 5
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::SubString{String}, ::Vararg{SubString{String},N}) at ./deprecated.jl:30
 in bname(::Symbol) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:17
 in match_inner(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:61
 in match(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:89
 in match_inner(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:63
 in match(::Expr, ::Expr, ::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:89
 in trymatch(::Expr, ::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:105
 in macro expansion at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:29 [inlined]
 in (::MacroTools.##15#16)(::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:91
 in prewalk at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:62 [inlined]
 in shortdef(::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/utils.jl:90
 in macro expansion at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:57 [inlined]
 in @hook(::Any) at /home/vagrant/.julia/v0.5/Requires/src/hook.jl:4
 in macro expansion at /home/vagrant/.julia/v0.5/Requires/src/require.jl:9 [inlined]
 in (::Requires.##8#9)() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:17
 in __init__() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:24
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:174
 in _require_from_serialized(::Int64, ::Symbol, ::Bool) at ./loading.jl:202
 in require(::Symbol) at ./loading.jl:332
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CodeTools/src/CodeTools.jl, in expression starting on line 5
ERROR: LoadError: LoadError: InitError: type Method has no field func
 in macro expansion at /home/vagrant/.julia/v0.5/Requires/src/require.jl:9 [inlined]
 in (::Requires.##8#9)() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:17
 in __init__() at /home/vagrant/.julia/v0.5/Requires/src/init.jl:24
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:174
 in _require_from_serialized(::Int64, ::Symbol, ::Bool) at ./loading.jl:202
 in require(::Symbol) at ./loading.jl:332
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
during initialization of module Requires
while loading /home/vagrant/.julia/v0.5/CodeTools/src/CodeTools.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/CodeTools/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: CodeTools ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CodeTools/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CodeTools had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
