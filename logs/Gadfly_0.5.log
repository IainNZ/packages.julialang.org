>>> 'Pkg.add("Gadfly")' log
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.2
INFO: Installing ColorTypes v0.4.1
INFO: Installing Colors v0.7.3
INFO: Installing Compose v0.5.0
INFO: Installing Contour v0.2.0
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.0
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffBase v0.1.0
INFO: Installing Distances v0.4.1
INFO: Installing Distributions v0.12.4
INFO: Installing DualNumbers v0.3.0
INFO: Installing FileIO v0.3.1
INFO: Installing FixedPointNumbers v0.3.6
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing ForwardDiff v0.4.2
INFO: Installing GZip v0.3.0
INFO: Installing Gadfly v0.6.0
INFO: Installing Hexagons v0.1.0
INFO: Installing Hiccup v0.1.1
INFO: Installing Interpolations v0.4.0
INFO: Installing Iterators v0.3.0
INFO: Installing Juno v0.2.7
INFO: Installing KernelDensity v0.3.2
INFO: Installing LineSearches v0.1.5
INFO: Installing Loess v0.2.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Measures v0.1.0
INFO: Installing Media v0.2.7
INFO: Installing NaNMath v0.2.4
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.5.6
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.2
INFO: Installing Ratios v0.0.4
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing Showoff v0.1.1
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Gadfly
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (608.7421875 MB free)
Uptime: 34809.0 sec
Load Avg:  1.01123046875  1.0146484375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2185116 s       4872 s     171980 s     689062 s         50 s
#2  3500 MHz     821342 s       1762 s      94274 s    2464278 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Gadfly                        0.6.0
 - JSON                          0.9.0
47 additional packages:
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.4.7
 - Calculus                      0.2.2
 - ColorTypes                    0.4.1
 - Colors                        0.7.3
 - Compat                        0.23.0
 - Compose                       0.5.0
 - Contour                       0.2.0
 - DataArrays                    0.3.12
 - DataFrames                    0.9.0
 - DataStructures                0.5.3
 - DiffBase                      0.1.0
 - Distances                     0.4.1
 - Distributions                 0.12.4
 - DualNumbers                   0.3.0
 - FileIO                        0.3.1
 - FixedPointNumbers             0.3.6
 - FixedSizeArrays               0.2.5
 - ForwardDiff                   0.4.2
 - GZip                          0.3.0
 - Hexagons                      0.1.0
 - Hiccup                        0.1.1
 - Interpolations                0.4.0
 - Iterators                     0.3.0
 - Juno                          0.2.7
 - KernelDensity                 0.3.2
 - LineSearches                  0.1.5
 - Loess                         0.2.0
 - MacroTools                    0.3.6
 - Measures                      0.1.0
 - Media                         0.2.7
 - NaNMath                       0.2.4
 - Optim                         0.7.8
 - PDMats                        0.5.6
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.2
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - Showoff                       0.1.1
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.5.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.3.0
INFO: Installing Graphics v0.2.0
INFO: Installing RData v0.1.0
INFO: Installing RDatasets v0.2.0
INFO: Building Cairo
INFO: Testing Gadfly
Rendering points on pgf backend.
 33.310883 seconds (23.23 M allocations: 968.756 MB, 1.84% gc time)
Rendering points on svgjs backend.
  5.174875 seconds (2.60 M allocations: 109.301 MB, 1.52% gc time)
Rendering points on svg backend.
  0.045604 seconds (35.68 k allocations: 1.492 MB)
Rendering points on png backend.
  1.764211 seconds (845.65 k allocations: 35.994 MB, 1.48% gc time)
Rendering noticks on pgf backend.
  0.730041 seconds (289.71 k allocations: 12.099 MB)
Rendering noticks on svgjs backend.
  0.022840 seconds (7.05 k allocations: 383.188 KB)
Rendering noticks on svg backend.
  0.015322 seconds (5.19 k allocations: 295.688 KB)
Rendering noticks on png backend.
  0.025223 seconds (5.03 k allocations: 286.156 KB)
Rendering point_shape on pgf backend.
 10.752835 seconds (5.70 M allocations: 240.920 MB, 1.58% gc time)
Rendering point_shape on svgjs backend.
  0.293322 seconds (231.45 k allocations: 9.145 MB, 4.86% gc time)
Rendering point_shape on svg backend.
  0.062195 seconds (89.43 k allocations: 3.509 MB)
Rendering point_shape on png backend.
  0.304998 seconds (138.75 k allocations: 5.451 MB)
Rendering colored_points on pgf backend.
  6.479364 seconds (2.89 M allocations: 124.649 MB, 1.39% gc time)
Rendering colored_points on svgjs backend.
  0.429447 seconds (244.43 k allocations: 10.153 MB)
Rendering colored_points on svg backend.
  0.061395 seconds (59.01 k allocations: 2.681 MB)
Rendering colored_points on png backend.
  0.315651 seconds (85.40 k allocations: 3.815 MB, 6.79% gc time)
Rendering function_plots on pgf backend.
  4.414311 seconds (2.34 M allocations: 96.709 MB, 1.24% gc time)
Rendering function_plots on svgjs backend.
  0.068723 seconds (116.25 k allocations: 4.590 MB)
Rendering function_plots on svg backend.
  0.049849 seconds (80.61 k allocations: 3.325 MB)
Rendering function_plots on png backend.
  0.102409 seconds (79.81 k allocations: 3.279 MB, 21.68% gc time)
Rendering function_explicit_colors on pgf backend.
  0.614676 seconds (331.26 k allocations: 13.680 MB)
Rendering function_explicit_colors on svgjs backend.
  0.054964 seconds (112.16 k allocations: 4.477 MB)
Rendering function_explicit_colors on svg backend.
  0.061007 seconds (76.52 k allocations: 3.211 MB, 25.51% gc time)
Rendering function_explicit_colors on png backend.
  0.072577 seconds (75.76 k allocations: 3.167 MB)
Rendering function_layers on pgf backend.
  0.762657 seconds (416.17 k allocations: 17.707 MB, 2.07% gc time)
Rendering function_layers on svgjs backend.
  0.075758 seconds (135.15 k allocations: 5.280 MB)
Rendering function_layers on svg backend.
  0.057811 seconds (93.32 k allocations: 3.797 MB)
Rendering function_layers on png backend.
  0.079676 seconds (90.05 k allocations: 3.638 MB)
Rendering multicolumn_colorkey on pgf backend.
  1.550471 seconds (678.40 k allocations: 27.600 MB, 3.34% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.105046 seconds (131.57 k allocations: 5.261 MB)
Rendering multicolumn_colorkey on svg backend.
  0.059676 seconds (88.63 k allocations: 3.736 MB)
Rendering multicolumn_colorkey on png backend.
  0.084021 seconds (73.44 k allocations: 3.049 MB)
Rendering vstack on pgf backend.
  0.031143 seconds (42.81 k allocations: 2.228 MB)
Rendering vstack on svgjs backend.
  0.062713 seconds (114.80 k allocations: 4.335 MB)
Rendering vstack on svg backend.
  0.015057 seconds (22.86 k allocations: 1.203 MB)
Rendering vstack on png backend.
  0.064768 seconds (22.41 k allocations: 1.149 MB)
Rendering hstack on pgf backend.
  0.016982 seconds (41.05 k allocations: 2.154 MB)
Rendering hstack on svgjs backend.
  0.038323 seconds (114.80 k allocations: 4.344 MB)
Rendering hstack on svg backend.
  0.017625 seconds (22.86 k allocations: 1.211 MB)
Rendering hstack on png backend.
  0.033965 seconds (22.40 k allocations: 1.157 MB)
Rendering title on pgf backend.
  0.816875 seconds (331.81 k allocations: 14.085 MB)
Rendering title on svgjs backend.
  0.084600 seconds (73.65 k allocations: 2.745 MB)
Rendering title on svg backend.
  0.032963 seconds (12.97 k allocations: 683.141 KB, 54.91% gc time)
Rendering title on png backend.
  0.051563 seconds (12.73 k allocations: 661.563 KB)
Rendering gridstack on pgf backend.
  0.095511 seconds (62.12 k allocations: 3.138 MB)
Rendering gridstack on svgjs backend.
  0.110725 seconds (139.78 k allocations: 5.470 MB)
Rendering gridstack on svg backend.
  0.024168 seconds (25.50 k allocations: 1.568 MB)
Rendering gridstack on png backend.
  0.086089 seconds (24.53 k allocations: 1.494 MB, 23.17% gc time)
Rendering colorful_hist on pgf backend.
  5.754444 seconds (4.88 M allocations: 165.018 MB, 1.55% gc time)
Rendering colorful_hist on svgjs backend.
  0.343476 seconds (2.57 M allocations: 67.941 MB, 7.60% gc time)
Rendering colorful_hist on svg backend.
  0.435053 seconds (2.54 M allocations: 66.775 MB, 5.21% gc time)
Rendering colorful_hist on png backend.
  0.282820 seconds (2.52 M allocations: 66.205 MB, 7.51% gc time)
Rendering discrete_histogram on pgf backend.
  1.818952 seconds (1.08 M allocations: 45.970 MB, 1.23% gc time)
Rendering discrete_histogram on svgjs backend.
  0.065437 seconds (46.16 k allocations: 1.728 MB)
Rendering discrete_histogram on svg backend.
  0.032182 seconds (34.20 k allocations: 1.291 MB)
Rendering discrete_histogram on png backend.
  0.065377 seconds (36.41 k allocations: 1.376 MB)
Rendering discrete_bar on pgf backend.
  1.229276 seconds (841.76 k allocations: 34.131 MB, 1.10% gc time)
Rendering discrete_bar on svgjs backend.
  0.083263 seconds (202.57 k allocations: 5.640 MB, 20.71% gc time)
Rendering discrete_bar on svg backend.
  0.055096 seconds (180.20 k allocations: 4.876 MB)
Rendering discrete_bar on png backend.
  0.080008 seconds (174.45 k allocations: 4.758 MB)
Rendering discrete_bar_horizontal on pgf backend.
  1.071771 seconds (752.43 k allocations: 31.008 MB, 2.54% gc time)
Rendering discrete_bar_horizontal on svgjs backend.
  0.086284 seconds (204.01 k allocations: 5.620 MB)
Rendering discrete_bar_horizontal on svg backend.
  0.052846 seconds (181.52 k allocations: 4.850 MB)
Rendering discrete_bar_horizontal on png backend.
  0.097116 seconds (175.89 k allocations: 4.738 MB, 14.98% gc time)
Rendering stacked_discrete_histogram on pgf backend.
  0.680095 seconds (3.67 M allocations: 66.065 MB, 4.76% gc time)
Rendering stacked_discrete_histogram on svgjs backend.
  0.225224 seconds (3.54 M allocations: 59.762 MB, 7.32% gc time)
Rendering stacked_discrete_histogram on svg backend.
  0.153663 seconds (3.50 M allocations: 58.513 MB, 6.85% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.393500 seconds (3.63 M allocations: 64.082 MB, 5.24% gc time)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.468922 seconds (3.64 M allocations: 64.790 MB, 3.47% gc time)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.213956 seconds (3.54 M allocations: 59.788 MB, 14.24% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.213595 seconds (3.52 M allocations: 58.969 MB, 9.68% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.193048 seconds (3.50 M allocations: 58.173 MB, 10.47% gc time)
Rendering stacked_continuous_histogram on pgf backend.
  0.109498 seconds (3.53 M allocations: 59.980 MB, 8.43% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.120174 seconds (3.55 M allocations: 60.309 MB, 11.94% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.189176 seconds (3.50 M allocations: 58.513 MB, 10.06% gc time)
Rendering stacked_continuous_histogram on png backend.
  0.206750 seconds (3.50 M allocations: 58.159 MB, 9.08% gc time)
Rendering dodged_discrete_histogram on pgf backend.
  0.915705 seconds (3.87 M allocations: 74.062 MB, 2.74% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.242042 seconds (3.56 M allocations: 60.358 MB, 13.64% gc time)
Rendering dodged_discrete_histogram on svg backend.
  0.196293 seconds (3.52 M allocations: 58.884 MB, 8.82% gc time)
Rendering dodged_discrete_histogram on png backend.
  0.186720 seconds (3.51 M allocations: 58.531 MB, 5.83% gc time)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.850771 seconds (3.80 M allocations: 71.190 MB, 4.03% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.214295 seconds (3.56 M allocations: 60.354 MB, 9.10% gc time)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.176408 seconds (3.52 M allocations: 58.898 MB, 6.47% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.204556 seconds (3.51 M allocations: 58.544 MB, 8.27% gc time)
Rendering array_aesthetics on pgf backend.
  0.937998 seconds (368.32 k allocations: 15.363 MB, 1.89% gc time)
Rendering array_aesthetics on svgjs backend.
  0.055488 seconds (55.77 k allocations: 2.178 MB)
Rendering array_aesthetics on svg backend.
  0.025005 seconds (29.93 k allocations: 1.290 MB)
Rendering array_aesthetics on png backend.
  0.042237 seconds (29.87 k allocations: 1.276 MB)
Rendering subplot_grid on pgf backend.
  6.902554 seconds (3.26 M allocations: 135.264 MB, 1.59% gc time)
Rendering subplot_grid on svgjs backend.
  0.656095 seconds (1.03 M allocations: 39.723 MB, 7.78% gc time)
Rendering subplot_grid on svg backend.
  0.742302 seconds (610.49 k allocations: 25.450 MB, 31.48% gc time)
Rendering subplot_grid on png backend.
  0.580618 seconds (597.89 k allocations: 24.758 MB, 3.05% gc time)
Rendering subplot_grid_free_axis on pgf backend.
  0.716040 seconds (1.01 M allocations: 42.925 MB, 4.64% gc time)
Rendering subplot_grid_free_axis on svgjs backend.
  0.595030 seconds (1.15 M allocations: 44.938 MB, 4.76% gc time)
Rendering subplot_grid_free_axis on svg backend.
  0.352638 seconds (715.51 k allocations: 30.427 MB, 3.06% gc time)
Rendering subplot_grid_free_axis on png backend.
  0.536844 seconds (702.89 k allocations: 29.735 MB, 4.49% gc time)
Rendering subplot_grid_histogram on pgf backend.
  1.551994 seconds (2.97 M allocations: 96.270 MB, 3.10% gc time)
Rendering subplot_grid_histogram on svgjs backend.
  0.733823 seconds (2.77 M allocations: 84.692 MB, 7.74% gc time)
Rendering subplot_grid_histogram on svg backend.
  0.565665 seconds (2.38 M allocations: 71.796 MB, 8.60% gc time)
Rendering subplot_grid_histogram on png backend.
  0.614488 seconds (2.38 M allocations: 71.566 MB, 6.55% gc time)
Rendering subplot_layers on pgf backend.
 11.680067 seconds (6.21 M allocations: 252.642 MB, 2.01% gc time)
Rendering subplot_layers on svgjs backend.
  0.477585 seconds (843.86 k allocations: 32.786 MB, 7.17% gc time)
Rendering subplot_layers on svg backend.
  0.466091 seconds (786.21 k allocations: 30.917 MB, 3.08% gc time)
Rendering subplot_layers on png backend.
  0.503015 seconds (775.67 k allocations: 30.487 MB, 4.14% gc time)
Rendering labels on pgf backend.
  9.178061 seconds (17.67 M allocations: 401.052 MB, 2.14% gc time)
Rendering labels on svgjs backend.
  4.995401 seconds (15.97 M allocations: 322.373 MB, 2.91% gc time)
Rendering labels on svg backend.
  5.092720 seconds (15.87 M allocations: 319.622 MB, 2.25% gc time)
Rendering labels on png backend.
  4.520619 seconds (16.08 M allocations: 324.588 MB, 2.93% gc time)
Rendering percent on pgf backend.
  4.600136 seconds (1.83 M allocations: 77.684 MB, 1.44% gc time)
Rendering percent on svgjs backend.
  4.889832 seconds (1.89 M allocations: 80.003 MB, 1.55% gc time)
Rendering percent on svg backend.
  4.317990 seconds (1.82 M allocations: 76.954 MB, 1.28% gc time)
Rendering percent on png backend.
  4.301135 seconds (1.82 M allocations: 77.316 MB, 1.78% gc time)
Rendering timeseries_day on pgf backend.
FAILED!
ERROR: LoadError: MethodError: no method matching getindex(::Date, ::Int64)
 in (::Compose.##45#46)(::Date) at ./<missing>:0
 in next at ./generator.jl:26 [inlined]
 in copy!(::Array{Tuple{Measures.Measure,Measures.Measure},1}, ::Base.Generator{Tuple{Date,Int64},Compose.##45#46}) at ./abstractarray.jl:485
 in collect(::Type{Tuple{Measures.Measure,Measures.Measure}}, ::Base.Generator{Tuple{Date,Int64},Compose.##45#46}) at ./array.jl:248
 in line(::Array{Tuple{Date,Int64},1}, ::Symbol) at /home/vagrant/.julia/v0.5/Compose/src/form.jl:539
 in render(::Gadfly.Geom.LineGeometry, ::Gadfly.Theme, ::Gadfly.Aesthetics) at /home/vagrant/.julia/v0.5/Gadfly/src/geom/line.jl:162
 in render(::Gadfly.Geom.LineGeometry, ::Gadfly.Theme, ::Gadfly.Aesthetics, ::Array{Gadfly.Aesthetics,1}, ::Array{Gadfly.Data,1}, ::Dict{Symbol,Gadfly.ScaleElement}) at /home/vagrant/.julia/v0.5/Gadfly/src/geometry.jl:48
 in (::Gadfly.##113#115{Dict{Symbol,Gadfly.ScaleElement}})(::Tuple{Gadfly.Layer,Gadfly.Aesthetics,Array{Gadfly.Aesthetics,1},Array{Gadfly.Data,1},Gadfly.Theme}) at ./<missing>:0
 in collect(::Base.Generator{Zip{Array{Gadfly.Layer,1},Zip{Array{Gadfly.Aesthetics,1},Zip{Array{Array{Gadfly.Aesthetics,1},1},Base.Zip2{Array{Array{Gadfly.Data,1},1},Array{Gadfly.Theme,1}}}}},Gadfly.##113#115{Dict{Symbol,Gadfly.ScaleElement}}}) at ./array.jl:307
 in #render_prepared#111(::Bool, ::Bool, ::Function, ::Gadfly.Plot, ::Gadfly.Coord.Cartesian, ::Gadfly.Aesthetics, ::Array{Gadfly.Aesthetics,1}, ::Array{Array{Gadfly.StatisticElement,1},1}, ::Array{Array{Gadfly.Aesthetics,1},1}, ::Array{Array{Gadfly.Data,1},1}, ::Dict{Symbol,Gadfly.ScaleElement}, ::Array{Gadfly.GuideElement,1}) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:888
 in render_prepared(::Gadfly.Plot, ::Gadfly.Coord.Cartesian, ::Gadfly.Aesthetics, ::Array{Gadfly.Aesthetics,1}, ::Array{Array{Gadfly.StatisticElement,1},1}, ::Array{Array{Gadfly.Aesthetics,1},1}, ::Array{Array{Gadfly.Data,1},1}, ::Dict{Symbol,Gadfly.ScaleElement}, ::Array{Gadfly.GuideElement,1}) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:877
 in render(::Gadfly.Plot) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:823
 in draw(::Compose.PGF, ::Gadfly.Plot) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:934
 in macro expansion at ./util.jl:188 [inlined]
 in run_tests(::String) at /home/vagrant/.julia/v0.5/Gadfly/test/runtests.jl:154
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Gadfly/test/runtests.jl, in expression starting on line 202
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.3.0
INFO: Removing Graphics v0.2.0
INFO: Removing RData v0.1.0
INFO: Removing RDatasets v0.2.0
ERROR: Gadfly had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
