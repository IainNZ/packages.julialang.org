>>> 'Pkg.add("SimilaritySearch")' log
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Cloning cache of SimilaritySearch from https://github.com/sadit/SimilaritySearch.jl.git
[ Info: Installing SimilaritySearch v0.1.7
[ Info: Package database updated
┌ Info: METADATA is out-of-date — you may not have the latest version of SimilaritySearch
└ Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SimilaritySearch")' log
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
WARNING: Base.versioninfo is deprecated: it has been moved to the standard library package `InteractiveUtils`.
Add `using InteractiveUtils` to your imports.
 in module Main
Julia Version 0.7.0-DEV.4896
Commit 69e559d496 (2018-04-18 22:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
      Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
              speed         user         nice          sys         idle          irq
       #1  3498 MHz    2880713 s        485 s     208822 s     874060 s         21 s
       #2  3498 MHz     596494 s       6398 s      70984 s    3898514 s          0 s
       
  Memory: 2.939197540283203 GB (576.1484375 MB free)
  Uptime: 46648.0 sec
  Load Avg:  0.97998046875  0.9609375  0.95458984375
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant
Packages:
  Package Directory: /home/vagrant/.julia/v0.7
  Package Status:
2 required packages:
 - JSON                          0.17.2
 - SimilaritySearch              0.1.7
3 additional packages:
 - Compat                        0.63.0
 - Nullables                     0.0.5
 - tmpDz3VAC                     0.0.0-             non-repo (unregistered)
WARNING: Base.Pkg is deprecated, run `using Pkg` instead
 in module Main
[ Info: Testing SimilaritySearch
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/SimilaritySearch/src/distances/sets.jl:32.
│ Use `at most one line break` instead.
└ @ nothing sets.jl:32
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/SimilaritySearch/src/distances/strings.jl:9.
│ Use `at most one line break` instead.
└ @ nothing strings.jl:9
┌ Warning: Deprecated syntax `parametric method syntax DenseCosine{T}(vec::Vector{T})` around /home/vagrant/.julia/v0.7/SimilaritySearch/src/distances/cos.jl:14.
│ Use `DenseCosine(vec::Vector{T}) where T` instead.
└ @ nothing cos.jl:14
┌ Warning: Deprecated syntax `multiple line breaks between doc string and object` at /home/vagrant/.julia/v0.7/SimilaritySearch/src/res/knn.jl:65.
│ Use `at most one line break` instead.
└ @ nothing knn.jl:65
WARNING: importing deprecated binding Base.clear! into SimilaritySearch.
WARNING: Base.clear! is deprecated: it has been moved to the standard library package `Distributed`.
Add `using Distributed` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/src/res/knn.jl:133
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testbits.jl:2
Test Summary: | Pass  Total
bit ops       |    3      3
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testresults.jl:2
Test Summary:              | Pass  Total
Result set implementations |    3      3
WARNING: Base.Test is deprecated, run `using Test` instead
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:2
(recall_lower_bound, dist) = (1.0, L2Distance(0))
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L2Distance(200200), PerformanceResult(1.0, 0.00013379335403442382, 1001.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=L2Distance(200200)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L2Distance, ::Array{Array{Float32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{Float32,1},L2Distance}, ::Array{Float32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L2Distance(324745), PerformanceResult(1.0, 0.0002883744239807129, 84.29))
(recall_lower_bound, dist) = (1.0, L1Distance(0))
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L1Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L1Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L1Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L1Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L1Distance(200200), PerformanceResult(1.0, 0.00010345935821533203, 1001.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=L1Distance(200200)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L1Distance, ::Array{Array{Float32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{Float32,1},L1Distance}, ::Array{Float32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L1Distance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L1Distance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L1Distance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L1Distance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L1Distance(323924), PerformanceResult(1.0, 0.0004911303520202636, 76.08))
(recall_lower_bound, dist) = (1.0, LInfDistance(0))
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LInfDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LInfDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LInfDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LInfDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LInfDistance(200200), PerformanceResult(1.0, 0.0001534914970397949, 1001.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=LInfDistance(200200)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::LInfDistance, ::Array{Array{Float32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{Float32,1},LInfDistance}, ::Array{Float32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LInfDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LInfDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LInfDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LInfDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LInfDistance(324035), PerformanceResult(1.0, 0.0004160332679748535, 77.19))
(recall_lower_bound, dist) = (0.1, L2SquaredDistance(0))
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::L2SquaredDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2SquaredDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2SquaredDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2SquaredDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},L2SquaredDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L2SquaredDistance(200200), PerformanceResult(1.0, 0.00013109445571899415, 1001.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L2SquaredDistance, ::Array{Array{Float32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=L2SquaredDistance(200200)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::L2SquaredDistance, ::Array{Array{Float32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{Float32,1},L2SquaredDistance}, ::Array{Float32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2SquaredDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2SquaredDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2SquaredDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},L2SquaredDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (L2SquaredDistance(320319), PerformanceResult(0.4079999999999998, 0.000475161075592041, 40.03))
(recall_lower_bound, dist) = (1.0, LpDistance(0, 3.0f0))
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LpDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LpDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LpDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Sequential{Array{Float32,1},LpDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LpDistance(200200, 3.0f0), PerformanceResult(1.0, 0.00019342422485351562, 1001.0))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=LpDistance(200200, 3.0f0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Float32,1},1}, ::LpDistance, ::Array{Array{Float32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{Float32,1},LpDistance}, ::Array{Float32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LpDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LpDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LpDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Float32,1}}, ::Laesa{Array{Float32,1},LpDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
(dist, p) = (LpDistance(324633, 3.0f0), PerformanceResult(1.0, 0.00031802892684936525, 83.17))
(recall_lower_bound, dist) = (0.1, LpDistance(0, 0.5f0))
(dist, p) = (LpDistance(200200, 0.5f0), PerformanceResult(1.0, 4.303216934204102e-5, 1001.0))
INFO: Creating a pivot table with 16 pivots and distance=LpDistance(200200, 0.5f0)
(dist, p) = (LpDistance(321645, 0.5f0), PerformanceResult(0.6480000000000004, 1.9741058349609374e-5, 53.29))
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},JaccardDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},JaccardDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},JaccardDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},JaccardDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=JaccardDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::JaccardDistance, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},JaccardDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},JaccardDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},JaccardDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},JaccardDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},DiceDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},DiceDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},DiceDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},DiceDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=DiceDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::DiceDistance, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},DiceDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},DiceDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},DiceDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},DiceDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},IntersectionDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},IntersectionDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},IntersectionDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},IntersectionDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=IntersectionDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::IntersectionDistance, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},IntersectionDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},IntersectionDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},IntersectionDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},IntersectionDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},CommonPrefixDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},CommonPrefixDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},CommonPrefixDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},CommonPrefixDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=CommonPrefixDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::CommonPrefixDistance, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},CommonPrefixDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},CommonPrefixDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},CommonPrefixDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},CommonPrefixDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},GenericLevenshtein}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},GenericLevenshtein}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},GenericLevenshtein}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},GenericLevenshtein}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=GenericLevenshtein(0, 1, 1, 1)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::GenericLevenshtein, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},GenericLevenshtein}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},GenericLevenshtein}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},GenericLevenshtein}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},GenericLevenshtein}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
INFO: inserting items into the index
INFO: inserting items into the index
INFO: Creating a pivot table with 1 pivots and distance=GenericLevenshtein(0, 1, 1, 2)
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},HammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},HammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},HammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Sequential{Array{Int64,1},HammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = macro expansion at testdistances.jl:83 [inlined]
└ @ Core testdistances.jl:83
INFO: inserting items into the index
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1 pivots and distance=HammingDistance(0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{Int64,1},1}, ::HammingDistance, ::Array{Array{Int64,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},HammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},HammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},HammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{Int64,1}}, ::Laesa{Array{Int64,1},HammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{DenseCosine{Float32},1}, ::AngleDistance, ::Array{DenseCosine{Float32},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},AngleDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},AngleDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},AngleDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},AngleDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
p = PerformanceResult(1.0, 5.578756332397461e-5, 1001.0)
p = PerformanceResult(1.0, 5.630970001220703e-5, 1001.0)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{DenseCosine{Float32},1}, ::CosineDistance, ::Array{DenseCosine{Float32},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},CosineDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},CosineDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},CosineDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{DenseCosine{Float32}}, ::Sequential{DenseCosine{Float32},CosineDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
p = PerformanceResult(1.0, 2.808809280395508e-5, 1001.0)
p = PerformanceResult(1.0, 2.6398499806722e-5, 1001.0)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 5.578756332397461e-5, 1001.0), PerformanceResult(1.0, 5.630970001220703e-5, 1001.0), PerformanceResult(1.0, 2.808809280395508e-5, 1001.0), PerformanceResult(1.0, 2.6398499806722e-5, 1001.0))
WARNING: importing deprecated binding Base.shuffle! into SimilaritySearch.
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = select_sss(::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Float64, ::Bool) at pivotselection.jl:75
└ @ SimilaritySearch pivotselection.jl:75
INFO: select_sss: db=Array{Array{UInt32,1},1}, alpha=0.35, distance=BinHammingDistance(0), shuffle_db=false
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = select_sss(::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Float64, ::Bool) at pivotselection.jl:83
└ @ SimilaritySearch pivotselection.jl:83
INFO: the maximum distance estimated as 127.0, now selecting pivots
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = select_sss(::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Float64, ::Bool) at pivotselection.jl:90
└ @ SimilaritySearch pivotselection.jl:90
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Array{Array{UInt32,1},1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 1000 pivots and distance=BinHammingDistance(499516)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Array{Array{UInt32,1},1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{Array{UInt32,1},BinHammingDistance}, ::Array{UInt32,1}) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{Array{UInt32,1},1}, ::BinHammingDistance, ::Array{Array{UInt32,1},1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{UInt32,1}}, ::Laesa{Array{UInt32,1},BinHammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{UInt32,1}}, ::Laesa{Array{UInt32,1},BinHammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{UInt32,1}}, ::Laesa{Array{UInt32,1},BinHammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{Array{UInt32,1}}, ::Laesa{Array{UInt32,1},BinHammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
p = PerformanceResult(1.0, 0.0027763867378234864, 1061.95)
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
WARNING: Base.shuffle! is deprecated: it has been moved to the standard library package `Random`.
Add `using Random` to your imports.
  likely near /home/vagrant/.julia/v0.7/SimilaritySearch/test/testdistances.jl:137
┌ Warning: `info()` is deprecated, use `@info` instead.
│   caller = Laesa(::Array{UInt64,1}, ::BinHammingDistance, ::Array{UInt64,1}) at laesa.jl:26
└ @ SimilaritySearch laesa.jl:26
INFO: Creating a pivot table with 16 pivots and distance=BinHammingDistance(360)
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = Laesa(::Array{UInt64,1}, ::BinHammingDistance, ::Array{UInt64,1}) at laesa.jl:27
└ @ SimilaritySearch laesa.jl:27
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = push!(::Laesa{UInt64,BinHammingDistance}, ::UInt64) at laesa.jl:66
└ @ SimilaritySearch laesa.jl:66
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #Performance#24(::Int64, ::Type, ::Array{UInt64,1}, ::BinHammingDistance, ::Array{UInt64,1}) at performance.jl:33
└ @ SimilaritySearch performance.jl:33
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{UInt64}, ::Laesa{UInt64,BinHammingDistance}) at performance.jl:85
└ @ SimilaritySearch performance.jl:85
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{UInt64}, ::Laesa{UInt64,BinHammingDistance}) at performance.jl:86
└ @ SimilaritySearch performance.jl:86
┌ Warning: `Array{T, 1}(m::Int) where T` is deprecated, use `Array{T, 1}(undef, m)` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{UInt64}, ::Laesa{UInt64,BinHammingDistance}) at performance.jl:87
└ @ SimilaritySearch performance.jl:87
┌ Warning: `fieldnames(v)` is deprecated, use `fieldnames(typeof(v))` instead.
│   caller = #_probe#31(::Bool, ::Function, ::Performance{UInt64}, ::Laesa{UInt64,BinHammingDistance}) at performance.jl:89
└ @ SimilaritySearch performance.jl:89
p = PerformanceResult(1.0, 0.0005120277404785156, 1001.44)
[ Info: SimilaritySearch tests passed

>>> End of log
