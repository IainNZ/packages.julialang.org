>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (503.0546875 MB free)
Uptime: 48826.0 sec
Load Avg:  1.072265625  1.0615234375  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3153705 s       1846 s     288612 s     825099 s         84 s
#2  3499 MHz     981174 s       5187 s     126717 s    3635910 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00509173 -0.159396; 0.00509173 0.0 -0.00777971; 0.159396 0.00777971 0.0])
dAA = TransformUtils.so3([0.0 -0.0122706 -0.214225; 0.0122706 0.0 0.0614344; 0.214225 -0.0614344 0.0])
dAA = TransformUtils.so3([0.0 -0.0541413 -0.033458; 0.0541413 0.0 -0.0599475; 0.033458 0.0599475 0.0])
dAA = TransformUtils.Quaternion(0.9989066761806437,[0.0173479,0.0265673,0.034332])
dAA = TransformUtils.SO3([0.99869 -0.0484653 0.0164168; 0.0489056 0.998423 -0.0275715; -0.0150546 0.0283382 0.999485])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.985617 -0.168491 0.0130389; 0.16888 0.984851 -0.0393367; -0.00621351 0.040973 0.999141]),[-0.523645,-1.74891,-0.44808])
xj = TransformUtils.SE3(TransformUtils.SO3([0.957683 -0.110152 0.265914; 0.0481143 0.972138 0.229417; -0.283776 -0.206914 0.9363]),[0.422425,-2.41646,0.222886])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.953797 0.0568926 0.295016; -0.125602 0.967493 0.219501; -0.272938 -0.246414 0.929938]),[0.815558,-0.789355,0.708985])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
