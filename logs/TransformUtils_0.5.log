>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (405.78125 MB free)
Uptime: 49199.0 sec
Load Avg:  1.16259765625  1.0927734375  1.0205078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3168240 s       3454 s     249730 s     923601 s        107 s
#2  3499 MHz    1026515 s       3186 s     123517 s    3649771 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.28.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0500051 0.13725; -0.0500051 0.0 -0.0084408; -0.13725 0.0084408 0.0])
dAA = TransformUtils.so3([0.0 -0.0969721 -0.0125448; 0.0969721 0.0 -0.169002; 0.0125448 0.169002 0.0])
dAA = TransformUtils.so3([0.0 -0.0286058 0.195361; 0.0286058 0.0 0.193628; -0.195361 -0.193628 0.0])
dAA = TransformUtils.Quaternion(0.9968358629015176,[0.0361991,-0.066014,-0.0254959])
dAA = TransformUtils.SO3([0.99627 0.0838925 -0.0202205; -0.0827011 0.995115 0.0539092; 0.0246443 -0.0520358 0.998341])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.885964 -0.442427 0.139017; 0.363526 0.848678 0.38418; -0.287952 -0.289834 0.912732]),[-0.302356,-0.167653,-0.28586])
xj = TransformUtils.SE3(TransformUtils.SO3([0.912187 0.40976 -0.00339438; -0.37424 0.829683 -0.414211; -0.166911 0.379109 0.910174]),[0.111393,1.33221,-1.94124])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.720182 0.555478 -0.415671; -0.672809 0.412966 -0.61383; -0.169311 0.721736 0.671142]),[1.38848,1.56963,-0.877178])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
