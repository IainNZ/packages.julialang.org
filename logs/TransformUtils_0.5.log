>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (899.13671875 MB free)
Uptime: 43676.0 sec
Load Avg:  1.11474609375  1.056640625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2557284 s       7020 s     206804 s    1060313 s         89 s
#2  3500 MHz     843608 s         41 s     105189 s    3317081 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.027471 -0.0945452; -0.027471 0.0 0.182454; 0.0945452 -0.182454 0.0])
dAA = TransformUtils.so3([0.0 -0.140882 -0.0246138; 0.140882 0.0 0.0182603; 0.0246138 -0.0182603 0.0])
dAA = TransformUtils.so3([0.0 -0.118539 0.103139; 0.118539 0.0 0.020493; -0.103139 -0.020493 0.0])
dAA = TransformUtils.Quaternion(0.9980945781080885,[0.00475048,0.0211609,0.0577656])
dAA = TransformUtils.SO3([0.998173 0.0500615 0.033841; -0.0526082 0.995477 0.0791051; -0.0297278 -0.0807409 0.996292])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.963597 0.226752 -0.141648; -0.259426 0.921098 -0.290304; 0.0646446 0.316483 0.946393]),[2.08212,0.211346,-1.42845])
xj = TransformUtils.SE3(TransformUtils.SO3([0.95202 -0.177738 -0.249132; 0.145204 0.978936 -0.143525; 0.269394 0.100464 0.957776]),[0.627891,-1.21864,0.225285])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.897109 -0.418734 -0.140913; 0.434878 0.893189 0.114428; 0.0779475 -0.163934 0.983387]),[-0.923408,-1.12353,2.1862])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
