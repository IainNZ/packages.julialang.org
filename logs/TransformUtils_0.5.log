>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (406.625 MB free)
Uptime: 50048.0 sec
Load Avg:  1.02978515625  0.9755859375  0.95849609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3115974 s       2050 s     324844 s     988649 s        102 s
#2  3500 MHz    1101104 s       3560 s     135902 s    3633341 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.100494 0.154762; -0.100494 0.0 -0.114613; -0.154762 0.114613 0.0])
dAA = TransformUtils.so3([0.0 -0.0886626 0.00949758; 0.0886626 0.0 0.0739421; -0.00949758 -0.0739421 0.0])
dAA = TransformUtils.so3([0.0 0.0135678 0.0450721; -0.0135678 0.0 -0.028478; -0.0450721 0.028478 0.0])
dAA = TransformUtils.Quaternion(0.9977072861649265,[0.00510377,-0.0462915,0.0491042])
dAA = TransformUtils.SO3([0.99884 0.0418569 0.0238039; -0.041446 0.998987 -0.0175031; -0.0245124 0.0164962 0.999563])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.977579 0.013253 0.210151; 0.0596427 0.939718 -0.336708; -0.201945 0.341693 0.917859]),[-1.70571,1.77191,-1.27255])
xj = TransformUtils.SE3(TransformUtils.SO3([0.912637 -0.372921 -0.167405; 0.333587 0.916146 -0.222252; 0.23625 0.146992 0.96051]),[-0.195898,-0.423934,-1.33219])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.864361 -0.339602 -0.370878; 0.406298 0.906203 0.117126; 0.296314 -0.251926 0.921266]),[1.35704,-2.06384,1.0019])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
