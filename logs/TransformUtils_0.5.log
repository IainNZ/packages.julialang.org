>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (490.703125 MB free)
Uptime: 45561.0 sec
Load Avg:  1.1396484375  1.0751953125  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2668032 s        102 s     227120 s    1103742 s         92 s
#2  3499 MHz     722749 s       6268 s      98488 s    3630705 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00544111 0.106158; 0.00544111 0.0 0.0304268; -0.106158 -0.0304268 0.0])
dAA = TransformUtils.so3([0.0 0.132489 0.0423585; -0.132489 0.0 0.0127227; -0.0423585 -0.0127227 0.0])
dAA = TransformUtils.so3([0.0 0.0393796 -0.0999681; -0.0393796 0.0 0.0468358; 0.0999681 -0.0468358 0.0])
dAA = TransformUtils.Quaternion(0.9968211174834387,[0.0631366,-0.0424187,-0.0237084])
dAA = TransformUtils.SO3([0.99255 0.118078 -0.0300252; -0.117882 0.992993 0.00824065; 0.0307879 -0.00463984 0.999515])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.89608 -0.438752 -0.0673565; 0.427803 0.894084 -0.132656; 0.118425 0.0900547 0.988871]),[0.163155,0.779773,-0.390366])
xj = TransformUtils.SE3(TransformUtils.SO3([0.832957 -0.553228 0.0110128; 0.553338 0.832802 -0.0160926; -0.000268587 0.0194982 0.99981]),[-0.0721403,0.140174,0.339237])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.983084 -0.137153 0.121387; 0.129245 0.989081 0.0708176; -0.129774 -0.053931 0.990076]),[-0.398062,-0.402915,0.822178])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
