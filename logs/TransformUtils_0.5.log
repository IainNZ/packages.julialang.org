>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (488.984375 MB free)
Uptime: 49097.0 sec
Load Avg:  1.20654296875  1.0859375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2882608 s       4596 s     247322 s    1203049 s        111 s
#2  3500 MHz     869422 s       1980 s     113355 s    3813889 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.147198 -0.0899732; -0.147198 0.0 -0.0586103; 0.0899732 0.0586103 0.0])
dAA = TransformUtils.so3([0.0 -0.103646 -0.0209299; 0.103646 0.0 0.21808; 0.0209299 -0.21808 0.0])
dAA = TransformUtils.so3([0.0 -0.127893 -0.0334155; 0.127893 0.0 0.0194472; 0.0334155 -0.0194472 0.0])
dAA = TransformUtils.Quaternion(0.9996712055194091,[-0.0120783,0.00224379,0.0225069])
dAA = TransformUtils.SO3([0.996276 -0.0571184 0.0645909; 0.0693382 0.976006 -0.206407; -0.0512515 0.210117 0.976332])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992819 0.0897279 -0.0791116; -0.110538 0.940953 -0.319983; 0.0457289 0.32643 0.944115]),[-0.871514,-0.864181,-0.0799091])
xj = TransformUtils.SE3(TransformUtils.SO3([0.991976 -0.1125 -0.0576839; 0.11632 0.990895 0.0677937; 0.0495319 -0.0739595 0.99603]),[-0.425311,0.174002,0.482787])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.97426 -0.224606 -0.0192161; 0.214628 0.898149 0.383749; -0.0689333 -0.377996 0.923238]),[0.353972,1.2006,0.163749])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
