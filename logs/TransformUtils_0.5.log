>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (838.515625 MB free)
Uptime: 48336.0 sec
Load Avg:  1.01025390625  1.03662109375  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2851578 s       5818 s     251314 s    1126667 s         93 s
#2  3500 MHz    1190504 s         43 s     124761 s    3351019 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.00685633 -0.000956881; -0.00685633 0.0 -0.0462468; 0.000956881 0.0462468 0.0])
dAA = TransformUtils.so3([0.0 -0.0164065 0.0451362; 0.0164065 0.0 0.2374; -0.0451362 -0.2374 0.0])
dAA = TransformUtils.so3([0.0 -0.168316 0.0113462; 0.168316 0.0 -0.0342723; -0.0113462 0.0342723 0.0])
dAA = TransformUtils.Quaternion(0.9978282085103278,[0.0320665,0.00612178,-0.0572112])
dAA = TransformUtils.SO3([0.998254 -0.052596 -0.0268964; 0.0497646 0.994052 -0.0968706; 0.0318314 0.0953629 0.994934])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.987407 0.0772377 -0.138067; -0.06479 0.993604 0.0924884; 0.144328 -0.0823783 0.986095]),[1.61467,0.250925,0.508151])
xj = TransformUtils.SE3(TransformUtils.SO3([0.990357 0.138518 -0.00219571; -0.127214 0.903033 -0.410303; -0.0548516 0.406626 0.911947]),[-1.67403,0.0738161,-0.655867])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.978211 0.136954 0.156035; -0.0453889 0.874458 -0.482972; -0.202591 0.465367 0.861621]),[-3.40381,-0.334098,-0.710151])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
