>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (864.2265625 MB free)
Uptime: 51963.0 sec
Load Avg:  1.07275390625  1.05126953125  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3226913 s       2698 s     346728 s    1023121 s        100 s
#2  3499 MHz    1102366 s       3715 s     142275 s    3819480 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0329518 -0.0228371; 0.0329518 0.0 -0.0963138; 0.0228371 0.0963138 0.0])
dAA = TransformUtils.so3([0.0 -0.130882 -0.107919; 0.130882 0.0 -0.129531; 0.107919 0.129531 0.0])
dAA = TransformUtils.so3([0.0 0.00132913 0.0649685; -0.00132913 0.0 0.0361161; -0.0649685 -0.0361161 0.0])
dAA = TransformUtils.Quaternion(0.9990677100133982,[-0.00665978,-0.00243611,-0.0425843])
dAA = TransformUtils.SO3([0.955299 -0.290383 -0.0555195; 0.293305 0.954452 0.0547198; 0.037101 -0.068558 0.996957])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.927888 -0.343309 -0.145472; 0.314291 0.93007 -0.190239; 0.20061 0.1308 0.9709]),[-0.858948,-0.575899,0.124465])
xj = TransformUtils.SE3(TransformUtils.SO3([0.91688 -0.399107 0.00670716; 0.39891 0.91557 -0.0510188; 0.0142211 0.0494537 0.998675]),[1.46874,-0.252082,2.11809])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.978989 -0.0726505 0.190533; 0.0581011 0.99503 0.0808732; -0.195462 -0.0681038 0.978344]),[2.66155,-0.237177,1.53539])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
