>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (868.6640625 MB free)
Uptime: 48252.0 sec
Load Avg:  1.0107421875  1.01513671875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2708702 s       1808 s     251664 s    1308470 s         74 s
#2  3500 MHz     824023 s       5646 s     108450 s    3764063 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.122428 -0.0889454; 0.122428 0.0 -0.0759418; 0.0889454 0.0759418 0.0])
dAA = TransformUtils.so3([0.0 0.0643 -0.0457246; -0.0643 0.0 -0.13069; 0.0457246 0.13069 0.0])
dAA = TransformUtils.so3([0.0 -0.0155896 -0.0352877; 0.0155896 0.0 0.0304532; 0.0352877 -0.0304532 0.0])
dAA = TransformUtils.Quaternion(0.9966090453819899,[-0.00729557,-0.0394968,0.0718135])
dAA = TransformUtils.SO3([0.997342 0.053902 -0.0490176; -0.0559914 0.997535 -0.0423007; 0.0466167 0.0449329 0.997902])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.891383 -0.270255 -0.363867; 0.384212 0.876425 0.290277; 0.240453 -0.39855 0.885065]),[0.233494,1.08477,-0.146821])
xj = TransformUtils.SE3(TransformUtils.SO3([0.956983 0.129338 -0.259723; -0.215367 0.916484 -0.337156; 0.194425 0.378588 0.904914]),[-2.06199,-0.822462,0.681148])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.817041 0.558447 -0.143462; -0.524871 0.617389 -0.585954; -0.238652 0.554048 0.797544]),[-2.57985,-1.38116,1.01443])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
