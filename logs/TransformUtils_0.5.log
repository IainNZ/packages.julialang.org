>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (796.82421875 MB free)
Uptime: 50963.0 sec
Load Avg:  1.19580078125  1.087890625  1.06396484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    3218604 s       6594 s     279355 s     985673 s        108 s
#2  3496 MHz    1100951 s         88 s     134294 s    3731631 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0464389 0.0919179; -0.0464389 0.0 0.0303921; -0.0919179 -0.0303921 0.0])
dAA = TransformUtils.so3([0.0 -0.232685 -0.0113912; 0.232685 0.0 0.139514; 0.0113912 -0.139514 0.0])
dAA = TransformUtils.so3([0.0 0.121593 -0.0284086; -0.121593 0.0 -0.0491892; 0.0284086 0.0491892 0.0])
dAA = TransformUtils.Quaternion(0.9996116901750071,[-0.00753056,0.0171967,-0.0205921])
dAA = TransformUtils.SO3([0.99684 -0.077184 0.0187953; 0.0758417 0.995069 0.0639224; -0.0236364 -0.0622949 0.997778])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992174 -0.0624062 -0.108148; 0.071483 0.99405 0.08219; 0.102376 -0.0892776 0.990731]),[-1.2468,-0.437106,0.382047])
xj = TransformUtils.SE3(TransformUtils.SO3([0.996377 0.0316735 0.0789296; -0.0520637 0.961003 0.271593; -0.0672493 -0.274718 0.95917]),[-1.69149,0.149606,1.57783])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.977973 0.0719965 0.195922; -0.10793 0.977834 0.179419; -0.178662 -0.196613 0.964066]),[-0.276849,0.504216,1.28101])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
