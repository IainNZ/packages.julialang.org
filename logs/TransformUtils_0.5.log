>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.2421875 MB free)
Uptime: 45693.0 sec
Load Avg:  1.00439453125  1.01611328125  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2790475 s       3577 s     264426 s     950397 s        113 s
#2  3499 MHz     800966 s       3212 s     121136 s    3520516 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0340703 0.00837878; -0.0340703 0.0 -0.0784678; -0.00837878 0.0784678 0.0])
dAA = TransformUtils.so3([0.0 -0.0976373 -0.0911553; 0.0976373 0.0 -0.0531142; 0.0911553 0.0531142 0.0])
dAA = TransformUtils.so3([0.0 0.00535336 0.0678144; -0.00535336 0.0 -0.0127546; -0.0678144 0.0127546 0.0])
dAA = TransformUtils.Quaternion(0.9993849797874145,[-0.0273721,0.0102788,-0.0193592])
dAA = TransformUtils.SO3([0.992207 -0.119932 -0.0337933; 0.121011 0.992137 0.031929; 0.0296983 -0.0357696 0.998919])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.94496 -0.307926 -0.110597; 0.252122 0.900743 -0.353691; 0.20853 0.30634 0.928801]),[1.05327,-0.173863,1.37073])
xj = TransformUtils.SE3(TransformUtils.SO3([0.847026 0.48942 -0.207401; -0.491684 0.869653 0.0441503; 0.201975 0.0645796 0.977259]),[0.481943,1.29839,1.01174])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.718559 0.695208 0.0189331; -0.641829 0.652412 0.403006; 0.267821 -0.301736 0.915001]),[-0.243556,1.39208,-0.790964])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
