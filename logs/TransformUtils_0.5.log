>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (892.13671875 MB free)
Uptime: 43439.0 sec
Load Avg:  1.00439453125  1.029296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2632348 s         92 s     250885 s     911541 s         92 s
#2  3500 MHz     795302 s       6692 s     112803 s    3329322 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.201037 0.0762997; -0.201037 0.0 0.0791092; -0.0762997 -0.0791092 0.0])
dAA = TransformUtils.so3([0.0 -0.0444797 0.143437; 0.0444797 0.0 -0.0284126; -0.143437 0.0284126 0.0])
dAA = TransformUtils.so3([0.0 0.0278217 -0.135134; -0.0278217 0.0 0.0134977; 0.135134 -0.0134977 0.0])
dAA = TransformUtils.Quaternion(0.9974298220329554,[0.036982,-0.0374373,0.0486265])
dAA = TransformUtils.SO3([0.989128 -0.133329 -0.0620332; 0.133094 0.991072 -0.00792913; 0.0625365 -0.00041332 0.998043])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.960222 -0.0734085 -0.269417; 0.166204 0.925558 0.340174; 0.224389 -0.371421 0.900942]),[-1.00031,0.532423,0.71536])
xj = TransformUtils.SE3(TransformUtils.SO3([0.97307 -0.2135 -0.0869056; 0.187661 0.952665 -0.239193; 0.13386 0.216443 0.967075]),[0.146682,0.346474,0.760544])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.995589 0.00189629 0.093798; 0.0525412 0.817028 -0.574199; -0.0777245 0.576595 0.813325]),[1.0806,-0.273088,-0.331567])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
