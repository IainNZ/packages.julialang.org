>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (398.796875 MB free)
Uptime: 50859.0 sec
Load Avg:  1.1669921875  1.0703125  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    3252682 s       4944 s     275939 s     927801 s         97 s
#2  3503 MHz     996174 s       1278 s     128608 s    3833840 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.166746 0.077585; -0.166746 0.0 0.0509877; -0.077585 -0.0509877 0.0])
dAA = TransformUtils.so3([0.0 0.105573 -0.0326124; -0.105573 0.0 -0.131927; 0.0326124 0.131927 0.0])
dAA = TransformUtils.so3([0.0 0.0965347 0.0443366; -0.0965347 0.0 -0.0281143; -0.0443366 0.0281143 0.0])
dAA = TransformUtils.Quaternion(0.9996397053930031,[-0.0126885,0.0228791,-0.00600056])
dAA = TransformUtils.SO3([0.992069 0.115935 0.0485515; -0.110809 0.989046 -0.0975204; -0.0593256 0.091367 0.994049])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.86336 0.486597 -0.133541; -0.459434 0.8675 0.190697; 0.208639 -0.103287 0.972523]),[1.63743,0.0941672,0.0178983])
xj = TransformUtils.SE3(TransformUtils.SO3([0.945038 -0.325166 0.0341995; 0.302579 0.909406 0.285352; -0.123888 -0.259321 0.957812]),[0.878065,1.77898,0.294733])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.651045 -0.752651 0.0982631; 0.735136 0.657469 0.165255; -0.188984 -0.0353518 0.981344]),[-1.3719,1.06348,0.691923])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
