>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (880.23046875 MB free)
Uptime: 43577.0 sec
Load Avg:  1.0302734375  1.0146484375  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    2664588 s       3959 s     239845 s     905883 s         80 s
#2  3507 MHz     736789 s       1384 s     106522 s    3405619 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0460066 -0.00413703; 0.0460066 0.0 0.00589882; 0.00413703 -0.00589882 0.0])
dAA = TransformUtils.so3([0.0 0.091869 -0.0492932; -0.091869 0.0 -0.0407528; 0.0492932 0.0407528 0.0])
dAA = TransformUtils.so3([0.0 0.0312053 -0.0678875; -0.0312053 0.0 0.0554195; 0.0678875 -0.0554195 0.0])
dAA = TransformUtils.Quaternion(0.9968632096176049,[0.0788375,-0.00632785,-0.0028892])
dAA = TransformUtils.SO3([0.996447 0.0379468 -0.0751833; -0.0474567 0.990503 -0.129039; 0.0695727 0.132149 0.988785])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.968776 -0.0583679 0.240969; 0.112764 0.969285 -0.218565; -0.220811 0.238913 0.945602]),[-0.544575,-0.621069,0.297206])
xj = TransformUtils.SE3(TransformUtils.SO3([0.919817 0.153583 0.36104; -0.178683 0.983212 0.0369788; -0.349299 -0.0985253 0.931817]),[-1.4169,0.569839,-1.45274])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.948076 0.281413 0.148181; -0.310335 0.920509 0.237393; -0.0695966 -0.271053 0.960045]),[-0.324394,0.787161,-2.12525])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
