>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (906.62890625 MB free)
Uptime: 44876.0 sec
Load Avg:  0.974609375  0.98388671875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz    2642331 s       5445 s     280719 s    1012554 s         93 s
#2  3497 MHz     864707 s       1701 s     122594 s    3367143 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0619 -0.0671224; 0.0619 0.0 -0.10697; 0.0671224 0.10697 0.0])
dAA = TransformUtils.so3([0.0 -0.165963 -0.0702906; 0.165963 0.0 0.10194; 0.0702906 -0.10194 0.0])
dAA = TransformUtils.so3([0.0 -0.0627981 -0.0590305; 0.0627981 0.0 0.0399379; 0.0590305 -0.0399379 0.0])
dAA = TransformUtils.Quaternion(0.996152530070995,[-0.0316892,0.0265688,-0.077266])
dAA = TransformUtils.SO3([0.988321 0.0940727 -0.119886; -0.1015 0.993177 -0.0574155; 0.113667 0.0689134 0.991126])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.961789 -0.235745 -0.139235; 0.232957 0.971812 -0.0362316; 0.143852 0.00241127 0.989596]),[1.65129,-1.35894,0.113302])
xj = TransformUtils.SE3(TransformUtils.SO3([0.984501 0.174095 0.0211776; -0.172313 0.982693 -0.0679942; -0.0326486 0.0632912 0.997461]),[1.01091,0.0903335,0.898342])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.902044 0.405472 0.148016; -0.399626 0.914103 -0.0686649; -0.163143 0.00278796 0.986598]),[-0.165365,1.56128,0.813528])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
