>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (622.5390625 MB free)
Uptime: 44067.0 sec
Load Avg:  1.1025390625  1.03515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2627430 s       6209 s     245711 s     990970 s        102 s
#2  3503 MHz     825607 s         13 s     111846 s    3355585 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0759859 -0.0308887; 0.0759859 0.0 -0.0573014; 0.0308887 0.0573014 0.0])
dAA = TransformUtils.so3([0.0 0.244675 -0.070288; -0.244675 0.0 0.143247; 0.070288 -0.143247 0.0])
dAA = TransformUtils.so3([0.0 0.0486152 -0.110102; -0.0486152 0.0 0.0529074; 0.110102 -0.0529074 0.0])
dAA = TransformUtils.Quaternion(0.9905352131268762,[0.131827,-0.0338594,0.0177562])
dAA = TransformUtils.SO3([0.997503 -0.0169401 -0.0685691; 0.00990949 0.994776 -0.101604; 0.069932 0.10067 0.992459])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.978059 0.0825146 0.191289; 0.0121548 0.894049 -0.447805; -0.207972 0.440305 0.87343]),[0.823812,0.47958,-0.492039])
xj = TransformUtils.SE3(TransformUtils.SO3([0.93614 -0.131054 0.326294; 0.215045 0.947564 -0.236384; -0.278206 0.291457 0.915235]),[1.03276,-1.7897,1.60787])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.976073 -0.177276 0.125918; 0.147011 0.964684 0.218567; -0.160218 -0.194826 0.967664]),[-0.259939,-1.087,2.89029])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
