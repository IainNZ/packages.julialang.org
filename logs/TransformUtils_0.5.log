>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (860.96875 MB free)
Uptime: 44479.0 sec
Load Avg:  1.01806640625  1.03515625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2694493 s        496 s     256181 s     952259 s         76 s
#2  3500 MHz     821369 s       6958 s     115913 s    3404999 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.022056 0.0970539; -0.022056 0.0 0.00573751; -0.0970539 -0.00573751 0.0])
dAA = TransformUtils.so3([0.0 0.0969549 0.0483973; -0.0969549 0.0 0.00610068; -0.0483973 -0.00610068 0.0])
dAA = TransformUtils.so3([0.0 -0.0149702 -0.155872; 0.0149702 0.0 -0.0842181; 0.155872 0.0842181 0.0])
dAA = TransformUtils.Quaternion(0.9989874803559827,[-0.0302729,-0.0150283,-0.0296937])
dAA = TransformUtils.SO3([0.996932 -0.0403015 -0.0670947; 0.030332 0.989188 -0.143481; 0.0721518 0.141006 0.987376])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.999311 -0.0349606 0.0124972; 0.0267746 0.911799 0.409763; -0.0257205 -0.409146 0.912106]),[-0.859458,-2.28504,-0.209116])
xj = TransformUtils.SE3(TransformUtils.SO3([0.98694 0.150158 0.0583213; -0.154795 0.984248 0.0854078; -0.044578 -0.0933203 0.994638]),[1.84102,0.621053,0.535077])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.983262 0.178808 0.0349853; -0.157407 0.930368 -0.331116; -0.0917554 0.320067 0.942941]),[2.75728,2.25087,1.90334])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
