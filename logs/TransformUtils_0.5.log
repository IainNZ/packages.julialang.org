>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (421.5546875 MB free)
Uptime: 49780.0 sec
Load Avg:  0.99072265625  0.998046875  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3055639 s       2975 s     281001 s    1094686 s        101 s
#2  3499 MHz    1211868 s       3875 s     130931 s    3499801 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.27.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.239314 -0.131905; -0.239314 0.0 0.206743; 0.131905 -0.206743 0.0])
dAA = TransformUtils.so3([0.0 -0.0266498 0.0548905; 0.0266498 0.0 0.1195; -0.0548905 -0.1195 0.0])
dAA = TransformUtils.so3([0.0 0.128935 -0.145454; -0.128935 0.0 -0.0134598; 0.145454 0.0134598 0.0])
dAA = TransformUtils.Quaternion(0.9970935659614939,[-0.0606276,-0.0137388,0.0440449])
dAA = TransformUtils.SO3([0.999493 -0.0131706 0.0289725; 0.0136021 0.999799 -0.0147501; -0.0287724 0.0151367 0.999471])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.996562 -0.059321 -0.0578347; 0.0408913 0.959315 -0.279362; 0.0720537 0.276036 0.958443]),[-0.677659,-0.93573,-0.208215])
xj = TransformUtils.SE3(TransformUtils.SO3([0.976558 -0.186824 -0.106915; 0.213632 0.902044 0.37507; 0.0263693 -0.389119 0.92081]),[-0.161658,1.31578,0.806373])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.983837 -0.177334 -0.0248621; 0.154289 0.769016 0.62033; -0.0908861 -0.614139 0.783947]),[0.6794,2.40936,0.313595])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
