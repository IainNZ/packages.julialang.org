>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (825.43359375 MB free)
Uptime: 48704.0 sec
Load Avg:  0.91650390625  0.96875  1.01611328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2968487 s         75 s     292383 s    1063972 s        111 s
#2  3500 MHz    1172925 s       6340 s     132283 s    3418361 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0595406 -0.142572; -0.0595406 0.0 0.069695; 0.142572 -0.069695 0.0])
dAA = TransformUtils.so3([0.0 -0.0154051 0.115478; 0.0154051 0.0 0.221193; -0.115478 -0.221193 0.0])
dAA = TransformUtils.so3([0.0 -0.0140201 -0.012219; 0.0140201 0.0 -0.149255; 0.012219 0.149255 0.0])
dAA = TransformUtils.Quaternion(0.9975261813524662,[-0.0140657,-0.0608362,-0.0322899])
dAA = TransformUtils.SO3([0.998392 0.0448321 -0.0346846; -0.0445553 0.998969 0.00871269; 0.0350395 -0.0071533 0.99936])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.95973 0.265177 0.0927293; -0.277184 0.947555 0.159086; -0.0456801 -0.178383 0.9829]),[1.13713,1.88211,-1.46013])
xj = TransformUtils.SE3(TransformUtils.SO3([0.916012 0.317126 0.245668; -0.246622 0.928197 -0.278616; -0.316385 0.194629 0.928451]),[0.924208,0.17725,-0.216261])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.961937 0.0381839 0.270591; 0.0656549 0.928894 -0.364479; -0.265268 0.368371 0.891031]),[0.211389,-1.8938,0.931632])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
