>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (865.30859375 MB free)
Uptime: 49785.0 sec
Load Avg:  1.0703125  1.001953125  0.9609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    3040380 s       5008 s     291675 s    1080812 s         95 s
#2  3507 MHz    1171864 s       2960 s     129834 s    3537162 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.119196 -0.0735112; 0.119196 0.0 0.118; 0.0735112 -0.118 0.0])
dAA = TransformUtils.so3([0.0 0.208181 -0.151833; -0.208181 0.0 -0.19222; 0.151833 0.19222 0.0])
dAA = TransformUtils.so3([0.0 -0.08736 0.0593422; 0.08736 0.0 0.0532765; -0.0593422 -0.0532765 0.0])
dAA = TransformUtils.Quaternion(0.9984296362832639,[-0.00792121,0.0536978,0.0138585])
dAA = TransformUtils.SO3([0.99234 -0.119323 -0.0319795; 0.122214 0.986019 0.113267; 0.018017 -0.116308 0.99305])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.949592 0.149634 -0.275473; -0.199719 0.966084 -0.163691; 0.241636 0.210457 0.94727]),[0.949635,0.312175,0.350567])
xj = TransformUtils.SE3(TransformUtils.SO3([0.949137 0.105497 -0.296665; -0.0582558 0.98477 0.163812; 0.309429 -0.138197 0.940827]),[1.65773,-0.347083,-0.527246])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.987696 -0.129892 -0.0870893; 0.150865 0.938072 0.311868; 0.0411867 -0.321169 0.946126]),[0.591957,-0.715685,-0.918673])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
