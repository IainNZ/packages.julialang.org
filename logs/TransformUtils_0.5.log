>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (940.89453125 MB free)
Uptime: 49189.0 sec
Load Avg:  1.005859375  1.02490234375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    3148296 s       6188 s     248212 s     933716 s        100 s
#2  3495 MHz    1050019 s         78 s     121812 s    3618568 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.28.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.140623 -0.136211; 0.140623 0.0 -0.0383332; 0.136211 0.0383332 0.0])
dAA = TransformUtils.so3([0.0 0.000458038 0.0744011; -0.000458038 0.0 0.0315282; -0.0744011 -0.0315282 0.0])
dAA = TransformUtils.so3([0.0 0.0146128 0.0368254; -0.0146128 0.0 -0.189058; -0.0368254 0.189058 0.0])
dAA = TransformUtils.Quaternion(0.9989035346295133,[-0.0194567,-0.0382655,0.0186793])
dAA = TransformUtils.SO3([0.983614 0.0270399 -0.178251; -0.0483564 0.99203 -0.116351; 0.173684 0.123064 0.977082])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.979194 -0.0215312 0.20178; -0.0669843 0.904324 0.421558; -0.191551 -0.426304 0.884067]),[1.43028,-0.219027,-1.11585])
xj = TransformUtils.SE3(TransformUtils.SO3([0.659724 -0.486121 -0.573105; 0.530816 0.841262 -0.102535; 0.531976 -0.236569 0.813042]),[-0.347364,0.875392,0.16749])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.508542 -0.487044 -0.710052; 0.239041 0.87209 -0.426988; 0.827191 0.0474093 0.559918]),[-2.05979,0.48089,1.23723])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
