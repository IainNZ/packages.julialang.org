>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (569.171875 MB free)
Uptime: 45009.0 sec
Load Avg:  1.0927734375  1.05615234375  1.0498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2807658 s       5037 s     247294 s     873974 s         89 s
#2  3500 MHz     814174 s       2334 s     114296 s    3450693 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00917253 -0.0805935; 0.00917253 0.0 0.235068; 0.0805935 -0.235068 0.0])
dAA = TransformUtils.so3([0.0 -0.0357799 -0.0053815; 0.0357799 0.0 0.0117399; 0.0053815 -0.0117399 0.0])
dAA = TransformUtils.so3([0.0 -0.143697 0.0199451; 0.143697 0.0 -0.125618; -0.0199451 0.125618 0.0])
dAA = TransformUtils.Quaternion(0.9967930548733803,[-0.00207584,-0.0564844,-0.0566463])
dAA = TransformUtils.SO3([0.990009 -0.135449 -0.039182; 0.12775 0.97925 -0.157318; 0.0596775 0.150741 0.98677])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.976132 0.195252 0.0950909; -0.213626 0.942097 0.258492; -0.0391135 -0.272636 0.961322]),[0.0843002,0.29253,0.801491])
xj = TransformUtils.SE3(TransformUtils.SO3([0.928031 -0.210635 0.307233; 0.268592 0.949856 -0.1601; -0.258104 0.231098 0.93807]),[0.480041,0.920175,-0.264543])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.858598 -0.417561 0.29741; 0.504608 0.790723 -0.346594; -0.0904453 0.44766 0.889618]),[0.293911,0.959212,-0.824929])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
