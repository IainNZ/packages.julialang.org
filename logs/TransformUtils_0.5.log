>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (856.3359375 MB free)
Uptime: 50366.0 sec
Load Avg:  1.00830078125  1.0146484375  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3152178 s       2930 s     284509 s    1020326 s         93 s
#2  3499 MHz    1122685 s       3265 s     123962 s    3661351 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0193513 -0.0657625; 0.0193513 0.0 -0.0373512; 0.0657625 0.0373512 0.0])
dAA = TransformUtils.so3([0.0 -0.100452 0.111115; 0.100452 0.0 0.0827534; -0.111115 -0.0827534 0.0])
dAA = TransformUtils.so3([0.0 0.200501 -0.0204746; -0.200501 0.0 0.0416183; 0.0204746 -0.0416183 0.0])
dAA = TransformUtils.Quaternion(0.9990242444033851,[0.0369378,0.0241348,0.00191603])
dAA = TransformUtils.SO3([0.993905 0.110131 0.00491132; -0.109664 0.992281 -0.0579048; -0.0112505 0.0570133 0.99831])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.840604 0.408968 0.355149; -0.426778 0.903836 -0.0306591; -0.333535 -0.125798 0.934307]),[0.486103,-0.21271,1.76334])
xj = TransformUtils.SE3(TransformUtils.SO3([0.757743 -0.141948 -0.636927; -0.186081 0.888526 -0.419398; 0.625459 0.436316 0.646861]),[1.81916,1.04861,-1.28625])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.507765 -0.644052 -0.572164; 0.063024 0.690143 -0.720923; 0.859187 0.329999 0.391021]),[1.59941,2.06883,-2.41449])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
