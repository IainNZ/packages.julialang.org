>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (787.60546875 MB free)
Uptime: 49525.0 sec
Load Avg:  0.9736328125  1.0224609375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    3095356 s       1610 s     268058 s     991068 s        114 s
#2  3504 MHz    1121364 s       4852 s     128520 s    3568261 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0508217 0.0261255; -0.0508217 0.0 0.12149; -0.0261255 -0.12149 0.0])
dAA = TransformUtils.so3([0.0 0.0459917 0.178328; -0.0459917 0.0 -0.235922; -0.178328 0.235922 0.0])
dAA = TransformUtils.so3([0.0 -0.0193673 0.0227467; 0.0193673 0.0 -0.0640272; -0.0227467 0.0640272 0.0])
dAA = TransformUtils.Quaternion(0.9948184193177628,[0.0561087,-0.0567701,0.0629705])
dAA = TransformUtils.SO3([0.998167 -0.0568997 -0.0206113; 0.0595843 0.983605 0.170209; 0.0105885 -0.171125 0.985192])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.877154 -0.460208 0.137147; 0.444355 0.88614 0.131543; -0.182068 -0.0544416 0.981778]),[1.18367,1.57308,-0.0517055])
xj = TransformUtils.SE3(TransformUtils.SO3([0.99975 -0.0178205 -0.0135319; 0.0136845 0.965417 -0.260352; 0.0177035 0.260102 0.965419]),[0.0988591,-0.438758,-0.353742])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.879792 0.366001 -0.30333; -0.44893 0.849536 -0.27704; 0.156293 0.379912 0.911723]),[-1.79053,-1.26709,-0.709953])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
