>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.37109375 MB free)
Uptime: 50285.0 sec
Load Avg:  1.11474609375  1.0634765625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3175354 s       5466 s     295517 s     945737 s         98 s
#2  3500 MHz    1074552 s       1184 s     137906 s    3688998 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0648729 0.219982; -0.0648729 0.0 0.0432868; -0.219982 -0.0432868 0.0])
dAA = TransformUtils.so3([0.0 0.142245 0.0716669; -0.142245 0.0 -0.025179; -0.0716669 0.025179 0.0])
dAA = TransformUtils.so3([0.0 0.082404 -0.114982; -0.082404 0.0 -0.0952265; 0.114982 0.0952265 0.0])
dAA = TransformUtils.Quaternion(0.9997748788584989,[0.00568699,0.0187357,0.00817455])
dAA = TransformUtils.SO3([0.988332 0.149213 -0.0305849; -0.147495 0.987678 0.0523179; 0.0380145 -0.0471964 0.998162])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.989436 0.0528125 0.135012; -0.0224119 0.975811 -0.217462; -0.143231 0.212139 0.966686]),[-0.599416,-1.46193,-0.610602])
xj = TransformUtils.SE3(TransformUtils.SO3([0.949924 0.153255 0.272319; -0.27834 0.811075 0.514475; -0.142025 -0.564509 0.813116]),[-0.153449,0.658163,-0.837579])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.966469 0.214313 0.141448; -0.251569 0.679795 0.688906; 0.0514856 -0.70139 0.710916]),[0.426251,2.04421,-0.620245])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
