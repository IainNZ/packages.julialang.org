>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (407.9453125 MB free)
Uptime: 50313.0 sec
Load Avg:  0.96240234375  1.0146484375  1.0166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3203532 s       4560 s     308950 s     928962 s        102 s
#2  3499 MHz    1006880 s       3347 s     134860 s    3757824 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.180275 -0.0971016; 0.180275 0.0 0.117556; 0.0971016 -0.117556 0.0])
dAA = TransformUtils.so3([0.0 0.0275739 -0.0617758; -0.0275739 0.0 -0.146161; 0.0617758 0.146161 0.0])
dAA = TransformUtils.so3([0.0 -0.0422153 0.0052713; 0.0422153 0.0 -0.00670586; -0.0052713 0.00670586 0.0])
dAA = TransformUtils.Quaternion(0.998763567473256,[0.00786403,-0.0490797,-0.000824425])
dAA = TransformUtils.SO3([0.993083 -0.00898285 0.117072; 0.00667309 0.999776 0.0201065; -0.117226 -0.0191862 0.99292])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.968613 -0.00931497 -0.2484; -0.0622674 0.958345 -0.278744; 0.240649 0.285462 0.927685]),[-0.558583,0.720059,-1.33175])
xj = TransformUtils.SE3(TransformUtils.SO3([0.990374 -0.0290642 -0.13533; 0.0742757 0.936608 0.342415; 0.116799 -0.349171 0.929751]),[0.464756,-0.778921,0.438909])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.982772 -0.1705 0.0713409; 0.095298 0.798189 0.594821; -0.158361 -0.577775 0.800686]),[1.51067,-0.940616,1.80625])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
