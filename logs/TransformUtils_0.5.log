>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (861.546875 MB free)
Uptime: 47101.0 sec
Load Avg:  1.021484375  1.041015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2730952 s       6665 s     237802 s    1196963 s         98 s
#2  3499 MHz     894331 s        338 s     110234 s    3579294 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0368147 -0.055469; -0.0368147 0.0 0.047341; 0.055469 -0.047341 0.0])
dAA = TransformUtils.so3([0.0 0.0627192 0.147677; -0.0627192 0.0 0.0553771; -0.147677 -0.0553771 0.0])
dAA = TransformUtils.so3([0.0 0.0720194 0.29919; -0.0720194 0.0 -0.0089896; -0.29919 0.0089896 0.0])
dAA = TransformUtils.Quaternion(0.9882857811500619,[-0.0603984,0.135958,-0.0340375])
dAA = TransformUtils.SO3([0.984958 0.0192639 -0.171714; -0.00420924 0.996146 0.0876092; 0.17274 -0.0855686 0.981244])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.948488 -0.0296652 -0.31542; 0.0707422 0.9903 0.119589; 0.308813 -0.135742 0.941387]),[-0.617025,-0.955579,0.435549])
xj = TransformUtils.SE3(TransformUtils.SO3([0.98957 -0.140354 0.0324405; 0.138497 0.988902 0.0537703; -0.0396273 -0.0487166 0.998026]),[-0.99987,-1.20152,-1.18184])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.936156 -0.0782113 0.342777; 0.113176 0.990086 -0.083188; -0.332872 0.116671 0.935726]),[-0.879995,-0.0126488,-1.43125])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
