>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (880.56640625 MB free)
Uptime: 43974.0 sec
Load Avg:  1.044921875  1.01953125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2588234 s       1254 s     265078 s    1013891 s         90 s
#2  3500 MHz     822964 s       5320 s     121587 s    3335862 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0550813 -0.0686925; -0.0550813 0.0 0.0477157; 0.0686925 -0.0477157 0.0])
dAA = TransformUtils.so3([0.0 0.175403 -0.0709428; -0.175403 0.0 -0.0332596; 0.0709428 0.0332596 0.0])
dAA = TransformUtils.so3([0.0 0.0196104 -0.111172; -0.0196104 0.0 0.0891811; 0.111172 -0.0891811 0.0])
dAA = TransformUtils.Quaternion(0.9948168255530172,[0.092362,0.0335053,-0.0261942])
dAA = TransformUtils.SO3([0.990397 -0.109325 0.0846279; 0.120691 0.982261 -0.14352; -0.0674363 0.152355 0.986022])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.959061 -0.149318 0.240639; 0.212887 0.940489 -0.264878; -0.186767 0.305263 0.933773]),[-0.827393,-1.48194,-1.00788])
xj = TransformUtils.SE3(TransformUtils.SO3([0.937627 -0.119515 0.326452; 0.235045 0.90983 -0.341999; -0.256142 0.397399 0.881173]),[-2.20518,-1.36525,1.20417])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.997118 0.00484845 0.0757063; 0.00286164 0.994841 -0.101403; -0.0758074 0.101327 0.991961]),[-1.70967,0.990729,1.7031])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
