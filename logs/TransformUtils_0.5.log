>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (628.10546875 MB free)
Uptime: 43674.0 sec
Load Avg:  0.974609375  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    2632181 s       4840 s     276571 s     919383 s         87 s
#2  3495 MHz     778156 s         71 s     120482 s    3371138 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0677972 0.148932; 0.0677972 0.0 -0.0678799; -0.148932 0.0678799 0.0])
dAA = TransformUtils.so3([0.0 -0.123362 -0.0905929; 0.123362 0.0 -0.0880006; 0.0905929 0.0880006 0.0])
dAA = TransformUtils.so3([0.0 -0.140645 0.210979; 0.140645 0.0 -0.0185635; -0.210979 0.0185635 0.0])
dAA = TransformUtils.Quaternion(0.9973643146342824,[0.0314318,0.0650252,-0.00694141])
dAA = TransformUtils.SO3([0.997424 -0.0378532 0.0609283; 0.0314066 0.994134 0.103491; -0.0644883 -0.101311 0.992762])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992169 0.121912 0.0271808; -0.124371 0.984354 0.124818; -0.0115387 -0.127221 0.991807]),[-0.228358,-0.118041,0.184543])
xj = TransformUtils.SE3(TransformUtils.SO3([0.900886 -0.0992317 -0.42256; 0.159554 0.981067 0.109776; 0.403666 -0.166317 0.899662]),[-0.139685,-0.149979,0.497832])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.869329 -0.218552 -0.443285; 0.215532 0.974778 -0.0579124; 0.444761 -0.0451969 0.894508]),[0.088336,-0.0604845,0.309147])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
