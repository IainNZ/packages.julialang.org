>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-125-generic #174-Ubuntu SMP Mon Jul 10 18:51:24 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (888.1953125 MB free)
Uptime: 50682.0 sec
Load Avg:  0.884765625  0.990234375  0.994140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3172093 s       5132 s     288251 s    1000479 s        108 s
#2  3499 MHz    1097324 s       3178 s     132354 s    3687371 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0681329 0.0624407; 0.0681329 0.0 -0.0688822; -0.0624407 0.0688822 0.0])
dAA = TransformUtils.so3([0.0 0.00191729 -0.154312; -0.00191729 0.0 0.0161606; 0.154312 -0.0161606 0.0])
dAA = TransformUtils.so3([0.0 -0.0923584 0.110993; 0.0923584 0.0 -0.131009; -0.110993 0.131009 0.0])
dAA = TransformUtils.Quaternion(0.9872988208580243,[0.0889929,0.00403076,0.131549])
dAA = TransformUtils.SO3([0.997587 -0.028745 0.0631998; 0.0268454 0.999168 0.0307042; -0.0640298 -0.0289335 0.997528])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.824011 0.464378 -0.324589; -0.499218 0.866013 -0.028355; 0.267931 0.185406 0.94543]),[-0.815101,-0.179289,-1.57642])
xj = TransformUtils.SE3(TransformUtils.SO3([0.969461 -0.244845 -0.0139944; 0.245178 0.968949 0.0320166; 0.00572078 -0.0344699 0.999389]),[-0.0795142,-0.452617,-1.57276])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.677983 -0.694707 0.240252; 0.663584 0.719031 0.20652; -0.31622 0.0194106 0.948487]),[0.743561,0.105562,-0.22756])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
