>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (874.41796875 MB free)
Uptime: 50068.0 sec
Load Avg:  1.16357421875  1.06640625  1.02685546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    3040006 s       4758 s     296750 s    1100970 s         88 s
#2  3507 MHz    1173176 s       1997 s     134732 s    3543593 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0618435 0.0853434; 0.0618435 0.0 -0.0300953; -0.0853434 0.0300953 0.0])
dAA = TransformUtils.so3([0.0 -0.131065 0.131612; 0.131065 0.0 -0.0702573; -0.131612 0.0702573 0.0])
dAA = TransformUtils.so3([0.0 0.128396 -0.0133288; -0.128396 0.0 0.126836; 0.0133288 -0.126836 0.0])
dAA = TransformUtils.Quaternion(0.992243894346,[-0.0280005,-0.0924636,0.0782209])
dAA = TransformUtils.SO3([0.997135 -0.0435411 -0.0618592; 0.0490205 0.994733 0.0900157; 0.057614 -0.0927901 0.994017])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.973345 0.0262409 -0.227839; -0.0762933 0.973902 -0.213763; 0.216284 0.225448 0.949945]),[0.302808,-0.465363,-0.118738])
xj = TransformUtils.SE3(TransformUtils.SO3([0.980848 -0.174342 -0.0868389; 0.177214 0.983816 0.0264745; 0.0808179 -0.0413565 0.995871]),[1.14908,0.735196,-1.91557])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.958663 -0.253699 0.128847; 0.216547 0.944242 0.248022; -0.184585 -0.209868 0.960148]),[0.343494,0.786342,-2.15634])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
