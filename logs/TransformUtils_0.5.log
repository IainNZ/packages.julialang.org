>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (883.8984375 MB free)
Uptime: 43770.0 sec
Load Avg:  1.00439453125  0.974609375  0.9931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2637743 s       6946 s     271445 s     909453 s         92 s
#2  3504 MHz     755350 s         46 s     117025 s    3380663 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.126721 0.143127; 0.126721 0.0 0.131894; -0.143127 -0.131894 0.0])
dAA = TransformUtils.so3([0.0 0.0657871 0.0268412; -0.0657871 0.0 0.138367; -0.0268412 -0.138367 0.0])
dAA = TransformUtils.so3([0.0 0.0272751 -0.0840752; -0.0272751 0.0 -0.17688; 0.0840752 0.17688 0.0])
dAA = TransformUtils.Quaternion(0.9993829507958992,[-0.0119377,-0.0136845,0.0300657])
dAA = TransformUtils.SO3([0.990903 0.0250995 0.132218; -0.00291599 0.986228 -0.165366; -0.134548 0.163476 0.977329])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.892299 0.0649471 -0.446749; 0.138691 0.902303 0.408183; 0.429613 -0.426181 0.796117]),[-0.851548,-1.45824,0.461448])
xj = TransformUtils.SE3(TransformUtils.SO3([0.995912 -0.0654693 -0.0622407; 0.0660797 0.997784 0.00779778; 0.0615922 -0.0118787 0.998031]),[-0.0227042,-0.848969,0.233355])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.924276 0.0748617 0.374312; 0.098056 0.901114 -0.422348; -0.368915 0.42707 0.825538]),[0.726085,0.70079,-0.303179])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
