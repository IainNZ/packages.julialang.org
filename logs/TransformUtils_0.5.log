>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-128-generic #177-Ubuntu SMP Tue Aug 8 11:40:23 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (409.97265625 MB free)
Uptime: 51122.0 sec
Load Avg:  1.064453125  1.0048828125  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3247720 s         84 s     304404 s     975897 s        110 s
#2  3499 MHz    1093248 s       6509 s     141176 s    3744806 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.30.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0924681 -0.0102495; 0.0924681 0.0 0.155879; 0.0102495 -0.155879 0.0])
dAA = TransformUtils.so3([0.0 -0.077189 -0.0054128; 0.077189 0.0 0.000875451; 0.0054128 -0.000875451 0.0])
dAA = TransformUtils.so3([0.0 0.0160348 -0.034824; -0.0160348 0.0 0.000339873; 0.034824 -0.000339873 0.0])
dAA = TransformUtils.Quaternion(0.9989130960475638,[-0.0363365,0.0259398,0.0133946])
dAA = TransformUtils.SO3([0.987549 -0.0900281 0.129003; 0.0912987 0.995816 -0.00395757; -0.128107 0.0156861 0.991636])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.966442 -0.24268 -0.0842348; 0.244746 0.969471 0.0149863; 0.0780264 -0.0350996 0.996333]),[-0.0479817,0.0368789,1.60925])
xj = TransformUtils.SE3(TransformUtils.SO3([0.996039 0.0130337 -0.0879526; -0.00303988 0.993611 0.112818; 0.0888611 -0.112103 0.989715]),[-1.24002,-0.35157,0.645281])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.968804 0.247032 0.0198344; -0.247785 0.964049 0.0959791; 0.00458854 -0.0978996 0.995186]),[-1.32232,-0.0534725,-0.865844])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
