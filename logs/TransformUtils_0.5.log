>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (414.46484375 MB free)
Uptime: 49676.0 sec
Load Avg:  1.0048828125  1.0146484375  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    3098195 s       7489 s     287819 s     976653 s        104 s
#2  3502 MHz    1095908 s         93 s     133860 s    3608679 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.194063 0.121855; 0.194063 0.0 -0.0743525; -0.121855 0.0743525 0.0])
dAA = TransformUtils.so3([0.0 -0.0317097 -0.009031; 0.0317097 0.0 0.00482354; 0.009031 -0.00482354 0.0])
dAA = TransformUtils.so3([0.0 0.0335688 0.0058299; -0.0335688 0.0 -0.0610182; -0.0058299 0.0610182 0.0])
dAA = TransformUtils.Quaternion(0.9933618844755816,[0.0241584,-0.0785429,0.0804957])
dAA = TransformUtils.SO3([0.988043 -0.105307 -0.112615; 0.105003 0.994434 -0.00864431; 0.112898 -0.00328391 0.993601])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.993342 0.0818639 -0.0810546; -0.0726621 0.991204 0.110611; 0.0893966 -0.103985 0.990553]),[0.51206,1.03472,1.83221])
xj = TransformUtils.SE3(TransformUtils.SO3([0.827197 -0.374008 -0.419361; 0.311061 0.926314 -0.212564; 0.46796 0.0453858 0.882583]),[-1.49001,0.430167,-0.849682])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.840921 -0.434769 -0.322223; 0.327381 0.882829 -0.3368; 0.430898 0.177732 0.884725]),[-2.18456,-0.484262,-2.56115])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
