>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (414.0234375 MB free)
Uptime: 49064.0 sec
Load Avg:  1.08642578125  1.0185546875  1.00146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3173789 s       2267 s     261901 s     866274 s         94 s
#2  3499 MHz    1020316 s       4703 s     125633 s    3644565 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0337881 -0.276399; 0.0337881 0.0 -0.0568634; 0.276399 0.0568634 0.0])
dAA = TransformUtils.so3([0.0 0.0122741 0.142659; -0.0122741 0.0 -0.0957435; -0.142659 0.0957435 0.0])
dAA = TransformUtils.so3([0.0 0.039565 -0.0823617; -0.039565 0.0 -0.221198; 0.0823617 0.221198 0.0])
dAA = TransformUtils.Quaternion(0.9968603581066926,[-0.0572484,0.0542767,0.00678887])
dAA = TransformUtils.SO3([0.996841 -0.0777367 -0.0162511; 0.0755028 0.991105 -0.10959; 0.0246257 0.108017 0.993844])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.994073 -0.0776726 0.076061; 0.0540828 0.960269 0.273785; -0.0943046 -0.268049 0.958779]),[-1.0134,0.894448,-0.643686])
xj = TransformUtils.SE3(TransformUtils.SO3([0.957817 0.284001 -0.0439233; -0.281893 0.958217 0.0485514; 0.0558767 -0.0341217 0.997854]),[1.45642,-0.970208,-0.501629])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.931626 0.337358 -0.135139; -0.360067 0.907233 -0.21744; 0.0492479 0.251232 0.966673]),[2.34094,-2.02049,-0.186457])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
