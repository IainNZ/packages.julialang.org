>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (586.1875 MB free)
Uptime: 44329.0 sec
Load Avg:  0.9970703125  0.99951171875  1.02685546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2562728 s         65 s     228799 s    1108663 s         70 s
#2  3500 MHz     873690 s       6062 s     107098 s    3338683 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0669604 -0.0507845; 0.0669604 0.0 -0.0336058; 0.0507845 0.0336058 0.0])
dAA = TransformUtils.so3([0.0 -0.0570557 -0.00663682; 0.0570557 0.0 -0.0779667; 0.00663682 0.0779667 0.0])
dAA = TransformUtils.so3([0.0 0.135813 -0.00814103; -0.135813 0.0 -0.152775; 0.00814103 0.152775 0.0])
dAA = TransformUtils.Quaternion(0.9976302785617561,[0.0110813,-0.0036471,-0.0678066])
dAA = TransformUtils.SO3([0.989483 -0.0892559 -0.113828; 0.105539 0.983617 0.146148; 0.0989183 -0.156624 0.982692])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.954803 -0.119821 -0.272019; 0.146749 0.985865 0.0808355; 0.258488 -0.1171 0.958891]),[-0.595104,1.72212,0.429752])
xj = TransformUtils.SE3(TransformUtils.SO3([0.96343 -0.266088 -0.0316012; 0.267587 0.96159 0.0611682; 0.0141112 -0.0673874 0.997627]),[0.609542,0.955272,-0.507971])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.962802 -0.130369 0.236678; 0.146713 0.987773 -0.0527324; -0.226909 0.0854944 0.970156]),[0.795275,-0.790546,-1.28885])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
