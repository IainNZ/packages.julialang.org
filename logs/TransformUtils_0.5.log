>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (596.0390625 MB free)
Uptime: 45010.0 sec
Load Avg:  0.994140625  1.01513671875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2704744 s       4011 s     266202 s    1001553 s         88 s
#2  3496 MHz     887984 s       3012 s     123280 s    3383875 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.24535 0.00945073; -0.24535 0.0 -0.0560176; -0.00945073 0.0560176 0.0])
dAA = TransformUtils.so3([0.0 -0.0721582 -0.0849595; 0.0721582 0.0 -0.060845; 0.0849595 0.060845 0.0])
dAA = TransformUtils.so3([0.0 -0.0928982 -0.0524146; 0.0928982 0.0 0.0982857; 0.0524146 -0.0982857 0.0])
dAA = TransformUtils.Quaternion(0.9995256060730648,[-0.00496034,-0.0303652,-0.0013824])
dAA = TransformUtils.SO3([0.972061 -0.0646381 0.225654; 0.0594406 0.997788 0.0297589; -0.227079 -0.0155145 0.973753])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.769068 0.122677 -0.627284; -0.312204 0.928467 -0.201193; 0.55773 0.350571 0.752354]),[0.584254,0.115261,0.461379])
xj = TransformUtils.SE3(TransformUtils.SO3([0.926227 -0.375746 -0.030322; 0.375242 0.91131 0.169433; -0.0360309 -0.168311 0.985075]),[1.19282,0.0339416,0.1341])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.575084 -0.667361 0.473189; 0.449394 0.741021 0.498932; -0.683611 -0.074279 0.726057]),[0.310879,-0.115581,-0.61161])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
