>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (408.9609375 MB free)
Uptime: 48828.0 sec
Load Avg:  1.0322265625  1.03076171875  1.056640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    3141313 s        164 s     245382 s     875639 s        100 s
#2  3499 MHz     989434 s       6527 s     118470 s    3623858 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0270156 0.208468; 0.0270156 0.0 -0.123179; -0.208468 0.123179 0.0])
dAA = TransformUtils.so3([0.0 -0.0489024 -0.105145; 0.0489024 0.0 -0.0897638; 0.105145 0.0897638 0.0])
dAA = TransformUtils.so3([0.0 -0.0235612 0.0221314; 0.0235612 0.0 0.131863; -0.0221314 -0.131863 0.0])
dAA = TransformUtils.Quaternion(0.9964229601868256,[0.00692206,-0.0195867,0.081913])
dAA = TransformUtils.SO3([0.98878 0.0631205 -0.135391; -0.0515349 0.994836 0.0874357; 0.140211 -0.0794773 0.986927])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.987385 -0.110759 0.11315; 0.0715488 0.949605 0.305175; -0.141249 -0.293229 0.94555]),[0.66917,-0.893764,-0.246135])
xj = TransformUtils.SE3(TransformUtils.SO3([0.945463 -0.32294 0.0425425; 0.32573 0.937537 -0.122164; -0.000433434 0.129359 0.991598]),[1.38878,0.136555,-0.4449])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.956903 -0.270059 -0.106797; 0.204724 0.888126 -0.411485; 0.205974 0.371888 0.905138]),[0.812327,0.956977,0.20791])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
