>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (838.06640625 MB free)
Uptime: 44973.0 sec
Load Avg:  1.03564453125  0.9931640625  1.00341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2795167 s       3252 s     226656 s     911187 s        109 s
#2  3500 MHz     860980 s       3599 s     111218 s    3401733 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.019409 -0.106682; 0.019409 0.0 0.0199577; 0.106682 -0.0199577 0.0])
dAA = TransformUtils.so3([0.0 0.0920558 0.0207603; -0.0920558 0.0 0.0649348; -0.0207603 -0.0649348 0.0])
dAA = TransformUtils.so3([0.0 -0.0427694 0.153617; 0.0427694 0.0 -0.0421044; -0.153617 0.0421044 0.0])
dAA = TransformUtils.Quaternion(0.996482509719465,[-0.0494714,0.0667493,0.0109417])
dAA = TransformUtils.SO3([0.985707 0.146096 -0.0838905; -0.155944 0.979665 -0.126243; 0.0637411 0.137521 0.988446])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.991988 0.104374 0.0711742; -0.0652595 0.905767 -0.418721; -0.108171 0.410722 0.905321]),[-0.942173,0.685359,-0.612471])
xj = TransformUtils.SE3(TransformUtils.SO3([0.942306 -0.113328 -0.314986; 0.102788 0.993449 -0.0499319; 0.318581 0.0146745 0.947782]),[0.541486,-1.12493,0.791139])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.893587 -0.178839 -0.411726; 0.322302 0.894032 0.311172; 0.312447 -0.410759 0.856536]),[1.43808,-0.908347,2.13432])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
