>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (871.00390625 MB free)
Uptime: 44396.0 sec
Load Avg:  1.0078125  1.001953125  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2870270 s       4883 s     240886 s     742067 s         28 s
#2  3500 MHz     832673 s        194 s     104587 s    3411513 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.15413 -0.0298386; 0.15413 0.0 0.0864294; 0.0298386 -0.0864294 0.0])
dAA = TransformUtils.so3([0.0 0.132051 0.0710347; -0.132051 0.0 0.0176772; -0.0710347 -0.0176772 0.0])
dAA = TransformUtils.so3([0.0 0.0666375 -0.209425; -0.0666375 0.0 -0.191975; 0.209425 0.191975 0.0])
dAA = TransformUtils.Quaternion(0.9985082935408589,[-0.03906,-0.0227517,0.0306245])
dAA = TransformUtils.SO3([0.988362 0.104805 -0.110256; -0.113807 0.990374 -0.0787831; 0.100937 0.0904141 0.990776])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.977383 -0.00569979 -0.211402; -0.0205078 0.992371 -0.121571; 0.210482 0.123156 0.969809]),[0.262524,1.36876,-0.565418])
xj = TransformUtils.SE3(TransformUtils.SO3([0.858371 0.402158 -0.318541; -0.372252 0.915485 0.152694; 0.353027 -0.01249 0.93553]),[-0.190294,-3.47251,-0.277041])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.920897 0.371659 -0.117556; -0.330827 0.90467 0.268561; 0.206162 -0.208426 0.956063]),[-0.282595,-4.76624,0.963953])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
