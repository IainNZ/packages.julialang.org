>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (602.03125 MB free)
Uptime: 44302.0 sec
Load Avg:  1.021484375  1.064453125  1.0458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2691960 s       6684 s     261129 s     926179 s         87 s
#2  3499 MHz     764158 s        150 s     112880 s    3457687 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.1
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0237861 0.174847; -0.0237861 0.0 -0.228468; -0.174847 0.228468 0.0])
dAA = TransformUtils.so3([0.0 -0.00352003 0.0628471; 0.00352003 0.0 0.127671; -0.0628471 -0.127671 0.0])
dAA = TransformUtils.so3([0.0 0.0137919 0.0423252; -0.0137919 0.0 -0.0658182; -0.0423252 0.0658182 0.0])
dAA = TransformUtils.Quaternion(0.995260232681706,[0.046141,-0.0530099,-0.0672163])
dAA = TransformUtils.SO3([0.983588 -0.12011 0.134642; 0.105695 0.988345 0.109554; -0.146232 -0.0935249 0.984819])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.992795 0.112065 0.0424278; -0.11884 0.966195 0.228787; -0.0153544 -0.232181 0.972551]),[-1.89138,1.13562,0.504563])
xj = TransformUtils.SE3(TransformUtils.SO3([0.906908 -0.396396 -0.142787; 0.361471 0.906134 -0.219681; 0.216465 0.147617 0.965066]),[-0.584367,0.416939,-0.381429])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.854093 -0.503492 -0.130469; 0.400625 0.796807 -0.452326; 0.331701 0.334059 0.882258]),[1.39661,-0.342203,-0.970644])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
