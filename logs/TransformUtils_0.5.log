>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (397.40625 MB free)
Uptime: 50383.0 sec
Load Avg:  1.01904296875  1.013671875  1.0390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    3116380 s       5758 s     274033 s    1054864 s        100 s
#2  3501 MHz    1146627 s         60 s     129342 s    3615637 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.28.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0204462 0.0681836; -0.0204462 0.0 -0.0324014; -0.0681836 0.0324014 0.0])
dAA = TransformUtils.so3([0.0 0.00437824 0.000362362; -0.00437824 0.0 0.0742755; -0.000362362 -0.0742755 0.0])
dAA = TransformUtils.so3([0.0 0.100843 -0.0334678; -0.100843 0.0 0.171829; 0.0334678 -0.171829 0.0])
dAA = TransformUtils.Quaternion(0.9968831851283564,[-0.0501205,-0.0579936,-0.0186704])
dAA = TransformUtils.SO3([0.996911 -0.0782236 0.00698388; 0.0765213 0.987512 0.137712; -0.017669 -0.136752 0.990448])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.989755 0.0493782 -0.133966; -0.0647649 0.991477 -0.113044; 0.127242 0.120562 0.984517]),[1.40904,-0.672432,-0.229591])
xj = TransformUtils.SE3(TransformUtils.SO3([0.896739 -0.0464367 0.440116; -0.107925 0.94151 0.319236; -0.429198 -0.333771 0.839277]),[0.71641,1.02664,0.168132])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.83993 -0.149407 0.521723; -0.114471 0.890952 0.439432; -0.530485 -0.428814 0.731235]),[-0.744971,1.69834,0.292285])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
