>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (897.16796875 MB free)
Uptime: 43320.0 sec
Load Avg:  0.93603515625  0.9873046875  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2687646 s        121 s     216787 s     869690 s         78 s
#2  3504 MHz     761855 s       6057 s     104512 s    3363009 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.11.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.148358 -0.0148923; 0.148358 0.0 -0.0683283; 0.0148923 0.0683283 0.0])
dAA = TransformUtils.so3([0.0 0.0245818 0.0953777; -0.0245818 0.0 0.132087; -0.0953777 -0.132087 0.0])
dAA = TransformUtils.so3([0.0 -0.12098 -0.0544498; 0.12098 0.0 -0.0724788; 0.0544498 0.0724788 0.0])
dAA = TransformUtils.Quaternion(0.9921728682018375,[-0.00449374,-0.023481,-0.122562])
dAA = TransformUtils.SO3([0.995583 -0.0692682 0.0633681; 0.0693121 0.997594 0.00150719; -0.06332 0.00289164 0.997989])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.979283 0.0380904 -0.198882; -0.0904829 0.960956 -0.261487; 0.181157 0.274066 0.944495]),[-0.584364,-0.856257,-0.32402])
xj = TransformUtils.SE3(TransformUtils.SO3([0.958868 -0.0570321 -0.278062; 0.025429 0.992928 -0.115966; 0.282709 0.104125 0.953537]),[0.523266,-0.214793,1.09002])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.987917 -0.126831 -0.0890689; 0.138441 0.980525 0.139302; 0.0696665 -0.14995 0.986236]),[1.2828,1.04615,0.947531])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
