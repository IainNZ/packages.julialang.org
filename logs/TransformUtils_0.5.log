>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-126-generic #175-Ubuntu SMP Thu Jul 20 17:33:56 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (816.16015625 MB free)
Uptime: 50246.0 sec
Load Avg:  0.9521484375  0.998046875  0.9833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3083808 s       5742 s     268916 s    1083592 s        114 s
#2  3500 MHz    1151336 s       1426 s     130772 s    3575409 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.29.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.00892063 -0.0127014; -0.00892063 0.0 0.0710383; 0.0127014 -0.0710383 0.0])
dAA = TransformUtils.so3([0.0 -0.15986 -0.0847986; 0.15986 0.0 -0.0190535; 0.0847986 0.0190535 0.0])
dAA = TransformUtils.so3([0.0 -0.0442156 0.0955697; 0.0442156 0.0 -0.0189547; -0.0955697 0.0189547 0.0])
dAA = TransformUtils.Quaternion(0.9987228594155305,[0.0499746,0.00575992,-0.00469196])
dAA = TransformUtils.SO3([0.976755 -0.164679 -0.137227; 0.157901 0.985693 -0.058969; 0.144975 0.03593 0.988783])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.895032 0.442677 -0.0543684; -0.445771 0.891824 -0.0770637; 0.0143727 0.0932104 0.995543]),[1.47044,1.17474,1.11988])
xj = TransformUtils.SE3(TransformUtils.SO3([0.944366 0.324644 0.0527163; -0.322142 0.880697 0.347272; 0.066313 -0.344934 0.936281]),[0.786732,-0.237741,0.163282])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.989792 -0.10698 -0.0941643; 0.136936 0.896987 0.420313; 0.0394992 -0.428917 0.90248]),[0.00395128,-1.65151,-0.806316])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
