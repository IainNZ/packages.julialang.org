>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (497.30078125 MB free)
Uptime: 44567.0 sec
Load Avg:  0.99169921875  1.00390625  1.0234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2690888 s       6980 s     212242 s    1002937 s         99 s
#2  3500 MHz     886573 s         60 s     104472 s    3364102 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.17659 0.090785; 0.17659 0.0 0.195379; -0.090785 -0.195379 0.0])
dAA = TransformUtils.so3([0.0 -0.138699 -0.0403092; 0.138699 0.0 0.163668; 0.0403092 -0.163668 0.0])
dAA = TransformUtils.so3([0.0 -0.0666457 -0.0311698; 0.0666457 0.0 -0.0374546; 0.0311698 0.0374546 0.0])
dAA = TransformUtils.Quaternion(0.9929284842497108,[0.0602887,0.0772924,0.0669641])
dAA = TransformUtils.SO3([0.998164 0.0605363 0.00218884; -0.0602495 0.995883 -0.0677262; -0.00627972 0.0674699 0.997702])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.987999 -0.124483 -0.0914445; 0.137991 0.977352 0.160441; 0.0694013 -0.171134 0.9828]),[1.86298,-0.656731,0.458515])
xj = TransformUtils.SE3(TransformUtils.SO3([0.904128 0.416949 -0.0933054; -0.408998 0.907757 0.0932572; 0.123582 -0.0461547 0.99126]),[0.993316,0.118955,-1.02574])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.845416 0.534004 -0.0105222; -0.533433 0.843194 -0.0668784; -0.0268411 0.062153 0.997706]),[-0.855197,1.12038,-1.25475])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
