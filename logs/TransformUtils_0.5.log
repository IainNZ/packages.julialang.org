>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.20703125 MB free)
Uptime: 44969.0 sec
Load Avg:  0.955078125  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2725366 s       1158 s     273720 s     947731 s         73 s
#2  3500 MHz     815276 s       6006 s     119399 s    3443956 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0278517 -0.0776567; 0.0278517 0.0 0.0969159; 0.0776567 -0.0969159 0.0])
dAA = TransformUtils.so3([0.0 -0.0108336 -0.0871089; 0.0108336 0.0 0.158083; 0.0871089 -0.158083 0.0])
dAA = TransformUtils.so3([0.0 -0.0721874 -0.0479458; 0.0721874 0.0 0.190193; 0.0479458 -0.190193 0.0])
dAA = TransformUtils.Quaternion(0.9977404726479256,[-0.0379878,0.0535479,0.0142654])
dAA = TransformUtils.SO3([0.990002 -0.109449 -0.0889727; 0.127749 0.963162 0.236641; 0.0597949 -0.245642 0.967515])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.816881 0.57194 -0.0747681; -0.492367 0.758936 0.426134; 0.300467 -0.311287 0.901565]),[0.10674,-0.610027,-1.47037])
xj = TransformUtils.SE3(TransformUtils.SO3([0.98072 -0.190559 0.0433153; 0.194588 0.972684 -0.126577; -0.0180116 0.132566 0.991011]),[0.122987,1.36532,0.0694985])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.69991 -0.59475 0.395472; 0.7142 0.58795 -0.379779; -0.00664444 0.548258 0.836283]),[-0.496644,1.02911,2.22884])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
