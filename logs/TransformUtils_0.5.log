>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (812.8125 MB free)
Uptime: 46679.0 sec
Load Avg:  1.0595703125  1.08203125  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2876718 s        508 s     254970 s    1009342 s         97 s
#2  3500 MHz     869251 s       6075 s     108543 s    3574869 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.25.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0524352 -0.166355; 0.0524352 0.0 -0.202846; 0.166355 0.202846 0.0])
dAA = TransformUtils.so3([0.0 0.0863641 -0.09116; -0.0863641 0.0 0.0703345; 0.09116 -0.0703345 0.0])
dAA = TransformUtils.so3([0.0 0.0436744 -0.0981438; -0.0436744 0.0 0.0423601; 0.0981438 -0.0423601 0.0])
dAA = TransformUtils.Quaternion(0.9976434512602264,[0.0152075,-0.013928,0.0654392])
dAA = TransformUtils.SO3([0.994995 0.0877793 -0.0477439; -0.0864957 0.99585 0.0283222; 0.0500318 -0.0240508 0.998458])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.901727 0.25565 -0.348613; -0.295974 0.952857 -0.0668072; 0.315099 0.163422 0.934883]),[-0.557762,-1.3118,0.321041])
xj = TransformUtils.SE3(TransformUtils.SO3([0.991048 0.122318 -0.0534964; -0.116838 0.988526 0.0957381; 0.064593 -0.0886307 0.993968]),[1.7785,0.881441,-0.547076])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.948589 -0.210208 0.236623; 0.152587 0.95871 0.239985; -0.2773 -0.191541 0.941497]),[1.18398,2.54524,-1.77256])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
