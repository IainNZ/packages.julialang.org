>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (602.38671875 MB free)
Uptime: 44546.0 sec
Load Avg:  0.88232421875  0.9931640625  1.03564453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    2607006 s       6856 s     246420 s    1057650 s         94 s
#2  3505 MHz     866350 s         46 s     109873 s    3357839 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.047898 -0.0717933; 0.047898 0.0 0.153798; 0.0717933 -0.153798 0.0])
dAA = TransformUtils.so3([0.0 0.0526644 0.0152719; -0.0526644 0.0 0.0207831; -0.0152719 -0.0207831 0.0])
dAA = TransformUtils.so3([0.0 -0.0155947 -0.0119047; 0.0155947 0.0 0.0729172; 0.0119047 -0.0729172 0.0])
dAA = TransformUtils.Quaternion(0.9969041538850774,[-0.000317318,-0.0317529,-0.0719289])
dAA = TransformUtils.SO3([0.987343 -0.0269391 -0.156296; 0.0283665 0.999574 0.00690895; 0.156043 -0.0112551 0.987686])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997337 0.039817 0.0610974; -0.0574011 0.94537 0.320906; -0.0449821 -0.323558 0.945138]),[0.167623,1.3636,-1.31635])
xj = TransformUtils.SE3(TransformUtils.SO3([0.962703 0.269613 -0.0226326; -0.265478 0.957444 0.113232; 0.0521984 -0.103001 0.993311]),[0.641976,0.0343129,-0.528764])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.97303 0.21857 -0.0737533; -0.229533 0.949201 -0.215249; 0.0229598 0.226372 0.97377]),[0.513965,-1.49261,0.34678])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
