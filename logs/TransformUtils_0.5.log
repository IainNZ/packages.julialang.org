>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (410.41796875 MB free)
Uptime: 49598.0 sec
Load Avg:  0.974609375  0.99658203125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3050795 s       5653 s     277121 s    1044447 s         99 s
#2  3500 MHz    1148755 s       1142 s     133572 s    3533963 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.13.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.28.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0503453 0.0191726; -0.0503453 0.0 -0.100515; -0.0191726 0.100515 0.0])
dAA = TransformUtils.so3([0.0 -0.0188327 -0.0607559; 0.0188327 0.0 0.046821; 0.0607559 -0.046821 0.0])
dAA = TransformUtils.so3([0.0 -0.114465 -0.0737021; 0.114465 0.0 -0.0956801; 0.0737021 0.0956801 0.0])
dAA = TransformUtils.Quaternion(0.9968028135445941,[-0.0589808,-0.0413478,0.0345799])
dAA = TransformUtils.SO3([0.98041 -0.0681053 -0.184816; 0.0362388 0.984671 -0.170615; 0.193603 0.160575 0.96785])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.947983 0.114732 0.296927; -0.117117 0.99307 -0.00980819; -0.295994 -0.0254771 0.95485]),[-1.23831,1.8136,-1.61933])
xj = TransformUtils.SE3(TransformUtils.SO3([0.862613 -0.488035 0.133123; 0.460595 0.866546 0.192224; -0.209169 -0.104499 0.97228]),[-0.164687,-1.72203,-0.572681])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.825711 -0.533204 -0.184104; 0.561701 0.80721 0.181394; 0.0518902 -0.253191 0.966024]),[1.12206,-3.41462,1.35286])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
