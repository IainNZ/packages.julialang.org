>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (812.07421875 MB free)
Uptime: 46867.0 sec
Load Avg:  0.9033203125  0.9853515625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2965492 s        179 s     235176 s     933357 s        120 s
#2  3499 MHz    1076467 s       5816 s     119030 s    3362412 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.164849 0.00948974; 0.164849 0.0 0.0644691; -0.00948974 -0.0644691 0.0])
dAA = TransformUtils.so3([0.0 -0.165734 0.0495783; 0.165734 0.0 -0.0846938; -0.0495783 0.0846938 0.0])
dAA = TransformUtils.so3([0.0 -0.0417063 -0.0860596; 0.0417063 0.0 0.164028; 0.0860596 -0.164028 0.0])
dAA = TransformUtils.Quaternion(0.9986844123988575,[-0.0485776,-0.0151159,-0.00641683])
dAA = TransformUtils.SO3([0.998755 -0.0293209 0.0403465; 0.0354433 0.986393 -0.16054; -0.0350904 0.161771 0.986204])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.957768 0.1223 0.260236; -0.0829696 0.984088 -0.157121; -0.275311 0.128894 0.952675]),[-0.0805435,-0.757543,-0.0352132])
xj = TransformUtils.SE3(TransformUtils.SO3([0.854696 -0.409481 0.319092; 0.356393 0.909765 0.212866; -0.377464 -0.0682141 0.923509]),[-0.104783,0.1972,-0.122399])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.892951 -0.448891 0.0337029; 0.406598 0.836417 0.367539; -0.193175 -0.314491 0.929397]),[-0.0784271,0.925349,-0.239378])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
