>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-117-generic #164-Ubuntu SMP Fri Apr 7 11:05:26 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (559.3828125 MB free)
Uptime: 44318.0 sec
Load Avg:  0.96875  1.001953125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2598171 s         62 s     225044 s    1089761 s         72 s
#2  3500 MHz     890898 s       8124 s     105900 s    3319510 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.10.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.24.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.165832 0.0689054; -0.165832 0.0 0.198875; -0.0689054 -0.198875 0.0])
dAA = TransformUtils.so3([0.0 0.224121 -0.0498891; -0.224121 0.0 -0.193227; 0.0498891 0.193227 0.0])
dAA = TransformUtils.so3([0.0 0.0920392 -0.139293; -0.0920392 0.0 0.105049; 0.139293 -0.105049 0.0])
dAA = TransformUtils.Quaternion(0.991790713089721,[-0.120727,0.0411453,0.00913002])
dAA = TransformUtils.SO3([0.994809 0.0800359 0.0628434; -0.0761057 0.995131 -0.0626243; -0.0675496 0.0575164 0.996057])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.909095 0.414802 0.038555; -0.416547 0.90377 0.0984289; 0.00598356 -0.105541 0.994397]),[-1.66819,1.31201,0.728771])
xj = TransformUtils.SE3(TransformUtils.SO3([0.975833 0.147762 -0.160985; -0.15394 0.987724 -0.0265355; 0.155087 0.0506763 0.9866]),[0.331199,-1.06475,-1.34427])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.952176 -0.2768 -0.129394; 0.249282 0.948619 -0.194886; 0.17669 0.15331 0.972254]),[2.79526,-1.09991,-2.21828])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
