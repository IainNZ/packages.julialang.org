>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (899.95703125 MB free)
Uptime: 43142.0 sec
Load Avg:  1.14892578125  1.083984375  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2619157 s        955 s     248088 s     912877 s         97 s
#2  3499 MHz     787642 s       7027 s     111644 s    3296080 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.9.0
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.23.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0947289 -0.0775308; -0.0947289 0.0 0.0224221; 0.0775308 -0.0224221 0.0])
dAA = TransformUtils.so3([0.0 -0.0764607 0.0673236; 0.0764607 0.0 0.0385194; -0.0673236 -0.0385194 0.0])
dAA = TransformUtils.so3([0.0 -0.0967074 -0.038791; 0.0967074 0.0 0.250078; 0.038791 -0.250078 0.0])
dAA = TransformUtils.Quaternion(0.9956602477722512,[-0.037382,0.0768619,0.0368172])
dAA = TransformUtils.SO3([0.994778 0.0743989 -0.0698734; -0.0757039 0.996998 -0.0162149; 0.0684573 0.0214199 0.997424])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.981738 -0.186934 0.0352904; 0.189567 0.976851 -0.0991327; -0.0159421 0.104012 0.994448]),[-0.0318244,-1.25755,-1.07179])
xj = TransformUtils.SE3(TransformUtils.SO3([0.94647 -0.287952 -0.145871; 0.310037 0.936732 0.162514; 0.0898461 -0.19904 0.975864]),[-0.16574,-0.201232,-0.0485081])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.986526 -0.101947 -0.127958; 0.135277 0.948173 0.287522; 0.0920138 -0.300958 0.949188]),[0.0524605,1.16333,0.908162])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
