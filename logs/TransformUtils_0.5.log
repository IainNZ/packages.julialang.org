>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.6
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.2
Commit f4c6c9d (2017-05-06 16:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-121-generic #170-Ubuntu SMP Wed Jun 14 09:04:33 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (794.8203125 MB free)
Uptime: 48632.0 sec
Load Avg:  1.11376953125  1.0419921875  1.0126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    3106955 s       2876 s     255465 s     923339 s         86 s
#2  3500 MHz    1036272 s       3729 s     122642 s    3589119 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-8-openjdk-amd64
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.12.0
 - TransformUtils                0.0.6
1 additional packages:
 - Compat                        0.26.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.140985 -0.190429; -0.140985 0.0 -0.0774199; 0.190429 0.0774199 0.0])
dAA = TransformUtils.so3([0.0 0.0539052 -0.0670289; -0.0539052 0.0 -0.135547; 0.0670289 0.135547 0.0])
dAA = TransformUtils.so3([0.0 -0.00713337 0.132561; 0.00713337 0.0 0.0561048; -0.132561 -0.0561048 0.0])
dAA = TransformUtils.Quaternion(0.997729449966402,[0.0622817,-0.0256304,0.000145813])
dAA = TransformUtils.SO3([0.992833 0.0775274 -0.0909489; -0.0874075 0.990056 -0.110222; 0.0814994 0.117381 0.989737])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.998718 0.0357293 -0.0358678; -0.0213052 0.939298 0.342441; 0.0459257 -0.341238 0.938854]),[1.1673,-0.516168,-0.292895])
xj = TransformUtils.SE3(TransformUtils.SO3([0.983005 -0.107317 -0.148943; 0.145388 0.950474 0.274704; 0.112086 -0.29169 0.949923]),[-0.00970478,-0.978841,-1.16622])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.983795 -0.140825 -0.110978; 0.133437 0.988479 -0.071442; 0.119761 0.0554756 0.991252]),[-1.20575,-0.17863,-0.936147])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
